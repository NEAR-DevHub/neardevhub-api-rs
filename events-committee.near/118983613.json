[
  {
    "id": "4764786185",
    "receipt_id": "9s5sBT82iwVc9AAHsVhAeV4VQySTGv2tApd1dDki16Bx",
    "predecessor_account_id": "alae.near",
    "receiver_account_id": "events-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2n5fJBtynJUpbvCy6cCChb6HaogdEDefFjLk14RB2f1v",
      "block_height": 119117707,
      "block_timestamp": 1715946400255493000
    },
    "receipt_outcome": {
      "gas_burnt": 4970618782787,
      "tokens_burnt": 497061878278700000000,
      "executor_account_id": "events-committee.near",
      "status": true
    },
    "transaction_hash": "4ZPqiTdLAThzuc5kywfgFYNvw4Z8GYmNkvKLy3hXVMnW",
    "included_in_block_hash": "9FZs69mwU4nB5TBKGvTR1PVJKVdo7zPvspZ3FneQvMxW",
    "block_timestamp": "1715946399005094768",
    "block": {
      "block_height": 119117706
    },
    "receipt_conversion_tokens_burnt": "30835687922200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 497061878278700000000,
        "args": "{\"id\": 5, \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 881212229670400000000
    }
  },
  {
    "id": "4764786511",
    "receipt_id": "Bk34hGsrwNBCW4BJrzd7QGpiVMnJgckzhJLRrDjn9epB",
    "predecessor_account_id": "events-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2ae76uUU5aPQssJT3Kdz17LZLBuA7NpiGTaqGEmdRGzF",
      "block_height": 119117708,
      "block_timestamp": 1715946401636138000
    },
    "receipt_outcome": {
      "gas_burnt": 3533146634695,
      "tokens_burnt": 353314663469500000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "4ZPqiTdLAThzuc5kywfgFYNvw4Z8GYmNkvKLy3hXVMnW",
    "included_in_block_hash": "9FZs69mwU4nB5TBKGvTR1PVJKVdo7zPvspZ3FneQvMxW",
    "block_timestamp": "1715946399005094768",
    "block": {
      "block_height": 119117706
    },
    "receipt_conversion_tokens_burnt": "30835687922200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 353314663469500000000,
        "args": "{\"data\": {\"events-committee.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"alae.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":5,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"alae.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 881212229670400000000
    }
  },
  {
    "id": "4767374783",
    "receipt_id": "AuCP14b5LX6rQeFzpkNV5veoxjXUi3n4sxRtUdma1kYb",
    "predecessor_account_id": "yarotska.near",
    "receiver_account_id": "events-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "D5Pbn1oeFtaH4a1JU2Q84cEUTkwD6VaN379GfLfo8kPr",
      "block_height": 119123852,
      "block_timestamp": 1715953708423731200
    },
    "receipt_outcome": {
      "gas_burnt": 3794479996525,
      "tokens_burnt": 379447999652500000000,
      "executor_account_id": "events-committee.near",
      "status": true
    },
    "transaction_hash": "3tZPZpWMJwZRL6BExy9DxSYxGAiYK9nfJBDdwu3ijCnP",
    "included_in_block_hash": "6SAVYGqZDdyWDTeGQQcd2QaNduKty7p1wfdEXxkZFZEi",
    "block_timestamp": "1715953707095161378",
    "block": {
      "block_height": 119123851
    },
    "receipt_conversion_tokens_burnt": "30836135109000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 379447999652500000000,
        "args": "{\"id\": 3, \"timeline\": {\"status\": \"APPROVED\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 762249981455000000000
    }
  },
  {
    "id": "4767377949",
    "receipt_id": "3oNo5oahneQJEbxqUMrMAjHC5t6aj4hs9fDKP81FyQwf",
    "predecessor_account_id": "events-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "396cjL6d59USqbvDRr2Zyqxr9eBbnaBSYzDfUwMPyVZK",
      "block_height": 119123855,
      "block_timestamp": 1715953712460733400
    },
    "receipt_outcome": {
      "gas_burnt": 3519658466935,
      "tokens_burnt": 351965846693500000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "3tZPZpWMJwZRL6BExy9DxSYxGAiYK9nfJBDdwu3ijCnP",
    "included_in_block_hash": "6SAVYGqZDdyWDTeGQQcd2QaNduKty7p1wfdEXxkZFZEi",
    "block_timestamp": "1715953707095161378",
    "block": {
      "block_height": 119123851
    },
    "receipt_conversion_tokens_burnt": "30836135109000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 351965846693500000000,
        "args": "{\"data\": {\"events-committee.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"nneoma.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":3,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yarotska.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 762249981455000000000
    }
  },
  {
    "id": "4767493157",
    "receipt_id": "77KAC94uZNqQz12fAabrQF7f5xoCsbpJvgNzGA1Cm3ug",
    "predecessor_account_id": "yarotska.near",
    "receiver_account_id": "events-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6Esw1mEg1Mm8B1UqEnN5TXVh1nvV8D6zihQzBQTkSbff",
      "block_height": 119124087,
      "block_timestamp": 1715953991028866600
    },
    "receipt_outcome": {
      "gas_burnt": 4069879911829,
      "tokens_burnt": 406987991182900000000,
      "executor_account_id": "events-committee.near",
      "status": true
    },
    "transaction_hash": "CgeVzyTJE1fgeRM6nBpe88xPZRQzH1jf5RaHLZHYx9pm",
    "included_in_block_hash": "7kxHeRsZADCrtgqdX8WLriGyMcoK4MAtkonVm8ZpUpkw",
    "block_timestamp": "1715953989983698706",
    "block": {
      "block_height": 119124086
    },
    "receipt_conversion_tokens_burnt": "30857600075400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 406987991182900000000,
        "args": "{\"id\": 3, \"timeline\": {\"status\": \"PAYMENT_PROCESSING\", \"kyc_verified\": true, \"test_transaction_sent\": true, \"sponsor_requested_review\": false, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 789832232820200000000
    }
  },
  {
    "id": "4767493602",
    "receipt_id": "CHu67S6VHQHp3iTFc5We9Qgr6rqSmDU9FnWzQNKEdt9Y",
    "predecessor_account_id": "events-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3N4XXaNfc1ZRM5AzUePhcDJmZU44mQYkjDJTojyTUU2E",
      "block_height": 119124088,
      "block_timestamp": 1715953992016094700
    },
    "receipt_outcome": {
      "gas_burnt": 3519866415619,
      "tokens_burnt": 351986641561900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "CgeVzyTJE1fgeRM6nBpe88xPZRQzH1jf5RaHLZHYx9pm",
    "included_in_block_hash": "7kxHeRsZADCrtgqdX8WLriGyMcoK4MAtkonVm8ZpUpkw",
    "block_timestamp": "1715953989983698706",
    "block": {
      "block_height": 119124086
    },
    "receipt_conversion_tokens_burnt": "30857600075400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 351986641561900000000,
        "args": "{\"data\": {\"events-committee.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"nneoma.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":3,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yarotska.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 789832232820200000000
    }
  },
  {
    "id": "4767506958",
    "receipt_id": "AGhG6qT7HbXi2Cz6WCD2UriV7a43oxBhutEBxSyGAMTH",
    "predecessor_account_id": "yarotska.near",
    "receiver_account_id": "events-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "GaMAPCHQh1K3kZGKTQPrjC6oQTVVmoHqR3frdjZqzaxx",
      "block_height": 119124118,
      "block_timestamp": 1715954027107945000
    },
    "receipt_outcome": {
      "gas_burnt": 6018462620205,
      "tokens_burnt": 601846262020500000000,
      "executor_account_id": "events-committee.near",
      "status": true
    },
    "transaction_hash": "DsfWPnYCnRqAxYh3cwZSaKaVRmgarkJYzqkXZXqiJSnv",
    "included_in_block_hash": "A6YyCCJ2g82BxdmvmDBP3bcFdeooZ4F6hPrzP1kiiqTA",
    "block_timestamp": "1715954025743887104",
    "block": {
      "block_height": 119124117
    },
    "receipt_conversion_tokens_burnt": "30836358702400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 601846262020500000000,
        "args": "{\"id\": 4, \"timeline\": {\"status\": \"CANCELLED\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 984648102728400000000
    }
  },
  {
    "id": "4767511007",
    "receipt_id": "Ffi7XRP4Z4VptF8QdjX96B5Vh13JsxZUccYneWXE5hC2",
    "predecessor_account_id": "events-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "ADX4hzk6MaQzjC4EcDve23Sm9TtQP6E6dAx7Y19SAfvp",
      "block_height": 119124121,
      "block_timestamp": 1715954030917401600
    },
    "receipt_outcome": {
      "gas_burnt": 3519654820055,
      "tokens_burnt": 351965482005500000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "DsfWPnYCnRqAxYh3cwZSaKaVRmgarkJYzqkXZXqiJSnv",
    "included_in_block_hash": "A6YyCCJ2g82BxdmvmDBP3bcFdeooZ4F6hPrzP1kiiqTA",
    "block_timestamp": "1715954025743887104",
    "block": {
      "block_height": 119124117
    },
    "receipt_conversion_tokens_burnt": "30836358702400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 351965482005500000000,
        "args": "{\"data\": {\"events-committee.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"alae.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":4,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yarotska.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 984648102728400000000
    }
  },
  {
    "id": "4767546159",
    "receipt_id": "9fNQeK8kGLwnP3qDgJQ85Dg3D6jiHd2VoFntu7xPPMmp",
    "predecessor_account_id": "yarotska.near",
    "receiver_account_id": "events-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "Bn7pgnef8XxVVBd9NCpE4NUVJq6FeNT4PZqpRHTvKFBh",
      "block_height": 119124196,
      "block_timestamp": 1715954117567121400
    },
    "receipt_outcome": {
      "gas_burnt": 6091200469508,
      "tokens_burnt": 609120046950800000000,
      "executor_account_id": "events-committee.near",
      "status": true
    },
    "transaction_hash": "995xqPVQAo8mobJp4HPZHbcDcsFyqsDZMuvLmWHpksPP",
    "included_in_block_hash": "4autVD2vJpNTR51pEH3pvKjYmMFYn2Nhthorp31C61ju",
    "block_timestamp": "1715954116658200800",
    "block": {
      "block_height": 119124195
    },
    "receipt_conversion_tokens_burnt": "32496986884200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal",
        "deposit": 0,
        "fee": 609120046950800000000,
        "args": "{\"id\": 5, \"body\": {\"name\": \"AI CHAIN NEAR TUNISIA HACKATHON [Hackbox - 2024] | #PoweredByHackbox\", \"summary\": \"#PoweredByHackbox: NEAR Tunisia is proud to organise 2 weeks hacking session online and 1 day in ELACO Coworking Space for those who want to team up,  developing innovative AI solutions on Web3, get familiar with NEAR, build a prototype for their project, pitch it, and get a chance to win.\", \"category\": \"Bounty\", \"timeline\": {\"status\": \"APPROVED\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"supervisor\": \"yarotska.near\", \"description\": \"AI CHAIN NEAR TUNISIA HACKATHON [Hackbox - 2024] | #PoweredByHackbox\\\\\\\\nRequested amount: $1900\\\\\\\\n\\\\\\\\nI am pleased to confirm that after applying through the official Hackbox intake form and undergoing the screening process by the Hackbox Team @yarotska.near and @nneoma.near, our team has been accepted into Hackbox MAI 2024\\\\\\\\n\\\\\\\\n**1. Hackathon Overview\\\\\\\\n\\\\\\\\nTitle: AI CHAIN NEAR HACKATHON Tunisia\\\\\\\\nDate & Format: \\\\\\\\nOnline May 19th - 31st\\\\\\\\nIn-Person June 1st \\\\\\\\nLocation: Elaco coworking Space Tunisia\\\\\\\\n\\\\\\\\n\\\\\\\\n**2. Organizing Team\\\\\\\\n\\\\\\\\nAmira Nasri: CFO of Elaco Coworking Space/ Web3 Developer\\\\\\\\nMed Habib Hermi: Graphic Designer/ Vice president IEEE club\\\\\\\\nPartnerships: Elaco Coworking Space, IEEE ISTIC\\\\\\\\n\\\\\\\\n**3. Event Objectives\\\\\\\\n\\\\\\\\nGoals:\\\\\\\\n\\\\\\\\u{27a2} Foster a sense of community among developers, entrepreneurs, and blockchain enthusiasts interested in AI and NEAR blockchain on Tunisia and north Africa.\\\\\\\\n\\\\\\\\u{27a2} Provide participants with the opportunity to enhance their skills in blockchain development, AI integration, and smart contract deployment.\\\\\\\\n\\\\\\\\u{27a2} Contribute to the growth and expansion of the NEAR ecosystem by attracting new developers and projects to the platform.\\\\\\\\n\\\\\\\\u{27a2} Creation of new solutions that address real-world problems in areas such as finance, healthcare, supply chain, and more, using AI and NEAR blockchain.\\\\\\\\n\\\\\\\\u{27a2} Networking Opportunities.\\\\\\\\n\\\\\\\\u{27a2} Development of seed projects with the potential for further funding, incubation, or commercialization.\\\\\\\\n\\\\\\\\nTarget Audience:\\\\\\\\nDevelopers, Blockchain Enthusiasts, AI Enthusiasts, Students, Entrepreneurs, Tech Startups, Investors, funding organizations interested in supporting innovative projects in the blockchain and AI space, Academic Researchers\\\\\\\\n\\\\\\\\n**4. Challenges & Themes\\\\\\\\n\\\\\\\\nDetails: Participants can choose from a variety of challenges that combine AI and NEAR blockchain, including but not limited to:\\\\\\\\no AI for Smart Contracts\\\\\\\\no Decentralized AI Marketplaces\\\\\\\\no AI-Powered Blockchain Analytics\\\\\\\\no AI-Based Identity Verification\\\\\\\\no AI-Driven Governance\\\\\\\\no AI for Tokenomics\\\\\\\\no AI-Powered Fraud Detection\\\\\\\\no AI for Supply Chain Optimization\\\\\\\\no AI-Driven Social Impact\\\\\\\\no AI-Based NFT Marketplaces\\\\\\\\no AI-Powered Decentralized Exchanges\\\\\\\\n\\\\\\\\n**5. Schedule and Activities\\\\\\\\n\\\\\\\\nDuration:\\\\\\\\n1 day at Elaco coworking Space, 2 weeks online\\\\\\\\nFrom 19 /04/2024 To 01/05/2024\\\\\\\\nKey Activities:\\\\\\\\n12/05/2024: Workshop 1 online:\\\\\\\\no Introduction to NEAR Protocol and AI Integration\\\\\\\\n19/05/2024: Workshop 2 online:\\\\\\\\no Building Smart Contracts with AI\\\\\\\\no Team Formation and Idea Pitching\\\\\\\\no Launch Hack Session\\\\\\\\n01/06/2024: Mini Hackathon at Elaco Coworking Space\\\\\\\\no 8:00 am - 9:00 am: Registration and Check-in\\\\\\\\no 9:00 am - 9:30 am: Welcome Address and Event Overview\\\\\\\\no 9:30 am - 10:00 am: Keynote Speech on AI and Blockchain\\\\\\\\no 10:00 am - 11:00 am: Idea Pitching\\\\\\\\no 11:00 am - 12:00 pm: Lunch Break\\\\\\\\no 12:00 pm - 1:00 pm: Mentoring Sessions\\\\\\\\no 1:00 pm - 4:00 pm: Hacking Session: Project Development+++++\\\\\\\\no 3:00 pm - 4:00 pm: Submission Deadline\\\\\\\\no 4:00 pm - 5:00 pm: Project Presentations\\\\\\\\no 5:00 pm - 6:00 pm: Judging Session\\\\\\\\no 6:00 pm - 7:00 pm: Awards Ceremony and Closing Remarks\\\\\\\\nActivities:\\\\\\\\no Workshops: Conduct workshops on NEAR Protocol, AI integration, smart contract development, and other relevant topics to help participants learn new skills and tools.\\\\\\\\no Hacking Sessions: Provide dedicated time for participants to work on their projects with support from mentors and experts.\\\\\\\\no Mentoring Sessions: Offer one-on-one mentoring sessions to help participants with project development, problem-solving, and technical guidance.\\\\\\\\no Project Presentations: Allow participants to showcase their projects to a panel of judges and the audience, highlighting the use of AI and NEAR blockchain.\\\\\\\\no Awards Ceremony: Announce the winners of the hackathon and award prizes for the best projects in various categories.\\\\\\\\n\\\\\\\\n**6. KPIs and Impact\\\\\\\\n\\\\\\\\noNumber of Participants: 60 persons\\\\\\\\no Project Submissions: 4 - 8 projects\\\\\\\\no Social Media Engagement: Track social media metrics such as likes, shares, and comments to gauge online engagement and reach.\\\\\\\\no Feedback and Surveys: 60 feedback from participants, judges, sponsors, and partners through surveys to identify areas for improvement and measure satisfaction levels.\\\\\\\\n\\\\\\\\nCommunity Impact:\\\\\\\\no The hackathon will foster collaboration and knowledge sharing among developers, AI enthusiasts, and blockchain experts, strengthening the local and global NEAR communities.\\\\\\\\no By encouraging the use of NEAR Protocol for AI applications, the hackathon will contribute to the growth and expansion of the NEAR ecosystem, attracting new developers and innovative projects to the platform.\\\\\\\\n\\\\\\\\n**Budget Breakdown\\\\\\\\n\\\\\\\\nITEM\\\\\\\\t                             QTY            \\\\\\\\tCOST($)\\\\\\\\t                     COST ($)\\\\\\\\nSeating + Tables           \\\\\\\\t  30\\\\\\\\t                      $5                            $150\\\\\\\\nMerchandise & Swag\\\\\\\\t    60\\\\\\\\t                    $10                            $600\\\\\\\\nFood & Drinks \\\\\\\\t              60\\\\\\\\t\\\\\\\\t                  $17                           $1020\\\\\\\\nBranding\\\\\\\\t                         1\\\\\\\\t\\\\\\\\t                    $30                             $30\\\\\\\\nMarketing & Promo     \\\\\\\\t   1\\\\\\\\t                    $100                          $100\\\\\\\\nTOTAL\\\\\\\\t\\\\\\\\t                                                   $1900\\\\\\\\n\\\\\\\\nProposal 1 Budget : https://docs.google.com/spreadsheets/d/11RvGBKhup20UDpFWecmH9T_MSyLW6P_CRzu74bg3CG4/edit?usp=sharing\\\\\\\\n\\\\\\\\n\\\\\\\\n**7. Bounties and Prizes\\\\\\\\n\\\\\\\\n\\\\\\\\u{2022} First Place Prize: 500 USDC\\\\\\\\n\\\\\\\\u{2022} Second Place Prize: 350 USDC\\\\\\\\n\\\\\\\\u{2022} Third Place Prize: 250 USDC\\\\\\\\n\\\\\\\\n**8. Judging Criteria\\\\\\\\n\\\\\\\\nEvaluation Process:\\\\\\\\n- Quality of the Idea: Includes creativity and originality of the idea.\\\\\\\\n- Implementation of the Idea: Includes how well the idea was executed by the developer.\\\\\\\\n- Usability (User Experience and Design): Is your project user-friendly? Does it have a clean and intuitive interface? A great project is not only about what it does, but also how it does it. We appreciate good design and attention to detail.\\\\\\\\n\\\\\\\\n**9. Marketing and Promotion\\\\\\\\n\\\\\\\\nPromotion Strategy: Plan for Promoting the Hackathon\\\\\\\\nStart promoting the hackathon at least 2-3 weeks before the event date on:\\\\\\\\no Social media ADS.\\\\\\\\no Events and Workshops: Organize workshops and webinars, to generate interestand provide valuable insights into the hackathon themes and technologies.\\\\\\\\no Email Marketing.\\\\\\\\no Ramp up promotion efforts in the weeks leading to the event, focusing on registration deadlines and key announcements.\\\\\\\\no Partnerships: Collaborate with universities, tech companies, and community\\\\\\\\n\\\\\\\\n**10. Contact Information\\\\\\\\n\\\\\\\\nAmira Nasri\\\\\\\\no Telegram: https://t.me/amiranasri\\\\\\\\no Tel: +216 97700648\\\\\\\\no LinkedIn : https://www.linkedin.com/in/amira-nasri-135582112/\", \"linked_proposals\": [4], \"receiver_account\": \"alae.near\", \"requested_sponsor\": \"events-committee.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"1900\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"labels\": [\"Hackbox\", \"Hackathon\"]}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 999098305618900000000
    }
  },
  {
    "id": "4767546477",
    "receipt_id": "5381yYyjNB7bz4A8H8X8qcXMxgav3xGxmq83Urmmk3BD",
    "predecessor_account_id": "events-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "HtcjqN8JCMPm3YLr9Mv3dBWv1KknjWxR42r7bEBqdMb8",
      "block_height": 119124197,
      "block_timestamp": 1715954118505435400
    },
    "receipt_outcome": {
      "gas_burnt": 3574812717839,
      "tokens_burnt": 357481271783900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "995xqPVQAo8mobJp4HPZHbcDcsFyqsDZMuvLmWHpksPP",
    "included_in_block_hash": "4autVD2vJpNTR51pEH3pvKjYmMFYn2Nhthorp31C61ju",
    "block_timestamp": "1715954116658200800",
    "block": {
      "block_height": 119124195
    },
    "receipt_conversion_tokens_burnt": "32496986884200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 357481271783900000000,
        "args": "{\"data\": {\"events-committee.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"alae.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":5,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yarotska.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 999098305618900000000
    }
  },
  {
    "id": "4935163800",
    "receipt_id": "2NLiyHcqYEQ1gwXEQxsKmR6VDGqFJiBp5ZAgDhPv1wKM",
    "predecessor_account_id": "yarotska.near",
    "receiver_account_id": "events-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "AJZChZvq95QGAqFQaYfAvczwXcUJUC5yzPVQnyvEjPCB",
      "block_height": 119563980,
      "block_timestamp": 1716468579432900900
    },
    "receipt_outcome": {
      "gas_burnt": 8744032718651,
      "tokens_burnt": 874403271865100000000,
      "executor_account_id": "events-committee.near",
      "status": true
    },
    "transaction_hash": "3cU85qPVvGFZCEoWWsyYx24QjymQcHG3rDvnmdZ3GwNt",
    "included_in_block_hash": "AGfjDhJQa5JgjT9L4YiFLNYGFzSqJbz35qoK2G3VnFuP",
    "block_timestamp": "1716468578480277708",
    "block": {
      "block_height": 119563979
    },
    "receipt_conversion_tokens_burnt": "30881077382400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 874403271865100000000,
        "args": "{\"id\": 2, \"timeline\": {\"status\": \"FUNDED\", \"payouts\": [\"https://nearblocks.io/txns/8D5Hph5KhfAvtDkaKkKGr8YzzcxMcJPEEHYf9QRmPh5S\"], \"kyc_verified\": true, \"test_transaction_sent\": true, \"sponsor_requested_review\": true, \"trustees_released_payment\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": true}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.2545494193434e+21
    }
  },
  {
    "id": "4935164151",
    "receipt_id": "Abjo1XDQZJFinH9LE6pNkVKjtVWNpdaEfQpKrTx1gzaw",
    "predecessor_account_id": "events-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9EdcALKMR8pd7NK2cj3x551hQ4ri8y4Gkif52W9Lfnnn",
      "block_height": 119563981,
      "block_timestamp": 1716468580575792600
    },
    "receipt_outcome": {
      "gas_burnt": 3492650700959,
      "tokens_burnt": 349265070095900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "3cU85qPVvGFZCEoWWsyYx24QjymQcHG3rDvnmdZ3GwNt",
    "included_in_block_hash": "AGfjDhJQa5JgjT9L4YiFLNYGFzSqJbz35qoK2G3VnFuP",
    "block_timestamp": "1716468578480277708",
    "block": {
      "block_height": 119563979
    },
    "receipt_conversion_tokens_burnt": "30881077382400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349265070095900000000,
        "args": "{\"data\": {\"events-committee.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"toronto-sc.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":2,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yarotska.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.2545494193434e+21
    }
  },
  {
    "id": "4935179027",
    "receipt_id": "2MLkgjJ1kK1j2zvfC4oEDH6k8ULX2E8GR13sAfawSgad",
    "predecessor_account_id": "yarotska.near",
    "receiver_account_id": "events-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3Rj3pUeZS9qwYRAGqDzaxsuBBg31vJyQFQhYfvYN5xSc",
      "block_height": 119564037,
      "block_timestamp": 1716468648085353000
    },
    "receipt_outcome": {
      "gas_burnt": 5853629815885,
      "tokens_burnt": 585362981588500000000,
      "executor_account_id": "events-committee.near",
      "status": true
    },
    "transaction_hash": "JCx21po43Z4CjTSHWWNZo3tGHToCK7g4wGKyLqLKi1cJ",
    "included_in_block_hash": "BpB6A85mCW2bFaWHogLg113r5tPd2FLPxebJ3Cg85jqd",
    "block_timestamp": "1716468646881626651",
    "block": {
      "block_height": 119564036
    },
    "receipt_conversion_tokens_burnt": "30881300975800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 585362981588500000000,
        "args": "{\"id\": 1, \"timeline\": {\"status\": \"FUNDED\", \"payouts\": [\"https://nearblocks.io/txns/5LH16b9idgKyctU5QsELrtp7pfcWxSXrK3pWZGK563cM\"], \"kyc_verified\": true, \"test_transaction_sent\": true, \"sponsor_requested_review\": true, \"trustees_released_payment\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 965517133256600000000
    }
  },
  {
    "id": "4935179368",
    "receipt_id": "24Gy94iSJFWwnGiZGz1iWsf5cgbpkhzx535dqEoRDhdT",
    "predecessor_account_id": "events-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5Jdon9qBdLiwMW4SZCz4iFeHZ6cHTpCEkRn3Un6MrWRr",
      "block_height": 119564038,
      "block_timestamp": 1716468649136495900
    },
    "receipt_outcome": {
      "gas_burnt": 3492728506923,
      "tokens_burnt": 349272850692300000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "JCx21po43Z4CjTSHWWNZo3tGHToCK7g4wGKyLqLKi1cJ",
    "included_in_block_hash": "BpB6A85mCW2bFaWHogLg113r5tPd2FLPxebJ3Cg85jqd",
    "block_timestamp": "1716468646881626651",
    "block": {
      "block_height": 119564036
    },
    "receipt_conversion_tokens_burnt": "30881300975800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349272850692300000000,
        "args": "{\"data\": {\"events-committee.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yarotska.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yarotska.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 965517133256600000000
    }
  },
  {
    "id": "4935266296",
    "receipt_id": "6EnvhC5Hb8j9boFJBfczqcd2heFsW3UaazgRGpYTXdB2",
    "predecessor_account_id": "yarotska.near",
    "receiver_account_id": "events-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "FbQLbJXmHPjDTqEnr38yTqTATK1fKYfUXka5eJ85mFzz",
      "block_height": 119564296,
      "block_timestamp": 1716468946929192400
    },
    "receipt_outcome": {
      "gas_burnt": 4269365862253,
      "tokens_burnt": 426936586225300000000,
      "executor_account_id": "events-committee.near",
      "status": true
    },
    "transaction_hash": "6NSKyH8UZoeyc2Vssg9dxAGrnJg1pNNmPLRRWR8gCVLD",
    "included_in_block_hash": "HVQ3dKkDenHqxy9HQEVYULWTRUbQAc828ZziKFeJXc42",
    "block_timestamp": "1716468946183807436",
    "block": {
      "block_height": 119564295
    },
    "receipt_conversion_tokens_burnt": "30881300975800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 426936586225300000000,
        "args": "{\"id\": 0, \"timeline\": {\"status\": \"FUNDED\", \"payouts\": [\"https://nearblocks.io/txns/5VPW9Les56Qwx9U5XH9sVdxQuBiTXpryKeRnHm7PYffj\"], \"kyc_verified\": true, \"test_transaction_sent\": true, \"sponsor_requested_review\": true, \"trustees_released_payment\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 807093048563000000000
    }
  },
  {
    "id": "4935266689",
    "receipt_id": "AUqHoM9EgUGQKdfZEmZE88CCczZtMFYYgtknGGrVCVua",
    "predecessor_account_id": "events-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "Bmk4wyTszKxKw86AqXwTwDSHd1xAtMgck5X38pQLywCM",
      "block_height": 119564297,
      "block_timestamp": 1716468948251568000
    },
    "receipt_outcome": {
      "gas_burnt": 3492751613619,
      "tokens_burnt": 349275161361900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "6NSKyH8UZoeyc2Vssg9dxAGrnJg1pNNmPLRRWR8gCVLD",
    "included_in_block_hash": "HVQ3dKkDenHqxy9HQEVYULWTRUbQAc828ZziKFeJXc42",
    "block_timestamp": "1716468946183807436",
    "block": {
      "block_height": 119564295
    },
    "receipt_conversion_tokens_burnt": "30881300975800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349275161361900000000,
        "args": "{\"data\": {\"events-committee.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yarotska.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yarotska.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 807093048563000000000
    }
  },
  {
    "id": "4962884911",
    "receipt_id": "GGs5SaE9NbyvkwMFS98Nur4C3t1wH6b71krGVfAzThAh",
    "predecessor_account_id": "events-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2eLZyrKgH8auvH8cxLcZyC7gW4ZKeFNpPPJsLDQuX1Pz",
      "block_height": 119632243,
      "block_timestamp": 1716549856490471400
    },
    "receipt_outcome": {
      "gas_burnt": 9466377451376,
      "tokens_burnt": 946637745137600000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "F8dqy9DxGUmfWfoPdZkLBHgySrgFANHhUqRpa5W72hRA",
    "included_in_block_hash": "D4u24Lc3Bzqc629Hb6rWAazyBNcrUEjoAVCNh4NMz7VW",
    "block_timestamp": "1716549855413676140",
    "block": {
      "block_height": 119632242
    },
    "receipt_conversion_tokens_burnt": "34689543764600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 7.66e+21,
        "fee": 946637745137600000000,
        "args": "{\"data\": {\"events-committee.near\": {\"widget\": {\"devhub.feature.post-search.by-author\": {\"\": \"const { getAllAuthors } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"events-committee.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\",\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!getAllAuthors) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst selectedAuthors = props.author ? [{ name: props.author }] : [];\\\\\\\\n\\\\\\\\nconst authors = getAllAuthors();\\\\\\\\n\\\\\\\\nif (authors === null) {\\\\\\\\n  return <div>Loading ...</div>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst onChange = (selectedAuthors) =>\\\\\\\\n  props.onAuthorSearch(selectedAuthors[0]?.name);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Typeahead\\\\\\\\n    clearButton\\\\\\\\n    id=\\\\\\\\\\\\\\\"basic-typeahead-single\\\\\\\\\\\\\\\"\\\\\\\\n    labelKey=\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\"\\\\\\\\n    options={authors.map((author) => ({ name: author }))}\\\\\\\\n    placeholder=\\\\\\\\\\\\\\\"Search by author\\\\\\\\\\\\\\\"\\\\\\\\n    selected={selectedAuthors}\\\\\\\\n    {...{ onChange }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.templates.AppLayout\": {\"\": \"const data = fetch(`https://httpbin.org/headers`);\\\\\\\\nconst gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n// we need fixed positioning for near social and not for org\\\\\\\\nconst ParentContainer = gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\")\\\\\\\\n  ? styled.div`\\\\\\\\n      width: 100%;\\\\\\\\n    `\\\\\\\\n  : styled.div`\\\\\\\\n      position: fixed;\\\\\\\\n      inset: 73px 0px 0px;\\\\\\\\n      width: 100%;\\\\\\\\n      overflow-y: scroll;\\\\\\\\n    `;\\\\\\\\n\\\\\\\\nconst Theme = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  padding-top: calc(-1 * var(--body-top-padding));\\\\\\\\n  background: #f4f4f4;\\\\\\\\n  .container-xl {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ContentContainer = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst AppHeader = ({ page }) => (\\\\\\\\n  <Widget\\\\\\\\n    src=\\\\\\\\\\\\\\\"events-committee.near/widget/devhub.components.organism.Navbar\\\\\\\\\\\\\\\"\\\\\\\\n    props={{\\\\\\\\n      page: page,\\\\\\\\n      ...props,\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Footer = (props) => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"events-committee.near/widget/devhub.components.organism.NewsLetter\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        ...props,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction AppLayout({ page, children }) {\\\\\\\\n  return (\\\\\\\\n    <ParentContainer>\\\\\\\\n      <Theme>\\\\\\\\n        <Container>\\\\\\\\n          <AppHeader page={page} />\\\\\\\\n          <ContentContainer className=\\\\\\\\\\\\\\\"container-xl\\\\\\\\\\\\\\\">\\\\\\\\n            {children}\\\\\\\\n          </ContentContainer>\\\\\\\\n          {/* <Footer page={page} /> */}\\\\\\\\n        </Container>\\\\\\\\n      </Theme>\\\\\\\\n    </ParentContainer>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn { AppLayout };\\\\\\\\n\"}, \"devhub.entity.proposal.CommentsAndLogs\": {\"\": \"const snapshotHistory = props.snapshotHistory;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  .log-line {\\\\\\\\n    position: absolute;\\\\\\\\n    left: 7%;\\\\\\\\n    top: -30px;\\\\\\\\n    bottom: 0;\\\\\\\\n    z-index: 1;\\\\\\\\n    width: 1px;\\\\\\\\n    background-color: var(--bs-border-color);\\\\\\\\n    z-index: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .inline-flex {\\\\\\\\n    display: -webkit-inline-box !important;\\\\\\\\n    align-items: center !important;\\\\\\\\n    gap: 0.25rem !important;\\\\\\\\n    margin-right: 2px;\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommentContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// check snapshot history all keys and values for differences\\\\\\\\nfunction getDifferentKeysWithValues(obj1, obj2) {\\\\\\\\n  return Object.keys(obj1)\\\\\\\\n    .filter((key) => {\\\\\\\\n      if (key !== \\\\\\\\\\\\\\\"editor_id\\\\\\\\\\\\\\\" && obj2.hasOwnProperty(key)) {\\\\\\\\n        const value1 = obj1[key];\\\\\\\\n        const value2 = obj2[key];\\\\\\\\n        if (Array.isArray(value1) && Array.isArray(value2)) {\\\\\\\\n          const sortedValue1 = [...value1].sort();\\\\\\\\n          const sortedValue2 = [...value2].sort();\\\\\\\\n          return JSON.stringify(sortedValue1) !== JSON.stringify(sortedValue2);\\\\\\\\n        } else if (typeof value1 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" && typeof value2 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else {\\\\\\\\n          return value1 !== value2;\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      return false;\\\\\\\\n    })\\\\\\\\n    .map((key) => ({\\\\\\\\n      key,\\\\\\\\n      originalValue: obj1[key],\\\\\\\\n      modifiedValue: obj2[key],\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  data: null,\\\\\\\\n  socialComments: null,\\\\\\\\n  changedKeysListWithValues: null,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction sortTimelineAndComments() {\\\\\\\\n  const comments = Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", props.item);\\\\\\\\n\\\\\\\\n  if (state.changedKeysListWithValues === null) {\\\\\\\\n    const changedKeysListWithValues = snapshotHistory\\\\\\\\n      .slice(1)\\\\\\\\n      .map((item, index) => {\\\\\\\\n        const startingPoint = snapshotHistory[index]; // Set comparison to the previous item\\\\\\\\n        return {\\\\\\\\n          editorId: item.editor_id,\\\\\\\\n          ...getDifferentKeysWithValues(startingPoint, item),\\\\\\\\n        };\\\\\\\\n      });\\\\\\\\n    State.update({ changedKeysListWithValues });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort comments and timeline logs by time\\\\\\\\n  const snapShotTimeStamp = Array.isArray(snapshotHistory)\\\\\\\\n    ? snapshotHistory.map((i) => {\\\\\\\\n        return { blockHeight: null, timestamp: parseFloat(i.timestamp / 1e6) };\\\\\\\\n      })\\\\\\\\n    : [];\\\\\\\\n\\\\\\\\n  const commentsTimeStampPromise = Array.isArray(comments)\\\\\\\\n    ? Promise.all(\\\\\\\\n        comments.map((item) => {\\\\\\\\n          return asyncFetch(\\\\\\\\n            `https://api.near.social/time?blockHeight=${item.blockHeight}`,\\\\\\\\n          ).then((res) => {\\\\\\\\n            const timeMs = parseFloat(res.body);\\\\\\\\n            return {\\\\\\\\n              blockHeight: item.blockHeight,\\\\\\\\n              timestamp: timeMs,\\\\\\\\n            };\\\\\\\\n          });\\\\\\\\n        }),\\\\\\\\n      ).then((res) => res)\\\\\\\\n    : Promise.resolve([]);\\\\\\\\n\\\\\\\\n  commentsTimeStampPromise.then((commentsTimeStamp) => {\\\\\\\\n    const combinedArray = [...snapShotTimeStamp, ...commentsTimeStamp];\\\\\\\\n    combinedArray.sort((a, b) => a.timestamp - b.timestamp);\\\\\\\\n    State.update({ data: combinedArray, socialComments: comments });\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nsortTimelineAndComments();\\\\\\\\nconst Comment = ({ commentItem }) => {\\\\\\\\n  const { accountId, blockHeight } = commentItem;\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n    blockHeight,\\\\\\\\n  };\\\\\\\\n  const content = JSON.parse(Social.get(item.path, blockHeight) ?? \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n  const link = `https://near.social/events-committee.near/widget/app?page=proposal&id=${props.id}&accountId=${accountId}&blockHeight=${blockHeight}`;\\\\\\\\n  const hightlightComment =\\\\\\\\n    parseInt(props.blockHeight ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") === blockHeight &&\\\\\\\\n    props.accountId === accountId;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div style={{ zIndex: 99, background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"events-committee.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              accountId: accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <CommentContainer\\\\\\\\n          style={{ border: hightlightComment ? \\\\\\\\\\\\\\\"2px solid black\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Header className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <Link href={`/near/widget/ProfilePage?accountId=${accountId}`}>\\\\\\\\n                <span className=\\\\\\\\\\\\\\\"fw-bold text-black\\\\\\\\\\\\\\\">{accountId}</span>\\\\\\\\n              </Link>\\\\\\\\n              commented \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  blockHeight: blockHeight,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/Posts.Menu\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: accountId,\\\\\\\\n                    blockHeight: blockHeight,\\\\\\\\n                    contentPath: `/post/comment`,\\\\\\\\n                    contentType: \\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </Header>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"events-committee.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                text: content.text,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"events-committee.near/widget/devhub.entity.proposal.LikeButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/CopyUrlButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  url: link,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </CommentContainer>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction capitalizeFirstLetter(string) {\\\\\\\\n  const updated = string.replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n  return updated.charAt(0).toUpperCase() + updated.slice(1).toLowerCase();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction parseTimelineKeyAndValue(timeline, originalValue, modifiedValue) {\\\\\\\\n  const oldValue = originalValue[timeline];\\\\\\\\n  const newValue = modifiedValue[timeline];\\\\\\\\n  switch (timeline) {\\\\\\\\n    case \\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        oldValue !== newValue && (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved proposal from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"events-committee.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: oldValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"events-committee.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            stage\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"sponsor_requested_review\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed review</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"reviewer_completed_attestation\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed attestation</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"kyc_verified\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>verified KYC/KYB</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"test_transaction_sent\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        !oldValue &&\\\\\\\\n        newValue && (\\\\\\\\n          <span>\\\\\\\\n            confirmed sponsorship and shared funding steps with recipient\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n    // we don\\\\\\\\\\\\'t have this step for now\\\\\\\\n    // case \\\\\\\\\\\\\\\"request_for_trustees_created\\\\\\\\\\\\\\\":\\\\\\\\n    //   return !oldValue && newValue && <span>successfully created request for trustees</span>;\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccountProfile = ({ accountId }) => {\\\\\\\\n  return (\\\\\\\\n    <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"events-committee.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          accountId: accountId,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n          showAccountId: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </span>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst parseProposalKeyAndValue = (key, modifiedValue, originalValue) => {\\\\\\\\n  switch (key) {\\\\\\\\n    case \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed title</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"summary\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed {key}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed labels to {(modifiedValue ?? []).join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed category from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>updated linked proposals</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_usd_amount\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship amount from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_paid_in_currency\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship currency from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"receiver_account\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed receiver account from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"supervisor\\\\\\\\\\\\\\\":\\\\\\\\n      return !originalValue && modifiedValue ? (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          added\\\\\\\\n          <AccountProfile accountId={modifiedValue} />\\\\\\\\n          as supervisor\\\\\\\\n        </span>\\\\\\\\n      ) : (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed receiver account from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsor\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed sponsor from <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\": {\\\\\\\\n      const modifiedKeys = Object.keys(modifiedValue);\\\\\\\\n      const originalKeys = Object.keys(originalValue);\\\\\\\\n      return modifiedKeys.map((i, index) => {\\\\\\\\n        const text = parseTimelineKeyAndValue(i, originalValue, modifiedValue);\\\\\\\\n        return (\\\\\\\\n          text && (\\\\\\\\n            <span key={index} className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              {text}\\\\\\\\n              {text && \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LogIconContainer = styled.div`\\\\\\\\n  margin-left: 50px;\\\\\\\\n  z-index: 99;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin-left: 10px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Log = ({ timestamp }) => {\\\\\\\\n  const updatedData = useMemo(\\\\\\\\n    () =>\\\\\\\\n      state.changedKeysListWithValues.find((obj) =>\\\\\\\\n        Object.values(obj).some(\\\\\\\\n          (value) =>\\\\\\\\n            value && parseFloat(value.modifiedValue / 1e6) === timestamp,\\\\\\\\n        ),\\\\\\\\n      ),\\\\\\\\n    [state.changedKeysListWithValues, timestamp],\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const editorId = updatedData.editorId;\\\\\\\\n  const valuesArray = Object.values(updatedData ?? {});\\\\\\\\n  // if valuesArray length is 2 that means it only has timestamp and editorId\\\\\\\\n  if (!updatedData || valuesArray.length === 2) {\\\\\\\\n    return <></>;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return valuesArray.map((i, index) => {\\\\\\\\n    if (i.key && i.key !== \\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\\" && i.key !== \\\\\\\\\\\\\\\"proposal_body_version\\\\\\\\\\\\\\\") {\\\\\\\\n      return (\\\\\\\\n        <LogIconContainer\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          key={index}\\\\\\\\n        >\\\\\\\\n          <img\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiffqrxdi4xqu7erf46gdlwuodt6dm6rji2jtixs3iionjvga6rhdi\\\\\\\\\\\\\\\"\\\\\\\\n            height={30}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"flex-1 gap-1 w-100 text-wrap text-muted align-items-center \\\\\\\\\\\\\\\" +\\\\\\\\n              (i.key === \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" &&\\\\\\\\n              Object.keys(i.originalValue ?? {}).length > 1\\\\\\\\n                ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                : \\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n              <AccountProfile accountId={editorId} showAccountId={true} />\\\\\\\\n            </span>\\\\\\\\n            {parseProposalKeyAndValue(i.key, i.modifiedValue, i.originalValue)}\\\\\\\\n            {i.key !== \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" && \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                blockTimestamp: timestamp * 1000000,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </LogIconContainer>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (Array.isArray(state.data)) {\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"log-line\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ height: state.data.length > 2 ? \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"150%\\\\\\\\\\\\\\\" }}\\\\\\\\n      ></div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n        {state.data.map((i, index) => {\\\\\\\\n          if (i.blockHeight) {\\\\\\\\n            const item = state.socialComments.find(\\\\\\\\n              (t) => t.blockHeight === i.blockHeight,\\\\\\\\n            );\\\\\\\\n            return <Comment commentItem={item} />;\\\\\\\\n          } else {\\\\\\\\n            return <Log timestamp={i.timestamp} key={index} />;\\\\\\\\n          }\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\"}, \"devhub.feature.proposal-search.by-author\": {\"\": \"const [authorsOptions, setAuthorsOptions] = useState([]);\\\\\\\\nconst [selectedAuthor, setSelectedAuthor] = useState(null);\\\\\\\\n\\\\\\\\nif (!authorsOptions.length) {\\\\\\\\n  const data = [{ label: \\\\\\\\\\\\\\\"None\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }];\\\\\\\\n  const authors = Near.view(\\\\\\\\n    \\\\\\\\\\\\\\\"events-committee.near\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"get_all_proposal_authors\\\\\\\\\\\\\\\",\\\\\\\\n    {},\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  if (Array.isArray(authors)) {\\\\\\\\n    for (const author of authors) {\\\\\\\\n      data.push({ label: author, value: author });\\\\\\\\n    }\\\\\\\\n    setAuthorsOptions(data);\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .dropdown-menu {\\\\\\\\n    max-height: 400px;\\\\\\\\n    overflow-x: auto;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"events-committee.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        options: authorsOptions,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelectedAuthor(v);\\\\\\\\n          props.onAuthorChange(v);\\\\\\\\n        },\\\\\\\\n        selectedValue: props.author,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 7.66e+21
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 981327288902200000000
    }
  },
  {
    "id": "4962885666",
    "receipt_id": "9MDyM7DUV2zJ4KpXEu2wBgMiRxRZan7bAuCN9qyxagQB",
    "predecessor_account_id": "system",
    "receiver_account_id": "events-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9BM84wFBsLZ6PSY4Jvwgqm3PfHdb4i37EyqqrVNWKk8s",
      "block_height": 119632244,
      "block_timestamp": 1716549858042384100
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "events-committee.near",
      "status": true
    },
    "transaction_hash": "F8dqy9DxGUmfWfoPdZkLBHgySrgFANHhUqRpa5W72hRA",
    "included_in_block_hash": "D4u24Lc3Bzqc629Hb6rWAazyBNcrUEjoAVCNh4NMz7VW",
    "block_timestamp": "1716549855413676140",
    "block": {
      "block_height": 119632242
    },
    "receipt_conversion_tokens_burnt": "34689543764600000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8714476134048848e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 7.66e+21
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 981327288902200000000
    }
  },
  {
    "id": "4970319585",
    "receipt_id": "5mVg4X983PUm85xTXDokkDa8b9TfPHZdSZhpUFpuNYoT",
    "predecessor_account_id": "yarotska.near",
    "receiver_account_id": "events-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8pca747mF5J16DuKxddqZfTfuoDPEtUeFxow1cXsMhK6",
      "block_height": 119646527,
      "block_timestamp": 1716567499972236300
    },
    "receipt_outcome": {
      "gas_burnt": 7424160555041,
      "tokens_burnt": 742416055504100000000,
      "executor_account_id": "events-committee.near",
      "status": true
    },
    "transaction_hash": "CMUWxSZqLzWT2LYqEcwo3hx1pTKTETZXu4RoPJu15Q2t",
    "included_in_block_hash": "BNqKcvr1ehyn5Hhc8FSXPokoH7QCaR3N6P7H8zJo2RH1",
    "block_timestamp": "1716567498684902884",
    "block": {
      "block_height": 119646526
    },
    "receipt_conversion_tokens_burnt": "30857600075400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 742416055504100000000,
        "args": "{\"id\": 5, \"timeline\": {\"status\": \"PAYMENT_PROCESSING\", \"kyc_verified\": true, \"test_transaction_sent\": true, \"sponsor_requested_review\": false, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.122499422127e+21
    }
  },
  {
    "id": "4970320107",
    "receipt_id": "7u8SMcpM6TPVAggSmyrCSDuqVrW59KrpmwdLTXhjcrZS",
    "predecessor_account_id": "events-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "96t7fSbVG9FtxWBuz7Yn9sydv5xmKHSVtXV76CHWxwLM",
      "block_height": 119646528,
      "block_timestamp": 1716567501311398100
    },
    "receipt_outcome": {
      "gas_burnt": 3492257665475,
      "tokens_burnt": 349225766547500000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "CMUWxSZqLzWT2LYqEcwo3hx1pTKTETZXu4RoPJu15Q2t",
    "included_in_block_hash": "BNqKcvr1ehyn5Hhc8FSXPokoH7QCaR3N6P7H8zJo2RH1",
    "block_timestamp": "1716567498684902884",
    "block": {
      "block_height": 119646526
    },
    "receipt_conversion_tokens_burnt": "30857600075400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349225766547500000000,
        "args": "{\"data\": {\"events-committee.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"alae.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":5,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yarotska.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.122499422127e+21
    }
  },
  {
    "id": "5085667334",
    "receipt_id": "87TWE9D5f9BRRrYLhDjHS5DgPmLHuZU8PdRFWwhCRVHr",
    "predecessor_account_id": "events-committee.near",
    "receiver_account_id": "events-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8SaB5p99bA4VSBvKqsRww8vYXWy9zgQSBJBfUHCDJZh3",
      "block_height": 119879728,
      "block_timestamp": 1716846385127873000
    },
    "receipt_outcome": {
      "gas_burnt": 209824625000,
      "tokens_burnt": 20982462500000000000,
      "executor_account_id": "events-committee.near",
      "status": true
    },
    "transaction_hash": "2caRg3hReLWyDKypYGw5F1CXqzKJmYgcBEVXY4xgP8Ko",
    "included_in_block_hash": "8SaB5p99bA4VSBvKqsRww8vYXWy9zgQSBJBfUHCDJZh3",
    "block_timestamp": "1716846385127872959",
    "block": {
      "block_height": 119879728
    },
    "receipt_conversion_tokens_burnt": "20982462500000000000",
    "actions": [
      {
        "action": "ADD_KEY",
        "method": null,
        "deposit": 0,
        "fee": 20982462500000000000,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 41964925000000000000
    }
  },
  {
    "id": "5086480431",
    "receipt_id": "HLcPHNm8684FY7UAWEkboC4L2wGbr2XX9nm2cCe3hRsy",
    "predecessor_account_id": "events-committee.near",
    "receiver_account_id": "events-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EPSGPujXvofJpFJNgAwiwWhBPBpnWqcKatnYeCq9nS41",
      "block_height": 119881115,
      "block_timestamp": 1716848087566723000
    },
    "receipt_outcome": {
      "gas_burnt": 210284826324,
      "tokens_burnt": 21028482632400000000,
      "executor_account_id": "events-committee.near",
      "status": true
    },
    "transaction_hash": "7WDcS56orKUzTRaVHVd4bmD1fBNQ5zv6jTT8yaQGjmNn",
    "included_in_block_hash": "EPSGPujXvofJpFJNgAwiwWhBPBpnWqcKatnYeCq9nS41",
    "block_timestamp": "1716848087566723112",
    "block": {
      "block_height": 119881115
    },
    "receipt_conversion_tokens_burnt": "21028482632400000000",
    "actions": [
      {
        "action": "ADD_KEY",
        "method": null,
        "deposit": 0,
        "fee": 21028482632400000000,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 42056965264800000000
    }
  },
  {
    "id": "5105386858",
    "receipt_id": "HjnBAMxjxLM6CvVmhorPCXz1j1UnpGsFEa9FYeVVbG6L",
    "predecessor_account_id": "events-committee.near",
    "receiver_account_id": "events-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EBanLh6L23kvQXzgjmXZpi7nRvcxv2DdzbBwGnepMAwq",
      "block_height": 119919177,
      "block_timestamp": 1716894350879225000
    },
    "receipt_outcome": {
      "gas_burnt": 210344511585,
      "tokens_burnt": 21034451158500000000,
      "executor_account_id": "events-committee.near",
      "status": true
    },
    "transaction_hash": "BVCxFoEP8q7E2CeHFYuBF277xhC13uRD7oUcjQJWHqmm",
    "included_in_block_hash": "EBanLh6L23kvQXzgjmXZpi7nRvcxv2DdzbBwGnepMAwq",
    "block_timestamp": "1716894350879225020",
    "block": {
      "block_height": 119919177
    },
    "receipt_conversion_tokens_burnt": "21034451158500000000",
    "actions": [
      {
        "action": "ADD_KEY",
        "method": null,
        "deposit": 0,
        "fee": 21034451158500000000,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 42068902317000000000
    }
  },
  {
    "id": "5183057983",
    "receipt_id": "BZqtjMqnn7is2tB8v8dJgBD517aq2SQLtp7eHB2zQoUh",
    "predecessor_account_id": "events-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9FgREDD2ShGaYbMezm6isdJXqBg6iaMBfuy47yPQtNux",
      "block_height": 120064982,
      "block_timestamp": 1717073005090273500
    },
    "receipt_outcome": {
      "gas_burnt": 8309045445103,
      "tokens_burnt": 830904544510300000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "56LCAnU6UW6JqootFcYHmeCXU5TBQyic5ukAHsN24ADC",
    "included_in_block_hash": "EMaid5LE8icHAtuep8sR6s81r9uFz2GXpae2cgXUzmVM",
    "block_timestamp": "1717073003671218486",
    "block": {
      "block_height": 120064981
    },
    "receipt_conversion_tokens_burnt": "34318378720600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 1,
        "fee": 830904544510300000000,
        "args": "{\"data\": {\"events-committee.near\": {\"widget\": {\"devhub.feature.post-search.by-author\": {\"\": \"const { getAllAuthors } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"events-committee.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!getAllAuthors) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst selectedAuthors = props.author ? [{ name: props.author }] : [];\\\\\\\\n\\\\\\\\nconst authors = getAllAuthors();\\\\\\\\n\\\\\\\\nif (authors === null) {\\\\\\\\n  return <div>Loading ...</div>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst onChange = (selectedAuthors) =>\\\\\\\\n  props.onAuthorSearch(selectedAuthors[0]?.name);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Typeahead\\\\\\\\n    clearButton\\\\\\\\n    id=\\\\\\\\\\\\\\\"basic-typeahead-single\\\\\\\\\\\\\\\"\\\\\\\\n    labelKey=\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\"\\\\\\\\n    options={authors.map((author) => ({ name: author }))}\\\\\\\\n    placeholder=\\\\\\\\\\\\\\\"Search by author\\\\\\\\\\\\\\\"\\\\\\\\n    selected={selectedAuthors}\\\\\\\\n    {...{ onChange }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.CommentsAndLogs\": {\"\": \"const snapshotHistory = props.snapshotHistory;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  .log-line {\\\\\\\\n    position: absolute;\\\\\\\\n    left: 7%;\\\\\\\\n    top: -30px;\\\\\\\\n    bottom: 0;\\\\\\\\n    z-index: 1;\\\\\\\\n    width: 1px;\\\\\\\\n    background-color: var(--bs-border-color);\\\\\\\\n    z-index: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .inline-flex {\\\\\\\\n    display: -webkit-inline-box !important;\\\\\\\\n    align-items: center !important;\\\\\\\\n    gap: 0.25rem !important;\\\\\\\\n    margin-right: 2px;\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommentContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// check snapshot history all keys and values for differences\\\\\\\\nfunction getDifferentKeysWithValues(obj1, obj2) {\\\\\\\\n  return Object.keys(obj1)\\\\\\\\n    .filter((key) => {\\\\\\\\n      if (key !== \\\\\\\\\\\\\\\"editor_id\\\\\\\\\\\\\\\" && obj2.hasOwnProperty(key)) {\\\\\\\\n        const value1 = obj1[key];\\\\\\\\n        const value2 = obj2[key];\\\\\\\\n        if (Array.isArray(value1) && Array.isArray(value2)) {\\\\\\\\n          const sortedValue1 = [...value1].sort();\\\\\\\\n          const sortedValue2 = [...value2].sort();\\\\\\\\n          return JSON.stringify(sortedValue1) !== JSON.stringify(sortedValue2);\\\\\\\\n        } else if (typeof value1 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" && typeof value2 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else {\\\\\\\\n          return value1 !== value2;\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      return false;\\\\\\\\n    })\\\\\\\\n    .map((key) => ({\\\\\\\\n      key,\\\\\\\\n      originalValue: obj1[key],\\\\\\\\n      modifiedValue: obj2[key],\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  data: null,\\\\\\\\n  socialComments: null,\\\\\\\\n  changedKeysListWithValues: null,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction sortTimelineAndComments() {\\\\\\\\n  const comments = Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", props.item);\\\\\\\\n\\\\\\\\n  if (state.changedKeysListWithValues === null) {\\\\\\\\n    const changedKeysListWithValues = snapshotHistory\\\\\\\\n      .slice(1)\\\\\\\\n      .map((item, index) => {\\\\\\\\n        const startingPoint = snapshotHistory[index]; // Set comparison to the previous item\\\\\\\\n        return {\\\\\\\\n          editorId: item.editor_id,\\\\\\\\n          ...getDifferentKeysWithValues(startingPoint, item),\\\\\\\\n        };\\\\\\\\n      });\\\\\\\\n    State.update({ changedKeysListWithValues });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort comments and timeline logs by time\\\\\\\\n  const snapShotTimeStamp = Array.isArray(snapshotHistory)\\\\\\\\n    ? snapshotHistory.map((i) => {\\\\\\\\n        return { blockHeight: null, timestamp: parseFloat(i.timestamp / 1e6) };\\\\\\\\n      })\\\\\\\\n    : [];\\\\\\\\n\\\\\\\\n  const commentsTimeStampPromise = Array.isArray(comments)\\\\\\\\n    ? Promise.all(\\\\\\\\n        comments.map((item) => {\\\\\\\\n          return asyncFetch(\\\\\\\\n            `https://api.near.social/time?blockHeight=${item.blockHeight}`\\\\\\\\n          ).then((res) => {\\\\\\\\n            const timeMs = parseFloat(res.body);\\\\\\\\n            return {\\\\\\\\n              blockHeight: item.blockHeight,\\\\\\\\n              timestamp: timeMs,\\\\\\\\n            };\\\\\\\\n          });\\\\\\\\n        })\\\\\\\\n      ).then((res) => res)\\\\\\\\n    : Promise.resolve([]);\\\\\\\\n\\\\\\\\n  commentsTimeStampPromise.then((commentsTimeStamp) => {\\\\\\\\n    const combinedArray = [...snapShotTimeStamp, ...commentsTimeStamp];\\\\\\\\n    combinedArray.sort((a, b) => a.timestamp - b.timestamp);\\\\\\\\n    State.update({ data: combinedArray, socialComments: comments });\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nsortTimelineAndComments();\\\\\\\\nconst Comment = ({ commentItem }) => {\\\\\\\\n  const { accountId, blockHeight } = commentItem;\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n    blockHeight,\\\\\\\\n  };\\\\\\\\n  const content = JSON.parse(Social.get(item.path, blockHeight) ?? \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n  const link = `https://near.social/events-committee.near/widget/app?page=proposal&id=${props.id}&accountId=${accountId}&blockHeight=${blockHeight}`;\\\\\\\\n  const hightlightComment =\\\\\\\\n    parseInt(props.blockHeight ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") === blockHeight &&\\\\\\\\n    props.accountId === accountId;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div style={{ zIndex: 99, background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"events-committee.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              accountId: accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <CommentContainer\\\\\\\\n          style={{ border: hightlightComment ? \\\\\\\\\\\\\\\"2px solid black\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Header className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <Link href={`/near/widget/ProfilePage?accountId=${accountId}`}>\\\\\\\\n                <span className=\\\\\\\\\\\\\\\"fw-bold text-black\\\\\\\\\\\\\\\">{accountId}</span>\\\\\\\\n              </Link>\\\\\\\\n              commented \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  blockHeight: blockHeight,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/Posts.Menu\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: accountId,\\\\\\\\n                    blockHeight: blockHeight,\\\\\\\\n                    contentPath: `/post/comment`,\\\\\\\\n                    contentType: \\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </Header>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"events-committee.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                text: content.text,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"events-committee.near/widget/devhub.entity.proposal.LikeButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/CopyUrlButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  url: link,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </CommentContainer>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction capitalizeFirstLetter(string) {\\\\\\\\n  const updated = string.replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n  return updated.charAt(0).toUpperCase() + updated.slice(1).toLowerCase();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction parseTimelineKeyAndValue(timeline, originalValue, modifiedValue) {\\\\\\\\n  const oldValue = originalValue[timeline];\\\\\\\\n  const newValue = modifiedValue[timeline];\\\\\\\\n  switch (timeline) {\\\\\\\\n    case \\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        oldValue !== newValue && (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved proposal from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"events-committee.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: oldValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"events-committee.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            stage\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"sponsor_requested_review\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed review</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"reviewer_completed_attestation\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed attestation</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"kyc_verified\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>verified KYC/KYB</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"test_transaction_sent\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        !oldValue &&\\\\\\\\n        newValue && (\\\\\\\\n          <span>\\\\\\\\n            confirmed sponsorship and shared funding steps with recipient\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n    // we don\\\\\\\\\\\\'t have this step for now\\\\\\\\n    // case \\\\\\\\\\\\\\\"request_for_trustees_created\\\\\\\\\\\\\\\":\\\\\\\\n    //   return !oldValue && newValue && <span>successfully created request for trustees</span>;\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccountProfile = ({ accountId }) => {\\\\\\\\n  return (\\\\\\\\n    <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"events-committee.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          accountId: accountId,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n          showAccountId: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </span>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst parseProposalKeyAndValue = (key, modifiedValue, originalValue) => {\\\\\\\\n  switch (key) {\\\\\\\\n    case \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed title</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"summary\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed {key}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed labels to {(modifiedValue ?? []).join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed category from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>updated linked proposals</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_usd_amount\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship amount from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_paid_in_currency\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship currency from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"receiver_account\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed receiver account from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"supervisor\\\\\\\\\\\\\\\":\\\\\\\\n      return !originalValue && modifiedValue ? (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          added\\\\\\\\n          <AccountProfile accountId={modifiedValue} />\\\\\\\\n          as supervisor\\\\\\\\n        </span>\\\\\\\\n      ) : (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed receiver account from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsor\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed sponsor from <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\": {\\\\\\\\n      const modifiedKeys = Object.keys(modifiedValue);\\\\\\\\n      const originalKeys = Object.keys(originalValue);\\\\\\\\n      return modifiedKeys.map((i, index) => {\\\\\\\\n        const text = parseTimelineKeyAndValue(i, originalValue, modifiedValue);\\\\\\\\n        return (\\\\\\\\n          text && (\\\\\\\\n            <span key={index} className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              {text}\\\\\\\\n              {text && \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LogIconContainer = styled.div`\\\\\\\\n  margin-left: 50px;\\\\\\\\n  z-index: 99;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin-left: 10px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Log = ({ timestamp }) => {\\\\\\\\n  const updatedData = useMemo(\\\\\\\\n    () =>\\\\\\\\n      state.changedKeysListWithValues.find((obj) =>\\\\\\\\n        Object.values(obj).some(\\\\\\\\n          (value) =>\\\\\\\\n            value && parseFloat(value.modifiedValue / 1e6) === timestamp\\\\\\\\n        )\\\\\\\\n      ),\\\\\\\\n    [state.changedKeysListWithValues, timestamp]\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const editorId = updatedData.editorId;\\\\\\\\n  const valuesArray = Object.values(updatedData ?? {});\\\\\\\\n  // if valuesArray length is 2 that means it only has timestamp and editorId\\\\\\\\n  if (!updatedData || valuesArray.length === 2) {\\\\\\\\n    return <></>;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return valuesArray.map((i, index) => {\\\\\\\\n    if (i.key && i.key !== \\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\\" && i.key !== \\\\\\\\\\\\\\\"proposal_body_version\\\\\\\\\\\\\\\") {\\\\\\\\n      return (\\\\\\\\n        <LogIconContainer\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          key={index}\\\\\\\\n        >\\\\\\\\n          <img\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiffqrxdi4xqu7erf46gdlwuodt6dm6rji2jtixs3iionjvga6rhdi\\\\\\\\\\\\\\\"\\\\\\\\n            height={30}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"flex-1 gap-1 w-100 text-wrap text-muted align-items-center \\\\\\\\\\\\\\\" +\\\\\\\\n              (i.key === \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" &&\\\\\\\\n              Object.keys(i.originalValue ?? {}).length > 1\\\\\\\\n                ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                : \\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n              <AccountProfile accountId={editorId} showAccountId={true} />\\\\\\\\n            </span>\\\\\\\\n            {parseProposalKeyAndValue(i.key, i.modifiedValue, i.originalValue)}\\\\\\\\n            {i.key !== \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" && \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                blockTimestamp: timestamp * 1000000,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </LogIconContainer>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (Array.isArray(state.data)) {\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"log-line\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ height: state.data.length > 2 ? \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"150%\\\\\\\\\\\\\\\" }}\\\\\\\\n      ></div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n        {state.data.map((i, index) => {\\\\\\\\n          if (i.blockHeight) {\\\\\\\\n            const item = state.socialComments.find(\\\\\\\\n              (t) => t.blockHeight === i.blockHeight\\\\\\\\n            );\\\\\\\\n            return <Comment commentItem={item} />;\\\\\\\\n          } else {\\\\\\\\n            return <Log timestamp={i.timestamp} key={index} />;\\\\\\\\n          }\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\"}, \"devhub.feature.proposal-search.by-author\": {\"\": \"const [authorsOptions, setAuthorsOptions] = useState([]);\\\\\\\\nconst [selectedAuthor, setSelectedAuthor] = useState(null);\\\\\\\\n\\\\\\\\nif (!authorsOptions.length) {\\\\\\\\n  const data = [{ label: \\\\\\\\\\\\\\\"None\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }];\\\\\\\\n  const authors = Near.view(\\\\\\\\n    \\\\\\\\\\\\\\\"events-committee.near\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"get_all_proposal_authors\\\\\\\\\\\\\\\",\\\\\\\\n    {}\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  if (Array.isArray(authors)) {\\\\\\\\n    for (const author of authors) {\\\\\\\\n      data.push({ label: author, value: author });\\\\\\\\n    }\\\\\\\\n    setAuthorsOptions(data);\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .dropdown-menu {\\\\\\\\n    max-height: 400px;\\\\\\\\n    overflow-x: auto;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"events-committee.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        options: authorsOptions,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelectedAuthor(v);\\\\\\\\n          props.onAuthorChange(v);\\\\\\\\n        },\\\\\\\\n        selectedValue: props.author,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 865222923230900000000
    }
  },
  {
    "id": "5183059247",
    "receipt_id": "BXj8GEVpQDPB1wn46bwN6b7Ck9u1ebyrwDxemDCqhHTA",
    "predecessor_account_id": "system",
    "receiver_account_id": "events-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "FEak18W2Soms9hsc9hHnQpgpgRebtwgwKjsME1W3Lig1",
      "block_height": 120064983,
      "block_timestamp": 1717073006267914800
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "events-committee.near",
      "status": true
    },
    "transaction_hash": "56LCAnU6UW6JqootFcYHmeCXU5TBQyic5ukAHsN24ADC",
    "included_in_block_hash": "EMaid5LE8icHAtuep8sR6s81r9uFz2GXpae2cgXUzmVM",
    "block_timestamp": "1717073003671218486",
    "block": {
      "block_height": 120064981
    },
    "receipt_conversion_tokens_burnt": "34318378720600000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8725817461047892e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 865222923230900000000
    }
  }
]