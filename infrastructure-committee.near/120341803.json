[
  {
    "id": "5334663170",
    "receipt_id": "637PPAz8sAGtXb23pg9sztUX8K8nKuRDdDDM1NhSMecE",
    "predecessor_account_id": "infrastructure-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2XHH4sWgboNDgGusBhRtoNCom1GfemzTA1hHMuYPxFzF",
      "block_height": 120365321,
      "block_timestamp": 1717439662981095400
    },
    "receipt_outcome": {
      "gas_burnt": 92980351637309,
      "tokens_burnt": 9.2980351637309e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "CxPYJtLVqwREZtTWw9hHt4uWK6uauPD7GEKYcep3mKYm",
    "included_in_block_hash": "8TdGjqaKRgmcr5BKYhvgCv4cPurjnXo9Ctc3DtTKB43J",
    "block_timestamp": "1717439661734421386",
    "block": {
      "block_height": 120365320
    },
    "receipt_conversion_tokens_burnt": "120086571026600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 9.2980351637309e+21,
        "args": "{\"data\": {\"infrastructure-committee.near\": {\"widget\": {\"includes.common\": {\"\": \"const REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.Rfp\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`) || {\\\\\\\\n  href: () => {},\\\\\\\\n};\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst accountId = context.accountId;\\\\\\\\n/*\\\\\\\\n  ---props---\\\\\\\\n  props.id: number;\\\\\\\\n  props.timestamp: number; optional\\\\\\\\n  accountId: string\\\\\\\\n  blockHeight:number\\\\\\\\n  */\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .description-box {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .accept-submission-info-container {\\\\\\\\n    background-color: #ecf8fb;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-3 {\\\\\\\\n    flex: 3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 20px;\\\\\\\\n    height: 20px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 180px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 135px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 180px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 75px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line-sm {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 70px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:disabled ~ .form-check-label,\\\\\\\\n  .form-check-input[disabled] ~ .form-check-label {\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input {\\\\\\\\n    border-color: black !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-btn {\\\\\\\\n    background-color: #687076;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-btn {\\\\\\\\n    background-color: #3c697d;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #3c697d !important;\\\\\\\\n    border-color: #3c697d !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-vertical {\\\\\\\\n    border-top: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n    border-bottom: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  button.px-0 {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  red-icon i {\\\\\\\\n    color: red;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  input[type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"] {\\\\\\\\n    min-width: 13px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst RfpContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Text = styled.p`\\\\\\\\n  display: block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 20px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  white-space: nowrap;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 12px;\\\\\\\\n  margin: -6px -6px 6px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst LinkProfile = ({ account, children }) => {\\\\\\\\n  return (\\\\\\\\n    <Link href={`/near/widget/ProfilePage?accountId=${account}`}>\\\\\\\\n      {children}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [snapshotHistory, setSnapshotHistory] = useState([]);\\\\\\\\n\\\\\\\\nconst rfp = Near.view(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n  rfp_id: parseInt(id),\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst queryName = RFP_INDEXER_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n  ${queryName}(\\\\\\\\n    offset: $offset\\\\\\\\n    limit: $limit\\\\\\\\n    order_by: {ts: desc}\\\\\\\\n    where: $where\\\\\\\\n  ) {\\\\\\\\n    editor_id\\\\\\\\n    name\\\\\\\\n    summary\\\\\\\\n    description\\\\\\\\n    ts\\\\\\\\n    rfp_id\\\\\\\\n    timeline\\\\\\\\n    labels\\\\\\\\n    submission_deadline\\\\\\\\n    linked_proposals\\\\\\\\n  }\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst fetchSnapshotHistory = () => {\\\\\\\\n  const variables = {\\\\\\\\n    where: { rfp_id: { _eq: id } },\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const data = result.body.data?.[queryName];\\\\\\\\n        const history = data.map((item) => {\\\\\\\\n          const rfpData = {\\\\\\\\n            ...item,\\\\\\\\n            timestamp: item.ts,\\\\\\\\n            timeline: parseJSON(item.timeline),\\\\\\\\n          };\\\\\\\\n          delete rfpData.ts;\\\\\\\\n          return rfpData;\\\\\\\\n        });\\\\\\\\n        setSnapshotHistory(history);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchSnapshotHistory();\\\\\\\\n}, [id]);\\\\\\\\n\\\\\\\\nif (!rfp) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nif (timestamp && rfp) {\\\\\\\\n  rfp.snapshot =\\\\\\\\n    snapshotHistory.find((item) => item.timestamp === timestamp) ??\\\\\\\\n    rfp.snapshot;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { snapshot } = rfp;\\\\\\\\nsnapshot.timeline = parseJSON(snapshot.timeline);\\\\\\\\n\\\\\\\\nconst authorId = rfp.author_id;\\\\\\\\nconst blockHeight = parseInt(rfp.social_db_post_block_height);\\\\\\\\nconst item = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n  path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n  blockHeight,\\\\\\\\n};\\\\\\\\nconst rfpURL = `https://near.org/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=rfp&id=${rfp.id}&timestamp=${snapshot.timestamp}`;\\\\\\\\n\\\\\\\\nconst SidePanelItem = ({ title, children, hideBorder, ishidden }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ gap: \\\\\\\\\\\\\\\"8px\\\\\\\\\\\\\\\" }}\\\\\\\\n      className={\\\\\\\\n        ishidden\\\\\\\\n          ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"d-flex flex-column pb-3 \\\\\\\\\\\\\\\" + (!hideBorder && \\\\\\\\\\\\\\\" border-bottom\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{title} </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isAllowedToWriteRfp = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst link = href({\\\\\\\\n  widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n  params: {\\\\\\\\n    page: \\\\\\\\\\\\\\\"create-rfp\\\\\\\\\\\\\\\",\\\\\\\\n    id: rfp.id,\\\\\\\\n    timestamp: timestamp,\\\\\\\\n  },\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst createdDate = snapshotHistory[0].timestamp ?? snapshot.timestamp;\\\\\\\\n\\\\\\\\nconst [approvedProposals, setApprovedProposals] = useState([]);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\nconst [isWarningModalOpen, setWarningModal] = useState(false);\\\\\\\\nconst [timeline, setTimeline] = useState(null);\\\\\\\\nconst [showTimelineSetting, setShowTimelineSetting] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (!timeline) {\\\\\\\\n    setTimeline(snapshot.timeline);\\\\\\\\n  }\\\\\\\\n}, [snapshot]);\\\\\\\\n\\\\\\\\nfunction fetchApprovedRfpProposals() {\\\\\\\\n  const queryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      proposal_id\\\\\\\\n      name\\\\\\\\n      timeline\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  const FETCH_LIMIT = 50;\\\\\\\\n  const variables = {\\\\\\\\n    limit: FETCH_LIMIT,\\\\\\\\n    offset,\\\\\\\\n    where: {\\\\\\\\n      proposal_id: { _in: rfp.snapshot.linked_proposals },\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const data = result.body.data?.[queryName];\\\\\\\\n        const approved = [];\\\\\\\\n        data.map((item) => {\\\\\\\\n          const timeline = parseJSON(item.timeline);\\\\\\\\n          if (PROPOSALS_APPROVED_STATUS_ARRAY.includes(timeline.status)) {\\\\\\\\n            approved.push(item);\\\\\\\\n          }\\\\\\\\n        });\\\\\\\\n        setApprovedProposals(approved);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst editRFPStatus = () => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_rfp_timeline\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: rfp.id,\\\\\\\\n        timeline: timeline,\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\nconsole.log({ rfp });\\\\\\\\nconst onCancelRFP = (value) => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"cancel_rfp\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: rfp.id,\\\\\\\\n        proposals_to_cancel:\\\\\\\\n          value === CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS\\\\\\\\n            ? snapshot.linked_proposals\\\\\\\\n            : [],\\\\\\\\n        proposals_to_unlink:\\\\\\\\n          value === CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS\\\\\\\\n            ? snapshot.linked_proposals\\\\\\\\n            : [],\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst accessControlInfo =\\\\\\\\n  Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_access_control_info\\\\\\\\\\\\\\\"\\\\\\\\n  ) ?? null;\\\\\\\\nconst moderatorList =\\\\\\\\n  accessControlInfo?.members_list?.[\\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\"]?.children;\\\\\\\\n\\\\\\\\nfetchApprovedRfpProposals();\\\\\\\\n\\\\\\\\nconst SubmitProposalBtn = () => {\\\\\\\\n  return (\\\\\\\\n    <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <Link\\\\\\\\n        to={href({\\\\\\\\n          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n          params: { page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\", rfp_id: rfp.id },\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n          props={{\\\\\\\\n            label: (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle\\\\\\\\\\\\\\\"></i>Submit Proposal\\\\\\\\n              </div>\\\\\\\\n            ),\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"blue-btn\\\\\\\\\\\\\\\" },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </Link>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n        onConfirmClick: (value) => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onCancelRFP(value);\\\\\\\\n        },\\\\\\\\n        linkedProposalIds: snapshot.linked_proposals,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.WarningModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isWarningModalOpen,\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setWarningModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex px-3 px-lg-0 justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center h3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>{snapshot.name}</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">#{rfp.id}</div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_NEAR}/widget/ShareButton`}\\\\\\\\n          props={{\\\\\\\\n            postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            url: rfpURL,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        {isAllowedToWriteRfp && (\\\\\\\\n          <Link to={link} style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap flex-md-nowrap px-3 px-lg-0 gap-2 align-items-center text-sm pb-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n        props={{\\\\\\\\n          timelineStatus: snapshot.timeline.status,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"w-100 d-flex flex-wrap flex-md-nowrap gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n          <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n        </div>\\\\\\\\n        <div>created on {readableDate(createdDate / 1000000)}</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 full-width-div px-3 px-lg-0\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4\\\\\\\\\\\\\\\">\\\\\\\\n        {snapshot.timeline.status ===\\\\\\\\n          RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"accept-submission-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n              <b>This RFP is accepting submissions.</b>\\\\\\\\n              <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                Click Submit Proposal if you want to submit a proposal.\\\\\\\\n              </p>\\\\\\\\n            </div>\\\\\\\\n            <SubmitProposalBtn />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"my-4\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-6\\\\\\\\\\\\\\\">\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"flex-3 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                  <img src={RFP_IMAGE} height={35} width={35} />\\\\\\\\n                </div>\\\\\\\\n                <RfpContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Header className=\\\\\\\\\\\\\\\"d-flex gap-1 align-items-center p-2 px-3 \\\\\\\\\\\\\\\">\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ maxWidth: \\\\\\\\\\\\\\\"60%\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n                    </div>\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                        props={{\\\\\\\\n                          blockHeight,\\\\\\\\n                          blockTimestamp: createdDate,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      {context.accountId && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                          <Widget\\\\\\\\n                            src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                            props={{\\\\\\\\n                              accountId: authorId,\\\\\\\\n                              blockHeight: blockHeight,\\\\\\\\n                            }}\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </Header>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 p-2 px-3 description-box\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      RFP CATEGORY\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                          props={{\\\\\\\\n                            selected: snapshot.labels,\\\\\\\\n                            disabled: true,\\\\\\\\n                            hideDropdown: true,\\\\\\\\n                            onChange: () => {},\\\\\\\\n                            availableOptions: rfpLabelOptions,\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      SUMMARY\\\\\\\\n                    </div>\\\\\\\\n                    <div>{snapshot.summary}</div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n                      DESCRIPTION\\\\\\\\n                    </div>\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n                      props={{ text: snapshot.description }}\\\\\\\\n                    />\\\\\\\\n\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LikeButton`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          rfpId: rfp.id,\\\\\\\\n                          notifyAccountIds: moderatorList,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          showOverlay: false,\\\\\\\\n                          onClick: () => {},\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                        props={{\\\\\\\\n                          url: rfpURL,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                </RfpContainer>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.CommentsAndLogs`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    id: rfp.id,\\\\\\\\n                    item: item,\\\\\\\\n                    approvedProposals: approvedProposals,\\\\\\\\n                    snapshotHistory: snapshotHistory,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div\\\\\\\\n                style={{\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                className=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.ComposeComment`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    item: item,\\\\\\\\n                    notifyAccountIds: moderatorList,\\\\\\\\n                    rfpId: rfp.id,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                {snapshot.timeline.status ===\\\\\\\\n                  RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS && (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"accept-submission-info-container mt-3 p-3 p-sm-4 d-flex flex-wrap flex-md-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <div style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                      <b>Want to respond to this RFP? </b> This RFP is accepting\\\\\\\\n                      submissions.\\\\\\\\n                    </div>\\\\\\\\n                    <SubmitProposalBtn />\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 flex-1 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Submission Deadline\\\\\\\\\\\\\\\">\\\\\\\\n                <h5 className=\\\\\\\\\\\\\\\"text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {readableDate(\\\\\\\\n                    parseFloat(snapshot.submission_deadline / 1000000)\\\\\\\\n                  )}\\\\\\\\n                </h5>\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  <div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Timeline\\\\\\\\n                      {isAllowedToWriteRfp && (\\\\\\\\n                        <div\\\\\\\\n                          data-testid=\\\\\\\\\\\\\\\"setting-btn\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={() => setShowTimelineSetting(true)}\\\\\\\\n                        >\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.TimelineConfigurator`}\\\\\\\\n                  props={{\\\\\\\\n                    timeline: timeline,\\\\\\\\n                    setTimeline: (v) => {\\\\\\\\n                      if (\\\\\\\\n                        snapshot.timeline.status === v.status &&\\\\\\\\n                        timeline.status === v.status\\\\\\\\n                      ) {\\\\\\\\n                        return;\\\\\\\\n                      }\\\\\\\\n                      // if proposal selected timeline is selected and no approved proposals exist, show warning\\\\\\\\n                      if (\\\\\\\\n                        v.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED &&\\\\\\\\n                        Array.isArray(approvedProposals) &&\\\\\\\\n                        !approvedProposals.length\\\\\\\\n                      ) {\\\\\\\\n                        setWarningModal(true);\\\\\\\\n                      }\\\\\\\\n\\\\\\\\n                      if (v.status === RFP_TIMELINE_STATUS.CANCELLED) {\\\\\\\\n                        setCancelModal(true);\\\\\\\\n                      }\\\\\\\\n                      setTimeline(v);\\\\\\\\n                    },\\\\\\\\n                    disabled: showTimelineSetting ? false : true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                {showTimelineSetting && (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end text-sm mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"btn-outline-danger border-0 shadow-none btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        onClick: () => {\\\\\\\\n                          setShowTimelineSetting(false);\\\\\\\\n                          setTimeline(snapshot.timeline);\\\\\\\\n                        },\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                        classNames: { root: \\\\\\\\\\\\\\\"blue-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                        onClick: () => {\\\\\\\\n                          editRFPStatus();\\\\\\\\n                          setShowTimelineSetting(false);\\\\\\\\n                        },\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"Selected Proposal\\\\\\\\\\\\\\\" + \\\\\\\\\\\\\\\" (\\\\\\\\\\\\\\\" + approvedProposals.length + \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                ishidden={!approvedProposals.length}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedProposalIds: (approvedProposals ?? []).map(\\\\\\\\n                      (i) => i.proposal_id\\\\\\\\n                    ),\\\\\\\\n                    showStatus: false,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"All Proposals\\\\\\\\\\\\\\\" +\\\\\\\\n                  \\\\\\\\\\\\\\\" (\\\\\\\\\\\\\\\" +\\\\\\\\n                  snapshot.linked_proposals.length +\\\\\\\\n                  \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                ishidden={!snapshot.linked_proposals.length}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedProposalIds: snapshot.linked_proposals,\\\\\\\\n                    showStatus:\\\\\\\\n                      snapshot.timeline.status !==\\\\\\\\n                      RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.pages.app\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * This is the main entry point for the RFP application.\\\\\\\\n * Page route gets passed in through params, along with all other page props.\\\\\\\\n */\\\\\\\\n\\\\\\\\nconst { page, ...passProps } = props;\\\\\\\\n\\\\\\\\n// Import our modules\\\\\\\\nconst { AppLayout } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.template.AppLayout`\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!AppLayout) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\n// CSS styles to be used across the app.\\\\\\\\n// Define fonts here, as well as any other global styles.\\\\\\\\nconst Theme = styled.div`\\\\\\\\n  a {\\\\\\\\n    color: inherit;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .attractable {\\\\\\\\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\\\\\\\\n    transition: box-shadow 0.6s;\\\\\\\\n\\\\\\\\n    &:hover {\\\\\\\\n      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (!page) {\\\\\\\\n  // If no page is specified, we default to the feed page TEMP\\\\\\\\n  page = \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\n// This is our navigation, rendering the page based on the page parameter\\\\\\\\nfunction Page() {\\\\\\\\n  const routes = page.split(\\\\\\\\\\\\\\\".\\\\\\\\\\\\\\\");\\\\\\\\n  switch (routes[0]) {\\\\\\\\n    case \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.about`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"rfps\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.Feed`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.Rfp`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"create-rfp\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.Editor`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.Editor`}\\\\\\\\n          props={{ ...passProps }}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    case \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.Feed`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.Proposal`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.about`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"admin\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.admin`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    default: {\\\\\\\\n      // TODO: 404 page\\\\\\\\n      return <p>404</p>;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Theme>\\\\\\\\n    <AppLayout page={page}>\\\\\\\\n      <Page />\\\\\\\\n    </AppLayout>\\\\\\\\n  </Theme>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.Feed\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .rfp-card {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    border-bottom: none !important;\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-btn {\\\\\\\\n    background-color: #3c697d !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background: #e2e6ec;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .blue-btn {\\\\\\\\n      padding: 0.5rem 0.8rem !important;\\\\\\\\n      min-height: 32px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n  .fw-semi-bold {\\\\\\\\n    font-weight: 500;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  .text-normal {\\\\\\\\n    font-weight: normal !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst FeedItem = ({ rfp, index }) => {\\\\\\\\n  const accountId = rfp.author_id;\\\\\\\\n  const profile = Social.get(`${accountId}/profile/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\n  // We will have to get the rfp from the contract to get the block height.\\\\\\\\n  const blockHeight = parseInt(rfp.social_db_post_block_height);\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n    blockHeight: blockHeight,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n          id: rfp.rfp_id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      onClick={(e) => e.stopPropagation()}\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\n          \\\\\\\\\\\\\\\"rfp-card d-flex justify-content-between gap-2 text-muted cursor-pointer p-3 w-100 flex-wrap flex-sm-nowrap \\\\\\\\\\\\\\\" +\\\\\\\\n          (index !== 0 && \\\\\\\\\\\\\\\" border\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <img src={RFP_IMAGE} height={35} width={35} />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"h6 mb-0 text-black\\\\\\\\\\\\\\\">{rfp.name}</div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                props={{\\\\\\\\n                  selected: rfp.labels,\\\\\\\\n                  disabled: true,\\\\\\\\n                  hideDropdown: true,\\\\\\\\n                  onChange: () => {},\\\\\\\\n                  availableOptions: rfpLabelOptions,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap flex-sm-nowrap text-sm w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div>#{rfp.rfp_id} \\\\\\\\u{ff65} Created</div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight,\\\\\\\\n                  blockTimestamp: rfp.timestamp,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-4 flex-wrap flex-sm-nowrap text-sm w-100 text-muted my-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{ maxWidth: \\\\\\\\\\\\\\\"70%\\\\\\\\\\\\\\\" }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"fw-semi-bold\\\\\\\\\\\\\\\">Summay</div>\\\\\\\\n\\\\\\\\n                <div>{rfp.summary}</div>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ width: \\\\\\\\\\\\\\\"1px\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"bg-grey\\\\\\\\\\\\\\\"></div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"fw-semi-bold\\\\\\\\\\\\\\\">Submission Deadline</div>\\\\\\\\n                <h6 className=\\\\\\\\\\\\\\\"mb-0 text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {readableDate(rfp.submission_deadline / 1000000)}\\\\\\\\n                </h6>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center text-sm\\\\\\\\\\\\\\\">\\\\\\\\n              <div>\\\\\\\\n                <img\\\\\\\\n                  src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreif4p376f3qvpb2ewwsmi6fkcm3jalhuuzuxbgvehgl552agqw47ju\\\\\\\\\\\\\\\"\\\\\\\\n                  height={30}\\\\\\\\n                  width={30}\\\\\\\\n                />\\\\\\\\n                {rfp.linked_proposals.length ?? 0}\\\\\\\\n                proposals\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                  props={{\\\\\\\\n                    item,\\\\\\\\n                    showOverlay: false,\\\\\\\\n                    onClick: () => {},\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                comments\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"align-self-center\\\\\\\\\\\\\\\" style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n            props={{\\\\\\\\n              timelineStatus: rfp.timeline.status,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getRfp = (rfp_id) => {\\\\\\\\n  return Near.asyncView(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n    rfp_id,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FeedPage = () => {\\\\\\\\n  State.init({\\\\\\\\n    data: [],\\\\\\\\n    cachedItems: {},\\\\\\\\n    stage: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    sort: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    label: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    input: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    loading: false,\\\\\\\\n    loadingMore: false,\\\\\\\\n    aggregatedCount: null,\\\\\\\\n    currentlyDisplaying: 0,\\\\\\\\n    isFiltered: false,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  const queryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {rfp_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      author_id\\\\\\\\n      block_height\\\\\\\\n      name\\\\\\\\n      summary\\\\\\\\n      editor_id\\\\\\\\n      rfp_id\\\\\\\\n      timeline\\\\\\\\n      views\\\\\\\\n      labels\\\\\\\\n      submission_deadline\\\\\\\\n      linked_proposals\\\\\\\\n    }\\\\\\\\n    ${queryName}_aggregate(\\\\\\\\n      order_by: {rfp_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    )  {\\\\\\\\n      aggregate {\\\\\\\\n        count\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  function separateNumberAndText(str) {\\\\\\\\n    const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n    if (numberRegex.test(str)) {\\\\\\\\n      const number = str.match(numberRegex)[0];\\\\\\\\n      const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n      return { number: parseInt(number), text };\\\\\\\\n    } else {\\\\\\\\n      return { number: null, text: str.trim() };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const buildWhereClause = () => {\\\\\\\\n    let where = {};\\\\\\\\n\\\\\\\\n    if (state.label) {\\\\\\\\n      where = { labels: { _contains: state.label }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.stage) {\\\\\\\\n      // timeline is stored as jsonb\\\\\\\\n      where = {\\\\\\\\n        timeline: { _cast: { String: { _regex: `${state.stage}` } } },\\\\\\\\n        ...where,\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n    if (state.input) {\\\\\\\\n      const { number, text } = separateNumberAndText(state.input);\\\\\\\\n      if (number) {\\\\\\\\n        where = { rfp_id: { _eq: number }, ...where };\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      if (text) {\\\\\\\\n        where = {\\\\\\\\n          _or: [\\\\\\\\n            { name: { _iregex: `${text}` } },\\\\\\\\n            { summary: { _iregex: `${text}` } },\\\\\\\\n            { description: { _iregex: `${text}` } },\\\\\\\\n          ],\\\\\\\\n          ...where,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    State.update({ isFiltered: Object.keys(where).length > 0 });\\\\\\\\n    return where;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const buildOrderByClause = () => {\\\\\\\\n    /**\\\\\\\\n     * TODO\\\\\\\\n     * Most commented -> edit contract and indexer\\\\\\\\n     * Unanswered -> 0 comments\\\\\\\\n     */\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const makeMoreItems = () => {\\\\\\\\n    if (state.aggregatedCount <= state.currentlyDisplaying) return;\\\\\\\\n    fetchRfps(state.data.length);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchRfps = (offset) => {\\\\\\\\n    if (!offset) {\\\\\\\\n      offset = 0;\\\\\\\\n    }\\\\\\\\n    if (state.loading) return;\\\\\\\\n    const FETCH_LIMIT = 10;\\\\\\\\n    const variables = {\\\\\\\\n      limit: FETCH_LIMIT,\\\\\\\\n      offset,\\\\\\\\n      where: buildWhereClause(),\\\\\\\\n    };\\\\\\\\n    fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n      if (result.status === 200) {\\\\\\\\n        if (result.body.data) {\\\\\\\\n          const data = result.body.data?.[queryName];\\\\\\\\n          const totalResult = result.body.data?.[`${queryName}_aggregate`];\\\\\\\\n          State.update({ aggregatedCount: totalResult.aggregate.count });\\\\\\\\n          // Parse timeline\\\\\\\\n          fetchBlockHeights(data, offset);\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const renderItem = (item, index) => (\\\\\\\\n    <div\\\\\\\\n      key={item.rfp_id}\\\\\\\\n      className={\\\\\\\\n        (index !== state.data.length - 1 && \\\\\\\\\\\\\\\"border-bottom \\\\\\\\\\\\\\\") + index === 0 &&\\\\\\\\n        \\\\\\\\\\\\\\\" rounded-top-2 rfp-item-container\\\\\\\\\\\\\\\"\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <FeedItem rfp={item} index={index} />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n  const cachedRenderItem = (item, index) => {\\\\\\\\n    if (props.term) {\\\\\\\\n      return renderItem(item, {\\\\\\\\n        searchKeywords: [props.term],\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    const key = JSON.stringify(item);\\\\\\\\n\\\\\\\\n    if (!(key in state.cachedItems)) {\\\\\\\\n      state.cachedItems[key] = renderItem(item, index);\\\\\\\\n      State.update();\\\\\\\\n    }\\\\\\\\n    return state.cachedItems[key];\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    fetchRfps();\\\\\\\\n  }, [state.input, state.sort, state.label, state.stage]);\\\\\\\\n\\\\\\\\n  const mergeItems = (newItems) => {\\\\\\\\n    const items = [\\\\\\\\n      ...new Set([...newItems, ...state.data].map((i) => JSON.stringify(i))),\\\\\\\\n    ].map((i) => JSON.parse(i));\\\\\\\\n    // Sorting in the front end\\\\\\\\n    if (state.sort === \\\\\\\\\\\\\\\"rfp_id\\\\\\\\\\\\\\\" || state.sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.rfp_id - a.rfp_id);\\\\\\\\n    } else if (state.sort === \\\\\\\\\\\\\\\"views\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.views - a.views);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return items;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchBlockHeights = (data, offset) => {\\\\\\\\n    let promises = data.map((item) => getRfp(item.rfp_id));\\\\\\\\n    Promise.all(promises).then((blockHeights) => {\\\\\\\\n      data = data.map((item, index) => ({\\\\\\\\n        ...item,\\\\\\\\n        timeline: JSON.parse(item.timeline),\\\\\\\\n        social_db_post_block_height:\\\\\\\\n          blockHeights[index].social_db_post_block_height,\\\\\\\\n      }));\\\\\\\\n      if (offset) {\\\\\\\\n        let newData = mergeItems(data);\\\\\\\\n        State.update({\\\\\\\\n          data: newData,\\\\\\\\n          currentlyDisplaying: newData.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      } else {\\\\\\\\n        State.update({\\\\\\\\n          data,\\\\\\\\n          currentlyDisplaying: data.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const loader = (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const renderedItems = state.data ? state.data.map(cachedRenderItem) : null;\\\\\\\\n\\\\\\\\n  const isAllowedToWriteRfp = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      editor: context.accountId,\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between flex-wrap gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Heading>\\\\\\\\n          RFPs\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"text-muted text-normal\\\\\\\\\\\\\\\">\\\\\\\\n            ({state.aggregatedCount ?? state.data.length}){\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          </span>\\\\\\\\n        </Heading>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-input`}\\\\\\\\n            props={{\\\\\\\\n              search: state.input,\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-xs-100\\\\\\\\\\\\\\\",\\\\\\\\n              onSearch: (input) => {\\\\\\\\n                State.update({ input });\\\\\\\\n                fetchRfps();\\\\\\\\n              },\\\\\\\\n              onEnter: () => {\\\\\\\\n                fetchRfps();\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-sort`}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ sort: select.value });\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.FilterByLabel`}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ label: select.value });\\\\\\\\n              },\\\\\\\\n              availableOptions: rfpLabelOptions,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StageDropdown`}\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ stage: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        {isAllowedToWriteRfp && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"mt-2 mt-xs-0\\\\\\\\\\\\\\\">\\\\\\\\n            <Link\\\\\\\\n              to={href({\\\\\\\\n                widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                params: { page: \\\\\\\\\\\\\\\"create-rfp\\\\\\\\\\\\\\\" },\\\\\\\\n              })}\\\\\\\\n            >\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                props={{\\\\\\\\n                  label: (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                      <div>\\\\\\\\n                        <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                      </div>\\\\\\\\n                      Create RFP\\\\\\\\n                    </div>\\\\\\\\n                  ),\\\\\\\\n                  classNames: { root: \\\\\\\\\\\\\\\"blue-btn\\\\\\\\\\\\\\\" },\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </Link>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n      <div style={{ minHeight: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {!Array.isArray(state.data) ? (\\\\\\\\n          loader\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 mt-4 py-3 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"container-xl\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"bg-blue text-sm mt-2 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center mb-0\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    <i className=\\\\\\\\\\\\\\\"bi bi-info-circle\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                  <div>\\\\\\\\n                    <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                      Welcome to the Infrastructure RFP Feed!\\\\\\\\n                    </span>\\\\\\\\n                    This space features request for proposals (RFPs) by the NEAR\\\\\\\\n                    Infrastructure Committee for improving enhancements\\\\\\\\n                    pertaining to wallets, indexers, RPC services, explorers,\\\\\\\\n                    oracles, bridges, NEAR Protocol features, and related\\\\\\\\n                    ecosystem upgrades. You are welcome to respond to any RFPs\\\\\\\\n                    that are accepting submissions or submit an independent\\\\\\\\n                    proposal on the proposals page.\\\\\\\\n                  </div>\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mt-4 border rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                {state.aggregatedCount === 0 ? (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"m-2\\\\\\\\\\\\\\\">\\\\\\\\n                    {state.isFiltered ? (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-danger\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No RFP found for selected filter.\\\\\\\\n                      </div>\\\\\\\\n                    ) : (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-secondary\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No RFP has been created yet.\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                ) : state.aggregatedCount > 0 ? (\\\\\\\\n                  <InfiniteScroll\\\\\\\\n                    pageStart={0}\\\\\\\\n                    loadMore={makeMoreItems}\\\\\\\\n                    hasMore={state.aggregatedCount > state.data.length}\\\\\\\\n                    loader={loader}\\\\\\\\n                    useWindow={false}\\\\\\\\n                    threshold={100}\\\\\\\\n                  >\\\\\\\\n                    {renderedItems}\\\\\\\\n                  </InfiniteScroll>\\\\\\\\n                ) : (\\\\\\\\n                  loader\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn FeedPage(props);\\\\\\\\n\"}, \"near-prpsls-bos.components.pages.about\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\nreturn \\\\\\\\\\\\\\\"About\\\\\\\\\\\\\\\";\\\\\\\\n\"}, \"near-prpsls-bos.components.pages.admin\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst accessControlInfo =\\\\\\\\n  Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_access_control_info\\\\\\\\\\\\\\\"\\\\\\\\n  ) ?? null;\\\\\\\\n\\\\\\\\nif (!accessControlInfo.members_list) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst rootMembers =\\\\\\\\n  Near.view(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_root_members\\\\\\\\\\\\\\\") ?? null;\\\\\\\\nconst teamNames = Object.keys(rootMembers || {});\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst noPermissionBanner = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"d-flex flex-column justify-content-center align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n    <h2 className=\\\\\\\\\\\\\\\"alert alert-danger p-3 h6\\\\\\\\\\\\\\\">\\\\\\\\n      Your account does not have administration permissions.\\\\\\\\n    </h2>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!isModerator) {\\\\\\\\n  return noPermissionBanner;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction createEditTeam({\\\\\\\\n  teamName,\\\\\\\\n  members,\\\\\\\\n  description,\\\\\\\\n  contractCall, // typescript edit_member || add_member\\\\\\\\n}) {\\\\\\\\n  let txn = [];\\\\\\\\n\\\\\\\\n  const membersAndTeams = Object.keys(accessControlInfo.members_list);\\\\\\\\n  members.forEach((member) => {\\\\\\\\n    // if Contract panic member does not exist in the members_list\\\\\\\\n    if (!membersAndTeams.includes(member)) {\\\\\\\\n      // Add member\\\\\\\\n      txn.push({\\\\\\\\n        contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        methodName: \\\\\\\\\\\\\\\"add_member\\\\\\\\\\\\\\\",\\\\\\\\n        args: {\\\\\\\\n          member: member,\\\\\\\\n          metadata: {\\\\\\\\n            member_metadata_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n            description: description,\\\\\\\\n            permissions: {},\\\\\\\\n            children: [],\\\\\\\\n            parents: [],\\\\\\\\n          },\\\\\\\\n        },\\\\\\\\n        gas: Big(10).pow(14),\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  // Check edit team\\\\\\\\n  Near.call([\\\\\\\\n    ...txn,\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: contractCall, // add_member || edit_member\\\\\\\\n      args: {\\\\\\\\n        member: `team:${teamName}`,\\\\\\\\n        metadata: {\\\\\\\\n          member_metadata_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n          description: description,\\\\\\\\n          permissions: {},\\\\\\\\n          children: members,\\\\\\\\n          parents: [],\\\\\\\\n        },\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  margin: 0 auto;\\\\\\\\n  padding: 20px;\\\\\\\\n  text-align: left;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Tab = styled.button`\\\\\\\\n  color: rgb(0, 236, 151);\\\\\\\\n  &:hover {\\\\\\\\n    color: rgba(0, 236, 151, 0.5);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 p-4\\\\\\\\\\\\\\\">\\\\\\\\n      <ul class=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"myTab\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"tablist\\\\\\\\\\\\\\\">\\\\\\\\n        <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n          <Tab\\\\\\\\n            className=\\\\\\\\\\\\\\\"nav-link active\\\\\\\\\\\\\\\"\\\\\\\\n            id=\\\\\\\\\\\\\\\"profile-tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-target=\\\\\\\\\\\\\\\"#profile\\\\\\\\\\\\\\\"\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            aria-controls=\\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\\"\\\\\\\\n            aria-selected=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            Moderators\\\\\\\\n          </Tab>\\\\\\\\n        </li>\\\\\\\\n      </ul>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"tab-content\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"myTabContent\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          class=\\\\\\\\\\\\\\\"tab-pane fade show active\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\\"\\\\\\\\n          role=\\\\\\\\\\\\\\\"tabpanel\\\\\\\\\\\\\\\"\\\\\\\\n          aria-labelledby=\\\\\\\\\\\\\\\"profile-tab\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.admin.moderatorsTab`}\\\\\\\\n            props={{\\\\\\\\n              accessControlInfo,\\\\\\\\n              createEditTeam,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.Editor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_RFP_EDIT\\\\\\\\\\\\\\\";\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://near.social/devhub.near/widget/app?page=community&handle=developer-dao&tab=funding\\\\\\\\\\\\\\\";\\\\\\\\nconst ToCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst CoCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\nconst isAllowedToWriteRfp = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!author || !isAllowedToWriteRfp) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LoginScreen`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nlet editRfpData = null;\\\\\\\\nlet draftRfpData = null;\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editRfpData = Near.view(\\\\\\\\n    `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}`,\\\\\\\\n    \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      rfp_id: parseInt(id),\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  input {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .h5 {\\\\\\\\n    font-size: 18px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .h6 {\\\\\\\\n      font-size: 14px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .text-sm {\\\\\\\\n      font-size: 11px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-light-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 6px;\\\\\\\\n    height: 6px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 1.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nfunction getTimestamp(date) {\\\\\\\\n  // in nanoseconds\\\\\\\\n  const parsedDate = date ? new Date(date) : new Date();\\\\\\\\n  return Math.floor(parsedDate.getTime() * 1000000).toString();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getDate(timestamp) {\\\\\\\\n  const stamp =\\\\\\\\n    !timestamp || timestamp === \\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\" || timestamp === \\\\\\\\\\\\\\\"NaN\\\\\\\\\\\\\\\" ? null : timestamp;\\\\\\\\n  return new Date(parseFloat(stamp / 1000000)).toISOString().split(\\\\\\\\\\\\\\\"T\\\\\\\\\\\\\\\")[0];\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [labels, setLabels] = useState([]);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [submissionDeadline, setSubmissionDeadline] = useState(null);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\n\\\\\\\\nconst [showRfpViewModal, setShowRfpViewModal] = useState(false); // when user creates/edit a RFP and confirm the txn, this is true\\\\\\\\nconst [rfpId, setRfpId] = useState(null);\\\\\\\\nconst [rfpIdsArray, setRfpIdsArray] = useState(null);\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [oldRfpData, setOldRfpData] = useState(null);\\\\\\\\nconst [timeline, setTimeline] = useState({\\\\\\\\n  status: RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS,\\\\\\\\n});\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftRfpData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editRfpData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      labels: labels,\\\\\\\\n      summary: summary,\\\\\\\\n      submission_deadline: getTimestamp(submissionDeadline),\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [title, summary, description, submissionDeadline, labels]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (allowDraft) {\\\\\\\\n    let data = editRfpData || JSON.parse(draftRfpData);\\\\\\\\n    let snapshot = data.snapshot;\\\\\\\\n    if (data) {\\\\\\\\n      if (timestamp) {\\\\\\\\n        snapshot =\\\\\\\\n          data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n          data.snapshot;\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        draftRfpData &&\\\\\\\\n        editRfpData &&\\\\\\\\n        editRfpData.id === JSON.parse(draftRfpData).id\\\\\\\\n      ) {\\\\\\\\n        snapshot = {\\\\\\\\n          ...editRfpData.snapshot,\\\\\\\\n          ...JSON.parse(draftRfpData).snapshot,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n      setRfpId(data.id);\\\\\\\\n      setLabels(snapshot.labels);\\\\\\\\n      setTitle(snapshot.name);\\\\\\\\n      setSummary(snapshot.summary);\\\\\\\\n      setDescription(snapshot.description);\\\\\\\\n      setSubmissionDeadline(getDate(snapshot.submission_deadline));\\\\\\\\n      setTimeline(parseJSON(snapshot.timeline));\\\\\\\\n      if (isEditPage) {\\\\\\\\n        setConsent({ toc: true, coc: true });\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [editRfpData, draftRfpData, allowDraft]);\\\\\\\\n\\\\\\\\n// show loader until LS data is set in state\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n    setLoading(false);\\\\\\\\n  }, 200);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (showRfpViewModal) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  setDisabledSubmitBtn(\\\\\\\\n    !title ||\\\\\\\\n      !description ||\\\\\\\\n      !summary ||\\\\\\\\n      !(labels ?? []).length ||\\\\\\\\n      !submissionDeadline ||\\\\\\\\n      !consent.toc ||\\\\\\\\n      !consent.coc\\\\\\\\n  );\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 10000);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, [\\\\\\\\n  memoizedDraftData,\\\\\\\\n  draftKey,\\\\\\\\n  draftRfpData,\\\\\\\\n  consent,\\\\\\\\n  isTxnCreated,\\\\\\\\n  showRfpViewModal,\\\\\\\\n]);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n// show RFP created after txn approval for popup wallet\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isTxnCreated) {\\\\\\\\n    if (editRfpData) {\\\\\\\\n      setOldRfpData(editRfpData);\\\\\\\\n      if (\\\\\\\\n        editRfpData &&\\\\\\\\n        typeof editRfpData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        oldRfpData &&\\\\\\\\n        typeof oldRfpData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        JSON.stringify(editRfpData) !== JSON.stringify(oldRfpData)\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setRfpId(editRfpData.id);\\\\\\\\n        setShowRfpViewModal(true);\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      const rfpIds = Near.view(\\\\\\\\n        REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        \\\\\\\\\\\\\\\"get_all_rfp_ids\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      if (Array.isArray(rfpIds) && !rfpIdsArray) {\\\\\\\\n        setRfpIdsArray(rfpIds);\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        Array.isArray(rfpIds) &&\\\\\\\\n        Array.isArray(rfpIdsArray) &&\\\\\\\\n        rfpIds.length !== rfpIdsArray.length\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setRfpId(rfpIds[rfpIds.length - 1]);\\\\\\\\n        setShowRfpViewModal(true);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes) {\\\\\\\\n    setLoading(true);\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(REPL_RPC_URL, {\\\\\\\\n          method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n          headers: {\\\\\\\\n            \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          body: JSON.stringify({\\\\\\\\n            jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n            id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n            method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n            params: [props.transactionHashes, context.accountId],\\\\\\\\n          }),\\\\\\\\n        }).then((transaction) => {\\\\\\\\n          const transaction_method_name =\\\\\\\\n            transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n              .method_name;\\\\\\\\n\\\\\\\\n          const is_edit_or_add_rfp_transaction =\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"add_rfp\\\\\\\\\\\\\\\" ||\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"edit_rfp\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n          if (is_edit_or_add_rfp_transaction) {\\\\\\\\n            setShowRfpViewModal(true);\\\\\\\\n            Storage.privateSet(draftKey, null);\\\\\\\\n          }\\\\\\\\n          // show the latest created rfp to user\\\\\\\\n          if (transaction_method_name == \\\\\\\\\\\\\\\"add_rfp\\\\\\\\\\\\\\\") {\\\\\\\\n            useCache(\\\\\\\\n              () =>\\\\\\\\n                Near.asyncView(\\\\\\\\n                  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n                  \\\\\\\\\\\\\\\"get_all_rfp_ids\\\\\\\\\\\\\\\"\\\\\\\\n                ).then((rfpIdsArray) => {\\\\\\\\n                  setRfpId(rfpIdsArray?.[rfpIdsArray?.length - 1]);\\\\\\\\n                }),\\\\\\\\n              props.transactionHashes + \\\\\\\\\\\\\\\"rfpIds\\\\\\\\\\\\\\\",\\\\\\\\n              { subscribe: false }\\\\\\\\n            );\\\\\\\\n          } else {\\\\\\\\n            setRfpId(id);\\\\\\\\n          }\\\\\\\\n          setLoading(false);\\\\\\\\n        }),\\\\\\\\n      props.transactionHashes + context.accountId,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  } else {\\\\\\\\n    if (showRfpViewModal) {\\\\\\\\n      setShowRfpViewModal(false);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    className=\\\\\\\\\\\\\\\"submit-rfp-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst onSubmit = () => {\\\\\\\\n  setCreateTxn(true);\\\\\\\\n  const body = {\\\\\\\\n    rfp_body_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    summary: summary,\\\\\\\\n    submission_deadline: getTimestamp(submissionDeadline),\\\\\\\\n    timeline: timeline,\\\\\\\\n  };\\\\\\\\n  const args = { labels: (labels ?? []).map((i) => i.value), body: body };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editRfpData.id;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_rfp\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_rfp\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [collapseState, setCollapseState] = useState({});\\\\\\\\n\\\\\\\\nconst CollapsibleContainer = ({ title, children, noPaddingTop }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"border-bottom py-4 \\\\\\\\\\\\\\\" +\\\\\\\\n        (noPaddingTop && \\\\\\\\\\\\\\\"pt-0 \\\\\\\\\\\\\\\") +\\\\\\\\n        (collapseState[title] && \\\\\\\\\\\\\\\" pb-0\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className={\\\\\\\\\\\\\\\"d-flex justify-content-between \\\\\\\\\\\\\\\"}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-2 mb-sm-3\\\\\\\\\\\\\\\">{title}</div>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex d-sm-none cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() =>\\\\\\\\n            setCollapseState((prevState) => ({\\\\\\\\n              ...prevState,\\\\\\\\n              [title]: !prevState[title],\\\\\\\\n            }))\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          {!collapseState[title] ? (\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-chevron-up h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          ) : (\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-chevron-down h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className={!collapseState[title] ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"}>{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategoryDropdown = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n      props={{\\\\\\\\n        selected: labels,\\\\\\\\n        onChange: (v) => setLabels(v),\\\\\\\\n        disabled: false,\\\\\\\\n        availableOptions: rfpLabelOptions,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setTitle(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 80,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst SummaryComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: summary,\\\\\\\\n        multiline: true,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSummary(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 500,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst DescriptionComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: description,\\\\\\\\n        onChange: setDescription,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        autoFocus: false,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst ConsentComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"toc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={ToCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Terms and Conditions\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.toc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              toc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"coc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={CoCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Code of Conduct\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.coc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              coc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst SubmissionDeadline = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: submissionDeadline,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSubmissionDeadline(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        type: \\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\\",\\\\\\\\n        inputProps: {\\\\\\\\n          required: true,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"w-100 py-2 px-0 px-sm-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.ViewRfpModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: showRfpViewModal,\\\\\\\\n        isEdit: isEditPage,\\\\\\\\n        rfpId: rfpId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n        onConfirmClick: (value) => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onCancelRFP(value);\\\\\\\\n        },\\\\\\\\n        linkedProposalIds: editRfpData.snapshot.linked_proposals,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.WarningModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isWarningModalOpen,\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setWarningModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Heading className=\\\\\\\\\\\\\\\"px-2 px-sm-0\\\\\\\\\\\\\\\">\\\\\\\\n      {isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} RFP\\\\\\\\n    </Heading>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 px-2 p-lg-0 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4 d-flex flex-wrap gap-6 w-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-2 w-100 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n              <img src={RFP_IMAGE} height={35} width={35} />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Select the relevant categories to help users quickly\\\\\\\\n                    understand the nature of the need. Need guidance? See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href={FundingDocs}\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Funding Docs\\\\\\\\n                    </a>\\\\\\\\n                    .\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {CategoryDropdown}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Highlight the essence of your RFP in a few words. This will appear on your RFP\\\\\\\\u{2019}s detail page and the main RFP feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {TitleComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Explain your RFP briefly. What is the problem or need, desired outcome, and benefit to the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SummaryComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  \\\\\\\\\\\\\\\"Expand on your summary with any relevant details like a detailed explanation of the problem and the expected solution, scope, and deliverables. Also include an estimate range for the project if you have a specific budget. And the selection criteria.\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {DescriptionComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\">\\\\\\\\n                {ConsentComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex justify-content-end gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <Link\\\\\\\\n                  to={\\\\\\\\n                    isEditPage\\\\\\\\n                      ? href({\\\\\\\\n                          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                          params: {\\\\\\\\n                            page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n                            id: parseInt(id),\\\\\\\\n                          },\\\\\\\\n                        })\\\\\\\\n                      : href({\\\\\\\\n                          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                          params: {\\\\\\\\n                            page: \\\\\\\\\\\\\\\"rfps\\\\\\\\\\\\\\\",\\\\\\\\n                          },\\\\\\\\n                        })\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  <Widget\\\\\\\\n                    src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                    props={{\\\\\\\\n                      classNames: {\\\\\\\\n                        root: \\\\\\\\\\\\\\\"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                      },\\\\\\\\n                      label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                      onClick: cleanDraft,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </Link>\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    classNames: {\\\\\\\\n                      root: \\\\\\\\\\\\\\\"d-flex h-100 fw-light-bold btn-outline shadow-none border-1\\\\\\\\\\\\\\\",\\\\\\\\n                    },\\\\\\\\n                    label: (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"circle grey\\\\\\\\\\\\\\\"></div> <div>Submit</div>\\\\\\\\n                      </div>\\\\\\\\n                    ),\\\\\\\\n                    onClick: onSubmit,\\\\\\\\n                    disabled: disabledSubmitBtn,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-1 w-100 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <CollapsibleContainer noPaddingTop={true}>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Submission Deadline\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Enter the deadline for submitting proposals.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SubmissionDeadline}\\\\\\\\n              </InputContainer>\\\\\\\\n            </div>\\\\\\\\n          </CollapsibleContainer>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Timeline\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.TimelineConfigurator`}\\\\\\\\n                props={{\\\\\\\\n                  timeline: timeline,\\\\\\\\n                  setTimeline: (v) => {\\\\\\\\n                    if (editRfpData.snapshot.timeline.status === v.status) {\\\\\\\\n                      return;\\\\\\\\n                    }\\\\\\\\n                    // if proposal selected timeline is selected and no approved proposals exist, show warning\\\\\\\\n                    if (\\\\\\\\n                      v.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED &&\\\\\\\\n                      Array.isArray(approvedProposals) &&\\\\\\\\n                      !approvedProposals.length\\\\\\\\n                    ) {\\\\\\\\n                      setWarningModal(true);\\\\\\\\n                    }\\\\\\\\n\\\\\\\\n                    if (v.status === RFP_TIMELINE_STATUS.CANCELLED) {\\\\\\\\n                      setCancelModal(true);\\\\\\\\n                    }\\\\\\\\n                    setTimeline(v);\\\\\\\\n                  },\\\\\\\\n                  disabled: isEditPage ? false : true,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Feed\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    border-bottom: none !important;\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-btn {\\\\\\\\n    background-color: #3c697d !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .blue-btn {\\\\\\\\n      padding: 0.5rem 0.8rem !important;\\\\\\\\n      min-height: 32px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  .text-normal {\\\\\\\\n    font-weight: normal !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst FeedItem = ({ proposal, index }) => {\\\\\\\\n  const accountId = proposal.author_id;\\\\\\\\n  proposal.timeline = parseJSON(proposal.timeline);\\\\\\\\n  const profile = Social.get(`${accountId}/profile/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\n  // We will have to get the proposal from the contract to get the block height.\\\\\\\\n  const blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n    blockHeight: blockHeight,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const isLinked = isNumber(proposal.linked_rfp);\\\\\\\\n  const rfpData = proposal.rfpData;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n          id: proposal.proposal_id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      onClick={(e) => e.stopPropagation()}\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\n          \\\\\\\\\\\\\\\"proposal-card d-flex justify-content-between gap-2 text-muted cursor-pointer p-3 w-100 flex-wrap flex-sm-nowrap \\\\\\\\\\\\\\\" +\\\\\\\\n          (index !== 0 && \\\\\\\\\\\\\\\" border\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n            props={{\\\\\\\\n              accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"h6 mb-0 text-black\\\\\\\\\\\\\\\">{proposal.name}</div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                props={{\\\\\\\\n                  selected: proposal.labels,\\\\\\\\n                  disabled: true,\\\\\\\\n                  hideDropdown: true,\\\\\\\\n                  onChange: () => {},\\\\\\\\n                  availableOptions: rfpLabelOptions,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {isLinked && rfpData && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-sm text-muted d-flex gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <i class=\\\\\\\\\\\\\\\"bi bi-link-45deg\\\\\\\\\\\\\\\"></i>\\\\\\\\n                In response to RFP :\\\\\\\\n                <a\\\\\\\\n                  className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                  href={href({\\\\\\\\n                    widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                    params: {\\\\\\\\n                      page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n                      id: rfpData.rfp_id,\\\\\\\\n                    },\\\\\\\\n                  })}\\\\\\\\n                  target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {rfpData.name}\\\\\\\\n                </a>\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap flex-sm-nowrap text-sm w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div>#{proposal.proposal_id} \\\\\\\\u{ff65} </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n                By {profile.name ?? accountId} \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              </div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight,\\\\\\\\n                  blockTimestamp: proposal.timestamp,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LikeButton`}\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  proposalId: proposal.id,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  showOverlay: false,\\\\\\\\n                  onClick: () => {},\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"align-self-center\\\\\\\\\\\\\\\" style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n            props={{\\\\\\\\n              timelineStatus: proposal.timeline.status,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getProposal = (proposal_id) => {\\\\\\\\n  return Near.asyncView(\\\\\\\\n    `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}`,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id,\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FeedPage = () => {\\\\\\\\n  State.init({\\\\\\\\n    data: [],\\\\\\\\n    cachedItems: {},\\\\\\\\n    stage: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    sort: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    label: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    input: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    loading: false,\\\\\\\\n    loadingMore: false,\\\\\\\\n    aggregatedCount: null,\\\\\\\\n    currentlyDisplaying: 0,\\\\\\\\n    isFiltered: false,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  const queryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      author_id\\\\\\\\n      block_height\\\\\\\\n      name\\\\\\\\n      labels\\\\\\\\n      summary\\\\\\\\n      editor_id\\\\\\\\n      proposal_id\\\\\\\\n      ts\\\\\\\\n      timeline\\\\\\\\n      views\\\\\\\\n      linked_rfp\\\\\\\\n    }\\\\\\\\n    ${queryName}_aggregate(\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    )  {\\\\\\\\n      aggregate {\\\\\\\\n        count\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  const rfpQueryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const rfpQuery = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${rfpQueryName}_bool_exp = {}) {\\\\\\\\n    ${rfpQueryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {rfp_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      name\\\\\\\\n      rfp_id\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  function separateNumberAndText(str) {\\\\\\\\n    const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n    if (numberRegex.test(str)) {\\\\\\\\n      const number = str.match(numberRegex)[0];\\\\\\\\n      const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n      return { number: parseInt(number), text };\\\\\\\\n    } else {\\\\\\\\n      return { number: null, text: str.trim() };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const buildWhereClause = () => {\\\\\\\\n    let where = {};\\\\\\\\n\\\\\\\\n    if (state.label) {\\\\\\\\n      where = { labels: { _contains: state.label }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.stage) {\\\\\\\\n      // timeline is stored as jsonb\\\\\\\\n      where = {\\\\\\\\n        timeline: { _cast: { String: { _regex: `${state.stage}` } } },\\\\\\\\n        ...where,\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n    if (state.input) {\\\\\\\\n      const { number, text } = separateNumberAndText(state.input);\\\\\\\\n      if (number) {\\\\\\\\n        where = { proposal_id: { _eq: number }, ...where };\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      if (text) {\\\\\\\\n        where = {\\\\\\\\n          _or: [\\\\\\\\n            { name: { _iregex: `${text}` } },\\\\\\\\n            { summary: { _iregex: `${text}` } },\\\\\\\\n            { description: { _iregex: `${text}` } },\\\\\\\\n          ],\\\\\\\\n          ...where,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    State.update({ isFiltered: Object.keys(where).length > 0 });\\\\\\\\n    return where;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const buildOrderByClause = () => {\\\\\\\\n    /**\\\\\\\\n     * TODO\\\\\\\\n     * Most commented -> edit contract and indexer\\\\\\\\n     * Unanswered -> 0 comments\\\\\\\\n     */\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const makeMoreItems = () => {\\\\\\\\n    if (state.aggregatedCount <= state.currentlyDisplaying) return;\\\\\\\\n    fetchProposals(state.data.length);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchProposals = (offset) => {\\\\\\\\n    if (!offset) {\\\\\\\\n      offset = 0;\\\\\\\\n    }\\\\\\\\n    if (state.loading) return;\\\\\\\\n    const FETCH_LIMIT = 10;\\\\\\\\n    const variables = {\\\\\\\\n      limit: FETCH_LIMIT,\\\\\\\\n      offset,\\\\\\\\n      where: buildWhereClause(),\\\\\\\\n    };\\\\\\\\n    fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n      if (result.status === 200) {\\\\\\\\n        if (result.body.data) {\\\\\\\\n          const data = result.body.data?.[queryName];\\\\\\\\n          const totalResult = result.body.data?.[`${queryName}_aggregate`];\\\\\\\\n          const promises = data.map((item) => {\\\\\\\\n            if (isNumber(item.linked_rfp)) {\\\\\\\\n              return fetchGraphQL(rfpQuery, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", {}).then(\\\\\\\\n                (result) => {\\\\\\\\n                  const rfpData = result.body.data?.[rfpQueryName];\\\\\\\\n                  return { ...item, rfpData: rfpData[0] };\\\\\\\\n                }\\\\\\\\n              );\\\\\\\\n            } else {\\\\\\\\n              return Promise.resolve(item);\\\\\\\\n            }\\\\\\\\n          });\\\\\\\\n          Promise.all(promises).then((res) => {\\\\\\\\n            State.update({ aggregatedCount: totalResult.aggregate.count });\\\\\\\\n            fetchBlockHeights(res, offset);\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const renderItem = (item, index) => (\\\\\\\\n    <div\\\\\\\\n      key={item.proposal_id}\\\\\\\\n      className={\\\\\\\\n        (index !== state.data.length - 1 && \\\\\\\\\\\\\\\"border-bottom \\\\\\\\\\\\\\\") + index === 0 &&\\\\\\\\n        \\\\\\\\\\\\\\\" rounded-top-2\\\\\\\\\\\\\\\"\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <FeedItem proposal={item} index={index} />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n  const cachedRenderItem = (item, index) => {\\\\\\\\n    if (props.term) {\\\\\\\\n      return renderItem(item, {\\\\\\\\n        searchKeywords: [props.term],\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    const key = JSON.stringify(item);\\\\\\\\n\\\\\\\\n    if (!(key in state.cachedItems)) {\\\\\\\\n      state.cachedItems[key] = renderItem(item, index);\\\\\\\\n      State.update();\\\\\\\\n    }\\\\\\\\n    return state.cachedItems[key];\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    fetchProposals();\\\\\\\\n  }, [state.sort, state.label, state.stage]);\\\\\\\\n\\\\\\\\n  const mergeItems = (newItems) => {\\\\\\\\n    const items = [\\\\\\\\n      ...new Set([...newItems, ...state.data].map((i) => JSON.stringify(i))),\\\\\\\\n    ].map((i) => JSON.parse(i));\\\\\\\\n    // Sorting in the front end\\\\\\\\n    if (state.sort === \\\\\\\\\\\\\\\"proposal_id\\\\\\\\\\\\\\\" || state.sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.proposal_id - a.proposal_id);\\\\\\\\n    } else if (state.sort === \\\\\\\\\\\\\\\"views\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.views - a.views);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return items;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchBlockHeights = (data, offset) => {\\\\\\\\n    let promises = data.map((item) => getProposal(item.proposal_id));\\\\\\\\n    Promise.all(promises).then((blockHeights) => {\\\\\\\\n      data = data.map((item, index) => ({\\\\\\\\n        ...item,\\\\\\\\n        timeline: JSON.parse(item.timeline),\\\\\\\\n        social_db_post_block_height:\\\\\\\\n          blockHeights[index].social_db_post_block_height,\\\\\\\\n      }));\\\\\\\\n      if (offset) {\\\\\\\\n        let newData = mergeItems(data);\\\\\\\\n        State.update({\\\\\\\\n          data: newData,\\\\\\\\n          currentlyDisplaying: newData.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      } else {\\\\\\\\n        State.update({\\\\\\\\n          data,\\\\\\\\n          currentlyDisplaying: data.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const loader = (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const renderedItems = state.data ? state.data.map(cachedRenderItem) : null;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between flex-wrap gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Heading>\\\\\\\\n          Proposals\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"text-muted text-normal\\\\\\\\\\\\\\\">\\\\\\\\n            ({state.aggregatedCount ?? state.data.length}){\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          </span>\\\\\\\\n        </Heading>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-input`}\\\\\\\\n            props={{\\\\\\\\n              search: state.input,\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-xs-100\\\\\\\\\\\\\\\",\\\\\\\\n              onSearch: (input) => {\\\\\\\\n                State.update({ input });\\\\\\\\n                fetchProposals();\\\\\\\\n              },\\\\\\\\n              onEnter: () => {\\\\\\\\n                fetchProposals();\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-sort`}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ sort: select.value });\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.FilterByLabel`}\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ label: select.value });\\\\\\\\n                },\\\\\\\\n                availableOptions: rfpLabelOptions,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-stage`}\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ stage: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"mt-2 mt-xs-0\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={href({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\" },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                label: (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                    <div>\\\\\\\\n                      <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                    </div>\\\\\\\\n                    Submit Proposal\\\\\\\\n                  </div>\\\\\\\\n                ),\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"blue-btn\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div style={{ minHeight: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {!Array.isArray(state.data) ? (\\\\\\\\n          loader\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 mt-4 py-3 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"container-xl\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"bg-blue text-sm mt-2 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center mb-0\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    <i className=\\\\\\\\\\\\\\\"bi bi-info-circle\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                  <div>\\\\\\\\n                    Welcome to the Infrastructure Committee Proposal Feed! This\\\\\\\\n                    dedicated space makes it easy to submit and track funding\\\\\\\\n                    proposals from the Infrastructure Committee, the primary\\\\\\\\n                    organization overseeing improvements pertaining to wallets,\\\\\\\\n                    indexers, RPC services, explorers, oracles, bridges, NEAR\\\\\\\\n                    Protocol features, and related ecosystem upgrades. You are\\\\\\\\n                    welcome to respond to any RFPs that are accepting\\\\\\\\n                    submissions or submit an independent proposal.\\\\\\\\n                  </div>\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mt-4 border rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                {state.aggregatedCount === 0 ? (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"m-2\\\\\\\\\\\\\\\">\\\\\\\\n                    {state.isFiltered ? (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-danger\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No proposal found for selected filter.\\\\\\\\n                      </div>\\\\\\\\n                    ) : (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-secondary\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No proposal has been created yet.\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                ) : state.aggregatedCount > 0 ? (\\\\\\\\n                  <InfiniteScroll\\\\\\\\n                    pageStart={0}\\\\\\\\n                    loadMore={makeMoreItems}\\\\\\\\n                    hasMore={state.aggregatedCount > state.data.length}\\\\\\\\n                    loader={loader}\\\\\\\\n                    useWindow={false}\\\\\\\\n                    threshold={100}\\\\\\\\n                  >\\\\\\\\n                    {renderedItems}\\\\\\\\n                  </InfiniteScroll>\\\\\\\\n                ) : (\\\\\\\\n                  loader\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn FeedPage(props);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.StatusTag\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst timelineStatus = props.timelineStatus;\\\\\\\\nconst size = props.size ?? \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst getClassNameByStatus = () => {\\\\\\\\n  switch (timelineStatus) {\\\\\\\\n    case RFP_TIMELINE_STATUS.CANCELLED:\\\\\\\\n      return \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\";\\\\\\\\n    case RFP_TIMELINE_STATUS.PROPOSAL_SELECTED:\\\\\\\\n      return \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\";\\\\\\\\n    case RFP_TIMELINE_STATUS.EVALUATION:\\\\\\\\n      return \\\\\\\\\\\\\\\"orange\\\\\\\\\\\\\\\";\\\\\\\\n    default:\\\\\\\\n      return \\\\\\\\\\\\\\\"black\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  font-size: ${({ size }) => {\\\\\\\\n    switch (size) {\\\\\\\\n      case \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\":\\\\\\\\n        return \\\\\\\\\\\\\\\"10px\\\\\\\\\\\\\\\";\\\\\\\\n      case \\\\\\\\\\\\\\\"lg\\\\\\\\\\\\\\\":\\\\\\\\n        return \\\\\\\\\\\\\\\"14px\\\\\\\\\\\\\\\";\\\\\\\\n      default:\\\\\\\\n        return \\\\\\\\\\\\\\\"12px\\\\\\\\\\\\\\\";\\\\\\\\n    }\\\\\\\\n  }};\\\\\\\\n\\\\\\\\n  min-width: fit-content;\\\\\\\\n\\\\\\\\n  .orange-tag {\\\\\\\\n    border: 1px solid #ff7a00 !important;\\\\\\\\n    color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-tag {\\\\\\\\n    border: 1px solid #000 !important;\\\\\\\\n    color: #000 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-tag {\\\\\\\\n    border: 1px solid #979797 !important;\\\\\\\\n    color: #979797 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-tag {\\\\\\\\n    border: 1px solid #04a46e !important;\\\\\\\\n    color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container size={size}>\\\\\\\\n    <div className={getClassNameByStatus() + \\\\\\\\\\\\\\\"-tag fw-bold rounded-2 p-1 px-2\\\\\\\\\\\\\\\"}>\\\\\\\\n      {(timelineStatus ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.organism.Navbar\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst page = props.page;\\\\\\\\n\\\\\\\\nconst [showMenu, setShowMenu] = useState(false);\\\\\\\\n\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst Logo = () => {\\\\\\\\n  const Wrapper = styled.div`\\\\\\\\n    .text-lg {\\\\\\\\n      font-size: 22px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    a:hover {\\\\\\\\n      text-decoration: none;\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <Link\\\\\\\\n        to={linkHref({\\\\\\\\n          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n          params: { page: \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\" },\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <img\\\\\\\\n            height={35}\\\\\\\\n            width={35}\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicgbhtzxgdb3noivjfx4xcwsx6nq5pnjttdc4fpgfq74ynqj5h6mq\\\\\\\\\\\\\\\"\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          <b className=\\\\\\\\\\\\\\\"text-lg\\\\\\\\\\\\\\\">infrastructure committee</b>\\\\\\\\n        </div>\\\\\\\\n      </Link>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst ProfileIcon = () => {\\\\\\\\n  const Wrapper = styled.svg`\\\\\\\\n    padding: 0.25rem;\\\\\\\\n    @media screen and (max-width: 768px) {\\\\\\\\n      display: none;\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.ProfileCard`}\\\\\\\\n      props={{ iconOnly: true, accountId: context.accountId || null }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst MenuIcon = () => (\\\\\\\\n  <svg\\\\\\\\n    xmlns=\\\\\\\\\\\\\\\"http://www.w3.org/2000/svg\\\\\\\\\\\\\\\"\\\\\\\\n    width=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n    height=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n    viewBox=\\\\\\\\\\\\\\\"0 0 16 16\\\\\\\\\\\\\\\"\\\\\\\\n    fill=\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ height: 20, width: 20 }}\\\\\\\\n  >\\\\\\\\n    <path\\\\\\\\n      fill-rule=\\\\\\\\\\\\\\\"evenodd\\\\\\\\\\\\\\\"\\\\\\\\n      clip-rule=\\\\\\\\\\\\\\\"evenodd\\\\\\\\\\\\\\\"\\\\\\\\n      d=\\\\\\\\\\\\\\\"M2 12.2986H14V13.3732H2V12.2986ZM2 9.07471H14V10.1493H2V9.07471ZM2 5.85083H14V6.92546H2V5.85083ZM2 2.62695H14V3.70158H2V2.62695Z\\\\\\\\\\\\\\\"\\\\\\\\n      fill=\\\\\\\\\\\\\\\"#818181\\\\\\\\\\\\\\\"\\\\\\\\n    />\\\\\\\\n  </svg>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Navbar = styled.div`\\\\\\\\n  padding: 1.5rem 0rem;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n\\\\\\\\n  background: #f4f4f4;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1.875rem 1.375rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinksContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 1.5rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: none;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst MobileMenu = styled.button`\\\\\\\\n  all: unset;\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nlet links = [\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Proposals\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"RFPs\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"rfps\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"About\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (isModerator) {\\\\\\\\n  links = [\\\\\\\\n    {\\\\\\\\n      title: \\\\\\\\\\\\\\\"Admin\\\\\\\\\\\\\\\",\\\\\\\\n      href: \\\\\\\\\\\\\\\"admin\\\\\\\\\\\\\\\",\\\\\\\\n      links: [],\\\\\\\\n    },\\\\\\\\n    ...links,\\\\\\\\n  ];\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst MobileNav = styled.div`\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: flex;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  position: absolute;\\\\\\\\n  top: 0;\\\\\\\\n  right: 0;\\\\\\\\n\\\\\\\\n  width: 207px;\\\\\\\\n\\\\\\\\n  padding: 24px 36px 36px 16px;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: flex-end;\\\\\\\\n  gap: 2.5rem;\\\\\\\\n  flex-shrink: 0;\\\\\\\\n\\\\\\\\n  border-radius: 0px 0px 0px 16px;\\\\\\\\n  background: rgba(41, 41, 41, 0.6);\\\\\\\\n  backdrop-filter: blur(5px);\\\\\\\\n\\\\\\\\n  z-index: 50;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst MobileLink = styled.a`\\\\\\\\n  color: #f4f4f4 !important;\\\\\\\\n  font-size: 20px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 20px; /* 100% */\\\\\\\\n  margin-bottom: 1rem;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    color: #00ec97 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n    color: #00ec97 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Navbar className=\\\\\\\\\\\\\\\"position-relative\\\\\\\\\\\\\\\">\\\\\\\\n    <Logo />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <LinksContainer>\\\\\\\\n        {links.map((link) => (\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.NavbarDropdown`}\\\\\\\\n            props={{\\\\\\\\n              title: link.title,\\\\\\\\n              href: link.href,\\\\\\\\n              links: link.links,\\\\\\\\n              page: page,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        ))}\\\\\\\\n      </LinksContainer>\\\\\\\\n      {context.accountId && <ProfileIcon />}\\\\\\\\n      <MobileMenu onClick={() => setShowMenu(!showMenu)}>\\\\\\\\n        <MenuIcon />\\\\\\\\n      </MobileMenu>\\\\\\\\n    </div>\\\\\\\\n    {showMenu && (\\\\\\\\n      <MobileNav>\\\\\\\\n        <div\\\\\\\\n          onClick={() => setShowMenu(!showMenu)}\\\\\\\\n          style={{ cursor: \\\\\\\\\\\\\\\"pointer\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-x\\\\\\\\\\\\\\\" style={{ fontSize: 20, color: \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\" }}></i>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n          {links.map((link, idx) =>\\\\\\\\n            link.href ? (\\\\\\\\n              <MobileLink\\\\\\\\n                key={`mobile-link-${idx}`}\\\\\\\\n                className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                href={`/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=${link.href}`}\\\\\\\\n              >\\\\\\\\n                {link.title}\\\\\\\\n              </MobileLink>\\\\\\\\n            ) : (\\\\\\\\n              link.links.map((it, idx) =>\\\\\\\\n                it.href.startsWith(\\\\\\\\\\\\\\\"http://\\\\\\\\\\\\\\\") ||\\\\\\\\n                it.href.startsWith(\\\\\\\\\\\\\\\"https://\\\\\\\\\\\\\\\") ? (\\\\\\\\n                  <MobileLink\\\\\\\\n                    key={`nested-link-${idx}`}\\\\\\\\n                    className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                    href={it.href}\\\\\\\\n                    target=\\\\\\\\\\\\\\\"no_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    /{it.title}\\\\\\\\n                  </MobileLink>\\\\\\\\n                ) : (\\\\\\\\n                  <MobileLink\\\\\\\\n                    key={`nested-link-${idx}`}\\\\\\\\n                    className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                    href={`/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=${it.href}`}\\\\\\\\n                  >\\\\\\\\n                    /{it.title}\\\\\\\\n                  </MobileLink>\\\\\\\\n                )\\\\\\\\n              )\\\\\\\\n            )\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </MobileNav>\\\\\\\\n    )}\\\\\\\\n  </Navbar>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.Compose\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst EmbeddCSS = `\\\\\\\\n  .CodeMirror {\\\\\\\\n   margin-inline:10px;\\\\\\\\n   border-radius:5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  .nav-link {\\\\\\\\n    color: inherit !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card-header {\\\\\\\\n    padding-bottom: 0px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Compose = ({\\\\\\\\n  data,\\\\\\\\n  onChange,\\\\\\\\n  autocompleteEnabled,\\\\\\\\n  placeholder,\\\\\\\\n  height,\\\\\\\\n  embeddCSS,\\\\\\\\n  showProposalIdAutoComplete,\\\\\\\\n  onChangeKeyup,\\\\\\\\n  handler,\\\\\\\\n}) => {\\\\\\\\n  State.init({\\\\\\\\n    data: data,\\\\\\\\n    selectedTab: \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\",\\\\\\\\n    autoFocus: false,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    if (typeof onChange === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\") {\\\\\\\\n      onChange(state.data);\\\\\\\\n    }\\\\\\\\n  }, [state.data]);\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    // for clearing editor after txn approval/ showing draft state\\\\\\\\n    if (data !== state.data || handler !== state.handler) {\\\\\\\\n      State.update({ data: data, handler: handler });\\\\\\\\n    }\\\\\\\\n  }, [data, handler]);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"card-header\\\\\\\\\\\\\\\" style={{ position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <div>\\\\\\\\n            <ul class=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\">\\\\\\\\n              <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class={`nav-link ${\\\\\\\\n                    state.selectedTab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  }`}\\\\\\\\n                  onClick={() =>\\\\\\\\n                    State.update({ selectedTab: \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\", autoFocus: true })\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  Write\\\\\\\\n                </button>\\\\\\\\n              </li>\\\\\\\\n              <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class={`nav-link ${\\\\\\\\n                    state.selectedTab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  }`}\\\\\\\\n                  onClick={() => State.update({ selectedTab: \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" })}\\\\\\\\n                >\\\\\\\\n                  Preview\\\\\\\\n                </button>\\\\\\\\n              </li>\\\\\\\\n            </ul>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {state.selectedTab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? (\\\\\\\\n          <>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.SimpleMDE`}\\\\\\\\n              props={{\\\\\\\\n                data: { handler: state.handler, content: state.data },\\\\\\\\n                onChange: (content) => {\\\\\\\\n                  State.update({ data: content, handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\" });\\\\\\\\n                },\\\\\\\\n                placeholder: placeholder,\\\\\\\\n                height,\\\\\\\\n                embeddCSS: embeddCSS || EmbeddCSS,\\\\\\\\n                showAutoComplete: autocompleteEnabled,\\\\\\\\n                showProposalIdAutoComplete: showProposalIdAutoComplete,\\\\\\\\n                autoFocus: state.autoFocus,\\\\\\\\n                onChangeKeyup: onChangeKeyup,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n              props={{\\\\\\\\n                text: state.data,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn Compose(props);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Editor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst { id, timestamp, rfp_id } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://near.social/${REPL_DEVHUB}/widget/app?page=community&handle=developer-dao&tab=funding\\\\\\\\\\\\\\\";\\\\\\\\nconst ToCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst CoCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nif (!author) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LoginScreen`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nlet editProposalData = null;\\\\\\\\nlet draftProposalData = null;\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_PROPOSAL_EDIT\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editProposalData = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id: parseInt(id),\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  input {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .h6 {\\\\\\\\n      font-size: 14px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .text-sm {\\\\\\\\n      font-size: 11px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #03ba16 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst tokensOptions = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\" },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"OTHER\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst [linkedRfp, setLinkedRfp] = useState(rfp_id ? parseInt(rfp_id) : null);\\\\\\\\nconst [labels, setLabels] = useState([]);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [linkedProposals, setLinkedProposals] = useState([]);\\\\\\\\nconst [receiverAccount, setReceiverAccount] = useState(context.accountId);\\\\\\\\nconst [requestedSponsorshipAmount, setRequestedSponsorshipAmount] =\\\\\\\\n  useState(null);\\\\\\\\nconst [requestedSponsorshipToken, setRequestedSponsorshipToken] = useState(\\\\\\\\n  tokensOptions[2]\\\\\\\\n);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\nconst [selectedStatus, setSelectedStatus] = useState(\\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\");\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\n\\\\\\\\nconst [showProposalViewModal, setShowProposalViewModal] = useState(false); // when user creates/edit a proposal and confirm the txn, this is true\\\\\\\\nconst [proposalId, setProposalId] = useState(null);\\\\\\\\nconst [proposalIdsArray, setProposalIdsArray] = useState(null);\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [oldProposalData, setOldProposalData] = useState(null);\\\\\\\\nconst [supervisor, setSupervisor] = useState(null);\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftProposalData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editProposalData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      linked_rfp: linkedRfp,\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      labels: labels,\\\\\\\\n      summary: summary,\\\\\\\\n      requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n      requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n      receiver_account: receiverAccount,\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [\\\\\\\\n    linkedRfp,\\\\\\\\n    title,\\\\\\\\n    summary,\\\\\\\\n    description,\\\\\\\\n    labels,\\\\\\\\n    requestedSponsorshipAmount,\\\\\\\\n    requestedSponsorshipToken,\\\\\\\\n    receiverAccount,\\\\\\\\n  ]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (allowDraft) {\\\\\\\\n    let data = editProposalData || JSON.parse(draftProposalData);\\\\\\\\n    let snapshot = data.snapshot;\\\\\\\\n    if (data) {\\\\\\\\n      if (timestamp) {\\\\\\\\n        snapshot =\\\\\\\\n          data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n          data.snapshot;\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        draftProposalData &&\\\\\\\\n        editProposalData &&\\\\\\\\n        editProposalData.id === JSON.parse(draftProposalData).id\\\\\\\\n      ) {\\\\\\\\n        snapshot = {\\\\\\\\n          ...editProposalData.snapshot,\\\\\\\\n          ...JSON.parse(draftProposalData).snapshot,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n      if (!isNumber(linkedRfp)) {\\\\\\\\n        setLinkedRfp(snapshot.linked_rfp);\\\\\\\\n      }\\\\\\\\n      setLabels(snapshot.labels ?? []);\\\\\\\\n      setTitle(snapshot.name);\\\\\\\\n      setSummary(snapshot.summary);\\\\\\\\n      setDescription(snapshot.description);\\\\\\\\n      setReceiverAccount(snapshot.receiver_account);\\\\\\\\n      setRequestedSponsorshipAmount(snapshot.requested_sponsorship_usd_amount);\\\\\\\\n      setSupervisor(snapshot.supervisor);\\\\\\\\n\\\\\\\\n      const token = tokensOptions.find(\\\\\\\\n        (item) => item.value === snapshot.requested_sponsorship_paid_in_currency\\\\\\\\n      );\\\\\\\\n      setRequestedSponsorshipToken(token ?? tokensOptions[2]);\\\\\\\\n      if (isEditPage) {\\\\\\\\n        setConsent({ toc: true, coc: true });\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [editProposalData, draftProposalData, allowDraft]);\\\\\\\\n\\\\\\\\n// show loader until LS data is set in state\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n    setLoading(false);\\\\\\\\n  }, 500);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (showProposalViewModal) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  setDisabledSubmitBtn(\\\\\\\\n    isTxnCreated ||\\\\\\\\n      !title ||\\\\\\\\n      !description ||\\\\\\\\n      !summary ||\\\\\\\\n      !(labels ?? []).length ||\\\\\\\\n      !requestedSponsorshipAmount ||\\\\\\\\n      !receiverAccount ||\\\\\\\\n      !consent.toc ||\\\\\\\\n      !consent.coc\\\\\\\\n  );\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 10000);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, [\\\\\\\\n  memoizedDraftData,\\\\\\\\n  draftKey,\\\\\\\\n  draftProposalData,\\\\\\\\n  consent,\\\\\\\\n  isTxnCreated,\\\\\\\\n  showProposalViewModal,\\\\\\\\n]);\\\\\\\\n\\\\\\\\n// set RFP labels, disable link rfp change when linked rfp is past accepting stage\\\\\\\\nconst [disabledLinkRFP, setDisableLinkRFP] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (linkedRfp) {\\\\\\\\n    Near.asyncView(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n      rfp_id: linkedRfp.value ?? linkedRfp,\\\\\\\\n    }).then((i) => {\\\\\\\\n      const timeline = parseJSON(i.snapshot.timeline);\\\\\\\\n      setDisableLinkRFP(\\\\\\\\n        !isModerator &&\\\\\\\\n          timeline.status !== RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS\\\\\\\\n      );\\\\\\\\n      setLabels(i.snapshot.labels);\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [linkedRfp]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    editProposalData &&\\\\\\\\n    editProposalData?.snapshot?.linked_proposals?.length > 0\\\\\\\\n  ) {\\\\\\\\n    editProposalData.snapshot.linked_proposals.map((item) => {\\\\\\\\n      useCache(\\\\\\\\n        () =>\\\\\\\\n          Near.asyncView(\\\\\\\\n            REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n            \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n            {\\\\\\\\n              proposal_id: parseInt(item),\\\\\\\\n            }\\\\\\\\n          ).then((proposal) => {\\\\\\\\n            setLinkedProposals([\\\\\\\\n              ...linkedProposals,\\\\\\\\n              {\\\\\\\\n                label: \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + proposal.id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + proposal.snapshot.name,\\\\\\\\n                value: proposal.id,\\\\\\\\n              },\\\\\\\\n            ]);\\\\\\\\n          }),\\\\\\\\n        item + \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\",\\\\\\\\n        { subscribe: false }\\\\\\\\n      );\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [editProposalData]);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n// show proposal created after txn approval for popup wallet\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isTxnCreated) {\\\\\\\\n    if (editProposalData) {\\\\\\\\n      setOldProposalData(editProposalData);\\\\\\\\n      if (\\\\\\\\n        editProposalData &&\\\\\\\\n        typeof editProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        oldProposalData &&\\\\\\\\n        typeof oldProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        JSON.stringify(editProposalData) !== JSON.stringify(oldProposalData)\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(editProposalData.id);\\\\\\\\n        setShowProposalViewModal(true);\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      const proposalIds = Near.view(\\\\\\\\n        REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      if (Array.isArray(proposalIds) && !proposalIdsArray) {\\\\\\\\n        setProposalIdsArray(proposalIds);\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        Array.isArray(proposalIds) &&\\\\\\\\n        Array.isArray(proposalIdsArray) &&\\\\\\\\n        proposalIds.length !== proposalIdsArray.length\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(proposalIds[proposalIds.length - 1]);\\\\\\\\n        setShowProposalViewModal(true);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  setLoading(false);\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes) {\\\\\\\\n    setLoading(true);\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(REPL_RPC_URL, {\\\\\\\\n          method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n          headers: {\\\\\\\\n            \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          body: JSON.stringify({\\\\\\\\n            jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n            id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n            method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n            params: [props.transactionHashes, context.accountId],\\\\\\\\n          }),\\\\\\\\n        }).then((transaction) => {\\\\\\\\n          const transaction_method_name =\\\\\\\\n            transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n              .method_name;\\\\\\\\n\\\\\\\\n          const is_edit_or_add_post_transaction =\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\" ||\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n          if (is_edit_or_add_post_transaction) {\\\\\\\\n            setShowProposalViewModal(true);\\\\\\\\n            Storage.privateSet(draftKey, null);\\\\\\\\n          }\\\\\\\\n          // show the latest created proposal to user\\\\\\\\n          if (transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\") {\\\\\\\\n            useCache(\\\\\\\\n              () =>\\\\\\\\n                Near.asyncView(\\\\\\\\n                  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n                  \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n                ).then((proposalIdsArray) => {\\\\\\\\n                  setProposalId(\\\\\\\\n                    proposalIdsArray?.[proposalIdsArray?.length - 1]\\\\\\\\n                  );\\\\\\\\n                }),\\\\\\\\n              props.transactionHashes + \\\\\\\\\\\\\\\"proposalIds\\\\\\\\\\\\\\\",\\\\\\\\n              { subscribe: false }\\\\\\\\n            );\\\\\\\\n          } else {\\\\\\\\n            setProposalId(id);\\\\\\\\n          }\\\\\\\\n          setLoading(false);\\\\\\\\n        }),\\\\\\\\n      props.transactionHashes + context.accountId,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  } else {\\\\\\\\n    if (showProposalViewModal) {\\\\\\\\n      setShowProposalViewModal(false);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst DropdowntBtnContainer = styled.div`\\\\\\\\n  font-size: 13px;\\\\\\\\n  min-width: 150px;\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .select-header {\\\\\\\\n    display: flex;\\\\\\\\n    justify-content: space-between;\\\\\\\\n    align-items: center;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    border-radius-top: 5px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    background-color: #fff;\\\\\\\\n    border-radius: 5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .no-border {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .options-card {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 0;\\\\\\\\n    width: 200%;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    background-color: #fff;\\\\\\\\n    padding: 0.5rem;\\\\\\\\n    z-index: 99;\\\\\\\\n    font-size: 13px;\\\\\\\\n    border-radius:0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .left {\\\\\\\\n    right: 0 !important;\\\\\\\\n    left: auto !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .options-card {\\\\\\\\n      right: 0 !important;\\\\\\\\n      left: auto !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option {\\\\\\\\n    margin-block: 5px;\\\\\\\\n    padding: 10px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    border-bottom: 1px solid #f0f0f0;\\\\\\\\n    transition: background-color 0.3s ease;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:hover {\\\\\\\\n    background-color: #f0f0f0; /* Custom hover effect color */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:last-child {\\\\\\\\n    border-bottom: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f4f4f4 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    font-weight: 500;\\\\\\\\n    color: #b3b3b3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 8px;\\\\\\\\n    height: 8px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green {\\\\\\\\n    background-color: #04a46e;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"submit-proposal-draft-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SubmitBtn = () => {\\\\\\\\n  const btnOptions = [\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Submit Draft\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"The author can still edit the proposal and build consensus before sharing it with sponsors.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Ready for Review\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"Start the official review process with sponsors. This will lock the editing function, but comments are still open.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"review\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  const handleOptionClick = (option) => {\\\\\\\\n    setDraftBtnOpen(false);\\\\\\\\n    setSelectedStatus(option.value);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const toggleDropdown = () => {\\\\\\\\n    setDraftBtnOpen(!isDraftBtnOpen);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const handleSubmit = () => {\\\\\\\\n    const isDraft = selectedStatus === \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\";\\\\\\\\n    if (isDraft) {\\\\\\\\n      onSubmit({ isDraft });\\\\\\\\n      cleanDraft();\\\\\\\\n    } else {\\\\\\\\n      setReviewModal(true);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <DropdowntBtnContainer>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"custom-select\\\\\\\\\\\\\\\"\\\\\\\\n        tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n        onBlur={() => setDraftBtnOpen(false)}\\\\\\\\n      >\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\n            \\\\\\\\\\\\\\\"select-header d-flex gap-1 align-items-center submit-draft-button \\\\\\\\\\\\\\\" +\\\\\\\\n            (disabledSubmitBtn && \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\")\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            onClick={() => !disabledSubmitBtn && handleSubmit()}\\\\\\\\n            className=\\\\\\\\\\\\\\\"p-2 d-flex gap-2 align-items-center \\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {isTxnCreated ? (\\\\\\\\n              LoadingButtonSpinner\\\\\\\\n            ) : (\\\\\\\\n              <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + selectedOption.iconColor}></div>\\\\\\\\n            )}\\\\\\\\n            <div className={`selected-option`}>{selectedOption.label}</div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"h-100 p-2\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ borderLeft: \\\\\\\\\\\\\\\"1px solid #ccc\\\\\\\\\\\\\\\" }}\\\\\\\\n            onClick={!disabledSubmitBtn && toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <i class={`bi bi-chevron-${isDraftBtnOpen ? \\\\\\\\\\\\\\\"up\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\"}`}></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {isDraftBtnOpen && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"options-card\\\\\\\\\\\\\\\">\\\\\\\\n            {btnOptions.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`option ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n              >\\\\\\\\n                <div className={`d-flex gap-2 align-items-center`}>\\\\\\\\n                  <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + option.iconColor}></div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">{option.label}</div>\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-muted text-xs\\\\\\\\\\\\\\\">{option.description}</div>\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </DropdowntBtnContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst onSubmit = ({ isDraft, isCancel }) => {\\\\\\\\n  setCreateTxn(true);\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"submitting transaction\\\\\\\\\\\\\\\");\\\\\\\\n  const linkedProposalsIds = linkedProposals.map((item) => item.value) ?? [];\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    linked_rfp: linkedRfp?.value,\\\\\\\\n    category: \\\\\\\\\\\\\\\"Infrastructure Committee\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    summary: summary,\\\\\\\\n    linked_proposals: linkedProposalsIds,\\\\\\\\n    requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n    requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n    receiver_account: receiverAccount,\\\\\\\\n    requested_sponsor: \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\",\\\\\\\\n    supervisor: supervisor,\\\\\\\\n    timeline: isCancel\\\\\\\\n      ? {\\\\\\\\n          status: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        }\\\\\\\\n      : isDraft\\\\\\\\n      ? { status: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\" }\\\\\\\\n      : {\\\\\\\\n          status: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        },\\\\\\\\n  };\\\\\\\\n  const args = {\\\\\\\\n    labels: linkedRfp ? [] : (labels ?? []).map((i) => i.value ?? i),\\\\\\\\n    body: body,\\\\\\\\n  };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editProposalData.id;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [collapseState, setCollapseState] = useState({});\\\\\\\\n\\\\\\\\nconst CollapsibleContainer = ({ title, children, noPaddingTop }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"border-bottom py-4 \\\\\\\\\\\\\\\" +\\\\\\\\n        (noPaddingTop && \\\\\\\\\\\\\\\"pt-0 \\\\\\\\\\\\\\\") +\\\\\\\\n        (collapseState[title] && \\\\\\\\\\\\\\\" pb-0\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className={\\\\\\\\\\\\\\\"d-flex justify-content-between \\\\\\\\\\\\\\\"}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-2 mb-sm-3\\\\\\\\\\\\\\\">{title}</div>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex d-sm-none cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() =>\\\\\\\\n            setCollapseState((prevState) => ({\\\\\\\\n              ...prevState,\\\\\\\\n              [title]: !prevState[title],\\\\\\\\n            }))\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          {!collapseState[title] ? (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-up h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          ) : (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-down h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className={!collapseState[title] ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"}>{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategoryDropdown = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n      props={{\\\\\\\\n        selected: labels,\\\\\\\\n        onChange: (v) => setLabels(v),\\\\\\\\n        disabled: linkedRfp, // when RFP is linked, labels are disabled\\\\\\\\n        label: linkedRfp\\\\\\\\n          ? \\\\\\\\\\\\\\\"These categories are inherited from your selected RFP and can\\\\\\\\u{2019}t change\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"Select Category\\\\\\\\\\\\\\\",\\\\\\\\n        availableOptions: rfpLabelOptions,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData, linkedRfp, labels]);\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setTitle(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 80,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst SummaryComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: summary,\\\\\\\\n        multiline: true,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSummary(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 500,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst DescriptionComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: description,\\\\\\\\n        onChange: setDescription,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        autoFocus: false,\\\\\\\\n        showProposalIdAutoComplete: true,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ConsentComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"toc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={ToCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Infrastructure Committee\\\\\\\\u{2019}s Terms and Conditions\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.toc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              toc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"coc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={CoCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Infrastructure Committee\\\\\\\\u{2019}s Code of Conduct\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.coc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              coc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ProfileComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"mob.near/widget/Profile.ShortInlineBlock\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        accountId: author,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst LinkRFPComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedRfpDropdown`}\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedRfp,\\\\\\\\n          linkedRfp: linkedRfp,\\\\\\\\n          disabled: disabledLinkRFP,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData, disabledLinkRFP]);\\\\\\\\n\\\\\\\\nconst LinkedProposalsComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">\\\\\\\\n        Link any relevant proposals (e.g. previous milestones).\\\\\\\\n      </div>\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposalsDropdown`}\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedProposals,\\\\\\\\n          linkedProposals: linkedProposals,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ReceiverAccountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.AccountInput`}\\\\\\\\n      props={{\\\\\\\\n        value: receiverAccount,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Enter Address\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: setReceiverAccount,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst AmountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: requestedSponsorshipAmount,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          setRequestedSponsorshipAmount(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\",\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"$\\\\\\\\\\\\\\\",\\\\\\\\n          inputmode: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\",\\\\\\\\n          pattern: \\\\\\\\\\\\\\\"[0-9]*\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst CurrencyComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n      props={{\\\\\\\\n        options: tokensOptions,\\\\\\\\n        selectedValue: requestedSponsorshipToken,\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setRequestedSponsorshipToken(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-0 px-sm-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    <Heading className=\\\\\\\\\\\\\\\"px-2 px-sm-0\\\\\\\\\\\\\\\">\\\\\\\\n      {isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} Proposal\\\\\\\\n    </Heading>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.ViewProposalModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: showProposalViewModal,\\\\\\\\n        isEdit: isEditPage,\\\\\\\\n        proposalId: proposalId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmReviewModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          cleanDraft();\\\\\\\\n          onSubmit({ isDraft: false });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onSubmit({ isCancel: true });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 px-2 p-lg-0 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4 d-flex flex-wrap gap-6 w-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-2 w-100 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n                props={{\\\\\\\\n                  accountId: author,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Link RFP (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    \\\\\\\\\\\\\\\"Link this proposal if it is a response to a specific RFP. You can only link to active RFPs in the \\\\\\\\u{201c}Accepting Submission\\\\\\\\u{201d} stage. You can only link to one RFP.\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {LinkRFPComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Select the relevant categories that best align with your\\\\\\\\n                    contribution to the NEAR developer community. Need guidance?\\\\\\\\n                    See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href={FundingDocs}\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Funding Docs\\\\\\\\n                    </a>\\\\\\\\n                    .\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {CategoryDropdown}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Highlight the essence of your proposal in a few words. This will appear on your proposal\\\\\\\\u{2019}s detail page and the main proposal feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {TitleComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Explain your proposal briefly. This is your chance to make a good first impression on the community. Include what needs or goals your work will address, your solution, and the benefit for the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SummaryComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Expand on your summary with any relevant details like your\\\\\\\\n                    contribution timeline, key milestones, team background, and\\\\\\\\n                    a clear breakdown of how the funds will be used. Proposals\\\\\\\\n                    should be simple and clear (e.g. 1 month). For more complex\\\\\\\\n                    projects, treat each milestone as a separate proposal.\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {DescriptionComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\">\\\\\\\\n                {ConsentComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <div>\\\\\\\\n                  {isEditPage && (\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                          </div>\\\\\\\\n                        ),\\\\\\\\n                        onClick: () => setCancelModal(true),\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n                <div\\\\\\\\n                  className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\"\\\\\\\\n                  style={{\\\\\\\\n                    height: isDraftBtnOpen ? \\\\\\\\\\\\\\\"25vh\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"auto\\\\\\\\\\\\\\\",\\\\\\\\n                    alignItems: isDraftBtnOpen ? \\\\\\\\\\\\\\\"flex-start\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                >\\\\\\\\n                  <Link\\\\\\\\n                    to={\\\\\\\\n                      isEditPage\\\\\\\\n                        ? href({\\\\\\\\n                            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                              id: parseInt(id),\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                        : href({\\\\\\\\n                            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                    }\\\\\\\\n                  >\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                        onClick: cleanDraft,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </Link>\\\\\\\\n                  <SubmitBtn />\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-1 w-100 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <CollapsibleContainer noPaddingTop={true} title=\\\\\\\\\\\\\\\"Author Details\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                {ProfileComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n            </div>\\\\\\\\n          </CollapsibleContainer>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Link Proposals (Optional)\\\\\\\\\\\\\\\">\\\\\\\\n              {LinkedProposalsComponent}\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Funding Details\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Recipient NEAR Wallet Address\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Enter the address that will receive the funds. We\\\\\\\\u{2019}ll need this to send a test transaction once your proposal is approved.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {ReceiverAccountComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading={\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Recipient Verification Status\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"custom-tooltip\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-info-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        <span class=\\\\\\\\\\\\\\\"tooltiptext\\\\\\\\\\\\\\\">\\\\\\\\n                          To get approved and receive payments on our platform,\\\\\\\\n                          you must complete KYC/KYB verification using Fractal,\\\\\\\\n                          a trusted identity verification solution. This helps\\\\\\\\n                          others trust transactions with your account. Click\\\\\\\\n                          \\\\\\\\\\\\\\\"Get Verified\\\\\\\\\\\\\\\" to start. <br />\\\\\\\\n                          <br />\\\\\\\\n                          Once verified, your profile will display a badge,\\\\\\\\n                          which is valid for 365 days from the date of your\\\\\\\\n                          verification. You must renew your verification upon\\\\\\\\n                          expiration OR if any of your personal information\\\\\\\\n                          changes.\\\\\\\\n                        </span>\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  }\\\\\\\\n                  description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"border border-1 p-3 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.VerificationStatus`}\\\\\\\\n                      props={{\\\\\\\\n                        receiverAccount: receiverAccount,\\\\\\\\n                        showGetVerifiedBtn: true,\\\\\\\\n                        imageSize: 30,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Total Amount (USD)\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    <>\\\\\\\\n                      Enter the exact amount you are seeking. See\\\\\\\\n                      <a\\\\\\\\n                        href={FundingDocs}\\\\\\\\n                        className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        Funding Documentation\\\\\\\\n                      </a>\\\\\\\\n                      for guidelines.\\\\\\\\n                    </>\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {AmountComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Currency\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Select your preferred currency for receiving funds. Note: The exchange rate for NEAR tokens will be the closing rate at the day of the invoice.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {CurrencyComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.core.lib.contract\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nfunction ensureOtherIsLast(arr) {\\\\\\\\n  const otherIndex = arr.findIndex((item) => item.value === \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  if (otherIndex !== -1) {\\\\\\\\n    const [otherItem] = arr.splice(otherIndex, 1);\\\\\\\\n    arr.push(otherItem);\\\\\\\\n  }\\\\\\\\n  return arr;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getGlobalLabels() {\\\\\\\\n  let labels = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_global_labels\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n  if (labels !== null) {\\\\\\\\n    labels = ensureOtherIsLast(labels);\\\\\\\\n  }\\\\\\\\n  return labels ?? null;\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn {\\\\\\\\n  getGlobalLabels,\\\\\\\\n};\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.DropDown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\nconst options = props.options; // [{label:\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",value:\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\nconst label = props.label;\\\\\\\\nconst onUpdate = props.onUpdate ?? (() => {});\\\\\\\\nconst selectedValue = props.selectedValue;\\\\\\\\nconst [selected, setSelected] = useState(selectedValue);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(selectedValue) !== JSON.stringify(selected)) {\\\\\\\\n    setSelected(selectedValue);\\\\\\\\n  }\\\\\\\\n}, [selectedValue]);\\\\\\\\n\\\\\\\\nconst StyledDropdown = styled.div`\\\\\\\\n  .drop-btn {\\\\\\\\n    width: 100%;\\\\\\\\n    max-width: 200px;\\\\\\\\n    text-align: left;\\\\\\\\n    padding-inline: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item.active,\\\\\\\\n  .dropdown-item:active {\\\\\\\\n    background-color: #f0f0f0 !important;\\\\\\\\n    color: black;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  onUpdate(selected);\\\\\\\\n}, [selected]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"dropdown w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <StyledDropdown>\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"btn drop-btn text-truncate dropdown-toggle bg-white border rounded-2\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n          aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          {label} {selected && label && \\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"} {selected.label}\\\\\\\\n        </button>\\\\\\\\n        <ul className=\\\\\\\\\\\\\\\"dropdown-menu dropdown-menu-end dropdown-menu-lg-start px-2 shadow\\\\\\\\\\\\\\\">\\\\\\\\n          {options.map((item) => (\\\\\\\\n            <li\\\\\\\\n              style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n              onClick={() => {\\\\\\\\n                if (selected.label !== item.label) {\\\\\\\\n                  setSelected(item);\\\\\\\\n                }\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {item.label}\\\\\\\\n            </li>\\\\\\\\n          ))}\\\\\\\\n        </ul>\\\\\\\\n      </StyledDropdown>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.ViewRfpModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst isEdit = props.isEdit;\\\\\\\\nconst rfpId = props.rfpId;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.9);\\\\\\\\n  opacity: 0.9;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 30%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">\\\\\\\\n            Your RFP has been successfully {!isEdit ? \\\\\\\\\\\\\\\"published\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"edited\\\\\\\\\\\\\\\"}.\\\\\\\\n          </h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-center mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={linkHref({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\", id: rfpId },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-blue\\\\\\\\\\\\\\\" },\\\\\\\\n                label: \\\\\\\\\\\\\\\"View RFP\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: () => {},\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.WarningModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst onConfirmClick = props.onConfirmClick;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.5);\\\\\\\\n  opacity: 0.4;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Warning: No approved proposal found!</h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n        <ModalContent>\\\\\\\\n          You haven\\\\\\\\\\\\'t approved any proposals linked to the RFP. Please approve a\\\\\\\\n          proposal to proceed to the proposal selection phase.\\\\\\\\n        </ModalContent>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-outline-secondary\\\\\\\\\\\\\\\" },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Dismiss\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onConfirmClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.SimpleMDE\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * iframe embedding a SimpleMDE component\\\\\\\\n * https://github.com/sparksuite/simplemde-markdown-editor\\\\\\\\n */\\\\\\\\n\\\\\\\\nconst data = props.data;\\\\\\\\nconst onChange = props.onChange ?? (() => {});\\\\\\\\nconst onChangeKeyup = props.onChangeKeyup ?? (() => {}); // in case where we want immediate action\\\\\\\\nconst height = props.height ?? \\\\\\\\\\\\\\\"390\\\\\\\\\\\\\\\";\\\\\\\\nconst className = props.className ?? \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\";\\\\\\\\nconst embeddCSS = props.embeddCSS;\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  iframeHeight: height,\\\\\\\\n  message: props.data,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst profilesData = Social.get(\\\\\\\\\\\\\\\"*/profile/name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\nconst followingData = Social.get(\\\\\\\\n  `${context.accountId}/graph/follow/**`,\\\\\\\\n  \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\n// SIMPLEMDE CONFIG //\\\\\\\\nconst fontFamily = props.fontFamily ?? \\\\\\\\\\\\\\\"sans-serif\\\\\\\\\\\\\\\";\\\\\\\\nconst alignToolItems = props.alignToolItems ?? \\\\\\\\\\\\\\\"right\\\\\\\\\\\\\\\";\\\\\\\\nconst placeholder = props.placeholder ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst showAccountAutoComplete = props.showAutoComplete ?? false;\\\\\\\\nconst showProposalIdAutoComplete = props.showProposalIdAutoComplete ?? false;\\\\\\\\nconst showRfpIdAutoComplete = props.showRfpIdAutoComplete ?? false;\\\\\\\\nconst autoFocus = props.autoFocus ?? false;\\\\\\\\n\\\\\\\\nconst proposalQueryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst proposalQuery = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${proposalQueryName}_bool_exp = {}) {\\\\\\\\n${proposalQueryName}(\\\\\\\\n  offset: $offset\\\\\\\\n  limit: $limit\\\\\\\\n  order_by: {proposal_id: desc}\\\\\\\\n  where: $where\\\\\\\\n) {\\\\\\\\n  name\\\\\\\\n  proposal_id\\\\\\\\n}\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst rfpQueryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst rfpQuery = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${rfpQueryName}_bool_exp = {}) {\\\\\\\\n${rfpQueryName}(\\\\\\\\n  offset: $offset\\\\\\\\n  limit: $limit\\\\\\\\n  order_by: {proposal_id: desc}\\\\\\\\n  where: $where\\\\\\\\n) {\\\\\\\\n  rfp_id\\\\\\\\n}\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst code = `\\\\\\\\n<!doctype html>\\\\\\\\n<html>\\\\\\\\n  <head>\\\\\\\\n  <meta charset=\\\\\\\\\\\\\\\"utf-8\\\\\\\\\\\\\\\">\\\\\\\\n  <meta name=\\\\\\\\\\\\\\\"viewport\\\\\\\\\\\\\\\" content=\\\\\\\\\\\\\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\\\\\\\\\\\\\">\\\\\\\\n  <style>\\\\\\\\n  body {  \\\\\\\\n      margin: auto;\\\\\\\\n      font-family: ${fontFamily};\\\\\\\\n      overflow: visible;\\\\\\\\n      font-size:14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    body {\\\\\\\\n      font-size: 12px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item:hover,\\\\\\\\n  .dropdown-item:focus {\\\\\\\\n    background-color:rgb(0, 236, 151) !important;\\\\\\\\n    color:white !important;\\\\\\\\n    outline: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n      text-align: ${alignToolItems};\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n  .CodeMirror {\\\\\\\\n    min-height:200px !important; // for autocomplete to be visble \\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .CodeMirror-scroll {\\\\\\\\n    min-height:200px !important; // for autocomplete to be visble \\\\\\\\n  }\\\\\\\\n\\\\\\\\n  ${embeddCSS}\\\\\\\\n\\\\\\\\n  </style>\\\\\\\\n  <link rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css\\\\\\\\\\\\\\\">\\\\\\\\n  <link rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/highlight.js/latest/styles/github.min.css\\\\\\\\\\\\\\\">\\\\\\\\n  <link href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\\\\\\\\\\\\\\\" rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\">\\\\\\\\n</head>\\\\\\\\n<body>\\\\\\\\n<div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n  <button style=\\\\\\\\\\\\\\\"display: none\\\\\\\\\\\\\\\" type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\" data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n    Dropdown button\\\\\\\\n  </button>\\\\\\\\n\\\\\\\\n  <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"mentiondropdown\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\"position: absolute;\\\\\\\\\\\\\\\">\\\\\\\\n</div>\\\\\\\\n<div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n  <button style=\\\\\\\\\\\\\\\"display: none\\\\\\\\\\\\\\\" type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\" data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n    Dropdown button\\\\\\\\n  </button>\\\\\\\\n  <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"referencedropdown\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\"position: absolute;\\\\\\\\\\\\\\\">\\\\\\\\n</div>\\\\\\\\n</ul>\\\\\\\\n\\\\\\\\n<textarea></textarea>\\\\\\\\n\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script>\\\\\\\\nlet codeMirrorInstance;\\\\\\\\nlet isEditorInitialized = false;\\\\\\\\nlet followingData = {};\\\\\\\\nlet profilesData = {};\\\\\\\\nlet proposalQuery = \\\\\\\\\\\\'\\\\\\\\\\\\';\\\\\\\\nlet proposalQueryName = \\\\\\\\\\\\'\\\\\\\\\\\\';\\\\\\\\nlet showAccountAutoComplete = ${showAccountAutoComplete};\\\\\\\\nlet showProposalIdAutoComplete = ${showProposalIdAutoComplete};\\\\\\\\nlet showRfpIdAutoComplete = ${showRfpIdAutoComplete}\\\\\\\\n\\\\\\\\nfunction getSuggestedAccounts(term) {\\\\\\\\n  let results = [];\\\\\\\\n\\\\\\\\n  term = (term || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").toLowerCase();\\\\\\\\n  const limit = 5;\\\\\\\\n\\\\\\\\n  const profiles = Object.entries(profilesData);\\\\\\\\n\\\\\\\\n  for (let i = 0; i < profiles.length; i++) {\\\\\\\\n    let score = 0;\\\\\\\\n    const accountId = profiles[i][0];\\\\\\\\n    const accountIdSearch = profiles[i][0].replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").toLowerCase();\\\\\\\\n    const nameSearch = (profiles[i][1]?.profile?.name || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n      .replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n      .toLowerCase();\\\\\\\\n    const accountIdSearchIndex = accountIdSearch.indexOf(term);\\\\\\\\n    const nameSearchIndex = nameSearch.indexOf(term);\\\\\\\\n\\\\\\\\n    if (accountIdSearchIndex > -1 || nameSearchIndex > -1) {\\\\\\\\n      score += 10;\\\\\\\\n\\\\\\\\n      if (accountIdSearchIndex === 0) {\\\\\\\\n        score += 10;\\\\\\\\n      }\\\\\\\\n      if (nameSearchIndex === 0) {\\\\\\\\n        score += 10;\\\\\\\\n      }\\\\\\\\n      if (followingData[accountId] === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n        score += 30;\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      results.push({\\\\\\\\n        accountId,\\\\\\\\n        score,\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  results.sort((a, b) => b.score - a.score);\\\\\\\\n  results = results.slice(0, limit);\\\\\\\\n\\\\\\\\n  return results;\\\\\\\\n}\\\\\\\\n\\\\\\\\nasync function asyncFetch(endpoint, { method, headers, body }) {\\\\\\\\n  try {\\\\\\\\n    const response = await fetch(endpoint, {\\\\\\\\n      method: method,\\\\\\\\n      headers: headers,\\\\\\\\n      body: body\\\\\\\\n    });\\\\\\\\n\\\\\\\\n    if (!response.ok) {\\\\\\\\n      throw new Error(\\\\\\\\\\\\\\\"HTTP error!\\\\\\\\\\\\\\\");\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return await response.json();\\\\\\\\n  } catch (error) {\\\\\\\\n    console.error(\\\\\\\\\\\\'Error fetching data:\\\\\\\\\\\\', error);\\\\\\\\n    throw error;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractNumbers(str) {\\\\\\\\n  let numbers = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  for (let i = 0; i < str.length; i++) {\\\\\\\\n    if (!isNaN(str[i])) {\\\\\\\\n      numbers += str[i];\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return numbers;\\\\\\\\n};\\\\\\\\n\\\\\\\\nasync function getSuggestedProposals(id) {\\\\\\\\n  let results = [];\\\\\\\\n  const variables = {\\\\\\\\n    limit: 5,\\\\\\\\n    offset: 0,\\\\\\\\n    where: {},\\\\\\\\n  };\\\\\\\\n  if (id) {\\\\\\\\n    const proposalId = extractNumbers(id);\\\\\\\\n    if (proposalId) {\\\\\\\\n      variables[\\\\\\\\\\\\\\\"where\\\\\\\\\\\\\\\"] = { proposal_id: { _eq: id } };\\\\\\\\n    } else {\\\\\\\\n      variables[\\\\\\\\\\\\\\\"where\\\\\\\\\\\\\\\"] = { name: { _ilike: \\\\\\\\\\\\\\\"%\\\\\\\\\\\\\\\" + id + \\\\\\\\\\\\\\\"%\\\\\\\\\\\\\\\" } };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  await asyncFetch(\\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co/v1/graphql\\\\\\\\\\\\\\\", {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"polyprogrammist_near\\\\\\\\\\\\\\\" },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: proposalQuery,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\",\\\\\\\\n    }),\\\\\\\\n  })\\\\\\\\n    .then((res) => {\\\\\\\\n      const proposals =\\\\\\\\n        res?.data?.[\\\\\\\\n          proposalQueryName\\\\\\\\n        ];\\\\\\\\n      results = proposals;\\\\\\\\n    })\\\\\\\\n    .catch((error) => {\\\\\\\\n      console.error(error);\\\\\\\\n    });\\\\\\\\n  return results;\\\\\\\\n};\\\\\\\\n\\\\\\\\n// Initializes SimpleMDE element and attaches to text-area\\\\\\\\nconst simplemde = new SimpleMDE({\\\\\\\\n  forceSync: true,\\\\\\\\n  toolbar: [\\\\\\\\n    \\\\\\\\\\\\\\\"heading\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"bold\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"italic\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"|\\\\\\\\\\\\\\\", // adding | creates a divider in the toolbar\\\\\\\\n    \\\\\\\\\\\\\\\"quote\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"link\\\\\\\\\\\\\\\",\\\\\\\\n  ],\\\\\\\\n  placeholder: \\\\\\\\\\\\\\\\`${placeholder}\\\\\\\\\\\\\\\\`,\\\\\\\\n  initialValue: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  insertTexts: {\\\\\\\\n    link: [\\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"]()\\\\\\\\\\\\\\\"],\\\\\\\\n  },\\\\\\\\n  spellChecker: false,\\\\\\\\n  renderingConfig: {\\\\\\\\n\\\\\\\\t\\\\\\\\tsingleLineBreaks: false,\\\\\\\\n\\\\\\\\t\\\\\\\\tcodeSyntaxHighlighting: true,\\\\\\\\n\\\\\\\\t},\\\\\\\\n  autofocus:${autoFocus}\\\\\\\\n});\\\\\\\\n\\\\\\\\ncodeMirrorInstance = simplemde.codemirror;\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Sends message to Widget to update content\\\\\\\\n */\\\\\\\\nconst updateContent = () => {\\\\\\\\n  const content = simplemde.value();\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\", content }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n};\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Sends message to Widget to update iframe height\\\\\\\\n */\\\\\\\\nconst updateIframeHeight = () => {\\\\\\\\n  const iframeHeight = document.body.scrollHeight;\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"resize\\\\\\\\\\\\\\\", height: iframeHeight }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n};\\\\\\\\n\\\\\\\\n// On Change\\\\\\\\nsimplemde.codemirror.on(\\\\\\\\\\\\'blur\\\\\\\\\\\\', () => {\\\\\\\\n  updateContent();\\\\\\\\n});\\\\\\\\n\\\\\\\\nsimplemde.codemirror.on(\\\\\\\\\\\\'keyup\\\\\\\\\\\\', () => {\\\\\\\\n  updateIframeHeight();\\\\\\\\n  const content = simplemde.value();\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"updateOnKeyup\\\\\\\\\\\\\\\", content }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n});\\\\\\\\n\\\\\\\\n\\\\\\\\nif (showAccountAutoComplete) {\\\\\\\\n  let mentionToken;\\\\\\\\n  let mentionCursorStart;\\\\\\\\n  const dropdown = document.getElementById(\\\\\\\\\\\\\\\"mentiondropdown\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keydown\\\\\\\\\\\\\\\", () => {\\\\\\\\n    if (mentionToken && event.key === \\\\\\\\\\\\'ArrowDown\\\\\\\\\\\\') {\\\\\\\\n      dropdown.querySelector(\\\\\\\\\\\\'button\\\\\\\\\\\\').focus();\\\\\\\\n      event.preventDefault();\\\\\\\\n      return false;\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keyup\\\\\\\\\\\\\\\", (cm, event) => {\\\\\\\\n    const cursor = cm.getCursor();\\\\\\\\n    const token = cm.getTokenAt(cursor);\\\\\\\\n\\\\\\\\n    const createMentionDropDownOptions = () => {\\\\\\\\n      const mentionInput = cm.getRange(mentionCursorStart, cursor);\\\\\\\\n      dropdown.innerHTML = getSuggestedAccounts(mentionInput)\\\\\\\\n      .map(\\\\\\\\n        (item) =>\\\\\\\\n          \\\\\\\\\\\\'<li><button class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\\\\\' + item?.accountId + \\\\\\\\\\\\'</button></li>\\\\\\\\\\\\'\\\\\\\\n      )\\\\\\\\n      .join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n      dropdown.querySelectorAll(\\\\\\\\\\\\\\\"li\\\\\\\\\\\\\\\").forEach((li) => {\\\\\\\\n        li.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", () => {\\\\\\\\n          const selectedText = li.textContent.trim();\\\\\\\\n          simplemde.codemirror.replaceRange(selectedText, mentionCursorStart, cursor);\\\\\\\\n          mentionToken = null;\\\\\\\\n          dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n          cm.focus();\\\\\\\\n        });\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    // show dropwdown only when @ is at first place or when there is a space before @\\\\\\\\n      if (!mentionToken && (token.string === \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\" && cursor.ch === 1 || token.string === \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\" && cm.getTokenAt({line:cursor.line, ch: cursor.ch - 1}).string == \\\\\\\\\\\\' \\\\\\\\\\\\')) {\\\\\\\\n        mentionToken = token;\\\\\\\\n        mentionCursorStart = cursor;\\\\\\\\n        // Calculate cursor position relative to the iframe\\\\\\\\\\\\'s viewport\\\\\\\\n        const rect = cm.charCoords(cursor);\\\\\\\\n        const x = rect.left;\\\\\\\\n        const y = rect.bottom;\\\\\\\\n\\\\\\\\n        // Create dropdown with options\\\\\\\\n        dropdown.style.top = y + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n        dropdown.style.left = x + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n        createMentionDropDownOptions();\\\\\\\\n\\\\\\\\n        dropdown.classList.add(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        // Close dropdown on outside click\\\\\\\\n        document.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", function(event) {\\\\\\\\n            if (!dropdown.contains(event.target)) {\\\\\\\\n                mentionToken = null;\\\\\\\\n                dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            }\\\\\\\\n        });\\\\\\\\n    } else if (mentionToken && token.string.match(/[^@a-z0-9.]/)) {\\\\\\\\n        mentionToken = null;\\\\\\\\n        dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n    } else if (mentionToken) {\\\\\\\\n        createMentionDropDownOptions();\\\\\\\\n    }\\\\\\\\n});\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (showProposalIdAutoComplete) {\\\\\\\\n  let proposalId;\\\\\\\\n  let referenceCursorStart;\\\\\\\\n  const dropdown = document.getElementById(\\\\\\\\\\\\\\\"referencedropdown\\\\\\\\\\\\\\\");\\\\\\\\n  const loader = document.createElement(\\\\\\\\\\\\'div\\\\\\\\\\\\');\\\\\\\\n  loader.className = \\\\\\\\\\\\'loader\\\\\\\\\\\\';\\\\\\\\n  loader.textContent = \\\\\\\\\\\\'Loading...\\\\\\\\\\\\';\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keydown\\\\\\\\\\\\\\\", () => {\\\\\\\\n    if (proposalId && event.key === \\\\\\\\\\\\'ArrowDown\\\\\\\\\\\\') {\\\\\\\\n      dropdown.querySelector(\\\\\\\\\\\\'button\\\\\\\\\\\\').focus();\\\\\\\\n      event.preventDefault();\\\\\\\\n      return false;\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keyup\\\\\\\\\\\\\\\", (cm, event) => {\\\\\\\\n    const cursor = cm.getCursor();\\\\\\\\n    const token = cm.getTokenAt(cursor);\\\\\\\\n\\\\\\\\n    const createReferenceDropDownOptions = async () => {\\\\\\\\n      try {\\\\\\\\n        const proposalIdInput = cm.getRange(referenceCursorStart, cursor);\\\\\\\\n        dropdown.innerHTML = \\\\\\\\\\\\'\\\\\\\\\\\\'; // Clear previous content\\\\\\\\n        dropdown.appendChild(loader); // Show loader\\\\\\\\n\\\\\\\\n        const suggestedProposals = await getSuggestedProposals(proposalIdInput);\\\\\\\\n        dropdown.innerHTML = suggestedProposals\\\\\\\\n        .map(\\\\\\\\n          (item) =>\\\\\\\\n            \\\\\\\\\\\\'<li><button class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\\\\\' + \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" + item?.proposal_id + \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" + item.name + \\\\\\\\\\\\'</button></li>\\\\\\\\\\\\'\\\\\\\\n        )\\\\\\\\n        .join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        dropdown.querySelectorAll(\\\\\\\\\\\\\\\"li\\\\\\\\\\\\\\\").forEach((li) => {\\\\\\\\n          li.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", () => {\\\\\\\\n            const selectedText = li.textContent.trim();\\\\\\\\n            const startIndex = selectedText.indexOf(\\\\\\\\\\\\'#\\\\\\\\\\\\') + 1; \\\\\\\\n            const endIndex = selectedText.indexOf(\\\\\\\\\\\\' \\\\\\\\\\\\', startIndex);\\\\\\\\n            const id = endIndex !== -1 ? selectedText.substring(startIndex, endIndex) : selectedText.substring(startIndex);\\\\\\\\n            const link = \\\\\\\\\\\\\\\"https://near.social/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=proposal&id=\\\\\\\\\\\\\\\" + id;\\\\\\\\n            const adjustedStart = {\\\\\\\\n              line: referenceCursorStart.line,\\\\\\\\n              ch: referenceCursorStart.ch - 1\\\\\\\\n            };\\\\\\\\n            simplemde.codemirror.replaceRange(\\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\" + selectedText + \\\\\\\\\\\\\\\"]\\\\\\\\\\\\\\\" + \\\\\\\\\\\\\\\"(\\\\\\\\\\\\\\\" + link + \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", adjustedStart, cursor);\\\\\\\\n            proposalId = null;\\\\\\\\n            dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            cm.focus();\\\\\\\\n          });\\\\\\\\n        });\\\\\\\\n      } catch (error) {\\\\\\\\n        console.error(\\\\\\\\\\\\'Error fetching data:\\\\\\\\\\\\', error);\\\\\\\\n        // Handle error: Remove loader\\\\\\\\n        dropdown.innerHTML = \\\\\\\\\\\\'\\\\\\\\\\\\'; // Clear previous content\\\\\\\\n      } finally {\\\\\\\\n        // Remove loader\\\\\\\\n        dropdown.removeChild(loader);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // show dropwdown only when there is space before # or it\\\\\\\\\\\\'s first char\\\\\\\\n      if (!proposalId && (token.string === \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" && cursor.ch === 1 || token.string === \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" && cm.getTokenAt({line:cursor.line, ch: cursor.ch - 1}).string == \\\\\\\\\\\\' \\\\\\\\\\\\')) {\\\\\\\\n        proposalId = token;\\\\\\\\n        referenceCursorStart = cursor;\\\\\\\\n        // Calculate cursor position relative to the iframe\\\\\\\\\\\\'s viewport\\\\\\\\n        const rect = cm.charCoords(cursor);\\\\\\\\n        const x = rect.left;\\\\\\\\n        const y = rect.bottom;\\\\\\\\n\\\\\\\\n        // Create dropdown with options\\\\\\\\n        dropdown.style.top = y + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n        dropdown.style.left = x + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n        createReferenceDropDownOptions();\\\\\\\\n\\\\\\\\n        dropdown.classList.add(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        // Close dropdown on outside click\\\\\\\\n        document.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", function(event) {\\\\\\\\n            if (!dropdown.contains(event.target)) {\\\\\\\\n              proposalId = null;\\\\\\\\n                dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            }\\\\\\\\n        });\\\\\\\\n    } else if (proposalId && (token.string.match(/[^#a-z0-9.]/) || !token.string)) {\\\\\\\\n      proposalId = null;\\\\\\\\n      dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n    } else if (proposalId) {\\\\\\\\n      createReferenceDropDownOptions();\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\n}\\\\\\\\n\\\\\\\\nwindow.addEventListener(\\\\\\\\\\\\\\\"message\\\\\\\\\\\\\\\", (event) => {\\\\\\\\n  if (!isEditorInitialized && event.data !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n    simplemde.value(event.data.content);\\\\\\\\n    isEditorInitialized = true;\\\\\\\\n  } else {\\\\\\\\n    if (event.data.handler === \\\\\\\\\\\\'refreshEditor\\\\\\\\\\\\') {\\\\\\\\n      codeMirrorInstance.getDoc().setValue(event.data.content);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  if (event.data.followingData) {\\\\\\\\n    followingData = event.data.followingData;\\\\\\\\n  }\\\\\\\\n  if (event.data.profilesData) {\\\\\\\\n    profilesData = JSON.parse(event.data.profilesData);\\\\\\\\n  }\\\\\\\\n  if (event.data.proposalQuery) {\\\\\\\\n    proposalQuery = event.data.proposalQuery;\\\\\\\\n  }\\\\\\\\n  if (event.data.proposalQueryName) {\\\\\\\\n    proposalQueryName = event.data.proposalQueryName;\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n});\\\\\\\\n</script>\\\\\\\\n</body>\\\\\\\\n</html>\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <iframe\\\\\\\\n    className={className}\\\\\\\\n    style={{\\\\\\\\n      height: `${state.iframeHeight}px`,\\\\\\\\n      maxHeight: \\\\\\\\\\\\\\\"410px\\\\\\\\\\\\\\\",\\\\\\\\n      minHeight: \\\\\\\\\\\\\\\"250px\\\\\\\\\\\\\\\",\\\\\\\\n    }}\\\\\\\\n    srcDoc={code}\\\\\\\\n    message={{\\\\\\\\n      content: props.data?.content ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n      followingData,\\\\\\\\n      profilesData: JSON.stringify(profilesData),\\\\\\\\n      proposalQuery: proposalQuery,\\\\\\\\n      proposalQueryName: proposalQueryName,\\\\\\\\n      handler: props.data.handler,\\\\\\\\n    }}\\\\\\\\n    onMessage={(e) => {\\\\\\\\n      switch (e.handler) {\\\\\\\\n        case \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            onChange(e.content);\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n        case \\\\\\\\\\\\\\\"resize\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            const offset = 10;\\\\\\\\n            State.update({ iframeHeight: e.height + offset });\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n        case \\\\\\\\\\\\\\\"updateOnKeyup\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            onChangeKeyup(e.content);\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n      }\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Proposal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst accountId = context.accountId;\\\\\\\\n/*\\\\\\\\n  ---props---\\\\\\\\n  props.id: number;\\\\\\\\n  props.timestamp: number; optional\\\\\\\\n  accountId: string\\\\\\\\n  blockHeight:number\\\\\\\\n  */\\\\\\\\n\\\\\\\\nconst DecisionStage = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.REJECTED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .description-box {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .draft-info-container {\\\\\\\\n    background-color: #ecf8fb;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .review-info-container {\\\\\\\\n    background-color: #fef6ee;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-3 {\\\\\\\\n    flex: 3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 20px;\\\\\\\\n    height: 20px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 180px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 135px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 180px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 75px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line-sm {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 70px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:disabled ~ .form-check-label,\\\\\\\\n  .form-check-input[disabled] ~ .form-check-label {\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input {\\\\\\\\n    border-color: black !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-btn {\\\\\\\\n    background-color: #687076;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #03ba16 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-vertical {\\\\\\\\n    border-top: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n    border-bottom: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  button.px-0 {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  red-icon i {\\\\\\\\n    color: red;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  input[type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"] {\\\\\\\\n    min-width: 13px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ProposalContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Text = styled.p`\\\\\\\\n  display: block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 20px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  white-space: nowrap;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 12px;\\\\\\\\n  margin: -6px -6px 6px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinkProfile = ({ account, children }) => {\\\\\\\\n  return (\\\\\\\\n    <Link href={`/near/widget/ProfilePage?accountId=${account}`}>\\\\\\\\n      {children}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst stepsArray = [1, 2, 3, 4, 5];\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\nconst proposal = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    proposal_id: parseInt(id),\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst [snapshotHistory, setSnapshotHistory] = useState([]);\\\\\\\\n\\\\\\\\nconst queryName = PROPOSAL_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n  ${queryName}(\\\\\\\\n    offset: $offset\\\\\\\\n    limit: $limit\\\\\\\\n    order_by: {ts: desc}\\\\\\\\n    where: $where\\\\\\\\n  ) {\\\\\\\\n    editor_id\\\\\\\\n    name\\\\\\\\n    summary\\\\\\\\n    description\\\\\\\\n    ts\\\\\\\\n    proposal_id\\\\\\\\n    timeline\\\\\\\\n    labels\\\\\\\\n    linked_proposals\\\\\\\\n    linked_rfp\\\\\\\\n    requested_sponsorship_usd_amount\\\\\\\\n    requested_sponsorship_paid_in_currency\\\\\\\\n    receiver_account\\\\\\\\n    requested_sponsor\\\\\\\\n    supervisor\\\\\\\\n  }\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst fetchSnapshotHistory = () => {\\\\\\\\n  const variables = {\\\\\\\\n    where: { proposal_id: { _eq: id } },\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const data = result.body.data?.[queryName];\\\\\\\\n        const history = data.map((item) => {\\\\\\\\n          const proposalData = {\\\\\\\\n            ...item,\\\\\\\\n            timestamp: item.ts,\\\\\\\\n            timeline: parseJSON(item.timeline),\\\\\\\\n          };\\\\\\\\n          delete proposalData.ts;\\\\\\\\n          return proposalData;\\\\\\\\n        });\\\\\\\\n        setSnapshotHistory(history);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchSnapshotHistory();\\\\\\\\n}, [id]);\\\\\\\\n\\\\\\\\nif (!proposal) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nif (timestamp && proposal) {\\\\\\\\n  proposal.snapshot =\\\\\\\\n    snapshotHistory.find((item) => item.timestamp === timestamp) ??\\\\\\\\n    proposal.snapshot;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { snapshot } = proposal;\\\\\\\\nsnapshot.timeline = parseJSON(snapshot.timeline);\\\\\\\\n\\\\\\\\nconst authorId = proposal.author_id;\\\\\\\\nconst blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\nconst item = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n  path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n  blockHeight,\\\\\\\\n};\\\\\\\\nconst proposalURL = `https://near.org/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=proposal&id=${proposal.id}&timestamp=${snapshot.timestamp}`;\\\\\\\\n\\\\\\\\nconst SidePanelItem = ({ title, children, hideBorder, ishidden }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ gap: \\\\\\\\\\\\\\\"8px\\\\\\\\\\\\\\\" }}\\\\\\\\n      className={\\\\\\\\n        ishidden\\\\\\\\n          ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"d-flex flex-column pb-3 \\\\\\\\\\\\\\\" + (!hideBorder && \\\\\\\\\\\\\\\" border-bottom\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{title} </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst proposalStatusOptions = [\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Draft\\\\\\\\\\\\\\\",\\\\\\\\n    value: { status: PROPOSAL_TIMELINE_STATUS.DRAFT },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Review\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.REVIEW,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved-Conditionally\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Rejected\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.REJECTED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.CANCELED,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Payment-processing\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n      kyc_verified: false,\\\\\\\\n      test_transaction_sent: false,\\\\\\\\n      request_for_trustees_created: false,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Funded\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n      trustees_released_payment: true,\\\\\\\\n      kyc_verified: true,\\\\\\\\n      test_transaction_sent: true,\\\\\\\\n      request_for_trustees_created: true,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst CheckBox = ({ value, isChecked, label, disabled, onClick }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"checkbox\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={!isModerator || !showTimelineSetting || disabled}\\\\\\\\n        onChange={(e) => onClick(e.target.checked)}\\\\\\\\n      />\\\\\\\\n      <label style={{ width: \\\\\\\\\\\\\\\"90%\\\\\\\\\\\\\\\" }} class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">\\\\\\\\n        {label}\\\\\\\\n      </label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst RadioButton = ({ value, isChecked, label }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={true}\\\\\\\\n      />\\\\\\\\n      <label class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isAllowedToEditProposal = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    proposal_id: proposal.id,\\\\\\\\n    editor: accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst editProposal = ({ timeline }) => {\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    name: snapshot.name,\\\\\\\\n    description: snapshot.description,\\\\\\\\n    category: snapshot.category,\\\\\\\\n    summary: snapshot.summary,\\\\\\\\n    linked_proposals: snapshot.linked_proposals,\\\\\\\\n    requested_sponsorship_usd_amount: snapshot.requested_sponsorship_usd_amount,\\\\\\\\n    requested_sponsorship_paid_in_currency:\\\\\\\\n      snapshot.requested_sponsorship_paid_in_currency,\\\\\\\\n    receiver_account: snapshot.receiver_account,\\\\\\\\n    requested_sponsor: snapshot.requested_sponsor,\\\\\\\\n    timeline: timeline,\\\\\\\\n    linked_rfp: snapshot.linked_rfp,\\\\\\\\n    supervisor: supervisor ?? snapshot.supervisor,\\\\\\\\n  };\\\\\\\\n  const args = {\\\\\\\\n    labels: snapshot.linked_rfp ? [] : snapshot.labels,\\\\\\\\n    body: body,\\\\\\\\n    id: proposal.id,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst editProposalStatus = ({ timeline }) => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal_timeline\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: proposal.id,\\\\\\\\n        timeline: timeline,\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\nconst [showTimelineSetting, setShowTimelineSetting] = useState(false);\\\\\\\\nconst proposalStatus = useCallback(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.find(\\\\\\\\n      (i) => i.value.status === snapshot.timeline.status\\\\\\\\n    ),\\\\\\\\n  [snapshot]\\\\\\\\n);\\\\\\\\nconst [updatedProposalStatus, setUpdatedProposalStatus] = useState({});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  setUpdatedProposalStatus({\\\\\\\\n    ...proposalStatus(),\\\\\\\\n    value: { ...proposalStatus().value, ...snapshot.timeline },\\\\\\\\n  });\\\\\\\\n}, [proposal]);\\\\\\\\n\\\\\\\\nconst [paymentHashes, setPaymentHashes] = useState([\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"]);\\\\\\\\nconst [supervisor, setSupervisor] = useState(snapshot.supervisor);\\\\\\\\n\\\\\\\\nconst selectedStatusIndex = useMemo(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.findIndex((i) => {\\\\\\\\n      return updatedProposalStatus.value.status === i.value.status;\\\\\\\\n    }),\\\\\\\\n  [updatedProposalStatus]\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst TimelineItems = ({ title, children, value, values }) => {\\\\\\\\n  const indexOfCurrentItem = proposalStatusOptions.findIndex((i) =>\\\\\\\\n    Array.isArray(values)\\\\\\\\n      ? values.includes(i.value.status)\\\\\\\\n      : value === i.value.status\\\\\\\\n  );\\\\\\\\n  let color = \\\\\\\\\\\\\\\"transparent\\\\\\\\\\\\\\\";\\\\\\\\n  let statusIndex = selectedStatusIndex;\\\\\\\\n\\\\\\\\n  // index 2,3,4,5  is of decision\\\\\\\\n  if (selectedStatusIndex === 3 || selectedStatusIndex === 2) {\\\\\\\\n    statusIndex = 2;\\\\\\\\n  }\\\\\\\\n  if (statusIndex === indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FEF6EE\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  if (\\\\\\\\n    statusIndex > indexOfCurrentItem ||\\\\\\\\n    updatedProposalStatus.value.status === PROPOSAL_TIMELINE_STATUS.FUNDED\\\\\\\\n  ) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#EEFEF0\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // reject\\\\\\\\n  if (statusIndex === 4 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FF7F7F\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // cancelled\\\\\\\\n  if (statusIndex === 5 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"p-2 rounded-3\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        backgroundColor: color,\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 text-black\\\\\\\\\\\\\\\"> {title}</div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst link = href({\\\\\\\\n  widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n  params: {\\\\\\\\n    page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\",\\\\\\\\n    id: proposal.id,\\\\\\\\n    timestamp: timestamp,\\\\\\\\n  },\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst createdDate = snapshotHistory[0]?.timestamp ?? snapshot.timestamp;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmReviewModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[1].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[5].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex px-3 px-lg-0 justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center h3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>{snapshot.name}</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">#{proposal.id}</div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_NEAR}/widget/ShareButton`}\\\\\\\\n          props={{\\\\\\\\n            postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            url: proposalURL,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        {((isAllowedToEditProposal &&\\\\\\\\n          snapshot.timeline.status === PROPOSAL_TIMELINE_STATUS.DRAFT) ||\\\\\\\\n          isModerator) && (\\\\\\\\n          <Link to={link} style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap flex-md-nowrap px-3 px-lg-0 gap-2 align-items-center text-sm pb-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n        props={{\\\\\\\\n          timelineStatus: snapshot.timeline.status,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"w-100 d-flex flex-wrap flex-md-nowrap gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n          <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n        </div>\\\\\\\\n        <div>created on {readableDate(createdDate / 1000000)}</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 full-width-div px-3 px-lg-0\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4\\\\\\\\\\\\\\\">\\\\\\\\n        {snapshot.timeline.status === PROPOSAL_TIMELINE_STATUS.DRAFT &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"draft-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in draft mode and open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  The author can still refine the proposal and build consensus\\\\\\\\n                  before sharing it with sponsors. Click \\\\\\\\u{201c}Ready for review\\\\\\\\u{201d} when\\\\\\\\n                  you want to start the official review process. This will lock\\\\\\\\n                  the editing function, but comments are still open.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    label: \\\\\\\\\\\\\\\"Ready for review\\\\\\\\\\\\\\\",\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setReviewModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        {snapshot.timeline.status === PROPOSAL_TIMELINE_STATUS.REVIEW &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"review-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in review mode and still open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  You can\\\\\\\\u{2019}t edit the proposal, but comments are open. Only\\\\\\\\n                  moderators can make changes. Click \\\\\\\\u{201c}Cancel Proposal\\\\\\\\u{201d} to cancel\\\\\\\\n                  your proposal. This changes the status to Canceled, signaling\\\\\\\\n                  to sponsors that it\\\\\\\\u{2019}s no longer active or relevant.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    label: (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                      </div>\\\\\\\\n                    ),\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"btn-outline-danger btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setCancelModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"my-4\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-6\\\\\\\\\\\\\\\">\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"flex-3 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                  <Widget\\\\\\\\n                    src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n                    props={{\\\\\\\\n                      accountId: authorId,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n                <ProposalContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Header className=\\\\\\\\\\\\\\\"d-flex gap-1 align-items-center p-2 px-3 \\\\\\\\\\\\\\\">\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ maxWidth: \\\\\\\\\\\\\\\"60%\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n                    </div>\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                        props={{\\\\\\\\n                          blockHeight,\\\\\\\\n                          blockTimestamp: createdDate,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      {context.accountId && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                          <Widget\\\\\\\\n                            src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                            props={{\\\\\\\\n                              accountId: authorId,\\\\\\\\n                              blockHeight: blockHeight,\\\\\\\\n                            }}\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </Header>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 p-2 px-3 description-box\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      PROPOSAL CATEGORY\\\\\\\\n                    </div>\\\\\\\\n                    <div>\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                        props={{\\\\\\\\n                          selected: snapshot.labels,\\\\\\\\n                          disabled: true,\\\\\\\\n                          hideDropdown: true,\\\\\\\\n                          onChange: () => {},\\\\\\\\n                          availableOptions: rfpLabelOptions,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      SUMMARY\\\\\\\\n                    </div>\\\\\\\\n                    <div>{snapshot.summary}</div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n                      DESCRIPTION\\\\\\\\n                    </div>\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n                      props={{ text: snapshot.description }}\\\\\\\\n                    />\\\\\\\\n\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LikeButton`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          proposalId: proposal.id,\\\\\\\\n                          notifyAccountIds: [authorId],\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          showOverlay: false,\\\\\\\\n                          onClick: () => {},\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                        props={{\\\\\\\\n                          url: proposalURL,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                </ProposalContainer>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.CommentsAndLogs`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    id: proposal.id,\\\\\\\\n                    item: item,\\\\\\\\n                    snapshotHistory: snapshotHistory,\\\\\\\\n                    latestSnapshot: snapshot,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div\\\\\\\\n                style={{\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                className=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.ComposeComment`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    item: item,\\\\\\\\n                    notifyAccountIds: [authorId],\\\\\\\\n                    proposalId: proposal.id,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 flex-1 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/AccountProfile`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: authorId,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\\\\\\\\"Linked RFP\\\\\\\\\\\\\\\"}\\\\\\\\n                ishidden={!isNumber(snapshot.linked_rfp)}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedRfps`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedRfpIds: [snapshot.linked_rfp],\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"Linked Proposals \\\\\\\\\\\\\\\" + `(${snapshot.linked_proposals.length})`\\\\\\\\n                }\\\\\\\\n                ishidden={!snapshot.linked_proposals.length}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedProposalIds: snapshot.linked_proposals,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Funding Ask\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"h4 text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {snapshot.requested_sponsorship_usd_amount && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                      <div>\\\\\\\\n                        {parseInt(\\\\\\\\n                          snapshot.requested_sponsorship_usd_amount\\\\\\\\n                        ).toLocaleString()}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        USD\\\\\\\\n                      </div>\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                        Requested in{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        {snapshot.requested_sponsorship_paid_in_currency}\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Wallet Address\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/AccountProfile`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: snapshot.receiver_account,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Verification Status\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.VerificationStatus`}\\\\\\\\n                  props={{\\\\\\\\n                    receiverAccount: snapshot.receiver_account,\\\\\\\\n                    showGetVerifiedBtn:\\\\\\\\n                      accountId === snapshot.receiver_account ||\\\\\\\\n                      accountId === authorId,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title=\\\\\\\\\\\\\\\"Project Coordinator\\\\\\\\\\\\\\\"\\\\\\\\n                ishidden={!snapshot.supervisor}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/AccountProfile`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: snapshot.supervisor,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                hideBorder={true}\\\\\\\\n                title={\\\\\\\\n                  <div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Timeline\\\\\\\\n                      {isModerator && (\\\\\\\\n                        <div onClick={() => setShowTimelineSetting(true)}>\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                    {showTimelineSetting && (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"mt-2 d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <h6 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Proposal Status</h6>\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n                          props={{\\\\\\\\n                            options: proposalStatusOptions,\\\\\\\\n                            selectedValue: updatedProposalStatus,\\\\\\\\n                            onUpdate: (v) => {\\\\\\\\n                              setUpdatedProposalStatus({\\\\\\\\n                                ...v,\\\\\\\\n                                value: {\\\\\\\\n                                  ...v.value,\\\\\\\\n                                  ...updatedProposalStatus.value,\\\\\\\\n                                  status: v.value.status,\\\\\\\\n                                },\\\\\\\\n                              });\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-3 mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n                      {stepsArray.map((_, index) => {\\\\\\\\n                        const indexOfCurrentItem = index;\\\\\\\\n                        let color = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n                        let statusIndex = selectedStatusIndex;\\\\\\\\n                        // index 2,3,4 is of decision\\\\\\\\n                        if (\\\\\\\\n                          selectedStatusIndex === 3 ||\\\\\\\\n                          selectedStatusIndex === 2 ||\\\\\\\\n                          selectedStatusIndex === 4 ||\\\\\\\\n                          selectedStatusIndex === 5\\\\\\\\n                        ) {\\\\\\\\n                          statusIndex = 2;\\\\\\\\n                        }\\\\\\\\n                        if (selectedStatusIndex === 6) {\\\\\\\\n                          statusIndex = 3;\\\\\\\\n                        }\\\\\\\\n                        const current = statusIndex === indexOfCurrentItem;\\\\\\\\n                        const completed =\\\\\\\\n                          statusIndex > indexOfCurrentItem ||\\\\\\\\n                          updatedProposalStatus.value.status ===\\\\\\\\n                            PROPOSAL_TIMELINE_STATUS.FUNDED;\\\\\\\\n                        return (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <div\\\\\\\\n                              className={\\\\\\\\n                                \\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" +\\\\\\\\n                                (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                              }\\\\\\\\n                            >\\\\\\\\n                              {completed && (\\\\\\\\n                                <div\\\\\\\\n                                  className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n                                  style={{ height: \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" }}\\\\\\\\n                                >\\\\\\\\n                                  <i class=\\\\\\\\\\\\\\\"bi bi-check\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                </div>\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n\\\\\\\\n                            {index !== stepsArray.length - 1 && (\\\\\\\\n                              <div\\\\\\\\n                                className={\\\\\\\\n                                  \\\\\\\\\\\\\\\"vertical-line\\\\\\\\\\\\\\\" +\\\\\\\\n                                  (index === stepsArray.length - 2\\\\\\\\n                                    ? \\\\\\\\\\\\\\\"-sm \\\\\\\\\\\\\\\"\\\\\\\\n                                    : \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                                }\\\\\\\\n                              ></div>\\\\\\\\n                            )}\\\\\\\\n                          </div>\\\\\\\\n                        );\\\\\\\\n                      })}\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"1) Draft\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.DRAFT}\\\\\\\\n                      >\\\\\\\\n                        <div>\\\\\\\\n                          Once an author submits a proposal, it is in draft mode\\\\\\\\n                          and open for community comments. The author can still\\\\\\\\n                          make changes to the proposal during this stage and\\\\\\\\n                          submit it for official review when ready.\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"2) Review\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.REVIEW}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          Sponsors who agree to consider the proposal may\\\\\\\\n                          request attestations from work groups.\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  sponsor_requested_review: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor provides feedback or requests reviews\\\\\\\\\\\\\\\"\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .sponsor_requested_review\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Reviewer completes attestations (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  reviewer_completed_attestation: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .reviewer_completed_attestation\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"3) Decision\\\\\\\\\\\\\\\"\\\\\\\\n                        values={[\\\\\\\\n                          PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n                          PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n                          PROPOSAL_TIMELINE_STATUS.REJECTED,\\\\\\\\n                        ]}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <div>Sponsor makes a final decision:</div>\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Approved</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.APPROVED ||\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING ||\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.FUNDED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={\\\\\\\\n                              <>\\\\\\\\n                                <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                                  Approved - Conditional{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                                </div>\\\\\\\\n                                <span>\\\\\\\\n                                  Requires follow up from recipient. Moderators\\\\\\\\n                                  will provide further details.\\\\\\\\n                                </span>\\\\\\\\n                              </>\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Reject\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Rejected</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              PROPOSAL_TIMELINE_STATUS.REJECTED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Canceled</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              PROPOSAL_TIMELINE_STATUS.CANCELED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"4) Payment Processing\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor verifies KYC/KYB\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  kyc_verified: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor confirmed sponsorship and shared funding steps with recipient\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  test_transaction_sent: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"5) Funded\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.FUNDED}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          {paymentHashes?.length > 1 ? (\\\\\\\\n                            paymentHashes.slice(0, -1).map((link, index) => (\\\\\\\\n                              <a\\\\\\\\n                                key={index}\\\\\\\\n                                href={link}\\\\\\\\n                                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                              >\\\\\\\\n                                Payment Link\\\\\\\\n                                <i className=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                              </a>\\\\\\\\n                            ))\\\\\\\\n                          ) : updatedProposalStatus.value.payouts.length > 0 ? (\\\\\\\\n                            <div>\\\\\\\\n                              {updatedProposalStatus.value.payouts.map(\\\\\\\\n                                (link) => {\\\\\\\\n                                  return (\\\\\\\\n                                    <a\\\\\\\\n                                      href={link}\\\\\\\\n                                      className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                                    >\\\\\\\\n                                      Payment Link\\\\\\\\n                                      <i class=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                    </a>\\\\\\\\n                                  );\\\\\\\\n                                }\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n                          ) : (\\\\\\\\n                            \\\\\\\\\\\\\\\"No Payouts yet\\\\\\\\\\\\\\\"\\\\\\\\n                          )}\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                  {showTimelineSetting && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">\\\\\\\\n                          Project Coordinator\\\\\\\\n                        </label>\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.AccountInput`}\\\\\\\\n                          props={{\\\\\\\\n                            value: supervisor,\\\\\\\\n                            placeholder: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                            onUpdate: setSupervisor,\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                      {updatedProposalStatus.value.status ===\\\\\\\\n                        PROPOSAL_TIMELINE_STATUS.FUNDED && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">Payment Link</label>\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                            {paymentHashes.map((item, index) => (\\\\\\\\n                              <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-between align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                                <Widget\\\\\\\\n                                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n                                  props={{\\\\\\\\n                                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                                    value: item,\\\\\\\\n                                    onChange: (e) => {\\\\\\\\n                                      const updatedHashes = [...paymentHashes];\\\\\\\\n                                      updatedHashes[index] = e.target.value;\\\\\\\\n                                      setPaymentHashes(updatedHashes);\\\\\\\\n                                    },\\\\\\\\n                                    skipPaddingGap: true,\\\\\\\\n                                    placeholder: \\\\\\\\\\\\\\\"Enter URL\\\\\\\\\\\\\\\",\\\\\\\\n                                  }}\\\\\\\\n                                />\\\\\\\\n                                <div style={{ minWidth: 20 }}>\\\\\\\\n                                  {index !== paymentHashes.length - 1 ? (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-trash3 h6\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () => {\\\\\\\\n                                          const updatedHashes = [\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                          ];\\\\\\\\n                                          updatedHashes.splice(index, 1);\\\\\\\\n                                          setPaymentHashes(updatedHashes);\\\\\\\\n                                        },\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  ) : (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"green-btn shadow-none border-0 w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        disabled: !item,\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-plus-lg\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () =>\\\\\\\\n                                          setPaymentHashes([\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                            \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                                          ]),\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  )}\\\\\\\\n                                </div>\\\\\\\\n                              </div>\\\\\\\\n                            ))}\\\\\\\\n                          </div>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end text-sm\\\\\\\\\\\\\\\">\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                            classNames: {\\\\\\\\n                              root: \\\\\\\\\\\\\\\"btn-outline-danger border-0 shadow-none btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              setShowTimelineSetting(false);\\\\\\\\n                              setUpdatedProposalStatus(proposalStatus);\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                            disabled:\\\\\\\\n                              !supervisor &&\\\\\\\\n                              DecisionStage.includes(\\\\\\\\n                                updatedProposalStatus.value.status\\\\\\\\n                              ),\\\\\\\\n                            classNames: { root: \\\\\\\\\\\\\\\"green-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              if (snapshot.supervisor !== supervisor) {\\\\\\\\n                                editProposal({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              } else if (\\\\\\\\n                                updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.FUNDED\\\\\\\\n                              ) {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: {\\\\\\\\n                                    ...updatedProposalStatus.value,\\\\\\\\n                                    payouts: !paymentHashes[0]\\\\\\\\n                                      ? []\\\\\\\\n                                      : paymentHashes.filter(\\\\\\\\n                                          (item) => item !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                                        ),\\\\\\\\n                                  },\\\\\\\\n                                });\\\\\\\\n                              } else {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              }\\\\\\\\n                              setShowTimelineSetting(false);\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.StageDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst setSelected = props.onStateChange ?? (() => {});\\\\\\\\n\\\\\\\\nconst timelineStatusArray = Object.entries(RFP_TIMELINE_STATUS).map(\\\\\\\\n  ([key, value]) => ({\\\\\\\\n    label: key\\\\\\\\n      .split(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\")\\\\\\\\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\\\\\\\\n      .join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"),\\\\\\\\n    value,\\\\\\\\n  })\\\\\\\\n);\\\\\\\\ntimelineStatusArray.unshift({ label: \\\\\\\\\\\\\\\"All\\\\\\\\\\\\\\\", value: null });\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n      props={{\\\\\\\\n        options: timelineStatusArray,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Timeline\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelected(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.template.AppLayout\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst data = fetch(`https://httpbin.org/headers`);\\\\\\\\nconst gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n// we need fixed positioning for near social and not for org\\\\\\\\nconst ParentContainer = gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\")\\\\\\\\n  ? styled.div`\\\\\\\\n      width: 100%;\\\\\\\\n      min-height: 90vh;\\\\\\\\n      background: #f4f4f4;\\\\\\\\n      padding-bottom: 1rem;\\\\\\\\n    `\\\\\\\\n  : styled.div`\\\\\\\\n      position: fixed;\\\\\\\\n      inset: 73px 0px 0px;\\\\\\\\n      width: 100%;\\\\\\\\n      overflow-y: scroll;\\\\\\\\n      min-height: 90vh;\\\\\\\\n      background: #f4f4f4;\\\\\\\\n    `;\\\\\\\\n\\\\\\\\nconst Theme = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  padding-top: calc(-1 * var(--body-top-padding));\\\\\\\\n  background: #f4f4f4;\\\\\\\\n  .container-xl {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ContentContainer = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst AppHeader = ({ page }) => (\\\\\\\\n  <Widget\\\\\\\\n    src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.organism.Navbar`}\\\\\\\\n    props={{\\\\\\\\n      page: page,\\\\\\\\n      ...props,\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst AppLayout = ({ page, children }) => {\\\\\\\\n  return (\\\\\\\\n    <ParentContainer>\\\\\\\\n      <Theme>\\\\\\\\n        <Container className=\\\\\\\\\\\\\\\"container-xl p-3\\\\\\\\\\\\\\\">\\\\\\\\n          <AppHeader page={page} />\\\\\\\\n          <ContentContainer className=\\\\\\\\\\\\\\\"content-container\\\\\\\\\\\\\\\">\\\\\\\\n            {children}\\\\\\\\n          </ContentContainer>\\\\\\\\n        </Container>\\\\\\\\n      </Theme>\\\\\\\\n    </ParentContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn { AppLayout };\\\\\\\\n\"}, \"near-prpsls-bos.components.admin.moderatorsTab\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { Tile } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/devhub.components.molecule.Tile`\\\\\\\\n) || { Tile: () => <></> };\\\\\\\\n\\\\\\\\nconst { accessControlInfo, createEditTeam } = props;\\\\\\\\n\\\\\\\\nconst [editModerators, setEditModerators] = useState(false);\\\\\\\\nconst [moderators, setModerators] = useState(\\\\\\\\n  accessControlInfo.members_list[\\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\"].children || []\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst handleEditModerators = () => {\\\\\\\\n  createEditTeam({\\\\\\\\n    teamName: \\\\\\\\\\\\\\\"moderators\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"The moderator group has permissions to create and edit RFPs, edit and manage proposals, and manage admins.\\\\\\\\\\\\\\\",\\\\\\\\n    members: moderators,\\\\\\\\n    contractCall: \\\\\\\\\\\\\\\"edit_member\\\\\\\\\\\\\\\",\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleCancelModerators = () => {\\\\\\\\n  setEditModerators(false);\\\\\\\\n  setModerators(accessControlInfo.members_list[\\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\"].children);\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <h3>Moderators</h3>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n      <h6>\\\\\\\\n        The moderator group has permissions to create and edit RFPs, edit and\\\\\\\\n        manage proposals, and manage admins.\\\\\\\\n      </h6>\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.PostControls`}\\\\\\\\n        props={{\\\\\\\\n          icon: \\\\\\\\\\\\\\\"bi bi-gear-wide-connected\\\\\\\\\\\\\\\",\\\\\\\\n          className: \\\\\\\\\\\\\\\"mb-3\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n          title: \\\\\\\\\\\\\\\"Edit members\\\\\\\\\\\\\\\",\\\\\\\\n          onClick: () => setEditModerators(!editModerators),\\\\\\\\n          testId: \\\\\\\\\\\\\\\"edit-members\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n    <Tile className=\\\\\\\\\\\\\\\"p-3\\\\\\\\\\\\\\\" style={{ background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      {editModerators ? (\\\\\\\\n        <>\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.admin.AccountsEditor`}\\\\\\\\n            props={{\\\\\\\\n              data: {\\\\\\\\n                maxLength: 100,\\\\\\\\n                placeholder: \\\\\\\\\\\\\\\"member.near\\\\\\\\\\\\\\\",\\\\\\\\n                list: moderators,\\\\\\\\n              },\\\\\\\\n              setList: setModerators,\\\\\\\\n              // Could add a check to see if it is an valid account id.\\\\\\\\n              validate: (newItem) => true,\\\\\\\\n              invalidate: () => null,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"d-flex align-items-center justify-content-end gap-3 mt-4\\\\\\\\\\\\\\\"\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: {\\\\\\\\n                  root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: handleCancelModerators,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n                icon: {\\\\\\\\n                  type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                  variant: \\\\\\\\\\\\\\\"bi-check-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Submit\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: handleEditModerators,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </>\\\\\\\\n      ) : (\\\\\\\\n        <>\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\">Members</div>\\\\\\\\n          {moderators && (\\\\\\\\n            <div class=\\\\\\\\\\\\\\\"vstack\\\\\\\\\\\\\\\">\\\\\\\\n              {moderators.length ? (\\\\\\\\n                moderators.map((child) => (\\\\\\\\n                  <Tile className=\\\\\\\\\\\\\\\"w-25 p-3 m-1\\\\\\\\\\\\\\\" minHeight={10}>\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.ProfileLine`}\\\\\\\\n                      props={{ accountId: child }}\\\\\\\\n                    />\\\\\\\\n                  </Tile>\\\\\\\\n                ))\\\\\\\\n              ) : (\\\\\\\\n                <div>No moderators</div>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </Tile>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LikeButton\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\nconst item = props.item;\\\\\\\\nconst proposalId = props.proposalId;\\\\\\\\nconst rfpId = props.rfpId;\\\\\\\\nconst notifyAccountIds = props.notifyAccountIds ?? [];\\\\\\\\nif (!item) {\\\\\\\\n  return \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst likes = Social.index(\\\\\\\\\\\\\\\"like\\\\\\\\\\\\\\\", item);\\\\\\\\n\\\\\\\\nconst dataLoading = likes === null;\\\\\\\\n\\\\\\\\nconst likesByUsers = {};\\\\\\\\n\\\\\\\\n(likes || []).forEach((like) => {\\\\\\\\n  if (like.value.type === \\\\\\\\\\\\\\\"like\\\\\\\\\\\\\\\") {\\\\\\\\n    likesByUsers[like.accountId] = like;\\\\\\\\n  } else if (like.value.type === \\\\\\\\\\\\\\\"unlike\\\\\\\\\\\\\\\") {\\\\\\\\n    delete likesByUsers[like.accountId];\\\\\\\\n  }\\\\\\\\n});\\\\\\\\nif (state.hasLike === true) {\\\\\\\\n  likesByUsers[context.accountId] = {\\\\\\\\n    accountId: context.accountId,\\\\\\\\n  };\\\\\\\\n} else if (state.hasLike === false) {\\\\\\\\n  delete likesByUsers[context.accountId];\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst accountsWithLikes = Object.keys(likesByUsers);\\\\\\\\nconst hasLike = context.accountId && !!likesByUsers[context.accountId];\\\\\\\\nconst hasLikeOptimistic =\\\\\\\\n  state.hasLikeOptimistic === undefined ? hasLike : state.hasLikeOptimistic;\\\\\\\\nconst totalLikes =\\\\\\\\n  accountsWithLikes.length +\\\\\\\\n  (hasLike === false && state.hasLikeOptimistic === true ? 1 : 0) -\\\\\\\\n  (hasLike === true && state.hasLikeOptimistic === false ? 1 : 0);\\\\\\\\n\\\\\\\\nconst LikeButton = styled.button`\\\\\\\\n  border: 0;\\\\\\\\n  display: inline-flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 6px;\\\\\\\\n  color: #687076;\\\\\\\\n  font-weight: 400;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 17px;\\\\\\\\n  cursor: pointer;\\\\\\\\n  background: none;\\\\\\\\n  padding: 6px;\\\\\\\\n  transition: color 200ms;\\\\\\\\n\\\\\\\\n  i {\\\\\\\\n    font-size: 16px;\\\\\\\\n    transition: color 200ms;\\\\\\\\n\\\\\\\\n    &.bi-heart-fill {\\\\\\\\n      color: #e5484d !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:hover,\\\\\\\\n  &:focus {\\\\\\\\n    outline: none;\\\\\\\\n    color: #11181c;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst likeClick = (e) => {\\\\\\\\n  e.preventDefault();\\\\\\\\n  e.stopPropagation();\\\\\\\\n  if (state.loading) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  State.update({\\\\\\\\n    loading: true,\\\\\\\\n    hasLikeOptimistic: !hasLike,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  const data = {\\\\\\\\n    index: {\\\\\\\\n      like: JSON.stringify({\\\\\\\\n        key: item,\\\\\\\\n        value: {\\\\\\\\n          type: hasLike ? \\\\\\\\\\\\\\\"unlike\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"like\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  if (!hasLike && notifyAccountIds.length > 0) {\\\\\\\\n    const notifyData = notifyAccountIds.map((account) => {\\\\\\\\n      if (account !== context.accountId) {\\\\\\\\n        return {\\\\\\\\n          key: account,\\\\\\\\n          value: proposalId\\\\\\\\n            ? {\\\\\\\\n                type: \\\\\\\\\\\\\\\"devhub/like\\\\\\\\\\\\\\\",\\\\\\\\n                item,\\\\\\\\n                proposal: proposalId,\\\\\\\\n              }\\\\\\\\n            : {\\\\\\\\n                type: \\\\\\\\\\\\\\\"like\\\\\\\\\\\\\\\",\\\\\\\\n                item,\\\\\\\\n              },\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n    if (notifyData.length > 0) {\\\\\\\\n      data.index.notify = notifyData;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  Social.set(data, {\\\\\\\\n    onCommit: () => State.update({ loading: false, hasLike: !hasLike }),\\\\\\\\n    onCancel: () =>\\\\\\\\n      State.update({\\\\\\\\n        loading: false,\\\\\\\\n        hasLikeOptimistic: !state.hasLikeOptimistic,\\\\\\\\n      }),\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst title = hasLike ? \\\\\\\\\\\\\\\"Unlike\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Like\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <LikeButton\\\\\\\\n    disabled={state.loading || dataLoading || !context.accountId}\\\\\\\\n    title={title}\\\\\\\\n    onClick={likeClick}\\\\\\\\n  >\\\\\\\\n    <i className={`${hasLikeOptimistic ? \\\\\\\\\\\\\\\"bi-heart-fill\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"bi-heart\\\\\\\\\\\\\\\"}`} />\\\\\\\\n    {Object.values(likesByUsers ?? {}).length > 0 ? (\\\\\\\\n      <span className={`count ${hasLike ? \\\\\\\\\\\\\\\"liked\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}`}>\\\\\\\\n        <Widget\\\\\\\\n          loading={likeCount || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n          src=\\\\\\\\\\\\\\\"mob.near/widget/N.Overlay.Faces\\\\\\\\\\\\\\\"\\\\\\\\n          props={{ accounts: likesByUsers, limit: 10 }}\\\\\\\\n        />\\\\\\\\n      </span>\\\\\\\\n    ) : (\\\\\\\\n      \\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n    )}\\\\\\\\n  </LikeButton>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedRfps\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst linkedRfpIds = props.linkedRfpIds ?? [];\\\\\\\\nconst linkedRfpsData = [];\\\\\\\\n\\\\\\\\nlinkedRfpIds.map((item) => {\\\\\\\\n  const data = Near.view(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n    rfp_id: item,\\\\\\\\n  });\\\\\\\\n  if (data !== null) {\\\\\\\\n    linkedRfpsData.push(data);\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  a {\\\\\\\\n    &:hover {\\\\\\\\n      text-decoration: none !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    {linkedRfpsData.map((item) => {\\\\\\\\n      const link = `https://near.org/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=rfp&id=${item.id}`;\\\\\\\\n      return (\\\\\\\\n        <a href={link} target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\" rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <img src={RFP_IMAGE} height={40} width={40} />\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\" style={{ maxWidth: 250 }}>\\\\\\\\n              <b className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">{item.snapshot.name}</b>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                created on {readableDate(item.snapshot.timestamp / 1000000)}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </a>\\\\\\\\n      );\\\\\\\\n    })}\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.admin.AccountsEditor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { data, setList, validate, invalidate } = props;\\\\\\\\n\\\\\\\\nconst [newItem, setNewItem] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst handleAddItem = () => {\\\\\\\\n  if (validate(newItem)) {\\\\\\\\n    setList([...data.list, newItem]);\\\\\\\\n    setNewItem(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n  } else {\\\\\\\\n    return invalidate();\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleDeleteItem = (index) => {\\\\\\\\n  const updatedData = [...data.list];\\\\\\\\n  updatedData.splice(index, 1);\\\\\\\\n  setList(updatedData);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Item = styled.div`\\\\\\\\n  padding: 10px;\\\\\\\\n  margin: 5px;\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  flex-direction: row;\\\\\\\\n  gap: 10px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {data.list.map((item, index) => (\\\\\\\\n      <Item key={index}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n            props={{\\\\\\\\n              className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n              value: item,\\\\\\\\n              skipPaddingGap: true,\\\\\\\\n              placeholder: data.placeholder,\\\\\\\\n              inputProps: {\\\\\\\\n                prefix: data.prefix,\\\\\\\\n                disabled: true,\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"btn btn-outline-danger\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() => handleDeleteItem(index)}\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-trash-fill\\\\\\\\\\\\\\\" />\\\\\\\\n        </button>\\\\\\\\n      </Item>\\\\\\\\n    ))}\\\\\\\\n    {data.list.length < data.maxLength && (\\\\\\\\n      <Item>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.AccountInput`}\\\\\\\\n            props={{\\\\\\\\n              onUpdate: (value) => setNewItem(value),\\\\\\\\n              value: newItem,\\\\\\\\n              placeholder: data.placeholder,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"btn btn-success add-member\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={handleAddItem}\\\\\\\\n          disabled={newItem === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n          data-testid=\\\\\\\\\\\\\\\"add-to-list\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-plus\\\\\\\\\\\\\\\" />\\\\\\\\n        </button>\\\\\\\\n      </Item>\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.RadioButton\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\nconst RadioButton = ({ value, isChecked, label, onClick, disabled }) => {\\\\\\\\n  const [checked, setChecked] = useState(isChecked);\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    if (isChecked !== checked) {\\\\\\\\n      setChecked(isChecked);\\\\\\\\n    }\\\\\\\\n  }, [isChecked]);\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    onClick(checked);\\\\\\\\n  }, [checked]);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        className=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"\\\\\\\\n        disabled={disabled}\\\\\\\\n        value={value}\\\\\\\\n        checked={checked}\\\\\\\\n        onChange={(e) => setChecked(e.target.checked)}\\\\\\\\n      />\\\\\\\\n      <label className=\\\\\\\\\\\\\\\"form-check-label text-sm\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn RadioButton(props);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.CommentsAndLogs\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst snapshotHistory = props.snapshotHistory;\\\\\\\\nconst approvedProposals = props.approvedProposals ?? [];\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  .log-line {\\\\\\\\n    position: absolute;\\\\\\\\n    left: 7%;\\\\\\\\n    top: -30px;\\\\\\\\n    bottom: 0;\\\\\\\\n    z-index: 1;\\\\\\\\n    width: 1px;\\\\\\\\n    background-color: var(--bs-border-color);\\\\\\\\n    z-index: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .inline-flex {\\\\\\\\n    display: -webkit-inline-box !important;\\\\\\\\n    align-items: center !important;\\\\\\\\n    gap: 0.25rem !important;\\\\\\\\n    margin-right: 2px;\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommentContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// check snapshot history all keys and values for differences\\\\\\\\nfunction getDifferentKeysWithValues(obj1, obj2) {\\\\\\\\n  return Object.keys(obj1)\\\\\\\\n    .filter((key) => {\\\\\\\\n      if (key !== \\\\\\\\\\\\\\\"editor_id\\\\\\\\\\\\\\\" && obj2.hasOwnProperty(key)) {\\\\\\\\n        const value1 = obj1[key];\\\\\\\\n        const value2 = obj2[key];\\\\\\\\n        if (Array.isArray(value1) && Array.isArray(value2)) {\\\\\\\\n          const sortedValue1 = [...value1].sort();\\\\\\\\n          const sortedValue2 = [...value2].sort();\\\\\\\\n          return JSON.stringify(sortedValue1) !== JSON.stringify(sortedValue2);\\\\\\\\n        } else if (typeof value1 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" && typeof value2 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else {\\\\\\\\n          return value1 !== value2;\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      return false;\\\\\\\\n    })\\\\\\\\n    .map((key) => ({\\\\\\\\n      key,\\\\\\\\n      originalValue: obj1[key],\\\\\\\\n      modifiedValue: obj2[key],\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  data: null,\\\\\\\\n  socialComments: null,\\\\\\\\n  changedKeysListWithValues: null,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction sortTimelineAndComments() {\\\\\\\\n  const comments = Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", props.item);\\\\\\\\n\\\\\\\\n  if (state.changedKeysListWithValues === null) {\\\\\\\\n    const changedKeysListWithValues = snapshotHistory\\\\\\\\n      .slice(1)\\\\\\\\n      .map((item, index) => {\\\\\\\\n        const startingPoint = snapshotHistory[index]; // Set comparison to the previous item\\\\\\\\n        return {\\\\\\\\n          editorId: item.editor_id,\\\\\\\\n          ...getDifferentKeysWithValues(startingPoint, item),\\\\\\\\n        };\\\\\\\\n      });\\\\\\\\n    State.update({ changedKeysListWithValues });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort comments and timeline logs by time\\\\\\\\n  const snapShotTimeStamp = Array.isArray(snapshotHistory)\\\\\\\\n    ? snapshotHistory.map((i) => {\\\\\\\\n        return { blockHeight: null, timestamp: parseFloat(i.timestamp / 1e6) };\\\\\\\\n      })\\\\\\\\n    : [];\\\\\\\\n\\\\\\\\n  const commentsTimeStampPromise = Array.isArray(comments)\\\\\\\\n    ? Promise.all(\\\\\\\\n        comments.map((item) => {\\\\\\\\n          return asyncFetch(\\\\\\\\n            `https://api.near.social/time?blockHeight=${item.blockHeight}`\\\\\\\\n          ).then((res) => {\\\\\\\\n            const timeMs = parseFloat(res.body);\\\\\\\\n            return {\\\\\\\\n              blockHeight: item.blockHeight,\\\\\\\\n              timestamp: timeMs,\\\\\\\\n            };\\\\\\\\n          });\\\\\\\\n        })\\\\\\\\n      ).then((res) => res)\\\\\\\\n    : Promise.resolve([]);\\\\\\\\n\\\\\\\\n  commentsTimeStampPromise.then((commentsTimeStamp) => {\\\\\\\\n    const combinedArray = [...snapShotTimeStamp, ...commentsTimeStamp];\\\\\\\\n    combinedArray.sort((a, b) => a.timestamp - b.timestamp);\\\\\\\\n    State.update({ data: combinedArray, socialComments: comments });\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nif ((snapshotHistory ?? []).length > 0) {\\\\\\\\n  sortTimelineAndComments();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Comment = ({ commentItem }) => {\\\\\\\\n  const { accountId, blockHeight } = commentItem;\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n    blockHeight,\\\\\\\\n  };\\\\\\\\n  const content = JSON.parse(Social.get(item.path, blockHeight) ?? \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n  const link = `https://near.social/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=rfp&id=${props.id}&accountId=${accountId}&blockHeight=${blockHeight}`;\\\\\\\\n  function getHighlightCommentStyle() {\\\\\\\\n    const highlightComment =\\\\\\\\n      parseInt(props.blockHeight ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") === blockHeight &&\\\\\\\\n      props.accountId === accountId;\\\\\\\\n\\\\\\\\n    return {\\\\\\\\n      border: highlightComment ? \\\\\\\\\\\\\\\"2px solid black\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div style={{ zIndex: 99, background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n            props={{\\\\\\\\n              accountId: accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <CommentContainer\\\\\\\\n          style={getHighlightCommentStyle()}\\\\\\\\n          className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Header className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <Link href={`/near/widget/ProfilePage?accountId=${accountId}`}>\\\\\\\\n                <span className=\\\\\\\\\\\\\\\"fw-bold text-black\\\\\\\\\\\\\\\">{accountId}</span>\\\\\\\\n              </Link>\\\\\\\\n              commented \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight: blockHeight,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: accountId,\\\\\\\\n                    blockHeight: blockHeight,\\\\\\\\n                    contentPath: `/post/comment`,\\\\\\\\n                    contentType: \\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </Header>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n              props={{\\\\\\\\n                text: content.text,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LikeButton`}\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                props={{\\\\\\\\n                  url: link,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </CommentContainer>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction capitalizeFirstLetter(string) {\\\\\\\\n  const updated = string.replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n  return updated.charAt(0).toUpperCase() + updated.slice(1).toLowerCase();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction parseTimelineKeyAndValue(timeline, originalValue, modifiedValue) {\\\\\\\\n  const oldValue = originalValue[timeline];\\\\\\\\n  const newValue = modifiedValue[timeline];\\\\\\\\n  switch (timeline) {\\\\\\\\n    case \\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\":\\\\\\\\n      if (newValue === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED) {\\\\\\\\n        return (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved RFP to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            \\\\\\\\u{ff65} selected proposal(s) are{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            {approvedProposals.map((i, index) => (\\\\\\\\n              <span>\\\\\\\\n                <LinkToProposal id={i.proposal_id}>\\\\\\\\n                  {\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                  #{i.proposal_id} {i.name}\\\\\\\\n                </LinkToProposal>\\\\\\\\n                {index < approvedProposals.length - 1 && \\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"}\\\\\\\\n              </span>\\\\\\\\n            ))}\\\\\\\\n          </span>\\\\\\\\n        );\\\\\\\\n      }\\\\\\\\n      return (\\\\\\\\n        oldValue !== newValue && (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved RFP from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: oldValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            stage\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccountProfile = ({ accountId }) => {\\\\\\\\n  return (\\\\\\\\n    <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n        props={{\\\\\\\\n          accountId: accountId,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n          showAccountId: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </span>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction symmetricDifference(arr1, arr2) {\\\\\\\\n  const diffA = arr1.filter((item) => !arr2.includes(item));\\\\\\\\n  const diffB = arr2.filter((item) => !arr1.includes(item));\\\\\\\\n  return [...diffA, ...diffB];\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst LinkToProposal = ({ id, children }) => {\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n          id: id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      {children}\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst parseProposalKeyAndValue = (key, modifiedValue, originalValue) => {\\\\\\\\n  switch (key) {\\\\\\\\n    case \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed title</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"summary\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed {key}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed labels to {(modifiedValue ?? []).join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\": {\\\\\\\\n      const newProposals = modifiedValue || [];\\\\\\\\n      const oldProposals = originalValue || [];\\\\\\\\n      const difference = symmetricDifference(oldProposals, newProposals).join(\\\\\\\\n        \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n\\\\\\\\n      const isUnlinked = oldProposals.length > newProposals.length;\\\\\\\\n      const actionText = isUnlinked\\\\\\\\n        ? \\\\\\\\\\\\\\\"unlinked a proposal\\\\\\\\\\\\\\\"\\\\\\\\n        : \\\\\\\\\\\\\\\"linked a proposal\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          {actionText}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <LinkToProposal id={difference}> #{difference}</LinkToProposal>\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\": {\\\\\\\\n      const modifiedKeys = Object.keys(modifiedValue);\\\\\\\\n      const originalKeys = Object.keys(originalValue);\\\\\\\\n      return modifiedKeys.map((i, index) => {\\\\\\\\n        const text = parseTimelineKeyAndValue(i, originalValue, modifiedValue);\\\\\\\\n        return (\\\\\\\\n          text && (\\\\\\\\n            <span key={index} className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              {text}\\\\\\\\n              {text &&\\\\\\\\n                originalKeys.length > 1 &&\\\\\\\\n                index < modifiedKeys.length - 1 &&\\\\\\\\n                \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LogIconContainer = styled.div`\\\\\\\\n  margin-left: 50px;\\\\\\\\n  z-index: 99;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin-left: 10px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Log = ({ timestamp }) => {\\\\\\\\n  const updatedData = useMemo(\\\\\\\\n    () =>\\\\\\\\n      state.changedKeysListWithValues.find((obj) =>\\\\\\\\n        Object.values(obj).some(\\\\\\\\n          (value) =>\\\\\\\\n            value && parseFloat(value.modifiedValue / 1e6) === timestamp\\\\\\\\n        )\\\\\\\\n      ),\\\\\\\\n    [state.changedKeysListWithValues, timestamp]\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const editorId = updatedData.editorId;\\\\\\\\n  const valuesArray = Object.values(updatedData ?? {});\\\\\\\\n  // if valuesArray length is 2 that means it only has timestamp and editorId\\\\\\\\n  if (!updatedData || valuesArray.length === 2) {\\\\\\\\n    return <></>;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return valuesArray.map((i, index) => {\\\\\\\\n    if (i.key && i.key !== \\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\\") {\\\\\\\\n      return (\\\\\\\\n        <LogIconContainer\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          key={index}\\\\\\\\n        >\\\\\\\\n          <img\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiffqrxdi4xqu7erf46gdlwuodt6dm6rji2jtixs3iionjvga6rhdi\\\\\\\\\\\\\\\"\\\\\\\\n            height={30}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"flex-1 gap-1 w-100 text-wrap text-muted align-items-center \\\\\\\\\\\\\\\" +\\\\\\\\n              (i.key === \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" &&\\\\\\\\n              Object.keys(i.originalValue ?? {}).length > 1\\\\\\\\n                ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                : \\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n              <AccountProfile accountId={editorId} showAccountId={true} />\\\\\\\\n            </span>\\\\\\\\n            {parseProposalKeyAndValue(i.key, i.modifiedValue, i.originalValue)}\\\\\\\\n            \\\\\\\\u{ff65}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n              props={{\\\\\\\\n                blockTimestamp: timestamp * 1000000,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </LogIconContainer>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (Array.isArray(state.data)) {\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"log-line\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ height: state.data.length > 2 ? \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"150%\\\\\\\\\\\\\\\" }}\\\\\\\\n      ></div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n        {state.data.map((i, index) => {\\\\\\\\n          if (i.blockHeight) {\\\\\\\\n            const item = state.socialComments.find(\\\\\\\\n              (t) => t.blockHeight === i.blockHeight\\\\\\\\n            );\\\\\\\\n            return <Comment commentItem={item} />;\\\\\\\\n          } else {\\\\\\\\n            return <Log timestamp={i.timestamp} key={index} />;\\\\\\\\n          }\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.AccountInput\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst value = props.value;\\\\\\\\nconst placeholder = props.placeholder;\\\\\\\\nconst onUpdate = props.onUpdate;\\\\\\\\n\\\\\\\\nconst [account, setAccount] = useState(value);\\\\\\\\nconst [showAccountAutocomplete, setAutoComplete] = useState(false);\\\\\\\\nconst [isValidAccount, setValidAccount] = useState(true);\\\\\\\\nconst AutoComplete = styled.div`\\\\\\\\n  margin-top: 1rem;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (value !== account) {\\\\\\\\n    setAccount(value);\\\\\\\\n  }\\\\\\\\n}, [value]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (value !== account) {\\\\\\\\n    onUpdate(account);\\\\\\\\n  }\\\\\\\\n}, [account]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    const valid = account.length === 64 || (account ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").includes(\\\\\\\\\\\\\\\".near\\\\\\\\\\\\\\\");\\\\\\\\n    setValidAccount(valid);\\\\\\\\n    setAutoComplete(!valid);\\\\\\\\n  }, 100);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [account]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: account,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          setAccount(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        placeholder: placeholder,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 64,\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    {account && !isValidAccount && (\\\\\\\\n      <div style={{ color: \\\\\\\\\\\\\\\"red\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"text-sm mt-1\\\\\\\\\\\\\\\">\\\\\\\\n        Please enter valid account ID\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n    {showAccountAutocomplete && (\\\\\\\\n      <AutoComplete>\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.AccountAutocomplete`}\\\\\\\\n          props={{\\\\\\\\n            term: account,\\\\\\\\n            onSelect: (id) => {\\\\\\\\n              setAccount(id);\\\\\\\\n              setAutoComplete(false);\\\\\\\\n            },\\\\\\\\n            onClose: () => setAutoComplete(false),\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </AutoComplete>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.FilterByLabel\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst availableOptions = props.availableOptions;\\\\\\\\nconst options =\\\\\\\\n  (availableOptions ?? []).map((i) => {\\\\\\\\n    return { label: i.title, value: i.value };\\\\\\\\n  }) ?? [];\\\\\\\\noptions.unshift({ label: \\\\\\\\\\\\\\\"All\\\\\\\\\\\\\\\", value: null });\\\\\\\\nconst setSelected = props.onStateChange ?? (() => {});\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n      props={{\\\\\\\\n        options: options,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelected(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.ComposeComment\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst proposalId = props.proposalId;\\\\\\\\nconst rfpId = props.rfpId;\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_COMMENT_DRAFT\\\\\\\\\\\\\\\" + proposalId;\\\\\\\\nlet draftComment = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst ComposeEmbeddCSS = `\\\\\\\\n  .CodeMirror {\\\\\\\\n    border: none !important;\\\\\\\\n    min-height: 50px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .CodeMirror-scroll{\\\\\\\\n    min-height: 50px !important;\\\\\\\\n    max-height: 300px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst notifyAccountIds = props.notifyAccountIds ?? [];\\\\\\\\nconst accountId = context.accountId;\\\\\\\\nconst item = props.item;\\\\\\\\nconst [allowGetDraft, setAllowGetDraft] = useState(true);\\\\\\\\nconst [comment, setComment] = useState(null);\\\\\\\\nconst [isTxnCreated, setTxnCreated] = useState(false);\\\\\\\\nconst [handler, setHandler] = useState(\\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\"); // to update editor state on draft and txn approval\\\\\\\\nconst [showCommentToast, setCommentToast] = useState(false);\\\\\\\\n\\\\\\\\nif (allowGetDraft) {\\\\\\\\n  draftComment = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (draftComment) {\\\\\\\\n    setComment(draftComment);\\\\\\\\n    setAllowGetDraft(false);\\\\\\\\n    setHandler(\\\\\\\\\\\\\\\"refreshEditor\\\\\\\\\\\\\\\");\\\\\\\\n  }\\\\\\\\n}, [draftComment]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (draftComment === comment) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, comment);\\\\\\\\n  }, 1000);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [comment]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (handler === \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\") {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setHandler(\\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\");\\\\\\\\n  }, 3000);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [handler]);\\\\\\\\n\\\\\\\\nif (!accountId) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{\\\\\\\\n        marginLeft: 10,\\\\\\\\n        backgroundColor: \\\\\\\\\\\\\\\"#ECF8FB\\\\\\\\\\\\\\\",\\\\\\\\n        border: \\\\\\\\\\\\\\\"1px solid #E2E6EC\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1 p-4 rounded-2 flex-wrap flex-md-nowrap\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Link to=\\\\\\\\\\\\\\\"https://near.org/signup\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n          props={{\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"grey-btn\\\\\\\\\\\\\\\" },\\\\\\\\n            label: \\\\\\\\\\\\\\\"Sign up\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </Link>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">to join this conversation.</div>\\\\\\\\n      <div>Already have an account?</div>\\\\\\\\n      <a className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://near.org/signin\\\\\\\\\\\\\\\">\\\\\\\\n        Log in to comment\\\\\\\\n      </a>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractMentions(text) {\\\\\\\\n  const mentionRegex =\\\\\\\\n    /@((?:(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+\\\\\\\\\\\\\\\\.)*(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+)/gi;\\\\\\\\n  mentionRegex.lastIndex = 0;\\\\\\\\n  const accountIds = new Set();\\\\\\\\n  for (const match of text.matchAll(mentionRegex)) {\\\\\\\\n    if (\\\\\\\\n      !/[\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index - 1)) &&\\\\\\\\n      !/[/\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index + match[0].length)) &&\\\\\\\\n      match[1].length >= 2 &&\\\\\\\\n      match[1].length <= 64\\\\\\\\n    ) {\\\\\\\\n      accountIds.add(match[1].toLowerCase());\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return [...accountIds];\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractTagNotifications(text, item) {\\\\\\\\n  return extractMentions(text || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n    .filter((accountId) => accountId !== context.accountId)\\\\\\\\n    .map((accountId) => ({\\\\\\\\n      key: accountId,\\\\\\\\n      value: {\\\\\\\\n        type: \\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\n        item,\\\\\\\\n      },\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction composeData() {\\\\\\\\n  setTxnCreated(true);\\\\\\\\n  const data = {\\\\\\\\n    post: {\\\\\\\\n      comment: JSON.stringify({\\\\\\\\n        type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n        text: comment,\\\\\\\\n        item,\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n    index: {\\\\\\\\n      comment: JSON.stringify({\\\\\\\\n        key: item,\\\\\\\\n        value: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const notifications = extractTagNotifications(comment, {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  if (notifyAccountIds.length > 0) {\\\\\\\\n    notifyAccountIds.map((account) => {\\\\\\\\n      if (account !== context.accountId) {\\\\\\\\n        notifications.push({\\\\\\\\n          key: account,\\\\\\\\n          value: proposalId\\\\\\\\n            ? {\\\\\\\\n                type: \\\\\\\\\\\\\\\"devhub/reply\\\\\\\\\\\\\\\",\\\\\\\\n                item,\\\\\\\\n                proposal: proposalId,\\\\\\\\n              }\\\\\\\\n            : {\\\\\\\\n                type: \\\\\\\\\\\\\\\"devhub/reply\\\\\\\\\\\\\\\",\\\\\\\\n                item,\\\\\\\\n                rfpId: rfpId,\\\\\\\\n              },\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (notifications.length) {\\\\\\\\n    data.index.notify = JSON.stringify(\\\\\\\\n      notifications.length > 1 ? notifications : notifications[0]\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Social.set(data, {\\\\\\\\n    force: true,\\\\\\\\n    onCommit: () => {\\\\\\\\n      setCommentToast(true);\\\\\\\\n      setComment(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n      setHandler(\\\\\\\\\\\\\\\"refreshEditor\\\\\\\\\\\\\\\");\\\\\\\\n      setTxnCreated(false);\\\\\\\\n    },\\\\\\\\n    onCancel: () => {\\\\\\\\n      setTxnCreated(false);\\\\\\\\n    },\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes && comment) {\\\\\\\\n    setComment(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"comment-btn-spinner spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Compose = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: comment,\\\\\\\\n        onChangeKeyup: setComment,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Add your comment here...\\\\\\\\\\\\\\\",\\\\\\\\n        height: \\\\\\\\\\\\\\\"250\\\\\\\\\\\\\\\",\\\\\\\\n        embeddCSS: ComposeEmbeddCSS,\\\\\\\\n        handler: handler,\\\\\\\\n        showProposalIdAutoComplete: true,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftComment, handler]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_NEAR}/widget/DIG.Toast`}\\\\\\\\n      props={{\\\\\\\\n        title: \\\\\\\\\\\\\\\"Comment Submitted Successfully\\\\\\\\\\\\\\\",\\\\\\\\n        type: \\\\\\\\\\\\\\\"success\\\\\\\\\\\\\\\",\\\\\\\\n        open: showCommentToast,\\\\\\\\n        onOpenChange: (v) => setCommentToast(v),\\\\\\\\n        trigger: <></>,\\\\\\\\n        providerProps: { duration: 3000 },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n      props={{\\\\\\\\n        accountId: accountId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"mt-1\\\\\\\\\\\\\\\">Add a comment</b>\\\\\\\\n      {Compose}\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-content-center justify-content-end\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n          props={{\\\\\\\\n            label: isTxnCreated ? LoadingButtonSpinner : \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n            [\\\\\\\\\\\\\\\"data-testid\\\\\\\\\\\\\\\"]: \\\\\\\\\\\\\\\"compose-comment\\\\\\\\\\\\\\\",\\\\\\\\n            disabled: !comment || isTxnCreated,\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"green-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n            onClick: () => {\\\\\\\\n              composeData();\\\\\\\\n            },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.NavbarDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst title = props.title;\\\\\\\\nconst links = props.links;\\\\\\\\nconst href = props.href;\\\\\\\\n\\\\\\\\nconst [showMenu, setShowMenu] = useState(false);\\\\\\\\n\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst Dropdown = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: center;\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    &.active {\\\\\\\\n      color: #fff;\\\\\\\\n\\\\\\\\n      &:hover {\\\\\\\\n        text-decoration: none;\\\\\\\\n        color: #096d50 !important;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst DropdownMenu = styled.div`\\\\\\\\n  z-index: 50;\\\\\\\\n  position: absolute;\\\\\\\\n  top: 2.25rem;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    padding: 0.5rem 1rem;\\\\\\\\n    padding-top: 1rem;\\\\\\\\n    border-radius: 1rem;\\\\\\\\n    background: rgba(217, 217, 217, 0.7);\\\\\\\\n    backdrop-filter: blur(5px);\\\\\\\\n    width: max-content;\\\\\\\\n    animation: slide-down 300ms ease;\\\\\\\\n    transform-origin: top center;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @keyframes slide-down {\\\\\\\\n    0% {\\\\\\\\n      transform: scaleY(0);\\\\\\\\n    }\\\\\\\\n    100% {\\\\\\\\n      transform: scaleY(1);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst DropdownLink = styled.div`\\\\\\\\n  color: inherit;\\\\\\\\n  text-decoration: none;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    color: #555555;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n    color: #096d50 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Dropdown\\\\\\\\n    onMouseEnter={() => setShowMenu(true)}\\\\\\\\n    onMouseLeave={() => setShowMenu(false)}\\\\\\\\n  >\\\\\\\\n    {href ? (\\\\\\\\n      <DropdownLink className={href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"} href={href}>\\\\\\\\n        <Link\\\\\\\\n          style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n          to={linkHref({\\\\\\\\n            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n            params: { page: href },\\\\\\\\n          })}\\\\\\\\n        >\\\\\\\\n          {title}\\\\\\\\n        </Link>\\\\\\\\n      </DropdownLink>\\\\\\\\n    ) : (\\\\\\\\n      <p className={`m-0 py-2 nav-dropdown`} style={{ cursor: \\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {title} \\\\\\\\u{2193}\\\\\\\\n      </p>\\\\\\\\n    )}\\\\\\\\n    {showMenu && links.length !== 0 && (\\\\\\\\n      <DropdownMenu className={`${showMenu && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}`}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n          {links.map((link) => (\\\\\\\\n            // Check if the link is external\\\\\\\\n            <DropdownLink\\\\\\\\n              className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n              key={`${link.title}-${link.href}`}\\\\\\\\n            >\\\\\\\\n              {link.href.startsWith(\\\\\\\\\\\\\\\"http://\\\\\\\\\\\\\\\") ||\\\\\\\\n              link.href.startsWith(\\\\\\\\\\\\\\\"https://\\\\\\\\\\\\\\\") ? (\\\\\\\\n                // External link: Render an <a> tag\\\\\\\\n                <a\\\\\\\\n                  href={link.href}\\\\\\\\n                  style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n                  target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {link.title}\\\\\\\\n                </a>\\\\\\\\n              ) : (\\\\\\\\n                // Internal link: Render the <Link> component\\\\\\\\n                <Link\\\\\\\\n                  style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n                  to={linkHref({\\\\\\\\n                    widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                    params: { page: link.href },\\\\\\\\n                  })}\\\\\\\\n                >\\\\\\\\n                  {link.title}\\\\\\\\n                </Link>\\\\\\\\n              )}\\\\\\\\n            </DropdownLink>\\\\\\\\n          ))}\\\\\\\\n        </div>\\\\\\\\n      </DropdownMenu>\\\\\\\\n    )}\\\\\\\\n  </Dropdown>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.ConfirmCancelModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst onCancelClick = props.onCancelClick;\\\\\\\\nconst onConfirmClick = props.onConfirmClick;\\\\\\\\nconst linkedProposalIds = props.linkedProposalIds;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background: rgb(244, 244, 244) !important;\\\\\\\\n    max-height: 300px;\\\\\\\\n    overflow-y: auto;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.5);\\\\\\\\n  opacity: 0.4;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst [proposalStatus, setProposalStatus] = useState(null);\\\\\\\\n\\\\\\\\nconst OptionForm = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 pl-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n        props={{\\\\\\\\n          value: CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS,\\\\\\\\n          label: (\\\\\\\\n            <div>\\\\\\\\n              <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Option 1: </span>Cancel all linked\\\\\\\\n              proposals\\\\\\\\n            </div>\\\\\\\\n          ),\\\\\\\\n          isChecked: proposalStatus === CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS,\\\\\\\\n          onClick: (v) => {\\\\\\\\n            if (v) {\\\\\\\\n              setProposalStatus(CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS);\\\\\\\\n            }\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n        props={{\\\\\\\\n          value: CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS,\\\\\\\\n          label: (\\\\\\\\n            <div>\\\\\\\\n              <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Option 2: </span> Unlink all linked\\\\\\\\n              proposals (maintain their status)\\\\\\\\n            </div>\\\\\\\\n          ),\\\\\\\\n          isChecked: proposalStatus === CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS,\\\\\\\\n          onClick: (v) => {\\\\\\\\n            if (v) {\\\\\\\\n              setProposalStatus(CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS);\\\\\\\\n            }\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n        props={{\\\\\\\\n          value: CANCEL_RFP_OPTIONS.NONE,\\\\\\\\n          label: (\\\\\\\\n            <div>\\\\\\\\n              <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Option 3: </span> Leave all linked\\\\\\\\n              proposals as they are\\\\\\\\n            </div>\\\\\\\\n          ),\\\\\\\\n          isChecked: proposalStatus === CANCEL_RFP_OPTIONS.NONE,\\\\\\\\n          onClick: (v) => {\\\\\\\\n            if (v) {\\\\\\\\n              setProposalStatus(CANCEL_RFP_OPTIONS.NONE);\\\\\\\\n            }\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [proposalStatus]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Are you sure you want to cancel this RFP?</h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n        <ModalContent className=\\\\\\\\\\\\\\\"text-muted d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n          The RFP status will change to \\\\\\\\u{201c}Cancelled\\\\\\\\u{201d} and it will no longer be\\\\\\\\n          active or relevant. Comments will remain open.\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"bg-grey d-flex flex-column p-3 rounded-1 text-black\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"h6\\\\\\\\\\\\\\\">\\\\\\\\n              Linked Proposals ({linkedProposalIds.length})\\\\\\\\n            </div>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n              props={{\\\\\\\\n                linkedProposalIds: linkedProposalIds,\\\\\\\\n                showStatus: true,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"text-muted d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-lg\\\\\\\\\\\\\\\">\\\\\\\\n              What would you like to do with the linked proposals?\\\\\\\\n            </div>\\\\\\\\n            {OptionForm}\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"text-sm mt-2\\\\\\\\\\\\\\\">\\\\\\\\n            Note: To take specific actions on individual proposals, please\\\\\\\\n            manage them from their respective pages.\\\\\\\\n          </div>\\\\\\\\n        </ModalContent>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-outline-secondary\\\\\\\\\\\\\\\" },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onCancelClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-danger\\\\\\\\\\\\\\\" },\\\\\\\\n              disabled: !proposalStatus,\\\\\\\\n              label: \\\\\\\\\\\\\\\"Ready to Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: () => onConfirmClick(proposalStatus),\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedProposals\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst linkedProposalIds = props.linkedProposalIds ?? [];\\\\\\\\nconst linkedProposalsData = [];\\\\\\\\nconst showStatus = props.showStatus ?? false;\\\\\\\\n\\\\\\\\n// using contract instead of indexer, since indexer doesn\\\\\\\\\\\\'t return timestamp\\\\\\\\nlinkedProposalIds.map((item) => {\\\\\\\\n  const data = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id: item,\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n  if (data !== null) {\\\\\\\\n    linkedProposalsData.push(data);\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  a {\\\\\\\\n    &:hover {\\\\\\\\n      text-decoration: none !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    {linkedProposalsData.map((item) => {\\\\\\\\n      const link = `https://near.org/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=proposal&id=${item.id}`;\\\\\\\\n      return (\\\\\\\\n        <a href={link} target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\" rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n              props={{\\\\\\\\n                accountId: item.snapshot.editor_id,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\" style={{ maxWidth: 250 }}>\\\\\\\\n              <b className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">{item.snapshot.name}</b>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                created on {readableDate(item.snapshot.timestamp / 1000000)}\\\\\\\\n              </div>\\\\\\\\n              {showStatus && (\\\\\\\\n                <div style={{ width: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"mt-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Widget\\\\\\\\n                    src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n                    props={{\\\\\\\\n                      timelineStatus: item.snapshot.timeline.status,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </a>\\\\\\\\n      );\\\\\\\\n    })}\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.CommentsAndLogs\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst snapshotHistory = props.snapshotHistory;\\\\\\\\nconst latestSnapshot = props.latestSnapshot;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  .log-line {\\\\\\\\n    position: absolute;\\\\\\\\n    left: 7%;\\\\\\\\n    top: -30px;\\\\\\\\n    bottom: 0;\\\\\\\\n    z-index: 1;\\\\\\\\n    width: 1px;\\\\\\\\n    background-color: var(--bs-border-color);\\\\\\\\n    z-index: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .inline-flex {\\\\\\\\n    display: -webkit-inline-box !important;\\\\\\\\n    align-items: center !important;\\\\\\\\n    gap: 0.25rem !important;\\\\\\\\n    margin-right: 2px;\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommentContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// check snapshot history all keys and values for differences\\\\\\\\nfunction getDifferentKeysWithValues(obj1, obj2) {\\\\\\\\n  return Object.keys(obj1)\\\\\\\\n    .filter((key) => {\\\\\\\\n      if (key !== \\\\\\\\\\\\\\\"editor_id\\\\\\\\\\\\\\\" && obj2.hasOwnProperty(key)) {\\\\\\\\n        const value1 = obj1[key];\\\\\\\\n        const value2 = obj2[key];\\\\\\\\n        if (Array.isArray(value1) && Array.isArray(value2)) {\\\\\\\\n          const sortedValue1 = [...value1].sort();\\\\\\\\n          const sortedValue2 = [...value2].sort();\\\\\\\\n          return JSON.stringify(sortedValue1) !== JSON.stringify(sortedValue2);\\\\\\\\n        } else if (typeof value1 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" && typeof value2 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else {\\\\\\\\n          return value1 !== value2;\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      return false;\\\\\\\\n    })\\\\\\\\n    .map((key) => ({\\\\\\\\n      key,\\\\\\\\n      originalValue: obj1[key],\\\\\\\\n      modifiedValue: obj2[key],\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  data: null,\\\\\\\\n  socialComments: null,\\\\\\\\n  changedKeysListWithValues: null,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction sortTimelineAndComments() {\\\\\\\\n  const comments = Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", props.item, { subscribe: true });\\\\\\\\n\\\\\\\\n  if (state.changedKeysListWithValues === null) {\\\\\\\\n    const changedKeysListWithValues = snapshotHistory\\\\\\\\n      .slice(1)\\\\\\\\n      .map((item, index) => {\\\\\\\\n        const startingPoint = snapshotHistory[index]; // Set comparison to the previous item\\\\\\\\n        return {\\\\\\\\n          editorId: item.editor_id,\\\\\\\\n          ...getDifferentKeysWithValues(startingPoint, item),\\\\\\\\n        };\\\\\\\\n      });\\\\\\\\n    State.update({ changedKeysListWithValues });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort comments and timeline logs by time\\\\\\\\n  const snapShotTimeStamp = Array.isArray(snapshotHistory)\\\\\\\\n    ? snapshotHistory.map((i) => {\\\\\\\\n        return { blockHeight: null, timestamp: parseFloat(i.timestamp / 1e6) };\\\\\\\\n      })\\\\\\\\n    : [];\\\\\\\\n\\\\\\\\n  const commentsTimeStampPromise = Array.isArray(comments)\\\\\\\\n    ? Promise.all(\\\\\\\\n        comments.map((item) => {\\\\\\\\n          return asyncFetch(\\\\\\\\n            `https://api.near.social/time?blockHeight=${item.blockHeight}`\\\\\\\\n          ).then((res) => {\\\\\\\\n            const timeMs = parseFloat(res.body);\\\\\\\\n            return {\\\\\\\\n              blockHeight: item.blockHeight,\\\\\\\\n              timestamp: timeMs,\\\\\\\\n            };\\\\\\\\n          });\\\\\\\\n        })\\\\\\\\n      ).then((res) => res)\\\\\\\\n    : Promise.resolve([]);\\\\\\\\n\\\\\\\\n  commentsTimeStampPromise.then((commentsTimeStamp) => {\\\\\\\\n    const combinedArray = [...snapShotTimeStamp, ...commentsTimeStamp];\\\\\\\\n    combinedArray.sort((a, b) => a.timestamp - b.timestamp);\\\\\\\\n    State.update({ data: combinedArray, socialComments: comments });\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nif ((snapshotHistory ?? []).length > 0) {\\\\\\\\n  sortTimelineAndComments();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Comment = ({ commentItem }) => {\\\\\\\\n  const { accountId, blockHeight } = commentItem;\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n    blockHeight,\\\\\\\\n  };\\\\\\\\n  const content = JSON.parse(Social.get(item.path, blockHeight) ?? \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n  const link = `https://near.org/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=proposal&id=${props.id}&accountId=${accountId}&blockHeight=${blockHeight}`;\\\\\\\\n  const hightlightComment =\\\\\\\\n    parseInt(props.blockHeight ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") === blockHeight &&\\\\\\\\n    props.accountId === accountId;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div style={{ zIndex: 99, background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n            props={{\\\\\\\\n              accountId: accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <CommentContainer\\\\\\\\n          style={{ border: hightlightComment ? \\\\\\\\\\\\\\\"2px solid black\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Header className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <Link href={`/near/widget/ProfilePage?accountId=${accountId}`}>\\\\\\\\n                <span className=\\\\\\\\\\\\\\\"fw-bold text-black\\\\\\\\\\\\\\\">{accountId}</span>\\\\\\\\n              </Link>\\\\\\\\n              commented \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight: blockHeight,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: accountId,\\\\\\\\n                    blockHeight: blockHeight,\\\\\\\\n                    contentPath: `/post/comment`,\\\\\\\\n                    contentType: \\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </Header>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n              props={{\\\\\\\\n                text: content.text,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LikeButton`}\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                props={{\\\\\\\\n                  url: link,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </CommentContainer>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction capitalizeFirstLetter(string) {\\\\\\\\n  const updated = string.replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n  return updated.charAt(0).toUpperCase() + updated.slice(1).toLowerCase();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction parseTimelineKeyAndValue(timeline, originalValue, modifiedValue) {\\\\\\\\n  const oldValue = originalValue[timeline];\\\\\\\\n  const newValue = modifiedValue[timeline];\\\\\\\\n  switch (timeline) {\\\\\\\\n    case \\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\": {\\\\\\\\n      if (\\\\\\\\n        (newValue === PROPOSAL_TIMELINE_STATUS.APPROVED ||\\\\\\\\n          newValue === PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY) &&\\\\\\\\n        latestSnapshot.linked_rfp\\\\\\\\n      ) {\\\\\\\\n        return (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved proposal to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            \\\\\\\\u{ff65} this proposal is selected for RFP{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <LinkToRfp id={latestSnapshot.linked_rfp}>\\\\\\\\n              #{latestSnapshot.linked_rfp}\\\\\\\\n            </LinkToRfp>\\\\\\\\n          </span>\\\\\\\\n        );\\\\\\\\n      } else\\\\\\\\n        return (\\\\\\\\n          oldValue !== newValue && (\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              moved proposal from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n                props={{\\\\\\\\n                  timelineStatus: oldValue,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n                props={{\\\\\\\\n                  timelineStatus: newValue,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              stage\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"sponsor_requested_review\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed review</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"reviewer_completed_attestation\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed attestation</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"kyc_verified\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>verified KYC/KYB</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"test_transaction_sent\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        !oldValue &&\\\\\\\\n        newValue && (\\\\\\\\n          <span>\\\\\\\\n            confirmed sponsorship and shared funding steps with recipient\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"payouts\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>updated the funding payment links.</span>;\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccountProfile = ({ accountId }) => {\\\\\\\\n  return (\\\\\\\\n    <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n        props={{\\\\\\\\n          accountId: accountId,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n          showAccountId: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </span>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LinkToRfp = ({ id, children }) => {\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n          id: id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      {children}\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst parseProposalKeyAndValue = (key, modifiedValue, originalValue) => {\\\\\\\\n  switch (key) {\\\\\\\\n    case \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed title</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"summary\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed {key}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed labels to {(modifiedValue ?? []).join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed category from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>updated linked proposals</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_rfp\\\\\\\\\\\\\\\": {\\\\\\\\n      const isUnlinked = isNumber(originalValue) && !isNumber(modifiedValue);\\\\\\\\n      const actionText = isUnlinked ? \\\\\\\\\\\\\\\"unlinked\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"linked\\\\\\\\\\\\\\\";\\\\\\\\n      const rfpId = originalValue ?? modifiedValue;\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          {actionText} an RFP <LinkToRfp id={rfpId}>#{rfpId}</LinkToRfp>\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_usd_amount\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship amount from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_paid_in_currency\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship currency from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"receiver_account\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed receiver account from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"supervisor\\\\\\\\\\\\\\\":\\\\\\\\n      return !originalValue && modifiedValue ? (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          added\\\\\\\\n          <AccountProfile accountId={modifiedValue} />\\\\\\\\n          as project coordinator\\\\\\\\n        </span>\\\\\\\\n      ) : (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed project coordinator from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\": {\\\\\\\\n      const modifiedKeys = Object.keys(modifiedValue);\\\\\\\\n      const originalKeys = Object.keys(originalValue);\\\\\\\\n      return modifiedKeys.map((i, index) => {\\\\\\\\n        const text = parseTimelineKeyAndValue(i, originalValue, modifiedValue);\\\\\\\\n        return (\\\\\\\\n          text && (\\\\\\\\n            <span key={index} className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              {text}\\\\\\\\n              {text && \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LogIconContainer = styled.div`\\\\\\\\n  margin-left: 50px;\\\\\\\\n  z-index: 99;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin-left: 10px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Log = ({ timestamp }) => {\\\\\\\\n  const updatedData = useMemo(\\\\\\\\n    () =>\\\\\\\\n      state.changedKeysListWithValues.find((obj) =>\\\\\\\\n        Object.values(obj).some(\\\\\\\\n          (value) =>\\\\\\\\n            value && parseFloat(value.modifiedValue / 1e6) === timestamp\\\\\\\\n        )\\\\\\\\n      ),\\\\\\\\n    [state.changedKeysListWithValues, timestamp]\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const editorId = updatedData.editorId;\\\\\\\\n  const valuesArray = Object.values(updatedData ?? {});\\\\\\\\n  // if valuesArray length is 2 that means it only has timestamp and editorId\\\\\\\\n  if (!updatedData || valuesArray.length === 2) {\\\\\\\\n    return <></>;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return valuesArray.map((i, index) => {\\\\\\\\n    if (i.key && i.key !== \\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\\") {\\\\\\\\n      return (\\\\\\\\n        <LogIconContainer\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          key={index}\\\\\\\\n        >\\\\\\\\n          <img\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiffqrxdi4xqu7erf46gdlwuodt6dm6rji2jtixs3iionjvga6rhdi\\\\\\\\\\\\\\\"\\\\\\\\n            height={30}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"flex-1 gap-1 w-100 text-wrap text-muted align-items-center \\\\\\\\\\\\\\\" +\\\\\\\\n              (i.key === \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" &&\\\\\\\\n              Object.keys(i.originalValue ?? {}).length > 1\\\\\\\\n                ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                : \\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n              <AccountProfile accountId={editorId} showAccountId={true} />{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n            {parseProposalKeyAndValue(i.key, i.modifiedValue, i.originalValue)}\\\\\\\\n            {i.key !== \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" && \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n              props={{\\\\\\\\n                blockTimestamp: timestamp * 1000000,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </LogIconContainer>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (Array.isArray(state.data)) {\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"log-line\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ height: state.data.length > 2 ? \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"150%\\\\\\\\\\\\\\\" }}\\\\\\\\n      ></div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n        {state.data.map((i, index) => {\\\\\\\\n          if (i.blockHeight) {\\\\\\\\n            const item = state.socialComments.find(\\\\\\\\n              (t) => t.blockHeight === i.blockHeight\\\\\\\\n            );\\\\\\\\n            return <Comment commentItem={item} />;\\\\\\\\n          } else {\\\\\\\\n            return <Log timestamp={i.timestamp} key={index} />;\\\\\\\\n          }\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.TimelineConfigurator\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst stepsArray = [1, 2, 3];\\\\\\\\nconst timeline = props.timeline;\\\\\\\\nconst disabled = props.disabled;\\\\\\\\nconst setTimeline = props.setTimeline ?? (() => {});\\\\\\\\n\\\\\\\\nconst TimelineStatusOptions = [\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Accepting Submissions\\\\\\\\\\\\\\\",\\\\\\\\n    value: { status: RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Evaluation\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: RFP_TIMELINE_STATUS.EVALUATION,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Proposal Selected\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Cancelled\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .circle-lg {\\\\\\\\n    width: 15px;\\\\\\\\n    height: 15px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 85px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 65px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nconst selectedTimelineStatusIndex = useMemo(\\\\\\\\n  () =>\\\\\\\\n    TimelineStatusOptions.findIndex((i) => i.value.status === timeline.status),\\\\\\\\n  [timeline]\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst TimelineItems = ({ title, children, value, values }) => {\\\\\\\\n  const indexOfCurrentItem = TimelineStatusOptions.findIndex((i) =>\\\\\\\\n    Array.isArray(values)\\\\\\\\n      ? values.includes(i.value.status)\\\\\\\\n      : value === i.value.status\\\\\\\\n  );\\\\\\\\n  let color = \\\\\\\\\\\\\\\"transparent\\\\\\\\\\\\\\\";\\\\\\\\n  let statusIndex = selectedTimelineStatusIndex;\\\\\\\\n  // index 2,3 is of decision\\\\\\\\n  if (selectedTimelineStatusIndex === 3) {\\\\\\\\n    statusIndex = 2;\\\\\\\\n  }\\\\\\\\n  if (statusIndex === indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FEF6EE\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  if (statusIndex > indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#EEFEF0\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // cancelled\\\\\\\\n  if (\\\\\\\\n    statusIndex === 2 &&\\\\\\\\n    (values ?? []).includes(RFP_TIMELINE_STATUS.CANCELLED) &&\\\\\\\\n    timeline.status === RFP_TIMELINE_STATUS.CANCELLED\\\\\\\\n  ) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"p-2 rounded-3\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        backgroundColor: color,\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 text-black\\\\\\\\\\\\\\\"> {title}</div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n    {!disabled && (\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n        <h6 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Status</h6>\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.DropDown`}\\\\\\\\n          props={{\\\\\\\\n            options: TimelineStatusOptions,\\\\\\\\n            selectedValue: TimelineStatusOptions.find(\\\\\\\\n              (i) => i.value.status === timeline.status\\\\\\\\n            ),\\\\\\\\n            onUpdate: (v) => {\\\\\\\\n              setTimeline({ status: v.value.status });\\\\\\\\n            },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-3 mt-2\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column mt-4\\\\\\\\\\\\\\\">\\\\\\\\n        {stepsArray.map((_, index) => {\\\\\\\\n          const indexOfCurrentItem = index;\\\\\\\\n          let color = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n          let statusIndex = selectedTimelineStatusIndex;\\\\\\\\n          // index 2,3 is of decision\\\\\\\\n          if (selectedTimelineStatusIndex === 3) {\\\\\\\\n            statusIndex = 2;\\\\\\\\n          }\\\\\\\\n          const current = statusIndex === indexOfCurrentItem;\\\\\\\\n          const completed =\\\\\\\\n            statusIndex > indexOfCurrentItem ||\\\\\\\\n            timeline.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED ||\\\\\\\\n            timeline.status === RFP_TIMELINE_STATUS.CANCELLED;\\\\\\\\n          return (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n              <div\\\\\\\\n                className={\\\\\\\\n                  \\\\\\\\\\\\\\\"circle-lg \\\\\\\\\\\\\\\" +\\\\\\\\n                  (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                  (current && !completed && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {completed && (\\\\\\\\n                  <div\\\\\\\\n                    className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n                    style={{ height: \\\\\\\\\\\\\\\"120%\\\\\\\\\\\\\\\" }}\\\\\\\\n                  >\\\\\\\\n                    <i className=\\\\\\\\\\\\\\\"bi bi-check\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n              {index !== stepsArray.length - 1 && (\\\\\\\\n                <div\\\\\\\\n                  className={\\\\\\\\n                    \\\\\\\\\\\\\\\"vertical-line \\\\\\\\\\\\\\\" +\\\\\\\\n                    (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                    (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                  }\\\\\\\\n                ></div>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          );\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n        <TimelineItems\\\\\\\\n          title=\\\\\\\\\\\\\\\"1) Accepting Submissions\\\\\\\\\\\\\\\"\\\\\\\\n          value={RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS}\\\\\\\\n        >\\\\\\\\n          <div>During this stage, the RFP is still open for submissions.</div>\\\\\\\\n        </TimelineItems>\\\\\\\\n        <TimelineItems\\\\\\\\n          title=\\\\\\\\\\\\\\\"2) Evaluation\\\\\\\\\\\\\\\"\\\\\\\\n          value={RFP_TIMELINE_STATUS.EVALUATION}\\\\\\\\n        >\\\\\\\\n          <div>\\\\\\\\n            This RFP is closed for submissions. All submitted proposals are\\\\\\\\n            under review.\\\\\\\\n          </div>\\\\\\\\n        </TimelineItems>\\\\\\\\n        <TimelineItems\\\\\\\\n          title=\\\\\\\\\\\\\\\"3) Decision\\\\\\\\\\\\\\\"\\\\\\\\n          values={[\\\\\\\\n            RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n            RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n          ]}\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div>Sponsor makes a final decision:</div>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n              props={{\\\\\\\\n                value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                label: <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Proposal Selected</div>,\\\\\\\\n                disabled: disabled,\\\\\\\\n                isChecked:\\\\\\\\n                  timeline.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n                onClick: (v) => {\\\\\\\\n                  if (v) {\\\\\\\\n                    setTimeline({\\\\\\\\n                      status: RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n                    });\\\\\\\\n                  }\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n              props={{\\\\\\\\n                value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                disabled: disabled,\\\\\\\\n                label: <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">RFP Cancelled</div>,\\\\\\\\n                isChecked: timeline.status === RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n                onClick: (v) => {\\\\\\\\n                  if (v) {\\\\\\\\n                    setTimeline({\\\\\\\\n                      status: RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n                    });\\\\\\\\n                  }\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </TimelineItems>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedRfpDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { linkedRfp, onChange, disabled } = props;\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst [selectedRFP, setSelectedRFP] = useState(null);\\\\\\\\nconst [acceptingRfpsOptions, setAcceptingRfpsOption] = useState([]);\\\\\\\\nconst [allRfpOptions, setAllRfpOptions] = useState([]);\\\\\\\\nconst [searchRFPId, setSearchRfpId] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [initialStateApplied, setInitialState] = useState(false);\\\\\\\\n\\\\\\\\nconst queryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n  ${queryName}(\\\\\\\\n    offset: $offset\\\\\\\\n    limit: $limit\\\\\\\\n    order_by: {rfp_id: desc}\\\\\\\\n    where: $where\\\\\\\\n  ) {\\\\\\\\n    name\\\\\\\\n    rfp_id\\\\\\\\n    timeline\\\\\\\\n  }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\nfunction separateNumberAndText(str) {\\\\\\\\n  const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n  if (numberRegex.test(str)) {\\\\\\\\n    const number = str.match(numberRegex)[0];\\\\\\\\n    const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n    return { number: parseInt(number), text };\\\\\\\\n  } else {\\\\\\\\n    return { number: null, text: str.trim() };\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst buildWhereClause = () => {\\\\\\\\n  // show only accepting submissions stage rfps\\\\\\\\n  let where = {};\\\\\\\\n  const { number, text } = separateNumberAndText(searchRFPId);\\\\\\\\n\\\\\\\\n  if (number) {\\\\\\\\n    where = { rfp_id: { _eq: number }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (text) {\\\\\\\\n    where = { name: { _ilike: `%${text}%` }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return where;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst fetchRfps = () => {\\\\\\\\n  const FETCH_LIMIT = 30;\\\\\\\\n  const variables = {\\\\\\\\n    limit: FETCH_LIMIT,\\\\\\\\n    offset: 0,\\\\\\\\n    where: buildWhereClause(),\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const rfpsData = result.body.data?.[queryName];\\\\\\\\n        const data = [];\\\\\\\\n        const acceptingData = [];\\\\\\\\n        for (const prop of rfpsData) {\\\\\\\\n          const timeline = parseJSON(prop.timeline);\\\\\\\\n          const label = \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + prop.rfp_id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + prop.name;\\\\\\\\n          const value = prop.rfp_id;\\\\\\\\n          if (timeline.status === RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS) {\\\\\\\\n            acceptingData.push({\\\\\\\\n              label,\\\\\\\\n              value,\\\\\\\\n            });\\\\\\\\n          }\\\\\\\\n          data.push({\\\\\\\\n            label,\\\\\\\\n            value,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n        setAcceptingRfpsOption(acceptingData);\\\\\\\\n        setAllRfpOptions(data);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchRfps();\\\\\\\\n}, [searchRFPId]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(linkedRfp) !== JSON.stringify(selectedRFP)) {\\\\\\\\n    if (allRfpOptions.length > 0) {\\\\\\\\n      if (typeof linkedRfp !== \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n        setSelectedRFP(allRfpOptions.find((i) => linkedRfp === i.value));\\\\\\\\n      } else {\\\\\\\\n        setSelectedRFP(linkedRfp);\\\\\\\\n      }\\\\\\\\n      setInitialState(true);\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    setInitialState(true);\\\\\\\\n  }\\\\\\\\n}, [linkedRfp, allRfpOptions]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    JSON.stringify(linkedRfp) !== JSON.stringify(selectedRFP) &&\\\\\\\\n    initialStateApplied\\\\\\\\n  ) {\\\\\\\\n    onChange(selectedRFP);\\\\\\\\n  }\\\\\\\\n}, [selectedRFP, initialStateApplied]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {selectedRFP && (\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <a\\\\\\\\n          className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n          href={href({\\\\\\\\n            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n            params: {\\\\\\\\n              page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n              id: selectedRFP.value,\\\\\\\\n            },\\\\\\\\n          })}\\\\\\\\n          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n          rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          {selectedRFP.label}\\\\\\\\n        </a>\\\\\\\\n        {!disabled && (\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => {\\\\\\\\n              setSelectedRFP(null);\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-trash3-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.DropDownWithSearch`}\\\\\\\\n      props={{\\\\\\\\n        disabled: disabled,\\\\\\\\n        selectedValue: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (v) => {\\\\\\\\n          setSelectedRFP(v);\\\\\\\\n        },\\\\\\\\n        options: isModerator ? allRfpOptions : acceptingRfpsOptions,\\\\\\\\n        showSearch: true,\\\\\\\\n        searchInputPlaceholder: \\\\\\\\\\\\\\\"Search by Id\\\\\\\\\\\\\\\",\\\\\\\\n        defaultLabel: \\\\\\\\\\\\\\\"Search RFP\\\\\\\\\\\\\\\",\\\\\\\\n        searchByValue: true,\\\\\\\\n        onSearch: (value) => {\\\\\\\\n          setSearchRfpId(value);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.DropDownWithSearch\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\nconst {\\\\\\\\n  selectedValue,\\\\\\\\n  onChange,\\\\\\\\n  options,\\\\\\\\n  defaultLabel,\\\\\\\\n  showSearch,\\\\\\\\n  searchInputPlaceholder,\\\\\\\\n  searchByLabel,\\\\\\\\n  searchByValue,\\\\\\\\n  onSearch,\\\\\\\\n  disabled,\\\\\\\\n} = props;\\\\\\\\n\\\\\\\\nconst [searchTerm, setSearchTerm] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [filteredOptions, setFilteredOptions] = useState(options);\\\\\\\\nconst [isOpen, setIsOpen] = useState(false);\\\\\\\\nconst [selectedOption, setSelectedOption] = useState({\\\\\\\\n  label:\\\\\\\\n    options?.find((item) => item.value === selectedValue)?.label ??\\\\\\\\n    defaultLabel,\\\\\\\\n  value: defaultLabel,\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (selectedOption.value !== selectedValue) {\\\\\\\\n    setSelectedOption({\\\\\\\\n      label:\\\\\\\\n        options?.find((item) => item.value === selectedValue)?.label ??\\\\\\\\n        defaultLabel,\\\\\\\\n      value: defaultLabel,\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [selectedValue]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  setFilteredOptions(options);\\\\\\\\n}, [options]);\\\\\\\\n\\\\\\\\nconst handleSearch = (event) => {\\\\\\\\n  const term = event.target.value.toLowerCase();\\\\\\\\n  setSearchTerm(term);\\\\\\\\n  if (typeof onSearch === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\") {\\\\\\\\n    onSearch(term);\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const filteredOptions = options.filter((option) => {\\\\\\\\n    if (searchByLabel) {\\\\\\\\n      return option.label.toLowerCase().includes(term);\\\\\\\\n    }\\\\\\\\n    if (searchByValue) {\\\\\\\\n      return option.value.toString().toLowerCase().includes(term);\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  setFilteredOptions(filteredOptions);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst toggleDropdown = () => {\\\\\\\\n  setIsOpen(!isOpen);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleOptionClick = (option) => {\\\\\\\\n  setSelectedOption(option);\\\\\\\\n  setIsOpen(false);\\\\\\\\n  onChange(option);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .drop-btn {\\\\\\\\n    width: 100%;\\\\\\\\n    text-align: left;\\\\\\\\n    padding-inline: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item.active,\\\\\\\\n  .dropdown-item:active {\\\\\\\\n    background-color: #f0f0f0 !important;\\\\\\\\n    color: black;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .scroll-box {\\\\\\\\n    max-height: 200px;\\\\\\\\n    overflow-y: scroll;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  input {\\\\\\\\n    background-color: #f8f9fa;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f8f8f8 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    border-radius: 5px;\\\\\\\\n    opacity: inherit !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled.dropdown-toggle::after {\\\\\\\\n    display: none !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nlet searchFocused = false;\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"custom-select w-100\\\\\\\\\\\\\\\"\\\\\\\\n      tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n      onBlur={() => {\\\\\\\\n        setTimeout(() => {\\\\\\\\n          setIsOpen(searchFocused || false);\\\\\\\\n        }, 0);\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\n          \\\\\\\\\\\\\\\"dropdown-toggle bg-white border rounded-2 btn drop-btn w-100 \\\\\\\\\\\\\\\" +\\\\\\\\n          (disabled ? \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <div\\\\\\\\n          className={`selected-option w-100 text-wrap ${\\\\\\\\n            selectedOption.label === defaultLabel ? \\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n          }`}\\\\\\\\n          onClick={!disabled && toggleDropdown}\\\\\\\\n        >\\\\\\\\n          {selectedOption.label}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      {isOpen && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"dropdown-menu dropdown-menu-end dropdown-menu-lg-start px-2 shadow show\\\\\\\\\\\\\\\">\\\\\\\\n          {showSearch && (\\\\\\\\n            <input\\\\\\\\n              type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n              className=\\\\\\\\\\\\\\\"form-control mb-2\\\\\\\\\\\\\\\"\\\\\\\\n              placeholder={searchInputPlaceholder ?? \\\\\\\\\\\\\\\"Search options\\\\\\\\\\\\\\\"}\\\\\\\\n              value={searchTerm}\\\\\\\\n              onChange={handleSearch}\\\\\\\\n              onFocus={() => {\\\\\\\\n                searchFocused = true;\\\\\\\\n              }}\\\\\\\\n              onBlur={() => {\\\\\\\\n                setTimeout(() => {\\\\\\\\n                  searchFocused = false;\\\\\\\\n                }, 0);\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          )}\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"scroll-box\\\\\\\\\\\\\\\">\\\\\\\\n            {filteredOptions.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`dropdown-item cursor-pointer w-100 text-wrap ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n              >\\\\\\\\n                {option.label}\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.ViewProposalModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst isEdit = props.isEdit;\\\\\\\\nconst proposalId = props.proposalId;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.9);\\\\\\\\n  opacity: 0.9;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 30%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">\\\\\\\\n            Your Proposal has been successfully{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            {!isEdit ? \\\\\\\\\\\\\\\"published\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"edited\\\\\\\\\\\\\\\"}.\\\\\\\\n          </h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-center mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={linkHref({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\", id: proposalId },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-blue\\\\\\\\\\\\\\\" },\\\\\\\\n                label: \\\\\\\\\\\\\\\"View Proposal\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: () => {},\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedProposalsDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst linkedProposals = props.linkedProposals;\\\\\\\\nconst onChange = props.onChange;\\\\\\\\nconst [selectedProposals, setSelectedProposals] = useState(linkedProposals);\\\\\\\\nconst [proposalsOptions, setProposalsOptions] = useState([]);\\\\\\\\nconst [searchProposalId, setSearchProposalId] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst queryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n${queryName}(\\\\\\\\n  offset: $offset\\\\\\\\n  limit: $limit\\\\\\\\n  order_by: {proposal_id: desc}\\\\\\\\n  where: $where\\\\\\\\n) {\\\\\\\\n  name\\\\\\\\n  proposal_id\\\\\\\\n}\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(linkedProposals) !== JSON.stringify(selectedProposals)) {\\\\\\\\n    setSelectedProposals(linkedProposals);\\\\\\\\n  }\\\\\\\\n}, [linkedProposals]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(linkedProposals) !== JSON.stringify(selectedProposals)) {\\\\\\\\n    onChange(selectedProposals);\\\\\\\\n  }\\\\\\\\n}, [selectedProposals]);\\\\\\\\n\\\\\\\\nfunction separateNumberAndText(str) {\\\\\\\\n  const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n  if (numberRegex.test(str)) {\\\\\\\\n    const number = str.match(numberRegex)[0];\\\\\\\\n    const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n    return { number: parseInt(number), text };\\\\\\\\n  } else {\\\\\\\\n    return { number: null, text: str.trim() };\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst buildWhereClause = () => {\\\\\\\\n  let where = {};\\\\\\\\n  const { number, text } = separateNumberAndText(searchProposalId);\\\\\\\\n\\\\\\\\n  if (number) {\\\\\\\\n    where = { proposal_id: { _eq: number }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (text) {\\\\\\\\n    where = { name: { _ilike: `%${text}%` }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return where;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst fetchProposals = () => {\\\\\\\\n  const FETCH_LIMIT = 30;\\\\\\\\n  const variables = {\\\\\\\\n    limit: FETCH_LIMIT,\\\\\\\\n    offset: 0,\\\\\\\\n    where: buildWhereClause(),\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const proposalsData = result.body.data?.[queryName];\\\\\\\\n        const data = [];\\\\\\\\n        for (const prop of proposalsData) {\\\\\\\\n          data.push({\\\\\\\\n            label: \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + prop.proposal_id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + prop.name,\\\\\\\\n            value: prop.proposal_id,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n        setProposalsOptions(data);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchProposals();\\\\\\\\n}, [searchProposalId]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {selectedProposals.map((proposal) => {\\\\\\\\n      return (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <a\\\\\\\\n            className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n            href={href({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: {\\\\\\\\n                page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                id: proposal.value,\\\\\\\\n              },\\\\\\\\n            })}\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {proposal.label}\\\\\\\\n          </a>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => {\\\\\\\\n              const updatedLinkedProposals = selectedProposals.filter(\\\\\\\\n                (item) => item.value !== proposal.value\\\\\\\\n              );\\\\\\\\n              setSelectedProposals(updatedLinkedProposals);\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-trash3-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      );\\\\\\\\n    })}\\\\\\\\n\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.DropDownWithSearch`}\\\\\\\\n      props={{\\\\\\\\n        selectedValue: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (v) => {\\\\\\\\n          if (!selectedProposals.some((item) => item.value === v.value)) {\\\\\\\\n            setSelectedProposals([...selectedProposals, v]);\\\\\\\\n          }\\\\\\\\n        },\\\\\\\\n        options: proposalsOptions,\\\\\\\\n        showSearch: true,\\\\\\\\n        searchInputPlaceholder: \\\\\\\\\\\\\\\"Search by Id\\\\\\\\\\\\\\\",\\\\\\\\n        defaultLabel: \\\\\\\\\\\\\\\"Search proposals\\\\\\\\\\\\\\\",\\\\\\\\n        searchByValue: true,\\\\\\\\n        onSearch: (value) => {\\\\\\\\n          setSearchProposalId(value);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \\\\\\\\\\\\\\\"truedove38.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_objects_s_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { selected, onChange, disabled, availableOptions, hideDropdown, label } =\\\\\\\\n  props;\\\\\\\\n\\\\\\\\nconst [selectedOptions, setSelectedOptions] = useState([]);\\\\\\\\nconst [isOpen, setIsOpen] = useState(false);\\\\\\\\nconst [initialStateApplied, setInitialState] = useState(false);\\\\\\\\n\\\\\\\\nconst toggleDropdown = () => {\\\\\\\\n  setIsOpen(!isOpen);\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(selectedOptions) !== JSON.stringify(selected)) {\\\\\\\\n    if (availableOptions.length > 0) {\\\\\\\\n      if ((selected ?? []).some((i) => !i.value)) {\\\\\\\\n        setSelectedOptions(\\\\\\\\n          selected.map((i) => availableOptions.find((t) => t.value === i))\\\\\\\\n        );\\\\\\\\n      } else {\\\\\\\\n        setSelectedOptions(selected);\\\\\\\\n      }\\\\\\\\n      setInitialState(true);\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    setInitialState(true);\\\\\\\\n  }\\\\\\\\n}, [selected, availableOptions]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    JSON.stringify(selectedOptions) !== JSON.stringify(selected) &&\\\\\\\\n    initialStateApplied\\\\\\\\n  ) {\\\\\\\\n    onChange(selectedOptions);\\\\\\\\n  }\\\\\\\\n}, [selectedOptions, initialStateApplied]);\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .drop-btn {\\\\\\\\n    width: 100%;\\\\\\\\n    text-align: left;\\\\\\\\n    padding-inline: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 2%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item.active,\\\\\\\\n  .dropdown-item:active {\\\\\\\\n    background-color: #f0f0f0 !important;\\\\\\\\n    color: black;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f8f8f8 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    border-radius: 5px;\\\\\\\\n    opacity: inherit !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled.dropdown-toggle::after {\\\\\\\\n    display: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst handleOptionClick = (option) => {\\\\\\\\n  if (!selectedOptions.some((item) => item.value === option.value)) {\\\\\\\\n    setSelectedOptions([...selectedOptions, option]);\\\\\\\\n  }\\\\\\\\n  setIsOpen(false);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Item = ({ option }) => {\\\\\\\\n  return <div> {option.title}</div>;\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      {(selectedOptions ?? []).map((option) => {\\\\\\\\n        return (\\\\\\\\n          <div\\\\\\\\n            style={{\\\\\\\\n              color: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n              backgroundColor: `rgb(${option.color})`,\\\\\\\\n              width: \\\\\\\\\\\\\\\"max-content\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n            className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center badge rounded-lg p-2 h6 mb-0\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {option.title}\\\\\\\\n            {!disabled && (\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n                onClick={() => {\\\\\\\\n                  const updatedOptions = selectedOptions.filter(\\\\\\\\n                    (item) => item.value !== option.value\\\\\\\\n                  );\\\\\\\\n                  setSelectedOptions(updatedOptions);\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <i className=\\\\\\\\\\\\\\\"bi bi-trash3-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </div>\\\\\\\\n        );\\\\\\\\n      })}\\\\\\\\n    </div>\\\\\\\\n    {!hideDropdown && (\\\\\\\\n      <Container>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"custom-select w-100\\\\\\\\\\\\\\\"\\\\\\\\n          tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n          onBlur={() => setIsOpen(false)}\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"dropdown-toggle bg-white border rounded-2 btn drop-btn w-100 \\\\\\\\\\\\\\\" +\\\\\\\\n              (disabled ? \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n            onClick={!disabled && toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <div className={`selected-option`}>\\\\\\\\n              {label ?? \\\\\\\\\\\\\\\"Select Category\\\\\\\\\\\\\\\"}\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n\\\\\\\\n          {isOpen && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"dropdown-menu rounded-2 dropdown-menu-end dropdown-menu-lg-start px-2 shadow show w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div>\\\\\\\\n                {(availableOptions ?? []).map((option) => (\\\\\\\\n                  <div\\\\\\\\n                    key={option.value}\\\\\\\\n                    className={`dropdown-item cursor-pointer w-100 my-1 ${\\\\\\\\n                      (selectedOptions ?? []).find(\\\\\\\\n                        (item) => item.value === option.value\\\\\\\\n                      )\\\\\\\\n                        ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\"\\\\\\\\n                        : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                    }`}\\\\\\\\n                    onClick={() => handleOptionClick(option)}\\\\\\\\n                  >\\\\\\\\n                    <Item option={option} />\\\\\\\\n                  </div>\\\\\\\\n                ))}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Container>\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 9.4181217347575e+21
    }
  },
  {
    "id": "5334663583",
    "receipt_id": "4VR4vuJ8uGVHzztVBTF4BJiR2QiSErdfgejHYURvaUZd",
    "predecessor_account_id": "system",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "TzweNiTFE7xRsYw6g5eMDCNAk61nHoopoQhXnETVBcY",
      "block_height": 120365322,
      "block_timestamp": 1717439664208951600
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "CxPYJtLVqwREZtTWw9hHt4uWK6uauPD7GEKYcep3mKYm",
    "included_in_block_hash": "8TdGjqaKRgmcr5BKYhvgCv4cPurjnXo9Ctc3DtTKB43J",
    "block_timestamp": "1717439661734421386",
    "block": {
      "block_height": 120365320
    },
    "receipt_conversion_tokens_burnt": "120086571026600000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.793271296496844e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 9.4181217347575e+21
    }
  },
  {
    "id": "5335645365",
    "receipt_id": "ABfmMEgUVhC1KVeYxakAysUxbAMPeXjUf4ZdYLRKDX6x",
    "predecessor_account_id": "infrastructure-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "CsgMs3P7Wm1Sh1U1XJBU7HkThfRzsANkv7B84RbJMTuQ",
      "block_height": 120367764,
      "block_timestamp": 1717442486515468000
    },
    "receipt_outcome": {
      "gas_burnt": 97178446310976,
      "tokens_burnt": 9.7178446310976e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "Dnb4EUHfNTUAkajnLXEvUYfdwhPtB1t7uHDvVXUJe75D",
    "included_in_block_hash": "GsuRU7wFhkH2C2PV1EBEjLU4EsXpsfp2xmNhzHiinGCk",
    "block_timestamp": "1717442485481501197",
    "block": {
      "block_height": 120367763
    },
    "receipt_conversion_tokens_burnt": "117582101353200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 9.7178446310976e+21,
        "args": "{\"data\": {\"infrastructure-committee.near\": {\"widget\": {\"includes.common\": {\"\": \"const REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.Rfp\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`) || {\\\\\\\\n  href: () => {},\\\\\\\\n};\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst accountId = context.accountId;\\\\\\\\n/*\\\\\\\\n  ---props---\\\\\\\\n  props.id: number;\\\\\\\\n  props.timestamp: number; optional\\\\\\\\n  accountId: string\\\\\\\\n  blockHeight:number\\\\\\\\n  */\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .description-box {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .accept-submission-info-container {\\\\\\\\n    background-color: #ecf8fb;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-3 {\\\\\\\\n    flex: 3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 20px;\\\\\\\\n    height: 20px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 180px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 135px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 180px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 75px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line-sm {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 70px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:disabled ~ .form-check-label,\\\\\\\\n  .form-check-input[disabled] ~ .form-check-label {\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input {\\\\\\\\n    border-color: black !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-btn {\\\\\\\\n    background-color: #687076;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-btn {\\\\\\\\n    background-color: #3c697d;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #3c697d !important;\\\\\\\\n    border-color: #3c697d !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-vertical {\\\\\\\\n    border-top: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n    border-bottom: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  button.px-0 {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  red-icon i {\\\\\\\\n    color: red;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  input[type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"] {\\\\\\\\n    min-width: 13px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst RfpContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Text = styled.p`\\\\\\\\n  display: block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 20px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  white-space: nowrap;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 12px;\\\\\\\\n  margin: -6px -6px 6px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst LinkProfile = ({ account, children }) => {\\\\\\\\n  return (\\\\\\\\n    <Link href={`/near/widget/ProfilePage?accountId=${account}`}>\\\\\\\\n      {children}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [snapshotHistory, setSnapshotHistory] = useState([]);\\\\\\\\n\\\\\\\\nconst rfp = Near.view(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n  rfp_id: parseInt(id),\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst queryName = RFP_INDEXER_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n  ${queryName}(\\\\\\\\n    offset: $offset\\\\\\\\n    limit: $limit\\\\\\\\n    order_by: {ts: desc}\\\\\\\\n    where: $where\\\\\\\\n  ) {\\\\\\\\n    editor_id\\\\\\\\n    name\\\\\\\\n    summary\\\\\\\\n    description\\\\\\\\n    ts\\\\\\\\n    rfp_id\\\\\\\\n    timeline\\\\\\\\n    labels\\\\\\\\n    submission_deadline\\\\\\\\n    linked_proposals\\\\\\\\n  }\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst fetchSnapshotHistory = () => {\\\\\\\\n  const variables = {\\\\\\\\n    where: { rfp_id: { _eq: id } },\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const data = result.body.data?.[queryName];\\\\\\\\n        const history = data.map((item) => {\\\\\\\\n          const rfpData = {\\\\\\\\n            ...item,\\\\\\\\n            timestamp: item.ts,\\\\\\\\n            timeline: parseJSON(item.timeline),\\\\\\\\n          };\\\\\\\\n          delete rfpData.ts;\\\\\\\\n          return rfpData;\\\\\\\\n        });\\\\\\\\n        setSnapshotHistory(history);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchSnapshotHistory();\\\\\\\\n}, [id]);\\\\\\\\n\\\\\\\\nif (!rfp) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nif (timestamp && rfp) {\\\\\\\\n  rfp.snapshot =\\\\\\\\n    snapshotHistory.find((item) => item.timestamp === timestamp) ??\\\\\\\\n    rfp.snapshot;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { snapshot } = rfp;\\\\\\\\nsnapshot.timeline = parseJSON(snapshot.timeline);\\\\\\\\n\\\\\\\\nconst authorId = rfp.author_id;\\\\\\\\nconst blockHeight = parseInt(rfp.social_db_post_block_height);\\\\\\\\nconst item = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n  path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n  blockHeight,\\\\\\\\n};\\\\\\\\nconst rfpURL = `https://near.org/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=rfp&id=${rfp.id}&timestamp=${snapshot.timestamp}`;\\\\\\\\n\\\\\\\\nconst SidePanelItem = ({ title, children, hideBorder, ishidden }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ gap: \\\\\\\\\\\\\\\"8px\\\\\\\\\\\\\\\" }}\\\\\\\\n      className={\\\\\\\\n        ishidden\\\\\\\\n          ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"d-flex flex-column pb-3 \\\\\\\\\\\\\\\" + (!hideBorder && \\\\\\\\\\\\\\\" border-bottom\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{title} </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isAllowedToWriteRfp = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst link = href({\\\\\\\\n  widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n  params: {\\\\\\\\n    page: \\\\\\\\\\\\\\\"create-rfp\\\\\\\\\\\\\\\",\\\\\\\\n    id: rfp.id,\\\\\\\\n    timestamp: timestamp,\\\\\\\\n  },\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst createdDate = snapshotHistory[0].timestamp ?? snapshot.timestamp;\\\\\\\\n\\\\\\\\nconst [approvedProposals, setApprovedProposals] = useState([]);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\nconst [isWarningModalOpen, setWarningModal] = useState(false);\\\\\\\\nconst [timeline, setTimeline] = useState(null);\\\\\\\\nconst [showTimelineSetting, setShowTimelineSetting] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (!timeline) {\\\\\\\\n    setTimeline(snapshot.timeline);\\\\\\\\n  }\\\\\\\\n}, [snapshot]);\\\\\\\\n\\\\\\\\nfunction fetchApprovedRfpProposals() {\\\\\\\\n  const queryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      proposal_id\\\\\\\\n      name\\\\\\\\n      timeline\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  const FETCH_LIMIT = 50;\\\\\\\\n  const variables = {\\\\\\\\n    limit: FETCH_LIMIT,\\\\\\\\n    offset,\\\\\\\\n    where: {\\\\\\\\n      proposal_id: { _in: rfp.snapshot.linked_proposals },\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const data = result.body.data?.[queryName];\\\\\\\\n        const approved = [];\\\\\\\\n        data.map((item) => {\\\\\\\\n          const timeline = parseJSON(item.timeline);\\\\\\\\n          if (PROPOSALS_APPROVED_STATUS_ARRAY.includes(timeline.status)) {\\\\\\\\n            approved.push(item);\\\\\\\\n          }\\\\\\\\n        });\\\\\\\\n        setApprovedProposals(approved);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst editRFPStatus = () => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_rfp_timeline\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: rfp.id,\\\\\\\\n        timeline: timeline,\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\nconsole.log({ rfp });\\\\\\\\nconst onCancelRFP = (value) => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"cancel_rfp\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: rfp.id,\\\\\\\\n        proposals_to_cancel:\\\\\\\\n          value === CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS\\\\\\\\n            ? snapshot.linked_proposals\\\\\\\\n            : [],\\\\\\\\n        proposals_to_unlink:\\\\\\\\n          value === CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS\\\\\\\\n            ? snapshot.linked_proposals\\\\\\\\n            : [],\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst accessControlInfo =\\\\\\\\n  Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_access_control_info\\\\\\\\\\\\\\\"\\\\\\\\n  ) ?? null;\\\\\\\\nconst moderatorList =\\\\\\\\n  accessControlInfo?.members_list?.[\\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\"]?.children;\\\\\\\\n\\\\\\\\nfetchApprovedRfpProposals();\\\\\\\\n\\\\\\\\nconst SubmitProposalBtn = () => {\\\\\\\\n  return (\\\\\\\\n    <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <Link\\\\\\\\n        to={href({\\\\\\\\n          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n          params: { page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\", rfp_id: rfp.id },\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n          props={{\\\\\\\\n            label: (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle\\\\\\\\\\\\\\\"></i>Submit Proposal\\\\\\\\n              </div>\\\\\\\\n            ),\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"blue-btn\\\\\\\\\\\\\\\" },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </Link>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n        onConfirmClick: (value) => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onCancelRFP(value);\\\\\\\\n        },\\\\\\\\n        linkedProposalIds: snapshot.linked_proposals,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.WarningModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isWarningModalOpen,\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setWarningModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex px-3 px-lg-0 justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center h3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>{snapshot.name}</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">#{rfp.id}</div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_NEAR}/widget/ShareButton`}\\\\\\\\n          props={{\\\\\\\\n            postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            url: rfpURL,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        {isAllowedToWriteRfp && (\\\\\\\\n          <Link to={link} style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap flex-md-nowrap px-3 px-lg-0 gap-2 align-items-center text-sm pb-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n        props={{\\\\\\\\n          timelineStatus: snapshot.timeline.status,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"w-100 d-flex flex-wrap flex-md-nowrap gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n          <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n        </div>\\\\\\\\n        <div>created on {readableDate(createdDate / 1000000)}</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 full-width-div px-3 px-lg-0\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4\\\\\\\\\\\\\\\">\\\\\\\\n        {snapshot.timeline.status ===\\\\\\\\n          RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"accept-submission-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n              <b>This RFP is accepting submissions.</b>\\\\\\\\n              <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                Click Submit Proposal if you want to submit a proposal.\\\\\\\\n              </p>\\\\\\\\n            </div>\\\\\\\\n            <SubmitProposalBtn />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"my-4\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-6\\\\\\\\\\\\\\\">\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"flex-3 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                  <img src={RFP_IMAGE} height={35} width={35} />\\\\\\\\n                </div>\\\\\\\\n                <RfpContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Header className=\\\\\\\\\\\\\\\"d-flex gap-1 align-items-center p-2 px-3 \\\\\\\\\\\\\\\">\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ maxWidth: \\\\\\\\\\\\\\\"60%\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n                    </div>\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                        props={{\\\\\\\\n                          blockHeight,\\\\\\\\n                          blockTimestamp: createdDate,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      {context.accountId && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                          <Widget\\\\\\\\n                            src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                            props={{\\\\\\\\n                              accountId: authorId,\\\\\\\\n                              blockHeight: blockHeight,\\\\\\\\n                            }}\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </Header>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 p-2 px-3 description-box\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      RFP CATEGORY\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                          props={{\\\\\\\\n                            selected: snapshot.labels,\\\\\\\\n                            disabled: true,\\\\\\\\n                            hideDropdown: true,\\\\\\\\n                            onChange: () => {},\\\\\\\\n                            availableOptions: rfpLabelOptions,\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      SUMMARY\\\\\\\\n                    </div>\\\\\\\\n                    <div>{snapshot.summary}</div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n                      DESCRIPTION\\\\\\\\n                    </div>\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n                      props={{ text: snapshot.description }}\\\\\\\\n                    />\\\\\\\\n\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LikeButton`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          rfpId: rfp.id,\\\\\\\\n                          notifyAccountIds: moderatorList,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          showOverlay: false,\\\\\\\\n                          onClick: () => {},\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                        props={{\\\\\\\\n                          url: rfpURL,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                </RfpContainer>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.CommentsAndLogs`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    id: rfp.id,\\\\\\\\n                    item: item,\\\\\\\\n                    approvedProposals: approvedProposals,\\\\\\\\n                    snapshotHistory: snapshotHistory,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div\\\\\\\\n                style={{\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                className=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.ComposeComment`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    item: item,\\\\\\\\n                    notifyAccountIds: moderatorList,\\\\\\\\n                    rfpId: rfp.id,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                {snapshot.timeline.status ===\\\\\\\\n                  RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS && (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"accept-submission-info-container mt-3 p-3 p-sm-4 d-flex flex-wrap flex-md-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <div style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                      <b>Want to respond to this RFP? </b> This RFP is accepting\\\\\\\\n                      submissions.\\\\\\\\n                    </div>\\\\\\\\n                    <SubmitProposalBtn />\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 flex-1 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Submission Deadline\\\\\\\\\\\\\\\">\\\\\\\\n                <h5 className=\\\\\\\\\\\\\\\"text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {readableDate(\\\\\\\\n                    parseFloat(snapshot.submission_deadline / 1000000)\\\\\\\\n                  )}\\\\\\\\n                </h5>\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  <div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Timeline\\\\\\\\n                      {isAllowedToWriteRfp && (\\\\\\\\n                        <div\\\\\\\\n                          data-testid=\\\\\\\\\\\\\\\"setting-btn\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={() => setShowTimelineSetting(true)}\\\\\\\\n                        >\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.TimelineConfigurator`}\\\\\\\\n                  props={{\\\\\\\\n                    timeline: timeline,\\\\\\\\n                    setTimeline: (v) => {\\\\\\\\n                      if (\\\\\\\\n                        snapshot.timeline.status === v.status &&\\\\\\\\n                        timeline.status === v.status\\\\\\\\n                      ) {\\\\\\\\n                        return;\\\\\\\\n                      }\\\\\\\\n                      // if proposal selected timeline is selected and no approved proposals exist, show warning\\\\\\\\n                      if (\\\\\\\\n                        v.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED &&\\\\\\\\n                        Array.isArray(approvedProposals) &&\\\\\\\\n                        !approvedProposals.length\\\\\\\\n                      ) {\\\\\\\\n                        setWarningModal(true);\\\\\\\\n                      }\\\\\\\\n\\\\\\\\n                      if (v.status === RFP_TIMELINE_STATUS.CANCELLED) {\\\\\\\\n                        setCancelModal(true);\\\\\\\\n                      }\\\\\\\\n                      setTimeline(v);\\\\\\\\n                    },\\\\\\\\n                    disabled: showTimelineSetting ? false : true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                {showTimelineSetting && (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end text-sm mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"btn-outline-danger border-0 shadow-none btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        onClick: () => {\\\\\\\\n                          setShowTimelineSetting(false);\\\\\\\\n                          setTimeline(snapshot.timeline);\\\\\\\\n                        },\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                        classNames: { root: \\\\\\\\\\\\\\\"blue-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                        onClick: () => {\\\\\\\\n                          editRFPStatus();\\\\\\\\n                          setShowTimelineSetting(false);\\\\\\\\n                        },\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"Selected Proposal\\\\\\\\\\\\\\\" + \\\\\\\\\\\\\\\" (\\\\\\\\\\\\\\\" + approvedProposals.length + \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                ishidden={!approvedProposals.length}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedProposalIds: (approvedProposals ?? []).map(\\\\\\\\n                      (i) => i.proposal_id\\\\\\\\n                    ),\\\\\\\\n                    showStatus: false,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"All Proposals\\\\\\\\\\\\\\\" +\\\\\\\\n                  \\\\\\\\\\\\\\\" (\\\\\\\\\\\\\\\" +\\\\\\\\n                  snapshot.linked_proposals.length +\\\\\\\\n                  \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                ishidden={!snapshot.linked_proposals.length}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedProposalIds: snapshot.linked_proposals,\\\\\\\\n                    showStatus:\\\\\\\\n                      snapshot.timeline.status !==\\\\\\\\n                      RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.pages.app\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * This is the main entry point for the RFP application.\\\\\\\\n * Page route gets passed in through params, along with all other page props.\\\\\\\\n */\\\\\\\\n\\\\\\\\nconst { page, ...passProps } = props;\\\\\\\\n\\\\\\\\n// Import our modules\\\\\\\\nconst { AppLayout } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.template.AppLayout`\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!AppLayout) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\n// CSS styles to be used across the app.\\\\\\\\n// Define fonts here, as well as any other global styles.\\\\\\\\nconst Theme = styled.div`\\\\\\\\n  a {\\\\\\\\n    color: inherit;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .attractable {\\\\\\\\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\\\\\\\\n    transition: box-shadow 0.6s;\\\\\\\\n\\\\\\\\n    &:hover {\\\\\\\\n      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (!page) {\\\\\\\\n  // If no page is specified, we default to the feed page TEMP\\\\\\\\n  page = \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\n// This is our navigation, rendering the page based on the page parameter\\\\\\\\nfunction Page() {\\\\\\\\n  const routes = page.split(\\\\\\\\\\\\\\\".\\\\\\\\\\\\\\\");\\\\\\\\n  switch (routes[0]) {\\\\\\\\n    case \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.about`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"rfps\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.Feed`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.Rfp`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"create-rfp\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.Editor`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.Editor`}\\\\\\\\n          props={{ ...passProps }}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    case \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.Feed`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.Proposal`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.about`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"admin\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.admin`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    default: {\\\\\\\\n      // TODO: 404 page\\\\\\\\n      return <p>404</p>;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Theme>\\\\\\\\n    <AppLayout page={page}>\\\\\\\\n      <Page />\\\\\\\\n    </AppLayout>\\\\\\\\n  </Theme>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.Feed\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .rfp-card {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    border-bottom: none !important;\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-btn {\\\\\\\\n    background-color: #3c697d !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background: #e2e6ec;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .blue-btn {\\\\\\\\n      padding: 0.5rem 0.8rem !important;\\\\\\\\n      min-height: 32px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n  .fw-semi-bold {\\\\\\\\n    font-weight: 500;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  .text-normal {\\\\\\\\n    font-weight: normal !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst FeedItem = ({ rfp, index }) => {\\\\\\\\n  const accountId = rfp.author_id;\\\\\\\\n  const profile = Social.get(`${accountId}/profile/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\n  // We will have to get the rfp from the contract to get the block height.\\\\\\\\n  const blockHeight = parseInt(rfp.social_db_post_block_height);\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n    blockHeight: blockHeight,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n          id: rfp.rfp_id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      onClick={(e) => e.stopPropagation()}\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\n          \\\\\\\\\\\\\\\"rfp-card d-flex justify-content-between gap-2 text-muted cursor-pointer p-3 w-100 flex-wrap flex-sm-nowrap \\\\\\\\\\\\\\\" +\\\\\\\\n          (index !== 0 && \\\\\\\\\\\\\\\" border\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <img src={RFP_IMAGE} height={35} width={35} />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"h6 mb-0 text-black\\\\\\\\\\\\\\\">{rfp.name}</div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                props={{\\\\\\\\n                  selected: rfp.labels,\\\\\\\\n                  disabled: true,\\\\\\\\n                  hideDropdown: true,\\\\\\\\n                  onChange: () => {},\\\\\\\\n                  availableOptions: rfpLabelOptions,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap flex-sm-nowrap text-sm w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div>#{rfp.rfp_id} \\\\\\\\u{ff65} Created</div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight,\\\\\\\\n                  blockTimestamp: rfp.timestamp,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-4 flex-wrap flex-sm-nowrap text-sm w-100 text-muted my-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{ maxWidth: \\\\\\\\\\\\\\\"70%\\\\\\\\\\\\\\\" }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"fw-semi-bold\\\\\\\\\\\\\\\">Summay</div>\\\\\\\\n\\\\\\\\n                <div>{rfp.summary}</div>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ width: \\\\\\\\\\\\\\\"1px\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"bg-grey\\\\\\\\\\\\\\\"></div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"fw-semi-bold\\\\\\\\\\\\\\\">Submission Deadline</div>\\\\\\\\n                <h6 className=\\\\\\\\\\\\\\\"mb-0 text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {readableDate(rfp.submission_deadline / 1000000)}\\\\\\\\n                </h6>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center text-sm\\\\\\\\\\\\\\\">\\\\\\\\n              <div>\\\\\\\\n                <img\\\\\\\\n                  src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreif4p376f3qvpb2ewwsmi6fkcm3jalhuuzuxbgvehgl552agqw47ju\\\\\\\\\\\\\\\"\\\\\\\\n                  height={30}\\\\\\\\n                  width={30}\\\\\\\\n                />\\\\\\\\n                {rfp.linked_proposals.length ?? 0}\\\\\\\\n                proposals\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                  props={{\\\\\\\\n                    item,\\\\\\\\n                    showOverlay: false,\\\\\\\\n                    onClick: () => {},\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                comments\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"align-self-center\\\\\\\\\\\\\\\" style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n            props={{\\\\\\\\n              timelineStatus: rfp.timeline.status,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getRfp = (rfp_id) => {\\\\\\\\n  return Near.asyncView(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n    rfp_id,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FeedPage = () => {\\\\\\\\n  State.init({\\\\\\\\n    data: [],\\\\\\\\n    cachedItems: {},\\\\\\\\n    stage: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    sort: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    label: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    input: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    loading: false,\\\\\\\\n    loadingMore: false,\\\\\\\\n    aggregatedCount: null,\\\\\\\\n    currentlyDisplaying: 0,\\\\\\\\n    isFiltered: false,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  const queryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {rfp_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      author_id\\\\\\\\n      block_height\\\\\\\\n      name\\\\\\\\n      summary\\\\\\\\n      editor_id\\\\\\\\n      rfp_id\\\\\\\\n      timeline\\\\\\\\n      views\\\\\\\\n      labels\\\\\\\\n      submission_deadline\\\\\\\\n      linked_proposals\\\\\\\\n    }\\\\\\\\n    ${queryName}_aggregate(\\\\\\\\n      order_by: {rfp_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    )  {\\\\\\\\n      aggregate {\\\\\\\\n        count\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  function separateNumberAndText(str) {\\\\\\\\n    const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n    if (numberRegex.test(str)) {\\\\\\\\n      const number = str.match(numberRegex)[0];\\\\\\\\n      const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n      return { number: parseInt(number), text };\\\\\\\\n    } else {\\\\\\\\n      return { number: null, text: str.trim() };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const buildWhereClause = () => {\\\\\\\\n    let where = {};\\\\\\\\n\\\\\\\\n    if (state.label) {\\\\\\\\n      where = { labels: { _contains: state.label }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.stage) {\\\\\\\\n      // timeline is stored as jsonb\\\\\\\\n      where = {\\\\\\\\n        timeline: { _cast: { String: { _regex: `${state.stage}` } } },\\\\\\\\n        ...where,\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n    if (state.input) {\\\\\\\\n      const { number, text } = separateNumberAndText(state.input);\\\\\\\\n      if (number) {\\\\\\\\n        where = { rfp_id: { _eq: number }, ...where };\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      if (text) {\\\\\\\\n        where = {\\\\\\\\n          _or: [\\\\\\\\n            { name: { _iregex: `${text}` } },\\\\\\\\n            { summary: { _iregex: `${text}` } },\\\\\\\\n            { description: { _iregex: `${text}` } },\\\\\\\\n          ],\\\\\\\\n          ...where,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    State.update({ isFiltered: Object.keys(where).length > 0 });\\\\\\\\n    return where;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const buildOrderByClause = () => {\\\\\\\\n    /**\\\\\\\\n     * TODO\\\\\\\\n     * Most commented -> edit contract and indexer\\\\\\\\n     * Unanswered -> 0 comments\\\\\\\\n     */\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const makeMoreItems = () => {\\\\\\\\n    if (state.aggregatedCount <= state.currentlyDisplaying) return;\\\\\\\\n    fetchRfps(state.data.length);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchRfps = (offset) => {\\\\\\\\n    if (!offset) {\\\\\\\\n      offset = 0;\\\\\\\\n    }\\\\\\\\n    if (state.loading) return;\\\\\\\\n    const FETCH_LIMIT = 10;\\\\\\\\n    const variables = {\\\\\\\\n      limit: FETCH_LIMIT,\\\\\\\\n      offset,\\\\\\\\n      where: buildWhereClause(),\\\\\\\\n    };\\\\\\\\n    fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n      if (result.status === 200) {\\\\\\\\n        if (result.body.data) {\\\\\\\\n          const data = result.body.data?.[queryName];\\\\\\\\n          const totalResult = result.body.data?.[`${queryName}_aggregate`];\\\\\\\\n          State.update({ aggregatedCount: totalResult.aggregate.count });\\\\\\\\n          // Parse timeline\\\\\\\\n          fetchBlockHeights(data, offset);\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const renderItem = (item, index) => (\\\\\\\\n    <div\\\\\\\\n      key={item.rfp_id}\\\\\\\\n      className={\\\\\\\\n        (index !== state.data.length - 1 && \\\\\\\\\\\\\\\"border-bottom \\\\\\\\\\\\\\\") + index === 0 &&\\\\\\\\n        \\\\\\\\\\\\\\\" rounded-top-2 rfp-item-container\\\\\\\\\\\\\\\"\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <FeedItem rfp={item} index={index} />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n  const cachedRenderItem = (item, index) => {\\\\\\\\n    if (props.term) {\\\\\\\\n      return renderItem(item, {\\\\\\\\n        searchKeywords: [props.term],\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    const key = JSON.stringify(item);\\\\\\\\n\\\\\\\\n    if (!(key in state.cachedItems)) {\\\\\\\\n      state.cachedItems[key] = renderItem(item, index);\\\\\\\\n      State.update();\\\\\\\\n    }\\\\\\\\n    return state.cachedItems[key];\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    fetchRfps();\\\\\\\\n  }, [state.input, state.sort, state.label, state.stage]);\\\\\\\\n\\\\\\\\n  const mergeItems = (newItems) => {\\\\\\\\n    const items = [\\\\\\\\n      ...new Set([...newItems, ...state.data].map((i) => JSON.stringify(i))),\\\\\\\\n    ].map((i) => JSON.parse(i));\\\\\\\\n    // Sorting in the front end\\\\\\\\n    if (state.sort === \\\\\\\\\\\\\\\"rfp_id\\\\\\\\\\\\\\\" || state.sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.rfp_id - a.rfp_id);\\\\\\\\n    } else if (state.sort === \\\\\\\\\\\\\\\"views\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.views - a.views);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return items;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchBlockHeights = (data, offset) => {\\\\\\\\n    let promises = data.map((item) => getRfp(item.rfp_id));\\\\\\\\n    Promise.all(promises).then((blockHeights) => {\\\\\\\\n      data = data.map((item, index) => ({\\\\\\\\n        ...item,\\\\\\\\n        timeline: JSON.parse(item.timeline),\\\\\\\\n        social_db_post_block_height:\\\\\\\\n          blockHeights[index].social_db_post_block_height,\\\\\\\\n      }));\\\\\\\\n      if (offset) {\\\\\\\\n        let newData = mergeItems(data);\\\\\\\\n        State.update({\\\\\\\\n          data: newData,\\\\\\\\n          currentlyDisplaying: newData.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      } else {\\\\\\\\n        State.update({\\\\\\\\n          data,\\\\\\\\n          currentlyDisplaying: data.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const loader = (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const renderedItems = state.data ? state.data.map(cachedRenderItem) : null;\\\\\\\\n\\\\\\\\n  const isAllowedToWriteRfp = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      editor: context.accountId,\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between flex-wrap gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Heading>\\\\\\\\n          RFPs\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"text-muted text-normal\\\\\\\\\\\\\\\">\\\\\\\\n            ({state.aggregatedCount ?? state.data.length}){\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          </span>\\\\\\\\n        </Heading>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-input`}\\\\\\\\n            props={{\\\\\\\\n              search: state.input,\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-xs-100\\\\\\\\\\\\\\\",\\\\\\\\n              onSearch: (input) => {\\\\\\\\n                State.update({ input });\\\\\\\\n                fetchRfps();\\\\\\\\n              },\\\\\\\\n              onEnter: () => {\\\\\\\\n                fetchRfps();\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-sort`}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ sort: select.value });\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.FilterByLabel`}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ label: select.value });\\\\\\\\n              },\\\\\\\\n              availableOptions: rfpLabelOptions,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StageDropdown`}\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ stage: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        {isAllowedToWriteRfp && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"mt-2 mt-xs-0\\\\\\\\\\\\\\\">\\\\\\\\n            <Link\\\\\\\\n              to={href({\\\\\\\\n                widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                params: { page: \\\\\\\\\\\\\\\"create-rfp\\\\\\\\\\\\\\\" },\\\\\\\\n              })}\\\\\\\\n            >\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                props={{\\\\\\\\n                  label: (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                      <div>\\\\\\\\n                        <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                      </div>\\\\\\\\n                      Create RFP\\\\\\\\n                    </div>\\\\\\\\n                  ),\\\\\\\\n                  classNames: { root: \\\\\\\\\\\\\\\"blue-btn\\\\\\\\\\\\\\\" },\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </Link>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n      <div style={{ minHeight: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {!Array.isArray(state.data) ? (\\\\\\\\n          loader\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 mt-4 py-3 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"container-xl\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"bg-blue text-sm mt-2 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center mb-0\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    <i className=\\\\\\\\\\\\\\\"bi bi-info-circle\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                  <div>\\\\\\\\n                    <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                      Welcome to the Infrastructure RFP Feed!\\\\\\\\n                    </span>\\\\\\\\n                    This space features request for proposals (RFPs) by the NEAR\\\\\\\\n                    Infrastructure Committee for improving enhancements\\\\\\\\n                    pertaining to wallets, indexers, RPC services, explorers,\\\\\\\\n                    oracles, bridges, NEAR Protocol features, and related\\\\\\\\n                    ecosystem upgrades. You are welcome to respond to any RFPs\\\\\\\\n                    that are accepting submissions or submit an independent\\\\\\\\n                    proposal on the proposals page.\\\\\\\\n                  </div>\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mt-4 border rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                {state.aggregatedCount === 0 ? (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"m-2\\\\\\\\\\\\\\\">\\\\\\\\n                    {state.isFiltered ? (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-danger\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No RFP found for selected filter.\\\\\\\\n                      </div>\\\\\\\\n                    ) : (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-secondary\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No RFP has been created yet.\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                ) : state.aggregatedCount > 0 ? (\\\\\\\\n                  <InfiniteScroll\\\\\\\\n                    pageStart={0}\\\\\\\\n                    loadMore={makeMoreItems}\\\\\\\\n                    hasMore={state.aggregatedCount > state.data.length}\\\\\\\\n                    loader={loader}\\\\\\\\n                    useWindow={false}\\\\\\\\n                    threshold={100}\\\\\\\\n                  >\\\\\\\\n                    {renderedItems}\\\\\\\\n                  </InfiniteScroll>\\\\\\\\n                ) : (\\\\\\\\n                  loader\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn FeedPage(props);\\\\\\\\n\"}, \"near-prpsls-bos.components.pages.admin\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst accessControlInfo =\\\\\\\\n  Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_access_control_info\\\\\\\\\\\\\\\"\\\\\\\\n  ) ?? null;\\\\\\\\n\\\\\\\\nif (!accessControlInfo.members_list) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst rootMembers =\\\\\\\\n  Near.view(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_root_members\\\\\\\\\\\\\\\") ?? null;\\\\\\\\nconst teamNames = Object.keys(rootMembers || {});\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst noPermissionBanner = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"d-flex flex-column justify-content-center align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n    <h2 className=\\\\\\\\\\\\\\\"alert alert-danger p-3 h6\\\\\\\\\\\\\\\">\\\\\\\\n      Your account does not have administration permissions.\\\\\\\\n    </h2>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!isModerator) {\\\\\\\\n  return noPermissionBanner;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction createEditTeam({\\\\\\\\n  teamName,\\\\\\\\n  members,\\\\\\\\n  description,\\\\\\\\n  contractCall, // typescript edit_member || add_member\\\\\\\\n}) {\\\\\\\\n  let txn = [];\\\\\\\\n\\\\\\\\n  const membersAndTeams = Object.keys(accessControlInfo.members_list);\\\\\\\\n  members.forEach((member) => {\\\\\\\\n    // if Contract panic member does not exist in the members_list\\\\\\\\n    if (!membersAndTeams.includes(member)) {\\\\\\\\n      // Add member\\\\\\\\n      txn.push({\\\\\\\\n        contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        methodName: \\\\\\\\\\\\\\\"add_member\\\\\\\\\\\\\\\",\\\\\\\\n        args: {\\\\\\\\n          member: member,\\\\\\\\n          metadata: {\\\\\\\\n            member_metadata_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n            description: description,\\\\\\\\n            permissions: {},\\\\\\\\n            children: [],\\\\\\\\n            parents: [],\\\\\\\\n          },\\\\\\\\n        },\\\\\\\\n        gas: Big(10).pow(14),\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  // Check edit team\\\\\\\\n  Near.call([\\\\\\\\n    ...txn,\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: contractCall, // add_member || edit_member\\\\\\\\n      args: {\\\\\\\\n        member: `team:${teamName}`,\\\\\\\\n        metadata: {\\\\\\\\n          member_metadata_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n          description: description,\\\\\\\\n          permissions: {},\\\\\\\\n          children: members,\\\\\\\\n          parents: [],\\\\\\\\n        },\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  margin: 0 auto;\\\\\\\\n  padding: 20px;\\\\\\\\n  text-align: left;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Tab = styled.button`\\\\\\\\n  color: rgb(0, 236, 151);\\\\\\\\n  &:hover {\\\\\\\\n    color: rgba(0, 236, 151, 0.5);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 p-4\\\\\\\\\\\\\\\">\\\\\\\\n      <ul class=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"myTab\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"tablist\\\\\\\\\\\\\\\">\\\\\\\\n        <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n          <Tab\\\\\\\\n            className=\\\\\\\\\\\\\\\"nav-link active\\\\\\\\\\\\\\\"\\\\\\\\n            id=\\\\\\\\\\\\\\\"profile-tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-target=\\\\\\\\\\\\\\\"#profile\\\\\\\\\\\\\\\"\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            aria-controls=\\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\\"\\\\\\\\n            aria-selected=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            Moderators\\\\\\\\n          </Tab>\\\\\\\\n        </li>\\\\\\\\n      </ul>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"tab-content\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"myTabContent\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          class=\\\\\\\\\\\\\\\"tab-pane fade show active\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\\"\\\\\\\\n          role=\\\\\\\\\\\\\\\"tabpanel\\\\\\\\\\\\\\\"\\\\\\\\n          aria-labelledby=\\\\\\\\\\\\\\\"profile-tab\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.admin.moderatorsTab`}\\\\\\\\n            props={{\\\\\\\\n              accessControlInfo,\\\\\\\\n              createEditTeam,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.Editor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_RFP_EDIT\\\\\\\\\\\\\\\";\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://near.social/devhub.near/widget/app?page=community&handle=developer-dao&tab=funding\\\\\\\\\\\\\\\";\\\\\\\\nconst ToCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst CoCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\nconst isAllowedToWriteRfp = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!author || !isAllowedToWriteRfp) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LoginScreen`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nlet editRfpData = null;\\\\\\\\nlet draftRfpData = null;\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editRfpData = Near.view(\\\\\\\\n    `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}`,\\\\\\\\n    \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      rfp_id: parseInt(id),\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  input {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .h5 {\\\\\\\\n    font-size: 18px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .h6 {\\\\\\\\n      font-size: 14px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .text-sm {\\\\\\\\n      font-size: 11px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-light-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 6px;\\\\\\\\n    height: 6px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 1.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nfunction getTimestamp(date) {\\\\\\\\n  // in nanoseconds\\\\\\\\n  const parsedDate = date ? new Date(date) : new Date();\\\\\\\\n  return Math.floor(parsedDate.getTime() * 1000000).toString();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getDate(timestamp) {\\\\\\\\n  const stamp =\\\\\\\\n    !timestamp || timestamp === \\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\" || timestamp === \\\\\\\\\\\\\\\"NaN\\\\\\\\\\\\\\\" ? null : timestamp;\\\\\\\\n  return new Date(parseFloat(stamp / 1000000)).toISOString().split(\\\\\\\\\\\\\\\"T\\\\\\\\\\\\\\\")[0];\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [labels, setLabels] = useState([]);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [submissionDeadline, setSubmissionDeadline] = useState(null);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\n\\\\\\\\nconst [showRfpViewModal, setShowRfpViewModal] = useState(false); // when user creates/edit a RFP and confirm the txn, this is true\\\\\\\\nconst [rfpId, setRfpId] = useState(null);\\\\\\\\nconst [rfpIdsArray, setRfpIdsArray] = useState(null);\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [oldRfpData, setOldRfpData] = useState(null);\\\\\\\\nconst [timeline, setTimeline] = useState({\\\\\\\\n  status: RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS,\\\\\\\\n});\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftRfpData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editRfpData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      labels: labels,\\\\\\\\n      summary: summary,\\\\\\\\n      submission_deadline: getTimestamp(submissionDeadline),\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [title, summary, description, submissionDeadline, labels]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (allowDraft) {\\\\\\\\n    let data = editRfpData || JSON.parse(draftRfpData);\\\\\\\\n    let snapshot = data.snapshot;\\\\\\\\n    if (data) {\\\\\\\\n      if (timestamp) {\\\\\\\\n        snapshot =\\\\\\\\n          data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n          data.snapshot;\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        draftRfpData &&\\\\\\\\n        editRfpData &&\\\\\\\\n        editRfpData.id === JSON.parse(draftRfpData).id\\\\\\\\n      ) {\\\\\\\\n        snapshot = {\\\\\\\\n          ...editRfpData.snapshot,\\\\\\\\n          ...JSON.parse(draftRfpData).snapshot,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n      setRfpId(data.id);\\\\\\\\n      setLabels(snapshot.labels);\\\\\\\\n      setTitle(snapshot.name);\\\\\\\\n      setSummary(snapshot.summary);\\\\\\\\n      setDescription(snapshot.description);\\\\\\\\n      setSubmissionDeadline(getDate(snapshot.submission_deadline));\\\\\\\\n      setTimeline(parseJSON(snapshot.timeline));\\\\\\\\n      if (isEditPage) {\\\\\\\\n        setConsent({ toc: true, coc: true });\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [editRfpData, draftRfpData, allowDraft]);\\\\\\\\n\\\\\\\\n// show loader until LS data is set in state\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n    setLoading(false);\\\\\\\\n  }, 200);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (showRfpViewModal) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  setDisabledSubmitBtn(\\\\\\\\n    !title ||\\\\\\\\n      !description ||\\\\\\\\n      !summary ||\\\\\\\\n      !(labels ?? []).length ||\\\\\\\\n      !submissionDeadline ||\\\\\\\\n      !consent.toc ||\\\\\\\\n      !consent.coc\\\\\\\\n  );\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 10000);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, [\\\\\\\\n  memoizedDraftData,\\\\\\\\n  draftKey,\\\\\\\\n  draftRfpData,\\\\\\\\n  consent,\\\\\\\\n  isTxnCreated,\\\\\\\\n  showRfpViewModal,\\\\\\\\n]);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n// show RFP created after txn approval for popup wallet\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isTxnCreated) {\\\\\\\\n    if (editRfpData) {\\\\\\\\n      setOldRfpData(editRfpData);\\\\\\\\n      if (\\\\\\\\n        editRfpData &&\\\\\\\\n        typeof editRfpData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        oldRfpData &&\\\\\\\\n        typeof oldRfpData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        JSON.stringify(editRfpData) !== JSON.stringify(oldRfpData)\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setRfpId(editRfpData.id);\\\\\\\\n        setShowRfpViewModal(true);\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      const rfpIds = Near.view(\\\\\\\\n        REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        \\\\\\\\\\\\\\\"get_all_rfp_ids\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      if (Array.isArray(rfpIds) && !rfpIdsArray) {\\\\\\\\n        setRfpIdsArray(rfpIds);\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        Array.isArray(rfpIds) &&\\\\\\\\n        Array.isArray(rfpIdsArray) &&\\\\\\\\n        rfpIds.length !== rfpIdsArray.length\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setRfpId(rfpIds[rfpIds.length - 1]);\\\\\\\\n        setShowRfpViewModal(true);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes) {\\\\\\\\n    setLoading(true);\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(REPL_RPC_URL, {\\\\\\\\n          method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n          headers: {\\\\\\\\n            \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          body: JSON.stringify({\\\\\\\\n            jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n            id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n            method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n            params: [props.transactionHashes, context.accountId],\\\\\\\\n          }),\\\\\\\\n        }).then((transaction) => {\\\\\\\\n          const transaction_method_name =\\\\\\\\n            transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n              .method_name;\\\\\\\\n\\\\\\\\n          const is_edit_or_add_rfp_transaction =\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"add_rfp\\\\\\\\\\\\\\\" ||\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"edit_rfp\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n          if (is_edit_or_add_rfp_transaction) {\\\\\\\\n            setShowRfpViewModal(true);\\\\\\\\n            Storage.privateSet(draftKey, null);\\\\\\\\n          }\\\\\\\\n          // show the latest created rfp to user\\\\\\\\n          if (transaction_method_name == \\\\\\\\\\\\\\\"add_rfp\\\\\\\\\\\\\\\") {\\\\\\\\n            useCache(\\\\\\\\n              () =>\\\\\\\\n                Near.asyncView(\\\\\\\\n                  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n                  \\\\\\\\\\\\\\\"get_all_rfp_ids\\\\\\\\\\\\\\\"\\\\\\\\n                ).then((rfpIdsArray) => {\\\\\\\\n                  setRfpId(rfpIdsArray?.[rfpIdsArray?.length - 1]);\\\\\\\\n                }),\\\\\\\\n              props.transactionHashes + \\\\\\\\\\\\\\\"rfpIds\\\\\\\\\\\\\\\",\\\\\\\\n              { subscribe: false }\\\\\\\\n            );\\\\\\\\n          } else {\\\\\\\\n            setRfpId(id);\\\\\\\\n          }\\\\\\\\n          setLoading(false);\\\\\\\\n        }),\\\\\\\\n      props.transactionHashes + context.accountId,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  } else {\\\\\\\\n    if (showRfpViewModal) {\\\\\\\\n      setShowRfpViewModal(false);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    className=\\\\\\\\\\\\\\\"submit-rfp-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst onSubmit = () => {\\\\\\\\n  setCreateTxn(true);\\\\\\\\n  const body = {\\\\\\\\n    rfp_body_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    summary: summary,\\\\\\\\n    submission_deadline: getTimestamp(submissionDeadline),\\\\\\\\n    timeline: timeline,\\\\\\\\n  };\\\\\\\\n  const args = { labels: (labels ?? []).map((i) => i.value), body: body };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editRfpData.id;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_rfp\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_rfp\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [collapseState, setCollapseState] = useState({});\\\\\\\\n\\\\\\\\nconst CollapsibleContainer = ({ title, children, noPaddingTop }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"border-bottom py-4 \\\\\\\\\\\\\\\" +\\\\\\\\n        (noPaddingTop && \\\\\\\\\\\\\\\"pt-0 \\\\\\\\\\\\\\\") +\\\\\\\\n        (collapseState[title] && \\\\\\\\\\\\\\\" pb-0\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className={\\\\\\\\\\\\\\\"d-flex justify-content-between \\\\\\\\\\\\\\\"}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-2 mb-sm-3\\\\\\\\\\\\\\\">{title}</div>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex d-sm-none cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() =>\\\\\\\\n            setCollapseState((prevState) => ({\\\\\\\\n              ...prevState,\\\\\\\\n              [title]: !prevState[title],\\\\\\\\n            }))\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          {!collapseState[title] ? (\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-chevron-up h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          ) : (\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-chevron-down h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className={!collapseState[title] ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"}>{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategoryDropdown = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n      props={{\\\\\\\\n        selected: labels,\\\\\\\\n        onChange: (v) => setLabels(v),\\\\\\\\n        disabled: false,\\\\\\\\n        availableOptions: rfpLabelOptions,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setTitle(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 80,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst SummaryComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: summary,\\\\\\\\n        multiline: true,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSummary(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 500,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst DescriptionComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: description,\\\\\\\\n        onChange: setDescription,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        autoFocus: false,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst ConsentComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"toc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={ToCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Terms and Conditions\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.toc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              toc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"coc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={CoCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Code of Conduct\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.coc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              coc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst SubmissionDeadline = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: submissionDeadline,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSubmissionDeadline(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        type: \\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\\",\\\\\\\\n        inputProps: {\\\\\\\\n          required: true,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"w-100 py-2 px-0 px-sm-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.ViewRfpModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: showRfpViewModal,\\\\\\\\n        isEdit: isEditPage,\\\\\\\\n        rfpId: rfpId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n        onConfirmClick: (value) => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onCancelRFP(value);\\\\\\\\n        },\\\\\\\\n        linkedProposalIds: editRfpData.snapshot.linked_proposals,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.WarningModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isWarningModalOpen,\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setWarningModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Heading className=\\\\\\\\\\\\\\\"px-2 px-sm-0\\\\\\\\\\\\\\\">\\\\\\\\n      {isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} RFP\\\\\\\\n    </Heading>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 px-2 p-lg-0 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4 d-flex flex-wrap gap-6 w-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-2 w-100 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n              <img src={RFP_IMAGE} height={35} width={35} />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Select the relevant categories to help users quickly\\\\\\\\n                    understand the nature of the need. Need guidance? See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href={FundingDocs}\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Funding Docs\\\\\\\\n                    </a>\\\\\\\\n                    .\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {CategoryDropdown}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Highlight the essence of your RFP in a few words. This will appear on your RFP\\\\\\\\u{2019}s detail page and the main RFP feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {TitleComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Explain your RFP briefly. What is the problem or need, desired outcome, and benefit to the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SummaryComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  \\\\\\\\\\\\\\\"Expand on your summary with any relevant details like a detailed explanation of the problem and the expected solution, scope, and deliverables. Also include an estimate range for the project if you have a specific budget. And the selection criteria.\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {DescriptionComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\">\\\\\\\\n                {ConsentComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex justify-content-end gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <Link\\\\\\\\n                  to={\\\\\\\\n                    isEditPage\\\\\\\\n                      ? href({\\\\\\\\n                          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                          params: {\\\\\\\\n                            page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n                            id: parseInt(id),\\\\\\\\n                          },\\\\\\\\n                        })\\\\\\\\n                      : href({\\\\\\\\n                          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                          params: {\\\\\\\\n                            page: \\\\\\\\\\\\\\\"rfps\\\\\\\\\\\\\\\",\\\\\\\\n                          },\\\\\\\\n                        })\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  <Widget\\\\\\\\n                    src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                    props={{\\\\\\\\n                      classNames: {\\\\\\\\n                        root: \\\\\\\\\\\\\\\"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                      },\\\\\\\\n                      label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                      onClick: cleanDraft,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </Link>\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    classNames: {\\\\\\\\n                      root: \\\\\\\\\\\\\\\"d-flex h-100 fw-light-bold btn-outline shadow-none border-1\\\\\\\\\\\\\\\",\\\\\\\\n                    },\\\\\\\\n                    label: (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"circle grey\\\\\\\\\\\\\\\"></div> <div>Submit</div>\\\\\\\\n                      </div>\\\\\\\\n                    ),\\\\\\\\n                    onClick: onSubmit,\\\\\\\\n                    disabled: disabledSubmitBtn,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-1 w-100 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <CollapsibleContainer noPaddingTop={true}>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Submission Deadline\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Enter the deadline for submitting proposals.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SubmissionDeadline}\\\\\\\\n              </InputContainer>\\\\\\\\n            </div>\\\\\\\\n          </CollapsibleContainer>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Timeline\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.TimelineConfigurator`}\\\\\\\\n                props={{\\\\\\\\n                  timeline: timeline,\\\\\\\\n                  setTimeline: (v) => {\\\\\\\\n                    if (editRfpData.snapshot.timeline.status === v.status) {\\\\\\\\n                      return;\\\\\\\\n                    }\\\\\\\\n                    // if proposal selected timeline is selected and no approved proposals exist, show warning\\\\\\\\n                    if (\\\\\\\\n                      v.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED &&\\\\\\\\n                      Array.isArray(approvedProposals) &&\\\\\\\\n                      !approvedProposals.length\\\\\\\\n                    ) {\\\\\\\\n                      setWarningModal(true);\\\\\\\\n                    }\\\\\\\\n\\\\\\\\n                    if (v.status === RFP_TIMELINE_STATUS.CANCELLED) {\\\\\\\\n                      setCancelModal(true);\\\\\\\\n                    }\\\\\\\\n                    setTimeline(v);\\\\\\\\n                  },\\\\\\\\n                  disabled: isEditPage ? false : true,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Feed\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    border-bottom: none !important;\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-btn {\\\\\\\\n    background-color: #3c697d !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .blue-btn {\\\\\\\\n      padding: 0.5rem 0.8rem !important;\\\\\\\\n      min-height: 32px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  .text-normal {\\\\\\\\n    font-weight: normal !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst FeedItem = ({ proposal, index }) => {\\\\\\\\n  const accountId = proposal.author_id;\\\\\\\\n  proposal.timeline = parseJSON(proposal.timeline);\\\\\\\\n  const profile = Social.get(`${accountId}/profile/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\n  // We will have to get the proposal from the contract to get the block height.\\\\\\\\n  const blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n    blockHeight: blockHeight,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const isLinked = isNumber(proposal.linked_rfp);\\\\\\\\n  const rfpData = proposal.rfpData;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n          id: proposal.proposal_id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      onClick={(e) => e.stopPropagation()}\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\n          \\\\\\\\\\\\\\\"proposal-card d-flex justify-content-between gap-2 text-muted cursor-pointer p-3 w-100 flex-wrap flex-sm-nowrap \\\\\\\\\\\\\\\" +\\\\\\\\n          (index !== 0 && \\\\\\\\\\\\\\\" border\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n            props={{\\\\\\\\n              accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"h6 mb-0 text-black\\\\\\\\\\\\\\\">{proposal.name}</div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                props={{\\\\\\\\n                  selected: proposal.labels,\\\\\\\\n                  disabled: true,\\\\\\\\n                  hideDropdown: true,\\\\\\\\n                  onChange: () => {},\\\\\\\\n                  availableOptions: rfpLabelOptions,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {isLinked && rfpData && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-sm text-muted d-flex gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <i class=\\\\\\\\\\\\\\\"bi bi-link-45deg\\\\\\\\\\\\\\\"></i>\\\\\\\\n                In response to RFP :\\\\\\\\n                <a\\\\\\\\n                  className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                  href={href({\\\\\\\\n                    widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                    params: {\\\\\\\\n                      page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n                      id: rfpData.rfp_id,\\\\\\\\n                    },\\\\\\\\n                  })}\\\\\\\\n                  target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {rfpData.name}\\\\\\\\n                </a>\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap flex-sm-nowrap text-sm w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div>#{proposal.proposal_id} \\\\\\\\u{ff65} </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n                By {profile.name ?? accountId} \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              </div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight,\\\\\\\\n                  blockTimestamp: proposal.timestamp,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LikeButton`}\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  proposalId: proposal.id,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  showOverlay: false,\\\\\\\\n                  onClick: () => {},\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"align-self-center\\\\\\\\\\\\\\\" style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n            props={{\\\\\\\\n              timelineStatus: proposal.timeline.status,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getProposal = (proposal_id) => {\\\\\\\\n  return Near.asyncView(\\\\\\\\n    `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}`,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id,\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FeedPage = () => {\\\\\\\\n  State.init({\\\\\\\\n    data: [],\\\\\\\\n    cachedItems: {},\\\\\\\\n    stage: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    sort: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    label: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    input: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    loading: false,\\\\\\\\n    loadingMore: false,\\\\\\\\n    aggregatedCount: null,\\\\\\\\n    currentlyDisplaying: 0,\\\\\\\\n    isFiltered: false,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  const queryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      author_id\\\\\\\\n      block_height\\\\\\\\n      name\\\\\\\\n      labels\\\\\\\\n      summary\\\\\\\\n      editor_id\\\\\\\\n      proposal_id\\\\\\\\n      ts\\\\\\\\n      timeline\\\\\\\\n      views\\\\\\\\n      linked_rfp\\\\\\\\n    }\\\\\\\\n    ${queryName}_aggregate(\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    )  {\\\\\\\\n      aggregate {\\\\\\\\n        count\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  const rfpQueryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const rfpQuery = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${rfpQueryName}_bool_exp = {}) {\\\\\\\\n    ${rfpQueryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {rfp_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      name\\\\\\\\n      rfp_id\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  function separateNumberAndText(str) {\\\\\\\\n    const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n    if (numberRegex.test(str)) {\\\\\\\\n      const number = str.match(numberRegex)[0];\\\\\\\\n      const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n      return { number: parseInt(number), text };\\\\\\\\n    } else {\\\\\\\\n      return { number: null, text: str.trim() };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const buildWhereClause = () => {\\\\\\\\n    let where = {};\\\\\\\\n\\\\\\\\n    if (state.label) {\\\\\\\\n      where = { labels: { _contains: state.label }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.stage) {\\\\\\\\n      // timeline is stored as jsonb\\\\\\\\n      where = {\\\\\\\\n        timeline: { _cast: { String: { _regex: `${state.stage}` } } },\\\\\\\\n        ...where,\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n    if (state.input) {\\\\\\\\n      const { number, text } = separateNumberAndText(state.input);\\\\\\\\n      if (number) {\\\\\\\\n        where = { proposal_id: { _eq: number }, ...where };\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      if (text) {\\\\\\\\n        where = {\\\\\\\\n          _or: [\\\\\\\\n            { name: { _iregex: `${text}` } },\\\\\\\\n            { summary: { _iregex: `${text}` } },\\\\\\\\n            { description: { _iregex: `${text}` } },\\\\\\\\n          ],\\\\\\\\n          ...where,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    State.update({ isFiltered: Object.keys(where).length > 0 });\\\\\\\\n    return where;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const buildOrderByClause = () => {\\\\\\\\n    /**\\\\\\\\n     * TODO\\\\\\\\n     * Most commented -> edit contract and indexer\\\\\\\\n     * Unanswered -> 0 comments\\\\\\\\n     */\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const makeMoreItems = () => {\\\\\\\\n    if (state.aggregatedCount <= state.currentlyDisplaying) return;\\\\\\\\n    fetchProposals(state.data.length);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchProposals = (offset) => {\\\\\\\\n    if (!offset) {\\\\\\\\n      offset = 0;\\\\\\\\n    }\\\\\\\\n    if (state.loading) return;\\\\\\\\n    const FETCH_LIMIT = 10;\\\\\\\\n    const variables = {\\\\\\\\n      limit: FETCH_LIMIT,\\\\\\\\n      offset,\\\\\\\\n      where: buildWhereClause(),\\\\\\\\n    };\\\\\\\\n    fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n      if (result.status === 200) {\\\\\\\\n        if (result.body.data) {\\\\\\\\n          const data = result.body.data?.[queryName];\\\\\\\\n          const totalResult = result.body.data?.[`${queryName}_aggregate`];\\\\\\\\n          const promises = data.map((item) => {\\\\\\\\n            if (isNumber(item.linked_rfp)) {\\\\\\\\n              return fetchGraphQL(rfpQuery, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", {}).then(\\\\\\\\n                (result) => {\\\\\\\\n                  const rfpData = result.body.data?.[rfpQueryName];\\\\\\\\n                  return { ...item, rfpData: rfpData[0] };\\\\\\\\n                }\\\\\\\\n              );\\\\\\\\n            } else {\\\\\\\\n              return Promise.resolve(item);\\\\\\\\n            }\\\\\\\\n          });\\\\\\\\n          Promise.all(promises).then((res) => {\\\\\\\\n            State.update({ aggregatedCount: totalResult.aggregate.count });\\\\\\\\n            fetchBlockHeights(res, offset);\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const renderItem = (item, index) => (\\\\\\\\n    <div\\\\\\\\n      key={item.proposal_id}\\\\\\\\n      className={\\\\\\\\n        (index !== state.data.length - 1 && \\\\\\\\\\\\\\\"border-bottom \\\\\\\\\\\\\\\") + index === 0 &&\\\\\\\\n        \\\\\\\\\\\\\\\" rounded-top-2\\\\\\\\\\\\\\\"\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <FeedItem proposal={item} index={index} />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n  const cachedRenderItem = (item, index) => {\\\\\\\\n    if (props.term) {\\\\\\\\n      return renderItem(item, {\\\\\\\\n        searchKeywords: [props.term],\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    const key = JSON.stringify(item);\\\\\\\\n\\\\\\\\n    if (!(key in state.cachedItems)) {\\\\\\\\n      state.cachedItems[key] = renderItem(item, index);\\\\\\\\n      State.update();\\\\\\\\n    }\\\\\\\\n    return state.cachedItems[key];\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    fetchProposals();\\\\\\\\n  }, [state.sort, state.label, state.stage]);\\\\\\\\n\\\\\\\\n  const mergeItems = (newItems) => {\\\\\\\\n    const items = [\\\\\\\\n      ...new Set([...newItems, ...state.data].map((i) => JSON.stringify(i))),\\\\\\\\n    ].map((i) => JSON.parse(i));\\\\\\\\n    // Sorting in the front end\\\\\\\\n    if (state.sort === \\\\\\\\\\\\\\\"proposal_id\\\\\\\\\\\\\\\" || state.sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.proposal_id - a.proposal_id);\\\\\\\\n    } else if (state.sort === \\\\\\\\\\\\\\\"views\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.views - a.views);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return items;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchBlockHeights = (data, offset) => {\\\\\\\\n    let promises = data.map((item) => getProposal(item.proposal_id));\\\\\\\\n    Promise.all(promises).then((blockHeights) => {\\\\\\\\n      data = data.map((item, index) => ({\\\\\\\\n        ...item,\\\\\\\\n        timeline: JSON.parse(item.timeline),\\\\\\\\n        social_db_post_block_height:\\\\\\\\n          blockHeights[index].social_db_post_block_height,\\\\\\\\n      }));\\\\\\\\n      if (offset) {\\\\\\\\n        let newData = mergeItems(data);\\\\\\\\n        State.update({\\\\\\\\n          data: newData,\\\\\\\\n          currentlyDisplaying: newData.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      } else {\\\\\\\\n        State.update({\\\\\\\\n          data,\\\\\\\\n          currentlyDisplaying: data.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const loader = (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const renderedItems = state.data ? state.data.map(cachedRenderItem) : null;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between flex-wrap gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Heading>\\\\\\\\n          Proposals\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"text-muted text-normal\\\\\\\\\\\\\\\">\\\\\\\\n            ({state.aggregatedCount ?? state.data.length}){\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          </span>\\\\\\\\n        </Heading>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-input`}\\\\\\\\n            props={{\\\\\\\\n              search: state.input,\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-xs-100\\\\\\\\\\\\\\\",\\\\\\\\n              onSearch: (input) => {\\\\\\\\n                State.update({ input });\\\\\\\\n                fetchProposals();\\\\\\\\n              },\\\\\\\\n              onEnter: () => {\\\\\\\\n                fetchProposals();\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-sort`}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ sort: select.value });\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.FilterByLabel`}\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ label: select.value });\\\\\\\\n                },\\\\\\\\n                availableOptions: rfpLabelOptions,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-stage`}\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ stage: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"mt-2 mt-xs-0\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={href({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\" },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                label: (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                    <div>\\\\\\\\n                      <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                    </div>\\\\\\\\n                    Submit Proposal\\\\\\\\n                  </div>\\\\\\\\n                ),\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"blue-btn\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div style={{ minHeight: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {!Array.isArray(state.data) ? (\\\\\\\\n          loader\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 mt-4 py-3 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"container-xl\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"bg-blue text-sm mt-2 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center mb-0\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    <i className=\\\\\\\\\\\\\\\"bi bi-info-circle\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                  <div>\\\\\\\\n                    Welcome to the Infrastructure Committee Proposal Feed! This\\\\\\\\n                    dedicated space makes it easy to submit and track funding\\\\\\\\n                    proposals from the Infrastructure Committee, the primary\\\\\\\\n                    organization overseeing improvements pertaining to wallets,\\\\\\\\n                    indexers, RPC services, explorers, oracles, bridges, NEAR\\\\\\\\n                    Protocol features, and related ecosystem upgrades. You are\\\\\\\\n                    welcome to respond to any RFPs that are accepting\\\\\\\\n                    submissions or submit an independent proposal.\\\\\\\\n                  </div>\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mt-4 border rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                {state.aggregatedCount === 0 ? (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"m-2\\\\\\\\\\\\\\\">\\\\\\\\n                    {state.isFiltered ? (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-danger\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No proposal found for selected filter.\\\\\\\\n                      </div>\\\\\\\\n                    ) : (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-secondary\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No proposal has been created yet.\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                ) : state.aggregatedCount > 0 ? (\\\\\\\\n                  <InfiniteScroll\\\\\\\\n                    pageStart={0}\\\\\\\\n                    loadMore={makeMoreItems}\\\\\\\\n                    hasMore={state.aggregatedCount > state.data.length}\\\\\\\\n                    loader={loader}\\\\\\\\n                    useWindow={false}\\\\\\\\n                    threshold={100}\\\\\\\\n                  >\\\\\\\\n                    {renderedItems}\\\\\\\\n                  </InfiniteScroll>\\\\\\\\n                ) : (\\\\\\\\n                  loader\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn FeedPage(props);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.StatusTag\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst timelineStatus = props.timelineStatus;\\\\\\\\nconst size = props.size ?? \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst getClassNameByStatus = () => {\\\\\\\\n  switch (timelineStatus) {\\\\\\\\n    case RFP_TIMELINE_STATUS.CANCELLED:\\\\\\\\n      return \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\";\\\\\\\\n    case RFP_TIMELINE_STATUS.PROPOSAL_SELECTED:\\\\\\\\n      return \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\";\\\\\\\\n    case RFP_TIMELINE_STATUS.EVALUATION:\\\\\\\\n      return \\\\\\\\\\\\\\\"orange\\\\\\\\\\\\\\\";\\\\\\\\n    default:\\\\\\\\n      return \\\\\\\\\\\\\\\"black\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  font-size: ${({ size }) => {\\\\\\\\n    switch (size) {\\\\\\\\n      case \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\":\\\\\\\\n        return \\\\\\\\\\\\\\\"10px\\\\\\\\\\\\\\\";\\\\\\\\n      case \\\\\\\\\\\\\\\"lg\\\\\\\\\\\\\\\":\\\\\\\\n        return \\\\\\\\\\\\\\\"14px\\\\\\\\\\\\\\\";\\\\\\\\n      default:\\\\\\\\n        return \\\\\\\\\\\\\\\"12px\\\\\\\\\\\\\\\";\\\\\\\\n    }\\\\\\\\n  }};\\\\\\\\n\\\\\\\\n  min-width: fit-content;\\\\\\\\n\\\\\\\\n  .orange-tag {\\\\\\\\n    border: 1px solid #ff7a00 !important;\\\\\\\\n    color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-tag {\\\\\\\\n    border: 1px solid #000 !important;\\\\\\\\n    color: #000 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-tag {\\\\\\\\n    border: 1px solid #979797 !important;\\\\\\\\n    color: #979797 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-tag {\\\\\\\\n    border: 1px solid #04a46e !important;\\\\\\\\n    color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container size={size}>\\\\\\\\n    <div className={getClassNameByStatus() + \\\\\\\\\\\\\\\"-tag fw-bold rounded-2 p-1 px-2\\\\\\\\\\\\\\\"}>\\\\\\\\n      {(timelineStatus ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.organism.Navbar\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst page = props.page;\\\\\\\\n\\\\\\\\nconst [showMenu, setShowMenu] = useState(false);\\\\\\\\n\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst Logo = () => {\\\\\\\\n  const Wrapper = styled.div`\\\\\\\\n    .text-lg {\\\\\\\\n      font-size: 22px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    a:hover {\\\\\\\\n      text-decoration: none;\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <Link\\\\\\\\n        to={linkHref({\\\\\\\\n          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n          params: { page: \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\" },\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <img\\\\\\\\n            height={35}\\\\\\\\n            width={35}\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicgbhtzxgdb3noivjfx4xcwsx6nq5pnjttdc4fpgfq74ynqj5h6mq\\\\\\\\\\\\\\\"\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          <b className=\\\\\\\\\\\\\\\"text-lg\\\\\\\\\\\\\\\">infrastructure committee</b>\\\\\\\\n        </div>\\\\\\\\n      </Link>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst ProfileIcon = () => {\\\\\\\\n  const Wrapper = styled.svg`\\\\\\\\n    padding: 0.25rem;\\\\\\\\n    @media screen and (max-width: 768px) {\\\\\\\\n      display: none;\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.ProfileCard`}\\\\\\\\n      props={{ iconOnly: true, accountId: context.accountId || null }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst MenuIcon = () => (\\\\\\\\n  <svg\\\\\\\\n    xmlns=\\\\\\\\\\\\\\\"http://www.w3.org/2000/svg\\\\\\\\\\\\\\\"\\\\\\\\n    width=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n    height=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n    viewBox=\\\\\\\\\\\\\\\"0 0 16 16\\\\\\\\\\\\\\\"\\\\\\\\n    fill=\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ height: 20, width: 20 }}\\\\\\\\n  >\\\\\\\\n    <path\\\\\\\\n      fill-rule=\\\\\\\\\\\\\\\"evenodd\\\\\\\\\\\\\\\"\\\\\\\\n      clip-rule=\\\\\\\\\\\\\\\"evenodd\\\\\\\\\\\\\\\"\\\\\\\\n      d=\\\\\\\\\\\\\\\"M2 12.2986H14V13.3732H2V12.2986ZM2 9.07471H14V10.1493H2V9.07471ZM2 5.85083H14V6.92546H2V5.85083ZM2 2.62695H14V3.70158H2V2.62695Z\\\\\\\\\\\\\\\"\\\\\\\\n      fill=\\\\\\\\\\\\\\\"#818181\\\\\\\\\\\\\\\"\\\\\\\\n    />\\\\\\\\n  </svg>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Navbar = styled.div`\\\\\\\\n  padding: 1.5rem 0rem;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n\\\\\\\\n  background: #f4f4f4;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1.875rem 1.375rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinksContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 1.5rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: none;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst MobileMenu = styled.button`\\\\\\\\n  all: unset;\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nlet links = [\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Proposals\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"RFPs\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"rfps\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"About\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (isModerator) {\\\\\\\\n  links = [\\\\\\\\n    {\\\\\\\\n      title: \\\\\\\\\\\\\\\"Admin\\\\\\\\\\\\\\\",\\\\\\\\n      href: \\\\\\\\\\\\\\\"admin\\\\\\\\\\\\\\\",\\\\\\\\n      links: [],\\\\\\\\n    },\\\\\\\\n    ...links,\\\\\\\\n  ];\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst MobileNav = styled.div`\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: flex;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  position: absolute;\\\\\\\\n  top: 0;\\\\\\\\n  right: 0;\\\\\\\\n\\\\\\\\n  width: 207px;\\\\\\\\n\\\\\\\\n  padding: 24px 36px 36px 16px;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: flex-end;\\\\\\\\n  gap: 2.5rem;\\\\\\\\n  flex-shrink: 0;\\\\\\\\n\\\\\\\\n  border-radius: 0px 0px 0px 16px;\\\\\\\\n  background: rgba(41, 41, 41, 0.6);\\\\\\\\n  backdrop-filter: blur(5px);\\\\\\\\n\\\\\\\\n  z-index: 50;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst MobileLink = styled.a`\\\\\\\\n  color: #f4f4f4 !important;\\\\\\\\n  font-size: 20px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 20px; /* 100% */\\\\\\\\n  margin-bottom: 1rem;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    color: #00ec97 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n    color: #00ec97 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Navbar className=\\\\\\\\\\\\\\\"position-relative\\\\\\\\\\\\\\\">\\\\\\\\n    <Logo />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <LinksContainer>\\\\\\\\n        {links.map((link) => (\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.NavbarDropdown`}\\\\\\\\n            props={{\\\\\\\\n              title: link.title,\\\\\\\\n              href: link.href,\\\\\\\\n              links: link.links,\\\\\\\\n              page: page,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        ))}\\\\\\\\n      </LinksContainer>\\\\\\\\n      {context.accountId && <ProfileIcon />}\\\\\\\\n      <MobileMenu onClick={() => setShowMenu(!showMenu)}>\\\\\\\\n        <MenuIcon />\\\\\\\\n      </MobileMenu>\\\\\\\\n    </div>\\\\\\\\n    {showMenu && (\\\\\\\\n      <MobileNav>\\\\\\\\n        <div\\\\\\\\n          onClick={() => setShowMenu(!showMenu)}\\\\\\\\n          style={{ cursor: \\\\\\\\\\\\\\\"pointer\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-x\\\\\\\\\\\\\\\" style={{ fontSize: 20, color: \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\" }}></i>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n          {links.map((link, idx) =>\\\\\\\\n            link.href ? (\\\\\\\\n              <MobileLink\\\\\\\\n                key={`mobile-link-${idx}`}\\\\\\\\n                className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                href={`/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=${link.href}`}\\\\\\\\n              >\\\\\\\\n                {link.title}\\\\\\\\n              </MobileLink>\\\\\\\\n            ) : (\\\\\\\\n              link.links.map((it, idx) =>\\\\\\\\n                it.href.startsWith(\\\\\\\\\\\\\\\"http://\\\\\\\\\\\\\\\") ||\\\\\\\\n                it.href.startsWith(\\\\\\\\\\\\\\\"https://\\\\\\\\\\\\\\\") ? (\\\\\\\\n                  <MobileLink\\\\\\\\n                    key={`nested-link-${idx}`}\\\\\\\\n                    className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                    href={it.href}\\\\\\\\n                    target=\\\\\\\\\\\\\\\"no_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    /{it.title}\\\\\\\\n                  </MobileLink>\\\\\\\\n                ) : (\\\\\\\\n                  <MobileLink\\\\\\\\n                    key={`nested-link-${idx}`}\\\\\\\\n                    className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                    href={`/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=${it.href}`}\\\\\\\\n                  >\\\\\\\\n                    /{it.title}\\\\\\\\n                  </MobileLink>\\\\\\\\n                )\\\\\\\\n              )\\\\\\\\n            )\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </MobileNav>\\\\\\\\n    )}\\\\\\\\n  </Navbar>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.Compose\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst EmbeddCSS = `\\\\\\\\n  .CodeMirror {\\\\\\\\n   margin-inline:10px;\\\\\\\\n   border-radius:5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  .nav-link {\\\\\\\\n    color: inherit !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card-header {\\\\\\\\n    padding-bottom: 0px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Compose = ({\\\\\\\\n  data,\\\\\\\\n  onChange,\\\\\\\\n  autocompleteEnabled,\\\\\\\\n  placeholder,\\\\\\\\n  height,\\\\\\\\n  embeddCSS,\\\\\\\\n  showProposalIdAutoComplete,\\\\\\\\n  onChangeKeyup,\\\\\\\\n  handler,\\\\\\\\n}) => {\\\\\\\\n  State.init({\\\\\\\\n    data: data,\\\\\\\\n    selectedTab: \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\",\\\\\\\\n    autoFocus: false,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    if (typeof onChange === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\") {\\\\\\\\n      onChange(state.data);\\\\\\\\n    }\\\\\\\\n  }, [state.data]);\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    // for clearing editor after txn approval/ showing draft state\\\\\\\\n    if (data !== state.data || handler !== state.handler) {\\\\\\\\n      State.update({ data: data, handler: handler });\\\\\\\\n    }\\\\\\\\n  }, [data, handler]);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"card-header\\\\\\\\\\\\\\\" style={{ position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <div>\\\\\\\\n            <ul class=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\">\\\\\\\\n              <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class={`nav-link ${\\\\\\\\n                    state.selectedTab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  }`}\\\\\\\\n                  onClick={() =>\\\\\\\\n                    State.update({ selectedTab: \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\", autoFocus: true })\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  Write\\\\\\\\n                </button>\\\\\\\\n              </li>\\\\\\\\n              <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class={`nav-link ${\\\\\\\\n                    state.selectedTab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  }`}\\\\\\\\n                  onClick={() => State.update({ selectedTab: \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" })}\\\\\\\\n                >\\\\\\\\n                  Preview\\\\\\\\n                </button>\\\\\\\\n              </li>\\\\\\\\n            </ul>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {state.selectedTab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? (\\\\\\\\n          <>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.SimpleMDE`}\\\\\\\\n              props={{\\\\\\\\n                data: { handler: state.handler, content: state.data },\\\\\\\\n                onChange: (content) => {\\\\\\\\n                  State.update({ data: content, handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\" });\\\\\\\\n                },\\\\\\\\n                placeholder: placeholder,\\\\\\\\n                height,\\\\\\\\n                embeddCSS: embeddCSS || EmbeddCSS,\\\\\\\\n                showAutoComplete: autocompleteEnabled,\\\\\\\\n                showProposalIdAutoComplete: showProposalIdAutoComplete,\\\\\\\\n                autoFocus: state.autoFocus,\\\\\\\\n                onChangeKeyup: onChangeKeyup,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n              props={{\\\\\\\\n                text: state.data,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn Compose(props);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Editor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst { id, timestamp, rfp_id } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://near.social/${REPL_DEVHUB}/widget/app?page=community&handle=developer-dao&tab=funding\\\\\\\\\\\\\\\";\\\\\\\\nconst ToCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst CoCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nif (!author) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LoginScreen`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nlet editProposalData = null;\\\\\\\\nlet draftProposalData = null;\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_PROPOSAL_EDIT\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editProposalData = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id: parseInt(id),\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  input {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .h6 {\\\\\\\\n      font-size: 14px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .text-sm {\\\\\\\\n      font-size: 11px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #03ba16 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst tokensOptions = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\" },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"OTHER\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst [linkedRfp, setLinkedRfp] = useState(rfp_id ? parseInt(rfp_id) : null);\\\\\\\\nconst [labels, setLabels] = useState([]);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [linkedProposals, setLinkedProposals] = useState([]);\\\\\\\\nconst [receiverAccount, setReceiverAccount] = useState(context.accountId);\\\\\\\\nconst [requestedSponsorshipAmount, setRequestedSponsorshipAmount] =\\\\\\\\n  useState(null);\\\\\\\\nconst [requestedSponsorshipToken, setRequestedSponsorshipToken] = useState(\\\\\\\\n  tokensOptions[2]\\\\\\\\n);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\nconst [selectedStatus, setSelectedStatus] = useState(\\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\");\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\n\\\\\\\\nconst [showProposalViewModal, setShowProposalViewModal] = useState(false); // when user creates/edit a proposal and confirm the txn, this is true\\\\\\\\nconst [proposalId, setProposalId] = useState(null);\\\\\\\\nconst [proposalIdsArray, setProposalIdsArray] = useState(null);\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [oldProposalData, setOldProposalData] = useState(null);\\\\\\\\nconst [supervisor, setSupervisor] = useState(null);\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftProposalData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editProposalData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      linked_rfp: linkedRfp,\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      labels: labels,\\\\\\\\n      summary: summary,\\\\\\\\n      requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n      requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n      receiver_account: receiverAccount,\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [\\\\\\\\n    linkedRfp,\\\\\\\\n    title,\\\\\\\\n    summary,\\\\\\\\n    description,\\\\\\\\n    labels,\\\\\\\\n    requestedSponsorshipAmount,\\\\\\\\n    requestedSponsorshipToken,\\\\\\\\n    receiverAccount,\\\\\\\\n  ]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (allowDraft) {\\\\\\\\n    let data = editProposalData || JSON.parse(draftProposalData);\\\\\\\\n    let snapshot = data.snapshot;\\\\\\\\n    if (data) {\\\\\\\\n      if (timestamp) {\\\\\\\\n        snapshot =\\\\\\\\n          data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n          data.snapshot;\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        draftProposalData &&\\\\\\\\n        editProposalData &&\\\\\\\\n        editProposalData.id === JSON.parse(draftProposalData).id\\\\\\\\n      ) {\\\\\\\\n        snapshot = {\\\\\\\\n          ...editProposalData.snapshot,\\\\\\\\n          ...JSON.parse(draftProposalData).snapshot,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n      if (!isNumber(linkedRfp)) {\\\\\\\\n        setLinkedRfp(snapshot.linked_rfp);\\\\\\\\n      }\\\\\\\\n      setLabels(snapshot.labels ?? []);\\\\\\\\n      setTitle(snapshot.name);\\\\\\\\n      setSummary(snapshot.summary);\\\\\\\\n      setDescription(snapshot.description);\\\\\\\\n      setReceiverAccount(snapshot.receiver_account);\\\\\\\\n      setRequestedSponsorshipAmount(snapshot.requested_sponsorship_usd_amount);\\\\\\\\n      setSupervisor(snapshot.supervisor);\\\\\\\\n\\\\\\\\n      const token = tokensOptions.find(\\\\\\\\n        (item) => item.value === snapshot.requested_sponsorship_paid_in_currency\\\\\\\\n      );\\\\\\\\n      setRequestedSponsorshipToken(token ?? tokensOptions[2]);\\\\\\\\n      if (isEditPage) {\\\\\\\\n        setConsent({ toc: true, coc: true });\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [editProposalData, draftProposalData, allowDraft]);\\\\\\\\n\\\\\\\\n// show loader until LS data is set in state\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n    setLoading(false);\\\\\\\\n  }, 500);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (showProposalViewModal) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  setDisabledSubmitBtn(\\\\\\\\n    isTxnCreated ||\\\\\\\\n      !title ||\\\\\\\\n      !description ||\\\\\\\\n      !summary ||\\\\\\\\n      !(labels ?? []).length ||\\\\\\\\n      !requestedSponsorshipAmount ||\\\\\\\\n      !receiverAccount ||\\\\\\\\n      !consent.toc ||\\\\\\\\n      !consent.coc\\\\\\\\n  );\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 10000);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, [\\\\\\\\n  memoizedDraftData,\\\\\\\\n  draftKey,\\\\\\\\n  draftProposalData,\\\\\\\\n  consent,\\\\\\\\n  isTxnCreated,\\\\\\\\n  showProposalViewModal,\\\\\\\\n]);\\\\\\\\n\\\\\\\\n// set RFP labels, disable link rfp change when linked rfp is past accepting stage\\\\\\\\nconst [disabledLinkRFP, setDisableLinkRFP] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (linkedRfp) {\\\\\\\\n    Near.asyncView(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n      rfp_id: linkedRfp.value ?? linkedRfp,\\\\\\\\n    }).then((i) => {\\\\\\\\n      const timeline = parseJSON(i.snapshot.timeline);\\\\\\\\n      setDisableLinkRFP(\\\\\\\\n        !isModerator &&\\\\\\\\n          timeline.status !== RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS\\\\\\\\n      );\\\\\\\\n      setLabels(i.snapshot.labels);\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [linkedRfp]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    editProposalData &&\\\\\\\\n    editProposalData?.snapshot?.linked_proposals?.length > 0\\\\\\\\n  ) {\\\\\\\\n    editProposalData.snapshot.linked_proposals.map((item) => {\\\\\\\\n      useCache(\\\\\\\\n        () =>\\\\\\\\n          Near.asyncView(\\\\\\\\n            REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n            \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n            {\\\\\\\\n              proposal_id: parseInt(item),\\\\\\\\n            }\\\\\\\\n          ).then((proposal) => {\\\\\\\\n            setLinkedProposals([\\\\\\\\n              ...linkedProposals,\\\\\\\\n              {\\\\\\\\n                label: \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + proposal.id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + proposal.snapshot.name,\\\\\\\\n                value: proposal.id,\\\\\\\\n              },\\\\\\\\n            ]);\\\\\\\\n          }),\\\\\\\\n        item + \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\",\\\\\\\\n        { subscribe: false }\\\\\\\\n      );\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [editProposalData]);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n// show proposal created after txn approval for popup wallet\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isTxnCreated) {\\\\\\\\n    if (editProposalData) {\\\\\\\\n      setOldProposalData(editProposalData);\\\\\\\\n      if (\\\\\\\\n        editProposalData &&\\\\\\\\n        typeof editProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        oldProposalData &&\\\\\\\\n        typeof oldProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        JSON.stringify(editProposalData) !== JSON.stringify(oldProposalData)\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(editProposalData.id);\\\\\\\\n        setShowProposalViewModal(true);\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      const proposalIds = Near.view(\\\\\\\\n        REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      if (Array.isArray(proposalIds) && !proposalIdsArray) {\\\\\\\\n        setProposalIdsArray(proposalIds);\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        Array.isArray(proposalIds) &&\\\\\\\\n        Array.isArray(proposalIdsArray) &&\\\\\\\\n        proposalIds.length !== proposalIdsArray.length\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(proposalIds[proposalIds.length - 1]);\\\\\\\\n        setShowProposalViewModal(true);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  setLoading(false);\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes) {\\\\\\\\n    setLoading(true);\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(REPL_RPC_URL, {\\\\\\\\n          method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n          headers: {\\\\\\\\n            \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          body: JSON.stringify({\\\\\\\\n            jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n            id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n            method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n            params: [props.transactionHashes, context.accountId],\\\\\\\\n          }),\\\\\\\\n        }).then((transaction) => {\\\\\\\\n          const transaction_method_name =\\\\\\\\n            transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n              .method_name;\\\\\\\\n\\\\\\\\n          const is_edit_or_add_post_transaction =\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\" ||\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n          if (is_edit_or_add_post_transaction) {\\\\\\\\n            setShowProposalViewModal(true);\\\\\\\\n            Storage.privateSet(draftKey, null);\\\\\\\\n          }\\\\\\\\n          // show the latest created proposal to user\\\\\\\\n          if (transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\") {\\\\\\\\n            useCache(\\\\\\\\n              () =>\\\\\\\\n                Near.asyncView(\\\\\\\\n                  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n                  \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n                ).then((proposalIdsArray) => {\\\\\\\\n                  setProposalId(\\\\\\\\n                    proposalIdsArray?.[proposalIdsArray?.length - 1]\\\\\\\\n                  );\\\\\\\\n                }),\\\\\\\\n              props.transactionHashes + \\\\\\\\\\\\\\\"proposalIds\\\\\\\\\\\\\\\",\\\\\\\\n              { subscribe: false }\\\\\\\\n            );\\\\\\\\n          } else {\\\\\\\\n            setProposalId(id);\\\\\\\\n          }\\\\\\\\n          setLoading(false);\\\\\\\\n        }),\\\\\\\\n      props.transactionHashes + context.accountId,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  } else {\\\\\\\\n    if (showProposalViewModal) {\\\\\\\\n      setShowProposalViewModal(false);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst DropdowntBtnContainer = styled.div`\\\\\\\\n  font-size: 13px;\\\\\\\\n  min-width: 150px;\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .select-header {\\\\\\\\n    display: flex;\\\\\\\\n    justify-content: space-between;\\\\\\\\n    align-items: center;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    border-radius-top: 5px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    background-color: #fff;\\\\\\\\n    border-radius: 5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .no-border {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .options-card {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 0;\\\\\\\\n    width: 200%;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    background-color: #fff;\\\\\\\\n    padding: 0.5rem;\\\\\\\\n    z-index: 99;\\\\\\\\n    font-size: 13px;\\\\\\\\n    border-radius:0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .left {\\\\\\\\n    right: 0 !important;\\\\\\\\n    left: auto !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .options-card {\\\\\\\\n      right: 0 !important;\\\\\\\\n      left: auto !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option {\\\\\\\\n    margin-block: 5px;\\\\\\\\n    padding: 10px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    border-bottom: 1px solid #f0f0f0;\\\\\\\\n    transition: background-color 0.3s ease;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:hover {\\\\\\\\n    background-color: #f0f0f0; /* Custom hover effect color */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:last-child {\\\\\\\\n    border-bottom: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f4f4f4 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    font-weight: 500;\\\\\\\\n    color: #b3b3b3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 8px;\\\\\\\\n    height: 8px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green {\\\\\\\\n    background-color: #04a46e;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"submit-proposal-draft-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SubmitBtn = () => {\\\\\\\\n  const btnOptions = [\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Submit Draft\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"The author can still edit the proposal and build consensus before sharing it with sponsors.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Ready for Review\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"Start the official review process with sponsors. This will lock the editing function, but comments are still open.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"review\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  const handleOptionClick = (option) => {\\\\\\\\n    setDraftBtnOpen(false);\\\\\\\\n    setSelectedStatus(option.value);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const toggleDropdown = () => {\\\\\\\\n    setDraftBtnOpen(!isDraftBtnOpen);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const handleSubmit = () => {\\\\\\\\n    const isDraft = selectedStatus === \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\";\\\\\\\\n    if (isDraft) {\\\\\\\\n      onSubmit({ isDraft });\\\\\\\\n      cleanDraft();\\\\\\\\n    } else {\\\\\\\\n      setReviewModal(true);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <DropdowntBtnContainer>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"custom-select\\\\\\\\\\\\\\\"\\\\\\\\n        tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n        onBlur={() => setDraftBtnOpen(false)}\\\\\\\\n      >\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\n            \\\\\\\\\\\\\\\"select-header d-flex gap-1 align-items-center submit-draft-button \\\\\\\\\\\\\\\" +\\\\\\\\n            (disabledSubmitBtn && \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\")\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            onClick={() => !disabledSubmitBtn && handleSubmit()}\\\\\\\\n            className=\\\\\\\\\\\\\\\"p-2 d-flex gap-2 align-items-center \\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {isTxnCreated ? (\\\\\\\\n              LoadingButtonSpinner\\\\\\\\n            ) : (\\\\\\\\n              <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + selectedOption.iconColor}></div>\\\\\\\\n            )}\\\\\\\\n            <div className={`selected-option`}>{selectedOption.label}</div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"h-100 p-2\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ borderLeft: \\\\\\\\\\\\\\\"1px solid #ccc\\\\\\\\\\\\\\\" }}\\\\\\\\n            onClick={!disabledSubmitBtn && toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <i class={`bi bi-chevron-${isDraftBtnOpen ? \\\\\\\\\\\\\\\"up\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\"}`}></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {isDraftBtnOpen && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"options-card\\\\\\\\\\\\\\\">\\\\\\\\n            {btnOptions.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`option ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n              >\\\\\\\\n                <div className={`d-flex gap-2 align-items-center`}>\\\\\\\\n                  <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + option.iconColor}></div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">{option.label}</div>\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-muted text-xs\\\\\\\\\\\\\\\">{option.description}</div>\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </DropdowntBtnContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst onSubmit = ({ isDraft, isCancel }) => {\\\\\\\\n  setCreateTxn(true);\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"submitting transaction\\\\\\\\\\\\\\\");\\\\\\\\n  const linkedProposalsIds = linkedProposals.map((item) => item.value) ?? [];\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    linked_rfp: linkedRfp?.value,\\\\\\\\n    category: \\\\\\\\\\\\\\\"Infrastructure Committee\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    summary: summary,\\\\\\\\n    linked_proposals: linkedProposalsIds,\\\\\\\\n    requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n    requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n    receiver_account: receiverAccount,\\\\\\\\n    requested_sponsor: \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\",\\\\\\\\n    supervisor: supervisor,\\\\\\\\n    timeline: isCancel\\\\\\\\n      ? {\\\\\\\\n          status: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        }\\\\\\\\n      : isDraft\\\\\\\\n      ? { status: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\" }\\\\\\\\n      : {\\\\\\\\n          status: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        },\\\\\\\\n  };\\\\\\\\n  const args = {\\\\\\\\n    labels: linkedRfp ? [] : (labels ?? []).map((i) => i.value ?? i),\\\\\\\\n    body: body,\\\\\\\\n  };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editProposalData.id;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [collapseState, setCollapseState] = useState({});\\\\\\\\n\\\\\\\\nconst CollapsibleContainer = ({ title, children, noPaddingTop }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"border-bottom py-4 \\\\\\\\\\\\\\\" +\\\\\\\\n        (noPaddingTop && \\\\\\\\\\\\\\\"pt-0 \\\\\\\\\\\\\\\") +\\\\\\\\n        (collapseState[title] && \\\\\\\\\\\\\\\" pb-0\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className={\\\\\\\\\\\\\\\"d-flex justify-content-between \\\\\\\\\\\\\\\"}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-2 mb-sm-3\\\\\\\\\\\\\\\">{title}</div>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex d-sm-none cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() =>\\\\\\\\n            setCollapseState((prevState) => ({\\\\\\\\n              ...prevState,\\\\\\\\n              [title]: !prevState[title],\\\\\\\\n            }))\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          {!collapseState[title] ? (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-up h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          ) : (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-down h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className={!collapseState[title] ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"}>{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategoryDropdown = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n      props={{\\\\\\\\n        selected: labels,\\\\\\\\n        onChange: (v) => setLabels(v),\\\\\\\\n        disabled: linkedRfp, // when RFP is linked, labels are disabled\\\\\\\\n        label: linkedRfp\\\\\\\\n          ? \\\\\\\\\\\\\\\"These categories are inherited from your selected RFP and can\\\\\\\\u{2019}t change\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"Select Category\\\\\\\\\\\\\\\",\\\\\\\\n        availableOptions: rfpLabelOptions,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData, linkedRfp, labels]);\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setTitle(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 80,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst SummaryComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: summary,\\\\\\\\n        multiline: true,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSummary(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 500,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst DescriptionComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: description,\\\\\\\\n        onChange: setDescription,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        autoFocus: false,\\\\\\\\n        showProposalIdAutoComplete: true,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ConsentComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"toc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={ToCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Infrastructure Committee\\\\\\\\u{2019}s Terms and Conditions\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.toc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              toc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"coc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={CoCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Infrastructure Committee\\\\\\\\u{2019}s Code of Conduct\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.coc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              coc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ProfileComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"mob.near/widget/Profile.ShortInlineBlock\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        accountId: author,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst LinkRFPComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedRfpDropdown`}\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedRfp,\\\\\\\\n          linkedRfp: linkedRfp,\\\\\\\\n          disabled: disabledLinkRFP,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData, disabledLinkRFP]);\\\\\\\\n\\\\\\\\nconst LinkedProposalsComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">\\\\\\\\n        Link any relevant proposals (e.g. previous milestones).\\\\\\\\n      </div>\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposalsDropdown`}\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedProposals,\\\\\\\\n          linkedProposals: linkedProposals,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ReceiverAccountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.AccountInput`}\\\\\\\\n      props={{\\\\\\\\n        value: receiverAccount,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Enter Address\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: setReceiverAccount,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst AmountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: requestedSponsorshipAmount,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          setRequestedSponsorshipAmount(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\",\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"$\\\\\\\\\\\\\\\",\\\\\\\\n          inputmode: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\",\\\\\\\\n          pattern: \\\\\\\\\\\\\\\"[0-9]*\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst CurrencyComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n      props={{\\\\\\\\n        options: tokensOptions,\\\\\\\\n        selectedValue: requestedSponsorshipToken,\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setRequestedSponsorshipToken(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-0 px-sm-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    <Heading className=\\\\\\\\\\\\\\\"px-2 px-sm-0\\\\\\\\\\\\\\\">\\\\\\\\n      {isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} Proposal\\\\\\\\n    </Heading>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.ViewProposalModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: showProposalViewModal,\\\\\\\\n        isEdit: isEditPage,\\\\\\\\n        proposalId: proposalId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmReviewModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          cleanDraft();\\\\\\\\n          onSubmit({ isDraft: false });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onSubmit({ isCancel: true });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 px-2 p-lg-0 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4 d-flex flex-wrap gap-6 w-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-2 w-100 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n                props={{\\\\\\\\n                  accountId: author,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Link RFP (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    \\\\\\\\\\\\\\\"Link this proposal if it is a response to a specific RFP. You can only link to active RFPs in the \\\\\\\\u{201c}Accepting Submission\\\\\\\\u{201d} stage. You can only link to one RFP.\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {LinkRFPComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Select the relevant categories that best align with your\\\\\\\\n                    contribution to the NEAR developer community. Need guidance?\\\\\\\\n                    See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href={FundingDocs}\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Funding Docs\\\\\\\\n                    </a>\\\\\\\\n                    .\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {CategoryDropdown}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Highlight the essence of your proposal in a few words. This will appear on your proposal\\\\\\\\u{2019}s detail page and the main proposal feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {TitleComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Explain your proposal briefly. This is your chance to make a good first impression on the community. Include what needs or goals your work will address, your solution, and the benefit for the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SummaryComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Expand on your summary with any relevant details like your\\\\\\\\n                    contribution timeline, key milestones, team background, and\\\\\\\\n                    a clear breakdown of how the funds will be used. Proposals\\\\\\\\n                    should be simple and clear (e.g. 1 month). For more complex\\\\\\\\n                    projects, treat each milestone as a separate proposal.\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {DescriptionComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\">\\\\\\\\n                {ConsentComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <div>\\\\\\\\n                  {isEditPage && (\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                          </div>\\\\\\\\n                        ),\\\\\\\\n                        onClick: () => setCancelModal(true),\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n                <div\\\\\\\\n                  className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\"\\\\\\\\n                  style={{\\\\\\\\n                    height: isDraftBtnOpen ? \\\\\\\\\\\\\\\"25vh\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"auto\\\\\\\\\\\\\\\",\\\\\\\\n                    alignItems: isDraftBtnOpen ? \\\\\\\\\\\\\\\"flex-start\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                >\\\\\\\\n                  <Link\\\\\\\\n                    to={\\\\\\\\n                      isEditPage\\\\\\\\n                        ? href({\\\\\\\\n                            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                              id: parseInt(id),\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                        : href({\\\\\\\\n                            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                    }\\\\\\\\n                  >\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                        onClick: cleanDraft,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </Link>\\\\\\\\n                  <SubmitBtn />\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-1 w-100 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <CollapsibleContainer noPaddingTop={true} title=\\\\\\\\\\\\\\\"Author Details\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                {ProfileComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n            </div>\\\\\\\\n          </CollapsibleContainer>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Link Proposals (Optional)\\\\\\\\\\\\\\\">\\\\\\\\n              {LinkedProposalsComponent}\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Funding Details\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Recipient NEAR Wallet Address\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Enter the address that will receive the funds. We\\\\\\\\u{2019}ll need this to send a test transaction once your proposal is approved.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {ReceiverAccountComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading={\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Recipient Verification Status\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"custom-tooltip\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-info-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        <span class=\\\\\\\\\\\\\\\"tooltiptext\\\\\\\\\\\\\\\">\\\\\\\\n                          To get approved and receive payments on our platform,\\\\\\\\n                          you must complete KYC/KYB verification using Fractal,\\\\\\\\n                          a trusted identity verification solution. This helps\\\\\\\\n                          others trust transactions with your account. Click\\\\\\\\n                          \\\\\\\\\\\\\\\"Get Verified\\\\\\\\\\\\\\\" to start. <br />\\\\\\\\n                          <br />\\\\\\\\n                          Once verified, your profile will display a badge,\\\\\\\\n                          which is valid for 365 days from the date of your\\\\\\\\n                          verification. You must renew your verification upon\\\\\\\\n                          expiration OR if any of your personal information\\\\\\\\n                          changes.\\\\\\\\n                        </span>\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  }\\\\\\\\n                  description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"border border-1 p-3 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.VerificationStatus`}\\\\\\\\n                      props={{\\\\\\\\n                        receiverAccount: receiverAccount,\\\\\\\\n                        showGetVerifiedBtn: true,\\\\\\\\n                        imageSize: 30,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Total Amount (USD)\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    <>\\\\\\\\n                      Enter the exact amount you are seeking. See\\\\\\\\n                      <a\\\\\\\\n                        href={FundingDocs}\\\\\\\\n                        className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        Funding Documentation\\\\\\\\n                      </a>\\\\\\\\n                      for guidelines.\\\\\\\\n                    </>\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {AmountComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Currency\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Select your preferred currency for receiving funds. Note: The exchange rate for NEAR tokens will be the closing rate at the day of the invoice.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {CurrencyComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.core.lib.contract\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nfunction ensureOtherIsLast(arr) {\\\\\\\\n  const otherIndex = arr.findIndex((item) => item.value === \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  if (otherIndex !== -1) {\\\\\\\\n    const [otherItem] = arr.splice(otherIndex, 1);\\\\\\\\n    arr.push(otherItem);\\\\\\\\n  }\\\\\\\\n  return arr;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getGlobalLabels() {\\\\\\\\n  let labels = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_global_labels\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n  if (labels !== null) {\\\\\\\\n    labels = ensureOtherIsLast(labels);\\\\\\\\n  }\\\\\\\\n  return labels ?? null;\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn {\\\\\\\\n  getGlobalLabels,\\\\\\\\n};\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.ViewRfpModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst isEdit = props.isEdit;\\\\\\\\nconst rfpId = props.rfpId;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.9);\\\\\\\\n  opacity: 0.9;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 30%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">\\\\\\\\n            Your RFP has been successfully {!isEdit ? \\\\\\\\\\\\\\\"published\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"edited\\\\\\\\\\\\\\\"}.\\\\\\\\n          </h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-center mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={linkHref({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\", id: rfpId },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-blue\\\\\\\\\\\\\\\" },\\\\\\\\n                label: \\\\\\\\\\\\\\\"View RFP\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: () => {},\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.WarningModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst onConfirmClick = props.onConfirmClick;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.5);\\\\\\\\n  opacity: 0.4;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Warning: No approved proposal found!</h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n        <ModalContent>\\\\\\\\n          You haven\\\\\\\\\\\\'t approved any proposals linked to the RFP. Please approve a\\\\\\\\n          proposal to proceed to the proposal selection phase.\\\\\\\\n        </ModalContent>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-outline-secondary\\\\\\\\\\\\\\\" },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Dismiss\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onConfirmClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.SimpleMDE\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * iframe embedding a SimpleMDE component\\\\\\\\n * https://github.com/sparksuite/simplemde-markdown-editor\\\\\\\\n */\\\\\\\\n\\\\\\\\nconst data = props.data;\\\\\\\\nconst onChange = props.onChange ?? (() => {});\\\\\\\\nconst onChangeKeyup = props.onChangeKeyup ?? (() => {}); // in case where we want immediate action\\\\\\\\nconst height = props.height ?? \\\\\\\\\\\\\\\"390\\\\\\\\\\\\\\\";\\\\\\\\nconst className = props.className ?? \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\";\\\\\\\\nconst embeddCSS = props.embeddCSS;\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  iframeHeight: height,\\\\\\\\n  message: props.data,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst profilesData = Social.get(\\\\\\\\\\\\\\\"*/profile/name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\nconst followingData = Social.get(\\\\\\\\n  `${context.accountId}/graph/follow/**`,\\\\\\\\n  \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\n// SIMPLEMDE CONFIG //\\\\\\\\nconst fontFamily = props.fontFamily ?? \\\\\\\\\\\\\\\"sans-serif\\\\\\\\\\\\\\\";\\\\\\\\nconst alignToolItems = props.alignToolItems ?? \\\\\\\\\\\\\\\"right\\\\\\\\\\\\\\\";\\\\\\\\nconst placeholder = props.placeholder ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst showAccountAutoComplete = props.showAutoComplete ?? false;\\\\\\\\nconst showProposalIdAutoComplete = props.showProposalIdAutoComplete ?? false;\\\\\\\\nconst showRfpIdAutoComplete = props.showRfpIdAutoComplete ?? false;\\\\\\\\nconst autoFocus = props.autoFocus ?? false;\\\\\\\\n\\\\\\\\nconst proposalQueryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst proposalQuery = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${proposalQueryName}_bool_exp = {}) {\\\\\\\\n${proposalQueryName}(\\\\\\\\n  offset: $offset\\\\\\\\n  limit: $limit\\\\\\\\n  order_by: {proposal_id: desc}\\\\\\\\n  where: $where\\\\\\\\n) {\\\\\\\\n  name\\\\\\\\n  proposal_id\\\\\\\\n}\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst rfpQueryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst rfpQuery = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${rfpQueryName}_bool_exp = {}) {\\\\\\\\n${rfpQueryName}(\\\\\\\\n  offset: $offset\\\\\\\\n  limit: $limit\\\\\\\\n  order_by: {proposal_id: desc}\\\\\\\\n  where: $where\\\\\\\\n) {\\\\\\\\n  rfp_id\\\\\\\\n}\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst code = `\\\\\\\\n<!doctype html>\\\\\\\\n<html>\\\\\\\\n  <head>\\\\\\\\n  <meta charset=\\\\\\\\\\\\\\\"utf-8\\\\\\\\\\\\\\\">\\\\\\\\n  <meta name=\\\\\\\\\\\\\\\"viewport\\\\\\\\\\\\\\\" content=\\\\\\\\\\\\\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\\\\\\\\\\\\\">\\\\\\\\n  <style>\\\\\\\\n  body {  \\\\\\\\n      margin: auto;\\\\\\\\n      font-family: ${fontFamily};\\\\\\\\n      overflow: visible;\\\\\\\\n      font-size:14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    body {\\\\\\\\n      font-size: 12px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item:hover,\\\\\\\\n  .dropdown-item:focus {\\\\\\\\n    background-color:rgb(0, 236, 151) !important;\\\\\\\\n    color:white !important;\\\\\\\\n    outline: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n      text-align: ${alignToolItems};\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n  .CodeMirror {\\\\\\\\n    min-height:200px !important; // for autocomplete to be visble \\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .CodeMirror-scroll {\\\\\\\\n    min-height:200px !important; // for autocomplete to be visble \\\\\\\\n  }\\\\\\\\n\\\\\\\\n  ${embeddCSS}\\\\\\\\n\\\\\\\\n  </style>\\\\\\\\n  <link rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css\\\\\\\\\\\\\\\">\\\\\\\\n  <link rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/highlight.js/latest/styles/github.min.css\\\\\\\\\\\\\\\">\\\\\\\\n  <link href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\\\\\\\\\\\\\\\" rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\">\\\\\\\\n</head>\\\\\\\\n<body>\\\\\\\\n<div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n  <button style=\\\\\\\\\\\\\\\"display: none\\\\\\\\\\\\\\\" type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\" data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n    Dropdown button\\\\\\\\n  </button>\\\\\\\\n\\\\\\\\n  <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"mentiondropdown\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\"position: absolute;\\\\\\\\\\\\\\\">\\\\\\\\n</div>\\\\\\\\n<div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n  <button style=\\\\\\\\\\\\\\\"display: none\\\\\\\\\\\\\\\" type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\" data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n    Dropdown button\\\\\\\\n  </button>\\\\\\\\n  <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"referencedropdown\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\"position: absolute;\\\\\\\\\\\\\\\">\\\\\\\\n</div>\\\\\\\\n</ul>\\\\\\\\n\\\\\\\\n<textarea></textarea>\\\\\\\\n\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script>\\\\\\\\nlet codeMirrorInstance;\\\\\\\\nlet isEditorInitialized = false;\\\\\\\\nlet followingData = {};\\\\\\\\nlet profilesData = {};\\\\\\\\nlet proposalQuery = \\\\\\\\\\\\'\\\\\\\\\\\\';\\\\\\\\nlet proposalQueryName = \\\\\\\\\\\\'\\\\\\\\\\\\';\\\\\\\\nlet showAccountAutoComplete = ${showAccountAutoComplete};\\\\\\\\nlet showProposalIdAutoComplete = ${showProposalIdAutoComplete};\\\\\\\\nlet showRfpIdAutoComplete = ${showRfpIdAutoComplete}\\\\\\\\n\\\\\\\\nfunction getSuggestedAccounts(term) {\\\\\\\\n  let results = [];\\\\\\\\n\\\\\\\\n  term = (term || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").toLowerCase();\\\\\\\\n  const limit = 5;\\\\\\\\n\\\\\\\\n  const profiles = Object.entries(profilesData);\\\\\\\\n\\\\\\\\n  for (let i = 0; i < profiles.length; i++) {\\\\\\\\n    let score = 0;\\\\\\\\n    const accountId = profiles[i][0];\\\\\\\\n    const accountIdSearch = profiles[i][0].replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").toLowerCase();\\\\\\\\n    const nameSearch = (profiles[i][1]?.profile?.name || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n      .replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n      .toLowerCase();\\\\\\\\n    const accountIdSearchIndex = accountIdSearch.indexOf(term);\\\\\\\\n    const nameSearchIndex = nameSearch.indexOf(term);\\\\\\\\n\\\\\\\\n    if (accountIdSearchIndex > -1 || nameSearchIndex > -1) {\\\\\\\\n      score += 10;\\\\\\\\n\\\\\\\\n      if (accountIdSearchIndex === 0) {\\\\\\\\n        score += 10;\\\\\\\\n      }\\\\\\\\n      if (nameSearchIndex === 0) {\\\\\\\\n        score += 10;\\\\\\\\n      }\\\\\\\\n      if (followingData[accountId] === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n        score += 30;\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      results.push({\\\\\\\\n        accountId,\\\\\\\\n        score,\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  results.sort((a, b) => b.score - a.score);\\\\\\\\n  results = results.slice(0, limit);\\\\\\\\n\\\\\\\\n  return results;\\\\\\\\n}\\\\\\\\n\\\\\\\\nasync function asyncFetch(endpoint, { method, headers, body }) {\\\\\\\\n  try {\\\\\\\\n    const response = await fetch(endpoint, {\\\\\\\\n      method: method,\\\\\\\\n      headers: headers,\\\\\\\\n      body: body\\\\\\\\n    });\\\\\\\\n\\\\\\\\n    if (!response.ok) {\\\\\\\\n      throw new Error(\\\\\\\\\\\\\\\"HTTP error!\\\\\\\\\\\\\\\");\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return await response.json();\\\\\\\\n  } catch (error) {\\\\\\\\n    console.error(\\\\\\\\\\\\'Error fetching data:\\\\\\\\\\\\', error);\\\\\\\\n    throw error;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractNumbers(str) {\\\\\\\\n  let numbers = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  for (let i = 0; i < str.length; i++) {\\\\\\\\n    if (!isNaN(str[i])) {\\\\\\\\n      numbers += str[i];\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return numbers;\\\\\\\\n};\\\\\\\\n\\\\\\\\nasync function getSuggestedProposals(id) {\\\\\\\\n  let results = [];\\\\\\\\n  const variables = {\\\\\\\\n    limit: 5,\\\\\\\\n    offset: 0,\\\\\\\\n    where: {},\\\\\\\\n  };\\\\\\\\n  if (id) {\\\\\\\\n    const proposalId = extractNumbers(id);\\\\\\\\n    if (proposalId) {\\\\\\\\n      variables[\\\\\\\\\\\\\\\"where\\\\\\\\\\\\\\\"] = { proposal_id: { _eq: id } };\\\\\\\\n    } else {\\\\\\\\n      variables[\\\\\\\\\\\\\\\"where\\\\\\\\\\\\\\\"] = { name: { _ilike: \\\\\\\\\\\\\\\"%\\\\\\\\\\\\\\\" + id + \\\\\\\\\\\\\\\"%\\\\\\\\\\\\\\\" } };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  await asyncFetch(\\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co/v1/graphql\\\\\\\\\\\\\\\", {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"polyprogrammist_near\\\\\\\\\\\\\\\" },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: proposalQuery,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\",\\\\\\\\n    }),\\\\\\\\n  })\\\\\\\\n    .then((res) => {\\\\\\\\n      const proposals =\\\\\\\\n        res?.data?.[\\\\\\\\n          proposalQueryName\\\\\\\\n        ];\\\\\\\\n      results = proposals;\\\\\\\\n    })\\\\\\\\n    .catch((error) => {\\\\\\\\n      console.error(error);\\\\\\\\n    });\\\\\\\\n  return results;\\\\\\\\n};\\\\\\\\n\\\\\\\\n// Initializes SimpleMDE element and attaches to text-area\\\\\\\\nconst simplemde = new SimpleMDE({\\\\\\\\n  forceSync: true,\\\\\\\\n  toolbar: [\\\\\\\\n    \\\\\\\\\\\\\\\"heading\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"bold\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"italic\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"|\\\\\\\\\\\\\\\", // adding | creates a divider in the toolbar\\\\\\\\n    \\\\\\\\\\\\\\\"quote\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"link\\\\\\\\\\\\\\\",\\\\\\\\n  ],\\\\\\\\n  placeholder: \\\\\\\\\\\\\\\\`${placeholder}\\\\\\\\\\\\\\\\`,\\\\\\\\n  initialValue: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  insertTexts: {\\\\\\\\n    link: [\\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"]()\\\\\\\\\\\\\\\"],\\\\\\\\n  },\\\\\\\\n  spellChecker: false,\\\\\\\\n  renderingConfig: {\\\\\\\\n\\\\\\\\t\\\\\\\\tsingleLineBreaks: false,\\\\\\\\n\\\\\\\\t\\\\\\\\tcodeSyntaxHighlighting: true,\\\\\\\\n\\\\\\\\t},\\\\\\\\n  autofocus:${autoFocus}\\\\\\\\n});\\\\\\\\n\\\\\\\\ncodeMirrorInstance = simplemde.codemirror;\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Sends message to Widget to update content\\\\\\\\n */\\\\\\\\nconst updateContent = () => {\\\\\\\\n  const content = simplemde.value();\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\", content }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n};\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Sends message to Widget to update iframe height\\\\\\\\n */\\\\\\\\nconst updateIframeHeight = () => {\\\\\\\\n  const iframeHeight = document.body.scrollHeight;\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"resize\\\\\\\\\\\\\\\", height: iframeHeight }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n};\\\\\\\\n\\\\\\\\n// On Change\\\\\\\\nsimplemde.codemirror.on(\\\\\\\\\\\\'blur\\\\\\\\\\\\', () => {\\\\\\\\n  updateContent();\\\\\\\\n});\\\\\\\\n\\\\\\\\nsimplemde.codemirror.on(\\\\\\\\\\\\'keyup\\\\\\\\\\\\', () => {\\\\\\\\n  updateIframeHeight();\\\\\\\\n  const content = simplemde.value();\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"updateOnKeyup\\\\\\\\\\\\\\\", content }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n});\\\\\\\\n\\\\\\\\n\\\\\\\\nif (showAccountAutoComplete) {\\\\\\\\n  let mentionToken;\\\\\\\\n  let mentionCursorStart;\\\\\\\\n  const dropdown = document.getElementById(\\\\\\\\\\\\\\\"mentiondropdown\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keydown\\\\\\\\\\\\\\\", () => {\\\\\\\\n    if (mentionToken && event.key === \\\\\\\\\\\\'ArrowDown\\\\\\\\\\\\') {\\\\\\\\n      dropdown.querySelector(\\\\\\\\\\\\'button\\\\\\\\\\\\').focus();\\\\\\\\n      event.preventDefault();\\\\\\\\n      return false;\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keyup\\\\\\\\\\\\\\\", (cm, event) => {\\\\\\\\n    const cursor = cm.getCursor();\\\\\\\\n    const token = cm.getTokenAt(cursor);\\\\\\\\n\\\\\\\\n    const createMentionDropDownOptions = () => {\\\\\\\\n      const mentionInput = cm.getRange(mentionCursorStart, cursor);\\\\\\\\n      dropdown.innerHTML = getSuggestedAccounts(mentionInput)\\\\\\\\n      .map(\\\\\\\\n        (item) =>\\\\\\\\n          \\\\\\\\\\\\'<li><button class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\\\\\' + item?.accountId + \\\\\\\\\\\\'</button></li>\\\\\\\\\\\\'\\\\\\\\n      )\\\\\\\\n      .join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n      dropdown.querySelectorAll(\\\\\\\\\\\\\\\"li\\\\\\\\\\\\\\\").forEach((li) => {\\\\\\\\n        li.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", () => {\\\\\\\\n          const selectedText = li.textContent.trim();\\\\\\\\n          simplemde.codemirror.replaceRange(selectedText, mentionCursorStart, cursor);\\\\\\\\n          mentionToken = null;\\\\\\\\n          dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n          cm.focus();\\\\\\\\n        });\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    // show dropwdown only when @ is at first place or when there is a space before @\\\\\\\\n      if (!mentionToken && (token.string === \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\" && cursor.ch === 1 || token.string === \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\" && cm.getTokenAt({line:cursor.line, ch: cursor.ch - 1}).string == \\\\\\\\\\\\' \\\\\\\\\\\\')) {\\\\\\\\n        mentionToken = token;\\\\\\\\n        mentionCursorStart = cursor;\\\\\\\\n        // Calculate cursor position relative to the iframe\\\\\\\\\\\\'s viewport\\\\\\\\n        const rect = cm.charCoords(cursor);\\\\\\\\n        const x = rect.left;\\\\\\\\n        const y = rect.bottom;\\\\\\\\n\\\\\\\\n        // Create dropdown with options\\\\\\\\n        dropdown.style.top = y + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n        dropdown.style.left = x + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n        createMentionDropDownOptions();\\\\\\\\n\\\\\\\\n        dropdown.classList.add(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        // Close dropdown on outside click\\\\\\\\n        document.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", function(event) {\\\\\\\\n            if (!dropdown.contains(event.target)) {\\\\\\\\n                mentionToken = null;\\\\\\\\n                dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            }\\\\\\\\n        });\\\\\\\\n    } else if (mentionToken && token.string.match(/[^@a-z0-9.]/)) {\\\\\\\\n        mentionToken = null;\\\\\\\\n        dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n    } else if (mentionToken) {\\\\\\\\n        createMentionDropDownOptions();\\\\\\\\n    }\\\\\\\\n});\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (showProposalIdAutoComplete) {\\\\\\\\n  let proposalId;\\\\\\\\n  let referenceCursorStart;\\\\\\\\n  const dropdown = document.getElementById(\\\\\\\\\\\\\\\"referencedropdown\\\\\\\\\\\\\\\");\\\\\\\\n  const loader = document.createElement(\\\\\\\\\\\\'div\\\\\\\\\\\\');\\\\\\\\n  loader.className = \\\\\\\\\\\\'loader\\\\\\\\\\\\';\\\\\\\\n  loader.textContent = \\\\\\\\\\\\'Loading...\\\\\\\\\\\\';\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keydown\\\\\\\\\\\\\\\", () => {\\\\\\\\n    if (proposalId && event.key === \\\\\\\\\\\\'ArrowDown\\\\\\\\\\\\') {\\\\\\\\n      dropdown.querySelector(\\\\\\\\\\\\'button\\\\\\\\\\\\').focus();\\\\\\\\n      event.preventDefault();\\\\\\\\n      return false;\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keyup\\\\\\\\\\\\\\\", (cm, event) => {\\\\\\\\n    const cursor = cm.getCursor();\\\\\\\\n    const token = cm.getTokenAt(cursor);\\\\\\\\n\\\\\\\\n    const createReferenceDropDownOptions = async () => {\\\\\\\\n      try {\\\\\\\\n        const proposalIdInput = cm.getRange(referenceCursorStart, cursor);\\\\\\\\n        dropdown.innerHTML = \\\\\\\\\\\\'\\\\\\\\\\\\'; // Clear previous content\\\\\\\\n        dropdown.appendChild(loader); // Show loader\\\\\\\\n\\\\\\\\n        const suggestedProposals = await getSuggestedProposals(proposalIdInput);\\\\\\\\n        dropdown.innerHTML = suggestedProposals\\\\\\\\n        .map(\\\\\\\\n          (item) =>\\\\\\\\n            \\\\\\\\\\\\'<li><button class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\\\\\' + \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" + item?.proposal_id + \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" + item.name + \\\\\\\\\\\\'</button></li>\\\\\\\\\\\\'\\\\\\\\n        )\\\\\\\\n        .join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        dropdown.querySelectorAll(\\\\\\\\\\\\\\\"li\\\\\\\\\\\\\\\").forEach((li) => {\\\\\\\\n          li.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", () => {\\\\\\\\n            const selectedText = li.textContent.trim();\\\\\\\\n            const startIndex = selectedText.indexOf(\\\\\\\\\\\\'#\\\\\\\\\\\\') + 1; \\\\\\\\n            const endIndex = selectedText.indexOf(\\\\\\\\\\\\' \\\\\\\\\\\\', startIndex);\\\\\\\\n            const id = endIndex !== -1 ? selectedText.substring(startIndex, endIndex) : selectedText.substring(startIndex);\\\\\\\\n            const link = \\\\\\\\\\\\\\\"https://near.social/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=proposal&id=\\\\\\\\\\\\\\\" + id;\\\\\\\\n            const adjustedStart = {\\\\\\\\n              line: referenceCursorStart.line,\\\\\\\\n              ch: referenceCursorStart.ch - 1\\\\\\\\n            };\\\\\\\\n            simplemde.codemirror.replaceRange(\\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\" + selectedText + \\\\\\\\\\\\\\\"]\\\\\\\\\\\\\\\" + \\\\\\\\\\\\\\\"(\\\\\\\\\\\\\\\" + link + \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", adjustedStart, cursor);\\\\\\\\n            proposalId = null;\\\\\\\\n            dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            cm.focus();\\\\\\\\n          });\\\\\\\\n        });\\\\\\\\n      } catch (error) {\\\\\\\\n        console.error(\\\\\\\\\\\\'Error fetching data:\\\\\\\\\\\\', error);\\\\\\\\n        // Handle error: Remove loader\\\\\\\\n        dropdown.innerHTML = \\\\\\\\\\\\'\\\\\\\\\\\\'; // Clear previous content\\\\\\\\n      } finally {\\\\\\\\n        // Remove loader\\\\\\\\n        dropdown.removeChild(loader);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // show dropwdown only when there is space before # or it\\\\\\\\\\\\'s first char\\\\\\\\n      if (!proposalId && (token.string === \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" && cursor.ch === 1 || token.string === \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" && cm.getTokenAt({line:cursor.line, ch: cursor.ch - 1}).string == \\\\\\\\\\\\' \\\\\\\\\\\\')) {\\\\\\\\n        proposalId = token;\\\\\\\\n        referenceCursorStart = cursor;\\\\\\\\n        // Calculate cursor position relative to the iframe\\\\\\\\\\\\'s viewport\\\\\\\\n        const rect = cm.charCoords(cursor);\\\\\\\\n        const x = rect.left;\\\\\\\\n        const y = rect.bottom;\\\\\\\\n\\\\\\\\n        // Create dropdown with options\\\\\\\\n        dropdown.style.top = y + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n        dropdown.style.left = x + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n        createReferenceDropDownOptions();\\\\\\\\n\\\\\\\\n        dropdown.classList.add(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        // Close dropdown on outside click\\\\\\\\n        document.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", function(event) {\\\\\\\\n            if (!dropdown.contains(event.target)) {\\\\\\\\n              proposalId = null;\\\\\\\\n                dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            }\\\\\\\\n        });\\\\\\\\n    } else if (proposalId && (token.string.match(/[^#a-z0-9.]/) || !token.string)) {\\\\\\\\n      proposalId = null;\\\\\\\\n      dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n    } else if (proposalId) {\\\\\\\\n      createReferenceDropDownOptions();\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\n}\\\\\\\\n\\\\\\\\nwindow.addEventListener(\\\\\\\\\\\\\\\"message\\\\\\\\\\\\\\\", (event) => {\\\\\\\\n  if (!isEditorInitialized && event.data !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n    simplemde.value(event.data.content);\\\\\\\\n    isEditorInitialized = true;\\\\\\\\n  } else {\\\\\\\\n    if (event.data.handler === \\\\\\\\\\\\'refreshEditor\\\\\\\\\\\\') {\\\\\\\\n      codeMirrorInstance.getDoc().setValue(event.data.content);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  if (event.data.followingData) {\\\\\\\\n    followingData = event.data.followingData;\\\\\\\\n  }\\\\\\\\n  if (event.data.profilesData) {\\\\\\\\n    profilesData = JSON.parse(event.data.profilesData);\\\\\\\\n  }\\\\\\\\n  if (event.data.proposalQuery) {\\\\\\\\n    proposalQuery = event.data.proposalQuery;\\\\\\\\n  }\\\\\\\\n  if (event.data.proposalQueryName) {\\\\\\\\n    proposalQueryName = event.data.proposalQueryName;\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n});\\\\\\\\n</script>\\\\\\\\n</body>\\\\\\\\n</html>\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <iframe\\\\\\\\n    className={className}\\\\\\\\n    style={{\\\\\\\\n      height: `${state.iframeHeight}px`,\\\\\\\\n      maxHeight: \\\\\\\\\\\\\\\"410px\\\\\\\\\\\\\\\",\\\\\\\\n      minHeight: \\\\\\\\\\\\\\\"250px\\\\\\\\\\\\\\\",\\\\\\\\n    }}\\\\\\\\n    srcDoc={code}\\\\\\\\n    message={{\\\\\\\\n      content: props.data?.content ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n      followingData,\\\\\\\\n      profilesData: JSON.stringify(profilesData),\\\\\\\\n      proposalQuery: proposalQuery,\\\\\\\\n      proposalQueryName: proposalQueryName,\\\\\\\\n      handler: props.data.handler,\\\\\\\\n    }}\\\\\\\\n    onMessage={(e) => {\\\\\\\\n      switch (e.handler) {\\\\\\\\n        case \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            onChange(e.content);\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n        case \\\\\\\\\\\\\\\"resize\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            const offset = 10;\\\\\\\\n            State.update({ iframeHeight: e.height + offset });\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n        case \\\\\\\\\\\\\\\"updateOnKeyup\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            onChangeKeyup(e.content);\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n      }\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Proposal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst accountId = context.accountId;\\\\\\\\n/*\\\\\\\\n  ---props---\\\\\\\\n  props.id: number;\\\\\\\\n  props.timestamp: number; optional\\\\\\\\n  accountId: string\\\\\\\\n  blockHeight:number\\\\\\\\n  */\\\\\\\\n\\\\\\\\nconst DecisionStage = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.REJECTED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .description-box {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .draft-info-container {\\\\\\\\n    background-color: #ecf8fb;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .review-info-container {\\\\\\\\n    background-color: #fef6ee;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-3 {\\\\\\\\n    flex: 3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 20px;\\\\\\\\n    height: 20px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 180px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 135px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 180px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 75px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line-sm {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 70px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:disabled ~ .form-check-label,\\\\\\\\n  .form-check-input[disabled] ~ .form-check-label {\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input {\\\\\\\\n    border-color: black !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-btn {\\\\\\\\n    background-color: #687076;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #03ba16 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-vertical {\\\\\\\\n    border-top: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n    border-bottom: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  button.px-0 {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  red-icon i {\\\\\\\\n    color: red;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  input[type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"] {\\\\\\\\n    min-width: 13px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ProposalContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Text = styled.p`\\\\\\\\n  display: block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 20px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  white-space: nowrap;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 12px;\\\\\\\\n  margin: -6px -6px 6px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinkProfile = ({ account, children }) => {\\\\\\\\n  return (\\\\\\\\n    <Link href={`/near/widget/ProfilePage?accountId=${account}`}>\\\\\\\\n      {children}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst stepsArray = [1, 2, 3, 4, 5];\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\nconst proposal = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    proposal_id: parseInt(id),\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst [snapshotHistory, setSnapshotHistory] = useState([]);\\\\\\\\n\\\\\\\\nconst queryName = PROPOSAL_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n  ${queryName}(\\\\\\\\n    offset: $offset\\\\\\\\n    limit: $limit\\\\\\\\n    order_by: {ts: desc}\\\\\\\\n    where: $where\\\\\\\\n  ) {\\\\\\\\n    editor_id\\\\\\\\n    name\\\\\\\\n    summary\\\\\\\\n    description\\\\\\\\n    ts\\\\\\\\n    proposal_id\\\\\\\\n    timeline\\\\\\\\n    labels\\\\\\\\n    linked_proposals\\\\\\\\n    linked_rfp\\\\\\\\n    requested_sponsorship_usd_amount\\\\\\\\n    requested_sponsorship_paid_in_currency\\\\\\\\n    receiver_account\\\\\\\\n    requested_sponsor\\\\\\\\n    supervisor\\\\\\\\n  }\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst fetchSnapshotHistory = () => {\\\\\\\\n  const variables = {\\\\\\\\n    where: { proposal_id: { _eq: id } },\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const data = result.body.data?.[queryName];\\\\\\\\n        const history = data.map((item) => {\\\\\\\\n          const proposalData = {\\\\\\\\n            ...item,\\\\\\\\n            timestamp: item.ts,\\\\\\\\n            timeline: parseJSON(item.timeline),\\\\\\\\n          };\\\\\\\\n          delete proposalData.ts;\\\\\\\\n          return proposalData;\\\\\\\\n        });\\\\\\\\n        setSnapshotHistory(history);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchSnapshotHistory();\\\\\\\\n}, [id]);\\\\\\\\n\\\\\\\\nif (!proposal) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nif (timestamp && proposal) {\\\\\\\\n  proposal.snapshot =\\\\\\\\n    snapshotHistory.find((item) => item.timestamp === timestamp) ??\\\\\\\\n    proposal.snapshot;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { snapshot } = proposal;\\\\\\\\nsnapshot.timeline = parseJSON(snapshot.timeline);\\\\\\\\n\\\\\\\\nconst authorId = proposal.author_id;\\\\\\\\nconst blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\nconst item = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n  path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n  blockHeight,\\\\\\\\n};\\\\\\\\nconst proposalURL = `https://near.org/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=proposal&id=${proposal.id}&timestamp=${snapshot.timestamp}`;\\\\\\\\n\\\\\\\\nconst SidePanelItem = ({ title, children, hideBorder, ishidden }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ gap: \\\\\\\\\\\\\\\"8px\\\\\\\\\\\\\\\" }}\\\\\\\\n      className={\\\\\\\\n        ishidden\\\\\\\\n          ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"d-flex flex-column pb-3 \\\\\\\\\\\\\\\" + (!hideBorder && \\\\\\\\\\\\\\\" border-bottom\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{title} </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst proposalStatusOptions = [\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Draft\\\\\\\\\\\\\\\",\\\\\\\\n    value: { status: PROPOSAL_TIMELINE_STATUS.DRAFT },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Review\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.REVIEW,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved-Conditionally\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Rejected\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.REJECTED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.CANCELED,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Payment-processing\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n      kyc_verified: false,\\\\\\\\n      test_transaction_sent: false,\\\\\\\\n      request_for_trustees_created: false,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Funded\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n      trustees_released_payment: true,\\\\\\\\n      kyc_verified: true,\\\\\\\\n      test_transaction_sent: true,\\\\\\\\n      request_for_trustees_created: true,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst CheckBox = ({ value, isChecked, label, disabled, onClick }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"checkbox\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={!isModerator || !showTimelineSetting || disabled}\\\\\\\\n        onChange={(e) => onClick(e.target.checked)}\\\\\\\\n      />\\\\\\\\n      <label style={{ width: \\\\\\\\\\\\\\\"90%\\\\\\\\\\\\\\\" }} class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">\\\\\\\\n        {label}\\\\\\\\n      </label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst RadioButton = ({ value, isChecked, label }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={true}\\\\\\\\n      />\\\\\\\\n      <label class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isAllowedToEditProposal = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    proposal_id: proposal.id,\\\\\\\\n    editor: accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst editProposal = ({ timeline }) => {\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    name: snapshot.name,\\\\\\\\n    description: snapshot.description,\\\\\\\\n    category: snapshot.category,\\\\\\\\n    summary: snapshot.summary,\\\\\\\\n    linked_proposals: snapshot.linked_proposals,\\\\\\\\n    requested_sponsorship_usd_amount: snapshot.requested_sponsorship_usd_amount,\\\\\\\\n    requested_sponsorship_paid_in_currency:\\\\\\\\n      snapshot.requested_sponsorship_paid_in_currency,\\\\\\\\n    receiver_account: snapshot.receiver_account,\\\\\\\\n    requested_sponsor: snapshot.requested_sponsor,\\\\\\\\n    timeline: timeline,\\\\\\\\n    linked_rfp: snapshot.linked_rfp,\\\\\\\\n    supervisor: supervisor ?? snapshot.supervisor,\\\\\\\\n  };\\\\\\\\n  const args = {\\\\\\\\n    labels: snapshot.linked_rfp ? [] : snapshot.labels,\\\\\\\\n    body: body,\\\\\\\\n    id: proposal.id,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst editProposalStatus = ({ timeline }) => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal_timeline\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: proposal.id,\\\\\\\\n        timeline: timeline,\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\nconst [showTimelineSetting, setShowTimelineSetting] = useState(false);\\\\\\\\nconst proposalStatus = useCallback(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.find(\\\\\\\\n      (i) => i.value.status === snapshot.timeline.status\\\\\\\\n    ),\\\\\\\\n  [snapshot]\\\\\\\\n);\\\\\\\\nconst [updatedProposalStatus, setUpdatedProposalStatus] = useState({});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  setUpdatedProposalStatus({\\\\\\\\n    ...proposalStatus(),\\\\\\\\n    value: { ...proposalStatus().value, ...snapshot.timeline },\\\\\\\\n  });\\\\\\\\n}, [proposal]);\\\\\\\\n\\\\\\\\nconst [paymentHashes, setPaymentHashes] = useState([\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"]);\\\\\\\\nconst [supervisor, setSupervisor] = useState(snapshot.supervisor);\\\\\\\\n\\\\\\\\nconst selectedStatusIndex = useMemo(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.findIndex((i) => {\\\\\\\\n      return updatedProposalStatus.value.status === i.value.status;\\\\\\\\n    }),\\\\\\\\n  [updatedProposalStatus]\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst TimelineItems = ({ title, children, value, values }) => {\\\\\\\\n  const indexOfCurrentItem = proposalStatusOptions.findIndex((i) =>\\\\\\\\n    Array.isArray(values)\\\\\\\\n      ? values.includes(i.value.status)\\\\\\\\n      : value === i.value.status\\\\\\\\n  );\\\\\\\\n  let color = \\\\\\\\\\\\\\\"transparent\\\\\\\\\\\\\\\";\\\\\\\\n  let statusIndex = selectedStatusIndex;\\\\\\\\n\\\\\\\\n  // index 2,3,4,5  is of decision\\\\\\\\n  if (selectedStatusIndex === 3 || selectedStatusIndex === 2) {\\\\\\\\n    statusIndex = 2;\\\\\\\\n  }\\\\\\\\n  if (statusIndex === indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FEF6EE\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  if (\\\\\\\\n    statusIndex > indexOfCurrentItem ||\\\\\\\\n    updatedProposalStatus.value.status === PROPOSAL_TIMELINE_STATUS.FUNDED\\\\\\\\n  ) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#EEFEF0\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // reject\\\\\\\\n  if (statusIndex === 4 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FF7F7F\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // cancelled\\\\\\\\n  if (statusIndex === 5 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"p-2 rounded-3\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        backgroundColor: color,\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 text-black\\\\\\\\\\\\\\\"> {title}</div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst link = href({\\\\\\\\n  widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n  params: {\\\\\\\\n    page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\",\\\\\\\\n    id: proposal.id,\\\\\\\\n    timestamp: timestamp,\\\\\\\\n  },\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst createdDate = snapshotHistory[0]?.timestamp ?? snapshot.timestamp;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmReviewModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[1].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[5].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex px-3 px-lg-0 justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center h3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>{snapshot.name}</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">#{proposal.id}</div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_NEAR}/widget/ShareButton`}\\\\\\\\n          props={{\\\\\\\\n            postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            url: proposalURL,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        {((isAllowedToEditProposal &&\\\\\\\\n          snapshot.timeline.status === PROPOSAL_TIMELINE_STATUS.DRAFT) ||\\\\\\\\n          isModerator) && (\\\\\\\\n          <Link to={link} style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap flex-md-nowrap px-3 px-lg-0 gap-2 align-items-center text-sm pb-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n        props={{\\\\\\\\n          timelineStatus: snapshot.timeline.status,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"w-100 d-flex flex-wrap flex-md-nowrap gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n          <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n        </div>\\\\\\\\n        <div>created on {readableDate(createdDate / 1000000)}</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 full-width-div px-3 px-lg-0\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4\\\\\\\\\\\\\\\">\\\\\\\\n        {snapshot.timeline.status === PROPOSAL_TIMELINE_STATUS.DRAFT &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"draft-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in draft mode and open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  The author can still refine the proposal and build consensus\\\\\\\\n                  before sharing it with sponsors. Click \\\\\\\\u{201c}Ready for review\\\\\\\\u{201d} when\\\\\\\\n                  you want to start the official review process. This will lock\\\\\\\\n                  the editing function, but comments are still open.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    label: \\\\\\\\\\\\\\\"Ready for review\\\\\\\\\\\\\\\",\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setReviewModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        {snapshot.timeline.status === PROPOSAL_TIMELINE_STATUS.REVIEW &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"review-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in review mode and still open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  You can\\\\\\\\u{2019}t edit the proposal, but comments are open. Only\\\\\\\\n                  moderators can make changes. Click \\\\\\\\u{201c}Cancel Proposal\\\\\\\\u{201d} to cancel\\\\\\\\n                  your proposal. This changes the status to Canceled, signaling\\\\\\\\n                  to sponsors that it\\\\\\\\u{2019}s no longer active or relevant.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    label: (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                      </div>\\\\\\\\n                    ),\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"btn-outline-danger btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setCancelModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"my-4\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-6\\\\\\\\\\\\\\\">\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"flex-3 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                  <Widget\\\\\\\\n                    src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n                    props={{\\\\\\\\n                      accountId: authorId,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n                <ProposalContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Header className=\\\\\\\\\\\\\\\"d-flex gap-1 align-items-center p-2 px-3 \\\\\\\\\\\\\\\">\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ maxWidth: \\\\\\\\\\\\\\\"60%\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n                    </div>\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                        props={{\\\\\\\\n                          blockHeight,\\\\\\\\n                          blockTimestamp: createdDate,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      {context.accountId && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                          <Widget\\\\\\\\n                            src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                            props={{\\\\\\\\n                              accountId: authorId,\\\\\\\\n                              blockHeight: blockHeight,\\\\\\\\n                            }}\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </Header>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 p-2 px-3 description-box\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      PROPOSAL CATEGORY\\\\\\\\n                    </div>\\\\\\\\n                    <div>\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                        props={{\\\\\\\\n                          selected: snapshot.labels,\\\\\\\\n                          disabled: true,\\\\\\\\n                          hideDropdown: true,\\\\\\\\n                          onChange: () => {},\\\\\\\\n                          availableOptions: rfpLabelOptions,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      SUMMARY\\\\\\\\n                    </div>\\\\\\\\n                    <div>{snapshot.summary}</div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n                      DESCRIPTION\\\\\\\\n                    </div>\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n                      props={{ text: snapshot.description }}\\\\\\\\n                    />\\\\\\\\n\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LikeButton`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          proposalId: proposal.id,\\\\\\\\n                          notifyAccountIds: [authorId],\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          showOverlay: false,\\\\\\\\n                          onClick: () => {},\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                        props={{\\\\\\\\n                          url: proposalURL,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                </ProposalContainer>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.CommentsAndLogs`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    id: proposal.id,\\\\\\\\n                    item: item,\\\\\\\\n                    snapshotHistory: snapshotHistory,\\\\\\\\n                    latestSnapshot: snapshot,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div\\\\\\\\n                style={{\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                className=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.ComposeComment`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    item: item,\\\\\\\\n                    notifyAccountIds: [authorId],\\\\\\\\n                    proposalId: proposal.id,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 flex-1 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/AccountProfile`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: authorId,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\\\\\\\\"Linked RFP\\\\\\\\\\\\\\\"}\\\\\\\\n                ishidden={!isNumber(snapshot.linked_rfp)}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedRfps`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedRfpIds: [snapshot.linked_rfp],\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"Linked Proposals \\\\\\\\\\\\\\\" + `(${snapshot.linked_proposals.length})`\\\\\\\\n                }\\\\\\\\n                ishidden={!snapshot.linked_proposals.length}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedProposalIds: snapshot.linked_proposals,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Funding Ask\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"h4 text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {snapshot.requested_sponsorship_usd_amount && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                      <div>\\\\\\\\n                        {parseInt(\\\\\\\\n                          snapshot.requested_sponsorship_usd_amount\\\\\\\\n                        ).toLocaleString()}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        USD\\\\\\\\n                      </div>\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                        Requested in{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        {snapshot.requested_sponsorship_paid_in_currency}\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Wallet Address\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/AccountProfile`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: snapshot.receiver_account,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Verification Status\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.VerificationStatus`}\\\\\\\\n                  props={{\\\\\\\\n                    receiverAccount: snapshot.receiver_account,\\\\\\\\n                    showGetVerifiedBtn:\\\\\\\\n                      accountId === snapshot.receiver_account ||\\\\\\\\n                      accountId === authorId,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title=\\\\\\\\\\\\\\\"Project Coordinator\\\\\\\\\\\\\\\"\\\\\\\\n                ishidden={!snapshot.supervisor}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/AccountProfile`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: snapshot.supervisor,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                hideBorder={true}\\\\\\\\n                title={\\\\\\\\n                  <div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Timeline\\\\\\\\n                      {isModerator && (\\\\\\\\n                        <div onClick={() => setShowTimelineSetting(true)}>\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                    {showTimelineSetting && (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"mt-2 d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <h6 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Proposal Status</h6>\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n                          props={{\\\\\\\\n                            options: proposalStatusOptions,\\\\\\\\n                            selectedValue: updatedProposalStatus,\\\\\\\\n                            onUpdate: (v) => {\\\\\\\\n                              setUpdatedProposalStatus({\\\\\\\\n                                ...v,\\\\\\\\n                                value: {\\\\\\\\n                                  ...v.value,\\\\\\\\n                                  ...updatedProposalStatus.value,\\\\\\\\n                                  status: v.value.status,\\\\\\\\n                                },\\\\\\\\n                              });\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-3 mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n                      {stepsArray.map((_, index) => {\\\\\\\\n                        const indexOfCurrentItem = index;\\\\\\\\n                        let color = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n                        let statusIndex = selectedStatusIndex;\\\\\\\\n                        // index 2,3,4 is of decision\\\\\\\\n                        if (\\\\\\\\n                          selectedStatusIndex === 3 ||\\\\\\\\n                          selectedStatusIndex === 2 ||\\\\\\\\n                          selectedStatusIndex === 4 ||\\\\\\\\n                          selectedStatusIndex === 5\\\\\\\\n                        ) {\\\\\\\\n                          statusIndex = 2;\\\\\\\\n                        }\\\\\\\\n                        if (selectedStatusIndex === 6) {\\\\\\\\n                          statusIndex = 3;\\\\\\\\n                        }\\\\\\\\n                        const current = statusIndex === indexOfCurrentItem;\\\\\\\\n                        const completed =\\\\\\\\n                          statusIndex > indexOfCurrentItem ||\\\\\\\\n                          updatedProposalStatus.value.status ===\\\\\\\\n                            PROPOSAL_TIMELINE_STATUS.FUNDED;\\\\\\\\n                        return (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <div\\\\\\\\n                              className={\\\\\\\\n                                \\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" +\\\\\\\\n                                (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                              }\\\\\\\\n                            >\\\\\\\\n                              {completed && (\\\\\\\\n                                <div\\\\\\\\n                                  className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n                                  style={{ height: \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" }}\\\\\\\\n                                >\\\\\\\\n                                  <i class=\\\\\\\\\\\\\\\"bi bi-check\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                </div>\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n\\\\\\\\n                            {index !== stepsArray.length - 1 && (\\\\\\\\n                              <div\\\\\\\\n                                className={\\\\\\\\n                                  \\\\\\\\\\\\\\\"vertical-line\\\\\\\\\\\\\\\" +\\\\\\\\n                                  (index === stepsArray.length - 2\\\\\\\\n                                    ? \\\\\\\\\\\\\\\"-sm \\\\\\\\\\\\\\\"\\\\\\\\n                                    : \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                                }\\\\\\\\n                              ></div>\\\\\\\\n                            )}\\\\\\\\n                          </div>\\\\\\\\n                        );\\\\\\\\n                      })}\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"1) Draft\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.DRAFT}\\\\\\\\n                      >\\\\\\\\n                        <div>\\\\\\\\n                          Once an author submits a proposal, it is in draft mode\\\\\\\\n                          and open for community comments. The author can still\\\\\\\\n                          make changes to the proposal during this stage and\\\\\\\\n                          submit it for official review when ready.\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"2) Review\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.REVIEW}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          Sponsors who agree to consider the proposal may\\\\\\\\n                          request attestations from work groups.\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  sponsor_requested_review: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor provides feedback or requests reviews\\\\\\\\\\\\\\\"\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .sponsor_requested_review\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Reviewer completes attestations (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  reviewer_completed_attestation: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .reviewer_completed_attestation\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"3) Decision\\\\\\\\\\\\\\\"\\\\\\\\n                        values={[\\\\\\\\n                          PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n                          PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n                          PROPOSAL_TIMELINE_STATUS.REJECTED,\\\\\\\\n                        ]}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <div>Sponsor makes a final decision:</div>\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Approved</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.APPROVED ||\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING ||\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.FUNDED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={\\\\\\\\n                              <>\\\\\\\\n                                <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                                  Approved - Conditional{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                                </div>\\\\\\\\n                                <span>\\\\\\\\n                                  Requires follow up from recipient. Moderators\\\\\\\\n                                  will provide further details.\\\\\\\\n                                </span>\\\\\\\\n                              </>\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Reject\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Rejected</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              PROPOSAL_TIMELINE_STATUS.REJECTED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Canceled</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              PROPOSAL_TIMELINE_STATUS.CANCELED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"4) Payment Processing\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor verifies KYC/KYB\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  kyc_verified: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor confirmed sponsorship and shared funding steps with recipient\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  test_transaction_sent: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"5) Funded\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.FUNDED}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          {paymentHashes?.length > 1 ? (\\\\\\\\n                            paymentHashes.slice(0, -1).map((link, index) => (\\\\\\\\n                              <a\\\\\\\\n                                key={index}\\\\\\\\n                                href={link}\\\\\\\\n                                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                              >\\\\\\\\n                                Payment Link\\\\\\\\n                                <i className=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                              </a>\\\\\\\\n                            ))\\\\\\\\n                          ) : updatedProposalStatus.value.payouts.length > 0 ? (\\\\\\\\n                            <div>\\\\\\\\n                              {updatedProposalStatus.value.payouts.map(\\\\\\\\n                                (link) => {\\\\\\\\n                                  return (\\\\\\\\n                                    <a\\\\\\\\n                                      href={link}\\\\\\\\n                                      className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                                    >\\\\\\\\n                                      Payment Link\\\\\\\\n                                      <i class=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                    </a>\\\\\\\\n                                  );\\\\\\\\n                                }\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n                          ) : (\\\\\\\\n                            \\\\\\\\\\\\\\\"No Payouts yet\\\\\\\\\\\\\\\"\\\\\\\\n                          )}\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                  {showTimelineSetting && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">\\\\\\\\n                          Project Coordinator\\\\\\\\n                        </label>\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.AccountInput`}\\\\\\\\n                          props={{\\\\\\\\n                            value: supervisor,\\\\\\\\n                            placeholder: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                            onUpdate: setSupervisor,\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                      {updatedProposalStatus.value.status ===\\\\\\\\n                        PROPOSAL_TIMELINE_STATUS.FUNDED && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">Payment Link</label>\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                            {paymentHashes.map((item, index) => (\\\\\\\\n                              <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-between align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                                <Widget\\\\\\\\n                                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n                                  props={{\\\\\\\\n                                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                                    value: item,\\\\\\\\n                                    onChange: (e) => {\\\\\\\\n                                      const updatedHashes = [...paymentHashes];\\\\\\\\n                                      updatedHashes[index] = e.target.value;\\\\\\\\n                                      setPaymentHashes(updatedHashes);\\\\\\\\n                                    },\\\\\\\\n                                    skipPaddingGap: true,\\\\\\\\n                                    placeholder: \\\\\\\\\\\\\\\"Enter URL\\\\\\\\\\\\\\\",\\\\\\\\n                                  }}\\\\\\\\n                                />\\\\\\\\n                                <div style={{ minWidth: 20 }}>\\\\\\\\n                                  {index !== paymentHashes.length - 1 ? (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-trash3 h6\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () => {\\\\\\\\n                                          const updatedHashes = [\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                          ];\\\\\\\\n                                          updatedHashes.splice(index, 1);\\\\\\\\n                                          setPaymentHashes(updatedHashes);\\\\\\\\n                                        },\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  ) : (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"green-btn shadow-none border-0 w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        disabled: !item,\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-plus-lg\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () =>\\\\\\\\n                                          setPaymentHashes([\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                            \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                                          ]),\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  )}\\\\\\\\n                                </div>\\\\\\\\n                              </div>\\\\\\\\n                            ))}\\\\\\\\n                          </div>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end text-sm\\\\\\\\\\\\\\\">\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                            classNames: {\\\\\\\\n                              root: \\\\\\\\\\\\\\\"btn-outline-danger border-0 shadow-none btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              setShowTimelineSetting(false);\\\\\\\\n                              setUpdatedProposalStatus(proposalStatus);\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                            disabled:\\\\\\\\n                              !supervisor &&\\\\\\\\n                              DecisionStage.includes(\\\\\\\\n                                updatedProposalStatus.value.status\\\\\\\\n                              ),\\\\\\\\n                            classNames: { root: \\\\\\\\\\\\\\\"green-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              if (snapshot.supervisor !== supervisor) {\\\\\\\\n                                editProposal({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              } else if (\\\\\\\\n                                updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.FUNDED\\\\\\\\n                              ) {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: {\\\\\\\\n                                    ...updatedProposalStatus.value,\\\\\\\\n                                    payouts: !paymentHashes[0]\\\\\\\\n                                      ? []\\\\\\\\n                                      : paymentHashes.filter(\\\\\\\\n                                          (item) => item !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                                        ),\\\\\\\\n                                  },\\\\\\\\n                                });\\\\\\\\n                              } else {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              }\\\\\\\\n                              setShowTimelineSetting(false);\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.StageDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst setSelected = props.onStateChange ?? (() => {});\\\\\\\\n\\\\\\\\nconst timelineStatusArray = Object.entries(RFP_TIMELINE_STATUS).map(\\\\\\\\n  ([key, value]) => ({\\\\\\\\n    label: key\\\\\\\\n      .split(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\")\\\\\\\\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\\\\\\\\n      .join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"),\\\\\\\\n    value,\\\\\\\\n  })\\\\\\\\n);\\\\\\\\ntimelineStatusArray.unshift({ label: \\\\\\\\\\\\\\\"All\\\\\\\\\\\\\\\", value: null });\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n      props={{\\\\\\\\n        options: timelineStatusArray,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Timeline\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelected(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.template.AppLayout\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst data = fetch(`https://httpbin.org/headers`);\\\\\\\\nconst gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n// we need fixed positioning for near social and not for org\\\\\\\\nconst ParentContainer = gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\")\\\\\\\\n  ? styled.div`\\\\\\\\n      width: 100%;\\\\\\\\n      min-height: 90vh;\\\\\\\\n      background: #f4f4f4;\\\\\\\\n      padding-bottom: 1rem;\\\\\\\\n    `\\\\\\\\n  : styled.div`\\\\\\\\n      position: fixed;\\\\\\\\n      inset: 73px 0px 0px;\\\\\\\\n      width: 100%;\\\\\\\\n      overflow-y: scroll;\\\\\\\\n      min-height: 90vh;\\\\\\\\n      background: #f4f4f4;\\\\\\\\n    `;\\\\\\\\n\\\\\\\\nconst Theme = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  padding-top: calc(-1 * var(--body-top-padding));\\\\\\\\n  background: #f4f4f4;\\\\\\\\n  .container-xl {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ContentContainer = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst AppHeader = ({ page }) => (\\\\\\\\n  <Widget\\\\\\\\n    src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.organism.Navbar`}\\\\\\\\n    props={{\\\\\\\\n      page: page,\\\\\\\\n      ...props,\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst AppLayout = ({ page, children }) => {\\\\\\\\n  return (\\\\\\\\n    <ParentContainer>\\\\\\\\n      <Theme>\\\\\\\\n        <Container className=\\\\\\\\\\\\\\\"container-xl p-3\\\\\\\\\\\\\\\">\\\\\\\\n          <AppHeader page={page} />\\\\\\\\n          <ContentContainer className=\\\\\\\\\\\\\\\"content-container\\\\\\\\\\\\\\\">\\\\\\\\n            {children}\\\\\\\\n          </ContentContainer>\\\\\\\\n        </Container>\\\\\\\\n      </Theme>\\\\\\\\n    </ParentContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn { AppLayout };\\\\\\\\n\"}, \"near-prpsls-bos.components.admin.moderatorsTab\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { Tile } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/devhub.components.molecule.Tile`\\\\\\\\n) || { Tile: () => <></> };\\\\\\\\n\\\\\\\\nconst { accessControlInfo, createEditTeam } = props;\\\\\\\\n\\\\\\\\nconst [editModerators, setEditModerators] = useState(false);\\\\\\\\nconst [moderators, setModerators] = useState(\\\\\\\\n  accessControlInfo.members_list[\\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\"].children || []\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst handleEditModerators = () => {\\\\\\\\n  createEditTeam({\\\\\\\\n    teamName: \\\\\\\\\\\\\\\"moderators\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"The moderator group has permissions to create and edit RFPs, edit and manage proposals, and manage admins.\\\\\\\\\\\\\\\",\\\\\\\\n    members: moderators,\\\\\\\\n    contractCall: \\\\\\\\\\\\\\\"edit_member\\\\\\\\\\\\\\\",\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleCancelModerators = () => {\\\\\\\\n  setEditModerators(false);\\\\\\\\n  setModerators(accessControlInfo.members_list[\\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\"].children);\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <h3>Moderators</h3>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n      <h6>\\\\\\\\n        The moderator group has permissions to create and edit RFPs, edit and\\\\\\\\n        manage proposals, and manage admins.\\\\\\\\n      </h6>\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.PostControls`}\\\\\\\\n        props={{\\\\\\\\n          icon: \\\\\\\\\\\\\\\"bi bi-gear-wide-connected\\\\\\\\\\\\\\\",\\\\\\\\n          className: \\\\\\\\\\\\\\\"mb-3\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n          title: \\\\\\\\\\\\\\\"Edit members\\\\\\\\\\\\\\\",\\\\\\\\n          onClick: () => setEditModerators(!editModerators),\\\\\\\\n          testId: \\\\\\\\\\\\\\\"edit-members\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n    <Tile className=\\\\\\\\\\\\\\\"p-3\\\\\\\\\\\\\\\" style={{ background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      {editModerators ? (\\\\\\\\n        <>\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.admin.AccountsEditor`}\\\\\\\\n            props={{\\\\\\\\n              data: {\\\\\\\\n                maxLength: 100,\\\\\\\\n                placeholder: \\\\\\\\\\\\\\\"member.near\\\\\\\\\\\\\\\",\\\\\\\\n                list: moderators,\\\\\\\\n              },\\\\\\\\n              setList: setModerators,\\\\\\\\n              // Could add a check to see if it is an valid account id.\\\\\\\\n              validate: (newItem) => true,\\\\\\\\n              invalidate: () => null,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"d-flex align-items-center justify-content-end gap-3 mt-4\\\\\\\\\\\\\\\"\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: {\\\\\\\\n                  root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: handleCancelModerators,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n                icon: {\\\\\\\\n                  type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                  variant: \\\\\\\\\\\\\\\"bi-check-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Submit\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: handleEditModerators,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </>\\\\\\\\n      ) : (\\\\\\\\n        <>\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\">Members</div>\\\\\\\\n          {moderators && (\\\\\\\\n            <div class=\\\\\\\\\\\\\\\"vstack\\\\\\\\\\\\\\\">\\\\\\\\n              {moderators.length ? (\\\\\\\\n                moderators.map((child) => (\\\\\\\\n                  <Tile className=\\\\\\\\\\\\\\\"w-25 p-3 m-1\\\\\\\\\\\\\\\" minHeight={10}>\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.ProfileLine`}\\\\\\\\n                      props={{ accountId: child }}\\\\\\\\n                    />\\\\\\\\n                  </Tile>\\\\\\\\n                ))\\\\\\\\n              ) : (\\\\\\\\n                <div>No moderators</div>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </Tile>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedRfps\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst linkedRfpIds = props.linkedRfpIds ?? [];\\\\\\\\nconst linkedRfpsData = [];\\\\\\\\n\\\\\\\\nlinkedRfpIds.map((item) => {\\\\\\\\n  const data = Near.view(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n    rfp_id: item,\\\\\\\\n  });\\\\\\\\n  if (data !== null) {\\\\\\\\n    linkedRfpsData.push(data);\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  a {\\\\\\\\n    &:hover {\\\\\\\\n      text-decoration: none !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    {linkedRfpsData.map((item) => {\\\\\\\\n      const link = `https://near.org/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=rfp&id=${item.id}`;\\\\\\\\n      return (\\\\\\\\n        <a href={link} target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\" rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <img src={RFP_IMAGE} height={40} width={40} />\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\" style={{ maxWidth: 250 }}>\\\\\\\\n              <b className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">{item.snapshot.name}</b>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                created on {readableDate(item.snapshot.timestamp / 1000000)}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </a>\\\\\\\\n      );\\\\\\\\n    })}\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.admin.AccountsEditor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { data, setList, validate, invalidate } = props;\\\\\\\\n\\\\\\\\nconst [newItem, setNewItem] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst handleAddItem = () => {\\\\\\\\n  if (validate(newItem)) {\\\\\\\\n    setList([...data.list, newItem]);\\\\\\\\n    setNewItem(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n  } else {\\\\\\\\n    return invalidate();\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleDeleteItem = (index) => {\\\\\\\\n  const updatedData = [...data.list];\\\\\\\\n  updatedData.splice(index, 1);\\\\\\\\n  setList(updatedData);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Item = styled.div`\\\\\\\\n  padding: 10px;\\\\\\\\n  margin: 5px;\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  flex-direction: row;\\\\\\\\n  gap: 10px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {data.list.map((item, index) => (\\\\\\\\n      <Item key={index}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n            props={{\\\\\\\\n              className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n              value: item,\\\\\\\\n              skipPaddingGap: true,\\\\\\\\n              placeholder: data.placeholder,\\\\\\\\n              inputProps: {\\\\\\\\n                prefix: data.prefix,\\\\\\\\n                disabled: true,\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"btn btn-outline-danger\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() => handleDeleteItem(index)}\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-trash-fill\\\\\\\\\\\\\\\" />\\\\\\\\n        </button>\\\\\\\\n      </Item>\\\\\\\\n    ))}\\\\\\\\n    {data.list.length < data.maxLength && (\\\\\\\\n      <Item>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.AccountInput`}\\\\\\\\n            props={{\\\\\\\\n              onUpdate: (value) => setNewItem(value),\\\\\\\\n              value: newItem,\\\\\\\\n              placeholder: data.placeholder,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"btn btn-success add-member\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={handleAddItem}\\\\\\\\n          disabled={newItem === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n          data-testid=\\\\\\\\\\\\\\\"add-to-list\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-plus\\\\\\\\\\\\\\\" />\\\\\\\\n        </button>\\\\\\\\n      </Item>\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.CommentsAndLogs\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst snapshotHistory = props.snapshotHistory;\\\\\\\\nconst approvedProposals = props.approvedProposals ?? [];\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  .log-line {\\\\\\\\n    position: absolute;\\\\\\\\n    left: 7%;\\\\\\\\n    top: -30px;\\\\\\\\n    bottom: 0;\\\\\\\\n    z-index: 1;\\\\\\\\n    width: 1px;\\\\\\\\n    background-color: var(--bs-border-color);\\\\\\\\n    z-index: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .inline-flex {\\\\\\\\n    display: -webkit-inline-box !important;\\\\\\\\n    align-items: center !important;\\\\\\\\n    gap: 0.25rem !important;\\\\\\\\n    margin-right: 2px;\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommentContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// check snapshot history all keys and values for differences\\\\\\\\nfunction getDifferentKeysWithValues(obj1, obj2) {\\\\\\\\n  return Object.keys(obj1)\\\\\\\\n    .filter((key) => {\\\\\\\\n      if (key !== \\\\\\\\\\\\\\\"editor_id\\\\\\\\\\\\\\\" && obj2.hasOwnProperty(key)) {\\\\\\\\n        const value1 = obj1[key];\\\\\\\\n        const value2 = obj2[key];\\\\\\\\n        if (Array.isArray(value1) && Array.isArray(value2)) {\\\\\\\\n          const sortedValue1 = [...value1].sort();\\\\\\\\n          const sortedValue2 = [...value2].sort();\\\\\\\\n          return JSON.stringify(sortedValue1) !== JSON.stringify(sortedValue2);\\\\\\\\n        } else if (typeof value1 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" && typeof value2 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else {\\\\\\\\n          return value1 !== value2;\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      return false;\\\\\\\\n    })\\\\\\\\n    .map((key) => ({\\\\\\\\n      key,\\\\\\\\n      originalValue: obj1[key],\\\\\\\\n      modifiedValue: obj2[key],\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  data: null,\\\\\\\\n  socialComments: null,\\\\\\\\n  changedKeysListWithValues: null,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction sortTimelineAndComments() {\\\\\\\\n  const comments = Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", props.item);\\\\\\\\n\\\\\\\\n  if (state.changedKeysListWithValues === null) {\\\\\\\\n    const changedKeysListWithValues = snapshotHistory\\\\\\\\n      .slice(1)\\\\\\\\n      .map((item, index) => {\\\\\\\\n        const startingPoint = snapshotHistory[index]; // Set comparison to the previous item\\\\\\\\n        return {\\\\\\\\n          editorId: item.editor_id,\\\\\\\\n          ...getDifferentKeysWithValues(startingPoint, item),\\\\\\\\n        };\\\\\\\\n      });\\\\\\\\n    State.update({ changedKeysListWithValues });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort comments and timeline logs by time\\\\\\\\n  const snapShotTimeStamp = Array.isArray(snapshotHistory)\\\\\\\\n    ? snapshotHistory.map((i) => {\\\\\\\\n        return { blockHeight: null, timestamp: parseFloat(i.timestamp / 1e6) };\\\\\\\\n      })\\\\\\\\n    : [];\\\\\\\\n\\\\\\\\n  const commentsTimeStampPromise = Array.isArray(comments)\\\\\\\\n    ? Promise.all(\\\\\\\\n        comments.map((item) => {\\\\\\\\n          return asyncFetch(\\\\\\\\n            `https://api.near.social/time?blockHeight=${item.blockHeight}`\\\\\\\\n          ).then((res) => {\\\\\\\\n            const timeMs = parseFloat(res.body);\\\\\\\\n            return {\\\\\\\\n              blockHeight: item.blockHeight,\\\\\\\\n              timestamp: timeMs,\\\\\\\\n            };\\\\\\\\n          });\\\\\\\\n        })\\\\\\\\n      ).then((res) => res)\\\\\\\\n    : Promise.resolve([]);\\\\\\\\n\\\\\\\\n  commentsTimeStampPromise.then((commentsTimeStamp) => {\\\\\\\\n    const combinedArray = [...snapShotTimeStamp, ...commentsTimeStamp];\\\\\\\\n    combinedArray.sort((a, b) => a.timestamp - b.timestamp);\\\\\\\\n    State.update({ data: combinedArray, socialComments: comments });\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nif ((snapshotHistory ?? []).length > 0) {\\\\\\\\n  sortTimelineAndComments();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Comment = ({ commentItem }) => {\\\\\\\\n  const { accountId, blockHeight } = commentItem;\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n    blockHeight,\\\\\\\\n  };\\\\\\\\n  const content = JSON.parse(Social.get(item.path, blockHeight) ?? \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n  const link = `https://near.social/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=rfp&id=${props.id}&accountId=${accountId}&blockHeight=${blockHeight}`;\\\\\\\\n  function getHighlightCommentStyle() {\\\\\\\\n    const highlightComment =\\\\\\\\n      parseInt(props.blockHeight ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") === blockHeight &&\\\\\\\\n      props.accountId === accountId;\\\\\\\\n\\\\\\\\n    return {\\\\\\\\n      border: highlightComment ? \\\\\\\\\\\\\\\"2px solid black\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div style={{ zIndex: 99, background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n            props={{\\\\\\\\n              accountId: accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <CommentContainer\\\\\\\\n          style={getHighlightCommentStyle()}\\\\\\\\n          className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Header className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <Link href={`/near/widget/ProfilePage?accountId=${accountId}`}>\\\\\\\\n                <span className=\\\\\\\\\\\\\\\"fw-bold text-black\\\\\\\\\\\\\\\">{accountId}</span>\\\\\\\\n              </Link>\\\\\\\\n              commented \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight: blockHeight,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: accountId,\\\\\\\\n                    blockHeight: blockHeight,\\\\\\\\n                    contentPath: `/post/comment`,\\\\\\\\n                    contentType: \\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </Header>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n              props={{\\\\\\\\n                text: content.text,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LikeButton`}\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                props={{\\\\\\\\n                  url: link,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </CommentContainer>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction capitalizeFirstLetter(string) {\\\\\\\\n  const updated = string.replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n  return updated.charAt(0).toUpperCase() + updated.slice(1).toLowerCase();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction parseTimelineKeyAndValue(timeline, originalValue, modifiedValue) {\\\\\\\\n  const oldValue = originalValue[timeline];\\\\\\\\n  const newValue = modifiedValue[timeline];\\\\\\\\n  switch (timeline) {\\\\\\\\n    case \\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\":\\\\\\\\n      if (newValue === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED) {\\\\\\\\n        return (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved RFP to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            \\\\\\\\u{ff65} selected proposal(s) are{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            {approvedProposals.map((i, index) => (\\\\\\\\n              <span>\\\\\\\\n                <LinkToProposal id={i.proposal_id}>\\\\\\\\n                  {\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                  #{i.proposal_id} {i.name}\\\\\\\\n                </LinkToProposal>\\\\\\\\n                {index < approvedProposals.length - 1 && \\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"}\\\\\\\\n              </span>\\\\\\\\n            ))}\\\\\\\\n          </span>\\\\\\\\n        );\\\\\\\\n      }\\\\\\\\n      return (\\\\\\\\n        oldValue !== newValue && (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved RFP from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: oldValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            stage\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccountProfile = ({ accountId }) => {\\\\\\\\n  return (\\\\\\\\n    <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n        props={{\\\\\\\\n          accountId: accountId,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n          showAccountId: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </span>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction symmetricDifference(arr1, arr2) {\\\\\\\\n  const diffA = arr1.filter((item) => !arr2.includes(item));\\\\\\\\n  const diffB = arr2.filter((item) => !arr1.includes(item));\\\\\\\\n  return [...diffA, ...diffB];\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst LinkToProposal = ({ id, children }) => {\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n          id: id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      {children}\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst parseProposalKeyAndValue = (key, modifiedValue, originalValue) => {\\\\\\\\n  switch (key) {\\\\\\\\n    case \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed title</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"summary\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed {key}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed labels to {(modifiedValue ?? []).join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\": {\\\\\\\\n      const newProposals = modifiedValue || [];\\\\\\\\n      const oldProposals = originalValue || [];\\\\\\\\n      const difference = symmetricDifference(oldProposals, newProposals).join(\\\\\\\\n        \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n\\\\\\\\n      const isUnlinked = oldProposals.length > newProposals.length;\\\\\\\\n      const actionText = isUnlinked\\\\\\\\n        ? \\\\\\\\\\\\\\\"unlinked a proposal\\\\\\\\\\\\\\\"\\\\\\\\n        : \\\\\\\\\\\\\\\"linked a proposal\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          {actionText}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <LinkToProposal id={difference}> #{difference}</LinkToProposal>\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\": {\\\\\\\\n      const modifiedKeys = Object.keys(modifiedValue);\\\\\\\\n      const originalKeys = Object.keys(originalValue);\\\\\\\\n      return modifiedKeys.map((i, index) => {\\\\\\\\n        const text = parseTimelineKeyAndValue(i, originalValue, modifiedValue);\\\\\\\\n        return (\\\\\\\\n          text && (\\\\\\\\n            <span key={index} className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              {text}\\\\\\\\n              {text &&\\\\\\\\n                originalKeys.length > 1 &&\\\\\\\\n                index < modifiedKeys.length - 1 &&\\\\\\\\n                \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LogIconContainer = styled.div`\\\\\\\\n  margin-left: 50px;\\\\\\\\n  z-index: 99;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin-left: 10px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Log = ({ timestamp }) => {\\\\\\\\n  const updatedData = useMemo(\\\\\\\\n    () =>\\\\\\\\n      state.changedKeysListWithValues.find((obj) =>\\\\\\\\n        Object.values(obj).some(\\\\\\\\n          (value) =>\\\\\\\\n            value && parseFloat(value.modifiedValue / 1e6) === timestamp\\\\\\\\n        )\\\\\\\\n      ),\\\\\\\\n    [state.changedKeysListWithValues, timestamp]\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const editorId = updatedData.editorId;\\\\\\\\n  const valuesArray = Object.values(updatedData ?? {});\\\\\\\\n  // if valuesArray length is 2 that means it only has timestamp and editorId\\\\\\\\n  if (!updatedData || valuesArray.length === 2) {\\\\\\\\n    return <></>;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return valuesArray.map((i, index) => {\\\\\\\\n    if (i.key && i.key !== \\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\\") {\\\\\\\\n      return (\\\\\\\\n        <LogIconContainer\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          key={index}\\\\\\\\n        >\\\\\\\\n          <img\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiffqrxdi4xqu7erf46gdlwuodt6dm6rji2jtixs3iionjvga6rhdi\\\\\\\\\\\\\\\"\\\\\\\\n            height={30}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"flex-1 gap-1 w-100 text-wrap text-muted align-items-center \\\\\\\\\\\\\\\" +\\\\\\\\n              (i.key === \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" &&\\\\\\\\n              Object.keys(i.originalValue ?? {}).length > 1\\\\\\\\n                ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                : \\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n              <AccountProfile accountId={editorId} showAccountId={true} />\\\\\\\\n            </span>\\\\\\\\n            {parseProposalKeyAndValue(i.key, i.modifiedValue, i.originalValue)}\\\\\\\\n            \\\\\\\\u{ff65}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n              props={{\\\\\\\\n                blockTimestamp: timestamp * 1000000,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </LogIconContainer>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (Array.isArray(state.data)) {\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"log-line\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ height: state.data.length > 2 ? \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"150%\\\\\\\\\\\\\\\" }}\\\\\\\\n      ></div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n        {state.data.map((i, index) => {\\\\\\\\n          if (i.blockHeight) {\\\\\\\\n            const item = state.socialComments.find(\\\\\\\\n              (t) => t.blockHeight === i.blockHeight\\\\\\\\n            );\\\\\\\\n            return <Comment commentItem={item} />;\\\\\\\\n          } else {\\\\\\\\n            return <Log timestamp={i.timestamp} key={index} />;\\\\\\\\n          }\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.AccountInput\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst value = props.value;\\\\\\\\nconst placeholder = props.placeholder;\\\\\\\\nconst onUpdate = props.onUpdate;\\\\\\\\n\\\\\\\\nconst [account, setAccount] = useState(value);\\\\\\\\nconst [showAccountAutocomplete, setAutoComplete] = useState(false);\\\\\\\\nconst [isValidAccount, setValidAccount] = useState(true);\\\\\\\\nconst AutoComplete = styled.div`\\\\\\\\n  margin-top: 1rem;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (value !== account) {\\\\\\\\n    setAccount(value);\\\\\\\\n  }\\\\\\\\n}, [value]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (value !== account) {\\\\\\\\n    onUpdate(account);\\\\\\\\n  }\\\\\\\\n}, [account]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    const valid = account.length === 64 || (account ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").includes(\\\\\\\\\\\\\\\".near\\\\\\\\\\\\\\\");\\\\\\\\n    setValidAccount(valid);\\\\\\\\n    setAutoComplete(!valid);\\\\\\\\n  }, 100);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [account]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: account,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          setAccount(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        placeholder: placeholder,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 64,\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    {account && !isValidAccount && (\\\\\\\\n      <div style={{ color: \\\\\\\\\\\\\\\"red\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"text-sm mt-1\\\\\\\\\\\\\\\">\\\\\\\\n        Please enter valid account ID\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n    {showAccountAutocomplete && (\\\\\\\\n      <AutoComplete>\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.AccountAutocomplete`}\\\\\\\\n          props={{\\\\\\\\n            term: account,\\\\\\\\n            onSelect: (id) => {\\\\\\\\n              setAccount(id);\\\\\\\\n              setAutoComplete(false);\\\\\\\\n            },\\\\\\\\n            onClose: () => setAutoComplete(false),\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </AutoComplete>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.FilterByLabel\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst availableOptions = props.availableOptions;\\\\\\\\nconst options =\\\\\\\\n  (availableOptions ?? []).map((i) => {\\\\\\\\n    return { label: i.title, value: i.value };\\\\\\\\n  }) ?? [];\\\\\\\\noptions.unshift({ label: \\\\\\\\\\\\\\\"All\\\\\\\\\\\\\\\", value: null });\\\\\\\\nconst setSelected = props.onStateChange ?? (() => {});\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n      props={{\\\\\\\\n        options: options,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelected(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.ComposeComment\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst proposalId = props.proposalId;\\\\\\\\nconst rfpId = props.rfpId;\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_COMMENT_DRAFT\\\\\\\\\\\\\\\" + proposalId;\\\\\\\\nlet draftComment = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst ComposeEmbeddCSS = `\\\\\\\\n  .CodeMirror {\\\\\\\\n    border: none !important;\\\\\\\\n    min-height: 50px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .CodeMirror-scroll{\\\\\\\\n    min-height: 50px !important;\\\\\\\\n    max-height: 300px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst notifyAccountIds = props.notifyAccountIds ?? [];\\\\\\\\nconst accountId = context.accountId;\\\\\\\\nconst item = props.item;\\\\\\\\nconst [allowGetDraft, setAllowGetDraft] = useState(true);\\\\\\\\nconst [comment, setComment] = useState(null);\\\\\\\\nconst [isTxnCreated, setTxnCreated] = useState(false);\\\\\\\\nconst [handler, setHandler] = useState(\\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\"); // to update editor state on draft and txn approval\\\\\\\\nconst [showCommentToast, setCommentToast] = useState(false);\\\\\\\\n\\\\\\\\nif (allowGetDraft) {\\\\\\\\n  draftComment = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (draftComment) {\\\\\\\\n    setComment(draftComment);\\\\\\\\n    setAllowGetDraft(false);\\\\\\\\n    setHandler(\\\\\\\\\\\\\\\"refreshEditor\\\\\\\\\\\\\\\");\\\\\\\\n  }\\\\\\\\n}, [draftComment]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (draftComment === comment) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, comment);\\\\\\\\n  }, 1000);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [comment]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (handler === \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\") {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setHandler(\\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\");\\\\\\\\n  }, 3000);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [handler]);\\\\\\\\n\\\\\\\\nif (!accountId) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{\\\\\\\\n        marginLeft: 10,\\\\\\\\n        backgroundColor: \\\\\\\\\\\\\\\"#ECF8FB\\\\\\\\\\\\\\\",\\\\\\\\n        border: \\\\\\\\\\\\\\\"1px solid #E2E6EC\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1 p-4 rounded-2 flex-wrap flex-md-nowrap\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Link to=\\\\\\\\\\\\\\\"https://near.org/signup\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n          props={{\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"grey-btn\\\\\\\\\\\\\\\" },\\\\\\\\n            label: \\\\\\\\\\\\\\\"Sign up\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </Link>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">to join this conversation.</div>\\\\\\\\n      <div>Already have an account?</div>\\\\\\\\n      <a className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://near.org/signin\\\\\\\\\\\\\\\">\\\\\\\\n        Log in to comment\\\\\\\\n      </a>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractMentions(text) {\\\\\\\\n  const mentionRegex =\\\\\\\\n    /@((?:(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+\\\\\\\\\\\\\\\\.)*(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+)/gi;\\\\\\\\n  mentionRegex.lastIndex = 0;\\\\\\\\n  const accountIds = new Set();\\\\\\\\n  for (const match of text.matchAll(mentionRegex)) {\\\\\\\\n    if (\\\\\\\\n      !/[\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index - 1)) &&\\\\\\\\n      !/[/\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index + match[0].length)) &&\\\\\\\\n      match[1].length >= 2 &&\\\\\\\\n      match[1].length <= 64\\\\\\\\n    ) {\\\\\\\\n      accountIds.add(match[1].toLowerCase());\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return [...accountIds];\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractTagNotifications(text, item) {\\\\\\\\n  return extractMentions(text || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n    .filter((accountId) => accountId !== context.accountId)\\\\\\\\n    .map((accountId) => ({\\\\\\\\n      key: accountId,\\\\\\\\n      value: {\\\\\\\\n        type: \\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\n        item,\\\\\\\\n      },\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction composeData() {\\\\\\\\n  setTxnCreated(true);\\\\\\\\n  const data = {\\\\\\\\n    post: {\\\\\\\\n      comment: JSON.stringify({\\\\\\\\n        type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n        text: comment,\\\\\\\\n        item,\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n    index: {\\\\\\\\n      comment: JSON.stringify({\\\\\\\\n        key: item,\\\\\\\\n        value: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const notifications = extractTagNotifications(comment, {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  if (notifyAccountIds.length > 0) {\\\\\\\\n    notifyAccountIds.map((account) => {\\\\\\\\n      if (account !== context.accountId) {\\\\\\\\n        notifications.push({\\\\\\\\n          key: account,\\\\\\\\n          value: proposalId\\\\\\\\n            ? {\\\\\\\\n                type: \\\\\\\\\\\\\\\"devhub/reply\\\\\\\\\\\\\\\",\\\\\\\\n                item,\\\\\\\\n                proposal: proposalId,\\\\\\\\n              }\\\\\\\\n            : {\\\\\\\\n                type: \\\\\\\\\\\\\\\"devhub/reply\\\\\\\\\\\\\\\",\\\\\\\\n                item,\\\\\\\\n                rfpId: rfpId,\\\\\\\\n              },\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (notifications.length) {\\\\\\\\n    data.index.notify = JSON.stringify(\\\\\\\\n      notifications.length > 1 ? notifications : notifications[0]\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Social.set(data, {\\\\\\\\n    force: true,\\\\\\\\n    onCommit: () => {\\\\\\\\n      setCommentToast(true);\\\\\\\\n      setComment(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n      setHandler(\\\\\\\\\\\\\\\"refreshEditor\\\\\\\\\\\\\\\");\\\\\\\\n      setTxnCreated(false);\\\\\\\\n    },\\\\\\\\n    onCancel: () => {\\\\\\\\n      setTxnCreated(false);\\\\\\\\n    },\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes && comment) {\\\\\\\\n    setComment(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"comment-btn-spinner spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Compose = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: comment,\\\\\\\\n        onChangeKeyup: setComment,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Add your comment here...\\\\\\\\\\\\\\\",\\\\\\\\n        height: \\\\\\\\\\\\\\\"250\\\\\\\\\\\\\\\",\\\\\\\\n        embeddCSS: ComposeEmbeddCSS,\\\\\\\\n        handler: handler,\\\\\\\\n        showProposalIdAutoComplete: true,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftComment, handler]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_NEAR}/widget/DIG.Toast`}\\\\\\\\n      props={{\\\\\\\\n        title: \\\\\\\\\\\\\\\"Comment Submitted Successfully\\\\\\\\\\\\\\\",\\\\\\\\n        type: \\\\\\\\\\\\\\\"success\\\\\\\\\\\\\\\",\\\\\\\\n        open: showCommentToast,\\\\\\\\n        onOpenChange: (v) => setCommentToast(v),\\\\\\\\n        trigger: <></>,\\\\\\\\n        providerProps: { duration: 3000 },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n      props={{\\\\\\\\n        accountId: accountId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"mt-1\\\\\\\\\\\\\\\">Add a comment</b>\\\\\\\\n      {Compose}\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-content-center justify-content-end\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n          props={{\\\\\\\\n            label: isTxnCreated ? LoadingButtonSpinner : \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n            [\\\\\\\\\\\\\\\"data-testid\\\\\\\\\\\\\\\"]: \\\\\\\\\\\\\\\"compose-comment\\\\\\\\\\\\\\\",\\\\\\\\n            disabled: !comment || isTxnCreated,\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"green-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n            onClick: () => {\\\\\\\\n              composeData();\\\\\\\\n            },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.NavbarDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst title = props.title;\\\\\\\\nconst links = props.links;\\\\\\\\nconst href = props.href;\\\\\\\\n\\\\\\\\nconst [showMenu, setShowMenu] = useState(false);\\\\\\\\n\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst Dropdown = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: center;\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    &.active {\\\\\\\\n      color: #fff;\\\\\\\\n\\\\\\\\n      &:hover {\\\\\\\\n        text-decoration: none;\\\\\\\\n        color: #096d50 !important;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst DropdownMenu = styled.div`\\\\\\\\n  z-index: 50;\\\\\\\\n  position: absolute;\\\\\\\\n  top: 2.25rem;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    padding: 0.5rem 1rem;\\\\\\\\n    padding-top: 1rem;\\\\\\\\n    border-radius: 1rem;\\\\\\\\n    background: rgba(217, 217, 217, 0.7);\\\\\\\\n    backdrop-filter: blur(5px);\\\\\\\\n    width: max-content;\\\\\\\\n    animation: slide-down 300ms ease;\\\\\\\\n    transform-origin: top center;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @keyframes slide-down {\\\\\\\\n    0% {\\\\\\\\n      transform: scaleY(0);\\\\\\\\n    }\\\\\\\\n    100% {\\\\\\\\n      transform: scaleY(1);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst DropdownLink = styled.div`\\\\\\\\n  color: inherit;\\\\\\\\n  text-decoration: none;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    color: #555555;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n    color: #096d50 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Dropdown\\\\\\\\n    onMouseEnter={() => setShowMenu(true)}\\\\\\\\n    onMouseLeave={() => setShowMenu(false)}\\\\\\\\n  >\\\\\\\\n    {href ? (\\\\\\\\n      <DropdownLink className={href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"} href={href}>\\\\\\\\n        <Link\\\\\\\\n          style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n          to={linkHref({\\\\\\\\n            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n            params: { page: href },\\\\\\\\n          })}\\\\\\\\n        >\\\\\\\\n          {title}\\\\\\\\n        </Link>\\\\\\\\n      </DropdownLink>\\\\\\\\n    ) : (\\\\\\\\n      <p className={`m-0 py-2 nav-dropdown`} style={{ cursor: \\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {title} \\\\\\\\u{2193}\\\\\\\\n      </p>\\\\\\\\n    )}\\\\\\\\n    {showMenu && links.length !== 0 && (\\\\\\\\n      <DropdownMenu className={`${showMenu && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}`}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n          {links.map((link) => (\\\\\\\\n            // Check if the link is external\\\\\\\\n            <DropdownLink\\\\\\\\n              className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n              key={`${link.title}-${link.href}`}\\\\\\\\n            >\\\\\\\\n              {link.href.startsWith(\\\\\\\\\\\\\\\"http://\\\\\\\\\\\\\\\") ||\\\\\\\\n              link.href.startsWith(\\\\\\\\\\\\\\\"https://\\\\\\\\\\\\\\\") ? (\\\\\\\\n                // External link: Render an <a> tag\\\\\\\\n                <a\\\\\\\\n                  href={link.href}\\\\\\\\n                  style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n                  target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {link.title}\\\\\\\\n                </a>\\\\\\\\n              ) : (\\\\\\\\n                // Internal link: Render the <Link> component\\\\\\\\n                <Link\\\\\\\\n                  style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n                  to={linkHref({\\\\\\\\n                    widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                    params: { page: link.href },\\\\\\\\n                  })}\\\\\\\\n                >\\\\\\\\n                  {link.title}\\\\\\\\n                </Link>\\\\\\\\n              )}\\\\\\\\n            </DropdownLink>\\\\\\\\n          ))}\\\\\\\\n        </div>\\\\\\\\n      </DropdownMenu>\\\\\\\\n    )}\\\\\\\\n  </Dropdown>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.ConfirmCancelModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst onCancelClick = props.onCancelClick;\\\\\\\\nconst onConfirmClick = props.onConfirmClick;\\\\\\\\nconst linkedProposalIds = props.linkedProposalIds;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background: rgb(244, 244, 244) !important;\\\\\\\\n    max-height: 300px;\\\\\\\\n    overflow-y: auto;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.5);\\\\\\\\n  opacity: 0.4;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst [proposalStatus, setProposalStatus] = useState(null);\\\\\\\\n\\\\\\\\nconst OptionForm = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 pl-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n        props={{\\\\\\\\n          value: CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS,\\\\\\\\n          label: (\\\\\\\\n            <div>\\\\\\\\n              <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Option 1: </span>Cancel all linked\\\\\\\\n              proposals\\\\\\\\n            </div>\\\\\\\\n          ),\\\\\\\\n          isChecked: proposalStatus === CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS,\\\\\\\\n          onClick: (v) => {\\\\\\\\n            if (v) {\\\\\\\\n              setProposalStatus(CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS);\\\\\\\\n            }\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n        props={{\\\\\\\\n          value: CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS,\\\\\\\\n          label: (\\\\\\\\n            <div>\\\\\\\\n              <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Option 2: </span> Unlink all linked\\\\\\\\n              proposals (maintain their status)\\\\\\\\n            </div>\\\\\\\\n          ),\\\\\\\\n          isChecked: proposalStatus === CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS,\\\\\\\\n          onClick: (v) => {\\\\\\\\n            if (v) {\\\\\\\\n              setProposalStatus(CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS);\\\\\\\\n            }\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n        props={{\\\\\\\\n          value: CANCEL_RFP_OPTIONS.NONE,\\\\\\\\n          label: (\\\\\\\\n            <div>\\\\\\\\n              <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Option 3: </span> Leave all linked\\\\\\\\n              proposals as they are\\\\\\\\n            </div>\\\\\\\\n          ),\\\\\\\\n          isChecked: proposalStatus === CANCEL_RFP_OPTIONS.NONE,\\\\\\\\n          onClick: (v) => {\\\\\\\\n            if (v) {\\\\\\\\n              setProposalStatus(CANCEL_RFP_OPTIONS.NONE);\\\\\\\\n            }\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [proposalStatus]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Are you sure you want to cancel this RFP?</h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n        <ModalContent className=\\\\\\\\\\\\\\\"text-muted d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n          The RFP status will change to \\\\\\\\u{201c}Cancelled\\\\\\\\u{201d} and it will no longer be\\\\\\\\n          active or relevant. Comments will remain open.\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"bg-grey d-flex flex-column p-3 rounded-1 text-black\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"h6\\\\\\\\\\\\\\\">\\\\\\\\n              Linked Proposals ({linkedProposalIds.length})\\\\\\\\n            </div>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n              props={{\\\\\\\\n                linkedProposalIds: linkedProposalIds,\\\\\\\\n                showStatus: true,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"text-muted d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-lg\\\\\\\\\\\\\\\">\\\\\\\\n              What would you like to do with the linked proposals?\\\\\\\\n            </div>\\\\\\\\n            {OptionForm}\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"text-sm mt-2\\\\\\\\\\\\\\\">\\\\\\\\n            Note: To take specific actions on individual proposals, please\\\\\\\\n            manage them from their respective pages.\\\\\\\\n          </div>\\\\\\\\n        </ModalContent>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-outline-secondary\\\\\\\\\\\\\\\" },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onCancelClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-danger\\\\\\\\\\\\\\\" },\\\\\\\\n              disabled: !proposalStatus,\\\\\\\\n              label: \\\\\\\\\\\\\\\"Ready to Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: () => onConfirmClick(proposalStatus),\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedProposals\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst linkedProposalIds = props.linkedProposalIds ?? [];\\\\\\\\nconst linkedProposalsData = [];\\\\\\\\nconst showStatus = props.showStatus ?? false;\\\\\\\\n\\\\\\\\n// using contract instead of indexer, since indexer doesn\\\\\\\\\\\\'t return timestamp\\\\\\\\nlinkedProposalIds.map((item) => {\\\\\\\\n  const data = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id: item,\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n  if (data !== null) {\\\\\\\\n    linkedProposalsData.push(data);\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  a {\\\\\\\\n    &:hover {\\\\\\\\n      text-decoration: none !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    {linkedProposalsData.map((item) => {\\\\\\\\n      const link = `https://near.org/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=proposal&id=${item.id}`;\\\\\\\\n      return (\\\\\\\\n        <a href={link} target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\" rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n              props={{\\\\\\\\n                accountId: item.snapshot.editor_id,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\" style={{ maxWidth: 250 }}>\\\\\\\\n              <b className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">{item.snapshot.name}</b>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                created on {readableDate(item.snapshot.timestamp / 1000000)}\\\\\\\\n              </div>\\\\\\\\n              {showStatus && (\\\\\\\\n                <div style={{ width: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"mt-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Widget\\\\\\\\n                    src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n                    props={{\\\\\\\\n                      timelineStatus: item.snapshot.timeline.status,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </a>\\\\\\\\n      );\\\\\\\\n    })}\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.CommentsAndLogs\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst snapshotHistory = props.snapshotHistory;\\\\\\\\nconst latestSnapshot = props.latestSnapshot;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  .log-line {\\\\\\\\n    position: absolute;\\\\\\\\n    left: 7%;\\\\\\\\n    top: -30px;\\\\\\\\n    bottom: 0;\\\\\\\\n    z-index: 1;\\\\\\\\n    width: 1px;\\\\\\\\n    background-color: var(--bs-border-color);\\\\\\\\n    z-index: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .inline-flex {\\\\\\\\n    display: -webkit-inline-box !important;\\\\\\\\n    align-items: center !important;\\\\\\\\n    gap: 0.25rem !important;\\\\\\\\n    margin-right: 2px;\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommentContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// check snapshot history all keys and values for differences\\\\\\\\nfunction getDifferentKeysWithValues(obj1, obj2) {\\\\\\\\n  return Object.keys(obj1)\\\\\\\\n    .filter((key) => {\\\\\\\\n      if (key !== \\\\\\\\\\\\\\\"editor_id\\\\\\\\\\\\\\\" && obj2.hasOwnProperty(key)) {\\\\\\\\n        const value1 = obj1[key];\\\\\\\\n        const value2 = obj2[key];\\\\\\\\n        if (Array.isArray(value1) && Array.isArray(value2)) {\\\\\\\\n          const sortedValue1 = [...value1].sort();\\\\\\\\n          const sortedValue2 = [...value2].sort();\\\\\\\\n          return JSON.stringify(sortedValue1) !== JSON.stringify(sortedValue2);\\\\\\\\n        } else if (typeof value1 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" && typeof value2 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else {\\\\\\\\n          return value1 !== value2;\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      return false;\\\\\\\\n    })\\\\\\\\n    .map((key) => ({\\\\\\\\n      key,\\\\\\\\n      originalValue: obj1[key],\\\\\\\\n      modifiedValue: obj2[key],\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  data: null,\\\\\\\\n  socialComments: null,\\\\\\\\n  changedKeysListWithValues: null,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction sortTimelineAndComments() {\\\\\\\\n  const comments = Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", props.item, { subscribe: true });\\\\\\\\n\\\\\\\\n  if (state.changedKeysListWithValues === null) {\\\\\\\\n    const changedKeysListWithValues = snapshotHistory\\\\\\\\n      .slice(1)\\\\\\\\n      .map((item, index) => {\\\\\\\\n        const startingPoint = snapshotHistory[index]; // Set comparison to the previous item\\\\\\\\n        return {\\\\\\\\n          editorId: item.editor_id,\\\\\\\\n          ...getDifferentKeysWithValues(startingPoint, item),\\\\\\\\n        };\\\\\\\\n      });\\\\\\\\n    State.update({ changedKeysListWithValues });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort comments and timeline logs by time\\\\\\\\n  const snapShotTimeStamp = Array.isArray(snapshotHistory)\\\\\\\\n    ? snapshotHistory.map((i) => {\\\\\\\\n        return { blockHeight: null, timestamp: parseFloat(i.timestamp / 1e6) };\\\\\\\\n      })\\\\\\\\n    : [];\\\\\\\\n\\\\\\\\n  const commentsTimeStampPromise = Array.isArray(comments)\\\\\\\\n    ? Promise.all(\\\\\\\\n        comments.map((item) => {\\\\\\\\n          return asyncFetch(\\\\\\\\n            `https://api.near.social/time?blockHeight=${item.blockHeight}`\\\\\\\\n          ).then((res) => {\\\\\\\\n            const timeMs = parseFloat(res.body);\\\\\\\\n            return {\\\\\\\\n              blockHeight: item.blockHeight,\\\\\\\\n              timestamp: timeMs,\\\\\\\\n            };\\\\\\\\n          });\\\\\\\\n        })\\\\\\\\n      ).then((res) => res)\\\\\\\\n    : Promise.resolve([]);\\\\\\\\n\\\\\\\\n  commentsTimeStampPromise.then((commentsTimeStamp) => {\\\\\\\\n    const combinedArray = [...snapShotTimeStamp, ...commentsTimeStamp];\\\\\\\\n    combinedArray.sort((a, b) => a.timestamp - b.timestamp);\\\\\\\\n    State.update({ data: combinedArray, socialComments: comments });\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nif ((snapshotHistory ?? []).length > 0) {\\\\\\\\n  sortTimelineAndComments();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Comment = ({ commentItem }) => {\\\\\\\\n  const { accountId, blockHeight } = commentItem;\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n    blockHeight,\\\\\\\\n  };\\\\\\\\n  const content = JSON.parse(Social.get(item.path, blockHeight) ?? \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n  const link = `https://near.org/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=proposal&id=${props.id}&accountId=${accountId}&blockHeight=${blockHeight}`;\\\\\\\\n  const hightlightComment =\\\\\\\\n    parseInt(props.blockHeight ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") === blockHeight &&\\\\\\\\n    props.accountId === accountId;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div style={{ zIndex: 99, background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n            props={{\\\\\\\\n              accountId: accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <CommentContainer\\\\\\\\n          style={{ border: hightlightComment ? \\\\\\\\\\\\\\\"2px solid black\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Header className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <Link href={`/near/widget/ProfilePage?accountId=${accountId}`}>\\\\\\\\n                <span className=\\\\\\\\\\\\\\\"fw-bold text-black\\\\\\\\\\\\\\\">{accountId}</span>\\\\\\\\n              </Link>\\\\\\\\n              commented \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight: blockHeight,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: accountId,\\\\\\\\n                    blockHeight: blockHeight,\\\\\\\\n                    contentPath: `/post/comment`,\\\\\\\\n                    contentType: \\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </Header>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n              props={{\\\\\\\\n                text: content.text,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LikeButton`}\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                props={{\\\\\\\\n                  url: link,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </CommentContainer>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction capitalizeFirstLetter(string) {\\\\\\\\n  const updated = string.replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n  return updated.charAt(0).toUpperCase() + updated.slice(1).toLowerCase();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction parseTimelineKeyAndValue(timeline, originalValue, modifiedValue) {\\\\\\\\n  const oldValue = originalValue[timeline];\\\\\\\\n  const newValue = modifiedValue[timeline];\\\\\\\\n  switch (timeline) {\\\\\\\\n    case \\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\": {\\\\\\\\n      if (\\\\\\\\n        (newValue === PROPOSAL_TIMELINE_STATUS.APPROVED ||\\\\\\\\n          newValue === PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY) &&\\\\\\\\n        latestSnapshot.linked_rfp\\\\\\\\n      ) {\\\\\\\\n        return (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved proposal to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            \\\\\\\\u{ff65} this proposal is selected for RFP{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <LinkToRfp id={latestSnapshot.linked_rfp}>\\\\\\\\n              #{latestSnapshot.linked_rfp}\\\\\\\\n            </LinkToRfp>\\\\\\\\n          </span>\\\\\\\\n        );\\\\\\\\n      } else\\\\\\\\n        return (\\\\\\\\n          oldValue !== newValue && (\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              moved proposal from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n                props={{\\\\\\\\n                  timelineStatus: oldValue,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n                props={{\\\\\\\\n                  timelineStatus: newValue,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              stage\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"sponsor_requested_review\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed review</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"reviewer_completed_attestation\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed attestation</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"kyc_verified\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>verified KYC/KYB</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"test_transaction_sent\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        !oldValue &&\\\\\\\\n        newValue && (\\\\\\\\n          <span>\\\\\\\\n            confirmed sponsorship and shared funding steps with recipient\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"payouts\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>updated the funding payment links.</span>;\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccountProfile = ({ accountId }) => {\\\\\\\\n  return (\\\\\\\\n    <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n        props={{\\\\\\\\n          accountId: accountId,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n          showAccountId: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </span>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LinkToRfp = ({ id, children }) => {\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n          id: id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      {children}\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst parseProposalKeyAndValue = (key, modifiedValue, originalValue) => {\\\\\\\\n  switch (key) {\\\\\\\\n    case \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed title</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"summary\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed {key}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed labels to {(modifiedValue ?? []).join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed category from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>updated linked proposals</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_rfp\\\\\\\\\\\\\\\": {\\\\\\\\n      const isUnlinked = isNumber(originalValue) && !isNumber(modifiedValue);\\\\\\\\n      const actionText = isUnlinked ? \\\\\\\\\\\\\\\"unlinked\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"linked\\\\\\\\\\\\\\\";\\\\\\\\n      const rfpId = originalValue ?? modifiedValue;\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          {actionText} an RFP <LinkToRfp id={rfpId}>#{rfpId}</LinkToRfp>\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_usd_amount\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship amount from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_paid_in_currency\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship currency from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"receiver_account\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed receiver account from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"supervisor\\\\\\\\\\\\\\\":\\\\\\\\n      return !originalValue && modifiedValue ? (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          added\\\\\\\\n          <AccountProfile accountId={modifiedValue} />\\\\\\\\n          as project coordinator\\\\\\\\n        </span>\\\\\\\\n      ) : (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed project coordinator from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\": {\\\\\\\\n      const modifiedKeys = Object.keys(modifiedValue);\\\\\\\\n      const originalKeys = Object.keys(originalValue);\\\\\\\\n      return modifiedKeys.map((i, index) => {\\\\\\\\n        const text = parseTimelineKeyAndValue(i, originalValue, modifiedValue);\\\\\\\\n        return (\\\\\\\\n          text && (\\\\\\\\n            <span key={index} className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              {text}\\\\\\\\n              {text && \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LogIconContainer = styled.div`\\\\\\\\n  margin-left: 50px;\\\\\\\\n  z-index: 99;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin-left: 10px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Log = ({ timestamp }) => {\\\\\\\\n  const updatedData = useMemo(\\\\\\\\n    () =>\\\\\\\\n      state.changedKeysListWithValues.find((obj) =>\\\\\\\\n        Object.values(obj).some(\\\\\\\\n          (value) =>\\\\\\\\n            value && parseFloat(value.modifiedValue / 1e6) === timestamp\\\\\\\\n        )\\\\\\\\n      ),\\\\\\\\n    [state.changedKeysListWithValues, timestamp]\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const editorId = updatedData.editorId;\\\\\\\\n  const valuesArray = Object.values(updatedData ?? {});\\\\\\\\n  // if valuesArray length is 2 that means it only has timestamp and editorId\\\\\\\\n  if (!updatedData || valuesArray.length === 2) {\\\\\\\\n    return <></>;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return valuesArray.map((i, index) => {\\\\\\\\n    if (i.key && i.key !== \\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\\") {\\\\\\\\n      return (\\\\\\\\n        <LogIconContainer\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          key={index}\\\\\\\\n        >\\\\\\\\n          <img\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiffqrxdi4xqu7erf46gdlwuodt6dm6rji2jtixs3iionjvga6rhdi\\\\\\\\\\\\\\\"\\\\\\\\n            height={30}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"flex-1 gap-1 w-100 text-wrap text-muted align-items-center \\\\\\\\\\\\\\\" +\\\\\\\\n              (i.key === \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" &&\\\\\\\\n              Object.keys(i.originalValue ?? {}).length > 1\\\\\\\\n                ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                : \\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n              <AccountProfile accountId={editorId} showAccountId={true} />{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n            {parseProposalKeyAndValue(i.key, i.modifiedValue, i.originalValue)}\\\\\\\\n            {i.key !== \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" && \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n              props={{\\\\\\\\n                blockTimestamp: timestamp * 1000000,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </LogIconContainer>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (Array.isArray(state.data)) {\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"log-line\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ height: state.data.length > 2 ? \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"150%\\\\\\\\\\\\\\\" }}\\\\\\\\n      ></div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n        {state.data.map((i, index) => {\\\\\\\\n          if (i.blockHeight) {\\\\\\\\n            const item = state.socialComments.find(\\\\\\\\n              (t) => t.blockHeight === i.blockHeight\\\\\\\\n            );\\\\\\\\n            return <Comment commentItem={item} />;\\\\\\\\n          } else {\\\\\\\\n            return <Log timestamp={i.timestamp} key={index} />;\\\\\\\\n          }\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.TimelineConfigurator\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst stepsArray = [1, 2, 3];\\\\\\\\nconst timeline = props.timeline;\\\\\\\\nconst disabled = props.disabled;\\\\\\\\nconst setTimeline = props.setTimeline ?? (() => {});\\\\\\\\n\\\\\\\\nconst TimelineStatusOptions = [\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Accepting Submissions\\\\\\\\\\\\\\\",\\\\\\\\n    value: { status: RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Evaluation\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: RFP_TIMELINE_STATUS.EVALUATION,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Proposal Selected\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Cancelled\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .circle-lg {\\\\\\\\n    width: 15px;\\\\\\\\n    height: 15px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 85px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 65px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nconst selectedTimelineStatusIndex = useMemo(\\\\\\\\n  () =>\\\\\\\\n    TimelineStatusOptions.findIndex((i) => i.value.status === timeline.status),\\\\\\\\n  [timeline]\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst TimelineItems = ({ title, children, value, values }) => {\\\\\\\\n  const indexOfCurrentItem = TimelineStatusOptions.findIndex((i) =>\\\\\\\\n    Array.isArray(values)\\\\\\\\n      ? values.includes(i.value.status)\\\\\\\\n      : value === i.value.status\\\\\\\\n  );\\\\\\\\n  let color = \\\\\\\\\\\\\\\"transparent\\\\\\\\\\\\\\\";\\\\\\\\n  let statusIndex = selectedTimelineStatusIndex;\\\\\\\\n  // index 2,3 is of decision\\\\\\\\n  if (selectedTimelineStatusIndex === 3) {\\\\\\\\n    statusIndex = 2;\\\\\\\\n  }\\\\\\\\n  if (statusIndex === indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FEF6EE\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  if (statusIndex > indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#EEFEF0\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // cancelled\\\\\\\\n  if (\\\\\\\\n    statusIndex === 2 &&\\\\\\\\n    (values ?? []).includes(RFP_TIMELINE_STATUS.CANCELLED) &&\\\\\\\\n    timeline.status === RFP_TIMELINE_STATUS.CANCELLED\\\\\\\\n  ) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"p-2 rounded-3\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        backgroundColor: color,\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 text-black\\\\\\\\\\\\\\\"> {title}</div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n    {!disabled && (\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n        <h6 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Status</h6>\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.DropDown`}\\\\\\\\n          props={{\\\\\\\\n            options: TimelineStatusOptions,\\\\\\\\n            selectedValue: TimelineStatusOptions.find(\\\\\\\\n              (i) => i.value.status === timeline.status\\\\\\\\n            ),\\\\\\\\n            onUpdate: (v) => {\\\\\\\\n              setTimeline({ status: v.value.status });\\\\\\\\n            },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-3 mt-2\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column mt-4\\\\\\\\\\\\\\\">\\\\\\\\n        {stepsArray.map((_, index) => {\\\\\\\\n          const indexOfCurrentItem = index;\\\\\\\\n          let color = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n          let statusIndex = selectedTimelineStatusIndex;\\\\\\\\n          // index 2,3 is of decision\\\\\\\\n          if (selectedTimelineStatusIndex === 3) {\\\\\\\\n            statusIndex = 2;\\\\\\\\n          }\\\\\\\\n          const current = statusIndex === indexOfCurrentItem;\\\\\\\\n          const completed =\\\\\\\\n            statusIndex > indexOfCurrentItem ||\\\\\\\\n            timeline.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED ||\\\\\\\\n            timeline.status === RFP_TIMELINE_STATUS.CANCELLED;\\\\\\\\n          return (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n              <div\\\\\\\\n                className={\\\\\\\\n                  \\\\\\\\\\\\\\\"circle-lg \\\\\\\\\\\\\\\" +\\\\\\\\n                  (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                  (current && !completed && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {completed && (\\\\\\\\n                  <div\\\\\\\\n                    className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n                    style={{ height: \\\\\\\\\\\\\\\"120%\\\\\\\\\\\\\\\" }}\\\\\\\\n                  >\\\\\\\\n                    <i className=\\\\\\\\\\\\\\\"bi bi-check\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n              {index !== stepsArray.length - 1 && (\\\\\\\\n                <div\\\\\\\\n                  className={\\\\\\\\n                    \\\\\\\\\\\\\\\"vertical-line \\\\\\\\\\\\\\\" +\\\\\\\\n                    (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                    (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                  }\\\\\\\\n                ></div>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          );\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n        <TimelineItems\\\\\\\\n          title=\\\\\\\\\\\\\\\"1) Accepting Submissions\\\\\\\\\\\\\\\"\\\\\\\\n          value={RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS}\\\\\\\\n        >\\\\\\\\n          <div>During this stage, the RFP is still open for submissions.</div>\\\\\\\\n        </TimelineItems>\\\\\\\\n        <TimelineItems\\\\\\\\n          title=\\\\\\\\\\\\\\\"2) Evaluation\\\\\\\\\\\\\\\"\\\\\\\\n          value={RFP_TIMELINE_STATUS.EVALUATION}\\\\\\\\n        >\\\\\\\\n          <div>\\\\\\\\n            This RFP is closed for submissions. All submitted proposals are\\\\\\\\n            under review.\\\\\\\\n          </div>\\\\\\\\n        </TimelineItems>\\\\\\\\n        <TimelineItems\\\\\\\\n          title=\\\\\\\\\\\\\\\"3) Decision\\\\\\\\\\\\\\\"\\\\\\\\n          values={[\\\\\\\\n            RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n            RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n          ]}\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div>Sponsor makes a final decision:</div>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n              props={{\\\\\\\\n                value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                label: <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Proposal Selected</div>,\\\\\\\\n                disabled: disabled,\\\\\\\\n                isChecked:\\\\\\\\n                  timeline.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n                onClick: (v) => {\\\\\\\\n                  if (v) {\\\\\\\\n                    setTimeline({\\\\\\\\n                      status: RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n                    });\\\\\\\\n                  }\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n              props={{\\\\\\\\n                value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                disabled: disabled,\\\\\\\\n                label: <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">RFP Cancelled</div>,\\\\\\\\n                isChecked: timeline.status === RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n                onClick: (v) => {\\\\\\\\n                  if (v) {\\\\\\\\n                    setTimeline({\\\\\\\\n                      status: RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n                    });\\\\\\\\n                  }\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </TimelineItems>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedRfpDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { linkedRfp, onChange, disabled } = props;\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst [selectedRFP, setSelectedRFP] = useState(null);\\\\\\\\nconst [acceptingRfpsOptions, setAcceptingRfpsOption] = useState([]);\\\\\\\\nconst [allRfpOptions, setAllRfpOptions] = useState([]);\\\\\\\\nconst [searchRFPId, setSearchRfpId] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [initialStateApplied, setInitialState] = useState(false);\\\\\\\\n\\\\\\\\nconst queryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n  ${queryName}(\\\\\\\\n    offset: $offset\\\\\\\\n    limit: $limit\\\\\\\\n    order_by: {rfp_id: desc}\\\\\\\\n    where: $where\\\\\\\\n  ) {\\\\\\\\n    name\\\\\\\\n    rfp_id\\\\\\\\n    timeline\\\\\\\\n  }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\nfunction separateNumberAndText(str) {\\\\\\\\n  const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n  if (numberRegex.test(str)) {\\\\\\\\n    const number = str.match(numberRegex)[0];\\\\\\\\n    const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n    return { number: parseInt(number), text };\\\\\\\\n  } else {\\\\\\\\n    return { number: null, text: str.trim() };\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst buildWhereClause = () => {\\\\\\\\n  // show only accepting submissions stage rfps\\\\\\\\n  let where = {};\\\\\\\\n  const { number, text } = separateNumberAndText(searchRFPId);\\\\\\\\n\\\\\\\\n  if (number) {\\\\\\\\n    where = { rfp_id: { _eq: number }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (text) {\\\\\\\\n    where = { name: { _ilike: `%${text}%` }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return where;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst fetchRfps = () => {\\\\\\\\n  const FETCH_LIMIT = 30;\\\\\\\\n  const variables = {\\\\\\\\n    limit: FETCH_LIMIT,\\\\\\\\n    offset: 0,\\\\\\\\n    where: buildWhereClause(),\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const rfpsData = result.body.data?.[queryName];\\\\\\\\n        const data = [];\\\\\\\\n        const acceptingData = [];\\\\\\\\n        for (const prop of rfpsData) {\\\\\\\\n          const timeline = parseJSON(prop.timeline);\\\\\\\\n          const label = \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + prop.rfp_id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + prop.name;\\\\\\\\n          const value = prop.rfp_id;\\\\\\\\n          if (timeline.status === RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS) {\\\\\\\\n            acceptingData.push({\\\\\\\\n              label,\\\\\\\\n              value,\\\\\\\\n            });\\\\\\\\n          }\\\\\\\\n          data.push({\\\\\\\\n            label,\\\\\\\\n            value,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n        setAcceptingRfpsOption(acceptingData);\\\\\\\\n        setAllRfpOptions(data);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchRfps();\\\\\\\\n}, [searchRFPId]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(linkedRfp) !== JSON.stringify(selectedRFP)) {\\\\\\\\n    if (allRfpOptions.length > 0) {\\\\\\\\n      if (typeof linkedRfp !== \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n        setSelectedRFP(allRfpOptions.find((i) => linkedRfp === i.value));\\\\\\\\n      } else {\\\\\\\\n        setSelectedRFP(linkedRfp);\\\\\\\\n      }\\\\\\\\n      setInitialState(true);\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    setInitialState(true);\\\\\\\\n  }\\\\\\\\n}, [linkedRfp, allRfpOptions]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    JSON.stringify(linkedRfp) !== JSON.stringify(selectedRFP) &&\\\\\\\\n    initialStateApplied\\\\\\\\n  ) {\\\\\\\\n    onChange(selectedRFP);\\\\\\\\n  }\\\\\\\\n}, [selectedRFP, initialStateApplied]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {selectedRFP && (\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <a\\\\\\\\n          className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n          href={href({\\\\\\\\n            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n            params: {\\\\\\\\n              page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n              id: selectedRFP.value,\\\\\\\\n            },\\\\\\\\n          })}\\\\\\\\n          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n          rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          {selectedRFP.label}\\\\\\\\n        </a>\\\\\\\\n        {!disabled && (\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => {\\\\\\\\n              setSelectedRFP(null);\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-trash3-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.DropDownWithSearch`}\\\\\\\\n      props={{\\\\\\\\n        disabled: disabled,\\\\\\\\n        selectedValue: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (v) => {\\\\\\\\n          setSelectedRFP(v);\\\\\\\\n        },\\\\\\\\n        options: isModerator ? allRfpOptions : acceptingRfpsOptions,\\\\\\\\n        showSearch: true,\\\\\\\\n        searchInputPlaceholder: \\\\\\\\\\\\\\\"Search by Id\\\\\\\\\\\\\\\",\\\\\\\\n        defaultLabel: \\\\\\\\\\\\\\\"Search RFP\\\\\\\\\\\\\\\",\\\\\\\\n        searchByValue: true,\\\\\\\\n        onSearch: (value) => {\\\\\\\\n          setSearchRfpId(value);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.ViewProposalModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst isEdit = props.isEdit;\\\\\\\\nconst proposalId = props.proposalId;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.9);\\\\\\\\n  opacity: 0.9;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 30%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">\\\\\\\\n            Your Proposal has been successfully{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            {!isEdit ? \\\\\\\\\\\\\\\"published\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"edited\\\\\\\\\\\\\\\"}.\\\\\\\\n          </h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-center mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={linkHref({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\", id: proposalId },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-blue\\\\\\\\\\\\\\\" },\\\\\\\\n                label: \\\\\\\\\\\\\\\"View Proposal\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: () => {},\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedProposalsDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst linkedProposals = props.linkedProposals;\\\\\\\\nconst onChange = props.onChange;\\\\\\\\nconst [selectedProposals, setSelectedProposals] = useState(linkedProposals);\\\\\\\\nconst [proposalsOptions, setProposalsOptions] = useState([]);\\\\\\\\nconst [searchProposalId, setSearchProposalId] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst queryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n${queryName}(\\\\\\\\n  offset: $offset\\\\\\\\n  limit: $limit\\\\\\\\n  order_by: {proposal_id: desc}\\\\\\\\n  where: $where\\\\\\\\n) {\\\\\\\\n  name\\\\\\\\n  proposal_id\\\\\\\\n}\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(linkedProposals) !== JSON.stringify(selectedProposals)) {\\\\\\\\n    setSelectedProposals(linkedProposals);\\\\\\\\n  }\\\\\\\\n}, [linkedProposals]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(linkedProposals) !== JSON.stringify(selectedProposals)) {\\\\\\\\n    onChange(selectedProposals);\\\\\\\\n  }\\\\\\\\n}, [selectedProposals]);\\\\\\\\n\\\\\\\\nfunction separateNumberAndText(str) {\\\\\\\\n  const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n  if (numberRegex.test(str)) {\\\\\\\\n    const number = str.match(numberRegex)[0];\\\\\\\\n    const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n    return { number: parseInt(number), text };\\\\\\\\n  } else {\\\\\\\\n    return { number: null, text: str.trim() };\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst buildWhereClause = () => {\\\\\\\\n  let where = {};\\\\\\\\n  const { number, text } = separateNumberAndText(searchProposalId);\\\\\\\\n\\\\\\\\n  if (number) {\\\\\\\\n    where = { proposal_id: { _eq: number }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (text) {\\\\\\\\n    where = { name: { _ilike: `%${text}%` }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return where;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst fetchProposals = () => {\\\\\\\\n  const FETCH_LIMIT = 30;\\\\\\\\n  const variables = {\\\\\\\\n    limit: FETCH_LIMIT,\\\\\\\\n    offset: 0,\\\\\\\\n    where: buildWhereClause(),\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const proposalsData = result.body.data?.[queryName];\\\\\\\\n        const data = [];\\\\\\\\n        for (const prop of proposalsData) {\\\\\\\\n          data.push({\\\\\\\\n            label: \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + prop.proposal_id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + prop.name,\\\\\\\\n            value: prop.proposal_id,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n        setProposalsOptions(data);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchProposals();\\\\\\\\n}, [searchProposalId]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {selectedProposals.map((proposal) => {\\\\\\\\n      return (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <a\\\\\\\\n            className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n            href={href({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: {\\\\\\\\n                page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                id: proposal.value,\\\\\\\\n              },\\\\\\\\n            })}\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {proposal.label}\\\\\\\\n          </a>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => {\\\\\\\\n              const updatedLinkedProposals = selectedProposals.filter(\\\\\\\\n                (item) => item.value !== proposal.value\\\\\\\\n              );\\\\\\\\n              setSelectedProposals(updatedLinkedProposals);\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-trash3-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      );\\\\\\\\n    })}\\\\\\\\n\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.DropDownWithSearch`}\\\\\\\\n      props={{\\\\\\\\n        selectedValue: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (v) => {\\\\\\\\n          if (!selectedProposals.some((item) => item.value === v.value)) {\\\\\\\\n            setSelectedProposals([...selectedProposals, v]);\\\\\\\\n          }\\\\\\\\n        },\\\\\\\\n        options: proposalsOptions,\\\\\\\\n        showSearch: true,\\\\\\\\n        searchInputPlaceholder: \\\\\\\\\\\\\\\"Search by Id\\\\\\\\\\\\\\\",\\\\\\\\n        defaultLabel: \\\\\\\\\\\\\\\"Search proposals\\\\\\\\\\\\\\\",\\\\\\\\n        searchByValue: true,\\\\\\\\n        onSearch: (value) => {\\\\\\\\n          setSearchProposalId(value);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { selected, onChange, disabled, availableOptions, hideDropdown, label } =\\\\\\\\n  props;\\\\\\\\n\\\\\\\\nconst [selectedOptions, setSelectedOptions] = useState([]);\\\\\\\\nconst [isOpen, setIsOpen] = useState(false);\\\\\\\\nconst [initialStateApplied, setInitialState] = useState(false);\\\\\\\\n\\\\\\\\nconst toggleDropdown = () => {\\\\\\\\n  setIsOpen(!isOpen);\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(selectedOptions) !== JSON.stringify(selected)) {\\\\\\\\n    if (availableOptions.length > 0) {\\\\\\\\n      if ((selected ?? []).some((i) => !i.value)) {\\\\\\\\n        setSelectedOptions(\\\\\\\\n          selected.map((i) => availableOptions.find((t) => t.value === i))\\\\\\\\n        );\\\\\\\\n      } else {\\\\\\\\n        setSelectedOptions(selected);\\\\\\\\n      }\\\\\\\\n      setInitialState(true);\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    setInitialState(true);\\\\\\\\n  }\\\\\\\\n}, [selected, availableOptions]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    JSON.stringify(selectedOptions) !== JSON.stringify(selected) &&\\\\\\\\n    initialStateApplied\\\\\\\\n  ) {\\\\\\\\n    onChange(selectedOptions);\\\\\\\\n  }\\\\\\\\n}, [selectedOptions, initialStateApplied]);\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .drop-btn {\\\\\\\\n    width: 100%;\\\\\\\\n    text-align: left;\\\\\\\\n    padding-inline: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 2%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item.active,\\\\\\\\n  .dropdown-item:active {\\\\\\\\n    background-color: #f0f0f0 !important;\\\\\\\\n    color: black;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f8f8f8 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    border-radius: 5px;\\\\\\\\n    opacity: inherit !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled.dropdown-toggle::after {\\\\\\\\n    display: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst handleOptionClick = (option) => {\\\\\\\\n  if (!selectedOptions.some((item) => item.value === option.value)) {\\\\\\\\n    setSelectedOptions([...selectedOptions, option]);\\\\\\\\n  }\\\\\\\\n  setIsOpen(false);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Item = ({ option }) => {\\\\\\\\n  return <div> {option.title}</div>;\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      {(selectedOptions ?? []).map((option) => {\\\\\\\\n        return (\\\\\\\\n          <div\\\\\\\\n            style={{\\\\\\\\n              color: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n              backgroundColor: `rgb(${option.color})`,\\\\\\\\n              width: \\\\\\\\\\\\\\\"max-content\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n            className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center badge rounded-lg p-2 h6 mb-0\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {option.title}\\\\\\\\n            {!disabled && (\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n                onClick={() => {\\\\\\\\n                  const updatedOptions = selectedOptions.filter(\\\\\\\\n                    (item) => item.value !== option.value\\\\\\\\n                  );\\\\\\\\n                  setSelectedOptions(updatedOptions);\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <i className=\\\\\\\\\\\\\\\"bi bi-trash3-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </div>\\\\\\\\n        );\\\\\\\\n      })}\\\\\\\\n    </div>\\\\\\\\n    {!hideDropdown && (\\\\\\\\n      <Container>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"custom-select w-100\\\\\\\\\\\\\\\"\\\\\\\\n          tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n          onBlur={() => setIsOpen(false)}\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"dropdown-toggle bg-white border rounded-2 btn drop-btn w-100 \\\\\\\\\\\\\\\" +\\\\\\\\n              (disabled ? \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n            onClick={!disabled && toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <div className={`selected-option`}>\\\\\\\\n              {label ?? \\\\\\\\\\\\\\\"Select Category\\\\\\\\\\\\\\\"}\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n\\\\\\\\n          {isOpen && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"dropdown-menu rounded-2 dropdown-menu-end dropdown-menu-lg-start px-2 shadow show w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div>\\\\\\\\n                {(availableOptions ?? []).map((option) => (\\\\\\\\n                  <div\\\\\\\\n                    key={option.value}\\\\\\\\n                    className={`dropdown-item cursor-pointer w-100 my-1 ${\\\\\\\\n                      (selectedOptions ?? []).find(\\\\\\\\n                        (item) => item.value === option.value\\\\\\\\n                      )\\\\\\\\n                        ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\"\\\\\\\\n                        : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                    }`}\\\\\\\\n                    onClick={() => handleOptionClick(option)}\\\\\\\\n                  >\\\\\\\\n                    <Item option={option} />\\\\\\\\n                  </div>\\\\\\\\n                ))}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Container>\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 9.8354267324508e+21
    }
  },
  {
    "id": "5335645773",
    "receipt_id": "BBUGkizPRMv9HBEJ4tgi5uAeAH4ACR7Dey1dugjyvp84",
    "predecessor_account_id": "system",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2hRDDD1teEe5Vpa4ATh9fPCAESPS1NdCLsYacjWSSgq9",
      "block_height": 120367765,
      "block_timestamp": 1717442487854686500
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "Dnb4EUHfNTUAkajnLXEvUYfdwhPtB1t7uHDvVXUJe75D",
    "included_in_block_hash": "GsuRU7wFhkH2C2PV1EBEjLU4EsXpsfp2xmNhzHiinGCk",
    "block_timestamp": "1717442485481501197",
    "block": {
      "block_height": 120367763
    },
    "receipt_conversion_tokens_burnt": "117582101353200000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.788916662407133e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 9.8354267324508e+21
    }
  },
  {
    "id": "5381516296",
    "receipt_id": "DcUApNMdcPjDh3pcLdhA1AHuQXpQ9Lpr4XYbuAXssAEp",
    "predecessor_account_id": "infrastructure-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5NsbLyw88qcG6dYVFT9oWaKW8CbXNZk2Fp1y8DiA6Yn7",
      "block_height": 120419003,
      "block_timestamp": 1717502833989930200
    },
    "receipt_outcome": {
      "gas_burnt": 10905071575715,
      "tokens_burnt": 1.0905071575715e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "A8abFXFUFiF4VbhcmB7svuKHJ9mLEipfxr5hiyKcJcNj",
    "included_in_block_hash": "3sekvPMTUseqLke2LxLQd4b7duh9LdxnLA6zTXqAeDXv",
    "block_timestamp": "1717502832724206034",
    "block": {
      "block_height": 120419002
    },
    "receipt_conversion_tokens_burnt": "40146340691600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.0905071575715e+21,
        "args": "{\"data\": {\"infrastructure-committee.near\": {\"widget\": {\"near-prpsls-bos.components.proposals.Editor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst { id, timestamp, rfp_id } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://near.social/${REPL_DEVHUB}/widget/app?page=community&handle=developer-dao&tab=funding\\\\\\\\\\\\\\\";\\\\\\\\nconst ToCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst CoCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nif (!author) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LoginScreen`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nlet editProposalData = null;\\\\\\\\nlet draftProposalData = null;\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_PROPOSAL_EDIT\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editProposalData = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id: parseInt(id),\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  input {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .h6 {\\\\\\\\n      font-size: 14px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .text-sm {\\\\\\\\n      font-size: 11px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #03ba16 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst tokensOptions = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\" },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"OTHER\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst [linkedRfp, setLinkedRfp] = useState(rfp_id ? parseInt(rfp_id) : null);\\\\\\\\nconst [labels, setLabels] = useState([]);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [linkedProposals, setLinkedProposals] = useState([]);\\\\\\\\nconst [receiverAccount, setReceiverAccount] = useState(context.accountId);\\\\\\\\nconst [requestedSponsorshipAmount, setRequestedSponsorshipAmount] =\\\\\\\\n  useState(null);\\\\\\\\nconst [requestedSponsorshipToken, setRequestedSponsorshipToken] = useState(\\\\\\\\n  tokensOptions[2]\\\\\\\\n);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\nconst [selectedStatus, setSelectedStatus] = useState(\\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\");\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\n\\\\\\\\nconst [showProposalViewModal, setShowProposalViewModal] = useState(false); // when user creates/edit a proposal and confirm the txn, this is true\\\\\\\\nconst [proposalId, setProposalId] = useState(null);\\\\\\\\nconst [proposalIdsArray, setProposalIdsArray] = useState(null);\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [oldProposalData, setOldProposalData] = useState(null);\\\\\\\\nconst [supervisor, setSupervisor] = useState(null);\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftProposalData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editProposalData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      linked_rfp: linkedRfp,\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      labels: labels,\\\\\\\\n      summary: summary,\\\\\\\\n      requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n      requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n      receiver_account: receiverAccount,\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [\\\\\\\\n    linkedRfp,\\\\\\\\n    title,\\\\\\\\n    summary,\\\\\\\\n    description,\\\\\\\\n    labels,\\\\\\\\n    requestedSponsorshipAmount,\\\\\\\\n    requestedSponsorshipToken,\\\\\\\\n    receiverAccount,\\\\\\\\n  ]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (allowDraft) {\\\\\\\\n    let data = editProposalData || JSON.parse(draftProposalData);\\\\\\\\n    let snapshot = data.snapshot;\\\\\\\\n    if (data) {\\\\\\\\n      if (timestamp) {\\\\\\\\n        snapshot =\\\\\\\\n          data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n          data.snapshot;\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        draftProposalData &&\\\\\\\\n        editProposalData &&\\\\\\\\n        editProposalData.id === JSON.parse(draftProposalData).id\\\\\\\\n      ) {\\\\\\\\n        snapshot = {\\\\\\\\n          ...editProposalData.snapshot,\\\\\\\\n          ...JSON.parse(draftProposalData).snapshot,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n      if (!isNumber(linkedRfp)) {\\\\\\\\n        setLinkedRfp(snapshot.linked_rfp);\\\\\\\\n      }\\\\\\\\n      setLabels(snapshot.labels ?? []);\\\\\\\\n      setTitle(snapshot.name);\\\\\\\\n      setSummary(snapshot.summary);\\\\\\\\n      setDescription(snapshot.description);\\\\\\\\n      setReceiverAccount(snapshot.receiver_account);\\\\\\\\n      setRequestedSponsorshipAmount(snapshot.requested_sponsorship_usd_amount);\\\\\\\\n      setSupervisor(snapshot.supervisor);\\\\\\\\n\\\\\\\\n      const token = tokensOptions.find(\\\\\\\\n        (item) => item.value === snapshot.requested_sponsorship_paid_in_currency\\\\\\\\n      );\\\\\\\\n      setRequestedSponsorshipToken(token ?? tokensOptions[2]);\\\\\\\\n      if (isEditPage) {\\\\\\\\n        setConsent({ toc: true, coc: true });\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [editProposalData, draftProposalData, allowDraft]);\\\\\\\\n\\\\\\\\n// show loader until LS data is set in state\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n    setLoading(false);\\\\\\\\n  }, 500);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (showProposalViewModal) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  setDisabledSubmitBtn(\\\\\\\\n    isTxnCreated ||\\\\\\\\n      !title ||\\\\\\\\n      !description ||\\\\\\\\n      !summary ||\\\\\\\\n      !(labels ?? []).length ||\\\\\\\\n      !requestedSponsorshipAmount ||\\\\\\\\n      !receiverAccount ||\\\\\\\\n      !consent.toc ||\\\\\\\\n      !consent.coc\\\\\\\\n  );\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 10000);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, [\\\\\\\\n  memoizedDraftData,\\\\\\\\n  draftKey,\\\\\\\\n  draftProposalData,\\\\\\\\n  consent,\\\\\\\\n  isTxnCreated,\\\\\\\\n  showProposalViewModal,\\\\\\\\n]);\\\\\\\\n\\\\\\\\n// set RFP labels, disable link rfp change when linked rfp is past accepting stage\\\\\\\\nconst [disabledLinkRFP, setDisableLinkRFP] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (linkedRfp) {\\\\\\\\n    Near.asyncView(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n      rfp_id: linkedRfp.value ?? linkedRfp,\\\\\\\\n    }).then((i) => {\\\\\\\\n      const timeline = parseJSON(i.snapshot.timeline);\\\\\\\\n      setDisableLinkRFP(\\\\\\\\n        !isModerator &&\\\\\\\\n          timeline.status !== RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS\\\\\\\\n      );\\\\\\\\n      setLabels(i.snapshot.labels);\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [linkedRfp]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    editProposalData &&\\\\\\\\n    editProposalData?.snapshot?.linked_proposals?.length > 0\\\\\\\\n  ) {\\\\\\\\n    editProposalData.snapshot.linked_proposals.map((item) => {\\\\\\\\n      useCache(\\\\\\\\n        () =>\\\\\\\\n          Near.asyncView(\\\\\\\\n            REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n            \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n            {\\\\\\\\n              proposal_id: parseInt(item),\\\\\\\\n            }\\\\\\\\n          ).then((proposal) => {\\\\\\\\n            setLinkedProposals([\\\\\\\\n              ...linkedProposals,\\\\\\\\n              {\\\\\\\\n                label: \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + proposal.id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + proposal.snapshot.name,\\\\\\\\n                value: proposal.id,\\\\\\\\n              },\\\\\\\\n            ]);\\\\\\\\n          }),\\\\\\\\n        item + \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\",\\\\\\\\n        { subscribe: false }\\\\\\\\n      );\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [editProposalData]);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n// show proposal created after txn approval for popup wallet\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isTxnCreated) {\\\\\\\\n    if (editProposalData) {\\\\\\\\n      setOldProposalData(editProposalData);\\\\\\\\n      if (\\\\\\\\n        editProposalData &&\\\\\\\\n        typeof editProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        oldProposalData &&\\\\\\\\n        typeof oldProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        JSON.stringify(editProposalData) !== JSON.stringify(oldProposalData)\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(editProposalData.id);\\\\\\\\n        setShowProposalViewModal(true);\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      const proposalIds = Near.view(\\\\\\\\n        REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      if (Array.isArray(proposalIds) && !proposalIdsArray) {\\\\\\\\n        setProposalIdsArray(proposalIds);\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        Array.isArray(proposalIds) &&\\\\\\\\n        Array.isArray(proposalIdsArray) &&\\\\\\\\n        proposalIds.length !== proposalIdsArray.length\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(proposalIds[proposalIds.length - 1]);\\\\\\\\n        setShowProposalViewModal(true);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  setLoading(false);\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes) {\\\\\\\\n    setLoading(true);\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(REPL_RPC_URL, {\\\\\\\\n          method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n          headers: {\\\\\\\\n            \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          body: JSON.stringify({\\\\\\\\n            jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n            id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n            method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n            params: [props.transactionHashes, context.accountId],\\\\\\\\n          }),\\\\\\\\n        }).then((transaction) => {\\\\\\\\n          const transaction_method_name =\\\\\\\\n            transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n              .method_name;\\\\\\\\n\\\\\\\\n          const is_edit_or_add_post_transaction =\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\" ||\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n          if (is_edit_or_add_post_transaction) {\\\\\\\\n            setShowProposalViewModal(true);\\\\\\\\n            Storage.privateSet(draftKey, null);\\\\\\\\n          }\\\\\\\\n          // show the latest created proposal to user\\\\\\\\n          if (transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\") {\\\\\\\\n            useCache(\\\\\\\\n              () =>\\\\\\\\n                Near.asyncView(\\\\\\\\n                  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n                  \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n                ).then((proposalIdsArray) => {\\\\\\\\n                  setProposalId(\\\\\\\\n                    proposalIdsArray?.[proposalIdsArray?.length - 1]\\\\\\\\n                  );\\\\\\\\n                }),\\\\\\\\n              props.transactionHashes + \\\\\\\\\\\\\\\"proposalIds\\\\\\\\\\\\\\\",\\\\\\\\n              { subscribe: false }\\\\\\\\n            );\\\\\\\\n          } else {\\\\\\\\n            setProposalId(id);\\\\\\\\n          }\\\\\\\\n          setLoading(false);\\\\\\\\n        }),\\\\\\\\n      props.transactionHashes + context.accountId,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  } else {\\\\\\\\n    if (showProposalViewModal) {\\\\\\\\n      setShowProposalViewModal(false);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst DropdowntBtnContainer = styled.div`\\\\\\\\n  font-size: 13px;\\\\\\\\n  min-width: 150px;\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .select-header {\\\\\\\\n    display: flex;\\\\\\\\n    justify-content: space-between;\\\\\\\\n    align-items: center;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    border-radius-top: 5px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    background-color: #fff;\\\\\\\\n    border-radius: 5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .no-border {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .options-card {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 0;\\\\\\\\n    width: 200%;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    background-color: #fff;\\\\\\\\n    padding: 0.5rem;\\\\\\\\n    z-index: 99;\\\\\\\\n    font-size: 13px;\\\\\\\\n    border-radius:0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .left {\\\\\\\\n    right: 0 !important;\\\\\\\\n    left: auto !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .options-card {\\\\\\\\n      right: 0 !important;\\\\\\\\n      left: auto !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option {\\\\\\\\n    margin-block: 5px;\\\\\\\\n    padding: 10px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    border-bottom: 1px solid #f0f0f0;\\\\\\\\n    transition: background-color 0.3s ease;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:hover {\\\\\\\\n    background-color: #f0f0f0; /* Custom hover effect color */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:last-child {\\\\\\\\n    border-bottom: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f4f4f4 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    font-weight: 500;\\\\\\\\n    color: #b3b3b3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 8px;\\\\\\\\n    height: 8px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green {\\\\\\\\n    background-color: #04a46e;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"submit-proposal-draft-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SubmitBtn = () => {\\\\\\\\n  const btnOptions = [\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Submit Draft\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"The author can still edit the proposal and build consensus before sharing it with sponsors.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Ready for Review\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"Start the official review process with sponsors. This will lock the editing function, but comments are still open.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"review\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  const handleOptionClick = (option) => {\\\\\\\\n    setDraftBtnOpen(false);\\\\\\\\n    setSelectedStatus(option.value);\\\\\\\\n    handleSubmit(option.value);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const toggleDropdown = () => {\\\\\\\\n    setDraftBtnOpen(!isDraftBtnOpen);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const handleSubmit = (status) => {\\\\\\\\n    const isDraft = status === \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\";\\\\\\\\n    if (isDraft) {\\\\\\\\n      onSubmit({ isDraft });\\\\\\\\n      cleanDraft();\\\\\\\\n    } else {\\\\\\\\n      setReviewModal(true);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <DropdowntBtnContainer>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"custom-select\\\\\\\\\\\\\\\"\\\\\\\\n        tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n        onBlur={() => setDraftBtnOpen(false)}\\\\\\\\n      >\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\n            \\\\\\\\\\\\\\\"select-header d-flex gap-1 align-items-center submit-draft-button \\\\\\\\\\\\\\\" +\\\\\\\\n            (disabledSubmitBtn && \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\")\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            onClick={() => !disabledSubmitBtn && handleSubmit(selectedStatus)}\\\\\\\\n            className=\\\\\\\\\\\\\\\"p-2 d-flex gap-2 align-items-center \\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {isTxnCreated ? (\\\\\\\\n              LoadingButtonSpinner\\\\\\\\n            ) : (\\\\\\\\n              <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + selectedOption.iconColor}></div>\\\\\\\\n            )}\\\\\\\\n            <div className={`selected-option`}>{selectedOption.label}</div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"h-100 p-2\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ borderLeft: \\\\\\\\\\\\\\\"1px solid #ccc\\\\\\\\\\\\\\\" }}\\\\\\\\n            onClick={!disabledSubmitBtn && toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <i class={`bi bi-chevron-${isDraftBtnOpen ? \\\\\\\\\\\\\\\"up\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\"}`}></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {isDraftBtnOpen && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"options-card\\\\\\\\\\\\\\\">\\\\\\\\n            {btnOptions.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`option ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n              >\\\\\\\\n                <div className={`d-flex gap-2 align-items-center`}>\\\\\\\\n                  <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + option.iconColor}></div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">{option.label}</div>\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-muted text-xs\\\\\\\\\\\\\\\">{option.description}</div>\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </DropdowntBtnContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst onSubmit = ({ isDraft, isCancel }) => {\\\\\\\\n  setCreateTxn(true);\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"submitting transaction\\\\\\\\\\\\\\\");\\\\\\\\n  const linkedProposalsIds = linkedProposals.map((item) => item.value) ?? [];\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    linked_rfp: linkedRfp?.value,\\\\\\\\n    category: \\\\\\\\\\\\\\\"Infrastructure Committee\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    summary: summary,\\\\\\\\n    linked_proposals: linkedProposalsIds,\\\\\\\\n    requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n    requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n    receiver_account: receiverAccount,\\\\\\\\n    requested_sponsor: \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\",\\\\\\\\n    supervisor: supervisor,\\\\\\\\n    timeline: isCancel\\\\\\\\n      ? {\\\\\\\\n          status: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        }\\\\\\\\n      : isDraft\\\\\\\\n      ? { status: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\" }\\\\\\\\n      : {\\\\\\\\n          status: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        },\\\\\\\\n  };\\\\\\\\n  const args = {\\\\\\\\n    labels: linkedRfp ? [] : (labels ?? []).map((i) => i.value ?? i),\\\\\\\\n    body: body,\\\\\\\\n  };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editProposalData.id;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [collapseState, setCollapseState] = useState({});\\\\\\\\n\\\\\\\\nconst CollapsibleContainer = ({ title, children, noPaddingTop }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"border-bottom py-4 \\\\\\\\\\\\\\\" +\\\\\\\\n        (noPaddingTop && \\\\\\\\\\\\\\\"pt-0 \\\\\\\\\\\\\\\") +\\\\\\\\n        (collapseState[title] && \\\\\\\\\\\\\\\" pb-0\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className={\\\\\\\\\\\\\\\"d-flex justify-content-between \\\\\\\\\\\\\\\"}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-2 mb-sm-3\\\\\\\\\\\\\\\">{title}</div>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex d-sm-none cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() =>\\\\\\\\n            setCollapseState((prevState) => ({\\\\\\\\n              ...prevState,\\\\\\\\n              [title]: !prevState[title],\\\\\\\\n            }))\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          {!collapseState[title] ? (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-up h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          ) : (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-down h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className={!collapseState[title] ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"}>{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategoryDropdown = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n      props={{\\\\\\\\n        selected: labels,\\\\\\\\n        onChange: (v) => setLabels(v),\\\\\\\\n        disabled: linkedRfp, // when RFP is linked, labels are disabled\\\\\\\\n        label: linkedRfp\\\\\\\\n          ? \\\\\\\\\\\\\\\"These categories are inherited from your selected RFP and can\\\\\\\\u{2019}t change\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"Select Category\\\\\\\\\\\\\\\",\\\\\\\\n        availableOptions: rfpLabelOptions,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData, linkedRfp, labels]);\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setTitle(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 80,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst SummaryComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: summary,\\\\\\\\n        multiline: true,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSummary(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 500,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst DescriptionComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: description,\\\\\\\\n        onChange: setDescription,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        autoFocus: false,\\\\\\\\n        showProposalIdAutoComplete: true,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ConsentComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"toc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={ToCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Infrastructure Committee\\\\\\\\u{2019}s Terms and Conditions\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.toc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              toc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"coc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={CoCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Infrastructure Committee\\\\\\\\u{2019}s Code of Conduct\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.coc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              coc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ProfileComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"mob.near/widget/Profile.ShortInlineBlock\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        accountId: author,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst LinkRFPComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedRfpDropdown`}\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedRfp,\\\\\\\\n          linkedRfp: linkedRfp,\\\\\\\\n          disabled: disabledLinkRFP,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData, disabledLinkRFP]);\\\\\\\\n\\\\\\\\nconst LinkedProposalsComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">\\\\\\\\n        Link any relevant proposals (e.g. previous milestones).\\\\\\\\n      </div>\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposalsDropdown`}\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedProposals,\\\\\\\\n          linkedProposals: linkedProposals,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ReceiverAccountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.AccountInput`}\\\\\\\\n      props={{\\\\\\\\n        value: receiverAccount,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Enter Address\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: setReceiverAccount,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst AmountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: requestedSponsorshipAmount,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          setRequestedSponsorshipAmount(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\",\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"$\\\\\\\\\\\\\\\",\\\\\\\\n          inputmode: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\",\\\\\\\\n          pattern: \\\\\\\\\\\\\\\"[0-9]*\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst CurrencyComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n      props={{\\\\\\\\n        options: tokensOptions,\\\\\\\\n        selectedValue: requestedSponsorshipToken,\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setRequestedSponsorshipToken(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-0 px-sm-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    <Heading className=\\\\\\\\\\\\\\\"px-2 px-sm-0\\\\\\\\\\\\\\\">\\\\\\\\n      {isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} Proposal\\\\\\\\n    </Heading>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.ViewProposalModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: showProposalViewModal,\\\\\\\\n        isEdit: isEditPage,\\\\\\\\n        proposalId: proposalId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmReviewModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          cleanDraft();\\\\\\\\n          onSubmit({ isDraft: false });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onSubmit({ isCancel: true });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 px-2 p-lg-0 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4 d-flex flex-wrap gap-6 w-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-2 w-100 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n                props={{\\\\\\\\n                  accountId: author,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Link RFP (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    \\\\\\\\\\\\\\\"Link this proposal if it is a response to a specific RFP. You can only link to active RFPs in the \\\\\\\\u{201c}Accepting Submission\\\\\\\\u{201d} stage. You can only link to one RFP.\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {LinkRFPComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Select the relevant categories that best align with your\\\\\\\\n                    contribution to the NEAR developer community. Need guidance?\\\\\\\\n                    See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href={FundingDocs}\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Funding Docs\\\\\\\\n                    </a>\\\\\\\\n                    .\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {CategoryDropdown}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Highlight the essence of your proposal in a few words. This will appear on your proposal\\\\\\\\u{2019}s detail page and the main proposal feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {TitleComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Explain your proposal briefly. This is your chance to make a good first impression on the community. Include what needs or goals your work will address, your solution, and the benefit for the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SummaryComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Expand on your summary with any relevant details like your\\\\\\\\n                    contribution timeline, key milestones, team background, and\\\\\\\\n                    a clear breakdown of how the funds will be used. Proposals\\\\\\\\n                    should be simple and clear (e.g. 1 month). For more complex\\\\\\\\n                    projects, treat each milestone as a separate proposal.\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {DescriptionComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\">\\\\\\\\n                {ConsentComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <div>\\\\\\\\n                  {isEditPage && (\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                          </div>\\\\\\\\n                        ),\\\\\\\\n                        onClick: () => setCancelModal(true),\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n                <div\\\\\\\\n                  className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\"\\\\\\\\n                  style={{\\\\\\\\n                    height: isDraftBtnOpen ? \\\\\\\\\\\\\\\"25vh\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"auto\\\\\\\\\\\\\\\",\\\\\\\\n                    alignItems: isDraftBtnOpen ? \\\\\\\\\\\\\\\"flex-start\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                >\\\\\\\\n                  <Link\\\\\\\\n                    to={\\\\\\\\n                      isEditPage\\\\\\\\n                        ? href({\\\\\\\\n                            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                              id: parseInt(id),\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                        : href({\\\\\\\\n                            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                    }\\\\\\\\n                  >\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                        onClick: cleanDraft,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </Link>\\\\\\\\n                  <SubmitBtn />\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-1 w-100 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <CollapsibleContainer noPaddingTop={true} title=\\\\\\\\\\\\\\\"Author Details\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                {ProfileComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n            </div>\\\\\\\\n          </CollapsibleContainer>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Link Proposals (Optional)\\\\\\\\\\\\\\\">\\\\\\\\n              {LinkedProposalsComponent}\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Funding Details\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Recipient NEAR Wallet Address\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Enter the address that will receive the funds. We\\\\\\\\u{2019}ll need this to send a test transaction once your proposal is approved.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {ReceiverAccountComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading={\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Recipient Verification Status\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"custom-tooltip\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-info-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        <span class=\\\\\\\\\\\\\\\"tooltiptext\\\\\\\\\\\\\\\">\\\\\\\\n                          To get approved and receive payments on our platform,\\\\\\\\n                          you must complete KYC/KYB verification using Fractal,\\\\\\\\n                          a trusted identity verification solution. This helps\\\\\\\\n                          others trust transactions with your account. Click\\\\\\\\n                          \\\\\\\\\\\\\\\"Get Verified\\\\\\\\\\\\\\\" to start. <br />\\\\\\\\n                          <br />\\\\\\\\n                          Once verified, your profile will display a badge,\\\\\\\\n                          which is valid for 365 days from the date of your\\\\\\\\n                          verification. You must renew your verification upon\\\\\\\\n                          expiration OR if any of your personal information\\\\\\\\n                          changes.\\\\\\\\n                        </span>\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  }\\\\\\\\n                  description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"border border-1 p-3 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.VerificationStatus`}\\\\\\\\n                      props={{\\\\\\\\n                        receiverAccount: receiverAccount,\\\\\\\\n                        showGetVerifiedBtn: true,\\\\\\\\n                        imageSize: 30,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Total Amount (USD)\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    <>\\\\\\\\n                      Enter the exact amount you are seeking. See\\\\\\\\n                      <a\\\\\\\\n                        href={FundingDocs}\\\\\\\\n                        className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        Funding Documentation\\\\\\\\n                      </a>\\\\\\\\n                      for guidelines.\\\\\\\\n                    </>\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {AmountComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Currency\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Select your preferred currency for receiving funds. Note: The exchange rate for NEAR tokens will be the closing rate at the day of the invoice.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {CurrencyComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.1306534982631e+21
    }
  },
  {
    "id": "5381517882",
    "receipt_id": "45UdFwkzxvPRDpuYdybxFkCgpLpu9jeAzzwHmxbgzi3k",
    "predecessor_account_id": "system",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9yrhCX38rc6Cozy4UsS57miyZyLRTfrn2W1zUZSkrHZ5",
      "block_height": 120419004,
      "block_timestamp": 1717502835381717000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "A8abFXFUFiF4VbhcmB7svuKHJ9mLEipfxr5hiyKcJcNj",
    "included_in_block_hash": "3sekvPMTUseqLke2LxLQd4b7duh9LdxnLA6zTXqAeDXv",
    "block_timestamp": "1717502832724206034",
    "block": {
      "block_height": 120419002
    },
    "receipt_conversion_tokens_burnt": "40146340691600000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.870349991010619e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.1306534982631e+21
    }
  },
  {
    "id": "5384746159",
    "receipt_id": "GES9bDSWzqNaQvYAgcG5xZbDRCtJ1GQ8Sdyg1Ws56XzT",
    "predecessor_account_id": "trechriron71.near",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8EfvGX8WhgDbnjxb8ubyHbnPpQY1Vov45nSyHVNvJSns",
      "block_height": 120425719,
      "block_timestamp": 1717511280992900000
    },
    "receipt_outcome": {
      "gas_burnt": 2949064433516,
      "tokens_burnt": 294906443351600000000,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "B46y2Ki4N4kVRTxyhQN4coyViB9uA13EnczCNmqmABGc",
    "included_in_block_hash": "5N91ZS65iX4cjM6xJAxCzpnz1mspV6EBKPWCttYrKPjG",
    "block_timestamp": "1717511279827073185",
    "block": {
      "block_height": 120425718
    },
    "receipt_conversion_tokens_burnt": "30892033459000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_member",
        "deposit": 0,
        "fee": 294906443351600000000,
        "args": "{\"member\": \"team:moderators\", \"metadata\": {\"parents\": [], \"children\": [\"polyprogrammist.near\", \"trechriron71.near\", \"megha19.near\", \"frol.near\", \"petersalomonsen.near\", \"flmel.near\", \"theori.near\", \"pivortex.near\"], \"description\": \"The moderator group has permissions to create and edit RFPs, edit and manage proposals, and manage admins.\", \"permissions\": {}, \"member_metadata_version\": \"V0\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 325798476810600000000
    }
  },
  {
    "id": "5384889169",
    "receipt_id": "3mqx79RNTiCxuFeBm6rgrHxEMP8y4j6r66Z9rjKpj1NP",
    "predecessor_account_id": "infrastructure-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9cTvMSZxEf7UuPXsiNbsSTutJ166xnTSLSqEaQzvZrfe",
      "block_height": 120426104,
      "block_timestamp": 1717511734144383200
    },
    "receipt_outcome": {
      "gas_burnt": 31876537720839,
      "tokens_burnt": 3.1876537720839e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "9uqi7eq5BFakEb7fWc3JnpQa2cFRU5jMHG1qk2otZHQi",
    "included_in_block_hash": "8HvgM6sq9fU2v6HiC2QadS9WQxyfBAwiA1y8dfzoD1C",
    "block_timestamp": "1717511733025530815",
    "block": {
      "block_height": 120426103
    },
    "receipt_conversion_tokens_burnt": "64681691660400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 3.1876537720839e+21,
        "args": "{\"data\": {\"infrastructure-committee.near\": {\"widget\": {\"near-prpsls-bos.components.rfps.Rfp\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`) || {\\\\\\\\n  href: () => {},\\\\\\\\n};\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst accountId = context.accountId;\\\\\\\\n/*\\\\\\\\n  ---props---\\\\\\\\n  props.id: number;\\\\\\\\n  props.timestamp: number; optional\\\\\\\\n  accountId: string\\\\\\\\n  blockHeight:number\\\\\\\\n  */\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .description-box {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .accept-submission-info-container {\\\\\\\\n    background-color: #ecf8fb;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-3 {\\\\\\\\n    flex: 3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 20px;\\\\\\\\n    height: 20px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 180px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 135px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 180px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 75px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line-sm {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 70px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:disabled ~ .form-check-label,\\\\\\\\n  .form-check-input[disabled] ~ .form-check-label {\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input {\\\\\\\\n    border-color: black !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-btn {\\\\\\\\n    background-color: #687076;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-btn {\\\\\\\\n    background-color: #3c697d;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #3c697d !important;\\\\\\\\n    border-color: #3c697d !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-vertical {\\\\\\\\n    border-top: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n    border-bottom: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  button.px-0 {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  red-icon i {\\\\\\\\n    color: red;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  input[type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"] {\\\\\\\\n    min-width: 13px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst RfpContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Text = styled.p`\\\\\\\\n  display: block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 20px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  white-space: nowrap;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 12px;\\\\\\\\n  margin: -6px -6px 6px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst LinkProfile = ({ account, children }) => {\\\\\\\\n  return (\\\\\\\\n    <Link href={`/near/widget/ProfilePage?accountId=${account}`}>\\\\\\\\n      {children}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [snapshotHistory, setSnapshotHistory] = useState([]);\\\\\\\\n\\\\\\\\nconst rfp = Near.view(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n  rfp_id: parseInt(id),\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst queryName = RFP_INDEXER_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n  ${queryName}(\\\\\\\\n    offset: $offset\\\\\\\\n    limit: $limit\\\\\\\\n    order_by: {ts: asc}\\\\\\\\n    where: $where\\\\\\\\n  ) {\\\\\\\\n    editor_id\\\\\\\\n    name\\\\\\\\n    summary\\\\\\\\n    description\\\\\\\\n    ts\\\\\\\\n    rfp_id\\\\\\\\n    timeline\\\\\\\\n    labels\\\\\\\\n    submission_deadline\\\\\\\\n    linked_proposals\\\\\\\\n  }\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst fetchSnapshotHistory = () => {\\\\\\\\n  const variables = {\\\\\\\\n    where: { rfp_id: { _eq: id } },\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const data = result.body.data?.[queryName];\\\\\\\\n        const history = data.map((item) => {\\\\\\\\n          const rfpData = {\\\\\\\\n            ...item,\\\\\\\\n            timestamp: item.ts,\\\\\\\\n            timeline: parseJSON(item.timeline),\\\\\\\\n          };\\\\\\\\n          delete rfpData.ts;\\\\\\\\n          return rfpData;\\\\\\\\n        });\\\\\\\\n        setSnapshotHistory(history);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchSnapshotHistory();\\\\\\\\n}, [id]);\\\\\\\\n\\\\\\\\nif (!rfp) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nif (timestamp && rfp) {\\\\\\\\n  rfp.snapshot =\\\\\\\\n    snapshotHistory.find((item) => item.timestamp === timestamp) ??\\\\\\\\n    rfp.snapshot;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { snapshot } = rfp;\\\\\\\\nsnapshot.timeline = parseJSON(snapshot.timeline);\\\\\\\\n\\\\\\\\nconst authorId = rfp.author_id;\\\\\\\\nconst blockHeight = parseInt(rfp.social_db_post_block_height);\\\\\\\\nconst item = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n  path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n  blockHeight,\\\\\\\\n};\\\\\\\\nconst rfpURL = `https://near.org/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=rfp&id=${rfp.id}&timestamp=${snapshot.timestamp}`;\\\\\\\\n\\\\\\\\nconst SidePanelItem = ({ title, children, hideBorder, ishidden }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ gap: \\\\\\\\\\\\\\\"8px\\\\\\\\\\\\\\\" }}\\\\\\\\n      className={\\\\\\\\n        ishidden\\\\\\\\n          ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"d-flex flex-column pb-3 \\\\\\\\\\\\\\\" + (!hideBorder && \\\\\\\\\\\\\\\" border-bottom\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{title} </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isAllowedToWriteRfp = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst link = href({\\\\\\\\n  widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n  params: {\\\\\\\\n    page: \\\\\\\\\\\\\\\"create-rfp\\\\\\\\\\\\\\\",\\\\\\\\n    id: rfp.id,\\\\\\\\n    timestamp: timestamp,\\\\\\\\n  },\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst createdDate = snapshotHistory[0].timestamp ?? snapshot.timestamp;\\\\\\\\n\\\\\\\\nconst [approvedProposals, setApprovedProposals] = useState([]);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\nconst [isWarningModalOpen, setWarningModal] = useState(false);\\\\\\\\nconst [timeline, setTimeline] = useState(null);\\\\\\\\nconst [showTimelineSetting, setShowTimelineSetting] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (!timeline) {\\\\\\\\n    setTimeline(snapshot.timeline);\\\\\\\\n  }\\\\\\\\n}, [snapshot]);\\\\\\\\n\\\\\\\\nfunction fetchApprovedRfpProposals() {\\\\\\\\n  const queryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      proposal_id\\\\\\\\n      name\\\\\\\\n      timeline\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  const FETCH_LIMIT = 50;\\\\\\\\n  const variables = {\\\\\\\\n    limit: FETCH_LIMIT,\\\\\\\\n    offset,\\\\\\\\n    where: {\\\\\\\\n      proposal_id: { _in: rfp.snapshot.linked_proposals },\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const data = result.body.data?.[queryName];\\\\\\\\n        const approved = [];\\\\\\\\n        data.map((item) => {\\\\\\\\n          const timeline = parseJSON(item.timeline);\\\\\\\\n          if (PROPOSALS_APPROVED_STATUS_ARRAY.includes(timeline.status)) {\\\\\\\\n            approved.push(item);\\\\\\\\n          }\\\\\\\\n        });\\\\\\\\n        setApprovedProposals(approved);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst editRFPStatus = () => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_rfp_timeline\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: rfp.id,\\\\\\\\n        timeline: timeline,\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\nconsole.log({ rfp });\\\\\\\\nconst onCancelRFP = (value) => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"cancel_rfp\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: rfp.id,\\\\\\\\n        proposals_to_cancel:\\\\\\\\n          value === CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS\\\\\\\\n            ? snapshot.linked_proposals\\\\\\\\n            : [],\\\\\\\\n        proposals_to_unlink:\\\\\\\\n          value === CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS\\\\\\\\n            ? snapshot.linked_proposals\\\\\\\\n            : [],\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst accessControlInfo =\\\\\\\\n  Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_access_control_info\\\\\\\\\\\\\\\"\\\\\\\\n  ) ?? null;\\\\\\\\nconst moderatorList =\\\\\\\\n  accessControlInfo?.members_list?.[\\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\"]?.children;\\\\\\\\n\\\\\\\\nfetchApprovedRfpProposals();\\\\\\\\n\\\\\\\\nconst SubmitProposalBtn = () => {\\\\\\\\n  return (\\\\\\\\n    <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <Link\\\\\\\\n        to={href({\\\\\\\\n          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n          params: { page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\", rfp_id: rfp.id },\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n          props={{\\\\\\\\n            label: (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle\\\\\\\\\\\\\\\"></i>Submit Proposal\\\\\\\\n              </div>\\\\\\\\n            ),\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"blue-btn\\\\\\\\\\\\\\\" },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </Link>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n        onConfirmClick: (value) => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onCancelRFP(value);\\\\\\\\n        },\\\\\\\\n        linkedProposalIds: snapshot.linked_proposals,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.WarningModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isWarningModalOpen,\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setWarningModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex px-3 px-lg-0 justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center h3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>{snapshot.name}</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">#{rfp.id}</div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_NEAR}/widget/ShareButton`}\\\\\\\\n          props={{\\\\\\\\n            postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            url: rfpURL,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        {isAllowedToWriteRfp && (\\\\\\\\n          <Link to={link} style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap flex-md-nowrap px-3 px-lg-0 gap-2 align-items-center text-sm pb-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n        props={{\\\\\\\\n          timelineStatus: snapshot.timeline.status,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"w-100 d-flex flex-wrap flex-md-nowrap gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n          <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n        </div>\\\\\\\\n        <div>created on {readableDate(createdDate / 1000000)}</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 full-width-div px-3 px-lg-0\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4\\\\\\\\\\\\\\\">\\\\\\\\n        {snapshot.timeline.status ===\\\\\\\\n          RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"accept-submission-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n              <b>This RFP is accepting submissions.</b>\\\\\\\\n              <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                Click Submit Proposal if you want to submit a proposal.\\\\\\\\n              </p>\\\\\\\\n            </div>\\\\\\\\n            <SubmitProposalBtn />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"my-4\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-6\\\\\\\\\\\\\\\">\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"flex-3 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                  <img src={RFP_IMAGE} height={35} width={35} />\\\\\\\\n                </div>\\\\\\\\n                <RfpContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Header className=\\\\\\\\\\\\\\\"d-flex gap-1 align-items-center p-2 px-3 \\\\\\\\\\\\\\\">\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ maxWidth: \\\\\\\\\\\\\\\"60%\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n                    </div>\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                        props={{\\\\\\\\n                          blockHeight,\\\\\\\\n                          blockTimestamp: createdDate,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      {context.accountId && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                          <Widget\\\\\\\\n                            src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                            props={{\\\\\\\\n                              accountId: authorId,\\\\\\\\n                              blockHeight: blockHeight,\\\\\\\\n                            }}\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </Header>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 p-2 px-3 description-box\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      RFP CATEGORY\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                          props={{\\\\\\\\n                            selected: snapshot.labels,\\\\\\\\n                            disabled: true,\\\\\\\\n                            hideDropdown: true,\\\\\\\\n                            onChange: () => {},\\\\\\\\n                            availableOptions: rfpLabelOptions,\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      SUMMARY\\\\\\\\n                    </div>\\\\\\\\n                    <div>{snapshot.summary}</div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n                      DESCRIPTION\\\\\\\\n                    </div>\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n                      props={{ text: snapshot.description }}\\\\\\\\n                    />\\\\\\\\n\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LikeButton`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          rfpId: rfp.id,\\\\\\\\n                          notifyAccountIds: moderatorList,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          showOverlay: false,\\\\\\\\n                          onClick: () => {},\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                        props={{\\\\\\\\n                          url: rfpURL,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                </RfpContainer>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.CommentsAndLogs`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    id: rfp.id,\\\\\\\\n                    item: item,\\\\\\\\n                    approvedProposals: approvedProposals,\\\\\\\\n                    snapshotHistory: snapshotHistory,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div\\\\\\\\n                style={{\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                className=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.ComposeComment`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    item: item,\\\\\\\\n                    notifyAccountIds: moderatorList,\\\\\\\\n                    rfpId: rfp.id,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                {snapshot.timeline.status ===\\\\\\\\n                  RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS && (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"accept-submission-info-container mt-3 p-3 p-sm-4 d-flex flex-wrap flex-md-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <div style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                      <b>Want to respond to this RFP? </b> This RFP is accepting\\\\\\\\n                      submissions.\\\\\\\\n                    </div>\\\\\\\\n                    <SubmitProposalBtn />\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 flex-1 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Submission Deadline\\\\\\\\\\\\\\\">\\\\\\\\n                <h5 className=\\\\\\\\\\\\\\\"text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {readableDate(\\\\\\\\n                    parseFloat(snapshot.submission_deadline / 1000000)\\\\\\\\n                  )}\\\\\\\\n                </h5>\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  <div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Timeline\\\\\\\\n                      {isAllowedToWriteRfp && (\\\\\\\\n                        <div\\\\\\\\n                          data-testid=\\\\\\\\\\\\\\\"setting-btn\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={() => setShowTimelineSetting(true)}\\\\\\\\n                        >\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.TimelineConfigurator`}\\\\\\\\n                  props={{\\\\\\\\n                    timeline: timeline,\\\\\\\\n                    setTimeline: (v) => {\\\\\\\\n                      if (\\\\\\\\n                        snapshot.timeline.status === v.status &&\\\\\\\\n                        timeline.status === v.status\\\\\\\\n                      ) {\\\\\\\\n                        return;\\\\\\\\n                      }\\\\\\\\n                      // if proposal selected timeline is selected and no approved proposals exist, show warning\\\\\\\\n                      if (\\\\\\\\n                        v.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED &&\\\\\\\\n                        Array.isArray(approvedProposals) &&\\\\\\\\n                        !approvedProposals.length\\\\\\\\n                      ) {\\\\\\\\n                        setWarningModal(true);\\\\\\\\n                      }\\\\\\\\n\\\\\\\\n                      if (v.status === RFP_TIMELINE_STATUS.CANCELLED) {\\\\\\\\n                        setCancelModal(true);\\\\\\\\n                      }\\\\\\\\n                      setTimeline(v);\\\\\\\\n                    },\\\\\\\\n                    disabled: showTimelineSetting ? false : true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                {showTimelineSetting && (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end text-sm mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"btn-outline-danger border-0 shadow-none btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        onClick: () => {\\\\\\\\n                          setShowTimelineSetting(false);\\\\\\\\n                          setTimeline(snapshot.timeline);\\\\\\\\n                        },\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                        classNames: { root: \\\\\\\\\\\\\\\"blue-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                        onClick: () => {\\\\\\\\n                          editRFPStatus();\\\\\\\\n                          setShowTimelineSetting(false);\\\\\\\\n                        },\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"Selected Proposal\\\\\\\\\\\\\\\" + \\\\\\\\\\\\\\\" (\\\\\\\\\\\\\\\" + approvedProposals.length + \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                ishidden={!approvedProposals.length}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedProposalIds: (approvedProposals ?? []).map(\\\\\\\\n                      (i) => i.proposal_id\\\\\\\\n                    ),\\\\\\\\n                    showStatus: false,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"All Proposals\\\\\\\\\\\\\\\" +\\\\\\\\n                  \\\\\\\\\\\\\\\" (\\\\\\\\\\\\\\\" +\\\\\\\\n                  snapshot.linked_proposals.length +\\\\\\\\n                  \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                ishidden={!snapshot.linked_proposals.length}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedProposalIds: snapshot.linked_proposals,\\\\\\\\n                    showStatus:\\\\\\\\n                      snapshot.timeline.status !==\\\\\\\\n                      RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.pages.about\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\nconst Section = styled.div`\\\\\\\\n  padding: 1.5rem;\\\\\\\\n  @media screen and (max-width: 786px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.1rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 150%;\\\\\\\\n    margin-bottom: 1rem;\\\\\\\\n    text-align: justify;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  h4 {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.3rem !important;\\\\\\\\n    font-style: normal !important;\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n    line-height: 120% !important;\\\\\\\\n\\\\\\\\n    margin-top: 1rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  h4 {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.25rem;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 150%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  li {\\\\\\\\n    text-align: justify;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  ol li {\\\\\\\\n    font-size: 1.1rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a {\\\\\\\\n    color: #3c697d;\\\\\\\\n    font-weight: 500 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  i {\\\\\\\\n    font-size: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Section>\\\\\\\\n    <h4>Introduction</h4>\\\\\\\\n    <p>\\\\\\\\n      The Infrastructure Committee was formed in response to community concerns\\\\\\\\n      around the state of infrastructure in the NEAR Ecosystem. Not to rest on\\\\\\\\n      any laurels, various leaders across the NEAR ecosystem devised the\\\\\\\\n      Infrastructure Committee to quickly address these concerns with funding\\\\\\\\n      and processes to get those funds distributed. These processes handle\\\\\\\\n      sharing RFPs, submitting proposals, reviewing and voting on proposals, and\\\\\\\\n      getting funds to teams when a proposal is approved. These directives and\\\\\\\\n      processes form an initiative to build up resilient, fast, and redundant\\\\\\\\n      infrastructure to meet the short-term and future needs of NEAR\\\\\\\\u{2019}s thriving\\\\\\\\n      ecosystem.\\\\\\\\n    </p>\\\\\\\\n    <p>\\\\\\\\n      You can learn more about the Infrastructure Committee on the GitHub\\\\\\\\n      <a\\\\\\\\n        href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki\\\\\\\\\\\\\\\"\\\\\\\\n        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        Wiki\\\\\\\\n      </a>\\\\\\\\n      . It includes information about the{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n      <a\\\\\\\\n        href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Infrastructure-Committee\\\\\\\\\\\\\\\"\\\\\\\\n        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        Infrastructure Committee (IC)\\\\\\\\n      </a>{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n      and the{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n      <a\\\\\\\\n        href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Infrastructure-Working-Group\\\\\\\\\\\\\\\"\\\\\\\\n        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        Working Group (WG)\\\\\\\\n      </a>\\\\\\\\n      . These articles also list current members.\\\\\\\\n    </p>\\\\\\\\n    <h4>Process Summary</h4>\\\\\\\\n    <p>\\\\\\\\n      The Committee is looking for proposals to enhance, upgrade, and fortify\\\\\\\\n      NEAR ecosystem infrastructure. Towards this effort, the Committee will be\\\\\\\\n      drafting several Requests For proposals that outline urgent or highly\\\\\\\\n      desired projects. Partners current or new are encouraged to submit\\\\\\\\n      proposals, either as a response to an RFP, or standalone.\\\\\\\\n    </p>\\\\\\\\n    <p>\\\\\\\\n      Generally, the process proceeds as follows:\\\\\\\\n      <ol>\\\\\\\\n        <li>\\\\\\\\n          The proposal is drafted. Working Group and Committee members are free\\\\\\\\n          to review and offer suggestions.\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          Once everyone feels the proposal is ready, the proposal moves into\\\\\\\\n          voting. The Committee can vote asynchronously between official\\\\\\\\n          meetings but most business is conducted at bi-weekly meetings.\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          If your proposal is rejected, you will be informed by an IC or WG\\\\\\\\n          member usually via the Telegram group established. Guidance may be\\\\\\\\n          offered on the proposal on how to update the proposal for\\\\\\\\n          resubmission.\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          If your proposal is approved, you will move into the Funding Pipeline.\\\\\\\\n          This will require you (or your company) to complete the KYC/B process\\\\\\\\n          including ID Verify (a service) followed by a Legal working agreement,\\\\\\\\n          and finally, a test transaction to ensure the target wallet address is\\\\\\\\n          correct.\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          Project Management: we encourage awarded teams to create a project on\\\\\\\\n          our{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <a\\\\\\\\n            href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group\\\\\\\\\\\\\\\"\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            Github repo\\\\\\\\n          </a>{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          to be tracked on our{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <a\\\\\\\\n            href=\\\\\\\\\\\\\\\"https://github.com/orgs/near/projects/133/views/6\\\\\\\\\\\\\\\"\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            Github project\\\\\\\\n          </a>\\\\\\\\n          . This gives the community and ecosystem leaders visibility into the\\\\\\\\n          status of awarded projects.\\\\\\\\n        </li>\\\\\\\\n      </ol>\\\\\\\\n    </p>\\\\\\\\n    <h4>Important Links</h4>\\\\\\\\n    <p>\\\\\\\\n      The following links contain specific information about the processes of\\\\\\\\n      responding to RFPs, submitting a proposal, voting, securing funds, and\\\\\\\\n      managing the subsequent project for transparency.\\\\\\\\n      <ul>\\\\\\\\n        <li>\\\\\\\\n          <a\\\\\\\\n            href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Request-For-Proposals\\\\\\\\\\\\\\\"\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            RFPs\\\\\\\\n          </a>\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          <a\\\\\\\\n            href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Proposal-Process-%E2%80%90-Team\\\\\\\\\\\\\\\"\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            Submitting a Proposal\\\\\\\\n          </a>\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          <a\\\\\\\\n            href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Proposal-Process-%E2%80%90-Team#5-voting-on-proposals\\\\\\\\\\\\\\\"\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            Voting\\\\\\\\n          </a>\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          <a\\\\\\\\n            href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Funding-Process-%E2%80%90-Company\\\\\\\\\\\\\\\"\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            Getting Funds\\\\\\\\n          </a>\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          <a\\\\\\\\n            href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Projects-&-Tasks\\\\\\\\\\\\\\\"\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            Managing The Project\\\\\\\\n          </a>\\\\\\\\n        </li>\\\\\\\\n      </ul>\\\\\\\\n      <i>\\\\\\\\n        Note: The articles above need to be updated to reflect the new process\\\\\\\\n        incoming. Getting Funds should be finished soon (now that I have a\\\\\\\\n        better grasp of how it works).\\\\\\\\n      </i>\\\\\\\\n    </p>\\\\\\\\n\\\\\\\\n    <h4>Areas Of Funding</h4>\\\\\\\\n    <p>\\\\\\\\n      The Infrastructure Committee is looking for projects in the following\\\\\\\\n      areas:\\\\\\\\n      <ul>\\\\\\\\n        <li>Wallets</li>\\\\\\\\n        <li>Oracles</li>\\\\\\\\n        <li>RPC Nodes</li>\\\\\\\\n        <li>Bridges</li>\\\\\\\\n        <li>Onramps / Offramps</li>\\\\\\\\n        <li>Relayers</li>\\\\\\\\n        <li>Explorers</li>\\\\\\\\n        <li>Indexers</li>\\\\\\\\n        <li>Query API</li>\\\\\\\\n        <li>Data Lakes</li>\\\\\\\\n      </ul>\\\\\\\\n    </p>\\\\\\\\n  </Section>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Feed\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    border-bottom: none !important;\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-btn {\\\\\\\\n    background-color: #3c697d !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .blue-btn {\\\\\\\\n      padding: 0.5rem 0.8rem !important;\\\\\\\\n      min-height: 32px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  .text-normal {\\\\\\\\n    font-weight: normal !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst FeedItem = ({ proposal, index }) => {\\\\\\\\n  const accountId = proposal.author_id;\\\\\\\\n  proposal.timeline = parseJSON(proposal.timeline);\\\\\\\\n  const profile = Social.get(`${accountId}/profile/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\n  // We will have to get the proposal from the contract to get the block height.\\\\\\\\n  const blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n    blockHeight: blockHeight,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const isLinked = isNumber(proposal.linked_rfp);\\\\\\\\n  const rfpData = proposal.rfpData;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n          id: proposal.proposal_id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      onClick={(e) => e.stopPropagation()}\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\n          \\\\\\\\\\\\\\\"proposal-card d-flex justify-content-between gap-2 text-muted cursor-pointer p-3 w-100 flex-wrap flex-sm-nowrap \\\\\\\\\\\\\\\" +\\\\\\\\n          (index !== 0 && \\\\\\\\\\\\\\\" border\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n            props={{\\\\\\\\n              accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"h6 mb-0 text-black\\\\\\\\\\\\\\\">{proposal.name}</div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                props={{\\\\\\\\n                  selected: proposal.labels,\\\\\\\\n                  disabled: true,\\\\\\\\n                  hideDropdown: true,\\\\\\\\n                  onChange: () => {},\\\\\\\\n                  availableOptions: rfpLabelOptions,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {isLinked && rfpData && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-sm text-muted d-flex gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <i class=\\\\\\\\\\\\\\\"bi bi-link-45deg\\\\\\\\\\\\\\\"></i>\\\\\\\\n                In response to RFP :\\\\\\\\n                <a\\\\\\\\n                  className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                  href={href({\\\\\\\\n                    widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                    params: {\\\\\\\\n                      page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n                      id: rfpData.rfp_id,\\\\\\\\n                    },\\\\\\\\n                  })}\\\\\\\\n                  target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {rfpData.name}\\\\\\\\n                </a>\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap flex-sm-nowrap text-sm w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div>#{proposal.proposal_id} \\\\\\\\u{ff65} </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n                By {profile.name ?? accountId} \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              </div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight,\\\\\\\\n                  blockTimestamp: proposal.timestamp,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LikeButton`}\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  proposalId: proposal.id,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  showOverlay: false,\\\\\\\\n                  onClick: () => {},\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"align-self-center\\\\\\\\\\\\\\\" style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n            props={{\\\\\\\\n              timelineStatus: proposal.timeline.status,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getProposal = (proposal_id) => {\\\\\\\\n  return Near.asyncView(\\\\\\\\n    `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}`,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id,\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FeedPage = () => {\\\\\\\\n  State.init({\\\\\\\\n    data: [],\\\\\\\\n    cachedItems: {},\\\\\\\\n    stage: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    sort: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    label: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    input: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    loading: false,\\\\\\\\n    loadingMore: false,\\\\\\\\n    aggregatedCount: null,\\\\\\\\n    currentlyDisplaying: 0,\\\\\\\\n    isFiltered: false,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  const queryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      author_id\\\\\\\\n      block_height\\\\\\\\n      name\\\\\\\\n      labels\\\\\\\\n      summary\\\\\\\\n      editor_id\\\\\\\\n      proposal_id\\\\\\\\n      ts\\\\\\\\n      timeline\\\\\\\\n      views\\\\\\\\n      linked_rfp\\\\\\\\n    }\\\\\\\\n    ${queryName}_aggregate(\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    )  {\\\\\\\\n      aggregate {\\\\\\\\n        count\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  const rfpQueryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const rfpQuery = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${rfpQueryName}_bool_exp = {}) {\\\\\\\\n    ${rfpQueryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {rfp_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      name\\\\\\\\n      rfp_id\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  function separateNumberAndText(str) {\\\\\\\\n    const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n    if (numberRegex.test(str)) {\\\\\\\\n      const number = str.match(numberRegex)[0];\\\\\\\\n      const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n      return { number: parseInt(number), text };\\\\\\\\n    } else {\\\\\\\\n      return { number: null, text: str.trim() };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const buildWhereClause = () => {\\\\\\\\n    let where = {};\\\\\\\\n\\\\\\\\n    if (state.label) {\\\\\\\\n      where = { labels: { _contains: state.label }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.stage) {\\\\\\\\n      // timeline is stored as jsonb\\\\\\\\n      where = {\\\\\\\\n        timeline: { _cast: { String: { _regex: `${state.stage}` } } },\\\\\\\\n        ...where,\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n    if (state.input) {\\\\\\\\n      const { number, text } = separateNumberAndText(state.input);\\\\\\\\n      if (number) {\\\\\\\\n        where = { proposal_id: { _eq: number }, ...where };\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      if (text) {\\\\\\\\n        where = {\\\\\\\\n          _or: [\\\\\\\\n            { name: { _iregex: `${text}` } },\\\\\\\\n            { summary: { _iregex: `${text}` } },\\\\\\\\n            { description: { _iregex: `${text}` } },\\\\\\\\n          ],\\\\\\\\n          ...where,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    State.update({ isFiltered: Object.keys(where).length > 0 });\\\\\\\\n    return where;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const buildOrderByClause = () => {\\\\\\\\n    /**\\\\\\\\n     * TODO\\\\\\\\n     * Most commented -> edit contract and indexer\\\\\\\\n     * Unanswered -> 0 comments\\\\\\\\n     */\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const makeMoreItems = () => {\\\\\\\\n    if (state.aggregatedCount <= state.currentlyDisplaying) return;\\\\\\\\n    fetchProposals(state.data.length);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchProposals = (offset) => {\\\\\\\\n    if (!offset) {\\\\\\\\n      offset = 0;\\\\\\\\n    }\\\\\\\\n    if (state.loading) return;\\\\\\\\n    const FETCH_LIMIT = 10;\\\\\\\\n    const variables = {\\\\\\\\n      limit: FETCH_LIMIT,\\\\\\\\n      offset,\\\\\\\\n      where: buildWhereClause(),\\\\\\\\n    };\\\\\\\\n    fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n      if (result.status === 200) {\\\\\\\\n        if (result.body.data) {\\\\\\\\n          const data = result.body.data?.[queryName];\\\\\\\\n          const totalResult = result.body.data?.[`${queryName}_aggregate`];\\\\\\\\n          const promises = data.map((item) => {\\\\\\\\n            if (isNumber(item.linked_rfp)) {\\\\\\\\n              return fetchGraphQL(rfpQuery, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", {}).then(\\\\\\\\n                (result) => {\\\\\\\\n                  const rfpData = result.body.data?.[rfpQueryName];\\\\\\\\n                  return { ...item, rfpData: rfpData[0] };\\\\\\\\n                }\\\\\\\\n              );\\\\\\\\n            } else {\\\\\\\\n              return Promise.resolve(item);\\\\\\\\n            }\\\\\\\\n          });\\\\\\\\n          Promise.all(promises).then((res) => {\\\\\\\\n            State.update({ aggregatedCount: totalResult.aggregate.count });\\\\\\\\n            fetchBlockHeights(res, offset);\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const renderItem = (item, index) => (\\\\\\\\n    <div\\\\\\\\n      key={item.proposal_id}\\\\\\\\n      className={\\\\\\\\n        (index !== state.data.length - 1 && \\\\\\\\\\\\\\\"border-bottom \\\\\\\\\\\\\\\") + index === 0 &&\\\\\\\\n        \\\\\\\\\\\\\\\" rounded-top-2\\\\\\\\\\\\\\\"\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <FeedItem proposal={item} index={index} />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n  const cachedRenderItem = (item, index) => {\\\\\\\\n    if (props.term) {\\\\\\\\n      return renderItem(item, {\\\\\\\\n        searchKeywords: [props.term],\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    const key = JSON.stringify(item);\\\\\\\\n\\\\\\\\n    if (!(key in state.cachedItems)) {\\\\\\\\n      state.cachedItems[key] = renderItem(item, index);\\\\\\\\n      State.update();\\\\\\\\n    }\\\\\\\\n    return state.cachedItems[key];\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    fetchProposals();\\\\\\\\n  }, [state.sort, state.label, state.stage]);\\\\\\\\n\\\\\\\\n  const mergeItems = (newItems) => {\\\\\\\\n    const items = [\\\\\\\\n      ...new Set([...newItems, ...state.data].map((i) => JSON.stringify(i))),\\\\\\\\n    ].map((i) => JSON.parse(i));\\\\\\\\n    // Sorting in the front end\\\\\\\\n    if (state.sort === \\\\\\\\\\\\\\\"proposal_id\\\\\\\\\\\\\\\" || state.sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.proposal_id - a.proposal_id);\\\\\\\\n    } else if (state.sort === \\\\\\\\\\\\\\\"views\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.views - a.views);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return items;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchBlockHeights = (data, offset) => {\\\\\\\\n    let promises = data.map((item) => getProposal(item.proposal_id));\\\\\\\\n    Promise.all(promises).then((blockHeights) => {\\\\\\\\n      data = data.map((item, index) => ({\\\\\\\\n        ...item,\\\\\\\\n        timeline: JSON.parse(item.timeline),\\\\\\\\n        social_db_post_block_height:\\\\\\\\n          blockHeights[index].social_db_post_block_height,\\\\\\\\n      }));\\\\\\\\n      if (offset) {\\\\\\\\n        let newData = mergeItems(data);\\\\\\\\n        State.update({\\\\\\\\n          data: newData,\\\\\\\\n          currentlyDisplaying: newData.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      } else {\\\\\\\\n        State.update({\\\\\\\\n          data,\\\\\\\\n          currentlyDisplaying: data.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const loader = (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const renderedItems = state.data ? state.data.map(cachedRenderItem) : null;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between flex-wrap gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Heading>\\\\\\\\n          Proposals\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"text-muted text-normal\\\\\\\\\\\\\\\">\\\\\\\\n            ({state.aggregatedCount ?? state.data.length}){\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          </span>\\\\\\\\n        </Heading>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-input`}\\\\\\\\n            props={{\\\\\\\\n              search: state.input,\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-xs-100\\\\\\\\\\\\\\\",\\\\\\\\n              onSearch: (input) => {\\\\\\\\n                State.update({ input });\\\\\\\\n                fetchProposals();\\\\\\\\n              },\\\\\\\\n              onEnter: () => {\\\\\\\\n                fetchProposals();\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-sort`}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ sort: select.value });\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.FilterByLabel`}\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ label: select.value });\\\\\\\\n                },\\\\\\\\n                availableOptions: rfpLabelOptions,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-stage`}\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ stage: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"mt-2 mt-xs-0\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={href({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\" },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                label: (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                    <div>\\\\\\\\n                      <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                    </div>\\\\\\\\n                    Submit Proposal\\\\\\\\n                  </div>\\\\\\\\n                ),\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"blue-btn\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div style={{ minHeight: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {!Array.isArray(state.data) ? (\\\\\\\\n          loader\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 mt-4 py-3 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"container-xl\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"bg-blue text-sm mt-2 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center mb-0\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    <i className=\\\\\\\\\\\\\\\"bi bi-info-circle\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                  <div>\\\\\\\\n                    <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                      Welcome to the Infrastructure Committee Proposal Feed!\\\\\\\\n                    </span>\\\\\\\\n                    This dedicated space makes it easy to submit and track\\\\\\\\n                    funding proposals from the Infrastructure Committee, the\\\\\\\\n                    primary organization overseeing improvements pertaining to\\\\\\\\n                    wallets, indexers, RPC services, explorers, oracles,\\\\\\\\n                    bridges, NEAR Protocol features, and related ecosystem\\\\\\\\n                    upgrades. You are welcome to respond to any RFPs that are\\\\\\\\n                    accepting submissions or submit an independent proposal.\\\\\\\\n                  </div>\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mt-4 border rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                {state.aggregatedCount === 0 ? (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"m-2\\\\\\\\\\\\\\\">\\\\\\\\n                    {state.isFiltered ? (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-danger\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No proposal found for selected filter.\\\\\\\\n                      </div>\\\\\\\\n                    ) : (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-secondary\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No proposal has been created yet.\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                ) : state.aggregatedCount > 0 ? (\\\\\\\\n                  <InfiniteScroll\\\\\\\\n                    pageStart={0}\\\\\\\\n                    loadMore={makeMoreItems}\\\\\\\\n                    hasMore={state.aggregatedCount > state.data.length}\\\\\\\\n                    loader={loader}\\\\\\\\n                    useWindow={false}\\\\\\\\n                    threshold={100}\\\\\\\\n                  >\\\\\\\\n                    {renderedItems}\\\\\\\\n                  </InfiniteScroll>\\\\\\\\n                ) : (\\\\\\\\n                  loader\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn FeedPage(props);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Editor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst { id, timestamp, rfp_id } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://near.social/${REPL_DEVHUB}/widget/app?page=community&handle=developer-dao&tab=funding\\\\\\\\\\\\\\\";\\\\\\\\nconst ToCDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1jcazxTemEsOf72nfAIbv6CR1og_w4qVXg7GjXuVoGeI/edit?usp=sharing\\\\\\\\\\\\\\\";\\\\\\\\nconst CoCDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1S0Ky1xPLRlCRSbX6nLOAxBba7b0dYb4SpGJzaAPqI9k/edit?usp=sharing\\\\\\\\\\\\\\\";\\\\\\\\nif (!author) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LoginScreen`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nlet editProposalData = null;\\\\\\\\nlet draftProposalData = null;\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_PROPOSAL_EDIT\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editProposalData = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id: parseInt(id),\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  input {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .h6 {\\\\\\\\n      font-size: 14px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .text-sm {\\\\\\\\n      font-size: 11px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #03ba16 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst tokensOptions = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\" },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"OTHER\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst [linkedRfp, setLinkedRfp] = useState(rfp_id ? parseInt(rfp_id) : null);\\\\\\\\nconst [labels, setLabels] = useState([]);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [linkedProposals, setLinkedProposals] = useState([]);\\\\\\\\nconst [receiverAccount, setReceiverAccount] = useState(context.accountId);\\\\\\\\nconst [requestedSponsorshipAmount, setRequestedSponsorshipAmount] =\\\\\\\\n  useState(null);\\\\\\\\nconst [requestedSponsorshipToken, setRequestedSponsorshipToken] = useState(\\\\\\\\n  tokensOptions[2]\\\\\\\\n);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\nconst [selectedStatus, setSelectedStatus] = useState(\\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\");\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\n\\\\\\\\nconst [showProposalViewModal, setShowProposalViewModal] = useState(false); // when user creates/edit a proposal and confirm the txn, this is true\\\\\\\\nconst [proposalId, setProposalId] = useState(null);\\\\\\\\nconst [proposalIdsArray, setProposalIdsArray] = useState(null);\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [oldProposalData, setOldProposalData] = useState(null);\\\\\\\\nconst [supervisor, setSupervisor] = useState(null);\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftProposalData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editProposalData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      linked_rfp: linkedRfp,\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      labels: labels,\\\\\\\\n      summary: summary,\\\\\\\\n      requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n      requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n      receiver_account: receiverAccount,\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [\\\\\\\\n    linkedRfp,\\\\\\\\n    title,\\\\\\\\n    summary,\\\\\\\\n    description,\\\\\\\\n    labels,\\\\\\\\n    requestedSponsorshipAmount,\\\\\\\\n    requestedSponsorshipToken,\\\\\\\\n    receiverAccount,\\\\\\\\n  ]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (allowDraft) {\\\\\\\\n    let data = editProposalData || JSON.parse(draftProposalData);\\\\\\\\n    let snapshot = data.snapshot;\\\\\\\\n    if (data) {\\\\\\\\n      if (timestamp) {\\\\\\\\n        snapshot =\\\\\\\\n          data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n          data.snapshot;\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        draftProposalData &&\\\\\\\\n        editProposalData &&\\\\\\\\n        editProposalData.id === JSON.parse(draftProposalData).id\\\\\\\\n      ) {\\\\\\\\n        snapshot = {\\\\\\\\n          ...editProposalData.snapshot,\\\\\\\\n          ...JSON.parse(draftProposalData).snapshot,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n      if (!isNumber(linkedRfp)) {\\\\\\\\n        setLinkedRfp(snapshot.linked_rfp);\\\\\\\\n      }\\\\\\\\n      setLabels(snapshot.labels ?? []);\\\\\\\\n      setTitle(snapshot.name);\\\\\\\\n      setSummary(snapshot.summary);\\\\\\\\n      setDescription(snapshot.description);\\\\\\\\n      setReceiverAccount(snapshot.receiver_account);\\\\\\\\n      setRequestedSponsorshipAmount(snapshot.requested_sponsorship_usd_amount);\\\\\\\\n      setSupervisor(snapshot.supervisor);\\\\\\\\n\\\\\\\\n      const token = tokensOptions.find(\\\\\\\\n        (item) => item.value === snapshot.requested_sponsorship_paid_in_currency\\\\\\\\n      );\\\\\\\\n      setRequestedSponsorshipToken(token ?? tokensOptions[2]);\\\\\\\\n      if (isEditPage) {\\\\\\\\n        setConsent({ toc: true, coc: true });\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [editProposalData, draftProposalData, allowDraft]);\\\\\\\\n\\\\\\\\n// show loader until LS data is set in state\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n    setLoading(false);\\\\\\\\n  }, 500);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (showProposalViewModal) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  setDisabledSubmitBtn(\\\\\\\\n    isTxnCreated ||\\\\\\\\n      !title ||\\\\\\\\n      !description ||\\\\\\\\n      !summary ||\\\\\\\\n      !(labels ?? []).length ||\\\\\\\\n      !requestedSponsorshipAmount ||\\\\\\\\n      !receiverAccount ||\\\\\\\\n      !consent.toc ||\\\\\\\\n      !consent.coc\\\\\\\\n  );\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 10000);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, [\\\\\\\\n  memoizedDraftData,\\\\\\\\n  draftKey,\\\\\\\\n  draftProposalData,\\\\\\\\n  consent,\\\\\\\\n  isTxnCreated,\\\\\\\\n  showProposalViewModal,\\\\\\\\n]);\\\\\\\\n\\\\\\\\n// set RFP labels, disable link rfp change when linked rfp is past accepting stage\\\\\\\\nconst [disabledLinkRFP, setDisableLinkRFP] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (linkedRfp) {\\\\\\\\n    Near.asyncView(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n      rfp_id: linkedRfp.value ?? linkedRfp,\\\\\\\\n    }).then((i) => {\\\\\\\\n      const timeline = parseJSON(i.snapshot.timeline);\\\\\\\\n      setDisableLinkRFP(\\\\\\\\n        !isModerator &&\\\\\\\\n          timeline.status !== RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS\\\\\\\\n      );\\\\\\\\n      setLabels(i.snapshot.labels);\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [linkedRfp]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    editProposalData &&\\\\\\\\n    editProposalData?.snapshot?.linked_proposals?.length > 0\\\\\\\\n  ) {\\\\\\\\n    editProposalData.snapshot.linked_proposals.map((item) => {\\\\\\\\n      useCache(\\\\\\\\n        () =>\\\\\\\\n          Near.asyncView(\\\\\\\\n            REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n            \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n            {\\\\\\\\n              proposal_id: parseInt(item),\\\\\\\\n            }\\\\\\\\n          ).then((proposal) => {\\\\\\\\n            setLinkedProposals([\\\\\\\\n              ...linkedProposals,\\\\\\\\n              {\\\\\\\\n                label: \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + proposal.id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + proposal.snapshot.name,\\\\\\\\n                value: proposal.id,\\\\\\\\n              },\\\\\\\\n            ]);\\\\\\\\n          }),\\\\\\\\n        item + \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\",\\\\\\\\n        { subscribe: false }\\\\\\\\n      );\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [editProposalData]);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n// show proposal created after txn approval for popup wallet\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isTxnCreated) {\\\\\\\\n    if (editProposalData) {\\\\\\\\n      setOldProposalData(editProposalData);\\\\\\\\n      if (\\\\\\\\n        editProposalData &&\\\\\\\\n        typeof editProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        oldProposalData &&\\\\\\\\n        typeof oldProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        JSON.stringify(editProposalData) !== JSON.stringify(oldProposalData)\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(editProposalData.id);\\\\\\\\n        setShowProposalViewModal(true);\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      const proposalIds = Near.view(\\\\\\\\n        REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      if (Array.isArray(proposalIds) && !proposalIdsArray) {\\\\\\\\n        setProposalIdsArray(proposalIds);\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        Array.isArray(proposalIds) &&\\\\\\\\n        Array.isArray(proposalIdsArray) &&\\\\\\\\n        proposalIds.length !== proposalIdsArray.length\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(proposalIds[proposalIds.length - 1]);\\\\\\\\n        setShowProposalViewModal(true);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  setLoading(false);\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes) {\\\\\\\\n    setLoading(true);\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(REPL_RPC_URL, {\\\\\\\\n          method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n          headers: {\\\\\\\\n            \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          body: JSON.stringify({\\\\\\\\n            jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n            id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n            method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n            params: [props.transactionHashes, context.accountId],\\\\\\\\n          }),\\\\\\\\n        }).then((transaction) => {\\\\\\\\n          const transaction_method_name =\\\\\\\\n            transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n              .method_name;\\\\\\\\n\\\\\\\\n          const is_edit_or_add_post_transaction =\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\" ||\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n          if (is_edit_or_add_post_transaction) {\\\\\\\\n            setShowProposalViewModal(true);\\\\\\\\n            Storage.privateSet(draftKey, null);\\\\\\\\n          }\\\\\\\\n          // show the latest created proposal to user\\\\\\\\n          if (transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\") {\\\\\\\\n            useCache(\\\\\\\\n              () =>\\\\\\\\n                Near.asyncView(\\\\\\\\n                  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n                  \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n                ).then((proposalIdsArray) => {\\\\\\\\n                  setProposalId(\\\\\\\\n                    proposalIdsArray?.[proposalIdsArray?.length - 1]\\\\\\\\n                  );\\\\\\\\n                }),\\\\\\\\n              props.transactionHashes + \\\\\\\\\\\\\\\"proposalIds\\\\\\\\\\\\\\\",\\\\\\\\n              { subscribe: false }\\\\\\\\n            );\\\\\\\\n          } else {\\\\\\\\n            setProposalId(id);\\\\\\\\n          }\\\\\\\\n          setLoading(false);\\\\\\\\n        }),\\\\\\\\n      props.transactionHashes + context.accountId,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  } else {\\\\\\\\n    if (showProposalViewModal) {\\\\\\\\n      setShowProposalViewModal(false);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst DropdowntBtnContainer = styled.div`\\\\\\\\n  font-size: 13px;\\\\\\\\n  min-width: 150px;\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .select-header {\\\\\\\\n    display: flex;\\\\\\\\n    justify-content: space-between;\\\\\\\\n    align-items: center;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    border-radius-top: 5px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    background-color: #fff;\\\\\\\\n    border-radius: 5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .no-border {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .options-card {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 0;\\\\\\\\n    width: 200%;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    background-color: #fff;\\\\\\\\n    padding: 0.5rem;\\\\\\\\n    z-index: 99;\\\\\\\\n    font-size: 13px;\\\\\\\\n    border-radius:0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .left {\\\\\\\\n    right: 0 !important;\\\\\\\\n    left: auto !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .options-card {\\\\\\\\n      right: 0 !important;\\\\\\\\n      left: auto !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option {\\\\\\\\n    margin-block: 5px;\\\\\\\\n    padding: 10px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    border-bottom: 1px solid #f0f0f0;\\\\\\\\n    transition: background-color 0.3s ease;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:hover {\\\\\\\\n    background-color: #f0f0f0; /* Custom hover effect color */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:last-child {\\\\\\\\n    border-bottom: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f4f4f4 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    font-weight: 500;\\\\\\\\n    color: #b3b3b3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 8px;\\\\\\\\n    height: 8px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green {\\\\\\\\n    background-color: #04a46e;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"submit-proposal-draft-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SubmitBtn = () => {\\\\\\\\n  const btnOptions = [\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Submit Draft\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"The author can still edit the proposal and build consensus before sharing it with sponsors.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Ready for Review\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"Start the official review process with sponsors. This will lock the editing function, but comments are still open.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"review\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  const handleOptionClick = (option) => {\\\\\\\\n    setDraftBtnOpen(false);\\\\\\\\n    setSelectedStatus(option.value);\\\\\\\\n    handleSubmit(option.value);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const toggleDropdown = () => {\\\\\\\\n    setDraftBtnOpen(!isDraftBtnOpen);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const handleSubmit = (status) => {\\\\\\\\n    const isDraft = status === \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\";\\\\\\\\n    if (isDraft) {\\\\\\\\n      onSubmit({ isDraft });\\\\\\\\n      cleanDraft();\\\\\\\\n    } else {\\\\\\\\n      setReviewModal(true);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <DropdowntBtnContainer>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"custom-select\\\\\\\\\\\\\\\"\\\\\\\\n        tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n        onBlur={() => setDraftBtnOpen(false)}\\\\\\\\n      >\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\n            \\\\\\\\\\\\\\\"select-header d-flex gap-1 align-items-center submit-draft-button \\\\\\\\\\\\\\\" +\\\\\\\\n            (disabledSubmitBtn && \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\")\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            onClick={() => !disabledSubmitBtn && handleSubmit(selectedStatus)}\\\\\\\\n            className=\\\\\\\\\\\\\\\"p-2 d-flex gap-2 align-items-center \\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {isTxnCreated ? (\\\\\\\\n              LoadingButtonSpinner\\\\\\\\n            ) : (\\\\\\\\n              <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + selectedOption.iconColor}></div>\\\\\\\\n            )}\\\\\\\\n            <div className={`selected-option`}>{selectedOption.label}</div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"h-100 p-2\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ borderLeft: \\\\\\\\\\\\\\\"1px solid #ccc\\\\\\\\\\\\\\\" }}\\\\\\\\n            onClick={!disabledSubmitBtn && toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <i class={`bi bi-chevron-${isDraftBtnOpen ? \\\\\\\\\\\\\\\"up\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\"}`}></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {isDraftBtnOpen && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"options-card\\\\\\\\\\\\\\\">\\\\\\\\n            {btnOptions.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`option ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n              >\\\\\\\\n                <div className={`d-flex gap-2 align-items-center`}>\\\\\\\\n                  <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + option.iconColor}></div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">{option.label}</div>\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-muted text-xs\\\\\\\\\\\\\\\">{option.description}</div>\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </DropdowntBtnContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst onSubmit = ({ isDraft, isCancel }) => {\\\\\\\\n  setCreateTxn(true);\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"submitting transaction\\\\\\\\\\\\\\\");\\\\\\\\n  const linkedProposalsIds = linkedProposals.map((item) => item.value) ?? [];\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    linked_rfp: linkedRfp?.value,\\\\\\\\n    category: \\\\\\\\\\\\\\\"Infrastructure Committee\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    summary: summary,\\\\\\\\n    linked_proposals: linkedProposalsIds,\\\\\\\\n    requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n    requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n    receiver_account: receiverAccount,\\\\\\\\n    requested_sponsor: \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\",\\\\\\\\n    supervisor: supervisor,\\\\\\\\n    timeline: isCancel\\\\\\\\n      ? {\\\\\\\\n          status: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        }\\\\\\\\n      : isDraft\\\\\\\\n      ? { status: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\" }\\\\\\\\n      : {\\\\\\\\n          status: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        },\\\\\\\\n  };\\\\\\\\n  const args = {\\\\\\\\n    labels: linkedRfp ? [] : (labels ?? []).map((i) => i.value ?? i),\\\\\\\\n    body: body,\\\\\\\\n  };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editProposalData.id;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [collapseState, setCollapseState] = useState({});\\\\\\\\n\\\\\\\\nconst CollapsibleContainer = ({ title, children, noPaddingTop }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"border-bottom py-4 \\\\\\\\\\\\\\\" +\\\\\\\\n        (noPaddingTop && \\\\\\\\\\\\\\\"pt-0 \\\\\\\\\\\\\\\") +\\\\\\\\n        (collapseState[title] && \\\\\\\\\\\\\\\" pb-0\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className={\\\\\\\\\\\\\\\"d-flex justify-content-between \\\\\\\\\\\\\\\"}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-2 mb-sm-3\\\\\\\\\\\\\\\">{title}</div>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex d-sm-none cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() =>\\\\\\\\n            setCollapseState((prevState) => ({\\\\\\\\n              ...prevState,\\\\\\\\n              [title]: !prevState[title],\\\\\\\\n            }))\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          {!collapseState[title] ? (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-up h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          ) : (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-down h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className={!collapseState[title] ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"}>{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategoryDropdown = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n      props={{\\\\\\\\n        selected: labels,\\\\\\\\n        onChange: (v) => setLabels(v),\\\\\\\\n        disabled: linkedRfp, // when RFP is linked, labels are disabled\\\\\\\\n        label: linkedRfp\\\\\\\\n          ? \\\\\\\\\\\\\\\"These categories are inherited from your selected RFP and can\\\\\\\\u{2019}t change\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"Select Category\\\\\\\\\\\\\\\",\\\\\\\\n        availableOptions: rfpLabelOptions,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData, linkedRfp, labels]);\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setTitle(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 80,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst SummaryComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: summary,\\\\\\\\n        multiline: true,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSummary(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 500,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst DescriptionComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: description,\\\\\\\\n        onChange: setDescription,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        autoFocus: false,\\\\\\\\n        showProposalIdAutoComplete: true,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ConsentComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"toc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={ToCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Infrastructure Committee\\\\\\\\u{2019}s Terms and Conditions\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.toc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              toc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"coc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={CoCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Infrastructure Committee\\\\\\\\u{2019}s Code of Conduct\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.coc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              coc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ProfileComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"mob.near/widget/Profile.ShortInlineBlock\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        accountId: author,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst LinkRFPComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedRfpDropdown`}\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedRfp,\\\\\\\\n          linkedRfp: linkedRfp,\\\\\\\\n          disabled: disabledLinkRFP,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData, disabledLinkRFP]);\\\\\\\\n\\\\\\\\nconst LinkedProposalsComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">\\\\\\\\n        Link any relevant proposals (e.g. previous milestones).\\\\\\\\n      </div>\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposalsDropdown`}\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedProposals,\\\\\\\\n          linkedProposals: linkedProposals,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ReceiverAccountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.AccountInput`}\\\\\\\\n      props={{\\\\\\\\n        value: receiverAccount,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Enter Address\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: setReceiverAccount,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst AmountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: requestedSponsorshipAmount,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          setRequestedSponsorshipAmount(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\",\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"$\\\\\\\\\\\\\\\",\\\\\\\\n          inputmode: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\",\\\\\\\\n          pattern: \\\\\\\\\\\\\\\"[0-9]*\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst CurrencyComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n      props={{\\\\\\\\n        options: tokensOptions,\\\\\\\\n        selectedValue: requestedSponsorshipToken,\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setRequestedSponsorshipToken(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-0 px-sm-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    <Heading className=\\\\\\\\\\\\\\\"px-2 px-sm-0\\\\\\\\\\\\\\\">\\\\\\\\n      {isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} Proposal\\\\\\\\n    </Heading>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.ViewProposalModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: showProposalViewModal,\\\\\\\\n        isEdit: isEditPage,\\\\\\\\n        proposalId: proposalId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmReviewModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          cleanDraft();\\\\\\\\n          onSubmit({ isDraft: false });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onSubmit({ isCancel: true });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 px-2 p-lg-0 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4 d-flex flex-wrap gap-6 w-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-2 w-100 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n                props={{\\\\\\\\n                  accountId: author,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Link RFP (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    \\\\\\\\\\\\\\\"Link this proposal if it is a response to a specific RFP. You can only link to active RFPs in the \\\\\\\\u{201c}Accepting Submission\\\\\\\\u{201d} stage. You can only link to one RFP.\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {LinkRFPComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Select the relevant categories that best align with your\\\\\\\\n                    contribution to the NEAR developer community. Need guidance?\\\\\\\\n                    See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href={FundingDocs}\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Funding Docs\\\\\\\\n                    </a>\\\\\\\\n                    .\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {CategoryDropdown}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Highlight the essence of your proposal in a few words. This will appear on your proposal\\\\\\\\u{2019}s detail page and the main proposal feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {TitleComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Explain your proposal briefly. This is your chance to make a good first impression on the community. Include what needs or goals your work will address, your solution, and the benefit for the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SummaryComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Expand on your summary with any relevant details like your\\\\\\\\n                    contribution timeline, key milestones, team background, and\\\\\\\\n                    a clear breakdown of how the funds will be used. Proposals\\\\\\\\n                    should be simple and clear (e.g. 1 month). For more complex\\\\\\\\n                    projects, treat each milestone as a separate proposal.\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {DescriptionComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\">\\\\\\\\n                {ConsentComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <div>\\\\\\\\n                  {isEditPage && (\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                          </div>\\\\\\\\n                        ),\\\\\\\\n                        onClick: () => setCancelModal(true),\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n                <div\\\\\\\\n                  className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\"\\\\\\\\n                  style={{\\\\\\\\n                    height: isDraftBtnOpen ? \\\\\\\\\\\\\\\"25vh\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"auto\\\\\\\\\\\\\\\",\\\\\\\\n                    alignItems: isDraftBtnOpen ? \\\\\\\\\\\\\\\"flex-start\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                >\\\\\\\\n                  <Link\\\\\\\\n                    to={\\\\\\\\n                      isEditPage\\\\\\\\n                        ? href({\\\\\\\\n                            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                              id: parseInt(id),\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                        : href({\\\\\\\\n                            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                    }\\\\\\\\n                  >\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                        onClick: cleanDraft,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </Link>\\\\\\\\n                  <SubmitBtn />\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-1 w-100 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <CollapsibleContainer noPaddingTop={true} title=\\\\\\\\\\\\\\\"Author Details\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                {ProfileComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n            </div>\\\\\\\\n          </CollapsibleContainer>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Link Proposals (Optional)\\\\\\\\\\\\\\\">\\\\\\\\n              {LinkedProposalsComponent}\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Funding Details\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Recipient NEAR Wallet Address\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Enter the address that will receive the funds. We\\\\\\\\u{2019}ll need this to send a test transaction once your proposal is approved.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {ReceiverAccountComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading={\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Recipient Verification Status\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"custom-tooltip\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-info-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        <span class=\\\\\\\\\\\\\\\"tooltiptext\\\\\\\\\\\\\\\">\\\\\\\\n                          To get approved and receive payments on our platform,\\\\\\\\n                          you must complete KYC/KYB verification using Fractal,\\\\\\\\n                          a trusted identity verification solution. This helps\\\\\\\\n                          others trust transactions with your account. Click\\\\\\\\n                          \\\\\\\\\\\\\\\"Get Verified\\\\\\\\\\\\\\\" to start. <br />\\\\\\\\n                          <br />\\\\\\\\n                          Once verified, your profile will display a badge,\\\\\\\\n                          which is valid for 365 days from the date of your\\\\\\\\n                          verification. You must renew your verification upon\\\\\\\\n                          expiration OR if any of your personal information\\\\\\\\n                          changes.\\\\\\\\n                        </span>\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  }\\\\\\\\n                  description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"border border-1 p-3 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.VerificationStatus`}\\\\\\\\n                      props={{\\\\\\\\n                        receiverAccount: receiverAccount,\\\\\\\\n                        showGetVerifiedBtn: true,\\\\\\\\n                        imageSize: 30,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Total Amount (USD)\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    <>\\\\\\\\n                      Enter the exact amount you are seeking. See\\\\\\\\n                      <a\\\\\\\\n                        href={FundingDocs}\\\\\\\\n                        className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        Funding Documentation\\\\\\\\n                      </a>\\\\\\\\n                      for guidelines.\\\\\\\\n                    </>\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {AmountComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Currency\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Select your preferred currency for receiving funds. Note: The exchange rate for NEAR tokens will be the closing rate at the day of the invoice.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {CurrencyComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Proposal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst accountId = context.accountId;\\\\\\\\n/*\\\\\\\\n  ---props---\\\\\\\\n  props.id: number;\\\\\\\\n  props.timestamp: number; optional\\\\\\\\n  accountId: string\\\\\\\\n  blockHeight:number\\\\\\\\n  */\\\\\\\\n\\\\\\\\nconst DecisionStage = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.REJECTED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .description-box {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .draft-info-container {\\\\\\\\n    background-color: #ecf8fb;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .review-info-container {\\\\\\\\n    background-color: #fef6ee;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-3 {\\\\\\\\n    flex: 3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 20px;\\\\\\\\n    height: 20px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 180px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 135px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 180px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 75px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line-sm {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 70px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:disabled ~ .form-check-label,\\\\\\\\n  .form-check-input[disabled] ~ .form-check-label {\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input {\\\\\\\\n    border-color: black !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-btn {\\\\\\\\n    background-color: #687076;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #03ba16 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-vertical {\\\\\\\\n    border-top: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n    border-bottom: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  button.px-0 {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  red-icon i {\\\\\\\\n    color: red;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  input[type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"] {\\\\\\\\n    min-width: 13px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ProposalContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Text = styled.p`\\\\\\\\n  display: block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 20px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  white-space: nowrap;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 12px;\\\\\\\\n  margin: -6px -6px 6px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinkProfile = ({ account, children }) => {\\\\\\\\n  return (\\\\\\\\n    <Link href={`/near/widget/ProfilePage?accountId=${account}`}>\\\\\\\\n      {children}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst stepsArray = [1, 2, 3, 4, 5];\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\nconst proposal = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    proposal_id: parseInt(id),\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst [snapshotHistory, setSnapshotHistory] = useState([]);\\\\\\\\n\\\\\\\\nconst queryName = PROPOSAL_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n  ${queryName}(\\\\\\\\n    offset: $offset\\\\\\\\n    limit: $limit\\\\\\\\n    order_by: {ts: asc}\\\\\\\\n    where: $where\\\\\\\\n  ) {\\\\\\\\n    editor_id\\\\\\\\n    name\\\\\\\\n    summary\\\\\\\\n    description\\\\\\\\n    ts\\\\\\\\n    proposal_id\\\\\\\\n    timeline\\\\\\\\n    labels\\\\\\\\n    linked_proposals\\\\\\\\n    linked_rfp\\\\\\\\n    requested_sponsorship_usd_amount\\\\\\\\n    requested_sponsorship_paid_in_currency\\\\\\\\n    receiver_account\\\\\\\\n    requested_sponsor\\\\\\\\n    supervisor\\\\\\\\n  }\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst fetchSnapshotHistory = () => {\\\\\\\\n  const variables = {\\\\\\\\n    where: { proposal_id: { _eq: id } },\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const data = result.body.data?.[queryName];\\\\\\\\n        const history = data.map((item) => {\\\\\\\\n          const proposalData = {\\\\\\\\n            ...item,\\\\\\\\n            timestamp: item.ts,\\\\\\\\n            timeline: parseJSON(item.timeline),\\\\\\\\n          };\\\\\\\\n          delete proposalData.ts;\\\\\\\\n          return proposalData;\\\\\\\\n        });\\\\\\\\n        setSnapshotHistory(history);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchSnapshotHistory();\\\\\\\\n}, [id]);\\\\\\\\n\\\\\\\\nif (!proposal) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nif (timestamp && proposal) {\\\\\\\\n  proposal.snapshot =\\\\\\\\n    snapshotHistory.find((item) => item.timestamp === timestamp) ??\\\\\\\\n    proposal.snapshot;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { snapshot } = proposal;\\\\\\\\nsnapshot.timeline = parseJSON(snapshot.timeline);\\\\\\\\n\\\\\\\\nconst authorId = proposal.author_id;\\\\\\\\nconst blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\nconst item = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n  path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n  blockHeight,\\\\\\\\n};\\\\\\\\nconst proposalURL = `https://near.org/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=proposal&id=${proposal.id}&timestamp=${snapshot.timestamp}`;\\\\\\\\n\\\\\\\\nconst SidePanelItem = ({ title, children, hideBorder, ishidden }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ gap: \\\\\\\\\\\\\\\"8px\\\\\\\\\\\\\\\" }}\\\\\\\\n      className={\\\\\\\\n        ishidden\\\\\\\\n          ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"d-flex flex-column pb-3 \\\\\\\\\\\\\\\" + (!hideBorder && \\\\\\\\\\\\\\\" border-bottom\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{title} </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst proposalStatusOptions = [\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Draft\\\\\\\\\\\\\\\",\\\\\\\\n    value: { status: PROPOSAL_TIMELINE_STATUS.DRAFT },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Review\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.REVIEW,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved-Conditionally\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Rejected\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.REJECTED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.CANCELED,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Payment-processing\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n      kyc_verified: false,\\\\\\\\n      test_transaction_sent: false,\\\\\\\\n      request_for_trustees_created: false,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Funded\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n      trustees_released_payment: true,\\\\\\\\n      kyc_verified: true,\\\\\\\\n      test_transaction_sent: true,\\\\\\\\n      request_for_trustees_created: true,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst CheckBox = ({ value, isChecked, label, disabled, onClick }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"checkbox\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={!isModerator || !showTimelineSetting || disabled}\\\\\\\\n        onChange={(e) => onClick(e.target.checked)}\\\\\\\\n      />\\\\\\\\n      <label style={{ width: \\\\\\\\\\\\\\\"90%\\\\\\\\\\\\\\\" }} class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">\\\\\\\\n        {label}\\\\\\\\n      </label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst RadioButton = ({ value, isChecked, label }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={true}\\\\\\\\n      />\\\\\\\\n      <label class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isAllowedToEditProposal = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    proposal_id: proposal.id,\\\\\\\\n    editor: accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst editProposal = ({ timeline }) => {\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    name: snapshot.name,\\\\\\\\n    description: snapshot.description,\\\\\\\\n    category: snapshot.category,\\\\\\\\n    summary: snapshot.summary,\\\\\\\\n    linked_proposals: snapshot.linked_proposals,\\\\\\\\n    requested_sponsorship_usd_amount: snapshot.requested_sponsorship_usd_amount,\\\\\\\\n    requested_sponsorship_paid_in_currency:\\\\\\\\n      snapshot.requested_sponsorship_paid_in_currency,\\\\\\\\n    receiver_account: snapshot.receiver_account,\\\\\\\\n    requested_sponsor: snapshot.requested_sponsor,\\\\\\\\n    timeline: timeline,\\\\\\\\n    linked_rfp: snapshot.linked_rfp,\\\\\\\\n    supervisor: supervisor ?? snapshot.supervisor,\\\\\\\\n  };\\\\\\\\n  const args = {\\\\\\\\n    labels: snapshot.linked_rfp ? [] : snapshot.labels,\\\\\\\\n    body: body,\\\\\\\\n    id: proposal.id,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst editProposalStatus = ({ timeline }) => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal_timeline\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: proposal.id,\\\\\\\\n        timeline: timeline,\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\nconst [showTimelineSetting, setShowTimelineSetting] = useState(false);\\\\\\\\nconst proposalStatus = useCallback(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.find(\\\\\\\\n      (i) => i.value.status === snapshot.timeline.status\\\\\\\\n    ),\\\\\\\\n  [snapshot]\\\\\\\\n);\\\\\\\\nconst [updatedProposalStatus, setUpdatedProposalStatus] = useState({});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  setUpdatedProposalStatus({\\\\\\\\n    ...proposalStatus(),\\\\\\\\n    value: { ...proposalStatus().value, ...snapshot.timeline },\\\\\\\\n  });\\\\\\\\n}, [proposal]);\\\\\\\\n\\\\\\\\nconst [paymentHashes, setPaymentHashes] = useState([\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"]);\\\\\\\\nconst [supervisor, setSupervisor] = useState(snapshot.supervisor);\\\\\\\\n\\\\\\\\nconst selectedStatusIndex = useMemo(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.findIndex((i) => {\\\\\\\\n      return updatedProposalStatus.value.status === i.value.status;\\\\\\\\n    }),\\\\\\\\n  [updatedProposalStatus]\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst TimelineItems = ({ title, children, value, values }) => {\\\\\\\\n  const indexOfCurrentItem = proposalStatusOptions.findIndex((i) =>\\\\\\\\n    Array.isArray(values)\\\\\\\\n      ? values.includes(i.value.status)\\\\\\\\n      : value === i.value.status\\\\\\\\n  );\\\\\\\\n  let color = \\\\\\\\\\\\\\\"transparent\\\\\\\\\\\\\\\";\\\\\\\\n  let statusIndex = selectedStatusIndex;\\\\\\\\n\\\\\\\\n  // index 2,3,4,5  is of decision\\\\\\\\n  if (selectedStatusIndex === 3 || selectedStatusIndex === 2) {\\\\\\\\n    statusIndex = 2;\\\\\\\\n  }\\\\\\\\n  if (statusIndex === indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FEF6EE\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  if (\\\\\\\\n    statusIndex > indexOfCurrentItem ||\\\\\\\\n    updatedProposalStatus.value.status === PROPOSAL_TIMELINE_STATUS.FUNDED\\\\\\\\n  ) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#EEFEF0\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // reject\\\\\\\\n  if (statusIndex === 4 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FF7F7F\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // cancelled\\\\\\\\n  if (statusIndex === 5 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"p-2 rounded-3\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        backgroundColor: color,\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 text-black\\\\\\\\\\\\\\\"> {title}</div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst link = href({\\\\\\\\n  widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n  params: {\\\\\\\\n    page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\",\\\\\\\\n    id: proposal.id,\\\\\\\\n    timestamp: timestamp,\\\\\\\\n  },\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst createdDate = snapshotHistory[0]?.timestamp ?? snapshot.timestamp;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmReviewModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[1].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[5].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex px-3 px-lg-0 justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center h3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>{snapshot.name}</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">#{proposal.id}</div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_NEAR}/widget/ShareButton`}\\\\\\\\n          props={{\\\\\\\\n            postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            url: proposalURL,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        {((isAllowedToEditProposal &&\\\\\\\\n          snapshot.timeline.status === PROPOSAL_TIMELINE_STATUS.DRAFT) ||\\\\\\\\n          isModerator) && (\\\\\\\\n          <Link to={link} style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap flex-md-nowrap px-3 px-lg-0 gap-2 align-items-center text-sm pb-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n        props={{\\\\\\\\n          timelineStatus: snapshot.timeline.status,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"w-100 d-flex flex-wrap flex-md-nowrap gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n          <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n        </div>\\\\\\\\n        <div>created on {readableDate(createdDate / 1000000)}</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 full-width-div px-3 px-lg-0\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4\\\\\\\\\\\\\\\">\\\\\\\\n        {snapshot.timeline.status === PROPOSAL_TIMELINE_STATUS.DRAFT &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"draft-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in draft mode and open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  The author can still refine the proposal and build consensus\\\\\\\\n                  before sharing it with sponsors. Click \\\\\\\\u{201c}Ready for review\\\\\\\\u{201d} when\\\\\\\\n                  you want to start the official review process. This will lock\\\\\\\\n                  the editing function, but comments are still open.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    label: \\\\\\\\\\\\\\\"Ready for review\\\\\\\\\\\\\\\",\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setReviewModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        {snapshot.timeline.status === PROPOSAL_TIMELINE_STATUS.REVIEW &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"review-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in review mode and still open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  You can\\\\\\\\u{2019}t edit the proposal, but comments are open. Only\\\\\\\\n                  moderators can make changes. Click \\\\\\\\u{201c}Cancel Proposal\\\\\\\\u{201d} to cancel\\\\\\\\n                  your proposal. This changes the status to Canceled, signaling\\\\\\\\n                  to sponsors that it\\\\\\\\u{2019}s no longer active or relevant.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    label: (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                      </div>\\\\\\\\n                    ),\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"btn-outline-danger btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setCancelModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"my-4\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-6\\\\\\\\\\\\\\\">\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"flex-3 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                  <Widget\\\\\\\\n                    src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n                    props={{\\\\\\\\n                      accountId: authorId,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n                <ProposalContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Header className=\\\\\\\\\\\\\\\"d-flex gap-1 align-items-center p-2 px-3 \\\\\\\\\\\\\\\">\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ maxWidth: \\\\\\\\\\\\\\\"60%\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n                    </div>\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                        props={{\\\\\\\\n                          blockHeight,\\\\\\\\n                          blockTimestamp: createdDate,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      {context.accountId && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                          <Widget\\\\\\\\n                            src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                            props={{\\\\\\\\n                              accountId: authorId,\\\\\\\\n                              blockHeight: blockHeight,\\\\\\\\n                            }}\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </Header>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 p-2 px-3 description-box\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      PROPOSAL CATEGORY\\\\\\\\n                    </div>\\\\\\\\n                    <div>\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                        props={{\\\\\\\\n                          selected: snapshot.labels,\\\\\\\\n                          disabled: true,\\\\\\\\n                          hideDropdown: true,\\\\\\\\n                          onChange: () => {},\\\\\\\\n                          availableOptions: rfpLabelOptions,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      SUMMARY\\\\\\\\n                    </div>\\\\\\\\n                    <div>{snapshot.summary}</div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n                      DESCRIPTION\\\\\\\\n                    </div>\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n                      props={{ text: snapshot.description }}\\\\\\\\n                    />\\\\\\\\n\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LikeButton`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          proposalId: proposal.id,\\\\\\\\n                          notifyAccountIds: [authorId],\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          showOverlay: false,\\\\\\\\n                          onClick: () => {},\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                        props={{\\\\\\\\n                          url: proposalURL,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                </ProposalContainer>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.CommentsAndLogs`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    id: proposal.id,\\\\\\\\n                    item: item,\\\\\\\\n                    snapshotHistory: snapshotHistory,\\\\\\\\n                    latestSnapshot: snapshot,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div\\\\\\\\n                style={{\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                className=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.ComposeComment`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    item: item,\\\\\\\\n                    notifyAccountIds: [authorId],\\\\\\\\n                    proposalId: proposal.id,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 flex-1 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/AccountProfile`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: authorId,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\\\\\\\\"Linked RFP\\\\\\\\\\\\\\\"}\\\\\\\\n                ishidden={!isNumber(snapshot.linked_rfp)}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedRfps`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedRfpIds: [snapshot.linked_rfp],\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"Linked Proposals \\\\\\\\\\\\\\\" + `(${snapshot.linked_proposals.length})`\\\\\\\\n                }\\\\\\\\n                ishidden={!snapshot.linked_proposals.length}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedProposalIds: snapshot.linked_proposals,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Funding Ask\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"h4 text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {snapshot.requested_sponsorship_usd_amount && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                      <div>\\\\\\\\n                        {parseInt(\\\\\\\\n                          snapshot.requested_sponsorship_usd_amount\\\\\\\\n                        ).toLocaleString()}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        USD\\\\\\\\n                      </div>\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                        Requested in{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        {snapshot.requested_sponsorship_paid_in_currency}\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Wallet Address\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/AccountProfile`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: snapshot.receiver_account,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Verification Status\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.VerificationStatus`}\\\\\\\\n                  props={{\\\\\\\\n                    receiverAccount: snapshot.receiver_account,\\\\\\\\n                    showGetVerifiedBtn:\\\\\\\\n                      accountId === snapshot.receiver_account ||\\\\\\\\n                      accountId === authorId,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title=\\\\\\\\\\\\\\\"Project Coordinator\\\\\\\\\\\\\\\"\\\\\\\\n                ishidden={!snapshot.supervisor}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/AccountProfile`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: snapshot.supervisor,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                hideBorder={true}\\\\\\\\n                title={\\\\\\\\n                  <div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Timeline\\\\\\\\n                      {isModerator && (\\\\\\\\n                        <div onClick={() => setShowTimelineSetting(true)}>\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                    {showTimelineSetting && (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"mt-2 d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <h6 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Proposal Status</h6>\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n                          props={{\\\\\\\\n                            options: proposalStatusOptions,\\\\\\\\n                            selectedValue: updatedProposalStatus,\\\\\\\\n                            onUpdate: (v) => {\\\\\\\\n                              setUpdatedProposalStatus({\\\\\\\\n                                ...v,\\\\\\\\n                                value: {\\\\\\\\n                                  ...v.value,\\\\\\\\n                                  ...updatedProposalStatus.value,\\\\\\\\n                                  status: v.value.status,\\\\\\\\n                                },\\\\\\\\n                              });\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-3 mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n                      {stepsArray.map((_, index) => {\\\\\\\\n                        const indexOfCurrentItem = index;\\\\\\\\n                        let color = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n                        let statusIndex = selectedStatusIndex;\\\\\\\\n                        // index 2,3,4 is of decision\\\\\\\\n                        if (\\\\\\\\n                          selectedStatusIndex === 3 ||\\\\\\\\n                          selectedStatusIndex === 2 ||\\\\\\\\n                          selectedStatusIndex === 4 ||\\\\\\\\n                          selectedStatusIndex === 5\\\\\\\\n                        ) {\\\\\\\\n                          statusIndex = 2;\\\\\\\\n                        }\\\\\\\\n                        if (selectedStatusIndex === 6) {\\\\\\\\n                          statusIndex = 3;\\\\\\\\n                        }\\\\\\\\n                        const current = statusIndex === indexOfCurrentItem;\\\\\\\\n                        const completed =\\\\\\\\n                          statusIndex > indexOfCurrentItem ||\\\\\\\\n                          updatedProposalStatus.value.status ===\\\\\\\\n                            PROPOSAL_TIMELINE_STATUS.FUNDED;\\\\\\\\n                        return (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <div\\\\\\\\n                              className={\\\\\\\\n                                \\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" +\\\\\\\\n                                (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                              }\\\\\\\\n                            >\\\\\\\\n                              {completed && (\\\\\\\\n                                <div\\\\\\\\n                                  className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n                                  style={{ height: \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" }}\\\\\\\\n                                >\\\\\\\\n                                  <i class=\\\\\\\\\\\\\\\"bi bi-check\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                </div>\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n\\\\\\\\n                            {index !== stepsArray.length - 1 && (\\\\\\\\n                              <div\\\\\\\\n                                className={\\\\\\\\n                                  \\\\\\\\\\\\\\\"vertical-line\\\\\\\\\\\\\\\" +\\\\\\\\n                                  (index === stepsArray.length - 2\\\\\\\\n                                    ? \\\\\\\\\\\\\\\"-sm \\\\\\\\\\\\\\\"\\\\\\\\n                                    : \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                                }\\\\\\\\n                              ></div>\\\\\\\\n                            )}\\\\\\\\n                          </div>\\\\\\\\n                        );\\\\\\\\n                      })}\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"1) Draft\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.DRAFT}\\\\\\\\n                      >\\\\\\\\n                        <div>\\\\\\\\n                          Once an author submits a proposal, it is in draft mode\\\\\\\\n                          and open for community comments. The author can still\\\\\\\\n                          make changes to the proposal during this stage and\\\\\\\\n                          submit it for official review when ready.\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"2) Review\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.REVIEW}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          Sponsors who agree to consider the proposal may\\\\\\\\n                          request attestations from work groups.\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  sponsor_requested_review: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor provides feedback or requests reviews\\\\\\\\\\\\\\\"\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .sponsor_requested_review\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Reviewer completes attestations (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  reviewer_completed_attestation: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .reviewer_completed_attestation\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"3) Decision\\\\\\\\\\\\\\\"\\\\\\\\n                        values={[\\\\\\\\n                          PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n                          PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n                          PROPOSAL_TIMELINE_STATUS.REJECTED,\\\\\\\\n                        ]}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <div>Sponsor makes a final decision:</div>\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Approved</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.APPROVED ||\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING ||\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.FUNDED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={\\\\\\\\n                              <>\\\\\\\\n                                <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                                  Approved - Conditional{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                                </div>\\\\\\\\n                                <span>\\\\\\\\n                                  Requires follow up from recipient. Moderators\\\\\\\\n                                  will provide further details.\\\\\\\\n                                </span>\\\\\\\\n                              </>\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Reject\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Rejected</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              PROPOSAL_TIMELINE_STATUS.REJECTED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Canceled</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              PROPOSAL_TIMELINE_STATUS.CANCELED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"4) Payment Processing\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor verifies KYC/KYB\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  kyc_verified: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor confirmed sponsorship and shared funding steps with recipient\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  test_transaction_sent: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"5) Funded\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.FUNDED}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          {paymentHashes?.length > 1 ? (\\\\\\\\n                            paymentHashes.slice(0, -1).map((link, index) => (\\\\\\\\n                              <a\\\\\\\\n                                key={index}\\\\\\\\n                                href={link}\\\\\\\\n                                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                              >\\\\\\\\n                                Payment Link\\\\\\\\n                                <i className=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                              </a>\\\\\\\\n                            ))\\\\\\\\n                          ) : updatedProposalStatus.value.payouts.length > 0 ? (\\\\\\\\n                            <div>\\\\\\\\n                              {updatedProposalStatus.value.payouts.map(\\\\\\\\n                                (link) => {\\\\\\\\n                                  return (\\\\\\\\n                                    <a\\\\\\\\n                                      href={link}\\\\\\\\n                                      className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                                    >\\\\\\\\n                                      Payment Link\\\\\\\\n                                      <i class=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                    </a>\\\\\\\\n                                  );\\\\\\\\n                                }\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n                          ) : (\\\\\\\\n                            \\\\\\\\\\\\\\\"No Payouts yet\\\\\\\\\\\\\\\"\\\\\\\\n                          )}\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                  {showTimelineSetting && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">\\\\\\\\n                          Project Coordinator\\\\\\\\n                        </label>\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.AccountInput`}\\\\\\\\n                          props={{\\\\\\\\n                            value: supervisor,\\\\\\\\n                            placeholder: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                            onUpdate: setSupervisor,\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                      {updatedProposalStatus.value.status ===\\\\\\\\n                        PROPOSAL_TIMELINE_STATUS.FUNDED && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">Payment Link</label>\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                            {paymentHashes.map((item, index) => (\\\\\\\\n                              <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-between align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                                <Widget\\\\\\\\n                                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n                                  props={{\\\\\\\\n                                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                                    value: item,\\\\\\\\n                                    onChange: (e) => {\\\\\\\\n                                      const updatedHashes = [...paymentHashes];\\\\\\\\n                                      updatedHashes[index] = e.target.value;\\\\\\\\n                                      setPaymentHashes(updatedHashes);\\\\\\\\n                                    },\\\\\\\\n                                    skipPaddingGap: true,\\\\\\\\n                                    placeholder: \\\\\\\\\\\\\\\"Enter URL\\\\\\\\\\\\\\\",\\\\\\\\n                                  }}\\\\\\\\n                                />\\\\\\\\n                                <div style={{ minWidth: 20 }}>\\\\\\\\n                                  {index !== paymentHashes.length - 1 ? (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-trash3 h6\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () => {\\\\\\\\n                                          const updatedHashes = [\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                          ];\\\\\\\\n                                          updatedHashes.splice(index, 1);\\\\\\\\n                                          setPaymentHashes(updatedHashes);\\\\\\\\n                                        },\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  ) : (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"green-btn shadow-none border-0 w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        disabled: !item,\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-plus-lg\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () =>\\\\\\\\n                                          setPaymentHashes([\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                            \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                                          ]),\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  )}\\\\\\\\n                                </div>\\\\\\\\n                              </div>\\\\\\\\n                            ))}\\\\\\\\n                          </div>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end text-sm\\\\\\\\\\\\\\\">\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                            classNames: {\\\\\\\\n                              root: \\\\\\\\\\\\\\\"btn-outline-danger border-0 shadow-none btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              setShowTimelineSetting(false);\\\\\\\\n                              setUpdatedProposalStatus(proposalStatus);\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                            disabled:\\\\\\\\n                              !supervisor &&\\\\\\\\n                              DecisionStage.includes(\\\\\\\\n                                updatedProposalStatus.value.status\\\\\\\\n                              ),\\\\\\\\n                            classNames: { root: \\\\\\\\\\\\\\\"green-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              if (snapshot.supervisor !== supervisor) {\\\\\\\\n                                editProposal({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              } else if (\\\\\\\\n                                updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.FUNDED\\\\\\\\n                              ) {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: {\\\\\\\\n                                    ...updatedProposalStatus.value,\\\\\\\\n                                    payouts: !paymentHashes[0]\\\\\\\\n                                      ? []\\\\\\\\n                                      : paymentHashes.filter(\\\\\\\\n                                          (item) => item !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                                        ),\\\\\\\\n                                  },\\\\\\\\n                                });\\\\\\\\n                              } else {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              }\\\\\\\\n                              setShowTimelineSetting(false);\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.2523354637443e+21
    }
  },
  {
    "id": "5384889594",
    "receipt_id": "9eVafjyDkEadabqYgyvpgorLCsZXAq8ddZAvmkgU7ktr",
    "predecessor_account_id": "system",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "GCPHfcrALtH6p9nrq8nr176rdHuuuR4Qp3t1jw7p8PPk",
      "block_height": 120426105,
      "block_timestamp": 1717511735340639500
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "9uqi7eq5BFakEb7fWc3JnpQa2cFRU5jMHG1qk2otZHQi",
    "included_in_block_hash": "8HvgM6sq9fU2v6HiC2QadS9WQxyfBAwiA1y8dfzoD1C",
    "block_timestamp": "1717511733025530815",
    "block": {
      "block_height": 120426103
    },
    "receipt_conversion_tokens_burnt": "64681691660400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.850912082869364e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.2523354637443e+21
    }
  },
  {
    "id": "5385039776",
    "receipt_id": "6CDovbToKLMciRLpyABUPTpqiRVCFnX6qvupXrLvhMdU",
    "predecessor_account_id": "infrastructure-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EbyhDniyKoTNZhYbNNTBZCjVisV4bUwh6zNGjhbzR4Q9",
      "block_height": 120426455,
      "block_timestamp": 1717512156931832800
    },
    "receipt_outcome": {
      "gas_burnt": 98190761279908,
      "tokens_burnt": 9.8190761279908e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "DiDisvqx4ep76zC7A39C16g8JZJD8prniXTweDaSWP79",
    "included_in_block_hash": "CboBXvTP8YhaHTdj3bT23sDMonfyZ6uyGiS9VqaFfrSS",
    "block_timestamp": "1717512155799313999",
    "block": {
      "block_height": 120426454
    },
    "receipt_conversion_tokens_burnt": "119926701745600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 9.8190761279908e+21,
        "args": "{\"data\": {\"infrastructure-committee.near\": {\"widget\": {\"includes.common\": {\"\": \"const REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.Rfp\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`) || {\\\\\\\\n  href: () => {},\\\\\\\\n};\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst accountId = context.accountId;\\\\\\\\n/*\\\\\\\\n  ---props---\\\\\\\\n  props.id: number;\\\\\\\\n  props.timestamp: number; optional\\\\\\\\n  accountId: string\\\\\\\\n  blockHeight:number\\\\\\\\n  */\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .description-box {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .accept-submission-info-container {\\\\\\\\n    background-color: #ecf8fb;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-3 {\\\\\\\\n    flex: 3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 20px;\\\\\\\\n    height: 20px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 180px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 135px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 180px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 75px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line-sm {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 70px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:disabled ~ .form-check-label,\\\\\\\\n  .form-check-input[disabled] ~ .form-check-label {\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input {\\\\\\\\n    border-color: black !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-btn {\\\\\\\\n    background-color: #687076;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-btn {\\\\\\\\n    background-color: #3c697d;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #3c697d !important;\\\\\\\\n    border-color: #3c697d !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-vertical {\\\\\\\\n    border-top: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n    border-bottom: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  button.px-0 {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  red-icon i {\\\\\\\\n    color: red;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  input[type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"] {\\\\\\\\n    min-width: 13px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst RfpContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Text = styled.p`\\\\\\\\n  display: block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 20px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  white-space: nowrap;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 12px;\\\\\\\\n  margin: -6px -6px 6px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst LinkProfile = ({ account, children }) => {\\\\\\\\n  return (\\\\\\\\n    <Link href={`/near/widget/ProfilePage?accountId=${account}`}>\\\\\\\\n      {children}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [snapshotHistory, setSnapshotHistory] = useState([]);\\\\\\\\n\\\\\\\\nconst rfp = Near.view(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n  rfp_id: parseInt(id),\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst queryName = RFP_INDEXER_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n  ${queryName}(\\\\\\\\n    offset: $offset\\\\\\\\n    limit: $limit\\\\\\\\n    order_by: {ts: asc}\\\\\\\\n    where: $where\\\\\\\\n  ) {\\\\\\\\n    editor_id\\\\\\\\n    name\\\\\\\\n    summary\\\\\\\\n    description\\\\\\\\n    ts\\\\\\\\n    rfp_id\\\\\\\\n    timeline\\\\\\\\n    labels\\\\\\\\n    submission_deadline\\\\\\\\n    linked_proposals\\\\\\\\n  }\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst fetchSnapshotHistory = () => {\\\\\\\\n  const variables = {\\\\\\\\n    where: { rfp_id: { _eq: id } },\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const data = result.body.data?.[queryName];\\\\\\\\n        const history = data.map((item) => {\\\\\\\\n          const rfpData = {\\\\\\\\n            ...item,\\\\\\\\n            timestamp: item.ts,\\\\\\\\n            timeline: parseJSON(item.timeline),\\\\\\\\n          };\\\\\\\\n          delete rfpData.ts;\\\\\\\\n          return rfpData;\\\\\\\\n        });\\\\\\\\n        setSnapshotHistory(history);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchSnapshotHistory();\\\\\\\\n}, [id]);\\\\\\\\n\\\\\\\\nif (!rfp) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nif (timestamp && rfp) {\\\\\\\\n  rfp.snapshot =\\\\\\\\n    snapshotHistory.find((item) => item.timestamp === timestamp) ??\\\\\\\\n    rfp.snapshot;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { snapshot } = rfp;\\\\\\\\nsnapshot.timeline = parseJSON(snapshot.timeline);\\\\\\\\n\\\\\\\\nconst authorId = rfp.author_id;\\\\\\\\nconst blockHeight = parseInt(rfp.social_db_post_block_height);\\\\\\\\nconst item = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n  path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n  blockHeight,\\\\\\\\n};\\\\\\\\nconst rfpURL = getLinkUsingCurrentGateway(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=rfp&id=${rfp.id}&timestamp=${snapshot.timestamp}`\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SidePanelItem = ({ title, children, hideBorder, ishidden }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ gap: \\\\\\\\\\\\\\\"8px\\\\\\\\\\\\\\\" }}\\\\\\\\n      className={\\\\\\\\n        ishidden\\\\\\\\n          ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"d-flex flex-column pb-3 \\\\\\\\\\\\\\\" + (!hideBorder && \\\\\\\\\\\\\\\" border-bottom\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{title} </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isAllowedToWriteRfp = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst link = href({\\\\\\\\n  widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n  params: {\\\\\\\\n    page: \\\\\\\\\\\\\\\"create-rfp\\\\\\\\\\\\\\\",\\\\\\\\n    id: rfp.id,\\\\\\\\n    timestamp: timestamp,\\\\\\\\n  },\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst createdDate = snapshotHistory[0].timestamp ?? snapshot.timestamp;\\\\\\\\n\\\\\\\\nconst [approvedProposals, setApprovedProposals] = useState([]);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\nconst [isWarningModalOpen, setWarningModal] = useState(false);\\\\\\\\nconst [timeline, setTimeline] = useState(null);\\\\\\\\nconst [showTimelineSetting, setShowTimelineSetting] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (!timeline) {\\\\\\\\n    setTimeline(snapshot.timeline);\\\\\\\\n  }\\\\\\\\n}, [snapshot]);\\\\\\\\n\\\\\\\\nfunction fetchApprovedRfpProposals() {\\\\\\\\n  const queryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      proposal_id\\\\\\\\n      name\\\\\\\\n      timeline\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  const FETCH_LIMIT = 50;\\\\\\\\n  const variables = {\\\\\\\\n    limit: FETCH_LIMIT,\\\\\\\\n    offset,\\\\\\\\n    where: {\\\\\\\\n      proposal_id: { _in: rfp.snapshot.linked_proposals },\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const data = result.body.data?.[queryName];\\\\\\\\n        const approved = [];\\\\\\\\n        data.map((item) => {\\\\\\\\n          const timeline = parseJSON(item.timeline);\\\\\\\\n          if (PROPOSALS_APPROVED_STATUS_ARRAY.includes(timeline.status)) {\\\\\\\\n            approved.push(item);\\\\\\\\n          }\\\\\\\\n        });\\\\\\\\n        setApprovedProposals(approved);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst editRFPStatus = () => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_rfp_timeline\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: rfp.id,\\\\\\\\n        timeline: timeline,\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\nconsole.log({ rfp });\\\\\\\\nconst onCancelRFP = (value) => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"cancel_rfp\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: rfp.id,\\\\\\\\n        proposals_to_cancel:\\\\\\\\n          value === CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS\\\\\\\\n            ? snapshot.linked_proposals\\\\\\\\n            : [],\\\\\\\\n        proposals_to_unlink:\\\\\\\\n          value === CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS\\\\\\\\n            ? snapshot.linked_proposals\\\\\\\\n            : [],\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst accessControlInfo =\\\\\\\\n  Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_access_control_info\\\\\\\\\\\\\\\"\\\\\\\\n  ) ?? null;\\\\\\\\nconst moderatorList =\\\\\\\\n  accessControlInfo?.members_list?.[\\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\"]?.children;\\\\\\\\n\\\\\\\\nfetchApprovedRfpProposals();\\\\\\\\n\\\\\\\\nconst SubmitProposalBtn = () => {\\\\\\\\n  return (\\\\\\\\n    <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <Link\\\\\\\\n        to={href({\\\\\\\\n          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n          params: { page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\", rfp_id: rfp.id },\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n          props={{\\\\\\\\n            label: (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle\\\\\\\\\\\\\\\"></i>Submit Proposal\\\\\\\\n              </div>\\\\\\\\n            ),\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"blue-btn\\\\\\\\\\\\\\\" },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </Link>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n        onConfirmClick: (value) => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onCancelRFP(value);\\\\\\\\n        },\\\\\\\\n        linkedProposalIds: snapshot.linked_proposals,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.WarningModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isWarningModalOpen,\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setWarningModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex px-3 px-lg-0 justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center h3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>{snapshot.name}</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">#{rfp.id}</div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_NEAR}/widget/ShareButton`}\\\\\\\\n          props={{\\\\\\\\n            postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            url: rfpURL,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        {isAllowedToWriteRfp && (\\\\\\\\n          <Link to={link} style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap flex-md-nowrap px-3 px-lg-0 gap-2 align-items-center text-sm pb-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n        props={{\\\\\\\\n          timelineStatus: snapshot.timeline.status,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"w-100 d-flex flex-wrap flex-md-nowrap gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n          <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n        </div>\\\\\\\\n        <div>created on {readableDate(createdDate / 1000000)}</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 full-width-div px-3 px-lg-0\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4\\\\\\\\\\\\\\\">\\\\\\\\n        {snapshot.timeline.status ===\\\\\\\\n          RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"accept-submission-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n              <b>This RFP is accepting submissions.</b>\\\\\\\\n              <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                Click Submit Proposal if you want to submit a proposal.\\\\\\\\n              </p>\\\\\\\\n            </div>\\\\\\\\n            <SubmitProposalBtn />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"my-4\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-6\\\\\\\\\\\\\\\">\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"flex-3 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                  <img src={RFP_IMAGE} height={35} width={35} />\\\\\\\\n                </div>\\\\\\\\n                <RfpContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Header className=\\\\\\\\\\\\\\\"d-flex gap-1 align-items-center p-2 px-3 \\\\\\\\\\\\\\\">\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ maxWidth: \\\\\\\\\\\\\\\"60%\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n                    </div>\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                        props={{\\\\\\\\n                          blockHeight,\\\\\\\\n                          blockTimestamp: createdDate,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      {context.accountId && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                          <Widget\\\\\\\\n                            src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                            props={{\\\\\\\\n                              accountId: authorId,\\\\\\\\n                              blockHeight: blockHeight,\\\\\\\\n                            }}\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </Header>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 p-2 px-3 description-box\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      RFP CATEGORY\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                          props={{\\\\\\\\n                            selected: snapshot.labels,\\\\\\\\n                            disabled: true,\\\\\\\\n                            hideDropdown: true,\\\\\\\\n                            onChange: () => {},\\\\\\\\n                            availableOptions: rfpLabelOptions,\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      SUMMARY\\\\\\\\n                    </div>\\\\\\\\n                    <div>{snapshot.summary}</div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n                      DESCRIPTION\\\\\\\\n                    </div>\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n                      props={{ text: snapshot.description }}\\\\\\\\n                    />\\\\\\\\n\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LikeButton`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          rfpId: rfp.id,\\\\\\\\n                          notifyAccountIds: moderatorList,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          showOverlay: false,\\\\\\\\n                          onClick: () => {},\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                        props={{\\\\\\\\n                          url: rfpURL,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                </RfpContainer>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.CommentsAndLogs`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    id: rfp.id,\\\\\\\\n                    item: item,\\\\\\\\n                    approvedProposals: approvedProposals,\\\\\\\\n                    snapshotHistory: snapshotHistory,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div\\\\\\\\n                style={{\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                className=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.ComposeComment`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    item: item,\\\\\\\\n                    notifyAccountIds: moderatorList,\\\\\\\\n                    rfpId: rfp.id,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                {snapshot.timeline.status ===\\\\\\\\n                  RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS && (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"accept-submission-info-container mt-3 p-3 p-sm-4 d-flex flex-wrap flex-md-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <div style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                      <b>Want to respond to this RFP? </b> This RFP is accepting\\\\\\\\n                      submissions.\\\\\\\\n                    </div>\\\\\\\\n                    <SubmitProposalBtn />\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 flex-1 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Submission Deadline\\\\\\\\\\\\\\\">\\\\\\\\n                <h5 className=\\\\\\\\\\\\\\\"text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {readableDate(\\\\\\\\n                    parseFloat(snapshot.submission_deadline / 1000000)\\\\\\\\n                  )}\\\\\\\\n                </h5>\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  <div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Timeline\\\\\\\\n                      {isAllowedToWriteRfp && (\\\\\\\\n                        <div\\\\\\\\n                          data-testid=\\\\\\\\\\\\\\\"setting-btn\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={() => setShowTimelineSetting(true)}\\\\\\\\n                        >\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.TimelineConfigurator`}\\\\\\\\n                  props={{\\\\\\\\n                    timeline: timeline,\\\\\\\\n                    setTimeline: (v) => {\\\\\\\\n                      if (\\\\\\\\n                        snapshot.timeline.status === v.status &&\\\\\\\\n                        timeline.status === v.status\\\\\\\\n                      ) {\\\\\\\\n                        return;\\\\\\\\n                      }\\\\\\\\n                      // if proposal selected timeline is selected and no approved proposals exist, show warning\\\\\\\\n                      if (\\\\\\\\n                        v.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED &&\\\\\\\\n                        Array.isArray(approvedProposals) &&\\\\\\\\n                        !approvedProposals.length\\\\\\\\n                      ) {\\\\\\\\n                        setWarningModal(true);\\\\\\\\n                      }\\\\\\\\n\\\\\\\\n                      if (v.status === RFP_TIMELINE_STATUS.CANCELLED) {\\\\\\\\n                        setCancelModal(true);\\\\\\\\n                      }\\\\\\\\n                      setTimeline(v);\\\\\\\\n                    },\\\\\\\\n                    disabled: showTimelineSetting ? false : true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                {showTimelineSetting && (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end text-sm mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"btn-outline-danger border-0 shadow-none btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        onClick: () => {\\\\\\\\n                          setShowTimelineSetting(false);\\\\\\\\n                          setTimeline(snapshot.timeline);\\\\\\\\n                        },\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                        classNames: { root: \\\\\\\\\\\\\\\"blue-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                        onClick: () => {\\\\\\\\n                          editRFPStatus();\\\\\\\\n                          setShowTimelineSetting(false);\\\\\\\\n                        },\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"Selected Proposal\\\\\\\\\\\\\\\" + \\\\\\\\\\\\\\\" (\\\\\\\\\\\\\\\" + approvedProposals.length + \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                ishidden={!approvedProposals.length}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedProposalIds: (approvedProposals ?? []).map(\\\\\\\\n                      (i) => i.proposal_id\\\\\\\\n                    ),\\\\\\\\n                    showStatus: false,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"All Proposals\\\\\\\\\\\\\\\" +\\\\\\\\n                  \\\\\\\\\\\\\\\" (\\\\\\\\\\\\\\\" +\\\\\\\\n                  snapshot.linked_proposals.length +\\\\\\\\n                  \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                ishidden={!snapshot.linked_proposals.length}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedProposalIds: snapshot.linked_proposals,\\\\\\\\n                    showStatus:\\\\\\\\n                      snapshot.timeline.status !==\\\\\\\\n                      RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.pages.app\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * This is the main entry point for the RFP application.\\\\\\\\n * Page route gets passed in through params, along with all other page props.\\\\\\\\n */\\\\\\\\n\\\\\\\\nconst { page, ...passProps } = props;\\\\\\\\n\\\\\\\\n// Import our modules\\\\\\\\nconst { AppLayout } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.template.AppLayout`\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!AppLayout) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\n// CSS styles to be used across the app.\\\\\\\\n// Define fonts here, as well as any other global styles.\\\\\\\\nconst Theme = styled.div`\\\\\\\\n  a {\\\\\\\\n    color: inherit;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .attractable {\\\\\\\\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\\\\\\\\n    transition: box-shadow 0.6s;\\\\\\\\n\\\\\\\\n    &:hover {\\\\\\\\n      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (!page) {\\\\\\\\n  // If no page is specified, we default to the feed page TEMP\\\\\\\\n  page = \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\n// This is our navigation, rendering the page based on the page parameter\\\\\\\\nfunction Page() {\\\\\\\\n  const routes = page.split(\\\\\\\\\\\\\\\".\\\\\\\\\\\\\\\");\\\\\\\\n  switch (routes[0]) {\\\\\\\\n    case \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.about`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"rfps\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.Feed`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.Rfp`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"create-rfp\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.Editor`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.Editor`}\\\\\\\\n          props={{ ...passProps }}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    case \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.Feed`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.Proposal`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.about`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"admin\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.admin`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    default: {\\\\\\\\n      // TODO: 404 page\\\\\\\\n      return <p>404</p>;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Theme>\\\\\\\\n    <AppLayout page={page}>\\\\\\\\n      <Page />\\\\\\\\n    </AppLayout>\\\\\\\\n  </Theme>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.Feed\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .rfp-card {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    border-bottom: none !important;\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-btn {\\\\\\\\n    background-color: #3c697d !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background: #e2e6ec;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .blue-btn {\\\\\\\\n      padding: 0.5rem 0.8rem !important;\\\\\\\\n      min-height: 32px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n  .fw-semi-bold {\\\\\\\\n    font-weight: 500;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  .text-normal {\\\\\\\\n    font-weight: normal !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst FeedItem = ({ rfp, index }) => {\\\\\\\\n  const accountId = rfp.author_id;\\\\\\\\n  const profile = Social.get(`${accountId}/profile/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\n  // We will have to get the rfp from the contract to get the block height.\\\\\\\\n  const blockHeight = parseInt(rfp.social_db_post_block_height);\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n    blockHeight: blockHeight,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n          id: rfp.rfp_id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      onClick={(e) => e.stopPropagation()}\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\n          \\\\\\\\\\\\\\\"rfp-card d-flex justify-content-between gap-2 text-muted cursor-pointer p-3 w-100 flex-wrap flex-sm-nowrap \\\\\\\\\\\\\\\" +\\\\\\\\n          (index !== 0 && \\\\\\\\\\\\\\\" border\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <img src={RFP_IMAGE} height={35} width={35} />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"h6 mb-0 text-black\\\\\\\\\\\\\\\">{rfp.name}</div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                props={{\\\\\\\\n                  selected: rfp.labels,\\\\\\\\n                  disabled: true,\\\\\\\\n                  hideDropdown: true,\\\\\\\\n                  onChange: () => {},\\\\\\\\n                  availableOptions: rfpLabelOptions,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap flex-sm-nowrap text-sm w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div>#{rfp.rfp_id} \\\\\\\\u{ff65} Created</div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight,\\\\\\\\n                  blockTimestamp: rfp.timestamp,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-4 flex-wrap flex-sm-nowrap text-sm w-100 text-muted my-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{ maxWidth: \\\\\\\\\\\\\\\"70%\\\\\\\\\\\\\\\" }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"fw-semi-bold\\\\\\\\\\\\\\\">Summay</div>\\\\\\\\n\\\\\\\\n                <div>{rfp.summary}</div>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ width: \\\\\\\\\\\\\\\"1px\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"bg-grey\\\\\\\\\\\\\\\"></div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"fw-semi-bold\\\\\\\\\\\\\\\">Submission Deadline</div>\\\\\\\\n                <h6 className=\\\\\\\\\\\\\\\"mb-0 text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {readableDate(rfp.submission_deadline / 1000000)}\\\\\\\\n                </h6>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center text-sm\\\\\\\\\\\\\\\">\\\\\\\\n              <div>\\\\\\\\n                <img\\\\\\\\n                  src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreif4p376f3qvpb2ewwsmi6fkcm3jalhuuzuxbgvehgl552agqw47ju\\\\\\\\\\\\\\\"\\\\\\\\n                  height={30}\\\\\\\\n                  width={30}\\\\\\\\n                />\\\\\\\\n                {rfp.linked_proposals.length ?? 0}\\\\\\\\n                proposals\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                  props={{\\\\\\\\n                    item,\\\\\\\\n                    showOverlay: false,\\\\\\\\n                    onClick: () => {},\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                comments\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"align-self-center\\\\\\\\\\\\\\\" style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n            props={{\\\\\\\\n              timelineStatus: rfp.timeline.status,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getRfp = (rfp_id) => {\\\\\\\\n  return Near.asyncView(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n    rfp_id,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FeedPage = () => {\\\\\\\\n  State.init({\\\\\\\\n    data: [],\\\\\\\\n    cachedItems: {},\\\\\\\\n    stage: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    sort: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    label: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    input: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    loading: false,\\\\\\\\n    loadingMore: false,\\\\\\\\n    aggregatedCount: null,\\\\\\\\n    currentlyDisplaying: 0,\\\\\\\\n    isFiltered: false,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  const queryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {rfp_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      author_id\\\\\\\\n      block_height\\\\\\\\n      name\\\\\\\\n      summary\\\\\\\\n      editor_id\\\\\\\\n      rfp_id\\\\\\\\n      timeline\\\\\\\\n      views\\\\\\\\n      labels\\\\\\\\n      submission_deadline\\\\\\\\n      linked_proposals\\\\\\\\n    }\\\\\\\\n    ${queryName}_aggregate(\\\\\\\\n      order_by: {rfp_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    )  {\\\\\\\\n      aggregate {\\\\\\\\n        count\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  function separateNumberAndText(str) {\\\\\\\\n    const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n    if (numberRegex.test(str)) {\\\\\\\\n      const number = str.match(numberRegex)[0];\\\\\\\\n      const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n      return { number: parseInt(number), text };\\\\\\\\n    } else {\\\\\\\\n      return { number: null, text: str.trim() };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const buildWhereClause = () => {\\\\\\\\n    let where = {};\\\\\\\\n\\\\\\\\n    if (state.label) {\\\\\\\\n      where = { labels: { _contains: state.label }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.stage) {\\\\\\\\n      // timeline is stored as jsonb\\\\\\\\n      where = {\\\\\\\\n        timeline: { _cast: { String: { _regex: `${state.stage}` } } },\\\\\\\\n        ...where,\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n    if (state.input) {\\\\\\\\n      const { number, text } = separateNumberAndText(state.input);\\\\\\\\n      if (number) {\\\\\\\\n        where = { rfp_id: { _eq: number }, ...where };\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      if (text) {\\\\\\\\n        where = {\\\\\\\\n          _or: [\\\\\\\\n            { name: { _iregex: `${text}` } },\\\\\\\\n            { summary: { _iregex: `${text}` } },\\\\\\\\n            { description: { _iregex: `${text}` } },\\\\\\\\n          ],\\\\\\\\n          ...where,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    State.update({ isFiltered: Object.keys(where).length > 0 });\\\\\\\\n    return where;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const buildOrderByClause = () => {\\\\\\\\n    /**\\\\\\\\n     * TODO\\\\\\\\n     * Most commented -> edit contract and indexer\\\\\\\\n     * Unanswered -> 0 comments\\\\\\\\n     */\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const makeMoreItems = () => {\\\\\\\\n    if (state.aggregatedCount <= state.currentlyDisplaying) return;\\\\\\\\n    fetchRfps(state.data.length);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchRfps = (offset) => {\\\\\\\\n    if (!offset) {\\\\\\\\n      offset = 0;\\\\\\\\n    }\\\\\\\\n    if (state.loading) return;\\\\\\\\n    const FETCH_LIMIT = 10;\\\\\\\\n    const variables = {\\\\\\\\n      limit: FETCH_LIMIT,\\\\\\\\n      offset,\\\\\\\\n      where: buildWhereClause(),\\\\\\\\n    };\\\\\\\\n    fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n      if (result.status === 200) {\\\\\\\\n        if (result.body.data) {\\\\\\\\n          const data = result.body.data?.[queryName];\\\\\\\\n          const totalResult = result.body.data?.[`${queryName}_aggregate`];\\\\\\\\n          State.update({ aggregatedCount: totalResult.aggregate.count });\\\\\\\\n          // Parse timeline\\\\\\\\n          fetchBlockHeights(data, offset);\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const renderItem = (item, index) => (\\\\\\\\n    <div\\\\\\\\n      key={item.rfp_id}\\\\\\\\n      className={\\\\\\\\n        (index !== state.data.length - 1 && \\\\\\\\\\\\\\\"border-bottom \\\\\\\\\\\\\\\") + index === 0 &&\\\\\\\\n        \\\\\\\\\\\\\\\" rounded-top-2 rfp-item-container\\\\\\\\\\\\\\\"\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <FeedItem rfp={item} index={index} />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n  const cachedRenderItem = (item, index) => {\\\\\\\\n    if (props.term) {\\\\\\\\n      return renderItem(item, {\\\\\\\\n        searchKeywords: [props.term],\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    const key = JSON.stringify(item);\\\\\\\\n\\\\\\\\n    if (!(key in state.cachedItems)) {\\\\\\\\n      state.cachedItems[key] = renderItem(item, index);\\\\\\\\n      State.update();\\\\\\\\n    }\\\\\\\\n    return state.cachedItems[key];\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    fetchRfps();\\\\\\\\n  }, [state.input, state.sort, state.label, state.stage]);\\\\\\\\n\\\\\\\\n  const mergeItems = (newItems) => {\\\\\\\\n    const items = [\\\\\\\\n      ...new Set([...newItems, ...state.data].map((i) => JSON.stringify(i))),\\\\\\\\n    ].map((i) => JSON.parse(i));\\\\\\\\n    // Sorting in the front end\\\\\\\\n    if (state.sort === \\\\\\\\\\\\\\\"rfp_id\\\\\\\\\\\\\\\" || state.sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.rfp_id - a.rfp_id);\\\\\\\\n    } else if (state.sort === \\\\\\\\\\\\\\\"views\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.views - a.views);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return items;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchBlockHeights = (data, offset) => {\\\\\\\\n    let promises = data.map((item) => getRfp(item.rfp_id));\\\\\\\\n    Promise.all(promises).then((blockHeights) => {\\\\\\\\n      data = data.map((item, index) => ({\\\\\\\\n        ...item,\\\\\\\\n        timeline: JSON.parse(item.timeline),\\\\\\\\n        social_db_post_block_height:\\\\\\\\n          blockHeights[index].social_db_post_block_height,\\\\\\\\n      }));\\\\\\\\n      if (offset) {\\\\\\\\n        let newData = mergeItems(data);\\\\\\\\n        State.update({\\\\\\\\n          data: newData,\\\\\\\\n          currentlyDisplaying: newData.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      } else {\\\\\\\\n        State.update({\\\\\\\\n          data,\\\\\\\\n          currentlyDisplaying: data.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const loader = (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const renderedItems = state.data ? state.data.map(cachedRenderItem) : null;\\\\\\\\n\\\\\\\\n  const isAllowedToWriteRfp = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      editor: context.accountId,\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between flex-wrap gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Heading>\\\\\\\\n          RFPs\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"text-muted text-normal\\\\\\\\\\\\\\\">\\\\\\\\n            ({state.aggregatedCount ?? state.data.length}){\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          </span>\\\\\\\\n        </Heading>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-input`}\\\\\\\\n            props={{\\\\\\\\n              search: state.input,\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-xs-100\\\\\\\\\\\\\\\",\\\\\\\\n              onSearch: (input) => {\\\\\\\\n                State.update({ input });\\\\\\\\n                fetchRfps();\\\\\\\\n              },\\\\\\\\n              onEnter: () => {\\\\\\\\n                fetchRfps();\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-sort`}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ sort: select.value });\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.FilterByLabel`}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ label: select.value });\\\\\\\\n              },\\\\\\\\n              availableOptions: rfpLabelOptions,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StageDropdown`}\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ stage: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        {isAllowedToWriteRfp && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"mt-2 mt-xs-0\\\\\\\\\\\\\\\">\\\\\\\\n            <Link\\\\\\\\n              to={href({\\\\\\\\n                widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                params: { page: \\\\\\\\\\\\\\\"create-rfp\\\\\\\\\\\\\\\" },\\\\\\\\n              })}\\\\\\\\n            >\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                props={{\\\\\\\\n                  label: (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                      <div>\\\\\\\\n                        <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                      </div>\\\\\\\\n                      Create RFP\\\\\\\\n                    </div>\\\\\\\\n                  ),\\\\\\\\n                  classNames: { root: \\\\\\\\\\\\\\\"blue-btn\\\\\\\\\\\\\\\" },\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </Link>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n      <div style={{ minHeight: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {!Array.isArray(state.data) ? (\\\\\\\\n          loader\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 mt-4 py-3 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"container-xl\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"bg-blue text-sm mt-2 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center mb-0\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    <i className=\\\\\\\\\\\\\\\"bi bi-info-circle\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                  <div>\\\\\\\\n                    <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                      Welcome to the Infrastructure RFP Feed!\\\\\\\\n                    </span>\\\\\\\\n                    This space features request for proposals (RFPs) by the NEAR\\\\\\\\n                    Infrastructure Committee for improving enhancements\\\\\\\\n                    pertaining to wallets, indexers, RPC services, explorers,\\\\\\\\n                    oracles, bridges, NEAR Protocol features, and related\\\\\\\\n                    ecosystem upgrades. You are welcome to respond to any RFPs\\\\\\\\n                    that are accepting submissions or submit an independent\\\\\\\\n                    proposal on the proposals page.\\\\\\\\n                  </div>\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mt-4 border rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                {state.aggregatedCount === 0 ? (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"m-2\\\\\\\\\\\\\\\">\\\\\\\\n                    {state.isFiltered ? (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-danger\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No RFP found for selected filter.\\\\\\\\n                      </div>\\\\\\\\n                    ) : (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-secondary\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No RFP has been created yet.\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                ) : state.aggregatedCount > 0 ? (\\\\\\\\n                  <InfiniteScroll\\\\\\\\n                    pageStart={0}\\\\\\\\n                    loadMore={makeMoreItems}\\\\\\\\n                    hasMore={state.aggregatedCount > state.data.length}\\\\\\\\n                    loader={loader}\\\\\\\\n                    useWindow={false}\\\\\\\\n                    threshold={100}\\\\\\\\n                  >\\\\\\\\n                    {renderedItems}\\\\\\\\n                  </InfiniteScroll>\\\\\\\\n                ) : (\\\\\\\\n                  loader\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn FeedPage(props);\\\\\\\\n\"}, \"near-prpsls-bos.components.pages.admin\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst accessControlInfo =\\\\\\\\n  Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_access_control_info\\\\\\\\\\\\\\\"\\\\\\\\n  ) ?? null;\\\\\\\\n\\\\\\\\nif (!accessControlInfo.members_list) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst rootMembers =\\\\\\\\n  Near.view(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_root_members\\\\\\\\\\\\\\\") ?? null;\\\\\\\\nconst teamNames = Object.keys(rootMembers || {});\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst noPermissionBanner = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"d-flex flex-column justify-content-center align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n    <h2 className=\\\\\\\\\\\\\\\"alert alert-danger p-3 h6\\\\\\\\\\\\\\\">\\\\\\\\n      Your account does not have administration permissions.\\\\\\\\n    </h2>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!isModerator) {\\\\\\\\n  return noPermissionBanner;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction createEditTeam({\\\\\\\\n  teamName,\\\\\\\\n  members,\\\\\\\\n  description,\\\\\\\\n  contractCall, // typescript edit_member || add_member\\\\\\\\n}) {\\\\\\\\n  let txn = [];\\\\\\\\n\\\\\\\\n  const membersAndTeams = Object.keys(accessControlInfo.members_list);\\\\\\\\n  members.forEach((member) => {\\\\\\\\n    // if Contract panic member does not exist in the members_list\\\\\\\\n    if (!membersAndTeams.includes(member)) {\\\\\\\\n      // Add member\\\\\\\\n      txn.push({\\\\\\\\n        contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        methodName: \\\\\\\\\\\\\\\"add_member\\\\\\\\\\\\\\\",\\\\\\\\n        args: {\\\\\\\\n          member: member,\\\\\\\\n          metadata: {\\\\\\\\n            member_metadata_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n            description: description,\\\\\\\\n            permissions: {},\\\\\\\\n            children: [],\\\\\\\\n            parents: [],\\\\\\\\n          },\\\\\\\\n        },\\\\\\\\n        gas: Big(10).pow(14),\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  // Check edit team\\\\\\\\n  Near.call([\\\\\\\\n    ...txn,\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: contractCall, // add_member || edit_member\\\\\\\\n      args: {\\\\\\\\n        member: `team:${teamName}`,\\\\\\\\n        metadata: {\\\\\\\\n          member_metadata_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n          description: description,\\\\\\\\n          permissions: {},\\\\\\\\n          children: members,\\\\\\\\n          parents: [],\\\\\\\\n        },\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  margin: 0 auto;\\\\\\\\n  padding: 20px;\\\\\\\\n  text-align: left;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Tab = styled.button`\\\\\\\\n  color: rgb(0, 236, 151);\\\\\\\\n  &:hover {\\\\\\\\n    color: rgba(0, 236, 151, 0.5);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 p-4\\\\\\\\\\\\\\\">\\\\\\\\n      <ul class=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"myTab\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"tablist\\\\\\\\\\\\\\\">\\\\\\\\n        <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n          <Tab\\\\\\\\n            className=\\\\\\\\\\\\\\\"nav-link active\\\\\\\\\\\\\\\"\\\\\\\\n            id=\\\\\\\\\\\\\\\"profile-tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-target=\\\\\\\\\\\\\\\"#profile\\\\\\\\\\\\\\\"\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            aria-controls=\\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\\"\\\\\\\\n            aria-selected=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            Moderators\\\\\\\\n          </Tab>\\\\\\\\n        </li>\\\\\\\\n      </ul>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"tab-content\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"myTabContent\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          class=\\\\\\\\\\\\\\\"tab-pane fade show active\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\\"\\\\\\\\n          role=\\\\\\\\\\\\\\\"tabpanel\\\\\\\\\\\\\\\"\\\\\\\\n          aria-labelledby=\\\\\\\\\\\\\\\"profile-tab\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.admin.moderatorsTab`}\\\\\\\\n            props={{\\\\\\\\n              accessControlInfo,\\\\\\\\n              createEditTeam,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.Editor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_RFP_EDIT\\\\\\\\\\\\\\\";\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://near.social/devhub.near/widget/app?page=community&handle=developer-dao&tab=funding\\\\\\\\\\\\\\\";\\\\\\\\nconst ToCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst CoCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\nconst isAllowedToWriteRfp = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!author || !isAllowedToWriteRfp) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LoginScreen`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nlet editRfpData = null;\\\\\\\\nlet draftRfpData = null;\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editRfpData = Near.view(\\\\\\\\n    `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}`,\\\\\\\\n    \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      rfp_id: parseInt(id),\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  input {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .h5 {\\\\\\\\n    font-size: 18px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .h6 {\\\\\\\\n      font-size: 14px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .text-sm {\\\\\\\\n      font-size: 11px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-light-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 6px;\\\\\\\\n    height: 6px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 1.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nfunction getTimestamp(date) {\\\\\\\\n  // in nanoseconds\\\\\\\\n  const parsedDate = date ? new Date(date) : new Date();\\\\\\\\n  return Math.floor(parsedDate.getTime() * 1000000).toString();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getDate(timestamp) {\\\\\\\\n  const stamp =\\\\\\\\n    !timestamp || timestamp === \\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\" || timestamp === \\\\\\\\\\\\\\\"NaN\\\\\\\\\\\\\\\" ? null : timestamp;\\\\\\\\n  return new Date(parseFloat(stamp / 1000000)).toISOString().split(\\\\\\\\\\\\\\\"T\\\\\\\\\\\\\\\")[0];\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [labels, setLabels] = useState([]);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [submissionDeadline, setSubmissionDeadline] = useState(null);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\n\\\\\\\\nconst [showRfpViewModal, setShowRfpViewModal] = useState(false); // when user creates/edit a RFP and confirm the txn, this is true\\\\\\\\nconst [rfpId, setRfpId] = useState(null);\\\\\\\\nconst [rfpIdsArray, setRfpIdsArray] = useState(null);\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [oldRfpData, setOldRfpData] = useState(null);\\\\\\\\nconst [timeline, setTimeline] = useState({\\\\\\\\n  status: RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS,\\\\\\\\n});\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftRfpData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editRfpData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      labels: labels,\\\\\\\\n      summary: summary,\\\\\\\\n      submission_deadline: getTimestamp(submissionDeadline),\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [title, summary, description, submissionDeadline, labels]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (allowDraft) {\\\\\\\\n    let data = editRfpData || JSON.parse(draftRfpData);\\\\\\\\n    let snapshot = data.snapshot;\\\\\\\\n    if (data) {\\\\\\\\n      if (timestamp) {\\\\\\\\n        snapshot =\\\\\\\\n          data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n          data.snapshot;\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        draftRfpData &&\\\\\\\\n        editRfpData &&\\\\\\\\n        editRfpData.id === JSON.parse(draftRfpData).id\\\\\\\\n      ) {\\\\\\\\n        snapshot = {\\\\\\\\n          ...editRfpData.snapshot,\\\\\\\\n          ...JSON.parse(draftRfpData).snapshot,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n      setRfpId(data.id);\\\\\\\\n      setLabels(snapshot.labels);\\\\\\\\n      setTitle(snapshot.name);\\\\\\\\n      setSummary(snapshot.summary);\\\\\\\\n      setDescription(snapshot.description);\\\\\\\\n      setSubmissionDeadline(getDate(snapshot.submission_deadline));\\\\\\\\n      setTimeline(parseJSON(snapshot.timeline));\\\\\\\\n      if (isEditPage) {\\\\\\\\n        setConsent({ toc: true, coc: true });\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [editRfpData, draftRfpData, allowDraft]);\\\\\\\\n\\\\\\\\n// show loader until LS data is set in state\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n    setLoading(false);\\\\\\\\n  }, 200);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (showRfpViewModal) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  setDisabledSubmitBtn(\\\\\\\\n    !title ||\\\\\\\\n      !description ||\\\\\\\\n      !summary ||\\\\\\\\n      !(labels ?? []).length ||\\\\\\\\n      !submissionDeadline ||\\\\\\\\n      !consent.toc ||\\\\\\\\n      !consent.coc\\\\\\\\n  );\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 10000);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, [\\\\\\\\n  memoizedDraftData,\\\\\\\\n  draftKey,\\\\\\\\n  draftRfpData,\\\\\\\\n  consent,\\\\\\\\n  isTxnCreated,\\\\\\\\n  showRfpViewModal,\\\\\\\\n]);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n// show RFP created after txn approval for popup wallet\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isTxnCreated) {\\\\\\\\n    if (editRfpData) {\\\\\\\\n      setOldRfpData(editRfpData);\\\\\\\\n      if (\\\\\\\\n        editRfpData &&\\\\\\\\n        typeof editRfpData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        oldRfpData &&\\\\\\\\n        typeof oldRfpData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        JSON.stringify(editRfpData) !== JSON.stringify(oldRfpData)\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setRfpId(editRfpData.id);\\\\\\\\n        setShowRfpViewModal(true);\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      const rfpIds = Near.view(\\\\\\\\n        REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        \\\\\\\\\\\\\\\"get_all_rfp_ids\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      if (Array.isArray(rfpIds) && !rfpIdsArray) {\\\\\\\\n        setRfpIdsArray(rfpIds);\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        Array.isArray(rfpIds) &&\\\\\\\\n        Array.isArray(rfpIdsArray) &&\\\\\\\\n        rfpIds.length !== rfpIdsArray.length\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setRfpId(rfpIds[rfpIds.length - 1]);\\\\\\\\n        setShowRfpViewModal(true);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes) {\\\\\\\\n    setLoading(true);\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(REPL_RPC_URL, {\\\\\\\\n          method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n          headers: {\\\\\\\\n            \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          body: JSON.stringify({\\\\\\\\n            jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n            id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n            method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n            params: [props.transactionHashes, context.accountId],\\\\\\\\n          }),\\\\\\\\n        }).then((transaction) => {\\\\\\\\n          const transaction_method_name =\\\\\\\\n            transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n              .method_name;\\\\\\\\n\\\\\\\\n          const is_edit_or_add_rfp_transaction =\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"add_rfp\\\\\\\\\\\\\\\" ||\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"edit_rfp\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n          if (is_edit_or_add_rfp_transaction) {\\\\\\\\n            setShowRfpViewModal(true);\\\\\\\\n            Storage.privateSet(draftKey, null);\\\\\\\\n          }\\\\\\\\n          // show the latest created rfp to user\\\\\\\\n          if (transaction_method_name == \\\\\\\\\\\\\\\"add_rfp\\\\\\\\\\\\\\\") {\\\\\\\\n            useCache(\\\\\\\\n              () =>\\\\\\\\n                Near.asyncView(\\\\\\\\n                  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n                  \\\\\\\\\\\\\\\"get_all_rfp_ids\\\\\\\\\\\\\\\"\\\\\\\\n                ).then((rfpIdsArray) => {\\\\\\\\n                  setRfpId(rfpIdsArray?.[rfpIdsArray?.length - 1]);\\\\\\\\n                }),\\\\\\\\n              props.transactionHashes + \\\\\\\\\\\\\\\"rfpIds\\\\\\\\\\\\\\\",\\\\\\\\n              { subscribe: false }\\\\\\\\n            );\\\\\\\\n          } else {\\\\\\\\n            setRfpId(id);\\\\\\\\n          }\\\\\\\\n          setLoading(false);\\\\\\\\n        }),\\\\\\\\n      props.transactionHashes + context.accountId,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  } else {\\\\\\\\n    if (showRfpViewModal) {\\\\\\\\n      setShowRfpViewModal(false);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    className=\\\\\\\\\\\\\\\"submit-rfp-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst onSubmit = () => {\\\\\\\\n  setCreateTxn(true);\\\\\\\\n  const body = {\\\\\\\\n    rfp_body_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    summary: summary,\\\\\\\\n    submission_deadline: getTimestamp(submissionDeadline),\\\\\\\\n    timeline: timeline,\\\\\\\\n  };\\\\\\\\n  const args = { labels: (labels ?? []).map((i) => i.value), body: body };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editRfpData.id;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_rfp\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_rfp\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [collapseState, setCollapseState] = useState({});\\\\\\\\n\\\\\\\\nconst CollapsibleContainer = ({ title, children, noPaddingTop }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"border-bottom py-4 \\\\\\\\\\\\\\\" +\\\\\\\\n        (noPaddingTop && \\\\\\\\\\\\\\\"pt-0 \\\\\\\\\\\\\\\") +\\\\\\\\n        (collapseState[title] && \\\\\\\\\\\\\\\" pb-0\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className={\\\\\\\\\\\\\\\"d-flex justify-content-between \\\\\\\\\\\\\\\"}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-2 mb-sm-3\\\\\\\\\\\\\\\">{title}</div>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex d-sm-none cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() =>\\\\\\\\n            setCollapseState((prevState) => ({\\\\\\\\n              ...prevState,\\\\\\\\n              [title]: !prevState[title],\\\\\\\\n            }))\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          {!collapseState[title] ? (\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-chevron-up h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          ) : (\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-chevron-down h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className={!collapseState[title] ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"}>{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategoryDropdown = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n      props={{\\\\\\\\n        selected: labels,\\\\\\\\n        onChange: (v) => setLabels(v),\\\\\\\\n        disabled: false,\\\\\\\\n        availableOptions: rfpLabelOptions,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setTitle(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 80,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst SummaryComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: summary,\\\\\\\\n        multiline: true,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSummary(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 500,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst DescriptionComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: description,\\\\\\\\n        onChange: setDescription,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        autoFocus: false,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst ConsentComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"toc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={ToCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Terms and Conditions\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.toc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              toc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"coc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={CoCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Code of Conduct\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.coc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              coc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst SubmissionDeadline = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: submissionDeadline,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSubmissionDeadline(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        type: \\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\\",\\\\\\\\n        inputProps: {\\\\\\\\n          required: true,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"w-100 py-2 px-0 px-sm-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.ViewRfpModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: showRfpViewModal,\\\\\\\\n        isEdit: isEditPage,\\\\\\\\n        rfpId: rfpId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n        onConfirmClick: (value) => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onCancelRFP(value);\\\\\\\\n        },\\\\\\\\n        linkedProposalIds: editRfpData.snapshot.linked_proposals,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.WarningModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isWarningModalOpen,\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setWarningModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Heading className=\\\\\\\\\\\\\\\"px-2 px-sm-0\\\\\\\\\\\\\\\">\\\\\\\\n      {isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} RFP\\\\\\\\n    </Heading>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 px-2 p-lg-0 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4 d-flex flex-wrap gap-6 w-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-2 w-100 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n              <img src={RFP_IMAGE} height={35} width={35} />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Select the relevant categories to help users quickly\\\\\\\\n                    understand the nature of the need. Need guidance? See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href={FundingDocs}\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Funding Docs\\\\\\\\n                    </a>\\\\\\\\n                    .\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {CategoryDropdown}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Highlight the essence of your RFP in a few words. This will appear on your RFP\\\\\\\\u{2019}s detail page and the main RFP feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {TitleComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Explain your RFP briefly. What is the problem or need, desired outcome, and benefit to the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SummaryComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  \\\\\\\\\\\\\\\"Expand on your summary with any relevant details like a detailed explanation of the problem and the expected solution, scope, and deliverables. Also include an estimate range for the project if you have a specific budget. And the selection criteria.\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {DescriptionComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\">\\\\\\\\n                {ConsentComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex justify-content-end gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <Link\\\\\\\\n                  to={\\\\\\\\n                    isEditPage\\\\\\\\n                      ? href({\\\\\\\\n                          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                          params: {\\\\\\\\n                            page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n                            id: parseInt(id),\\\\\\\\n                          },\\\\\\\\n                        })\\\\\\\\n                      : href({\\\\\\\\n                          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                          params: {\\\\\\\\n                            page: \\\\\\\\\\\\\\\"rfps\\\\\\\\\\\\\\\",\\\\\\\\n                          },\\\\\\\\n                        })\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  <Widget\\\\\\\\n                    src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                    props={{\\\\\\\\n                      classNames: {\\\\\\\\n                        root: \\\\\\\\\\\\\\\"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                      },\\\\\\\\n                      label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                      onClick: cleanDraft,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </Link>\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    classNames: {\\\\\\\\n                      root: \\\\\\\\\\\\\\\"d-flex h-100 fw-light-bold btn-outline shadow-none border-1\\\\\\\\\\\\\\\",\\\\\\\\n                    },\\\\\\\\n                    label: (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"circle grey\\\\\\\\\\\\\\\"></div> <div>Submit</div>\\\\\\\\n                      </div>\\\\\\\\n                    ),\\\\\\\\n                    onClick: onSubmit,\\\\\\\\n                    disabled: disabledSubmitBtn,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-1 w-100 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <CollapsibleContainer noPaddingTop={true}>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Submission Deadline\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Enter the deadline for submitting proposals.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SubmissionDeadline}\\\\\\\\n              </InputContainer>\\\\\\\\n            </div>\\\\\\\\n          </CollapsibleContainer>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Timeline\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.TimelineConfigurator`}\\\\\\\\n                props={{\\\\\\\\n                  timeline: timeline,\\\\\\\\n                  setTimeline: (v) => {\\\\\\\\n                    if (editRfpData.snapshot.timeline.status === v.status) {\\\\\\\\n                      return;\\\\\\\\n                    }\\\\\\\\n                    // if proposal selected timeline is selected and no approved proposals exist, show warning\\\\\\\\n                    if (\\\\\\\\n                      v.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED &&\\\\\\\\n                      Array.isArray(approvedProposals) &&\\\\\\\\n                      !approvedProposals.length\\\\\\\\n                    ) {\\\\\\\\n                      setWarningModal(true);\\\\\\\\n                    }\\\\\\\\n\\\\\\\\n                    if (v.status === RFP_TIMELINE_STATUS.CANCELLED) {\\\\\\\\n                      setCancelModal(true);\\\\\\\\n                    }\\\\\\\\n                    setTimeline(v);\\\\\\\\n                  },\\\\\\\\n                  disabled: isEditPage ? false : true,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Feed\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    border-bottom: none !important;\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-btn {\\\\\\\\n    background-color: #3c697d !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .blue-btn {\\\\\\\\n      padding: 0.5rem 0.8rem !important;\\\\\\\\n      min-height: 32px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  .text-normal {\\\\\\\\n    font-weight: normal !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst FeedItem = ({ proposal, index }) => {\\\\\\\\n  const accountId = proposal.author_id;\\\\\\\\n  proposal.timeline = parseJSON(proposal.timeline);\\\\\\\\n  const profile = Social.get(`${accountId}/profile/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\n  // We will have to get the proposal from the contract to get the block height.\\\\\\\\n  const blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n    blockHeight: blockHeight,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const isLinked = isNumber(proposal.linked_rfp);\\\\\\\\n  const rfpData = proposal.rfpData;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n          id: proposal.proposal_id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      onClick={(e) => e.stopPropagation()}\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\n          \\\\\\\\\\\\\\\"proposal-card d-flex justify-content-between gap-2 text-muted cursor-pointer p-3 w-100 flex-wrap flex-sm-nowrap \\\\\\\\\\\\\\\" +\\\\\\\\n          (index !== 0 && \\\\\\\\\\\\\\\" border\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n            props={{\\\\\\\\n              accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"h6 mb-0 text-black\\\\\\\\\\\\\\\">{proposal.name}</div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                props={{\\\\\\\\n                  selected: proposal.labels,\\\\\\\\n                  disabled: true,\\\\\\\\n                  hideDropdown: true,\\\\\\\\n                  onChange: () => {},\\\\\\\\n                  availableOptions: rfpLabelOptions,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {isLinked && rfpData && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-sm text-muted d-flex gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <i class=\\\\\\\\\\\\\\\"bi bi-link-45deg\\\\\\\\\\\\\\\"></i>\\\\\\\\n                In response to RFP :\\\\\\\\n                <a\\\\\\\\n                  className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                  href={href({\\\\\\\\n                    widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                    params: {\\\\\\\\n                      page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n                      id: rfpData.rfp_id,\\\\\\\\n                    },\\\\\\\\n                  })}\\\\\\\\n                  target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {rfpData.name}\\\\\\\\n                </a>\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap flex-sm-nowrap text-sm w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div>#{proposal.proposal_id} \\\\\\\\u{ff65} </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n                By {profile.name ?? accountId} \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              </div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight,\\\\\\\\n                  blockTimestamp: proposal.timestamp,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LikeButton`}\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  proposalId: proposal.id,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  showOverlay: false,\\\\\\\\n                  onClick: () => {},\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"align-self-center\\\\\\\\\\\\\\\" style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n            props={{\\\\\\\\n              timelineStatus: proposal.timeline.status,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getProposal = (proposal_id) => {\\\\\\\\n  return Near.asyncView(\\\\\\\\n    `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}`,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id,\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FeedPage = () => {\\\\\\\\n  State.init({\\\\\\\\n    data: [],\\\\\\\\n    cachedItems: {},\\\\\\\\n    stage: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    sort: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    label: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    input: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    loading: false,\\\\\\\\n    loadingMore: false,\\\\\\\\n    aggregatedCount: null,\\\\\\\\n    currentlyDisplaying: 0,\\\\\\\\n    isFiltered: false,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  const queryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      author_id\\\\\\\\n      block_height\\\\\\\\n      name\\\\\\\\n      labels\\\\\\\\n      summary\\\\\\\\n      editor_id\\\\\\\\n      proposal_id\\\\\\\\n      ts\\\\\\\\n      timeline\\\\\\\\n      views\\\\\\\\n      linked_rfp\\\\\\\\n    }\\\\\\\\n    ${queryName}_aggregate(\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    )  {\\\\\\\\n      aggregate {\\\\\\\\n        count\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  const rfpQueryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const rfpQuery = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${rfpQueryName}_bool_exp = {}) {\\\\\\\\n    ${rfpQueryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {rfp_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      name\\\\\\\\n      rfp_id\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  function separateNumberAndText(str) {\\\\\\\\n    const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n    if (numberRegex.test(str)) {\\\\\\\\n      const number = str.match(numberRegex)[0];\\\\\\\\n      const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n      return { number: parseInt(number), text };\\\\\\\\n    } else {\\\\\\\\n      return { number: null, text: str.trim() };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const buildWhereClause = () => {\\\\\\\\n    let where = {};\\\\\\\\n\\\\\\\\n    if (state.label) {\\\\\\\\n      where = { labels: { _contains: state.label }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.stage) {\\\\\\\\n      // timeline is stored as jsonb\\\\\\\\n      where = {\\\\\\\\n        timeline: { _cast: { String: { _regex: `${state.stage}` } } },\\\\\\\\n        ...where,\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n    if (state.input) {\\\\\\\\n      const { number, text } = separateNumberAndText(state.input);\\\\\\\\n      if (number) {\\\\\\\\n        where = { proposal_id: { _eq: number }, ...where };\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      if (text) {\\\\\\\\n        where = {\\\\\\\\n          _or: [\\\\\\\\n            { name: { _iregex: `${text}` } },\\\\\\\\n            { summary: { _iregex: `${text}` } },\\\\\\\\n            { description: { _iregex: `${text}` } },\\\\\\\\n          ],\\\\\\\\n          ...where,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    State.update({ isFiltered: Object.keys(where).length > 0 });\\\\\\\\n    return where;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const buildOrderByClause = () => {\\\\\\\\n    /**\\\\\\\\n     * TODO\\\\\\\\n     * Most commented -> edit contract and indexer\\\\\\\\n     * Unanswered -> 0 comments\\\\\\\\n     */\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const makeMoreItems = () => {\\\\\\\\n    if (state.aggregatedCount <= state.currentlyDisplaying) return;\\\\\\\\n    fetchProposals(state.data.length);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchProposals = (offset) => {\\\\\\\\n    if (!offset) {\\\\\\\\n      offset = 0;\\\\\\\\n    }\\\\\\\\n    if (state.loading) return;\\\\\\\\n    const FETCH_LIMIT = 10;\\\\\\\\n    const variables = {\\\\\\\\n      limit: FETCH_LIMIT,\\\\\\\\n      offset,\\\\\\\\n      where: buildWhereClause(),\\\\\\\\n    };\\\\\\\\n    fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n      if (result.status === 200) {\\\\\\\\n        if (result.body.data) {\\\\\\\\n          const data = result.body.data?.[queryName];\\\\\\\\n          const totalResult = result.body.data?.[`${queryName}_aggregate`];\\\\\\\\n          const promises = data.map((item) => {\\\\\\\\n            if (isNumber(item.linked_rfp)) {\\\\\\\\n              return fetchGraphQL(rfpQuery, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", {}).then(\\\\\\\\n                (result) => {\\\\\\\\n                  const rfpData = result.body.data?.[rfpQueryName];\\\\\\\\n                  return { ...item, rfpData: rfpData[0] };\\\\\\\\n                }\\\\\\\\n              );\\\\\\\\n            } else {\\\\\\\\n              return Promise.resolve(item);\\\\\\\\n            }\\\\\\\\n          });\\\\\\\\n          Promise.all(promises).then((res) => {\\\\\\\\n            State.update({ aggregatedCount: totalResult.aggregate.count });\\\\\\\\n            fetchBlockHeights(res, offset);\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const renderItem = (item, index) => (\\\\\\\\n    <div\\\\\\\\n      key={item.proposal_id}\\\\\\\\n      className={\\\\\\\\n        (index !== state.data.length - 1 && \\\\\\\\\\\\\\\"border-bottom \\\\\\\\\\\\\\\") + index === 0 &&\\\\\\\\n        \\\\\\\\\\\\\\\" rounded-top-2\\\\\\\\\\\\\\\"\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <FeedItem proposal={item} index={index} />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n  const cachedRenderItem = (item, index) => {\\\\\\\\n    if (props.term) {\\\\\\\\n      return renderItem(item, {\\\\\\\\n        searchKeywords: [props.term],\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    const key = JSON.stringify(item);\\\\\\\\n\\\\\\\\n    if (!(key in state.cachedItems)) {\\\\\\\\n      state.cachedItems[key] = renderItem(item, index);\\\\\\\\n      State.update();\\\\\\\\n    }\\\\\\\\n    return state.cachedItems[key];\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    fetchProposals();\\\\\\\\n  }, [state.sort, state.label, state.stage]);\\\\\\\\n\\\\\\\\n  const mergeItems = (newItems) => {\\\\\\\\n    const items = [\\\\\\\\n      ...new Set([...newItems, ...state.data].map((i) => JSON.stringify(i))),\\\\\\\\n    ].map((i) => JSON.parse(i));\\\\\\\\n    // Sorting in the front end\\\\\\\\n    if (state.sort === \\\\\\\\\\\\\\\"proposal_id\\\\\\\\\\\\\\\" || state.sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.proposal_id - a.proposal_id);\\\\\\\\n    } else if (state.sort === \\\\\\\\\\\\\\\"views\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.views - a.views);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return items;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchBlockHeights = (data, offset) => {\\\\\\\\n    let promises = data.map((item) => getProposal(item.proposal_id));\\\\\\\\n    Promise.all(promises).then((blockHeights) => {\\\\\\\\n      data = data.map((item, index) => ({\\\\\\\\n        ...item,\\\\\\\\n        timeline: JSON.parse(item.timeline),\\\\\\\\n        social_db_post_block_height:\\\\\\\\n          blockHeights[index].social_db_post_block_height,\\\\\\\\n      }));\\\\\\\\n      if (offset) {\\\\\\\\n        let newData = mergeItems(data);\\\\\\\\n        State.update({\\\\\\\\n          data: newData,\\\\\\\\n          currentlyDisplaying: newData.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      } else {\\\\\\\\n        State.update({\\\\\\\\n          data,\\\\\\\\n          currentlyDisplaying: data.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const loader = (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const renderedItems = state.data ? state.data.map(cachedRenderItem) : null;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between flex-wrap gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Heading>\\\\\\\\n          Proposals\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"text-muted text-normal\\\\\\\\\\\\\\\">\\\\\\\\n            ({state.aggregatedCount ?? state.data.length}){\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          </span>\\\\\\\\n        </Heading>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-input`}\\\\\\\\n            props={{\\\\\\\\n              search: state.input,\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-xs-100\\\\\\\\\\\\\\\",\\\\\\\\n              onSearch: (input) => {\\\\\\\\n                State.update({ input });\\\\\\\\n                fetchProposals();\\\\\\\\n              },\\\\\\\\n              onEnter: () => {\\\\\\\\n                fetchProposals();\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-sort`}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ sort: select.value });\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.FilterByLabel`}\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ label: select.value });\\\\\\\\n                },\\\\\\\\n                availableOptions: rfpLabelOptions,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-stage`}\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ stage: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"mt-2 mt-xs-0\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={href({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\" },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                label: (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                    <div>\\\\\\\\n                      <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                    </div>\\\\\\\\n                    Submit Proposal\\\\\\\\n                  </div>\\\\\\\\n                ),\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"blue-btn\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div style={{ minHeight: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {!Array.isArray(state.data) ? (\\\\\\\\n          loader\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 mt-4 py-3 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"container-xl\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"bg-blue text-sm mt-2 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center mb-0\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    <i className=\\\\\\\\\\\\\\\"bi bi-info-circle\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                  <div>\\\\\\\\n                    <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                      Welcome to the Infrastructure Committee Proposal Feed!\\\\\\\\n                    </span>\\\\\\\\n                    This dedicated space makes it easy to submit and track\\\\\\\\n                    funding proposals from the Infrastructure Committee, the\\\\\\\\n                    primary organization overseeing improvements pertaining to\\\\\\\\n                    wallets, indexers, RPC services, explorers, oracles,\\\\\\\\n                    bridges, NEAR Protocol features, and related ecosystem\\\\\\\\n                    upgrades. You are welcome to respond to any RFPs that are\\\\\\\\n                    accepting submissions or submit an independent proposal.\\\\\\\\n                  </div>\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mt-4 border rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                {state.aggregatedCount === 0 ? (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"m-2\\\\\\\\\\\\\\\">\\\\\\\\n                    {state.isFiltered ? (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-danger\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No proposal found for selected filter.\\\\\\\\n                      </div>\\\\\\\\n                    ) : (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-secondary\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No proposal has been created yet.\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                ) : state.aggregatedCount > 0 ? (\\\\\\\\n                  <InfiniteScroll\\\\\\\\n                    pageStart={0}\\\\\\\\n                    loadMore={makeMoreItems}\\\\\\\\n                    hasMore={state.aggregatedCount > state.data.length}\\\\\\\\n                    loader={loader}\\\\\\\\n                    useWindow={false}\\\\\\\\n                    threshold={100}\\\\\\\\n                  >\\\\\\\\n                    {renderedItems}\\\\\\\\n                  </InfiniteScroll>\\\\\\\\n                ) : (\\\\\\\\n                  loader\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn FeedPage(props);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.StatusTag\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst timelineStatus = props.timelineStatus;\\\\\\\\nconst size = props.size ?? \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst getClassNameByStatus = () => {\\\\\\\\n  switch (timelineStatus) {\\\\\\\\n    case RFP_TIMELINE_STATUS.CANCELLED:\\\\\\\\n      return \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\";\\\\\\\\n    case RFP_TIMELINE_STATUS.PROPOSAL_SELECTED:\\\\\\\\n      return \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\";\\\\\\\\n    case RFP_TIMELINE_STATUS.EVALUATION:\\\\\\\\n      return \\\\\\\\\\\\\\\"orange\\\\\\\\\\\\\\\";\\\\\\\\n    default:\\\\\\\\n      return \\\\\\\\\\\\\\\"black\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  font-size: ${({ size }) => {\\\\\\\\n    switch (size) {\\\\\\\\n      case \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\":\\\\\\\\n        return \\\\\\\\\\\\\\\"10px\\\\\\\\\\\\\\\";\\\\\\\\n      case \\\\\\\\\\\\\\\"lg\\\\\\\\\\\\\\\":\\\\\\\\n        return \\\\\\\\\\\\\\\"14px\\\\\\\\\\\\\\\";\\\\\\\\n      default:\\\\\\\\n        return \\\\\\\\\\\\\\\"12px\\\\\\\\\\\\\\\";\\\\\\\\n    }\\\\\\\\n  }};\\\\\\\\n\\\\\\\\n  min-width: fit-content;\\\\\\\\n\\\\\\\\n  .orange-tag {\\\\\\\\n    border: 1px solid #ff7a00 !important;\\\\\\\\n    color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-tag {\\\\\\\\n    border: 1px solid #000 !important;\\\\\\\\n    color: #000 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-tag {\\\\\\\\n    border: 1px solid #979797 !important;\\\\\\\\n    color: #979797 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-tag {\\\\\\\\n    border: 1px solid #04a46e !important;\\\\\\\\n    color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container size={size}>\\\\\\\\n    <div className={getClassNameByStatus() + \\\\\\\\\\\\\\\"-tag fw-bold rounded-2 p-1 px-2\\\\\\\\\\\\\\\"}>\\\\\\\\n      {(timelineStatus ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.organism.Navbar\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst page = props.page;\\\\\\\\n\\\\\\\\nconst [showMenu, setShowMenu] = useState(false);\\\\\\\\n\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst Logo = () => {\\\\\\\\n  const Wrapper = styled.div`\\\\\\\\n    .text-lg {\\\\\\\\n      font-size: 22px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    a:hover {\\\\\\\\n      text-decoration: none;\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <Link\\\\\\\\n        to={linkHref({\\\\\\\\n          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n          params: { page: \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\" },\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <img\\\\\\\\n            height={35}\\\\\\\\n            width={35}\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicgbhtzxgdb3noivjfx4xcwsx6nq5pnjttdc4fpgfq74ynqj5h6mq\\\\\\\\\\\\\\\"\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          <b className=\\\\\\\\\\\\\\\"text-lg\\\\\\\\\\\\\\\">infrastructure committee</b>\\\\\\\\n        </div>\\\\\\\\n      </Link>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst ProfileIcon = () => {\\\\\\\\n  const Wrapper = styled.svg`\\\\\\\\n    padding: 0.25rem;\\\\\\\\n    @media screen and (max-width: 768px) {\\\\\\\\n      display: none;\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.ProfileCard`}\\\\\\\\n      props={{ iconOnly: true, accountId: context.accountId || null }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst MenuIcon = () => (\\\\\\\\n  <svg\\\\\\\\n    xmlns=\\\\\\\\\\\\\\\"http://www.w3.org/2000/svg\\\\\\\\\\\\\\\"\\\\\\\\n    width=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n    height=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n    viewBox=\\\\\\\\\\\\\\\"0 0 16 16\\\\\\\\\\\\\\\"\\\\\\\\n    fill=\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ height: 20, width: 20 }}\\\\\\\\n  >\\\\\\\\n    <path\\\\\\\\n      fill-rule=\\\\\\\\\\\\\\\"evenodd\\\\\\\\\\\\\\\"\\\\\\\\n      clip-rule=\\\\\\\\\\\\\\\"evenodd\\\\\\\\\\\\\\\"\\\\\\\\n      d=\\\\\\\\\\\\\\\"M2 12.2986H14V13.3732H2V12.2986ZM2 9.07471H14V10.1493H2V9.07471ZM2 5.85083H14V6.92546H2V5.85083ZM2 2.62695H14V3.70158H2V2.62695Z\\\\\\\\\\\\\\\"\\\\\\\\n      fill=\\\\\\\\\\\\\\\"#818181\\\\\\\\\\\\\\\"\\\\\\\\n    />\\\\\\\\n  </svg>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Navbar = styled.div`\\\\\\\\n  padding: 1.5rem 0rem;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n\\\\\\\\n  background: #f4f4f4;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1.875rem 1.375rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinksContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 1.5rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: none;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst MobileMenu = styled.button`\\\\\\\\n  all: unset;\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nlet links = [\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Proposals\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"RFPs\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"rfps\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"About\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (isModerator) {\\\\\\\\n  links = [\\\\\\\\n    {\\\\\\\\n      title: \\\\\\\\\\\\\\\"Admin\\\\\\\\\\\\\\\",\\\\\\\\n      href: \\\\\\\\\\\\\\\"admin\\\\\\\\\\\\\\\",\\\\\\\\n      links: [],\\\\\\\\n    },\\\\\\\\n    ...links,\\\\\\\\n  ];\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst MobileNav = styled.div`\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: flex;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  position: absolute;\\\\\\\\n  top: 0;\\\\\\\\n  right: 0;\\\\\\\\n\\\\\\\\n  width: 207px;\\\\\\\\n\\\\\\\\n  padding: 24px 36px 36px 16px;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: flex-end;\\\\\\\\n  gap: 2.5rem;\\\\\\\\n  flex-shrink: 0;\\\\\\\\n\\\\\\\\n  border-radius: 0px 0px 0px 16px;\\\\\\\\n  background: rgba(41, 41, 41, 0.6);\\\\\\\\n  backdrop-filter: blur(5px);\\\\\\\\n\\\\\\\\n  z-index: 50;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst MobileLink = styled.a`\\\\\\\\n  color: #f4f4f4 !important;\\\\\\\\n  font-size: 20px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 20px; /* 100% */\\\\\\\\n  margin-bottom: 1rem;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    color: #00ec97 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n    color: #00ec97 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Navbar className=\\\\\\\\\\\\\\\"position-relative\\\\\\\\\\\\\\\">\\\\\\\\n    <Logo />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <LinksContainer>\\\\\\\\n        {links.map((link) => (\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.NavbarDropdown`}\\\\\\\\n            props={{\\\\\\\\n              title: link.title,\\\\\\\\n              href: link.href,\\\\\\\\n              links: link.links,\\\\\\\\n              page: page,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        ))}\\\\\\\\n      </LinksContainer>\\\\\\\\n      {context.accountId && <ProfileIcon />}\\\\\\\\n      <MobileMenu onClick={() => setShowMenu(!showMenu)}>\\\\\\\\n        <MenuIcon />\\\\\\\\n      </MobileMenu>\\\\\\\\n    </div>\\\\\\\\n    {showMenu && (\\\\\\\\n      <MobileNav>\\\\\\\\n        <div\\\\\\\\n          onClick={() => setShowMenu(!showMenu)}\\\\\\\\n          style={{ cursor: \\\\\\\\\\\\\\\"pointer\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-x\\\\\\\\\\\\\\\" style={{ fontSize: 20, color: \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\" }}></i>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n          {links.map((link, idx) =>\\\\\\\\n            link.href ? (\\\\\\\\n              <MobileLink\\\\\\\\n                key={`mobile-link-${idx}`}\\\\\\\\n                className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                href={`/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=${link.href}`}\\\\\\\\n              >\\\\\\\\n                {link.title}\\\\\\\\n              </MobileLink>\\\\\\\\n            ) : (\\\\\\\\n              link.links.map((it, idx) =>\\\\\\\\n                it.href.startsWith(\\\\\\\\\\\\\\\"http://\\\\\\\\\\\\\\\") ||\\\\\\\\n                it.href.startsWith(\\\\\\\\\\\\\\\"https://\\\\\\\\\\\\\\\") ? (\\\\\\\\n                  <MobileLink\\\\\\\\n                    key={`nested-link-${idx}`}\\\\\\\\n                    className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                    href={it.href}\\\\\\\\n                    target=\\\\\\\\\\\\\\\"no_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    /{it.title}\\\\\\\\n                  </MobileLink>\\\\\\\\n                ) : (\\\\\\\\n                  <MobileLink\\\\\\\\n                    key={`nested-link-${idx}`}\\\\\\\\n                    className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                    href={`/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=${it.href}`}\\\\\\\\n                  >\\\\\\\\n                    /{it.title}\\\\\\\\n                  </MobileLink>\\\\\\\\n                )\\\\\\\\n              )\\\\\\\\n            )\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </MobileNav>\\\\\\\\n    )}\\\\\\\\n  </Navbar>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.Compose\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst EmbeddCSS = `\\\\\\\\n  .CodeMirror {\\\\\\\\n   margin-inline:10px;\\\\\\\\n   border-radius:5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  .nav-link {\\\\\\\\n    color: inherit !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card-header {\\\\\\\\n    padding-bottom: 0px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Compose = ({\\\\\\\\n  data,\\\\\\\\n  onChange,\\\\\\\\n  autocompleteEnabled,\\\\\\\\n  placeholder,\\\\\\\\n  height,\\\\\\\\n  embeddCSS,\\\\\\\\n  showProposalIdAutoComplete,\\\\\\\\n  onChangeKeyup,\\\\\\\\n  handler,\\\\\\\\n}) => {\\\\\\\\n  State.init({\\\\\\\\n    data: data,\\\\\\\\n    selectedTab: \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\",\\\\\\\\n    autoFocus: false,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    if (typeof onChange === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\") {\\\\\\\\n      onChange(state.data);\\\\\\\\n    }\\\\\\\\n  }, [state.data]);\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    // for clearing editor after txn approval/ showing draft state\\\\\\\\n    if (data !== state.data || handler !== state.handler) {\\\\\\\\n      State.update({ data: data, handler: handler });\\\\\\\\n    }\\\\\\\\n  }, [data, handler]);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"card-header\\\\\\\\\\\\\\\" style={{ position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <div>\\\\\\\\n            <ul class=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\">\\\\\\\\n              <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class={`nav-link ${\\\\\\\\n                    state.selectedTab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  }`}\\\\\\\\n                  onClick={() =>\\\\\\\\n                    State.update({ selectedTab: \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\", autoFocus: true })\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  Write\\\\\\\\n                </button>\\\\\\\\n              </li>\\\\\\\\n              <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class={`nav-link ${\\\\\\\\n                    state.selectedTab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  }`}\\\\\\\\n                  onClick={() => State.update({ selectedTab: \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" })}\\\\\\\\n                >\\\\\\\\n                  Preview\\\\\\\\n                </button>\\\\\\\\n              </li>\\\\\\\\n            </ul>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {state.selectedTab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? (\\\\\\\\n          <>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.SimpleMDE`}\\\\\\\\n              props={{\\\\\\\\n                data: { handler: state.handler, content: state.data },\\\\\\\\n                onChange: (content) => {\\\\\\\\n                  State.update({ data: content, handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\" });\\\\\\\\n                },\\\\\\\\n                placeholder: placeholder,\\\\\\\\n                height,\\\\\\\\n                embeddCSS: embeddCSS || EmbeddCSS,\\\\\\\\n                showAutoComplete: autocompleteEnabled,\\\\\\\\n                showProposalIdAutoComplete: showProposalIdAutoComplete,\\\\\\\\n                autoFocus: state.autoFocus,\\\\\\\\n                onChangeKeyup: onChangeKeyup,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n              props={{\\\\\\\\n                text: state.data,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn Compose(props);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Editor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst { id, timestamp, rfp_id } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://near.social/${REPL_DEVHUB}/widget/app?page=community&handle=developer-dao&tab=funding\\\\\\\\\\\\\\\";\\\\\\\\nconst ToCDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1jcazxTemEsOf72nfAIbv6CR1og_w4qVXg7GjXuVoGeI/edit?usp=sharing\\\\\\\\\\\\\\\";\\\\\\\\nconst CoCDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1S0Ky1xPLRlCRSbX6nLOAxBba7b0dYb4SpGJzaAPqI9k/edit?usp=sharing\\\\\\\\\\\\\\\";\\\\\\\\nif (!author) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LoginScreen`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nlet editProposalData = null;\\\\\\\\nlet draftProposalData = null;\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_PROPOSAL_EDIT\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editProposalData = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id: parseInt(id),\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  input {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .h6 {\\\\\\\\n      font-size: 14px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .text-sm {\\\\\\\\n      font-size: 11px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #03ba16 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst tokensOptions = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\" },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"OTHER\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst [linkedRfp, setLinkedRfp] = useState(rfp_id ? parseInt(rfp_id) : null);\\\\\\\\nconst [labels, setLabels] = useState([]);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [linkedProposals, setLinkedProposals] = useState([]);\\\\\\\\nconst [receiverAccount, setReceiverAccount] = useState(context.accountId);\\\\\\\\nconst [requestedSponsorshipAmount, setRequestedSponsorshipAmount] =\\\\\\\\n  useState(null);\\\\\\\\nconst [requestedSponsorshipToken, setRequestedSponsorshipToken] = useState(\\\\\\\\n  tokensOptions[2]\\\\\\\\n);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\nconst [selectedStatus, setSelectedStatus] = useState(\\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\");\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\n\\\\\\\\nconst [showProposalViewModal, setShowProposalViewModal] = useState(false); // when user creates/edit a proposal and confirm the txn, this is true\\\\\\\\nconst [proposalId, setProposalId] = useState(null);\\\\\\\\nconst [proposalIdsArray, setProposalIdsArray] = useState(null);\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [oldProposalData, setOldProposalData] = useState(null);\\\\\\\\nconst [supervisor, setSupervisor] = useState(null);\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftProposalData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editProposalData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      linked_rfp: linkedRfp,\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      labels: labels,\\\\\\\\n      summary: summary,\\\\\\\\n      requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n      requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n      receiver_account: receiverAccount,\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [\\\\\\\\n    linkedRfp,\\\\\\\\n    title,\\\\\\\\n    summary,\\\\\\\\n    description,\\\\\\\\n    labels,\\\\\\\\n    requestedSponsorshipAmount,\\\\\\\\n    requestedSponsorshipToken,\\\\\\\\n    receiverAccount,\\\\\\\\n  ]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (allowDraft) {\\\\\\\\n    let data = editProposalData || JSON.parse(draftProposalData);\\\\\\\\n    let snapshot = data.snapshot;\\\\\\\\n    if (data) {\\\\\\\\n      if (timestamp) {\\\\\\\\n        snapshot =\\\\\\\\n          data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n          data.snapshot;\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        draftProposalData &&\\\\\\\\n        editProposalData &&\\\\\\\\n        editProposalData.id === JSON.parse(draftProposalData).id\\\\\\\\n      ) {\\\\\\\\n        snapshot = {\\\\\\\\n          ...editProposalData.snapshot,\\\\\\\\n          ...JSON.parse(draftProposalData).snapshot,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n      if (!isNumber(linkedRfp)) {\\\\\\\\n        setLinkedRfp(snapshot.linked_rfp);\\\\\\\\n      }\\\\\\\\n      setLabels(snapshot.labels ?? []);\\\\\\\\n      setTitle(snapshot.name);\\\\\\\\n      setSummary(snapshot.summary);\\\\\\\\n      setDescription(snapshot.description);\\\\\\\\n      setReceiverAccount(snapshot.receiver_account);\\\\\\\\n      setRequestedSponsorshipAmount(snapshot.requested_sponsorship_usd_amount);\\\\\\\\n      setSupervisor(snapshot.supervisor);\\\\\\\\n\\\\\\\\n      const token = tokensOptions.find(\\\\\\\\n        (item) => item.value === snapshot.requested_sponsorship_paid_in_currency\\\\\\\\n      );\\\\\\\\n      setRequestedSponsorshipToken(token ?? tokensOptions[2]);\\\\\\\\n      if (isEditPage) {\\\\\\\\n        setConsent({ toc: true, coc: true });\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [editProposalData, draftProposalData, allowDraft]);\\\\\\\\n\\\\\\\\n// show loader until LS data is set in state\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n    setLoading(false);\\\\\\\\n  }, 500);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (showProposalViewModal) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  setDisabledSubmitBtn(\\\\\\\\n    isTxnCreated ||\\\\\\\\n      !title ||\\\\\\\\n      !description ||\\\\\\\\n      !summary ||\\\\\\\\n      !(labels ?? []).length ||\\\\\\\\n      !requestedSponsorshipAmount ||\\\\\\\\n      !receiverAccount ||\\\\\\\\n      !consent.toc ||\\\\\\\\n      !consent.coc\\\\\\\\n  );\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 10000);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, [\\\\\\\\n  memoizedDraftData,\\\\\\\\n  draftKey,\\\\\\\\n  draftProposalData,\\\\\\\\n  consent,\\\\\\\\n  isTxnCreated,\\\\\\\\n  showProposalViewModal,\\\\\\\\n]);\\\\\\\\n\\\\\\\\n// set RFP labels, disable link rfp change when linked rfp is past accepting stage\\\\\\\\nconst [disabledLinkRFP, setDisableLinkRFP] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (linkedRfp) {\\\\\\\\n    Near.asyncView(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n      rfp_id: linkedRfp.value ?? linkedRfp,\\\\\\\\n    }).then((i) => {\\\\\\\\n      const timeline = parseJSON(i.snapshot.timeline);\\\\\\\\n      setDisableLinkRFP(\\\\\\\\n        !isModerator &&\\\\\\\\n          timeline.status !== RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS\\\\\\\\n      );\\\\\\\\n      setLabels(i.snapshot.labels);\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [linkedRfp]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    editProposalData &&\\\\\\\\n    editProposalData?.snapshot?.linked_proposals?.length > 0\\\\\\\\n  ) {\\\\\\\\n    editProposalData.snapshot.linked_proposals.map((item) => {\\\\\\\\n      useCache(\\\\\\\\n        () =>\\\\\\\\n          Near.asyncView(\\\\\\\\n            REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n            \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n            {\\\\\\\\n              proposal_id: parseInt(item),\\\\\\\\n            }\\\\\\\\n          ).then((proposal) => {\\\\\\\\n            setLinkedProposals([\\\\\\\\n              ...linkedProposals,\\\\\\\\n              {\\\\\\\\n                label: \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + proposal.id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + proposal.snapshot.name,\\\\\\\\n                value: proposal.id,\\\\\\\\n              },\\\\\\\\n            ]);\\\\\\\\n          }),\\\\\\\\n        item + \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\",\\\\\\\\n        { subscribe: false }\\\\\\\\n      );\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [editProposalData]);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n// show proposal created after txn approval for popup wallet\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isTxnCreated) {\\\\\\\\n    if (editProposalData) {\\\\\\\\n      setOldProposalData(editProposalData);\\\\\\\\n      if (\\\\\\\\n        editProposalData &&\\\\\\\\n        typeof editProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        oldProposalData &&\\\\\\\\n        typeof oldProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        JSON.stringify(editProposalData) !== JSON.stringify(oldProposalData)\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(editProposalData.id);\\\\\\\\n        setShowProposalViewModal(true);\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      const proposalIds = Near.view(\\\\\\\\n        REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      if (Array.isArray(proposalIds) && !proposalIdsArray) {\\\\\\\\n        setProposalIdsArray(proposalIds);\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        Array.isArray(proposalIds) &&\\\\\\\\n        Array.isArray(proposalIdsArray) &&\\\\\\\\n        proposalIds.length !== proposalIdsArray.length\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(proposalIds[proposalIds.length - 1]);\\\\\\\\n        setShowProposalViewModal(true);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  setLoading(false);\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes) {\\\\\\\\n    setLoading(true);\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(REPL_RPC_URL, {\\\\\\\\n          method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n          headers: {\\\\\\\\n            \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          body: JSON.stringify({\\\\\\\\n            jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n            id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n            method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n            params: [props.transactionHashes, context.accountId],\\\\\\\\n          }),\\\\\\\\n        }).then((transaction) => {\\\\\\\\n          const transaction_method_name =\\\\\\\\n            transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n              .method_name;\\\\\\\\n\\\\\\\\n          const is_edit_or_add_post_transaction =\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\" ||\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n          if (is_edit_or_add_post_transaction) {\\\\\\\\n            setShowProposalViewModal(true);\\\\\\\\n            Storage.privateSet(draftKey, null);\\\\\\\\n          }\\\\\\\\n          // show the latest created proposal to user\\\\\\\\n          if (transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\") {\\\\\\\\n            useCache(\\\\\\\\n              () =>\\\\\\\\n                Near.asyncView(\\\\\\\\n                  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n                  \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n                ).then((proposalIdsArray) => {\\\\\\\\n                  setProposalId(\\\\\\\\n                    proposalIdsArray?.[proposalIdsArray?.length - 1]\\\\\\\\n                  );\\\\\\\\n                }),\\\\\\\\n              props.transactionHashes + \\\\\\\\\\\\\\\"proposalIds\\\\\\\\\\\\\\\",\\\\\\\\n              { subscribe: false }\\\\\\\\n            );\\\\\\\\n          } else {\\\\\\\\n            setProposalId(id);\\\\\\\\n          }\\\\\\\\n          setLoading(false);\\\\\\\\n        }),\\\\\\\\n      props.transactionHashes + context.accountId,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  } else {\\\\\\\\n    if (showProposalViewModal) {\\\\\\\\n      setShowProposalViewModal(false);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst DropdowntBtnContainer = styled.div`\\\\\\\\n  font-size: 13px;\\\\\\\\n  min-width: 150px;\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .select-header {\\\\\\\\n    display: flex;\\\\\\\\n    justify-content: space-between;\\\\\\\\n    align-items: center;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    border-radius-top: 5px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    background-color: #fff;\\\\\\\\n    border-radius: 5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .no-border {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .options-card {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 0;\\\\\\\\n    width: 200%;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    background-color: #fff;\\\\\\\\n    padding: 0.5rem;\\\\\\\\n    z-index: 99;\\\\\\\\n    font-size: 13px;\\\\\\\\n    border-radius:0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .left {\\\\\\\\n    right: 0 !important;\\\\\\\\n    left: auto !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .options-card {\\\\\\\\n      right: 0 !important;\\\\\\\\n      left: auto !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option {\\\\\\\\n    margin-block: 5px;\\\\\\\\n    padding: 10px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    border-bottom: 1px solid #f0f0f0;\\\\\\\\n    transition: background-color 0.3s ease;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:hover {\\\\\\\\n    background-color: #f0f0f0; /* Custom hover effect color */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:last-child {\\\\\\\\n    border-bottom: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f4f4f4 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    font-weight: 500;\\\\\\\\n    color: #b3b3b3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 8px;\\\\\\\\n    height: 8px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green {\\\\\\\\n    background-color: #04a46e;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"submit-proposal-draft-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SubmitBtn = () => {\\\\\\\\n  const btnOptions = [\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Submit Draft\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"The author can still edit the proposal and build consensus before sharing it with sponsors.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Ready for Review\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"Start the official review process with sponsors. This will lock the editing function, but comments are still open.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"review\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  const handleOptionClick = (option) => {\\\\\\\\n    setDraftBtnOpen(false);\\\\\\\\n    setSelectedStatus(option.value);\\\\\\\\n    handleSubmit(option.value);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const toggleDropdown = () => {\\\\\\\\n    setDraftBtnOpen(!isDraftBtnOpen);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const handleSubmit = (status) => {\\\\\\\\n    const isDraft = status === \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\";\\\\\\\\n    if (isDraft) {\\\\\\\\n      onSubmit({ isDraft });\\\\\\\\n      cleanDraft();\\\\\\\\n    } else {\\\\\\\\n      setReviewModal(true);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <DropdowntBtnContainer>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"custom-select\\\\\\\\\\\\\\\"\\\\\\\\n        tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n        onBlur={() => setDraftBtnOpen(false)}\\\\\\\\n      >\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\n            \\\\\\\\\\\\\\\"select-header d-flex gap-1 align-items-center submit-draft-button \\\\\\\\\\\\\\\" +\\\\\\\\n            (disabledSubmitBtn && \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\")\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            onClick={() => !disabledSubmitBtn && handleSubmit(selectedStatus)}\\\\\\\\n            className=\\\\\\\\\\\\\\\"p-2 d-flex gap-2 align-items-center \\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {isTxnCreated ? (\\\\\\\\n              LoadingButtonSpinner\\\\\\\\n            ) : (\\\\\\\\n              <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + selectedOption.iconColor}></div>\\\\\\\\n            )}\\\\\\\\n            <div className={`selected-option`}>{selectedOption.label}</div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"h-100 p-2\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ borderLeft: \\\\\\\\\\\\\\\"1px solid #ccc\\\\\\\\\\\\\\\" }}\\\\\\\\n            onClick={!disabledSubmitBtn && toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <i class={`bi bi-chevron-${isDraftBtnOpen ? \\\\\\\\\\\\\\\"up\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\"}`}></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {isDraftBtnOpen && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"options-card\\\\\\\\\\\\\\\">\\\\\\\\n            {btnOptions.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`option ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n              >\\\\\\\\n                <div className={`d-flex gap-2 align-items-center`}>\\\\\\\\n                  <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + option.iconColor}></div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">{option.label}</div>\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-muted text-xs\\\\\\\\\\\\\\\">{option.description}</div>\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </DropdowntBtnContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst onSubmit = ({ isDraft, isCancel }) => {\\\\\\\\n  setCreateTxn(true);\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"submitting transaction\\\\\\\\\\\\\\\");\\\\\\\\n  const linkedProposalsIds = linkedProposals.map((item) => item.value) ?? [];\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    linked_rfp: linkedRfp?.value,\\\\\\\\n    category: \\\\\\\\\\\\\\\"Infrastructure Committee\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    summary: summary,\\\\\\\\n    linked_proposals: linkedProposalsIds,\\\\\\\\n    requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n    requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n    receiver_account: receiverAccount,\\\\\\\\n    requested_sponsor: \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\",\\\\\\\\n    supervisor: supervisor,\\\\\\\\n    timeline: isCancel\\\\\\\\n      ? {\\\\\\\\n          status: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        }\\\\\\\\n      : isDraft\\\\\\\\n      ? { status: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\" }\\\\\\\\n      : {\\\\\\\\n          status: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        },\\\\\\\\n  };\\\\\\\\n  const args = {\\\\\\\\n    labels: linkedRfp ? [] : (labels ?? []).map((i) => i.value ?? i),\\\\\\\\n    body: body,\\\\\\\\n  };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editProposalData.id;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [collapseState, setCollapseState] = useState({});\\\\\\\\n\\\\\\\\nconst CollapsibleContainer = ({ title, children, noPaddingTop }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"border-bottom py-4 \\\\\\\\\\\\\\\" +\\\\\\\\n        (noPaddingTop && \\\\\\\\\\\\\\\"pt-0 \\\\\\\\\\\\\\\") +\\\\\\\\n        (collapseState[title] && \\\\\\\\\\\\\\\" pb-0\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className={\\\\\\\\\\\\\\\"d-flex justify-content-between \\\\\\\\\\\\\\\"}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-2 mb-sm-3\\\\\\\\\\\\\\\">{title}</div>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex d-sm-none cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() =>\\\\\\\\n            setCollapseState((prevState) => ({\\\\\\\\n              ...prevState,\\\\\\\\n              [title]: !prevState[title],\\\\\\\\n            }))\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          {!collapseState[title] ? (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-up h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          ) : (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-down h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className={!collapseState[title] ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"}>{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategoryDropdown = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n      props={{\\\\\\\\n        selected: labels,\\\\\\\\n        onChange: (v) => setLabels(v),\\\\\\\\n        disabled: linkedRfp, // when RFP is linked, labels are disabled\\\\\\\\n        linkedRfp: linkedRfp,\\\\\\\\n\\\\\\\\n        availableOptions: rfpLabelOptions,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData, linkedRfp, labels]);\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setTitle(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 80,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst SummaryComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: summary,\\\\\\\\n        multiline: true,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSummary(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 500,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst DescriptionComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: description,\\\\\\\\n        onChange: setDescription,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        autoFocus: false,\\\\\\\\n        showProposalIdAutoComplete: true,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ConsentComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"toc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={ToCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Infrastructure Committee\\\\\\\\u{2019}s Terms and Conditions\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.toc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              toc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"coc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={CoCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Infrastructure Committee\\\\\\\\u{2019}s Code of Conduct\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.coc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              coc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ProfileComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"mob.near/widget/Profile.ShortInlineBlock\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        accountId: author,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst LinkRFPComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedRfpDropdown`}\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedRfp,\\\\\\\\n          linkedRfp: linkedRfp,\\\\\\\\n          disabled: disabledLinkRFP,\\\\\\\\n          onDeleteRfp: () => setLabels([]),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData, disabledLinkRFP]);\\\\\\\\n\\\\\\\\nconst LinkedProposalsComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">\\\\\\\\n        Link any relevant proposals (e.g. previous milestones).\\\\\\\\n      </div>\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposalsDropdown`}\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedProposals,\\\\\\\\n          linkedProposals: linkedProposals,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ReceiverAccountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.AccountInput`}\\\\\\\\n      props={{\\\\\\\\n        value: receiverAccount,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Enter Address\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: setReceiverAccount,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst AmountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: requestedSponsorshipAmount,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          setRequestedSponsorshipAmount(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\",\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"$\\\\\\\\\\\\\\\",\\\\\\\\n          inputmode: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\",\\\\\\\\n          pattern: \\\\\\\\\\\\\\\"[0-9]*\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst CurrencyComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n      props={{\\\\\\\\n        options: tokensOptions,\\\\\\\\n        selectedValue: requestedSponsorshipToken,\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setRequestedSponsorshipToken(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-0 px-sm-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    <Heading className=\\\\\\\\\\\\\\\"px-2 px-sm-0\\\\\\\\\\\\\\\">\\\\\\\\n      {isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} Proposal\\\\\\\\n    </Heading>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.ViewProposalModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: showProposalViewModal,\\\\\\\\n        isEdit: isEditPage,\\\\\\\\n        proposalId: proposalId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmReviewModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          cleanDraft();\\\\\\\\n          onSubmit({ isDraft: false });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onSubmit({ isCancel: true });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 px-2 p-lg-0 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4 d-flex flex-wrap gap-6 w-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-2 w-100 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n                props={{\\\\\\\\n                  accountId: author,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Link RFP (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    \\\\\\\\\\\\\\\"Link this proposal if it is a response to a specific RFP. You can only link to active RFPs in the \\\\\\\\u{201c}Accepting Submission\\\\\\\\u{201d} stage. You can only link to one RFP.\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {LinkRFPComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Select the relevant categories that best align with your\\\\\\\\n                    contribution to the NEAR developer community. Need guidance?\\\\\\\\n                    See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href={FundingDocs}\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Funding Docs\\\\\\\\n                    </a>\\\\\\\\n                    .\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {CategoryDropdown}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Highlight the essence of your proposal in a few words. This will appear on your proposal\\\\\\\\u{2019}s detail page and the main proposal feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {TitleComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Explain your proposal briefly. This is your chance to make a good first impression on the community. Include what needs or goals your work will address, your solution, and the benefit for the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SummaryComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Expand on your summary with any relevant details like your\\\\\\\\n                    contribution timeline, key milestones, team background, and\\\\\\\\n                    a clear breakdown of how the funds will be used. Proposals\\\\\\\\n                    should be simple and clear (e.g. 1 month). For more complex\\\\\\\\n                    projects, treat each milestone as a separate proposal.\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {DescriptionComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\">\\\\\\\\n                {ConsentComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <div>\\\\\\\\n                  {isEditPage && (\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                          </div>\\\\\\\\n                        ),\\\\\\\\n                        onClick: () => setCancelModal(true),\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n                <div\\\\\\\\n                  className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\"\\\\\\\\n                  style={{\\\\\\\\n                    height: isDraftBtnOpen ? \\\\\\\\\\\\\\\"25vh\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"auto\\\\\\\\\\\\\\\",\\\\\\\\n                    alignItems: isDraftBtnOpen ? \\\\\\\\\\\\\\\"flex-start\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                >\\\\\\\\n                  <Link\\\\\\\\n                    to={\\\\\\\\n                      isEditPage\\\\\\\\n                        ? href({\\\\\\\\n                            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                              id: parseInt(id),\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                        : href({\\\\\\\\n                            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                    }\\\\\\\\n                  >\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                        onClick: cleanDraft,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </Link>\\\\\\\\n                  <SubmitBtn />\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-1 w-100 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <CollapsibleContainer noPaddingTop={true} title=\\\\\\\\\\\\\\\"Author Details\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                {ProfileComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n            </div>\\\\\\\\n          </CollapsibleContainer>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Link Proposals (Optional)\\\\\\\\\\\\\\\">\\\\\\\\n              {LinkedProposalsComponent}\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Funding Details\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Recipient NEAR Wallet Address\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Enter the address that will receive the funds. We\\\\\\\\u{2019}ll need this to send a test transaction once your proposal is approved.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {ReceiverAccountComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading={\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Recipient Verification Status\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"custom-tooltip\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-info-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        <span class=\\\\\\\\\\\\\\\"tooltiptext\\\\\\\\\\\\\\\">\\\\\\\\n                          To get approved and receive payments on our platform,\\\\\\\\n                          you must complete KYC/KYB verification using Fractal,\\\\\\\\n                          a trusted identity verification solution. This helps\\\\\\\\n                          others trust transactions with your account. Click\\\\\\\\n                          \\\\\\\\\\\\\\\"Get Verified\\\\\\\\\\\\\\\" to start. <br />\\\\\\\\n                          <br />\\\\\\\\n                          Once verified, your profile will display a badge,\\\\\\\\n                          which is valid for 365 days from the date of your\\\\\\\\n                          verification. You must renew your verification upon\\\\\\\\n                          expiration OR if any of your personal information\\\\\\\\n                          changes.\\\\\\\\n                        </span>\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  }\\\\\\\\n                  description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"border border-1 p-3 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.VerificationStatus`}\\\\\\\\n                      props={{\\\\\\\\n                        receiverAccount: receiverAccount,\\\\\\\\n                        showGetVerifiedBtn: true,\\\\\\\\n                        imageSize: 30,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Total Amount (USD)\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    <>\\\\\\\\n                      Enter the exact amount you are seeking. See\\\\\\\\n                      <a\\\\\\\\n                        href={FundingDocs}\\\\\\\\n                        className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        Funding Documentation\\\\\\\\n                      </a>\\\\\\\\n                      for guidelines.\\\\\\\\n                    </>\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {AmountComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Currency\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Select your preferred currency for receiving funds. Note: The exchange rate for NEAR tokens will be the closing rate at the day of the invoice.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {CurrencyComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.core.lib.contract\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nfunction ensureOtherIsLast(arr) {\\\\\\\\n  const otherIndex = arr.findIndex((item) => item.value === \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  if (otherIndex !== -1) {\\\\\\\\n    const [otherItem] = arr.splice(otherIndex, 1);\\\\\\\\n    arr.push(otherItem);\\\\\\\\n  }\\\\\\\\n  return arr;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getGlobalLabels() {\\\\\\\\n  let labels = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_global_labels\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n  if (labels !== null) {\\\\\\\\n    labels = ensureOtherIsLast(labels);\\\\\\\\n  }\\\\\\\\n  return labels ?? null;\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn {\\\\\\\\n  getGlobalLabels,\\\\\\\\n};\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.ViewRfpModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst isEdit = props.isEdit;\\\\\\\\nconst rfpId = props.rfpId;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.9);\\\\\\\\n  opacity: 0.9;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 30%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">\\\\\\\\n            Your RFP has been successfully {!isEdit ? \\\\\\\\\\\\\\\"published\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"edited\\\\\\\\\\\\\\\"}.\\\\\\\\n          </h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-center mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={linkHref({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\", id: rfpId },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-blue\\\\\\\\\\\\\\\" },\\\\\\\\n                label: \\\\\\\\\\\\\\\"View RFP\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: () => {},\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.WarningModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst onConfirmClick = props.onConfirmClick;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.5);\\\\\\\\n  opacity: 0.4;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Warning: No approved proposal found!</h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n        <ModalContent>\\\\\\\\n          You haven\\\\\\\\\\\\'t approved any proposals linked to the RFP. Please approve a\\\\\\\\n          proposal to proceed to the proposal selection phase.\\\\\\\\n        </ModalContent>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-outline-secondary\\\\\\\\\\\\\\\" },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Dismiss\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onConfirmClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.SimpleMDE\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * iframe embedding a SimpleMDE component\\\\\\\\n * https://github.com/sparksuite/simplemde-markdown-editor\\\\\\\\n */\\\\\\\\n\\\\\\\\nconst data = props.data;\\\\\\\\nconst onChange = props.onChange ?? (() => {});\\\\\\\\nconst onChangeKeyup = props.onChangeKeyup ?? (() => {}); // in case where we want immediate action\\\\\\\\nconst height = props.height ?? \\\\\\\\\\\\\\\"390\\\\\\\\\\\\\\\";\\\\\\\\nconst className = props.className ?? \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\";\\\\\\\\nconst embeddCSS = props.embeddCSS;\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  iframeHeight: height,\\\\\\\\n  message: props.data,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst profilesData = Social.get(\\\\\\\\\\\\\\\"*/profile/name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\nconst followingData = Social.get(\\\\\\\\n  `${context.accountId}/graph/follow/**`,\\\\\\\\n  \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\n// SIMPLEMDE CONFIG //\\\\\\\\nconst fontFamily = props.fontFamily ?? \\\\\\\\\\\\\\\"sans-serif\\\\\\\\\\\\\\\";\\\\\\\\nconst alignToolItems = props.alignToolItems ?? \\\\\\\\\\\\\\\"right\\\\\\\\\\\\\\\";\\\\\\\\nconst placeholder = props.placeholder ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst showAccountAutoComplete = props.showAutoComplete ?? false;\\\\\\\\nconst showProposalIdAutoComplete = props.showProposalIdAutoComplete ?? false;\\\\\\\\nconst showRfpIdAutoComplete = props.showRfpIdAutoComplete ?? false;\\\\\\\\nconst autoFocus = props.autoFocus ?? false;\\\\\\\\n\\\\\\\\nconst proposalQueryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst proposalLink = getLinkUsingCurrentGateway(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=proposal&id=`\\\\\\\\n);\\\\\\\\nconst proposalQuery = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${proposalQueryName}_bool_exp = {}) {\\\\\\\\n${proposalQueryName}(\\\\\\\\n  offset: $offset\\\\\\\\n  limit: $limit\\\\\\\\n  order_by: {proposal_id: desc}\\\\\\\\n  where: $where\\\\\\\\n) {\\\\\\\\n  name\\\\\\\\n  proposal_id\\\\\\\\n}\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst rfpQueryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst rfpQuery = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${rfpQueryName}_bool_exp = {}) {\\\\\\\\n${rfpQueryName}(\\\\\\\\n  offset: $offset\\\\\\\\n  limit: $limit\\\\\\\\n  order_by: {proposal_id: desc}\\\\\\\\n  where: $where\\\\\\\\n) {\\\\\\\\n  rfp_id\\\\\\\\n}\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst code = `\\\\\\\\n<!doctype html>\\\\\\\\n<html>\\\\\\\\n  <head>\\\\\\\\n  <meta charset=\\\\\\\\\\\\\\\"utf-8\\\\\\\\\\\\\\\">\\\\\\\\n  <meta name=\\\\\\\\\\\\\\\"viewport\\\\\\\\\\\\\\\" content=\\\\\\\\\\\\\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\\\\\\\\\\\\\">\\\\\\\\n  <style>\\\\\\\\n  body {  \\\\\\\\n      margin: auto;\\\\\\\\n      font-family: ${fontFamily};\\\\\\\\n      overflow: visible;\\\\\\\\n      font-size:14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    body {\\\\\\\\n      font-size: 12px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item:hover,\\\\\\\\n  .dropdown-item:focus {\\\\\\\\n    background-color:rgb(0, 236, 151) !important;\\\\\\\\n    color:white !important;\\\\\\\\n    outline: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n      text-align: ${alignToolItems};\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n  .CodeMirror {\\\\\\\\n    min-height:200px !important; // for autocomplete to be visble \\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .CodeMirror-scroll {\\\\\\\\n    min-height:200px !important; // for autocomplete to be visble \\\\\\\\n  }\\\\\\\\n\\\\\\\\n  ${embeddCSS}\\\\\\\\n\\\\\\\\n  </style>\\\\\\\\n  <link rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css\\\\\\\\\\\\\\\">\\\\\\\\n  <link rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/highlight.js/latest/styles/github.min.css\\\\\\\\\\\\\\\">\\\\\\\\n  <link href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\\\\\\\\\\\\\\\" rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\">\\\\\\\\n</head>\\\\\\\\n<body>\\\\\\\\n<div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n  <button style=\\\\\\\\\\\\\\\"display: none\\\\\\\\\\\\\\\" type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\" data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n    Dropdown button\\\\\\\\n  </button>\\\\\\\\n\\\\\\\\n  <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"mentiondropdown\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\"position: absolute;\\\\\\\\\\\\\\\">\\\\\\\\n</div>\\\\\\\\n<div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n  <button style=\\\\\\\\\\\\\\\"display: none\\\\\\\\\\\\\\\" type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\" data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n    Dropdown button\\\\\\\\n  </button>\\\\\\\\n  <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"referencedropdown\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\"position: absolute;\\\\\\\\\\\\\\\">\\\\\\\\n</div>\\\\\\\\n</ul>\\\\\\\\n\\\\\\\\n<textarea></textarea>\\\\\\\\n\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script>\\\\\\\\nlet codeMirrorInstance;\\\\\\\\nlet isEditorInitialized = false;\\\\\\\\nlet followingData = {};\\\\\\\\nlet profilesData = {};\\\\\\\\nlet proposalQuery = \\\\\\\\\\\\'\\\\\\\\\\\\';\\\\\\\\nlet proposalLink = \\\\\\\\\\\\'\\\\\\\\\\\\';\\\\\\\\nlet proposalQueryName = \\\\\\\\\\\\'\\\\\\\\\\\\';\\\\\\\\nlet showAccountAutoComplete = ${showAccountAutoComplete};\\\\\\\\nlet showProposalIdAutoComplete = ${showProposalIdAutoComplete};\\\\\\\\nlet showRfpIdAutoComplete = ${showRfpIdAutoComplete}\\\\\\\\n\\\\\\\\nfunction getSuggestedAccounts(term) {\\\\\\\\n  let results = [];\\\\\\\\n\\\\\\\\n  term = (term || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").toLowerCase();\\\\\\\\n  const limit = 5;\\\\\\\\n\\\\\\\\n  const profiles = Object.entries(profilesData);\\\\\\\\n\\\\\\\\n  for (let i = 0; i < profiles.length; i++) {\\\\\\\\n    let score = 0;\\\\\\\\n    const accountId = profiles[i][0];\\\\\\\\n    const accountIdSearch = profiles[i][0].replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").toLowerCase();\\\\\\\\n    const nameSearch = (profiles[i][1]?.profile?.name || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n      .replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n      .toLowerCase();\\\\\\\\n    const accountIdSearchIndex = accountIdSearch.indexOf(term);\\\\\\\\n    const nameSearchIndex = nameSearch.indexOf(term);\\\\\\\\n\\\\\\\\n    if (accountIdSearchIndex > -1 || nameSearchIndex > -1) {\\\\\\\\n      score += 10;\\\\\\\\n\\\\\\\\n      if (accountIdSearchIndex === 0) {\\\\\\\\n        score += 10;\\\\\\\\n      }\\\\\\\\n      if (nameSearchIndex === 0) {\\\\\\\\n        score += 10;\\\\\\\\n      }\\\\\\\\n      if (followingData[accountId] === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n        score += 30;\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      results.push({\\\\\\\\n        accountId,\\\\\\\\n        score,\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  results.sort((a, b) => b.score - a.score);\\\\\\\\n  results = results.slice(0, limit);\\\\\\\\n\\\\\\\\n  return results;\\\\\\\\n}\\\\\\\\n\\\\\\\\nasync function asyncFetch(endpoint, { method, headers, body }) {\\\\\\\\n  try {\\\\\\\\n    const response = await fetch(endpoint, {\\\\\\\\n      method: method,\\\\\\\\n      headers: headers,\\\\\\\\n      body: body\\\\\\\\n    });\\\\\\\\n\\\\\\\\n    if (!response.ok) {\\\\\\\\n      throw new Error(\\\\\\\\\\\\\\\"HTTP error!\\\\\\\\\\\\\\\");\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return await response.json();\\\\\\\\n  } catch (error) {\\\\\\\\n    console.error(\\\\\\\\\\\\'Error fetching data:\\\\\\\\\\\\', error);\\\\\\\\n    throw error;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractNumbers(str) {\\\\\\\\n  let numbers = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  for (let i = 0; i < str.length; i++) {\\\\\\\\n    if (!isNaN(str[i])) {\\\\\\\\n      numbers += str[i];\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return numbers;\\\\\\\\n};\\\\\\\\n\\\\\\\\nasync function getSuggestedProposals(id) {\\\\\\\\n  let results = [];\\\\\\\\n  const variables = {\\\\\\\\n    limit: 5,\\\\\\\\n    offset: 0,\\\\\\\\n    where: {},\\\\\\\\n  };\\\\\\\\n  if (id) {\\\\\\\\n    const proposalId = extractNumbers(id);\\\\\\\\n    if (proposalId) {\\\\\\\\n      variables[\\\\\\\\\\\\\\\"where\\\\\\\\\\\\\\\"] = { proposal_id: { _eq: id } };\\\\\\\\n    } else {\\\\\\\\n      variables[\\\\\\\\\\\\\\\"where\\\\\\\\\\\\\\\"] = { name: { _ilike: \\\\\\\\\\\\\\\"%\\\\\\\\\\\\\\\" + id + \\\\\\\\\\\\\\\"%\\\\\\\\\\\\\\\" } };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  await asyncFetch(\\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co/v1/graphql\\\\\\\\\\\\\\\", {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"polyprogrammist_near\\\\\\\\\\\\\\\" },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: proposalQuery,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\",\\\\\\\\n    }),\\\\\\\\n  })\\\\\\\\n    .then((res) => {\\\\\\\\n      const proposals =\\\\\\\\n        res?.data?.[\\\\\\\\n          proposalQueryName\\\\\\\\n        ];\\\\\\\\n      results = proposals;\\\\\\\\n    })\\\\\\\\n    .catch((error) => {\\\\\\\\n      console.error(error);\\\\\\\\n    });\\\\\\\\n  return results;\\\\\\\\n};\\\\\\\\n\\\\\\\\n// Initializes SimpleMDE element and attaches to text-area\\\\\\\\nconst simplemde = new SimpleMDE({\\\\\\\\n  forceSync: true,\\\\\\\\n  toolbar: [\\\\\\\\n    \\\\\\\\\\\\\\\"heading\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"bold\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"italic\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"|\\\\\\\\\\\\\\\", // adding | creates a divider in the toolbar\\\\\\\\n    \\\\\\\\\\\\\\\"quote\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"link\\\\\\\\\\\\\\\",\\\\\\\\n  ],\\\\\\\\n  placeholder: \\\\\\\\\\\\\\\\`${placeholder}\\\\\\\\\\\\\\\\`,\\\\\\\\n  initialValue: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  insertTexts: {\\\\\\\\n    link: [\\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"]()\\\\\\\\\\\\\\\"],\\\\\\\\n  },\\\\\\\\n  spellChecker: false,\\\\\\\\n  renderingConfig: {\\\\\\\\n\\\\\\\\t\\\\\\\\tsingleLineBreaks: false,\\\\\\\\n\\\\\\\\t\\\\\\\\tcodeSyntaxHighlighting: true,\\\\\\\\n\\\\\\\\t},\\\\\\\\n  autofocus:${autoFocus}\\\\\\\\n});\\\\\\\\n\\\\\\\\ncodeMirrorInstance = simplemde.codemirror;\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Sends message to Widget to update content\\\\\\\\n */\\\\\\\\nconst updateContent = () => {\\\\\\\\n  const content = simplemde.value();\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\", content }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n};\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Sends message to Widget to update iframe height\\\\\\\\n */\\\\\\\\nconst updateIframeHeight = () => {\\\\\\\\n  const iframeHeight = document.body.scrollHeight;\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"resize\\\\\\\\\\\\\\\", height: iframeHeight }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n};\\\\\\\\n\\\\\\\\n// On Change\\\\\\\\nsimplemde.codemirror.on(\\\\\\\\\\\\'blur\\\\\\\\\\\\', () => {\\\\\\\\n  updateContent();\\\\\\\\n});\\\\\\\\n\\\\\\\\nsimplemde.codemirror.on(\\\\\\\\\\\\'keyup\\\\\\\\\\\\', () => {\\\\\\\\n  updateIframeHeight();\\\\\\\\n  const content = simplemde.value();\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"updateOnKeyup\\\\\\\\\\\\\\\", content }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n});\\\\\\\\n\\\\\\\\n\\\\\\\\nif (showAccountAutoComplete) {\\\\\\\\n  let mentionToken;\\\\\\\\n  let mentionCursorStart;\\\\\\\\n  const dropdown = document.getElementById(\\\\\\\\\\\\\\\"mentiondropdown\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keydown\\\\\\\\\\\\\\\", () => {\\\\\\\\n    if (mentionToken && event.key === \\\\\\\\\\\\'ArrowDown\\\\\\\\\\\\') {\\\\\\\\n      dropdown.querySelector(\\\\\\\\\\\\'button\\\\\\\\\\\\').focus();\\\\\\\\n      event.preventDefault();\\\\\\\\n      return false;\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keyup\\\\\\\\\\\\\\\", (cm, event) => {\\\\\\\\n    const cursor = cm.getCursor();\\\\\\\\n    const token = cm.getTokenAt(cursor);\\\\\\\\n\\\\\\\\n    const createMentionDropDownOptions = () => {\\\\\\\\n      const mentionInput = cm.getRange(mentionCursorStart, cursor);\\\\\\\\n      dropdown.innerHTML = getSuggestedAccounts(mentionInput)\\\\\\\\n      .map(\\\\\\\\n        (item) =>\\\\\\\\n          \\\\\\\\\\\\'<li><button class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\\\\\' + item?.accountId + \\\\\\\\\\\\'</button></li>\\\\\\\\\\\\'\\\\\\\\n      )\\\\\\\\n      .join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n      dropdown.querySelectorAll(\\\\\\\\\\\\\\\"li\\\\\\\\\\\\\\\").forEach((li) => {\\\\\\\\n        li.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", () => {\\\\\\\\n          const selectedText = li.textContent.trim();\\\\\\\\n          simplemde.codemirror.replaceRange(selectedText, mentionCursorStart, cursor);\\\\\\\\n          mentionToken = null;\\\\\\\\n          dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n          cm.focus();\\\\\\\\n        });\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    // show dropwdown only when @ is at first place or when there is a space before @\\\\\\\\n      if (!mentionToken && (token.string === \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\" && cursor.ch === 1 || token.string === \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\" && cm.getTokenAt({line:cursor.line, ch: cursor.ch - 1}).string == \\\\\\\\\\\\' \\\\\\\\\\\\')) {\\\\\\\\n        mentionToken = token;\\\\\\\\n        mentionCursorStart = cursor;\\\\\\\\n        // Calculate cursor position relative to the iframe\\\\\\\\\\\\'s viewport\\\\\\\\n        const rect = cm.charCoords(cursor);\\\\\\\\n        const x = rect.left;\\\\\\\\n        const y = rect.bottom;\\\\\\\\n\\\\\\\\n        // Create dropdown with options\\\\\\\\n        dropdown.style.top = y + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n        dropdown.style.left = x + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n        createMentionDropDownOptions();\\\\\\\\n\\\\\\\\n        dropdown.classList.add(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        // Close dropdown on outside click\\\\\\\\n        document.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", function(event) {\\\\\\\\n            if (!dropdown.contains(event.target)) {\\\\\\\\n                mentionToken = null;\\\\\\\\n                dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            }\\\\\\\\n        });\\\\\\\\n    } else if (mentionToken && token.string.match(/[^@a-z0-9.]/)) {\\\\\\\\n        mentionToken = null;\\\\\\\\n        dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n    } else if (mentionToken) {\\\\\\\\n        createMentionDropDownOptions();\\\\\\\\n    }\\\\\\\\n});\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (showProposalIdAutoComplete) {\\\\\\\\n  let proposalId;\\\\\\\\n  let referenceCursorStart;\\\\\\\\n  const dropdown = document.getElementById(\\\\\\\\\\\\\\\"referencedropdown\\\\\\\\\\\\\\\");\\\\\\\\n  const loader = document.createElement(\\\\\\\\\\\\'div\\\\\\\\\\\\');\\\\\\\\n  loader.className = \\\\\\\\\\\\'loader\\\\\\\\\\\\';\\\\\\\\n  loader.textContent = \\\\\\\\\\\\'Loading...\\\\\\\\\\\\';\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keydown\\\\\\\\\\\\\\\", () => {\\\\\\\\n    if (proposalId && event.key === \\\\\\\\\\\\'ArrowDown\\\\\\\\\\\\') {\\\\\\\\n      dropdown.querySelector(\\\\\\\\\\\\'button\\\\\\\\\\\\').focus();\\\\\\\\n      event.preventDefault();\\\\\\\\n      return false;\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keyup\\\\\\\\\\\\\\\", (cm, event) => {\\\\\\\\n    const cursor = cm.getCursor();\\\\\\\\n    const token = cm.getTokenAt(cursor);\\\\\\\\n\\\\\\\\n    const createReferenceDropDownOptions = async () => {\\\\\\\\n      try {\\\\\\\\n        const proposalIdInput = cm.getRange(referenceCursorStart, cursor);\\\\\\\\n        dropdown.innerHTML = \\\\\\\\\\\\'\\\\\\\\\\\\'; // Clear previous content\\\\\\\\n        dropdown.appendChild(loader); // Show loader\\\\\\\\n\\\\\\\\n        const suggestedProposals = await getSuggestedProposals(proposalIdInput);\\\\\\\\n        dropdown.innerHTML = suggestedProposals\\\\\\\\n        .map(\\\\\\\\n          (item) =>\\\\\\\\n            \\\\\\\\\\\\'<li><button class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\\\\\' + \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" + item?.proposal_id + \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" + item.name + \\\\\\\\\\\\'</button></li>\\\\\\\\\\\\'\\\\\\\\n        )\\\\\\\\n        .join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        dropdown.querySelectorAll(\\\\\\\\\\\\\\\"li\\\\\\\\\\\\\\\").forEach((li) => {\\\\\\\\n          li.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", () => {\\\\\\\\n            const selectedText = li.textContent.trim();\\\\\\\\n            const startIndex = selectedText.indexOf(\\\\\\\\\\\\'#\\\\\\\\\\\\') + 1; \\\\\\\\n            const endIndex = selectedText.indexOf(\\\\\\\\\\\\' \\\\\\\\\\\\', startIndex);\\\\\\\\n            const id = endIndex !== -1 ? selectedText.substring(startIndex, endIndex) : selectedText.substring(startIndex);\\\\\\\\n            const link = proposalLink + id;\\\\\\\\n            const adjustedStart = {\\\\\\\\n              line: referenceCursorStart.line,\\\\\\\\n              ch: referenceCursorStart.ch - 1\\\\\\\\n            };\\\\\\\\n            simplemde.codemirror.replaceRange(\\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\" + selectedText + \\\\\\\\\\\\\\\"]\\\\\\\\\\\\\\\" + \\\\\\\\\\\\\\\"(\\\\\\\\\\\\\\\" + link + \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", adjustedStart, cursor);\\\\\\\\n            proposalId = null;\\\\\\\\n            dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            cm.focus();\\\\\\\\n          });\\\\\\\\n        });\\\\\\\\n      } catch (error) {\\\\\\\\n        console.error(\\\\\\\\\\\\'Error fetching data:\\\\\\\\\\\\', error);\\\\\\\\n        // Handle error: Remove loader\\\\\\\\n        dropdown.innerHTML = \\\\\\\\\\\\'\\\\\\\\\\\\'; // Clear previous content\\\\\\\\n      } finally {\\\\\\\\n        // Remove loader\\\\\\\\n        dropdown.removeChild(loader);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // show dropwdown only when there is space before # or it\\\\\\\\\\\\'s first char\\\\\\\\n      if (!proposalId && (token.string === \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" && cursor.ch === 1 || token.string === \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" && cm.getTokenAt({line:cursor.line, ch: cursor.ch - 1}).string == \\\\\\\\\\\\' \\\\\\\\\\\\')) {\\\\\\\\n        proposalId = token;\\\\\\\\n        referenceCursorStart = cursor;\\\\\\\\n        // Calculate cursor position relative to the iframe\\\\\\\\\\\\'s viewport\\\\\\\\n        const rect = cm.charCoords(cursor);\\\\\\\\n        const x = rect.left;\\\\\\\\n        const y = rect.bottom;\\\\\\\\n\\\\\\\\n        // Create dropdown with options\\\\\\\\n        dropdown.style.top = y + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n        dropdown.style.left = x + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n        createReferenceDropDownOptions();\\\\\\\\n\\\\\\\\n        dropdown.classList.add(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        // Close dropdown on outside click\\\\\\\\n        document.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", function(event) {\\\\\\\\n            if (!dropdown.contains(event.target)) {\\\\\\\\n              proposalId = null;\\\\\\\\n                dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            }\\\\\\\\n        });\\\\\\\\n    } else if (proposalId && (token.string.match(/[^#a-z0-9.]/) || !token.string)) {\\\\\\\\n      proposalId = null;\\\\\\\\n      dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n    } else if (proposalId) {\\\\\\\\n      createReferenceDropDownOptions();\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\n}\\\\\\\\n\\\\\\\\nwindow.addEventListener(\\\\\\\\\\\\\\\"message\\\\\\\\\\\\\\\", (event) => {\\\\\\\\n  if (!isEditorInitialized && event.data !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n    simplemde.value(event.data.content);\\\\\\\\n    isEditorInitialized = true;\\\\\\\\n  } else {\\\\\\\\n    if (event.data.handler === \\\\\\\\\\\\'refreshEditor\\\\\\\\\\\\') {\\\\\\\\n      codeMirrorInstance.getDoc().setValue(event.data.content);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  if (event.data.followingData) {\\\\\\\\n    followingData = event.data.followingData;\\\\\\\\n  }\\\\\\\\n  if (event.data.profilesData) {\\\\\\\\n    profilesData = JSON.parse(event.data.profilesData);\\\\\\\\n  }\\\\\\\\n  if (event.data.proposalQuery) {\\\\\\\\n    proposalQuery = event.data.proposalQuery;\\\\\\\\n  }\\\\\\\\n  if (event.data.proposalQueryName) {\\\\\\\\n    proposalQueryName = event.data.proposalQueryName;\\\\\\\\n  }\\\\\\\\n  if (event.data.proposalLink) {\\\\\\\\n    proposalLink = event.data.proposalLink;\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n});\\\\\\\\n</script>\\\\\\\\n</body>\\\\\\\\n</html>\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <iframe\\\\\\\\n    className={className}\\\\\\\\n    style={{\\\\\\\\n      height: `${state.iframeHeight}px`,\\\\\\\\n      maxHeight: \\\\\\\\\\\\\\\"410px\\\\\\\\\\\\\\\",\\\\\\\\n      minHeight: \\\\\\\\\\\\\\\"250px\\\\\\\\\\\\\\\",\\\\\\\\n    }}\\\\\\\\n    srcDoc={code}\\\\\\\\n    message={{\\\\\\\\n      content: props.data?.content ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n      followingData,\\\\\\\\n      profilesData: JSON.stringify(profilesData),\\\\\\\\n      proposalQuery: proposalQuery,\\\\\\\\n      proposalQueryName: proposalQueryName,\\\\\\\\n      handler: props.data.handler,\\\\\\\\n      proposalLink: proposalLink,\\\\\\\\n    }}\\\\\\\\n    onMessage={(e) => {\\\\\\\\n      switch (e.handler) {\\\\\\\\n        case \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            onChange(e.content);\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n        case \\\\\\\\\\\\\\\"resize\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            const offset = 10;\\\\\\\\n            State.update({ iframeHeight: e.height + offset });\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n        case \\\\\\\\\\\\\\\"updateOnKeyup\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            onChangeKeyup(e.content);\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n      }\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Proposal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst accountId = context.accountId;\\\\\\\\n/*\\\\\\\\n  ---props---\\\\\\\\n  props.id: number;\\\\\\\\n  props.timestamp: number; optional\\\\\\\\n  accountId: string\\\\\\\\n  blockHeight:number\\\\\\\\n  */\\\\\\\\n\\\\\\\\nconst DecisionStage = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.REJECTED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .description-box {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .draft-info-container {\\\\\\\\n    background-color: #ecf8fb;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .review-info-container {\\\\\\\\n    background-color: #fef6ee;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-3 {\\\\\\\\n    flex: 3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 20px;\\\\\\\\n    height: 20px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 180px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 135px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 180px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 75px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line-sm {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 70px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:disabled ~ .form-check-label,\\\\\\\\n  .form-check-input[disabled] ~ .form-check-label {\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input {\\\\\\\\n    border-color: black !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-btn {\\\\\\\\n    background-color: #687076;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #03ba16 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-vertical {\\\\\\\\n    border-top: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n    border-bottom: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  button.px-0 {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  red-icon i {\\\\\\\\n    color: red;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  input[type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"] {\\\\\\\\n    min-width: 13px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ProposalContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Text = styled.p`\\\\\\\\n  display: block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 20px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  white-space: nowrap;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 12px;\\\\\\\\n  margin: -6px -6px 6px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinkProfile = ({ account, children }) => {\\\\\\\\n  return (\\\\\\\\n    <Link href={`/near/widget/ProfilePage?accountId=${account}`}>\\\\\\\\n      {children}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst stepsArray = [1, 2, 3, 4, 5];\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\nconst proposal = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    proposal_id: parseInt(id),\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst [snapshotHistory, setSnapshotHistory] = useState([]);\\\\\\\\n\\\\\\\\nconst queryName = PROPOSAL_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n  ${queryName}(\\\\\\\\n    offset: $offset\\\\\\\\n    limit: $limit\\\\\\\\n    order_by: {ts: asc}\\\\\\\\n    where: $where\\\\\\\\n  ) {\\\\\\\\n    editor_id\\\\\\\\n    name\\\\\\\\n    summary\\\\\\\\n    description\\\\\\\\n    ts\\\\\\\\n    proposal_id\\\\\\\\n    timeline\\\\\\\\n    labels\\\\\\\\n    linked_proposals\\\\\\\\n    linked_rfp\\\\\\\\n    requested_sponsorship_usd_amount\\\\\\\\n    requested_sponsorship_paid_in_currency\\\\\\\\n    receiver_account\\\\\\\\n    requested_sponsor\\\\\\\\n    supervisor\\\\\\\\n  }\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst fetchSnapshotHistory = () => {\\\\\\\\n  const variables = {\\\\\\\\n    where: { proposal_id: { _eq: id } },\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const data = result.body.data?.[queryName];\\\\\\\\n        const history = data.map((item) => {\\\\\\\\n          const proposalData = {\\\\\\\\n            ...item,\\\\\\\\n            timestamp: item.ts,\\\\\\\\n            timeline: parseJSON(item.timeline),\\\\\\\\n          };\\\\\\\\n          delete proposalData.ts;\\\\\\\\n          return proposalData;\\\\\\\\n        });\\\\\\\\n        setSnapshotHistory(history);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchSnapshotHistory();\\\\\\\\n}, [id]);\\\\\\\\n\\\\\\\\nif (!proposal) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nif (timestamp && proposal) {\\\\\\\\n  proposal.snapshot =\\\\\\\\n    snapshotHistory.find((item) => item.timestamp === timestamp) ??\\\\\\\\n    proposal.snapshot;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { snapshot } = proposal;\\\\\\\\nsnapshot.timeline = parseJSON(snapshot.timeline);\\\\\\\\n\\\\\\\\nconst authorId = proposal.author_id;\\\\\\\\nconst blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\nconst item = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n  path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n  blockHeight,\\\\\\\\n};\\\\\\\\nconst proposalURL = getLinkUsingCurrentGateway(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=proposal&id=${proposal.id}&timestamp=${snapshot.timestamp}`\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SidePanelItem = ({ title, children, hideBorder, ishidden }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ gap: \\\\\\\\\\\\\\\"8px\\\\\\\\\\\\\\\" }}\\\\\\\\n      className={\\\\\\\\n        ishidden\\\\\\\\n          ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"d-flex flex-column pb-3 \\\\\\\\\\\\\\\" + (!hideBorder && \\\\\\\\\\\\\\\" border-bottom\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{title} </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst proposalStatusOptions = [\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Draft\\\\\\\\\\\\\\\",\\\\\\\\n    value: { status: PROPOSAL_TIMELINE_STATUS.DRAFT },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Review\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.REVIEW,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved-Conditionally\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Rejected\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.REJECTED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.CANCELED,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Payment-processing\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n      kyc_verified: false,\\\\\\\\n      test_transaction_sent: false,\\\\\\\\n      request_for_trustees_created: false,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Funded\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n      trustees_released_payment: true,\\\\\\\\n      kyc_verified: true,\\\\\\\\n      test_transaction_sent: true,\\\\\\\\n      request_for_trustees_created: true,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst CheckBox = ({ value, isChecked, label, disabled, onClick }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"checkbox\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={!isModerator || !showTimelineSetting || disabled}\\\\\\\\n        onChange={(e) => onClick(e.target.checked)}\\\\\\\\n      />\\\\\\\\n      <label style={{ width: \\\\\\\\\\\\\\\"90%\\\\\\\\\\\\\\\" }} class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">\\\\\\\\n        {label}\\\\\\\\n      </label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst RadioButton = ({ value, isChecked, label }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={true}\\\\\\\\n      />\\\\\\\\n      <label class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isAllowedToEditProposal = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    proposal_id: proposal.id,\\\\\\\\n    editor: accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst editProposal = ({ timeline }) => {\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    name: snapshot.name,\\\\\\\\n    description: snapshot.description,\\\\\\\\n    category: snapshot.category,\\\\\\\\n    summary: snapshot.summary,\\\\\\\\n    linked_proposals: snapshot.linked_proposals,\\\\\\\\n    requested_sponsorship_usd_amount: snapshot.requested_sponsorship_usd_amount,\\\\\\\\n    requested_sponsorship_paid_in_currency:\\\\\\\\n      snapshot.requested_sponsorship_paid_in_currency,\\\\\\\\n    receiver_account: snapshot.receiver_account,\\\\\\\\n    requested_sponsor: snapshot.requested_sponsor,\\\\\\\\n    timeline: timeline,\\\\\\\\n    linked_rfp: snapshot.linked_rfp,\\\\\\\\n    supervisor: supervisor ?? snapshot.supervisor,\\\\\\\\n  };\\\\\\\\n  const args = {\\\\\\\\n    labels: snapshot.linked_rfp ? [] : snapshot.labels,\\\\\\\\n    body: body,\\\\\\\\n    id: proposal.id,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst editProposalStatus = ({ timeline }) => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal_timeline\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: proposal.id,\\\\\\\\n        timeline: timeline,\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\nconst [showTimelineSetting, setShowTimelineSetting] = useState(false);\\\\\\\\nconst proposalStatus = useCallback(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.find(\\\\\\\\n      (i) => i.value.status === snapshot.timeline.status\\\\\\\\n    ),\\\\\\\\n  [snapshot]\\\\\\\\n);\\\\\\\\nconst [updatedProposalStatus, setUpdatedProposalStatus] = useState({});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  setUpdatedProposalStatus({\\\\\\\\n    ...proposalStatus(),\\\\\\\\n    value: { ...proposalStatus().value, ...snapshot.timeline },\\\\\\\\n  });\\\\\\\\n}, [proposal]);\\\\\\\\n\\\\\\\\nconst [paymentHashes, setPaymentHashes] = useState([\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"]);\\\\\\\\nconst [supervisor, setSupervisor] = useState(snapshot.supervisor);\\\\\\\\n\\\\\\\\nconst selectedStatusIndex = useMemo(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.findIndex((i) => {\\\\\\\\n      return updatedProposalStatus.value.status === i.value.status;\\\\\\\\n    }),\\\\\\\\n  [updatedProposalStatus]\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst TimelineItems = ({ title, children, value, values }) => {\\\\\\\\n  const indexOfCurrentItem = proposalStatusOptions.findIndex((i) =>\\\\\\\\n    Array.isArray(values)\\\\\\\\n      ? values.includes(i.value.status)\\\\\\\\n      : value === i.value.status\\\\\\\\n  );\\\\\\\\n  let color = \\\\\\\\\\\\\\\"transparent\\\\\\\\\\\\\\\";\\\\\\\\n  let statusIndex = selectedStatusIndex;\\\\\\\\n\\\\\\\\n  // index 2,3,4,5  is of decision\\\\\\\\n  if (selectedStatusIndex === 3 || selectedStatusIndex === 2) {\\\\\\\\n    statusIndex = 2;\\\\\\\\n  }\\\\\\\\n  if (statusIndex === indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FEF6EE\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  if (\\\\\\\\n    statusIndex > indexOfCurrentItem ||\\\\\\\\n    updatedProposalStatus.value.status === PROPOSAL_TIMELINE_STATUS.FUNDED\\\\\\\\n  ) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#EEFEF0\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // reject\\\\\\\\n  if (statusIndex === 4 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FF7F7F\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // cancelled\\\\\\\\n  if (statusIndex === 5 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"p-2 rounded-3\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        backgroundColor: color,\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 text-black\\\\\\\\\\\\\\\"> {title}</div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst link = href({\\\\\\\\n  widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n  params: {\\\\\\\\n    page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\",\\\\\\\\n    id: proposal.id,\\\\\\\\n    timestamp: timestamp,\\\\\\\\n  },\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst createdDate = snapshotHistory[0]?.timestamp ?? snapshot.timestamp;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmReviewModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[1].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[5].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex px-3 px-lg-0 justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center h3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>{snapshot.name}</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">#{proposal.id}</div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_NEAR}/widget/ShareButton`}\\\\\\\\n          props={{\\\\\\\\n            postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            url: proposalURL,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        {((isAllowedToEditProposal &&\\\\\\\\n          snapshot.timeline.status === PROPOSAL_TIMELINE_STATUS.DRAFT) ||\\\\\\\\n          isModerator) && (\\\\\\\\n          <Link to={link} style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap flex-md-nowrap px-3 px-lg-0 gap-2 align-items-center text-sm pb-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n        props={{\\\\\\\\n          timelineStatus: snapshot.timeline.status,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"w-100 d-flex flex-wrap flex-md-nowrap gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n          <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n        </div>\\\\\\\\n        <div>created on {readableDate(createdDate / 1000000)}</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 full-width-div px-3 px-lg-0\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4\\\\\\\\\\\\\\\">\\\\\\\\n        {snapshot.timeline.status === PROPOSAL_TIMELINE_STATUS.DRAFT &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"draft-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in draft mode and open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  The author can still refine the proposal and build consensus\\\\\\\\n                  before sharing it with sponsors. Click \\\\\\\\u{201c}Ready for review\\\\\\\\u{201d} when\\\\\\\\n                  you want to start the official review process. This will lock\\\\\\\\n                  the editing function, but comments are still open.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    label: \\\\\\\\\\\\\\\"Ready for review\\\\\\\\\\\\\\\",\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setReviewModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        {snapshot.timeline.status === PROPOSAL_TIMELINE_STATUS.REVIEW &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"review-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in review mode and still open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  You can\\\\\\\\u{2019}t edit the proposal, but comments are open. Only\\\\\\\\n                  moderators can make changes. Click \\\\\\\\u{201c}Cancel Proposal\\\\\\\\u{201d} to cancel\\\\\\\\n                  your proposal. This changes the status to Canceled, signaling\\\\\\\\n                  to sponsors that it\\\\\\\\u{2019}s no longer active or relevant.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    label: (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                      </div>\\\\\\\\n                    ),\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"btn-outline-danger btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setCancelModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"my-4\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-6\\\\\\\\\\\\\\\">\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"flex-3 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                  <Widget\\\\\\\\n                    src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n                    props={{\\\\\\\\n                      accountId: authorId,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n                <ProposalContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Header className=\\\\\\\\\\\\\\\"d-flex gap-1 align-items-center p-2 px-3 \\\\\\\\\\\\\\\">\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ maxWidth: \\\\\\\\\\\\\\\"60%\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n                    </div>\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                        props={{\\\\\\\\n                          blockHeight,\\\\\\\\n                          blockTimestamp: createdDate,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      {context.accountId && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                          <Widget\\\\\\\\n                            src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                            props={{\\\\\\\\n                              accountId: authorId,\\\\\\\\n                              blockHeight: blockHeight,\\\\\\\\n                            }}\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </Header>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 p-2 px-3 description-box\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      PROPOSAL CATEGORY\\\\\\\\n                    </div>\\\\\\\\n                    <div>\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                        props={{\\\\\\\\n                          selected: snapshot.labels,\\\\\\\\n                          disabled: true,\\\\\\\\n                          hideDropdown: true,\\\\\\\\n                          onChange: () => {},\\\\\\\\n                          availableOptions: rfpLabelOptions,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      SUMMARY\\\\\\\\n                    </div>\\\\\\\\n                    <div>{snapshot.summary}</div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n                      DESCRIPTION\\\\\\\\n                    </div>\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n                      props={{ text: snapshot.description }}\\\\\\\\n                    />\\\\\\\\n\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LikeButton`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          proposalId: proposal.id,\\\\\\\\n                          notifyAccountIds: [authorId],\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          showOverlay: false,\\\\\\\\n                          onClick: () => {},\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                        props={{\\\\\\\\n                          url: proposalURL,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                </ProposalContainer>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.CommentsAndLogs`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    id: proposal.id,\\\\\\\\n                    item: item,\\\\\\\\n                    snapshotHistory: snapshotHistory,\\\\\\\\n                    latestSnapshot: snapshot,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div\\\\\\\\n                style={{\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                className=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.ComposeComment`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    item: item,\\\\\\\\n                    notifyAccountIds: [authorId],\\\\\\\\n                    proposalId: proposal.id,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 flex-1 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/AccountProfile`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: authorId,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\\\\\\\\"Linked RFP\\\\\\\\\\\\\\\"}\\\\\\\\n                ishidden={!isNumber(snapshot.linked_rfp)}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedRfps`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedRfpIds: [snapshot.linked_rfp],\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"Linked Proposals \\\\\\\\\\\\\\\" + `(${snapshot.linked_proposals.length})`\\\\\\\\n                }\\\\\\\\n                ishidden={!snapshot.linked_proposals.length}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedProposalIds: snapshot.linked_proposals,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Funding Ask\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"h4 text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {snapshot.requested_sponsorship_usd_amount && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                      <div>\\\\\\\\n                        {parseInt(\\\\\\\\n                          snapshot.requested_sponsorship_usd_amount\\\\\\\\n                        ).toLocaleString()}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        USD\\\\\\\\n                      </div>\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                        Requested in{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        {snapshot.requested_sponsorship_paid_in_currency}\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Wallet Address\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/AccountProfile`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: snapshot.receiver_account,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Verification Status\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.VerificationStatus`}\\\\\\\\n                  props={{\\\\\\\\n                    receiverAccount: snapshot.receiver_account,\\\\\\\\n                    showGetVerifiedBtn:\\\\\\\\n                      accountId === snapshot.receiver_account ||\\\\\\\\n                      accountId === authorId,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title=\\\\\\\\\\\\\\\"Project Coordinator\\\\\\\\\\\\\\\"\\\\\\\\n                ishidden={!snapshot.supervisor}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/AccountProfile`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: snapshot.supervisor,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                hideBorder={true}\\\\\\\\n                title={\\\\\\\\n                  <div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Timeline\\\\\\\\n                      {isModerator && (\\\\\\\\n                        <div onClick={() => setShowTimelineSetting(true)}>\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                    {showTimelineSetting && (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"mt-2 d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <h6 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Proposal Status</h6>\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n                          props={{\\\\\\\\n                            options: proposalStatusOptions,\\\\\\\\n                            selectedValue: updatedProposalStatus,\\\\\\\\n                            onUpdate: (v) => {\\\\\\\\n                              setUpdatedProposalStatus({\\\\\\\\n                                ...v,\\\\\\\\n                                value: {\\\\\\\\n                                  ...v.value,\\\\\\\\n                                  ...updatedProposalStatus.value,\\\\\\\\n                                  status: v.value.status,\\\\\\\\n                                },\\\\\\\\n                              });\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-3 mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n                      {stepsArray.map((_, index) => {\\\\\\\\n                        const indexOfCurrentItem = index;\\\\\\\\n                        let color = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n                        let statusIndex = selectedStatusIndex;\\\\\\\\n                        // index 2,3,4 is of decision\\\\\\\\n                        if (\\\\\\\\n                          selectedStatusIndex === 3 ||\\\\\\\\n                          selectedStatusIndex === 2 ||\\\\\\\\n                          selectedStatusIndex === 4 ||\\\\\\\\n                          selectedStatusIndex === 5\\\\\\\\n                        ) {\\\\\\\\n                          statusIndex = 2;\\\\\\\\n                        }\\\\\\\\n                        if (selectedStatusIndex === 6) {\\\\\\\\n                          statusIndex = 3;\\\\\\\\n                        }\\\\\\\\n                        const current = statusIndex === indexOfCurrentItem;\\\\\\\\n                        const completed =\\\\\\\\n                          statusIndex > indexOfCurrentItem ||\\\\\\\\n                          updatedProposalStatus.value.status ===\\\\\\\\n                            PROPOSAL_TIMELINE_STATUS.FUNDED;\\\\\\\\n                        return (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <div\\\\\\\\n                              className={\\\\\\\\n                                \\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" +\\\\\\\\n                                (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                              }\\\\\\\\n                            >\\\\\\\\n                              {completed && (\\\\\\\\n                                <div\\\\\\\\n                                  className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n                                  style={{ height: \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" }}\\\\\\\\n                                >\\\\\\\\n                                  <i class=\\\\\\\\\\\\\\\"bi bi-check\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                </div>\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n\\\\\\\\n                            {index !== stepsArray.length - 1 && (\\\\\\\\n                              <div\\\\\\\\n                                className={\\\\\\\\n                                  \\\\\\\\\\\\\\\"vertical-line\\\\\\\\\\\\\\\" +\\\\\\\\n                                  (index === stepsArray.length - 2\\\\\\\\n                                    ? \\\\\\\\\\\\\\\"-sm \\\\\\\\\\\\\\\"\\\\\\\\n                                    : \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                                }\\\\\\\\n                              ></div>\\\\\\\\n                            )}\\\\\\\\n                          </div>\\\\\\\\n                        );\\\\\\\\n                      })}\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"1) Draft\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.DRAFT}\\\\\\\\n                      >\\\\\\\\n                        <div>\\\\\\\\n                          Once an author submits a proposal, it is in draft mode\\\\\\\\n                          and open for community comments. The author can still\\\\\\\\n                          make changes to the proposal during this stage and\\\\\\\\n                          submit it for official review when ready.\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"2) Review\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.REVIEW}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          Sponsors who agree to consider the proposal may\\\\\\\\n                          request attestations from work groups.\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  sponsor_requested_review: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor provides feedback or requests reviews\\\\\\\\\\\\\\\"\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .sponsor_requested_review\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Reviewer completes attestations (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  reviewer_completed_attestation: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .reviewer_completed_attestation\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"3) Decision\\\\\\\\\\\\\\\"\\\\\\\\n                        values={[\\\\\\\\n                          PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n                          PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n                          PROPOSAL_TIMELINE_STATUS.REJECTED,\\\\\\\\n                        ]}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <div>Sponsor makes a final decision:</div>\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Approved</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.APPROVED ||\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING ||\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.FUNDED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={\\\\\\\\n                              <>\\\\\\\\n                                <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                                  Approved - Conditional{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                                </div>\\\\\\\\n                                <span>\\\\\\\\n                                  Requires follow up from recipient. Moderators\\\\\\\\n                                  will provide further details.\\\\\\\\n                                </span>\\\\\\\\n                              </>\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Reject\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Rejected</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              PROPOSAL_TIMELINE_STATUS.REJECTED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Canceled</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              PROPOSAL_TIMELINE_STATUS.CANCELED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"4) Payment Processing\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor verifies KYC/KYB\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  kyc_verified: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor confirmed sponsorship and shared funding steps with recipient\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  test_transaction_sent: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"5) Funded\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.FUNDED}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          {paymentHashes?.length > 1 ? (\\\\\\\\n                            paymentHashes.slice(0, -1).map((link, index) => (\\\\\\\\n                              <a\\\\\\\\n                                key={index}\\\\\\\\n                                href={link}\\\\\\\\n                                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                              >\\\\\\\\n                                Payment Link\\\\\\\\n                                <i className=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                              </a>\\\\\\\\n                            ))\\\\\\\\n                          ) : updatedProposalStatus.value.payouts.length > 0 ? (\\\\\\\\n                            <div>\\\\\\\\n                              {updatedProposalStatus.value.payouts.map(\\\\\\\\n                                (link) => {\\\\\\\\n                                  return (\\\\\\\\n                                    <a\\\\\\\\n                                      href={link}\\\\\\\\n                                      className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                                    >\\\\\\\\n                                      Payment Link\\\\\\\\n                                      <i class=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                    </a>\\\\\\\\n                                  );\\\\\\\\n                                }\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n                          ) : (\\\\\\\\n                            \\\\\\\\\\\\\\\"No Payouts yet\\\\\\\\\\\\\\\"\\\\\\\\n                          )}\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                  {showTimelineSetting && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">\\\\\\\\n                          Project Coordinator\\\\\\\\n                        </label>\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.AccountInput`}\\\\\\\\n                          props={{\\\\\\\\n                            value: supervisor,\\\\\\\\n                            placeholder: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                            onUpdate: setSupervisor,\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                      {updatedProposalStatus.value.status ===\\\\\\\\n                        PROPOSAL_TIMELINE_STATUS.FUNDED && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">Payment Link</label>\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                            {paymentHashes.map((item, index) => (\\\\\\\\n                              <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-between align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                                <Widget\\\\\\\\n                                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n                                  props={{\\\\\\\\n                                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                                    value: item,\\\\\\\\n                                    onChange: (e) => {\\\\\\\\n                                      const updatedHashes = [...paymentHashes];\\\\\\\\n                                      updatedHashes[index] = e.target.value;\\\\\\\\n                                      setPaymentHashes(updatedHashes);\\\\\\\\n                                    },\\\\\\\\n                                    skipPaddingGap: true,\\\\\\\\n                                    placeholder: \\\\\\\\\\\\\\\"Enter URL\\\\\\\\\\\\\\\",\\\\\\\\n                                  }}\\\\\\\\n                                />\\\\\\\\n                                <div style={{ minWidth: 20 }}>\\\\\\\\n                                  {index !== paymentHashes.length - 1 ? (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-trash3 h6\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () => {\\\\\\\\n                                          const updatedHashes = [\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                          ];\\\\\\\\n                                          updatedHashes.splice(index, 1);\\\\\\\\n                                          setPaymentHashes(updatedHashes);\\\\\\\\n                                        },\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  ) : (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"green-btn shadow-none border-0 w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        disabled: !item,\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-plus-lg\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () =>\\\\\\\\n                                          setPaymentHashes([\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                            \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                                          ]),\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  )}\\\\\\\\n                                </div>\\\\\\\\n                              </div>\\\\\\\\n                            ))}\\\\\\\\n                          </div>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end text-sm\\\\\\\\\\\\\\\">\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                            classNames: {\\\\\\\\n                              root: \\\\\\\\\\\\\\\"btn-outline-danger border-0 shadow-none btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              setShowTimelineSetting(false);\\\\\\\\n                              setUpdatedProposalStatus(proposalStatus);\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                            disabled:\\\\\\\\n                              !supervisor &&\\\\\\\\n                              DecisionStage.includes(\\\\\\\\n                                updatedProposalStatus.value.status\\\\\\\\n                              ),\\\\\\\\n                            classNames: { root: \\\\\\\\\\\\\\\"green-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              if (snapshot.supervisor !== supervisor) {\\\\\\\\n                                editProposal({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              } else if (\\\\\\\\n                                updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.FUNDED\\\\\\\\n                              ) {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: {\\\\\\\\n                                    ...updatedProposalStatus.value,\\\\\\\\n                                    payouts: !paymentHashes[0]\\\\\\\\n                                      ? []\\\\\\\\n                                      : paymentHashes.filter(\\\\\\\\n                                          (item) => item !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                                        ),\\\\\\\\n                                  },\\\\\\\\n                                });\\\\\\\\n                              } else {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              }\\\\\\\\n                              setShowTimelineSetting(false);\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.StageDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst setSelected = props.onStateChange ?? (() => {});\\\\\\\\n\\\\\\\\nconst timelineStatusArray = Object.entries(RFP_TIMELINE_STATUS).map(\\\\\\\\n  ([key, value]) => ({\\\\\\\\n    label: key\\\\\\\\n      .split(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\")\\\\\\\\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\\\\\\\\n      .join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"),\\\\\\\\n    value,\\\\\\\\n  })\\\\\\\\n);\\\\\\\\ntimelineStatusArray.unshift({ label: \\\\\\\\\\\\\\\"All\\\\\\\\\\\\\\\", value: null });\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n      props={{\\\\\\\\n        options: timelineStatusArray,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Timeline\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelected(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.template.AppLayout\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst data = fetch(`https://httpbin.org/headers`);\\\\\\\\nconst gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n// we need fixed positioning for near social and not for org\\\\\\\\nconst ParentContainer = gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\")\\\\\\\\n  ? styled.div`\\\\\\\\n      width: 100%;\\\\\\\\n      min-height: 90vh;\\\\\\\\n      background: #f4f4f4;\\\\\\\\n      padding-bottom: 1rem;\\\\\\\\n    `\\\\\\\\n  : styled.div`\\\\\\\\n      position: fixed;\\\\\\\\n      inset: 73px 0px 0px;\\\\\\\\n      width: 100%;\\\\\\\\n      overflow-y: scroll;\\\\\\\\n      min-height: 90vh;\\\\\\\\n      background: #f4f4f4;\\\\\\\\n    `;\\\\\\\\n\\\\\\\\nconst Theme = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  padding-top: calc(-1 * var(--body-top-padding));\\\\\\\\n  background: #f4f4f4;\\\\\\\\n  .container-xl {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ContentContainer = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst AppHeader = ({ page }) => (\\\\\\\\n  <Widget\\\\\\\\n    src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.organism.Navbar`}\\\\\\\\n    props={{\\\\\\\\n      page: page,\\\\\\\\n      ...props,\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst AppLayout = ({ page, children }) => {\\\\\\\\n  return (\\\\\\\\n    <ParentContainer>\\\\\\\\n      <Theme>\\\\\\\\n        <Container className=\\\\\\\\\\\\\\\"container-xl p-3\\\\\\\\\\\\\\\">\\\\\\\\n          <AppHeader page={page} />\\\\\\\\n          <ContentContainer className=\\\\\\\\\\\\\\\"content-container\\\\\\\\\\\\\\\">\\\\\\\\n            {children}\\\\\\\\n          </ContentContainer>\\\\\\\\n        </Container>\\\\\\\\n      </Theme>\\\\\\\\n    </ParentContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn { AppLayout };\\\\\\\\n\"}, \"near-prpsls-bos.components.admin.moderatorsTab\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { Tile } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/devhub.components.molecule.Tile`\\\\\\\\n) || { Tile: () => <></> };\\\\\\\\n\\\\\\\\nconst { accessControlInfo, createEditTeam } = props;\\\\\\\\n\\\\\\\\nconst [editModerators, setEditModerators] = useState(false);\\\\\\\\nconst [moderators, setModerators] = useState(\\\\\\\\n  accessControlInfo.members_list[\\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\"].children || []\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst handleEditModerators = () => {\\\\\\\\n  createEditTeam({\\\\\\\\n    teamName: \\\\\\\\\\\\\\\"moderators\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"The moderator group has permissions to create and edit RFPs, edit and manage proposals, and manage admins.\\\\\\\\\\\\\\\",\\\\\\\\n    members: moderators,\\\\\\\\n    contractCall: \\\\\\\\\\\\\\\"edit_member\\\\\\\\\\\\\\\",\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleCancelModerators = () => {\\\\\\\\n  setEditModerators(false);\\\\\\\\n  setModerators(accessControlInfo.members_list[\\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\"].children);\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <h3>Moderators</h3>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n      <h6>\\\\\\\\n        The moderator group has permissions to create and edit RFPs, edit and\\\\\\\\n        manage proposals, and manage admins.\\\\\\\\n      </h6>\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.PostControls`}\\\\\\\\n        props={{\\\\\\\\n          icon: \\\\\\\\\\\\\\\"bi bi-gear-wide-connected\\\\\\\\\\\\\\\",\\\\\\\\n          className: \\\\\\\\\\\\\\\"mb-3\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n          title: \\\\\\\\\\\\\\\"Edit members\\\\\\\\\\\\\\\",\\\\\\\\n          onClick: () => setEditModerators(!editModerators),\\\\\\\\n          testId: \\\\\\\\\\\\\\\"edit-members\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n    <Tile className=\\\\\\\\\\\\\\\"p-3\\\\\\\\\\\\\\\" style={{ background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      {editModerators ? (\\\\\\\\n        <>\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.admin.AccountsEditor`}\\\\\\\\n            props={{\\\\\\\\n              data: {\\\\\\\\n                maxLength: 100,\\\\\\\\n                placeholder: \\\\\\\\\\\\\\\"member.near\\\\\\\\\\\\\\\",\\\\\\\\n                list: moderators,\\\\\\\\n              },\\\\\\\\n              setList: setModerators,\\\\\\\\n              // Could add a check to see if it is an valid account id.\\\\\\\\n              validate: (newItem) => true,\\\\\\\\n              invalidate: () => null,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"d-flex align-items-center justify-content-end gap-3 mt-4\\\\\\\\\\\\\\\"\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: {\\\\\\\\n                  root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: handleCancelModerators,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n                icon: {\\\\\\\\n                  type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                  variant: \\\\\\\\\\\\\\\"bi-check-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Submit\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: handleEditModerators,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </>\\\\\\\\n      ) : (\\\\\\\\n        <>\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\">Members</div>\\\\\\\\n          {moderators && (\\\\\\\\n            <div class=\\\\\\\\\\\\\\\"vstack\\\\\\\\\\\\\\\">\\\\\\\\n              {moderators.length ? (\\\\\\\\n                moderators.map((child) => (\\\\\\\\n                  <Tile className=\\\\\\\\\\\\\\\"w-25 p-3 m-1\\\\\\\\\\\\\\\" minHeight={10}>\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.ProfileLine`}\\\\\\\\n                      props={{ accountId: child }}\\\\\\\\n                    />\\\\\\\\n                  </Tile>\\\\\\\\n                ))\\\\\\\\n              ) : (\\\\\\\\n                <div>No moderators</div>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </Tile>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedRfps\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`) || {\\\\\\\\n  href: () => {},\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst linkedRfpIds = props.linkedRfpIds ?? [];\\\\\\\\nconst linkedRfpsData = [];\\\\\\\\n\\\\\\\\nlinkedRfpIds.map((item) => {\\\\\\\\n  const data = Near.view(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n    rfp_id: item,\\\\\\\\n  });\\\\\\\\n  if (data !== null) {\\\\\\\\n    linkedRfpsData.push(data);\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  a {\\\\\\\\n    &:hover {\\\\\\\\n      text-decoration: none !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    {linkedRfpsData.map((item) => {\\\\\\\\n      return (\\\\\\\\n        <a\\\\\\\\n          href={href({\\\\\\\\n            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n            params: {\\\\\\\\n              page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n              id: item.id,\\\\\\\\n            },\\\\\\\\n          })}\\\\\\\\n          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n          rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <img src={RFP_IMAGE} height={40} width={40} />\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\" style={{ maxWidth: 250 }}>\\\\\\\\n              <b className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">{item.snapshot.name}</b>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                created on {readableDate(item.snapshot.timestamp / 1000000)}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </a>\\\\\\\\n      );\\\\\\\\n    })}\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.admin.AccountsEditor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { data, setList, validate, invalidate } = props;\\\\\\\\n\\\\\\\\nconst [newItem, setNewItem] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst handleAddItem = () => {\\\\\\\\n  if (validate(newItem)) {\\\\\\\\n    setList([...data.list, newItem]);\\\\\\\\n    setNewItem(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n  } else {\\\\\\\\n    return invalidate();\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleDeleteItem = (index) => {\\\\\\\\n  const updatedData = [...data.list];\\\\\\\\n  updatedData.splice(index, 1);\\\\\\\\n  setList(updatedData);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Item = styled.div`\\\\\\\\n  padding: 10px;\\\\\\\\n  margin: 5px;\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  flex-direction: row;\\\\\\\\n  gap: 10px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {data.list.map((item, index) => (\\\\\\\\n      <Item key={index}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n            props={{\\\\\\\\n              className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n              value: item,\\\\\\\\n              skipPaddingGap: true,\\\\\\\\n              placeholder: data.placeholder,\\\\\\\\n              inputProps: {\\\\\\\\n                prefix: data.prefix,\\\\\\\\n                disabled: true,\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"btn btn-outline-danger\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() => handleDeleteItem(index)}\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-trash-fill\\\\\\\\\\\\\\\" />\\\\\\\\n        </button>\\\\\\\\n      </Item>\\\\\\\\n    ))}\\\\\\\\n    {data.list.length < data.maxLength && (\\\\\\\\n      <Item>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.AccountInput`}\\\\\\\\n            props={{\\\\\\\\n              onUpdate: (value) => setNewItem(value),\\\\\\\\n              value: newItem,\\\\\\\\n              placeholder: data.placeholder,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"btn btn-success add-member\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={handleAddItem}\\\\\\\\n          disabled={newItem === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n          data-testid=\\\\\\\\\\\\\\\"add-to-list\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-plus\\\\\\\\\\\\\\\" />\\\\\\\\n        </button>\\\\\\\\n      </Item>\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.CommentsAndLogs\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst snapshotHistory = props.snapshotHistory;\\\\\\\\nconst approvedProposals = props.approvedProposals ?? [];\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  .log-line {\\\\\\\\n    position: absolute;\\\\\\\\n    left: 7%;\\\\\\\\n    top: -30px;\\\\\\\\n    bottom: 0;\\\\\\\\n    z-index: 1;\\\\\\\\n    width: 1px;\\\\\\\\n    background-color: var(--bs-border-color);\\\\\\\\n    z-index: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .inline-flex {\\\\\\\\n    display: -webkit-inline-box !important;\\\\\\\\n    align-items: center !important;\\\\\\\\n    gap: 0.25rem !important;\\\\\\\\n    margin-right: 2px;\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommentContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// check snapshot history all keys and values for differences\\\\\\\\nfunction getDifferentKeysWithValues(obj1, obj2) {\\\\\\\\n  return Object.keys(obj1)\\\\\\\\n    .filter((key) => {\\\\\\\\n      if (key !== \\\\\\\\\\\\\\\"editor_id\\\\\\\\\\\\\\\" && obj2.hasOwnProperty(key)) {\\\\\\\\n        const value1 = obj1[key];\\\\\\\\n        const value2 = obj2[key];\\\\\\\\n        if (Array.isArray(value1) && Array.isArray(value2)) {\\\\\\\\n          const sortedValue1 = [...value1].sort();\\\\\\\\n          const sortedValue2 = [...value2].sort();\\\\\\\\n          return JSON.stringify(sortedValue1) !== JSON.stringify(sortedValue2);\\\\\\\\n        } else if (typeof value1 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" && typeof value2 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else {\\\\\\\\n          return value1 !== value2;\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      return false;\\\\\\\\n    })\\\\\\\\n    .map((key) => ({\\\\\\\\n      key,\\\\\\\\n      originalValue: obj1[key],\\\\\\\\n      modifiedValue: obj2[key],\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  data: null,\\\\\\\\n  socialComments: null,\\\\\\\\n  changedKeysListWithValues: null,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction sortTimelineAndComments() {\\\\\\\\n  const comments = Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", props.item);\\\\\\\\n\\\\\\\\n  if (state.changedKeysListWithValues === null) {\\\\\\\\n    const changedKeysListWithValues = snapshotHistory\\\\\\\\n      .slice(1)\\\\\\\\n      .map((item, index) => {\\\\\\\\n        const startingPoint = snapshotHistory[index]; // Set comparison to the previous item\\\\\\\\n        return {\\\\\\\\n          editorId: item.editor_id,\\\\\\\\n          ...getDifferentKeysWithValues(startingPoint, item),\\\\\\\\n        };\\\\\\\\n      });\\\\\\\\n    State.update({ changedKeysListWithValues });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort comments and timeline logs by time\\\\\\\\n  const snapShotTimeStamp = Array.isArray(snapshotHistory)\\\\\\\\n    ? snapshotHistory.map((i) => {\\\\\\\\n        return { blockHeight: null, timestamp: parseFloat(i.timestamp / 1e6) };\\\\\\\\n      })\\\\\\\\n    : [];\\\\\\\\n\\\\\\\\n  const commentsTimeStampPromise = Array.isArray(comments)\\\\\\\\n    ? Promise.all(\\\\\\\\n        comments.map((item) => {\\\\\\\\n          return asyncFetch(\\\\\\\\n            `https://api.near.social/time?blockHeight=${item.blockHeight}`\\\\\\\\n          ).then((res) => {\\\\\\\\n            const timeMs = parseFloat(res.body);\\\\\\\\n            return {\\\\\\\\n              blockHeight: item.blockHeight,\\\\\\\\n              timestamp: timeMs,\\\\\\\\n            };\\\\\\\\n          });\\\\\\\\n        })\\\\\\\\n      ).then((res) => res)\\\\\\\\n    : Promise.resolve([]);\\\\\\\\n\\\\\\\\n  commentsTimeStampPromise.then((commentsTimeStamp) => {\\\\\\\\n    const combinedArray = [...snapShotTimeStamp, ...commentsTimeStamp];\\\\\\\\n    combinedArray.sort((a, b) => a.timestamp - b.timestamp);\\\\\\\\n    State.update({ data: combinedArray, socialComments: comments });\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nif ((snapshotHistory ?? []).length > 0) {\\\\\\\\n  sortTimelineAndComments();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Comment = ({ commentItem }) => {\\\\\\\\n  const { accountId, blockHeight } = commentItem;\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n    blockHeight,\\\\\\\\n  };\\\\\\\\n  const content = JSON.parse(Social.get(item.path, blockHeight) ?? \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n  const link = getLinkUsingCurrentGateway(\\\\\\\\n    `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=rfp&id=${props.id}&accountId=${accountId}&blockHeight=${blockHeight}`\\\\\\\\n  );\\\\\\\\n  function getHighlightCommentStyle() {\\\\\\\\n    const highlightComment =\\\\\\\\n      parseInt(props.blockHeight ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") === blockHeight &&\\\\\\\\n      props.accountId === accountId;\\\\\\\\n\\\\\\\\n    return {\\\\\\\\n      border: highlightComment ? \\\\\\\\\\\\\\\"2px solid black\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div style={{ zIndex: 99, background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n            props={{\\\\\\\\n              accountId: accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <CommentContainer\\\\\\\\n          style={getHighlightCommentStyle()}\\\\\\\\n          className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Header className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <Link href={`/near/widget/ProfilePage?accountId=${accountId}`}>\\\\\\\\n                <span className=\\\\\\\\\\\\\\\"fw-bold text-black\\\\\\\\\\\\\\\">{accountId}</span>\\\\\\\\n              </Link>\\\\\\\\n              commented \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight: blockHeight,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: accountId,\\\\\\\\n                    blockHeight: blockHeight,\\\\\\\\n                    contentPath: `/post/comment`,\\\\\\\\n                    contentType: \\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </Header>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n              props={{\\\\\\\\n                text: content.text,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LikeButton`}\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                props={{\\\\\\\\n                  url: link,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </CommentContainer>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction capitalizeFirstLetter(string) {\\\\\\\\n  const updated = string.replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n  return updated.charAt(0).toUpperCase() + updated.slice(1).toLowerCase();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction parseTimelineKeyAndValue(timeline, originalValue, modifiedValue) {\\\\\\\\n  const oldValue = originalValue[timeline];\\\\\\\\n  const newValue = modifiedValue[timeline];\\\\\\\\n  switch (timeline) {\\\\\\\\n    case \\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\":\\\\\\\\n      if (newValue === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED) {\\\\\\\\n        return (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved RFP to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            \\\\\\\\u{ff65} selected proposal(s) are{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            {approvedProposals.map((i, index) => (\\\\\\\\n              <span>\\\\\\\\n                <LinkToProposal id={i.proposal_id}>\\\\\\\\n                  {\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                  #{i.proposal_id} {i.name}\\\\\\\\n                </LinkToProposal>\\\\\\\\n                {index < approvedProposals.length - 1 && \\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"}\\\\\\\\n              </span>\\\\\\\\n            ))}\\\\\\\\n          </span>\\\\\\\\n        );\\\\\\\\n      }\\\\\\\\n      return (\\\\\\\\n        oldValue !== newValue && (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved RFP from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: oldValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            stage\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccountProfile = ({ accountId }) => {\\\\\\\\n  return (\\\\\\\\n    <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n        props={{\\\\\\\\n          accountId: accountId,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n          showAccountId: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </span>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction symmetricDifference(arr1, arr2) {\\\\\\\\n  const diffA = arr1.filter((item) => !arr2.includes(item));\\\\\\\\n  const diffB = arr2.filter((item) => !arr1.includes(item));\\\\\\\\n  return [...diffA, ...diffB];\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst LinkToProposal = ({ id, children }) => {\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n          id: id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      {children}\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst parseProposalKeyAndValue = (key, modifiedValue, originalValue) => {\\\\\\\\n  switch (key) {\\\\\\\\n    case \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed title</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"summary\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed {key}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed labels to {(modifiedValue ?? []).join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\": {\\\\\\\\n      const newProposals = modifiedValue || [];\\\\\\\\n      const oldProposals = originalValue || [];\\\\\\\\n      const difference = symmetricDifference(oldProposals, newProposals).join(\\\\\\\\n        \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n\\\\\\\\n      const isUnlinked = oldProposals.length > newProposals.length;\\\\\\\\n      const actionText = isUnlinked\\\\\\\\n        ? \\\\\\\\\\\\\\\"unlinked a proposal\\\\\\\\\\\\\\\"\\\\\\\\n        : \\\\\\\\\\\\\\\"linked a proposal\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          {actionText}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <LinkToProposal id={difference}> #{difference}</LinkToProposal>\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\": {\\\\\\\\n      const modifiedKeys = Object.keys(modifiedValue);\\\\\\\\n      const originalKeys = Object.keys(originalValue);\\\\\\\\n      return modifiedKeys.map((i, index) => {\\\\\\\\n        const text = parseTimelineKeyAndValue(i, originalValue, modifiedValue);\\\\\\\\n        return (\\\\\\\\n          text && (\\\\\\\\n            <span key={index} className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              {text}\\\\\\\\n              {text &&\\\\\\\\n                originalKeys.length > 1 &&\\\\\\\\n                index < modifiedKeys.length - 1 &&\\\\\\\\n                \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LogIconContainer = styled.div`\\\\\\\\n  margin-left: 50px;\\\\\\\\n  z-index: 99;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin-left: 10px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Log = ({ timestamp }) => {\\\\\\\\n  const updatedData = useMemo(\\\\\\\\n    () =>\\\\\\\\n      state.changedKeysListWithValues.find((obj) =>\\\\\\\\n        Object.values(obj).some(\\\\\\\\n          (value) =>\\\\\\\\n            value && parseFloat(value.modifiedValue / 1e6) === timestamp\\\\\\\\n        )\\\\\\\\n      ),\\\\\\\\n    [state.changedKeysListWithValues, timestamp]\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const editorId = updatedData.editorId;\\\\\\\\n  const valuesArray = Object.values(updatedData ?? {});\\\\\\\\n  // if valuesArray length is 2 that means it only has timestamp and editorId\\\\\\\\n  if (!updatedData || valuesArray.length === 2) {\\\\\\\\n    return <></>;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return valuesArray.map((i, index) => {\\\\\\\\n    if (i.key && i.key !== \\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\\") {\\\\\\\\n      return (\\\\\\\\n        <LogIconContainer\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          key={index}\\\\\\\\n        >\\\\\\\\n          <img\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiffqrxdi4xqu7erf46gdlwuodt6dm6rji2jtixs3iionjvga6rhdi\\\\\\\\\\\\\\\"\\\\\\\\n            height={30}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"flex-1 gap-1 w-100 text-wrap text-muted align-items-center \\\\\\\\\\\\\\\" +\\\\\\\\n              (i.key === \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" &&\\\\\\\\n              Object.keys(i.originalValue ?? {}).length > 1\\\\\\\\n                ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                : \\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n              <AccountProfile accountId={editorId} showAccountId={true} />\\\\\\\\n            </span>\\\\\\\\n            {parseProposalKeyAndValue(i.key, i.modifiedValue, i.originalValue)}\\\\\\\\n            \\\\\\\\u{ff65}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n              props={{\\\\\\\\n                blockTimestamp: timestamp * 1000000,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </LogIconContainer>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (Array.isArray(state.data)) {\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"log-line\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ height: state.data.length > 2 ? \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"150%\\\\\\\\\\\\\\\" }}\\\\\\\\n      ></div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n        {state.data.map((i, index) => {\\\\\\\\n          if (i.blockHeight) {\\\\\\\\n            const item = state.socialComments.find(\\\\\\\\n              (t) => t.blockHeight === i.blockHeight\\\\\\\\n            );\\\\\\\\n            return <Comment commentItem={item} />;\\\\\\\\n          } else {\\\\\\\\n            return <Log timestamp={i.timestamp} key={index} />;\\\\\\\\n          }\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.AccountInput\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst value = props.value;\\\\\\\\nconst placeholder = props.placeholder;\\\\\\\\nconst onUpdate = props.onUpdate;\\\\\\\\n\\\\\\\\nconst [account, setAccount] = useState(value);\\\\\\\\nconst [showAccountAutocomplete, setAutoComplete] = useState(false);\\\\\\\\nconst [isValidAccount, setValidAccount] = useState(true);\\\\\\\\nconst AutoComplete = styled.div`\\\\\\\\n  margin-top: 1rem;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (value !== account) {\\\\\\\\n    setAccount(value);\\\\\\\\n  }\\\\\\\\n}, [value]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (value !== account) {\\\\\\\\n    onUpdate(account);\\\\\\\\n  }\\\\\\\\n}, [account]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    const valid = account.length === 64 || (account ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").includes(\\\\\\\\\\\\\\\".near\\\\\\\\\\\\\\\");\\\\\\\\n    setValidAccount(valid);\\\\\\\\n    setAutoComplete(!valid);\\\\\\\\n  }, 100);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [account]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: account,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          setAccount(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        placeholder: placeholder,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 64,\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    {account && !isValidAccount && (\\\\\\\\n      <div style={{ color: \\\\\\\\\\\\\\\"red\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"text-sm mt-1\\\\\\\\\\\\\\\">\\\\\\\\n        Please enter valid account ID\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n    {showAccountAutocomplete && (\\\\\\\\n      <AutoComplete>\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.AccountAutocomplete`}\\\\\\\\n          props={{\\\\\\\\n            term: account,\\\\\\\\n            onSelect: (id) => {\\\\\\\\n              setAccount(id);\\\\\\\\n              setAutoComplete(false);\\\\\\\\n            },\\\\\\\\n            onClose: () => setAutoComplete(false),\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </AutoComplete>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.FilterByLabel\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst availableOptions = props.availableOptions;\\\\\\\\nconst options =\\\\\\\\n  (availableOptions ?? []).map((i) => {\\\\\\\\n    return { label: i.title, value: i.value };\\\\\\\\n  }) ?? [];\\\\\\\\noptions.unshift({ label: \\\\\\\\\\\\\\\"All\\\\\\\\\\\\\\\", value: null });\\\\\\\\nconst setSelected = props.onStateChange ?? (() => {});\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n      props={{\\\\\\\\n        options: options,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelected(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.ComposeComment\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst proposalId = props.proposalId;\\\\\\\\nconst rfpId = props.rfpId;\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_COMMENT_DRAFT\\\\\\\\\\\\\\\" + proposalId;\\\\\\\\nlet draftComment = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst ComposeEmbeddCSS = `\\\\\\\\n  .CodeMirror {\\\\\\\\n    border: none !important;\\\\\\\\n    min-height: 50px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .CodeMirror-scroll{\\\\\\\\n    min-height: 50px !important;\\\\\\\\n    max-height: 300px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst notifyAccountIds = props.notifyAccountIds ?? [];\\\\\\\\nconst accountId = context.accountId;\\\\\\\\nconst item = props.item;\\\\\\\\nconst [allowGetDraft, setAllowGetDraft] = useState(true);\\\\\\\\nconst [comment, setComment] = useState(null);\\\\\\\\nconst [isTxnCreated, setTxnCreated] = useState(false);\\\\\\\\nconst [handler, setHandler] = useState(\\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\"); // to update editor state on draft and txn approval\\\\\\\\nconst [showCommentToast, setCommentToast] = useState(false);\\\\\\\\n\\\\\\\\nif (allowGetDraft) {\\\\\\\\n  draftComment = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (draftComment) {\\\\\\\\n    setComment(draftComment);\\\\\\\\n    setAllowGetDraft(false);\\\\\\\\n    setHandler(\\\\\\\\\\\\\\\"refreshEditor\\\\\\\\\\\\\\\");\\\\\\\\n  }\\\\\\\\n}, [draftComment]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (draftComment === comment) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, comment);\\\\\\\\n  }, 1000);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [comment]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (handler === \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\") {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setHandler(\\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\");\\\\\\\\n  }, 3000);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [handler]);\\\\\\\\n\\\\\\\\nif (!accountId) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{\\\\\\\\n        marginLeft: 10,\\\\\\\\n        backgroundColor: \\\\\\\\\\\\\\\"#ECF8FB\\\\\\\\\\\\\\\",\\\\\\\\n        border: \\\\\\\\\\\\\\\"1px solid #E2E6EC\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1 p-4 rounded-2 flex-wrap flex-md-nowrap\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Link to=\\\\\\\\\\\\\\\"https://near.org/signup\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n          props={{\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"grey-btn\\\\\\\\\\\\\\\" },\\\\\\\\n            label: \\\\\\\\\\\\\\\"Sign up\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </Link>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">to join this conversation.</div>\\\\\\\\n      <div>Already have an account?</div>\\\\\\\\n      <a className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://near.org/signin\\\\\\\\\\\\\\\">\\\\\\\\n        Log in to comment\\\\\\\\n      </a>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractMentions(text) {\\\\\\\\n  const mentionRegex =\\\\\\\\n    /@((?:(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+\\\\\\\\\\\\\\\\.)*(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+)/gi;\\\\\\\\n  mentionRegex.lastIndex = 0;\\\\\\\\n  const accountIds = new Set();\\\\\\\\n  for (const match of text.matchAll(mentionRegex)) {\\\\\\\\n    if (\\\\\\\\n      !/[\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index - 1)) &&\\\\\\\\n      !/[/\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index + match[0].length)) &&\\\\\\\\n      match[1].length >= 2 &&\\\\\\\\n      match[1].length <= 64\\\\\\\\n    ) {\\\\\\\\n      accountIds.add(match[1].toLowerCase());\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return [...accountIds];\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractTagNotifications(text, item) {\\\\\\\\n  return extractMentions(text || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n    .filter((accountId) => accountId !== context.accountId)\\\\\\\\n    .map((accountId) => ({\\\\\\\\n      key: accountId,\\\\\\\\n      value: {\\\\\\\\n        type: \\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\n        item,\\\\\\\\n      },\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction composeData() {\\\\\\\\n  setTxnCreated(true);\\\\\\\\n  const data = {\\\\\\\\n    post: {\\\\\\\\n      comment: JSON.stringify({\\\\\\\\n        type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n        text: comment,\\\\\\\\n        item,\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n    index: {\\\\\\\\n      comment: JSON.stringify({\\\\\\\\n        key: item,\\\\\\\\n        value: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const notifications = extractTagNotifications(comment, {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  if (notifyAccountIds.length > 0) {\\\\\\\\n    notifyAccountIds.map((account) => {\\\\\\\\n      if (account !== context.accountId) {\\\\\\\\n        notifications.push({\\\\\\\\n          key: account,\\\\\\\\n          value: proposalId\\\\\\\\n            ? {\\\\\\\\n                type: \\\\\\\\\\\\\\\"devhub/reply\\\\\\\\\\\\\\\",\\\\\\\\n                item,\\\\\\\\n                proposal: proposalId,\\\\\\\\n              }\\\\\\\\n            : {\\\\\\\\n                type: \\\\\\\\\\\\\\\"devhub/reply\\\\\\\\\\\\\\\",\\\\\\\\n                item,\\\\\\\\n                rfpId: rfpId,\\\\\\\\n              },\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (notifications.length) {\\\\\\\\n    data.index.notify = JSON.stringify(\\\\\\\\n      notifications.length > 1 ? notifications : notifications[0]\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Social.set(data, {\\\\\\\\n    force: true,\\\\\\\\n    onCommit: () => {\\\\\\\\n      setCommentToast(true);\\\\\\\\n      setComment(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n      setHandler(\\\\\\\\\\\\\\\"refreshEditor\\\\\\\\\\\\\\\");\\\\\\\\n      setTxnCreated(false);\\\\\\\\n    },\\\\\\\\n    onCancel: () => {\\\\\\\\n      setTxnCreated(false);\\\\\\\\n    },\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes && comment) {\\\\\\\\n    setComment(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"comment-btn-spinner spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Compose = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: comment,\\\\\\\\n        onChangeKeyup: setComment,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Add your comment here...\\\\\\\\\\\\\\\",\\\\\\\\n        height: \\\\\\\\\\\\\\\"250\\\\\\\\\\\\\\\",\\\\\\\\n        embeddCSS: ComposeEmbeddCSS,\\\\\\\\n        handler: handler,\\\\\\\\n        showProposalIdAutoComplete: true,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftComment, handler]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_NEAR}/widget/DIG.Toast`}\\\\\\\\n      props={{\\\\\\\\n        title: \\\\\\\\\\\\\\\"Comment Submitted Successfully\\\\\\\\\\\\\\\",\\\\\\\\n        type: \\\\\\\\\\\\\\\"success\\\\\\\\\\\\\\\",\\\\\\\\n        open: showCommentToast,\\\\\\\\n        onOpenChange: (v) => setCommentToast(v),\\\\\\\\n        trigger: <></>,\\\\\\\\n        providerProps: { duration: 3000 },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n      props={{\\\\\\\\n        accountId: accountId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"mt-1\\\\\\\\\\\\\\\">Add a comment</b>\\\\\\\\n      {Compose}\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-content-center justify-content-end\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n          props={{\\\\\\\\n            label: isTxnCreated ? LoadingButtonSpinner : \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n            [\\\\\\\\\\\\\\\"data-testid\\\\\\\\\\\\\\\"]: \\\\\\\\\\\\\\\"compose-comment\\\\\\\\\\\\\\\",\\\\\\\\n            disabled: !comment || isTxnCreated,\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"green-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n            onClick: () => {\\\\\\\\n              composeData();\\\\\\\\n            },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.NavbarDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst title = props.title;\\\\\\\\nconst links = props.links;\\\\\\\\nconst href = props.href;\\\\\\\\n\\\\\\\\nconst [showMenu, setShowMenu] = useState(false);\\\\\\\\n\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst Dropdown = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: center;\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    &.active {\\\\\\\\n      color: #fff;\\\\\\\\n\\\\\\\\n      &:hover {\\\\\\\\n        text-decoration: none;\\\\\\\\n        color: #096d50 !important;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst DropdownMenu = styled.div`\\\\\\\\n  z-index: 50;\\\\\\\\n  position: absolute;\\\\\\\\n  top: 2.25rem;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    padding: 0.5rem 1rem;\\\\\\\\n    padding-top: 1rem;\\\\\\\\n    border-radius: 1rem;\\\\\\\\n    background: rgba(217, 217, 217, 0.7);\\\\\\\\n    backdrop-filter: blur(5px);\\\\\\\\n    width: max-content;\\\\\\\\n    animation: slide-down 300ms ease;\\\\\\\\n    transform-origin: top center;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @keyframes slide-down {\\\\\\\\n    0% {\\\\\\\\n      transform: scaleY(0);\\\\\\\\n    }\\\\\\\\n    100% {\\\\\\\\n      transform: scaleY(1);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst DropdownLink = styled.div`\\\\\\\\n  color: inherit;\\\\\\\\n  text-decoration: none;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    color: #555555;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n    color: #096d50 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Dropdown\\\\\\\\n    onMouseEnter={() => setShowMenu(true)}\\\\\\\\n    onMouseLeave={() => setShowMenu(false)}\\\\\\\\n  >\\\\\\\\n    {href ? (\\\\\\\\n      <DropdownLink className={href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"} href={href}>\\\\\\\\n        <Link\\\\\\\\n          style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n          to={linkHref({\\\\\\\\n            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n            params: { page: href },\\\\\\\\n          })}\\\\\\\\n        >\\\\\\\\n          {title}\\\\\\\\n        </Link>\\\\\\\\n      </DropdownLink>\\\\\\\\n    ) : (\\\\\\\\n      <p className={`m-0 py-2 nav-dropdown`} style={{ cursor: \\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {title} \\\\\\\\u{2193}\\\\\\\\n      </p>\\\\\\\\n    )}\\\\\\\\n    {showMenu && links.length !== 0 && (\\\\\\\\n      <DropdownMenu className={`${showMenu && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}`}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n          {links.map((link) => (\\\\\\\\n            // Check if the link is external\\\\\\\\n            <DropdownLink\\\\\\\\n              className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n              key={`${link.title}-${link.href}`}\\\\\\\\n            >\\\\\\\\n              {link.href.startsWith(\\\\\\\\\\\\\\\"http://\\\\\\\\\\\\\\\") ||\\\\\\\\n              link.href.startsWith(\\\\\\\\\\\\\\\"https://\\\\\\\\\\\\\\\") ? (\\\\\\\\n                // External link: Render an <a> tag\\\\\\\\n                <a\\\\\\\\n                  href={link.href}\\\\\\\\n                  style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n                  target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {link.title}\\\\\\\\n                </a>\\\\\\\\n              ) : (\\\\\\\\n                // Internal link: Render the <Link> component\\\\\\\\n                <Link\\\\\\\\n                  style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n                  to={linkHref({\\\\\\\\n                    widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                    params: { page: link.href },\\\\\\\\n                  })}\\\\\\\\n                >\\\\\\\\n                  {link.title}\\\\\\\\n                </Link>\\\\\\\\n              )}\\\\\\\\n            </DropdownLink>\\\\\\\\n          ))}\\\\\\\\n        </div>\\\\\\\\n      </DropdownMenu>\\\\\\\\n    )}\\\\\\\\n  </Dropdown>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.ConfirmCancelModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst onCancelClick = props.onCancelClick;\\\\\\\\nconst onConfirmClick = props.onConfirmClick;\\\\\\\\nconst linkedProposalIds = props.linkedProposalIds;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background: rgb(244, 244, 244) !important;\\\\\\\\n    max-height: 300px;\\\\\\\\n    overflow-y: auto;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.5);\\\\\\\\n  opacity: 0.4;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst [proposalStatus, setProposalStatus] = useState(null);\\\\\\\\n\\\\\\\\nconst OptionForm = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 pl-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n        props={{\\\\\\\\n          value: CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS,\\\\\\\\n          label: (\\\\\\\\n            <div>\\\\\\\\n              <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Option 1: </span>Cancel all linked\\\\\\\\n              proposals\\\\\\\\n            </div>\\\\\\\\n          ),\\\\\\\\n          isChecked: proposalStatus === CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS,\\\\\\\\n          onClick: (v) => {\\\\\\\\n            if (v) {\\\\\\\\n              setProposalStatus(CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS);\\\\\\\\n            }\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n        props={{\\\\\\\\n          value: CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS,\\\\\\\\n          label: (\\\\\\\\n            <div>\\\\\\\\n              <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Option 2: </span> Unlink all linked\\\\\\\\n              proposals (maintain their status)\\\\\\\\n            </div>\\\\\\\\n          ),\\\\\\\\n          isChecked: proposalStatus === CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS,\\\\\\\\n          onClick: (v) => {\\\\\\\\n            if (v) {\\\\\\\\n              setProposalStatus(CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS);\\\\\\\\n            }\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n        props={{\\\\\\\\n          value: CANCEL_RFP_OPTIONS.NONE,\\\\\\\\n          label: (\\\\\\\\n            <div>\\\\\\\\n              <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Option 3: </span> Leave all linked\\\\\\\\n              proposals as they are\\\\\\\\n            </div>\\\\\\\\n          ),\\\\\\\\n          isChecked: proposalStatus === CANCEL_RFP_OPTIONS.NONE,\\\\\\\\n          onClick: (v) => {\\\\\\\\n            if (v) {\\\\\\\\n              setProposalStatus(CANCEL_RFP_OPTIONS.NONE);\\\\\\\\n            }\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [proposalStatus]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Are you sure you want to cancel this RFP?</h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n        <ModalContent className=\\\\\\\\\\\\\\\"text-muted d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n          The RFP status will change to \\\\\\\\u{201c}Cancelled\\\\\\\\u{201d} and it will no longer be\\\\\\\\n          active or relevant. Comments will remain open.\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"bg-grey d-flex flex-column p-3 rounded-1 text-black\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"h6\\\\\\\\\\\\\\\">\\\\\\\\n              Linked Proposals ({linkedProposalIds.length})\\\\\\\\n            </div>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n              props={{\\\\\\\\n                linkedProposalIds: linkedProposalIds,\\\\\\\\n                showStatus: true,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"text-muted d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-lg\\\\\\\\\\\\\\\">\\\\\\\\n              What would you like to do with the linked proposals?\\\\\\\\n            </div>\\\\\\\\n            {OptionForm}\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"text-sm mt-2\\\\\\\\\\\\\\\">\\\\\\\\n            Note: To take specific actions on individual proposals, please\\\\\\\\n            manage them from their respective pages.\\\\\\\\n          </div>\\\\\\\\n        </ModalContent>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-outline-secondary\\\\\\\\\\\\\\\" },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onCancelClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-danger\\\\\\\\\\\\\\\" },\\\\\\\\n              disabled: !proposalStatus,\\\\\\\\n              label: \\\\\\\\\\\\\\\"Ready to Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: () => onConfirmClick(proposalStatus),\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedProposals\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`) || {\\\\\\\\n  href: () => {},\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst linkedProposalIds = props.linkedProposalIds ?? [];\\\\\\\\nconst linkedProposalsData = [];\\\\\\\\nconst showStatus = props.showStatus ?? false;\\\\\\\\n\\\\\\\\n// using contract instead of indexer, since indexer doesn\\\\\\\\\\\\'t return timestamp\\\\\\\\nlinkedProposalIds.map((item) => {\\\\\\\\n  const data = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id: item,\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n  if (data !== null) {\\\\\\\\n    linkedProposalsData.push(data);\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  a {\\\\\\\\n    &:hover {\\\\\\\\n      text-decoration: none !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    {linkedProposalsData.map((item) => {\\\\\\\\n      return (\\\\\\\\n        <a\\\\\\\\n          href={href({\\\\\\\\n            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n            params: {\\\\\\\\n              page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n              id: item.id,\\\\\\\\n            },\\\\\\\\n          })}\\\\\\\\n          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n          rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n              props={{\\\\\\\\n                accountId: item.snapshot.editor_id,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\" style={{ maxWidth: 250 }}>\\\\\\\\n              <b className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">{item.snapshot.name}</b>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                created on {readableDate(item.snapshot.timestamp / 1000000)}\\\\\\\\n              </div>\\\\\\\\n              {showStatus && (\\\\\\\\n                <div style={{ width: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"mt-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Widget\\\\\\\\n                    src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n                    props={{\\\\\\\\n                      timelineStatus: item.snapshot.timeline.status,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </a>\\\\\\\\n      );\\\\\\\\n    })}\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.CommentsAndLogs\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst snapshotHistory = props.snapshotHistory;\\\\\\\\nconst latestSnapshot = props.latestSnapshot;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  .log-line {\\\\\\\\n    position: absolute;\\\\\\\\n    left: 7%;\\\\\\\\n    top: -30px;\\\\\\\\n    bottom: 0;\\\\\\\\n    z-index: 1;\\\\\\\\n    width: 1px;\\\\\\\\n    background-color: var(--bs-border-color);\\\\\\\\n    z-index: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .inline-flex {\\\\\\\\n    display: -webkit-inline-box !important;\\\\\\\\n    align-items: center !important;\\\\\\\\n    gap: 0.25rem !important;\\\\\\\\n    margin-right: 2px;\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommentContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// check snapshot history all keys and values for differences\\\\\\\\nfunction getDifferentKeysWithValues(obj1, obj2) {\\\\\\\\n  return Object.keys(obj1)\\\\\\\\n    .filter((key) => {\\\\\\\\n      if (key !== \\\\\\\\\\\\\\\"editor_id\\\\\\\\\\\\\\\" && obj2.hasOwnProperty(key)) {\\\\\\\\n        const value1 = obj1[key];\\\\\\\\n        const value2 = obj2[key];\\\\\\\\n        if (Array.isArray(value1) && Array.isArray(value2)) {\\\\\\\\n          const sortedValue1 = [...value1].sort();\\\\\\\\n          const sortedValue2 = [...value2].sort();\\\\\\\\n          return JSON.stringify(sortedValue1) !== JSON.stringify(sortedValue2);\\\\\\\\n        } else if (typeof value1 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" && typeof value2 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else {\\\\\\\\n          return value1 !== value2;\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      return false;\\\\\\\\n    })\\\\\\\\n    .map((key) => ({\\\\\\\\n      key,\\\\\\\\n      originalValue: obj1[key],\\\\\\\\n      modifiedValue: obj2[key],\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  data: null,\\\\\\\\n  socialComments: null,\\\\\\\\n  changedKeysListWithValues: null,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction sortTimelineAndComments() {\\\\\\\\n  const comments = Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", props.item, { subscribe: true });\\\\\\\\n\\\\\\\\n  if (state.changedKeysListWithValues === null) {\\\\\\\\n    const changedKeysListWithValues = snapshotHistory\\\\\\\\n      .slice(1)\\\\\\\\n      .map((item, index) => {\\\\\\\\n        const startingPoint = snapshotHistory[index]; // Set comparison to the previous item\\\\\\\\n        return {\\\\\\\\n          editorId: item.editor_id,\\\\\\\\n          ...getDifferentKeysWithValues(startingPoint, item),\\\\\\\\n        };\\\\\\\\n      });\\\\\\\\n    State.update({ changedKeysListWithValues });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort comments and timeline logs by time\\\\\\\\n  const snapShotTimeStamp = Array.isArray(snapshotHistory)\\\\\\\\n    ? snapshotHistory.map((i) => {\\\\\\\\n        return { blockHeight: null, timestamp: parseFloat(i.timestamp / 1e6) };\\\\\\\\n      })\\\\\\\\n    : [];\\\\\\\\n\\\\\\\\n  const commentsTimeStampPromise = Array.isArray(comments)\\\\\\\\n    ? Promise.all(\\\\\\\\n        comments.map((item) => {\\\\\\\\n          return asyncFetch(\\\\\\\\n            `https://api.near.social/time?blockHeight=${item.blockHeight}`\\\\\\\\n          ).then((res) => {\\\\\\\\n            const timeMs = parseFloat(res.body);\\\\\\\\n            return {\\\\\\\\n              blockHeight: item.blockHeight,\\\\\\\\n              timestamp: timeMs,\\\\\\\\n            };\\\\\\\\n          });\\\\\\\\n        })\\\\\\\\n      ).then((res) => res)\\\\\\\\n    : Promise.resolve([]);\\\\\\\\n\\\\\\\\n  commentsTimeStampPromise.then((commentsTimeStamp) => {\\\\\\\\n    const combinedArray = [...snapShotTimeStamp, ...commentsTimeStamp];\\\\\\\\n    combinedArray.sort((a, b) => a.timestamp - b.timestamp);\\\\\\\\n    State.update({ data: combinedArray, socialComments: comments });\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nif ((snapshotHistory ?? []).length > 0) {\\\\\\\\n  sortTimelineAndComments();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Comment = ({ commentItem }) => {\\\\\\\\n  const { accountId, blockHeight } = commentItem;\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n    blockHeight,\\\\\\\\n  };\\\\\\\\n  const content = JSON.parse(Social.get(item.path, blockHeight) ?? \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n  const link = getLinkUsingCurrentGateway(\\\\\\\\n    `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=proposal&id=${props.id}&accountId=${accountId}&blockHeight=${blockHeight}`\\\\\\\\n  );\\\\\\\\n  const hightlightComment =\\\\\\\\n    parseInt(props.blockHeight ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") === blockHeight &&\\\\\\\\n    props.accountId === accountId;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div style={{ zIndex: 99, background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n            props={{\\\\\\\\n              accountId: accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <CommentContainer\\\\\\\\n          style={{ border: hightlightComment ? \\\\\\\\\\\\\\\"2px solid black\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Header className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <Link href={`/near/widget/ProfilePage?accountId=${accountId}`}>\\\\\\\\n                <span className=\\\\\\\\\\\\\\\"fw-bold text-black\\\\\\\\\\\\\\\">{accountId}</span>\\\\\\\\n              </Link>\\\\\\\\n              commented \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight: blockHeight,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: accountId,\\\\\\\\n                    blockHeight: blockHeight,\\\\\\\\n                    contentPath: `/post/comment`,\\\\\\\\n                    contentType: \\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </Header>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n              props={{\\\\\\\\n                text: content.text,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LikeButton`}\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                props={{\\\\\\\\n                  url: link,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </CommentContainer>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction capitalizeFirstLetter(string) {\\\\\\\\n  const updated = string.replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n  return updated.charAt(0).toUpperCase() + updated.slice(1).toLowerCase();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction parseTimelineKeyAndValue(timeline, originalValue, modifiedValue) {\\\\\\\\n  const oldValue = originalValue[timeline];\\\\\\\\n  const newValue = modifiedValue[timeline];\\\\\\\\n  switch (timeline) {\\\\\\\\n    case \\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\": {\\\\\\\\n      if (\\\\\\\\n        (newValue === PROPOSAL_TIMELINE_STATUS.APPROVED ||\\\\\\\\n          newValue === PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY) &&\\\\\\\\n        latestSnapshot.linked_rfp\\\\\\\\n      ) {\\\\\\\\n        return (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved proposal to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            \\\\\\\\u{ff65} this proposal is selected for RFP{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <LinkToRfp id={latestSnapshot.linked_rfp}>\\\\\\\\n              #{latestSnapshot.linked_rfp}\\\\\\\\n            </LinkToRfp>\\\\\\\\n          </span>\\\\\\\\n        );\\\\\\\\n      } else\\\\\\\\n        return (\\\\\\\\n          oldValue !== newValue && (\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              moved proposal from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n                props={{\\\\\\\\n                  timelineStatus: oldValue,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n                props={{\\\\\\\\n                  timelineStatus: newValue,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              stage\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"sponsor_requested_review\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed review</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"reviewer_completed_attestation\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed attestation</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"kyc_verified\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>verified KYC/KYB</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"test_transaction_sent\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        !oldValue &&\\\\\\\\n        newValue && (\\\\\\\\n          <span>\\\\\\\\n            confirmed sponsorship and shared funding steps with recipient\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"payouts\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>updated the funding payment links.</span>;\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccountProfile = ({ accountId }) => {\\\\\\\\n  return (\\\\\\\\n    <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n        props={{\\\\\\\\n          accountId: accountId,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n          showAccountId: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </span>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LinkToRfp = ({ id, children }) => {\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n          id: id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      {children}\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst parseProposalKeyAndValue = (key, modifiedValue, originalValue) => {\\\\\\\\n  switch (key) {\\\\\\\\n    case \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed title</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"summary\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed {key}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed labels to {(modifiedValue ?? []).join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed category from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>updated linked proposals</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_rfp\\\\\\\\\\\\\\\": {\\\\\\\\n      const isUnlinked = isNumber(originalValue) && !isNumber(modifiedValue);\\\\\\\\n      const actionText = isUnlinked ? \\\\\\\\\\\\\\\"unlinked\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"linked\\\\\\\\\\\\\\\";\\\\\\\\n      const rfpId = originalValue ?? modifiedValue;\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          {actionText} an RFP <LinkToRfp id={rfpId}>#{rfpId}</LinkToRfp>\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_usd_amount\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship amount from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_paid_in_currency\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship currency from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"receiver_account\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed receiver account from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"supervisor\\\\\\\\\\\\\\\":\\\\\\\\n      return !originalValue && modifiedValue ? (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          added\\\\\\\\n          <AccountProfile accountId={modifiedValue} />\\\\\\\\n          as project coordinator\\\\\\\\n        </span>\\\\\\\\n      ) : (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed project coordinator from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\": {\\\\\\\\n      const modifiedKeys = Object.keys(modifiedValue);\\\\\\\\n      const originalKeys = Object.keys(originalValue);\\\\\\\\n      return modifiedKeys.map((i, index) => {\\\\\\\\n        const text = parseTimelineKeyAndValue(i, originalValue, modifiedValue);\\\\\\\\n        return (\\\\\\\\n          text && (\\\\\\\\n            <span key={index} className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              {text}\\\\\\\\n              {text && \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LogIconContainer = styled.div`\\\\\\\\n  margin-left: 50px;\\\\\\\\n  z-index: 99;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin-left: 10px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Log = ({ timestamp }) => {\\\\\\\\n  const updatedData = useMemo(\\\\\\\\n    () =>\\\\\\\\n      state.changedKeysListWithValues.find((obj) =>\\\\\\\\n        Object.values(obj).some(\\\\\\\\n          (value) =>\\\\\\\\n            value && parseFloat(value.modifiedValue / 1e6) === timestamp\\\\\\\\n        )\\\\\\\\n      ),\\\\\\\\n    [state.changedKeysListWithValues, timestamp]\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const editorId = updatedData.editorId;\\\\\\\\n  const valuesArray = Object.values(updatedData ?? {});\\\\\\\\n  // if valuesArray length is 2 that means it only has timestamp and editorId\\\\\\\\n  if (!updatedData || valuesArray.length === 2) {\\\\\\\\n    return <></>;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return valuesArray.map((i, index) => {\\\\\\\\n    if (i.key && i.key !== \\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\\") {\\\\\\\\n      return (\\\\\\\\n        <LogIconContainer\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          key={index}\\\\\\\\n        >\\\\\\\\n          <img\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiffqrxdi4xqu7erf46gdlwuodt6dm6rji2jtixs3iionjvga6rhdi\\\\\\\\\\\\\\\"\\\\\\\\n            height={30}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"flex-1 gap-1 w-100 text-wrap text-muted align-items-center \\\\\\\\\\\\\\\" +\\\\\\\\n              (i.key === \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" &&\\\\\\\\n              Object.keys(i.originalValue ?? {}).length > 1\\\\\\\\n                ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                : \\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n              <AccountProfile accountId={editorId} showAccountId={true} />{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n            {parseProposalKeyAndValue(i.key, i.modifiedValue, i.originalValue)}\\\\\\\\n            {i.key !== \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" && \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n              props={{\\\\\\\\n                blockTimestamp: timestamp * 1000000,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </LogIconContainer>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (Array.isArray(state.data)) {\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"log-line\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ height: state.data.length > 2 ? \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"150%\\\\\\\\\\\\\\\" }}\\\\\\\\n      ></div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n        {state.data.map((i, index) => {\\\\\\\\n          if (i.blockHeight) {\\\\\\\\n            const item = state.socialComments.find(\\\\\\\\n              (t) => t.blockHeight === i.blockHeight\\\\\\\\n            );\\\\\\\\n            return <Comment commentItem={item} />;\\\\\\\\n          } else {\\\\\\\\n            return <Log timestamp={i.timestamp} key={index} />;\\\\\\\\n          }\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.TimelineConfigurator\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst stepsArray = [1, 2, 3];\\\\\\\\nconst timeline = props.timeline;\\\\\\\\nconst disabled = props.disabled;\\\\\\\\nconst setTimeline = props.setTimeline ?? (() => {});\\\\\\\\n\\\\\\\\nconst TimelineStatusOptions = [\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Accepting Submissions\\\\\\\\\\\\\\\",\\\\\\\\n    value: { status: RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Evaluation\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: RFP_TIMELINE_STATUS.EVALUATION,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Proposal Selected\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Cancelled\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .circle-lg {\\\\\\\\n    width: 15px;\\\\\\\\n    height: 15px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 85px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 65px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nconst selectedTimelineStatusIndex = useMemo(\\\\\\\\n  () =>\\\\\\\\n    TimelineStatusOptions.findIndex((i) => i.value.status === timeline.status),\\\\\\\\n  [timeline]\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst TimelineItems = ({ title, children, value, values }) => {\\\\\\\\n  const indexOfCurrentItem = TimelineStatusOptions.findIndex((i) =>\\\\\\\\n    Array.isArray(values)\\\\\\\\n      ? values.includes(i.value.status)\\\\\\\\n      : value === i.value.status\\\\\\\\n  );\\\\\\\\n  let color = \\\\\\\\\\\\\\\"transparent\\\\\\\\\\\\\\\";\\\\\\\\n  let statusIndex = selectedTimelineStatusIndex;\\\\\\\\n  // index 2,3 is of decision\\\\\\\\n  if (selectedTimelineStatusIndex === 3) {\\\\\\\\n    statusIndex = 2;\\\\\\\\n  }\\\\\\\\n  if (statusIndex === indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FEF6EE\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  if (statusIndex > indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#EEFEF0\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // cancelled\\\\\\\\n  if (\\\\\\\\n    statusIndex === 2 &&\\\\\\\\n    (values ?? []).includes(RFP_TIMELINE_STATUS.CANCELLED) &&\\\\\\\\n    timeline.status === RFP_TIMELINE_STATUS.CANCELLED\\\\\\\\n  ) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"p-2 rounded-3\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        backgroundColor: color,\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 text-black\\\\\\\\\\\\\\\"> {title}</div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n    {!disabled && (\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n        <h6 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Status</h6>\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.DropDown`}\\\\\\\\n          props={{\\\\\\\\n            options: TimelineStatusOptions,\\\\\\\\n            selectedValue: TimelineStatusOptions.find(\\\\\\\\n              (i) => i.value.status === timeline.status\\\\\\\\n            ),\\\\\\\\n            onUpdate: (v) => {\\\\\\\\n              setTimeline({ status: v.value.status });\\\\\\\\n            },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-3 mt-2\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column mt-4\\\\\\\\\\\\\\\">\\\\\\\\n        {stepsArray.map((_, index) => {\\\\\\\\n          const indexOfCurrentItem = index;\\\\\\\\n          let color = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n          let statusIndex = selectedTimelineStatusIndex;\\\\\\\\n          // index 2,3 is of decision\\\\\\\\n          if (selectedTimelineStatusIndex === 3) {\\\\\\\\n            statusIndex = 2;\\\\\\\\n          }\\\\\\\\n          const current = statusIndex === indexOfCurrentItem;\\\\\\\\n          const completed =\\\\\\\\n            statusIndex > indexOfCurrentItem ||\\\\\\\\n            timeline.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED ||\\\\\\\\n            timeline.status === RFP_TIMELINE_STATUS.CANCELLED;\\\\\\\\n          return (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n              <div\\\\\\\\n                className={\\\\\\\\n                  \\\\\\\\\\\\\\\"circle-lg \\\\\\\\\\\\\\\" +\\\\\\\\n                  (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                  (current && !completed && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {completed && (\\\\\\\\n                  <div\\\\\\\\n                    className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n                    style={{ height: \\\\\\\\\\\\\\\"120%\\\\\\\\\\\\\\\" }}\\\\\\\\n                  >\\\\\\\\n                    <i className=\\\\\\\\\\\\\\\"bi bi-check\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n              {index !== stepsArray.length - 1 && (\\\\\\\\n                <div\\\\\\\\n                  className={\\\\\\\\n                    \\\\\\\\\\\\\\\"vertical-line \\\\\\\\\\\\\\\" +\\\\\\\\n                    (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                    (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                  }\\\\\\\\n                ></div>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          );\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n        <TimelineItems\\\\\\\\n          title=\\\\\\\\\\\\\\\"1) Accepting Submissions\\\\\\\\\\\\\\\"\\\\\\\\n          value={RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS}\\\\\\\\n        >\\\\\\\\n          <div>During this stage, the RFP is still open for submissions.</div>\\\\\\\\n        </TimelineItems>\\\\\\\\n        <TimelineItems\\\\\\\\n          title=\\\\\\\\\\\\\\\"2) Evaluation\\\\\\\\\\\\\\\"\\\\\\\\n          value={RFP_TIMELINE_STATUS.EVALUATION}\\\\\\\\n        >\\\\\\\\n          <div>\\\\\\\\n            This RFP is closed for submissions. All submitted proposals are\\\\\\\\n            under review.\\\\\\\\n          </div>\\\\\\\\n        </TimelineItems>\\\\\\\\n        <TimelineItems\\\\\\\\n          title=\\\\\\\\\\\\\\\"3) Decision\\\\\\\\\\\\\\\"\\\\\\\\n          values={[\\\\\\\\n            RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n            RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n          ]}\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div>Sponsor makes a final decision:</div>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n              props={{\\\\\\\\n                value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                label: <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Proposal Selected</div>,\\\\\\\\n                disabled: disabled,\\\\\\\\n                isChecked:\\\\\\\\n                  timeline.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n                onClick: (v) => {\\\\\\\\n                  if (v) {\\\\\\\\n                    setTimeline({\\\\\\\\n                      status: RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n                    });\\\\\\\\n                  }\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n              props={{\\\\\\\\n                value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                disabled: disabled,\\\\\\\\n                label: <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">RFP Cancelled</div>,\\\\\\\\n                isChecked: timeline.status === RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n                onClick: (v) => {\\\\\\\\n                  if (v) {\\\\\\\\n                    setTimeline({\\\\\\\\n                      status: RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n                    });\\\\\\\\n                  }\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </TimelineItems>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedRfpDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { linkedRfp, onChange, disabled, onDeleteRfp } = props;\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst [selectedRFP, setSelectedRFP] = useState(null);\\\\\\\\nconst [acceptingRfpsOptions, setAcceptingRfpsOption] = useState([]);\\\\\\\\nconst [allRfpOptions, setAllRfpOptions] = useState([]);\\\\\\\\nconst [searchRFPId, setSearchRfpId] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [initialStateApplied, setInitialState] = useState(false);\\\\\\\\n\\\\\\\\nconst queryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n  ${queryName}(\\\\\\\\n    offset: $offset\\\\\\\\n    limit: $limit\\\\\\\\n    order_by: {rfp_id: desc}\\\\\\\\n    where: $where\\\\\\\\n  ) {\\\\\\\\n    name\\\\\\\\n    rfp_id\\\\\\\\n    timeline\\\\\\\\n  }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\nfunction separateNumberAndText(str) {\\\\\\\\n  const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n  if (numberRegex.test(str)) {\\\\\\\\n    const number = str.match(numberRegex)[0];\\\\\\\\n    const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n    return { number: parseInt(number), text };\\\\\\\\n  } else {\\\\\\\\n    return { number: null, text: str.trim() };\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst buildWhereClause = () => {\\\\\\\\n  // show only accepting submissions stage rfps\\\\\\\\n  let where = {};\\\\\\\\n  const { number, text } = separateNumberAndText(searchRFPId);\\\\\\\\n\\\\\\\\n  if (number) {\\\\\\\\n    where = { rfp_id: { _eq: number }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (text) {\\\\\\\\n    where = { name: { _ilike: `%${text}%` }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return where;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst fetchRfps = () => {\\\\\\\\n  const FETCH_LIMIT = 30;\\\\\\\\n  const variables = {\\\\\\\\n    limit: FETCH_LIMIT,\\\\\\\\n    offset: 0,\\\\\\\\n    where: buildWhereClause(),\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const rfpsData = result.body.data?.[queryName];\\\\\\\\n        const data = [];\\\\\\\\n        const acceptingData = [];\\\\\\\\n        for (const prop of rfpsData) {\\\\\\\\n          const timeline = parseJSON(prop.timeline);\\\\\\\\n          const label = \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + prop.rfp_id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + prop.name;\\\\\\\\n          const value = prop.rfp_id;\\\\\\\\n          if (timeline.status === RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS) {\\\\\\\\n            acceptingData.push({\\\\\\\\n              label,\\\\\\\\n              value,\\\\\\\\n            });\\\\\\\\n          }\\\\\\\\n          data.push({\\\\\\\\n            label,\\\\\\\\n            value,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n        setAcceptingRfpsOption(acceptingData);\\\\\\\\n        setAllRfpOptions(data);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchRfps();\\\\\\\\n}, [searchRFPId]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(linkedRfp) !== JSON.stringify(selectedRFP)) {\\\\\\\\n    if (allRfpOptions.length > 0) {\\\\\\\\n      if (typeof linkedRfp !== \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n        setSelectedRFP(allRfpOptions.find((i) => linkedRfp === i.value));\\\\\\\\n      } else {\\\\\\\\n        setSelectedRFP(linkedRfp);\\\\\\\\n      }\\\\\\\\n      setInitialState(true);\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    setInitialState(true);\\\\\\\\n  }\\\\\\\\n}, [linkedRfp, allRfpOptions]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    JSON.stringify(linkedRfp) !== JSON.stringify(selectedRFP) &&\\\\\\\\n    initialStateApplied\\\\\\\\n  ) {\\\\\\\\n    onChange(selectedRFP);\\\\\\\\n  }\\\\\\\\n}, [selectedRFP, initialStateApplied]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {selectedRFP && (\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <a\\\\\\\\n          className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n          href={href({\\\\\\\\n            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n            params: {\\\\\\\\n              page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n              id: selectedRFP.value,\\\\\\\\n            },\\\\\\\\n          })}\\\\\\\\n          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n          rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          {selectedRFP.label}\\\\\\\\n        </a>\\\\\\\\n        {!disabled && (\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => {\\\\\\\\n              onDeleteRfp();\\\\\\\\n              setSelectedRFP(null);\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-trash3-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.DropDownWithSearch`}\\\\\\\\n      props={{\\\\\\\\n        disabled: disabled,\\\\\\\\n        selectedValue: selectedRFP.value,\\\\\\\\n        onChange: (v) => {\\\\\\\\n          setSelectedRFP(v);\\\\\\\\n        },\\\\\\\\n        options: isModerator ? allRfpOptions : acceptingRfpsOptions,\\\\\\\\n        showSearch: true,\\\\\\\\n        searchInputPlaceholder: \\\\\\\\\\\\\\\"Search by Id\\\\\\\\\\\\\\\",\\\\\\\\n        defaultLabel: \\\\\\\\\\\\\\\"Search RFP\\\\\\\\\\\\\\\",\\\\\\\\n        searchByValue: true,\\\\\\\\n        onSearch: (value) => {\\\\\\\\n          setSearchRfpId(value);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.ViewProposalModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst isEdit = props.isEdit;\\\\\\\\nconst proposalId = props.proposalId;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.9);\\\\\\\\n  opacity: 0.9;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 30%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">\\\\\\\\n            Your Proposal has been successfully{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            {!isEdit ? \\\\\\\\\\\\\\\"published\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"edited\\\\\\\\\\\\\\\"}.\\\\\\\\n          </h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-center mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={linkHref({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\", id: proposalId },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-blue\\\\\\\\\\\\\\\" },\\\\\\\\n                label: \\\\\\\\\\\\\\\"View Proposal\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: () => {},\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedProposalsDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst linkedProposals = props.linkedProposals;\\\\\\\\nconst onChange = props.onChange;\\\\\\\\nconst [selectedProposals, setSelectedProposals] = useState(linkedProposals);\\\\\\\\nconst [proposalsOptions, setProposalsOptions] = useState([]);\\\\\\\\nconst [searchProposalId, setSearchProposalId] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst queryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n${queryName}(\\\\\\\\n  offset: $offset\\\\\\\\n  limit: $limit\\\\\\\\n  order_by: {proposal_id: desc}\\\\\\\\n  where: $where\\\\\\\\n) {\\\\\\\\n  name\\\\\\\\n  proposal_id\\\\\\\\n}\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(linkedProposals) !== JSON.stringify(selectedProposals)) {\\\\\\\\n    setSelectedProposals(linkedProposals);\\\\\\\\n  }\\\\\\\\n}, [linkedProposals]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(linkedProposals) !== JSON.stringify(selectedProposals)) {\\\\\\\\n    onChange(selectedProposals);\\\\\\\\n  }\\\\\\\\n}, [selectedProposals]);\\\\\\\\n\\\\\\\\nfunction separateNumberAndText(str) {\\\\\\\\n  const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n  if (numberRegex.test(str)) {\\\\\\\\n    const number = str.match(numberRegex)[0];\\\\\\\\n    const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n    return { number: parseInt(number), text };\\\\\\\\n  } else {\\\\\\\\n    return { number: null, text: str.trim() };\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst buildWhereClause = () => {\\\\\\\\n  let where = {};\\\\\\\\n  const { number, text } = separateNumberAndText(searchProposalId);\\\\\\\\n\\\\\\\\n  if (number) {\\\\\\\\n    where = { proposal_id: { _eq: number }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (text) {\\\\\\\\n    where = { name: { _ilike: `%${text}%` }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return where;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst fetchProposals = () => {\\\\\\\\n  const FETCH_LIMIT = 30;\\\\\\\\n  const variables = {\\\\\\\\n    limit: FETCH_LIMIT,\\\\\\\\n    offset: 0,\\\\\\\\n    where: buildWhereClause(),\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const proposalsData = result.body.data?.[queryName];\\\\\\\\n        const data = [];\\\\\\\\n        for (const prop of proposalsData) {\\\\\\\\n          data.push({\\\\\\\\n            label: \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + prop.proposal_id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + prop.name,\\\\\\\\n            value: prop.proposal_id,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n        setProposalsOptions(data);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchProposals();\\\\\\\\n}, [searchProposalId]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {selectedProposals.map((proposal) => {\\\\\\\\n      return (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <a\\\\\\\\n            className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n            href={href({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: {\\\\\\\\n                page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                id: proposal.value,\\\\\\\\n              },\\\\\\\\n            })}\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {proposal.label}\\\\\\\\n          </a>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => {\\\\\\\\n              const updatedLinkedProposals = selectedProposals.filter(\\\\\\\\n                (item) => item.value !== proposal.value\\\\\\\\n              );\\\\\\\\n              setSelectedProposals(updatedLinkedProposals);\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-trash3-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      );\\\\\\\\n    })}\\\\\\\\n\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.DropDownWithSearch`}\\\\\\\\n      props={{\\\\\\\\n        selectedValue: selectedProposals,\\\\\\\\n        onChange: (v) => {\\\\\\\\n          if (!selectedProposals.some((item) => item.value === v.value)) {\\\\\\\\n            setSelectedProposals([...selectedProposals, v]);\\\\\\\\n          }\\\\\\\\n        },\\\\\\\\n        options: proposalsOptions,\\\\\\\\n        showSearch: true,\\\\\\\\n        searchInputPlaceholder: \\\\\\\\\\\\\\\"Search by Id\\\\\\\\\\\\\\\",\\\\\\\\n        defaultLabel: \\\\\\\\\\\\\\\"Search proposals\\\\\\\\\\\\\\\",\\\\\\\\n        searchByValue: true,\\\\\\\\n        onSearch: (value) => {\\\\\\\\n          setSearchProposalId(value);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst {\\\\\\\\n  selected,\\\\\\\\n  onChange,\\\\\\\\n  disabled,\\\\\\\\n  availableOptions,\\\\\\\\n  hideDropdown,\\\\\\\\n  linkedRfp,\\\\\\\\n} = props;\\\\\\\\n\\\\\\\\nconst [selectedOptions, setSelectedOptions] = useState([]);\\\\\\\\nconst [isOpen, setIsOpen] = useState(false);\\\\\\\\nconst [initialStateApplied, setInitialState] = useState(false);\\\\\\\\n\\\\\\\\nconst toggleDropdown = () => {\\\\\\\\n  setIsOpen(!isOpen);\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(selectedOptions) !== JSON.stringify(selected)) {\\\\\\\\n    if (availableOptions.length > 0) {\\\\\\\\n      if ((selected ?? []).some((i) => !i.value)) {\\\\\\\\n        setSelectedOptions(\\\\\\\\n          selected.map((i) => availableOptions.find((t) => t.value === i))\\\\\\\\n        );\\\\\\\\n      } else {\\\\\\\\n        setSelectedOptions(selected);\\\\\\\\n      }\\\\\\\\n      setInitialState(true);\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    setInitialState(true);\\\\\\\\n  }\\\\\\\\n}, [selected, availableOptions]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    JSON.stringify(selectedOptions) !== JSON.stringify(selected) &&\\\\\\\\n    initialStateApplied\\\\\\\\n  ) {\\\\\\\\n    onChange(selectedOptions);\\\\\\\\n  }\\\\\\\\n}, [selectedOptions, initialStateApplied]);\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .drop-btn {\\\\\\\\n    width: 100%;\\\\\\\\n    text-align: left;\\\\\\\\n    padding-inline: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 2%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item.active,\\\\\\\\n  .dropdown-item:active {\\\\\\\\n    background-color: #f0f0f0 !important;\\\\\\\\n    color: black;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f8f8f8 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    border-radius: 5px;\\\\\\\\n    opacity: inherit !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled.dropdown-toggle::after {\\\\\\\\n    display: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst handleOptionClick = (option) => {\\\\\\\\n  if (!selectedOptions.some((item) => item.value === option.value)) {\\\\\\\\n    setSelectedOptions([...selectedOptions, option]);\\\\\\\\n  }\\\\\\\\n  setIsOpen(false);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Item = ({ option }) => {\\\\\\\\n  return <div> {option.title}</div>;\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      {(selectedOptions ?? []).map((option) => {\\\\\\\\n        return (\\\\\\\\n          <div\\\\\\\\n            style={{\\\\\\\\n              color: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n              backgroundColor: `rgb(${option.color})`,\\\\\\\\n              width: \\\\\\\\\\\\\\\"max-content\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n            className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center badge rounded-lg p-2 h6 mb-0\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {option.title}\\\\\\\\n            {!disabled && (\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n                onClick={() => {\\\\\\\\n                  const updatedOptions = selectedOptions.filter(\\\\\\\\n                    (item) => item.value !== option.value\\\\\\\\n                  );\\\\\\\\n                  setSelectedOptions(updatedOptions);\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <i className=\\\\\\\\\\\\\\\"bi bi-trash3-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </div>\\\\\\\\n        );\\\\\\\\n      })}\\\\\\\\n    </div>\\\\\\\\n    {!hideDropdown && (\\\\\\\\n      <Container>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"custom-select w-100\\\\\\\\\\\\\\\"\\\\\\\\n          tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n          onBlur={() => setIsOpen(false)}\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"dropdown-toggle bg-white border rounded-2 btn drop-btn w-100 \\\\\\\\\\\\\\\" +\\\\\\\\n              (disabled ? \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n            onClick={!disabled && toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <div className={`selected-option`}>\\\\\\\\n              {linkedRfp ? (\\\\\\\\n                <span className=\\\\\\\\\\\\\\\"text-sm d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                  <i class=\\\\\\\\\\\\\\\"bi bi-lock-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  These categories match the chosen RFP and cannot be changed.\\\\\\\\n                  To use different categories, unlink the RFP.\\\\\\\\n                </span>\\\\\\\\n              ) : (\\\\\\\\n                <span>Select Category </span>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n\\\\\\\\n          {isOpen && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"dropdown-menu rounded-2 dropdown-menu-end dropdown-menu-lg-start px-2 shadow show w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div>\\\\\\\\n                {(availableOptions ?? []).map((option) => (\\\\\\\\n                  <div\\\\\\\\n                    key={option.value}\\\\\\\\n                    className={`dropdown-item cursor-pointer w-100 my-1 ${\\\\\\\\n                      (selectedOptions ?? []).find(\\\\\\\\n                        (item) => item.value === option.value\\\\\\\\n                      )\\\\\\\\n                        ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\"\\\\\\\\n                        : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                    }`}\\\\\\\\n                    onClick={() => handleOptionClick(option)}\\\\\\\\n                  >\\\\\\\\n                    <Item option={option} />\\\\\\\\n                  </div>\\\\\\\\n                ))}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Container>\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 9.9390028297364e+21
    }
  },
  {
    "id": "5385040208",
    "receipt_id": "AGU7S5yd3gLKidpDyenJsoj6b5CwtaVFQZMU6uoUJDjX",
    "predecessor_account_id": "system",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EDapBdJHZJ27rbSUkvz6WmCAZmf4khackwPg6zS845Ku",
      "block_height": 120426456,
      "block_timestamp": 1717512158418376400
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "DiDisvqx4ep76zC7A39C16g8JZJD8prniXTweDaSWP79",
    "included_in_block_hash": "CboBXvTP8YhaHTdj3bT23sDMonfyZ6uyGiS9VqaFfrSS",
    "block_timestamp": "1717512155799313999",
    "block": {
      "block_height": 120426454
    },
    "receipt_conversion_tokens_burnt": "119926701745600000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.7880508943819237e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 9.9390028297364e+21
    }
  },
  {
    "id": "5385194855",
    "receipt_id": "AvpauXTq275ZNKPJung6pHtYXuY4ox8UNRUhtNSMZfRm",
    "predecessor_account_id": "trechriron71.near",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "BznPeEfdh3LQQ1XuLeytxVKw9JsNs7Yy6y7UuMkXQyh",
      "block_height": 120426907,
      "block_timestamp": 1717512682846279200
    },
    "receipt_outcome": {
      "gas_burnt": 5482122655006,
      "tokens_burnt": 548212265500600000000,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "23CzHDamEhvPatTdod573zxxEQxRBY1zjHmJbvNT6V2v",
    "included_in_block_hash": "Bt7DmVSzhXgm9FuyTmchv21Lr6JNTJ4m3XthtepJhMRz",
    "block_timestamp": "1717512681738663518",
    "block": {
      "block_height": 120426906
    },
    "receipt_conversion_tokens_burnt": "50949496962800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_member",
        "deposit": 0,
        "fee": 548212265500600000000,
        "args": "{\"member\": \"woben.near\", \"metadata\": {\"parents\": [], \"children\": [], \"description\": \"The moderator group has permissions to create and edit RFPs, edit and manage proposals, and manage admins.\", \"permissions\": {}, \"member_metadata_version\": \"V0\"}}"
      },
      {
        "action": "FUNCTION_CALL",
        "method": "edit_member",
        "deposit": 0,
        "fee": 548212265500600000000,
        "args": "{\"member\": \"team:moderators\", \"metadata\": {\"parents\": [], \"children\": [\"pivortex.near\", \"polyprogrammist.near\", \"petersalomonsen.near\", \"trechriron71.near\", \"flmel.near\", \"megha19.near\", \"frol.near\", \"theori.near\", \"woben.near\"], \"description\": \"The moderator group has permissions to create and edit RFPs, edit and manage proposals, and manage admins.\", \"permissions\": {}, \"member_metadata_version\": \"V0\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 599161762463400000000
    }
  },
  {
    "id": "5385330519",
    "receipt_id": "8P6Kx2iJckP7ifXqVbnNrH4k1ZP3jzTaVxWVHqeX7H4a",
    "predecessor_account_id": "infrastructure-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "CoFnJe4LCYGbRECyFfzwe8FbDgjUZBfV5sBtnm1ZfY2n",
      "block_height": 120427270,
      "block_timestamp": 1717513104995287800
    },
    "receipt_outcome": {
      "gas_burnt": 98880867674780,
      "tokens_burnt": 9.888086767478e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "GLJ6W9Q5VeQJtZrK6x7uVFcfRNac8RJPaGGAy3WK2Hdv",
    "included_in_block_hash": "9VKE2Yxgt8YrzgFiwrUfuTCVP6FJ3KLnTvAxabn3ZqJK",
    "block_timestamp": "1717513104103503876",
    "block": {
      "block_height": 120427269
    },
    "receipt_conversion_tokens_burnt": "119979916974800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 9.888086767478e+21,
        "args": "{\"data\": {\"infrastructure-committee.near\": {\"widget\": {\"includes.common\": {\"\": \"const REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.Rfp\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`) || {\\\\\\\\n  href: () => {},\\\\\\\\n};\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst accountId = context.accountId;\\\\\\\\n/*\\\\\\\\n  ---props---\\\\\\\\n  props.id: number;\\\\\\\\n  props.timestamp: number; optional\\\\\\\\n  accountId: string\\\\\\\\n  blockHeight:number\\\\\\\\n  */\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .description-box {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .accept-submission-info-container {\\\\\\\\n    background-color: #ecf8fb;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-3 {\\\\\\\\n    flex: 3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 20px;\\\\\\\\n    height: 20px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 180px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 135px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 180px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 75px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line-sm {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 70px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:disabled ~ .form-check-label,\\\\\\\\n  .form-check-input[disabled] ~ .form-check-label {\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input {\\\\\\\\n    border-color: black !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-btn {\\\\\\\\n    background-color: #687076;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-btn {\\\\\\\\n    background-color: #3c697d;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #3c697d !important;\\\\\\\\n    border-color: #3c697d !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-vertical {\\\\\\\\n    border-top: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n    border-bottom: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  button.px-0 {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  red-icon i {\\\\\\\\n    color: red;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  input[type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"] {\\\\\\\\n    min-width: 13px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst RfpContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Text = styled.p`\\\\\\\\n  display: block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 20px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  white-space: nowrap;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 12px;\\\\\\\\n  margin: -6px -6px 6px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst LinkProfile = ({ account, children }) => {\\\\\\\\n  return (\\\\\\\\n    <Link href={`/near/widget/ProfilePage?accountId=${account}`}>\\\\\\\\n      {children}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [snapshotHistory, setSnapshotHistory] = useState([]);\\\\\\\\n\\\\\\\\nconst rfp = Near.view(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n  rfp_id: parseInt(id),\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst queryName = RFP_INDEXER_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n  ${queryName}(\\\\\\\\n    offset: $offset\\\\\\\\n    limit: $limit\\\\\\\\n    order_by: {ts: asc}\\\\\\\\n    where: $where\\\\\\\\n  ) {\\\\\\\\n    editor_id\\\\\\\\n    name\\\\\\\\n    summary\\\\\\\\n    description\\\\\\\\n    ts\\\\\\\\n    rfp_id\\\\\\\\n    timeline\\\\\\\\n    labels\\\\\\\\n    submission_deadline\\\\\\\\n    linked_proposals\\\\\\\\n  }\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst fetchSnapshotHistory = () => {\\\\\\\\n  const variables = {\\\\\\\\n    where: { rfp_id: { _eq: id } },\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const data = result.body.data?.[queryName];\\\\\\\\n        const history = data.map((item) => {\\\\\\\\n          const rfpData = {\\\\\\\\n            ...item,\\\\\\\\n            timestamp: item.ts,\\\\\\\\n            timeline: parseJSON(item.timeline),\\\\\\\\n          };\\\\\\\\n          delete rfpData.ts;\\\\\\\\n          return rfpData;\\\\\\\\n        });\\\\\\\\n        setSnapshotHistory(history);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchSnapshotHistory();\\\\\\\\n}, [id]);\\\\\\\\n\\\\\\\\nif (!rfp) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nif (timestamp && rfp) {\\\\\\\\n  rfp.snapshot =\\\\\\\\n    snapshotHistory.find((item) => item.timestamp === timestamp) ??\\\\\\\\n    rfp.snapshot;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { snapshot } = rfp;\\\\\\\\nsnapshot.timeline = parseJSON(snapshot.timeline);\\\\\\\\n\\\\\\\\nconst authorId = rfp.author_id;\\\\\\\\nconst blockHeight = parseInt(rfp.social_db_post_block_height);\\\\\\\\nconst item = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n  path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n  blockHeight,\\\\\\\\n};\\\\\\\\nconst rfpURL = getLinkUsingCurrentGateway(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=rfp&id=${rfp.id}&timestamp=${snapshot.timestamp}`\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SidePanelItem = ({ title, children, hideBorder, ishidden }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ gap: \\\\\\\\\\\\\\\"8px\\\\\\\\\\\\\\\" }}\\\\\\\\n      className={\\\\\\\\n        ishidden\\\\\\\\n          ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"d-flex flex-column pb-3 \\\\\\\\\\\\\\\" + (!hideBorder && \\\\\\\\\\\\\\\" border-bottom\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{title} </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isAllowedToWriteRfp = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst link = href({\\\\\\\\n  widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n  params: {\\\\\\\\n    page: \\\\\\\\\\\\\\\"create-rfp\\\\\\\\\\\\\\\",\\\\\\\\n    id: rfp.id,\\\\\\\\n    timestamp: timestamp,\\\\\\\\n  },\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst createdDate = snapshotHistory[0].timestamp ?? snapshot.timestamp;\\\\\\\\n\\\\\\\\nconst [approvedProposals, setApprovedProposals] = useState([]);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\nconst [isWarningModalOpen, setWarningModal] = useState(false);\\\\\\\\nconst [timeline, setTimeline] = useState(null);\\\\\\\\nconst [showTimelineSetting, setShowTimelineSetting] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (!timeline) {\\\\\\\\n    setTimeline(snapshot.timeline);\\\\\\\\n  }\\\\\\\\n}, [snapshot]);\\\\\\\\n\\\\\\\\nfunction fetchApprovedRfpProposals() {\\\\\\\\n  const queryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      proposal_id\\\\\\\\n      name\\\\\\\\n      timeline\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  const FETCH_LIMIT = 50;\\\\\\\\n  const variables = {\\\\\\\\n    limit: FETCH_LIMIT,\\\\\\\\n    offset,\\\\\\\\n    where: {\\\\\\\\n      proposal_id: { _in: rfp.snapshot.linked_proposals },\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const data = result.body.data?.[queryName];\\\\\\\\n        const approved = [];\\\\\\\\n        data.map((item) => {\\\\\\\\n          const timeline = parseJSON(item.timeline);\\\\\\\\n          if (PROPOSALS_APPROVED_STATUS_ARRAY.includes(timeline.status)) {\\\\\\\\n            approved.push(item);\\\\\\\\n          }\\\\\\\\n        });\\\\\\\\n        setApprovedProposals(approved);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst editRFPStatus = () => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_rfp_timeline\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: rfp.id,\\\\\\\\n        timeline: timeline,\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\nconsole.log({ rfp });\\\\\\\\nconst onCancelRFP = (value) => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"cancel_rfp\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: rfp.id,\\\\\\\\n        proposals_to_cancel:\\\\\\\\n          value === CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS\\\\\\\\n            ? snapshot.linked_proposals\\\\\\\\n            : [],\\\\\\\\n        proposals_to_unlink:\\\\\\\\n          value === CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS\\\\\\\\n            ? snapshot.linked_proposals\\\\\\\\n            : [],\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst accessControlInfo =\\\\\\\\n  Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_access_control_info\\\\\\\\\\\\\\\"\\\\\\\\n  ) ?? null;\\\\\\\\nconst moderatorList =\\\\\\\\n  accessControlInfo?.members_list?.[\\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\"]?.children;\\\\\\\\n\\\\\\\\nfetchApprovedRfpProposals();\\\\\\\\n\\\\\\\\nconst SubmitProposalBtn = () => {\\\\\\\\n  return (\\\\\\\\n    <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <Link\\\\\\\\n        to={href({\\\\\\\\n          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n          params: { page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\", rfp_id: rfp.id },\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n          props={{\\\\\\\\n            label: (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle\\\\\\\\\\\\\\\"></i>Submit Proposal\\\\\\\\n              </div>\\\\\\\\n            ),\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"blue-btn\\\\\\\\\\\\\\\" },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </Link>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n        onConfirmClick: (value) => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onCancelRFP(value);\\\\\\\\n        },\\\\\\\\n        linkedProposalIds: snapshot.linked_proposals,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.WarningModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isWarningModalOpen,\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setWarningModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex px-3 px-lg-0 justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center h3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>{snapshot.name}</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">#{rfp.id}</div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_NEAR}/widget/ShareButton`}\\\\\\\\n          props={{\\\\\\\\n            postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            url: rfpURL,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        {isAllowedToWriteRfp && (\\\\\\\\n          <Link to={link} style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap flex-md-nowrap px-3 px-lg-0 gap-2 align-items-center text-sm pb-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n        props={{\\\\\\\\n          timelineStatus: snapshot.timeline.status,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"w-100 d-flex flex-wrap flex-md-nowrap gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n          <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n        </div>\\\\\\\\n        <div>created on {readableDate(createdDate / 1000000)}</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 full-width-div px-3 px-lg-0\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4\\\\\\\\\\\\\\\">\\\\\\\\n        {snapshot.timeline.status ===\\\\\\\\n          RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"accept-submission-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n              <b>This RFP is accepting submissions.</b>\\\\\\\\n              <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                Click Submit Proposal if you want to submit a proposal.\\\\\\\\n              </p>\\\\\\\\n            </div>\\\\\\\\n            <SubmitProposalBtn />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"my-4\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-6\\\\\\\\\\\\\\\">\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"flex-3 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                  <img src={RFP_IMAGE} height={35} width={35} />\\\\\\\\n                </div>\\\\\\\\n                <RfpContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Header className=\\\\\\\\\\\\\\\"d-flex gap-1 align-items-center p-2 px-3 \\\\\\\\\\\\\\\">\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ maxWidth: \\\\\\\\\\\\\\\"60%\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n                    </div>\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                        props={{\\\\\\\\n                          blockHeight,\\\\\\\\n                          blockTimestamp: createdDate,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      {context.accountId && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                          <Widget\\\\\\\\n                            src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                            props={{\\\\\\\\n                              accountId: authorId,\\\\\\\\n                              blockHeight: blockHeight,\\\\\\\\n                            }}\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </Header>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 p-2 px-3 description-box\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      RFP CATEGORY\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                          props={{\\\\\\\\n                            selected: snapshot.labels,\\\\\\\\n                            disabled: true,\\\\\\\\n                            hideDropdown: true,\\\\\\\\n                            onChange: () => {},\\\\\\\\n                            availableOptions: rfpLabelOptions,\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      SUMMARY\\\\\\\\n                    </div>\\\\\\\\n                    <div>{snapshot.summary}</div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n                      DESCRIPTION\\\\\\\\n                    </div>\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n                      props={{ text: snapshot.description }}\\\\\\\\n                    />\\\\\\\\n\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LikeButton`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          rfpId: rfp.id,\\\\\\\\n                          notifyAccountIds: moderatorList,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          showOverlay: false,\\\\\\\\n                          onClick: () => {},\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                        props={{\\\\\\\\n                          url: rfpURL,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                </RfpContainer>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.CommentsAndLogs`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    id: rfp.id,\\\\\\\\n                    item: item,\\\\\\\\n                    approvedProposals: approvedProposals,\\\\\\\\n                    snapshotHistory: snapshotHistory,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div\\\\\\\\n                style={{\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                className=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.ComposeComment`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    item: item,\\\\\\\\n                    notifyAccountIds: moderatorList,\\\\\\\\n                    rfpId: rfp.id,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                {snapshot.timeline.status ===\\\\\\\\n                  RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS && (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"accept-submission-info-container mt-3 p-3 p-sm-4 d-flex flex-wrap flex-md-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <div style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                      <b>Want to respond to this RFP? </b> This RFP is accepting\\\\\\\\n                      submissions.\\\\\\\\n                    </div>\\\\\\\\n                    <SubmitProposalBtn />\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 flex-1 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Submission Deadline\\\\\\\\\\\\\\\">\\\\\\\\n                <h5 className=\\\\\\\\\\\\\\\"text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {readableDate(\\\\\\\\n                    parseFloat(snapshot.submission_deadline / 1000000)\\\\\\\\n                  )}\\\\\\\\n                </h5>\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  <div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Timeline\\\\\\\\n                      {isAllowedToWriteRfp && (\\\\\\\\n                        <div\\\\\\\\n                          data-testid=\\\\\\\\\\\\\\\"setting-btn\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={() => setShowTimelineSetting(true)}\\\\\\\\n                        >\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.TimelineConfigurator`}\\\\\\\\n                  props={{\\\\\\\\n                    timeline: timeline,\\\\\\\\n                    setTimeline: (v) => {\\\\\\\\n                      if (\\\\\\\\n                        snapshot.timeline.status === v.status &&\\\\\\\\n                        timeline.status === v.status\\\\\\\\n                      ) {\\\\\\\\n                        return;\\\\\\\\n                      }\\\\\\\\n                      // if proposal selected timeline is selected and no approved proposals exist, show warning\\\\\\\\n                      if (\\\\\\\\n                        v.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED &&\\\\\\\\n                        Array.isArray(approvedProposals) &&\\\\\\\\n                        !approvedProposals.length\\\\\\\\n                      ) {\\\\\\\\n                        setWarningModal(true);\\\\\\\\n                      }\\\\\\\\n\\\\\\\\n                      if (v.status === RFP_TIMELINE_STATUS.CANCELLED) {\\\\\\\\n                        setCancelModal(true);\\\\\\\\n                      }\\\\\\\\n                      setTimeline(v);\\\\\\\\n                    },\\\\\\\\n                    disabled: showTimelineSetting ? false : true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                {showTimelineSetting && (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end text-sm mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"btn-outline-danger border-0 shadow-none btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        onClick: () => {\\\\\\\\n                          setShowTimelineSetting(false);\\\\\\\\n                          setTimeline(snapshot.timeline);\\\\\\\\n                        },\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                        classNames: { root: \\\\\\\\\\\\\\\"blue-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                        onClick: () => {\\\\\\\\n                          editRFPStatus();\\\\\\\\n                          setShowTimelineSetting(false);\\\\\\\\n                        },\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"Selected Proposal\\\\\\\\\\\\\\\" + \\\\\\\\\\\\\\\" (\\\\\\\\\\\\\\\" + approvedProposals.length + \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                ishidden={!approvedProposals.length}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedProposalIds: (approvedProposals ?? []).map(\\\\\\\\n                      (i) => i.proposal_id\\\\\\\\n                    ),\\\\\\\\n                    showStatus: false,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"All Proposals\\\\\\\\\\\\\\\" +\\\\\\\\n                  \\\\\\\\\\\\\\\" (\\\\\\\\\\\\\\\" +\\\\\\\\n                  snapshot.linked_proposals.length +\\\\\\\\n                  \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                ishidden={!snapshot.linked_proposals.length}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedProposalIds: snapshot.linked_proposals,\\\\\\\\n                    showStatus:\\\\\\\\n                      snapshot.timeline.status !==\\\\\\\\n                      RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.pages.app\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * This is the main entry point for the RFP application.\\\\\\\\n * Page route gets passed in through params, along with all other page props.\\\\\\\\n */\\\\\\\\n\\\\\\\\nconst { page, ...passProps } = props;\\\\\\\\n\\\\\\\\n// Import our modules\\\\\\\\nconst { AppLayout } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.template.AppLayout`\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!AppLayout) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\n// CSS styles to be used across the app.\\\\\\\\n// Define fonts here, as well as any other global styles.\\\\\\\\nconst Theme = styled.div`\\\\\\\\n  a {\\\\\\\\n    color: inherit;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .attractable {\\\\\\\\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\\\\\\\\n    transition: box-shadow 0.6s;\\\\\\\\n\\\\\\\\n    &:hover {\\\\\\\\n      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (!page) {\\\\\\\\n  // If no page is specified, we default to the feed page TEMP\\\\\\\\n  page = \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\n// This is our navigation, rendering the page based on the page parameter\\\\\\\\nfunction Page() {\\\\\\\\n  const routes = page.split(\\\\\\\\\\\\\\\".\\\\\\\\\\\\\\\");\\\\\\\\n  switch (routes[0]) {\\\\\\\\n    case \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.about`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"rfps\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.Feed`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.Rfp`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"create-rfp\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.Editor`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.Editor`}\\\\\\\\n          props={{ ...passProps }}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    case \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.Feed`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.Proposal`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.about`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"admin\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.admin`}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    default: {\\\\\\\\n      // TODO: 404 page\\\\\\\\n      return <p>404</p>;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Theme>\\\\\\\\n    <AppLayout page={page}>\\\\\\\\n      <Page />\\\\\\\\n    </AppLayout>\\\\\\\\n  </Theme>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.Feed\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .rfp-card {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    border-bottom: none !important;\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-btn {\\\\\\\\n    background-color: #3c697d !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background: #e2e6ec;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .blue-btn {\\\\\\\\n      padding: 0.5rem 0.8rem !important;\\\\\\\\n      min-height: 32px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n  .fw-semi-bold {\\\\\\\\n    font-weight: 500;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  .text-normal {\\\\\\\\n    font-weight: normal !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst FeedItem = ({ rfp, index }) => {\\\\\\\\n  const accountId = rfp.author_id;\\\\\\\\n  const profile = Social.get(`${accountId}/profile/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\n  // We will have to get the rfp from the contract to get the block height.\\\\\\\\n  const blockHeight = parseInt(rfp.social_db_post_block_height);\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n    blockHeight: blockHeight,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n          id: rfp.rfp_id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      onClick={(e) => e.stopPropagation()}\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\n          \\\\\\\\\\\\\\\"rfp-card d-flex justify-content-between gap-2 text-muted cursor-pointer p-3 w-100 flex-wrap flex-sm-nowrap \\\\\\\\\\\\\\\" +\\\\\\\\n          (index !== 0 && \\\\\\\\\\\\\\\" border\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <img src={RFP_IMAGE} height={35} width={35} />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"h6 mb-0 text-black\\\\\\\\\\\\\\\">{rfp.name}</div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                props={{\\\\\\\\n                  selected: rfp.labels,\\\\\\\\n                  disabled: true,\\\\\\\\n                  hideDropdown: true,\\\\\\\\n                  onChange: () => {},\\\\\\\\n                  availableOptions: rfpLabelOptions,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap flex-sm-nowrap text-sm w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div>#{rfp.rfp_id} \\\\\\\\u{ff65} Created</div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight,\\\\\\\\n                  blockTimestamp: rfp.timestamp,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-4 flex-wrap flex-sm-nowrap text-sm w-100 text-muted my-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{ maxWidth: \\\\\\\\\\\\\\\"70%\\\\\\\\\\\\\\\" }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"fw-semi-bold\\\\\\\\\\\\\\\">Summay</div>\\\\\\\\n\\\\\\\\n                <div>{rfp.summary}</div>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ width: \\\\\\\\\\\\\\\"1px\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"bg-grey\\\\\\\\\\\\\\\"></div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"fw-semi-bold\\\\\\\\\\\\\\\">Submission Deadline</div>\\\\\\\\n                <h6 className=\\\\\\\\\\\\\\\"mb-0 text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {readableDate(rfp.submission_deadline / 1000000)}\\\\\\\\n                </h6>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center text-sm\\\\\\\\\\\\\\\">\\\\\\\\n              <div>\\\\\\\\n                <img\\\\\\\\n                  src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreif4p376f3qvpb2ewwsmi6fkcm3jalhuuzuxbgvehgl552agqw47ju\\\\\\\\\\\\\\\"\\\\\\\\n                  height={30}\\\\\\\\n                  width={30}\\\\\\\\n                />\\\\\\\\n                {rfp.linked_proposals.length ?? 0}\\\\\\\\n                proposals\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                  props={{\\\\\\\\n                    item,\\\\\\\\n                    showOverlay: false,\\\\\\\\n                    onClick: () => {},\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                comments\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"align-self-center\\\\\\\\\\\\\\\" style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n            props={{\\\\\\\\n              timelineStatus: rfp.timeline.status,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getRfp = (rfp_id) => {\\\\\\\\n  return Near.asyncView(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n    rfp_id,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FeedPage = () => {\\\\\\\\n  State.init({\\\\\\\\n    data: [],\\\\\\\\n    cachedItems: {},\\\\\\\\n    stage: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    sort: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    label: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    input: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    loading: false,\\\\\\\\n    loadingMore: false,\\\\\\\\n    aggregatedCount: null,\\\\\\\\n    currentlyDisplaying: 0,\\\\\\\\n    isFiltered: false,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  const queryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {rfp_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      author_id\\\\\\\\n      block_height\\\\\\\\n      name\\\\\\\\n      summary\\\\\\\\n      editor_id\\\\\\\\n      rfp_id\\\\\\\\n      timeline\\\\\\\\n      views\\\\\\\\n      labels\\\\\\\\n      submission_deadline\\\\\\\\n      linked_proposals\\\\\\\\n    }\\\\\\\\n    ${queryName}_aggregate(\\\\\\\\n      order_by: {rfp_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    )  {\\\\\\\\n      aggregate {\\\\\\\\n        count\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  function separateNumberAndText(str) {\\\\\\\\n    const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n    if (numberRegex.test(str)) {\\\\\\\\n      const number = str.match(numberRegex)[0];\\\\\\\\n      const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n      return { number: parseInt(number), text };\\\\\\\\n    } else {\\\\\\\\n      return { number: null, text: str.trim() };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const buildWhereClause = () => {\\\\\\\\n    let where = {};\\\\\\\\n\\\\\\\\n    if (state.label) {\\\\\\\\n      where = { labels: { _contains: state.label }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.stage) {\\\\\\\\n      // timeline is stored as jsonb\\\\\\\\n      where = {\\\\\\\\n        timeline: { _cast: { String: { _regex: `${state.stage}` } } },\\\\\\\\n        ...where,\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n    if (state.input) {\\\\\\\\n      const { number, text } = separateNumberAndText(state.input);\\\\\\\\n      if (number) {\\\\\\\\n        where = { rfp_id: { _eq: number }, ...where };\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      if (text) {\\\\\\\\n        where = {\\\\\\\\n          _or: [\\\\\\\\n            { name: { _iregex: `${text}` } },\\\\\\\\n            { summary: { _iregex: `${text}` } },\\\\\\\\n            { description: { _iregex: `${text}` } },\\\\\\\\n          ],\\\\\\\\n          ...where,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    State.update({ isFiltered: Object.keys(where).length > 0 });\\\\\\\\n    return where;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const buildOrderByClause = () => {\\\\\\\\n    /**\\\\\\\\n     * TODO\\\\\\\\n     * Most commented -> edit contract and indexer\\\\\\\\n     * Unanswered -> 0 comments\\\\\\\\n     */\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const makeMoreItems = () => {\\\\\\\\n    if (state.aggregatedCount <= state.currentlyDisplaying) return;\\\\\\\\n    fetchRfps(state.data.length);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchRfps = (offset) => {\\\\\\\\n    if (!offset) {\\\\\\\\n      offset = 0;\\\\\\\\n    }\\\\\\\\n    if (state.loading) return;\\\\\\\\n    const FETCH_LIMIT = 10;\\\\\\\\n    const variables = {\\\\\\\\n      limit: FETCH_LIMIT,\\\\\\\\n      offset,\\\\\\\\n      where: buildWhereClause(),\\\\\\\\n    };\\\\\\\\n    fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n      if (result.status === 200) {\\\\\\\\n        if (result.body.data) {\\\\\\\\n          const data = result.body.data?.[queryName];\\\\\\\\n          const totalResult = result.body.data?.[`${queryName}_aggregate`];\\\\\\\\n          State.update({ aggregatedCount: totalResult.aggregate.count });\\\\\\\\n          // Parse timeline\\\\\\\\n          fetchBlockHeights(data, offset);\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const renderItem = (item, index) => (\\\\\\\\n    <div\\\\\\\\n      key={item.rfp_id}\\\\\\\\n      className={\\\\\\\\n        (index !== state.data.length - 1 && \\\\\\\\\\\\\\\"border-bottom \\\\\\\\\\\\\\\") + index === 0 &&\\\\\\\\n        \\\\\\\\\\\\\\\" rounded-top-2 rfp-item-container\\\\\\\\\\\\\\\"\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <FeedItem rfp={item} index={index} />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n  const cachedRenderItem = (item, index) => {\\\\\\\\n    if (props.term) {\\\\\\\\n      return renderItem(item, {\\\\\\\\n        searchKeywords: [props.term],\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    const key = JSON.stringify(item);\\\\\\\\n\\\\\\\\n    if (!(key in state.cachedItems)) {\\\\\\\\n      state.cachedItems[key] = renderItem(item, index);\\\\\\\\n      State.update();\\\\\\\\n    }\\\\\\\\n    return state.cachedItems[key];\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    fetchRfps();\\\\\\\\n  }, [state.input, state.sort, state.label, state.stage]);\\\\\\\\n\\\\\\\\n  const mergeItems = (newItems) => {\\\\\\\\n    const items = [\\\\\\\\n      ...new Set([...newItems, ...state.data].map((i) => JSON.stringify(i))),\\\\\\\\n    ].map((i) => JSON.parse(i));\\\\\\\\n    // Sorting in the front end\\\\\\\\n    if (state.sort === \\\\\\\\\\\\\\\"rfp_id\\\\\\\\\\\\\\\" || state.sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.rfp_id - a.rfp_id);\\\\\\\\n    } else if (state.sort === \\\\\\\\\\\\\\\"views\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.views - a.views);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return items;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchBlockHeights = (data, offset) => {\\\\\\\\n    let promises = data.map((item) => getRfp(item.rfp_id));\\\\\\\\n    Promise.all(promises).then((blockHeights) => {\\\\\\\\n      data = data.map((item, index) => ({\\\\\\\\n        ...item,\\\\\\\\n        timeline: JSON.parse(item.timeline),\\\\\\\\n        social_db_post_block_height:\\\\\\\\n          blockHeights[index].social_db_post_block_height,\\\\\\\\n      }));\\\\\\\\n      if (offset) {\\\\\\\\n        let newData = mergeItems(data);\\\\\\\\n        State.update({\\\\\\\\n          data: newData,\\\\\\\\n          currentlyDisplaying: newData.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      } else {\\\\\\\\n        State.update({\\\\\\\\n          data,\\\\\\\\n          currentlyDisplaying: data.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const loader = (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const renderedItems = state.data ? state.data.map(cachedRenderItem) : null;\\\\\\\\n\\\\\\\\n  const isAllowedToWriteRfp = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      editor: context.accountId,\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between flex-wrap gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Heading>\\\\\\\\n          RFPs\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"text-muted text-normal\\\\\\\\\\\\\\\">\\\\\\\\n            ({state.aggregatedCount ?? state.data.length}){\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          </span>\\\\\\\\n        </Heading>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-input`}\\\\\\\\n            props={{\\\\\\\\n              search: state.input,\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-xs-100\\\\\\\\\\\\\\\",\\\\\\\\n              onSearch: (input) => {\\\\\\\\n                State.update({ input });\\\\\\\\n                fetchRfps();\\\\\\\\n              },\\\\\\\\n              onEnter: () => {\\\\\\\\n                fetchRfps();\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-sort`}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ sort: select.value });\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.FilterByLabel`}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ label: select.value });\\\\\\\\n              },\\\\\\\\n              availableOptions: rfpLabelOptions,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StageDropdown`}\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ stage: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        {isAllowedToWriteRfp && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"mt-2 mt-xs-0\\\\\\\\\\\\\\\">\\\\\\\\n            <Link\\\\\\\\n              to={href({\\\\\\\\n                widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                params: { page: \\\\\\\\\\\\\\\"create-rfp\\\\\\\\\\\\\\\" },\\\\\\\\n              })}\\\\\\\\n            >\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                props={{\\\\\\\\n                  label: (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                      <div>\\\\\\\\n                        <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                      </div>\\\\\\\\n                      Create RFP\\\\\\\\n                    </div>\\\\\\\\n                  ),\\\\\\\\n                  classNames: { root: \\\\\\\\\\\\\\\"blue-btn\\\\\\\\\\\\\\\" },\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </Link>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n      <div style={{ minHeight: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {!Array.isArray(state.data) ? (\\\\\\\\n          loader\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 mt-4 py-3 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"container-xl\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"bg-blue text-sm mt-2 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center mb-0\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    <i className=\\\\\\\\\\\\\\\"bi bi-info-circle\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                  <div>\\\\\\\\n                    <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                      Welcome to the Infrastructure RFP Feed!\\\\\\\\n                    </span>\\\\\\\\n                    This space features request for proposals (RFPs) by the NEAR\\\\\\\\n                    Infrastructure Committee for improving enhancements\\\\\\\\n                    pertaining to wallets, indexers, RPC services, explorers,\\\\\\\\n                    oracles, bridges, NEAR Protocol features, and related\\\\\\\\n                    ecosystem upgrades. You are welcome to respond to any RFPs\\\\\\\\n                    that are accepting submissions or submit an independent\\\\\\\\n                    proposal on the proposals page.\\\\\\\\n                  </div>\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mt-4 border rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                {state.aggregatedCount === 0 ? (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"m-2\\\\\\\\\\\\\\\">\\\\\\\\n                    {state.isFiltered ? (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-danger\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No RFP found for selected filter.\\\\\\\\n                      </div>\\\\\\\\n                    ) : (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-secondary\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No RFP has been created yet.\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                ) : state.aggregatedCount > 0 ? (\\\\\\\\n                  <InfiniteScroll\\\\\\\\n                    pageStart={0}\\\\\\\\n                    loadMore={makeMoreItems}\\\\\\\\n                    hasMore={state.aggregatedCount > state.data.length}\\\\\\\\n                    loader={loader}\\\\\\\\n                    useWindow={false}\\\\\\\\n                    threshold={100}\\\\\\\\n                  >\\\\\\\\n                    {renderedItems}\\\\\\\\n                  </InfiniteScroll>\\\\\\\\n                ) : (\\\\\\\\n                  loader\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn FeedPage(props);\\\\\\\\n\"}, \"near-prpsls-bos.components.pages.admin\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst accessControlInfo =\\\\\\\\n  Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_access_control_info\\\\\\\\\\\\\\\"\\\\\\\\n  ) ?? null;\\\\\\\\n\\\\\\\\nif (!accessControlInfo.members_list) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst rootMembers =\\\\\\\\n  Near.view(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_root_members\\\\\\\\\\\\\\\") ?? null;\\\\\\\\nconst teamNames = Object.keys(rootMembers || {});\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst noPermissionBanner = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"d-flex flex-column justify-content-center align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n    <h2 className=\\\\\\\\\\\\\\\"alert alert-danger p-3 h6\\\\\\\\\\\\\\\">\\\\\\\\n      Your account does not have administration permissions.\\\\\\\\n    </h2>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!isModerator) {\\\\\\\\n  return noPermissionBanner;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction createEditTeam({\\\\\\\\n  teamName,\\\\\\\\n  members,\\\\\\\\n  description,\\\\\\\\n  contractCall, // typescript edit_member || add_member\\\\\\\\n}) {\\\\\\\\n  let txn = [];\\\\\\\\n\\\\\\\\n  const membersAndTeams = Object.keys(accessControlInfo.members_list);\\\\\\\\n  members.forEach((member) => {\\\\\\\\n    // if Contract panic member does not exist in the members_list\\\\\\\\n    if (!membersAndTeams.includes(member)) {\\\\\\\\n      // Add member\\\\\\\\n      txn.push({\\\\\\\\n        contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        methodName: \\\\\\\\\\\\\\\"add_member\\\\\\\\\\\\\\\",\\\\\\\\n        args: {\\\\\\\\n          member: member,\\\\\\\\n          metadata: {\\\\\\\\n            member_metadata_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n            description: description,\\\\\\\\n            permissions: {},\\\\\\\\n            children: [],\\\\\\\\n            parents: [],\\\\\\\\n          },\\\\\\\\n        },\\\\\\\\n        gas: Big(10).pow(14),\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  // Check edit team\\\\\\\\n  Near.call([\\\\\\\\n    ...txn,\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: contractCall, // add_member || edit_member\\\\\\\\n      args: {\\\\\\\\n        member: `team:${teamName}`,\\\\\\\\n        metadata: {\\\\\\\\n          member_metadata_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n          description: description,\\\\\\\\n          permissions: {},\\\\\\\\n          children: members,\\\\\\\\n          parents: [],\\\\\\\\n        },\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  margin: 0 auto;\\\\\\\\n  padding: 20px;\\\\\\\\n  text-align: left;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Tab = styled.button`\\\\\\\\n  color: rgb(0, 236, 151);\\\\\\\\n  &:hover {\\\\\\\\n    color: rgba(0, 236, 151, 0.5);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 p-4\\\\\\\\\\\\\\\">\\\\\\\\n      <ul class=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"myTab\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"tablist\\\\\\\\\\\\\\\">\\\\\\\\n        <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n          <Tab\\\\\\\\n            className=\\\\\\\\\\\\\\\"nav-link active\\\\\\\\\\\\\\\"\\\\\\\\n            id=\\\\\\\\\\\\\\\"profile-tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-target=\\\\\\\\\\\\\\\"#profile\\\\\\\\\\\\\\\"\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            aria-controls=\\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\\"\\\\\\\\n            aria-selected=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            Moderators\\\\\\\\n          </Tab>\\\\\\\\n        </li>\\\\\\\\n      </ul>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"tab-content\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"myTabContent\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          class=\\\\\\\\\\\\\\\"tab-pane fade show active\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\\"\\\\\\\\n          role=\\\\\\\\\\\\\\\"tabpanel\\\\\\\\\\\\\\\"\\\\\\\\n          aria-labelledby=\\\\\\\\\\\\\\\"profile-tab\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.admin.moderatorsTab`}\\\\\\\\n            props={{\\\\\\\\n              accessControlInfo,\\\\\\\\n              createEditTeam,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.Editor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_RFP_EDIT\\\\\\\\\\\\\\\";\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://near.social/devhub.near/widget/app?page=community&handle=developer-dao&tab=funding\\\\\\\\\\\\\\\";\\\\\\\\nconst ToCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst CoCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\nconst isAllowedToWriteRfp = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!author || !isAllowedToWriteRfp) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LoginScreen`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nlet editRfpData = null;\\\\\\\\nlet draftRfpData = null;\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editRfpData = Near.view(\\\\\\\\n    `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}`,\\\\\\\\n    \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      rfp_id: parseInt(id),\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  input {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .h5 {\\\\\\\\n    font-size: 18px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .h6 {\\\\\\\\n      font-size: 14px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .text-sm {\\\\\\\\n      font-size: 11px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-light-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 6px;\\\\\\\\n    height: 6px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 1.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nfunction getTimestamp(date) {\\\\\\\\n  // in nanoseconds\\\\\\\\n  const parsedDate = date ? new Date(date) : new Date();\\\\\\\\n  return Math.floor(parsedDate.getTime() * 1000000).toString();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getDate(timestamp) {\\\\\\\\n  const stamp =\\\\\\\\n    !timestamp || timestamp === \\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\" || timestamp === \\\\\\\\\\\\\\\"NaN\\\\\\\\\\\\\\\" ? null : timestamp;\\\\\\\\n  return new Date(parseFloat(stamp / 1000000)).toISOString().split(\\\\\\\\\\\\\\\"T\\\\\\\\\\\\\\\")[0];\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [labels, setLabels] = useState([]);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [submissionDeadline, setSubmissionDeadline] = useState(null);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\n\\\\\\\\nconst [showRfpViewModal, setShowRfpViewModal] = useState(false); // when user creates/edit a RFP and confirm the txn, this is true\\\\\\\\nconst [rfpId, setRfpId] = useState(null);\\\\\\\\nconst [rfpIdsArray, setRfpIdsArray] = useState(null);\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [oldRfpData, setOldRfpData] = useState(null);\\\\\\\\nconst [timeline, setTimeline] = useState({\\\\\\\\n  status: RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS,\\\\\\\\n});\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftRfpData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editRfpData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      labels: labels,\\\\\\\\n      summary: summary,\\\\\\\\n      submission_deadline: getTimestamp(submissionDeadline),\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [title, summary, description, submissionDeadline, labels]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (allowDraft) {\\\\\\\\n    let data = editRfpData || JSON.parse(draftRfpData);\\\\\\\\n    let snapshot = data.snapshot;\\\\\\\\n    if (data) {\\\\\\\\n      if (timestamp) {\\\\\\\\n        snapshot =\\\\\\\\n          data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n          data.snapshot;\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        draftRfpData &&\\\\\\\\n        editRfpData &&\\\\\\\\n        editRfpData.id === JSON.parse(draftRfpData).id\\\\\\\\n      ) {\\\\\\\\n        snapshot = {\\\\\\\\n          ...editRfpData.snapshot,\\\\\\\\n          ...JSON.parse(draftRfpData).snapshot,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n      setRfpId(data.id);\\\\\\\\n      setLabels(snapshot.labels);\\\\\\\\n      setTitle(snapshot.name);\\\\\\\\n      setSummary(snapshot.summary);\\\\\\\\n      setDescription(snapshot.description);\\\\\\\\n      setSubmissionDeadline(getDate(snapshot.submission_deadline));\\\\\\\\n      setTimeline(parseJSON(snapshot.timeline));\\\\\\\\n      if (isEditPage) {\\\\\\\\n        setConsent({ toc: true, coc: true });\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [editRfpData, draftRfpData, allowDraft]);\\\\\\\\n\\\\\\\\n// show loader until LS data is set in state\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n    setLoading(false);\\\\\\\\n  }, 200);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (showRfpViewModal) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  setDisabledSubmitBtn(\\\\\\\\n    !title ||\\\\\\\\n      !description ||\\\\\\\\n      !summary ||\\\\\\\\n      !(labels ?? []).length ||\\\\\\\\n      !submissionDeadline ||\\\\\\\\n      !consent.toc ||\\\\\\\\n      !consent.coc\\\\\\\\n  );\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 10000);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, [\\\\\\\\n  memoizedDraftData,\\\\\\\\n  draftKey,\\\\\\\\n  draftRfpData,\\\\\\\\n  consent,\\\\\\\\n  isTxnCreated,\\\\\\\\n  showRfpViewModal,\\\\\\\\n]);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n// show RFP created after txn approval for popup wallet\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isTxnCreated) {\\\\\\\\n    if (editRfpData) {\\\\\\\\n      setOldRfpData(editRfpData);\\\\\\\\n      if (\\\\\\\\n        editRfpData &&\\\\\\\\n        typeof editRfpData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        oldRfpData &&\\\\\\\\n        typeof oldRfpData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        JSON.stringify(editRfpData) !== JSON.stringify(oldRfpData)\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setRfpId(editRfpData.id);\\\\\\\\n        setShowRfpViewModal(true);\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      const rfpIds = Near.view(\\\\\\\\n        REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        \\\\\\\\\\\\\\\"get_all_rfp_ids\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      if (Array.isArray(rfpIds) && !rfpIdsArray) {\\\\\\\\n        setRfpIdsArray(rfpIds);\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        Array.isArray(rfpIds) &&\\\\\\\\n        Array.isArray(rfpIdsArray) &&\\\\\\\\n        rfpIds.length !== rfpIdsArray.length\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setRfpId(rfpIds[rfpIds.length - 1]);\\\\\\\\n        setShowRfpViewModal(true);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes) {\\\\\\\\n    setLoading(true);\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(REPL_RPC_URL, {\\\\\\\\n          method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n          headers: {\\\\\\\\n            \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          body: JSON.stringify({\\\\\\\\n            jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n            id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n            method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n            params: [props.transactionHashes, context.accountId],\\\\\\\\n          }),\\\\\\\\n        }).then((transaction) => {\\\\\\\\n          const transaction_method_name =\\\\\\\\n            transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n              .method_name;\\\\\\\\n\\\\\\\\n          const is_edit_or_add_rfp_transaction =\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"add_rfp\\\\\\\\\\\\\\\" ||\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"edit_rfp\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n          if (is_edit_or_add_rfp_transaction) {\\\\\\\\n            setShowRfpViewModal(true);\\\\\\\\n            Storage.privateSet(draftKey, null);\\\\\\\\n          }\\\\\\\\n          // show the latest created rfp to user\\\\\\\\n          if (transaction_method_name == \\\\\\\\\\\\\\\"add_rfp\\\\\\\\\\\\\\\") {\\\\\\\\n            useCache(\\\\\\\\n              () =>\\\\\\\\n                Near.asyncView(\\\\\\\\n                  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n                  \\\\\\\\\\\\\\\"get_all_rfp_ids\\\\\\\\\\\\\\\"\\\\\\\\n                ).then((rfpIdsArray) => {\\\\\\\\n                  setRfpId(rfpIdsArray?.[rfpIdsArray?.length - 1]);\\\\\\\\n                }),\\\\\\\\n              props.transactionHashes + \\\\\\\\\\\\\\\"rfpIds\\\\\\\\\\\\\\\",\\\\\\\\n              { subscribe: false }\\\\\\\\n            );\\\\\\\\n          } else {\\\\\\\\n            setRfpId(id);\\\\\\\\n          }\\\\\\\\n          setLoading(false);\\\\\\\\n        }),\\\\\\\\n      props.transactionHashes + context.accountId,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  } else {\\\\\\\\n    if (showRfpViewModal) {\\\\\\\\n      setShowRfpViewModal(false);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    className=\\\\\\\\\\\\\\\"submit-rfp-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst onSubmit = () => {\\\\\\\\n  setCreateTxn(true);\\\\\\\\n  const body = {\\\\\\\\n    rfp_body_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    summary: summary,\\\\\\\\n    submission_deadline: getTimestamp(submissionDeadline),\\\\\\\\n    timeline: timeline,\\\\\\\\n  };\\\\\\\\n  const args = { labels: (labels ?? []).map((i) => i.value), body: body };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editRfpData.id;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_rfp\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_rfp\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [collapseState, setCollapseState] = useState({});\\\\\\\\n\\\\\\\\nconst CollapsibleContainer = ({ title, children, noPaddingTop }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"border-bottom py-4 \\\\\\\\\\\\\\\" +\\\\\\\\n        (noPaddingTop && \\\\\\\\\\\\\\\"pt-0 \\\\\\\\\\\\\\\") +\\\\\\\\n        (collapseState[title] && \\\\\\\\\\\\\\\" pb-0\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className={\\\\\\\\\\\\\\\"d-flex justify-content-between \\\\\\\\\\\\\\\"}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-2 mb-sm-3\\\\\\\\\\\\\\\">{title}</div>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex d-sm-none cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() =>\\\\\\\\n            setCollapseState((prevState) => ({\\\\\\\\n              ...prevState,\\\\\\\\n              [title]: !prevState[title],\\\\\\\\n            }))\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          {!collapseState[title] ? (\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-chevron-up h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          ) : (\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-chevron-down h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className={!collapseState[title] ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"}>{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategoryDropdown = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n      props={{\\\\\\\\n        selected: labels,\\\\\\\\n        onChange: (v) => setLabels(v),\\\\\\\\n        disabled: false,\\\\\\\\n        availableOptions: rfpLabelOptions,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setTitle(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 80,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst SummaryComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: summary,\\\\\\\\n        multiline: true,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSummary(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 500,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst DescriptionComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: description,\\\\\\\\n        onChange: setDescription,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        autoFocus: false,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst ConsentComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"toc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={ToCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Terms and Conditions\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.toc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              toc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"coc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={CoCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Code of Conduct\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.coc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              coc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst SubmissionDeadline = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: submissionDeadline,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSubmissionDeadline(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        type: \\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\\",\\\\\\\\n        inputProps: {\\\\\\\\n          required: true,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"w-100 py-2 px-0 px-sm-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.ViewRfpModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: showRfpViewModal,\\\\\\\\n        isEdit: isEditPage,\\\\\\\\n        rfpId: rfpId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n        onConfirmClick: (value) => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onCancelRFP(value);\\\\\\\\n        },\\\\\\\\n        linkedProposalIds: editRfpData.snapshot.linked_proposals,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.WarningModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isWarningModalOpen,\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setWarningModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Heading className=\\\\\\\\\\\\\\\"px-2 px-sm-0\\\\\\\\\\\\\\\">\\\\\\\\n      {isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} RFP\\\\\\\\n    </Heading>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 px-2 p-lg-0 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4 d-flex flex-wrap gap-6 w-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-2 w-100 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n              <img src={RFP_IMAGE} height={35} width={35} />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Select the relevant categories to help users quickly\\\\\\\\n                    understand the nature of the need. Need guidance? See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href={FundingDocs}\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Funding Docs\\\\\\\\n                    </a>\\\\\\\\n                    .\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {CategoryDropdown}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Highlight the essence of your RFP in a few words. This will appear on your RFP\\\\\\\\u{2019}s detail page and the main RFP feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {TitleComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Explain your RFP briefly. What is the problem or need, desired outcome, and benefit to the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SummaryComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  \\\\\\\\\\\\\\\"Expand on your summary with any relevant details like a detailed explanation of the problem and the expected solution, scope, and deliverables. Also include an estimate range for the project if you have a specific budget. And the selection criteria.\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {DescriptionComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\">\\\\\\\\n                {ConsentComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex justify-content-end gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <Link\\\\\\\\n                  to={\\\\\\\\n                    isEditPage\\\\\\\\n                      ? href({\\\\\\\\n                          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                          params: {\\\\\\\\n                            page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n                            id: parseInt(id),\\\\\\\\n                          },\\\\\\\\n                        })\\\\\\\\n                      : href({\\\\\\\\n                          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                          params: {\\\\\\\\n                            page: \\\\\\\\\\\\\\\"rfps\\\\\\\\\\\\\\\",\\\\\\\\n                          },\\\\\\\\n                        })\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  <Widget\\\\\\\\n                    src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                    props={{\\\\\\\\n                      classNames: {\\\\\\\\n                        root: \\\\\\\\\\\\\\\"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                      },\\\\\\\\n                      label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                      onClick: cleanDraft,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </Link>\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    classNames: {\\\\\\\\n                      root: \\\\\\\\\\\\\\\"d-flex h-100 fw-light-bold btn-outline shadow-none border-1\\\\\\\\\\\\\\\",\\\\\\\\n                    },\\\\\\\\n                    label: (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"circle grey\\\\\\\\\\\\\\\"></div> <div>Submit</div>\\\\\\\\n                      </div>\\\\\\\\n                    ),\\\\\\\\n                    onClick: onSubmit,\\\\\\\\n                    disabled: disabledSubmitBtn,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-1 w-100 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <CollapsibleContainer noPaddingTop={true}>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Submission Deadline\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Enter the deadline for submitting proposals.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SubmissionDeadline}\\\\\\\\n              </InputContainer>\\\\\\\\n            </div>\\\\\\\\n          </CollapsibleContainer>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Timeline\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.TimelineConfigurator`}\\\\\\\\n                props={{\\\\\\\\n                  timeline: timeline,\\\\\\\\n                  setTimeline: (v) => {\\\\\\\\n                    if (editRfpData.snapshot.timeline.status === v.status) {\\\\\\\\n                      return;\\\\\\\\n                    }\\\\\\\\n                    // if proposal selected timeline is selected and no approved proposals exist, show warning\\\\\\\\n                    if (\\\\\\\\n                      v.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED &&\\\\\\\\n                      Array.isArray(approvedProposals) &&\\\\\\\\n                      !approvedProposals.length\\\\\\\\n                    ) {\\\\\\\\n                      setWarningModal(true);\\\\\\\\n                    }\\\\\\\\n\\\\\\\\n                    if (v.status === RFP_TIMELINE_STATUS.CANCELLED) {\\\\\\\\n                      setCancelModal(true);\\\\\\\\n                    }\\\\\\\\n                    setTimeline(v);\\\\\\\\n                  },\\\\\\\\n                  disabled: isEditPage ? false : true,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Feed\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    border-bottom: none !important;\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-btn {\\\\\\\\n    background-color: #3c697d !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .blue-btn {\\\\\\\\n      padding: 0.5rem 0.8rem !important;\\\\\\\\n      min-height: 32px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  .text-normal {\\\\\\\\n    font-weight: normal !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst FeedItem = ({ proposal, index }) => {\\\\\\\\n  const accountId = proposal.author_id;\\\\\\\\n  proposal.timeline = parseJSON(proposal.timeline);\\\\\\\\n  const profile = Social.get(`${accountId}/profile/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\n  // We will have to get the proposal from the contract to get the block height.\\\\\\\\n  const blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n    blockHeight: blockHeight,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const isLinked = isNumber(proposal.linked_rfp);\\\\\\\\n  const rfpData = proposal.rfpData;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n          id: proposal.proposal_id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      onClick={(e) => e.stopPropagation()}\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\n          \\\\\\\\\\\\\\\"proposal-card d-flex justify-content-between gap-2 text-muted cursor-pointer p-3 w-100 flex-wrap flex-sm-nowrap \\\\\\\\\\\\\\\" +\\\\\\\\n          (index !== 0 && \\\\\\\\\\\\\\\" border\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n            props={{\\\\\\\\n              accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"h6 mb-0 text-black\\\\\\\\\\\\\\\">{proposal.name}</div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                props={{\\\\\\\\n                  selected: proposal.labels,\\\\\\\\n                  disabled: true,\\\\\\\\n                  hideDropdown: true,\\\\\\\\n                  onChange: () => {},\\\\\\\\n                  availableOptions: rfpLabelOptions,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {isLinked && rfpData && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-sm text-muted d-flex gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <i class=\\\\\\\\\\\\\\\"bi bi-link-45deg\\\\\\\\\\\\\\\"></i>\\\\\\\\n                In response to RFP :\\\\\\\\n                <a\\\\\\\\n                  className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                  href={href({\\\\\\\\n                    widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                    params: {\\\\\\\\n                      page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n                      id: rfpData.rfp_id,\\\\\\\\n                    },\\\\\\\\n                  })}\\\\\\\\n                  target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {rfpData.name}\\\\\\\\n                </a>\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap flex-sm-nowrap text-sm w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div>#{proposal.proposal_id} \\\\\\\\u{ff65} </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n                By {profile.name ?? accountId} \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              </div>\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight,\\\\\\\\n                  blockTimestamp: proposal.timestamp,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LikeButton`}\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  proposalId: proposal.id,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  showOverlay: false,\\\\\\\\n                  onClick: () => {},\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"align-self-center\\\\\\\\\\\\\\\" style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n            props={{\\\\\\\\n              timelineStatus: proposal.timeline.status,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getProposal = (proposal_id) => {\\\\\\\\n  return Near.asyncView(\\\\\\\\n    `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}`,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id,\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FeedPage = () => {\\\\\\\\n  State.init({\\\\\\\\n    data: [],\\\\\\\\n    cachedItems: {},\\\\\\\\n    stage: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    sort: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    label: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    input: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    loading: false,\\\\\\\\n    loadingMore: false,\\\\\\\\n    aggregatedCount: null,\\\\\\\\n    currentlyDisplaying: 0,\\\\\\\\n    isFiltered: false,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  const queryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      author_id\\\\\\\\n      block_height\\\\\\\\n      name\\\\\\\\n      labels\\\\\\\\n      summary\\\\\\\\n      editor_id\\\\\\\\n      proposal_id\\\\\\\\n      ts\\\\\\\\n      timeline\\\\\\\\n      views\\\\\\\\n      linked_rfp\\\\\\\\n    }\\\\\\\\n    ${queryName}_aggregate(\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    )  {\\\\\\\\n      aggregate {\\\\\\\\n        count\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  const rfpQueryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\n  const rfpQuery = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${rfpQueryName}_bool_exp = {}) {\\\\\\\\n    ${rfpQueryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {rfp_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      name\\\\\\\\n      rfp_id\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  function separateNumberAndText(str) {\\\\\\\\n    const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n    if (numberRegex.test(str)) {\\\\\\\\n      const number = str.match(numberRegex)[0];\\\\\\\\n      const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n      return { number: parseInt(number), text };\\\\\\\\n    } else {\\\\\\\\n      return { number: null, text: str.trim() };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const buildWhereClause = () => {\\\\\\\\n    let where = {};\\\\\\\\n\\\\\\\\n    if (state.label) {\\\\\\\\n      where = { labels: { _contains: state.label }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.stage) {\\\\\\\\n      // timeline is stored as jsonb\\\\\\\\n      where = {\\\\\\\\n        timeline: { _cast: { String: { _regex: `${state.stage}` } } },\\\\\\\\n        ...where,\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n    if (state.input) {\\\\\\\\n      const { number, text } = separateNumberAndText(state.input);\\\\\\\\n      if (number) {\\\\\\\\n        where = { proposal_id: { _eq: number }, ...where };\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      if (text) {\\\\\\\\n        where = {\\\\\\\\n          _or: [\\\\\\\\n            { name: { _iregex: `${text}` } },\\\\\\\\n            { summary: { _iregex: `${text}` } },\\\\\\\\n            { description: { _iregex: `${text}` } },\\\\\\\\n          ],\\\\\\\\n          ...where,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    State.update({ isFiltered: Object.keys(where).length > 0 });\\\\\\\\n    return where;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const buildOrderByClause = () => {\\\\\\\\n    /**\\\\\\\\n     * TODO\\\\\\\\n     * Most commented -> edit contract and indexer\\\\\\\\n     * Unanswered -> 0 comments\\\\\\\\n     */\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const makeMoreItems = () => {\\\\\\\\n    if (state.aggregatedCount <= state.currentlyDisplaying) return;\\\\\\\\n    fetchProposals(state.data.length);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchProposals = (offset) => {\\\\\\\\n    if (!offset) {\\\\\\\\n      offset = 0;\\\\\\\\n    }\\\\\\\\n    if (state.loading) return;\\\\\\\\n    const FETCH_LIMIT = 10;\\\\\\\\n    const variables = {\\\\\\\\n      limit: FETCH_LIMIT,\\\\\\\\n      offset,\\\\\\\\n      where: buildWhereClause(),\\\\\\\\n    };\\\\\\\\n    fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n      if (result.status === 200) {\\\\\\\\n        if (result.body.data) {\\\\\\\\n          const data = result.body.data?.[queryName];\\\\\\\\n          const totalResult = result.body.data?.[`${queryName}_aggregate`];\\\\\\\\n          const promises = data.map((item) => {\\\\\\\\n            if (isNumber(item.linked_rfp)) {\\\\\\\\n              return fetchGraphQL(rfpQuery, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", {}).then(\\\\\\\\n                (result) => {\\\\\\\\n                  const rfpData = result.body.data?.[rfpQueryName];\\\\\\\\n                  return { ...item, rfpData: rfpData[0] };\\\\\\\\n                }\\\\\\\\n              );\\\\\\\\n            } else {\\\\\\\\n              return Promise.resolve(item);\\\\\\\\n            }\\\\\\\\n          });\\\\\\\\n          Promise.all(promises).then((res) => {\\\\\\\\n            State.update({ aggregatedCount: totalResult.aggregate.count });\\\\\\\\n            fetchBlockHeights(res, offset);\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const renderItem = (item, index) => (\\\\\\\\n    <div\\\\\\\\n      key={item.proposal_id}\\\\\\\\n      className={\\\\\\\\n        (index !== state.data.length - 1 && \\\\\\\\\\\\\\\"border-bottom \\\\\\\\\\\\\\\") + index === 0 &&\\\\\\\\n        \\\\\\\\\\\\\\\" rounded-top-2\\\\\\\\\\\\\\\"\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <FeedItem proposal={item} index={index} />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n  const cachedRenderItem = (item, index) => {\\\\\\\\n    if (props.term) {\\\\\\\\n      return renderItem(item, {\\\\\\\\n        searchKeywords: [props.term],\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    const key = JSON.stringify(item);\\\\\\\\n\\\\\\\\n    if (!(key in state.cachedItems)) {\\\\\\\\n      state.cachedItems[key] = renderItem(item, index);\\\\\\\\n      State.update();\\\\\\\\n    }\\\\\\\\n    return state.cachedItems[key];\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    fetchProposals();\\\\\\\\n  }, [state.sort, state.label, state.stage]);\\\\\\\\n\\\\\\\\n  const mergeItems = (newItems) => {\\\\\\\\n    const items = [\\\\\\\\n      ...new Set([...newItems, ...state.data].map((i) => JSON.stringify(i))),\\\\\\\\n    ].map((i) => JSON.parse(i));\\\\\\\\n    // Sorting in the front end\\\\\\\\n    if (state.sort === \\\\\\\\\\\\\\\"proposal_id\\\\\\\\\\\\\\\" || state.sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.proposal_id - a.proposal_id);\\\\\\\\n    } else if (state.sort === \\\\\\\\\\\\\\\"views\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.views - a.views);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return items;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchBlockHeights = (data, offset) => {\\\\\\\\n    let promises = data.map((item) => getProposal(item.proposal_id));\\\\\\\\n    Promise.all(promises).then((blockHeights) => {\\\\\\\\n      data = data.map((item, index) => ({\\\\\\\\n        ...item,\\\\\\\\n        timeline: JSON.parse(item.timeline),\\\\\\\\n        social_db_post_block_height:\\\\\\\\n          blockHeights[index].social_db_post_block_height,\\\\\\\\n      }));\\\\\\\\n      if (offset) {\\\\\\\\n        let newData = mergeItems(data);\\\\\\\\n        State.update({\\\\\\\\n          data: newData,\\\\\\\\n          currentlyDisplaying: newData.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      } else {\\\\\\\\n        State.update({\\\\\\\\n          data,\\\\\\\\n          currentlyDisplaying: data.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const loader = (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const renderedItems = state.data ? state.data.map(cachedRenderItem) : null;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between flex-wrap gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Heading>\\\\\\\\n          Proposals\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"text-muted text-normal\\\\\\\\\\\\\\\">\\\\\\\\n            ({state.aggregatedCount ?? state.data.length}){\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          </span>\\\\\\\\n        </Heading>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-input`}\\\\\\\\n            props={{\\\\\\\\n              search: state.input,\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-xs-100\\\\\\\\\\\\\\\",\\\\\\\\n              onSearch: (input) => {\\\\\\\\n                State.update({ input });\\\\\\\\n                fetchProposals();\\\\\\\\n              },\\\\\\\\n              onEnter: () => {\\\\\\\\n                fetchProposals();\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-sort`}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ sort: select.value });\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.FilterByLabel`}\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ label: select.value });\\\\\\\\n                },\\\\\\\\n                availableOptions: rfpLabelOptions,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-stage`}\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ stage: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"mt-2 mt-xs-0\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={href({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\" },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                label: (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                    <div>\\\\\\\\n                      <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                    </div>\\\\\\\\n                    Submit Proposal\\\\\\\\n                  </div>\\\\\\\\n                ),\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"blue-btn\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div style={{ minHeight: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {!Array.isArray(state.data) ? (\\\\\\\\n          loader\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 mt-4 py-3 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"container-xl\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"bg-blue text-sm mt-2 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center mb-0\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    <i className=\\\\\\\\\\\\\\\"bi bi-info-circle\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                  <div>\\\\\\\\n                    <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                      Welcome to the Infrastructure Committee Proposal Feed!\\\\\\\\n                    </span>\\\\\\\\n                    This dedicated space makes it easy to submit and track\\\\\\\\n                    funding proposals from the Infrastructure Committee, the\\\\\\\\n                    primary organization overseeing improvements pertaining to\\\\\\\\n                    wallets, indexers, RPC services, explorers, oracles,\\\\\\\\n                    bridges, NEAR Protocol features, and related ecosystem\\\\\\\\n                    upgrades. You are welcome to respond to any RFPs that are\\\\\\\\n                    accepting submissions or submit an independent proposal.\\\\\\\\n                  </div>\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mt-4 border rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                {state.aggregatedCount === 0 ? (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"m-2\\\\\\\\\\\\\\\">\\\\\\\\n                    {state.isFiltered ? (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-danger\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No proposal found for selected filter.\\\\\\\\n                      </div>\\\\\\\\n                    ) : (\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"alert alert-secondary\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                        No proposal has been created yet.\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                ) : state.aggregatedCount > 0 ? (\\\\\\\\n                  <InfiniteScroll\\\\\\\\n                    pageStart={0}\\\\\\\\n                    loadMore={makeMoreItems}\\\\\\\\n                    hasMore={state.aggregatedCount > state.data.length}\\\\\\\\n                    loader={loader}\\\\\\\\n                    useWindow={false}\\\\\\\\n                    threshold={100}\\\\\\\\n                  >\\\\\\\\n                    {renderedItems}\\\\\\\\n                  </InfiniteScroll>\\\\\\\\n                ) : (\\\\\\\\n                  loader\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn FeedPage(props);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.StatusTag\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst timelineStatus = props.timelineStatus;\\\\\\\\nconst size = props.size ?? \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst getClassNameByStatus = () => {\\\\\\\\n  switch (timelineStatus) {\\\\\\\\n    case RFP_TIMELINE_STATUS.CANCELLED:\\\\\\\\n      return \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\";\\\\\\\\n    case RFP_TIMELINE_STATUS.PROPOSAL_SELECTED:\\\\\\\\n      return \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\";\\\\\\\\n    case RFP_TIMELINE_STATUS.EVALUATION:\\\\\\\\n      return \\\\\\\\\\\\\\\"orange\\\\\\\\\\\\\\\";\\\\\\\\n    default:\\\\\\\\n      return \\\\\\\\\\\\\\\"black\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  font-size: ${({ size }) => {\\\\\\\\n    switch (size) {\\\\\\\\n      case \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\":\\\\\\\\n        return \\\\\\\\\\\\\\\"10px\\\\\\\\\\\\\\\";\\\\\\\\n      case \\\\\\\\\\\\\\\"lg\\\\\\\\\\\\\\\":\\\\\\\\n        return \\\\\\\\\\\\\\\"14px\\\\\\\\\\\\\\\";\\\\\\\\n      default:\\\\\\\\n        return \\\\\\\\\\\\\\\"12px\\\\\\\\\\\\\\\";\\\\\\\\n    }\\\\\\\\n  }};\\\\\\\\n\\\\\\\\n  min-width: fit-content;\\\\\\\\n\\\\\\\\n  .orange-tag {\\\\\\\\n    border: 1px solid #ff7a00 !important;\\\\\\\\n    color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-tag {\\\\\\\\n    border: 1px solid #000 !important;\\\\\\\\n    color: #000 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-tag {\\\\\\\\n    border: 1px solid #979797 !important;\\\\\\\\n    color: #979797 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-tag {\\\\\\\\n    border: 1px solid #04a46e !important;\\\\\\\\n    color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container size={size}>\\\\\\\\n    <div className={getClassNameByStatus() + \\\\\\\\\\\\\\\"-tag fw-bold rounded-2 p-1 px-2\\\\\\\\\\\\\\\"}>\\\\\\\\n      {(timelineStatus ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.organism.Navbar\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst page = props.page;\\\\\\\\n\\\\\\\\nconst [showMenu, setShowMenu] = useState(false);\\\\\\\\n\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst Logo = () => {\\\\\\\\n  const Wrapper = styled.div`\\\\\\\\n    .text-lg {\\\\\\\\n      font-size: 22px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    a:hover {\\\\\\\\n      text-decoration: none;\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <Link\\\\\\\\n        to={linkHref({\\\\\\\\n          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n          params: { page: \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\" },\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <img\\\\\\\\n            height={35}\\\\\\\\n            width={35}\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicgbhtzxgdb3noivjfx4xcwsx6nq5pnjttdc4fpgfq74ynqj5h6mq\\\\\\\\\\\\\\\"\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          <b className=\\\\\\\\\\\\\\\"text-lg\\\\\\\\\\\\\\\">infrastructure committee</b>\\\\\\\\n        </div>\\\\\\\\n      </Link>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst ProfileIcon = () => {\\\\\\\\n  const Wrapper = styled.svg`\\\\\\\\n    padding: 0.25rem;\\\\\\\\n    @media screen and (max-width: 768px) {\\\\\\\\n      display: none;\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.ProfileCard`}\\\\\\\\n      props={{ iconOnly: true, accountId: context.accountId || null }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst MenuIcon = () => (\\\\\\\\n  <svg\\\\\\\\n    xmlns=\\\\\\\\\\\\\\\"http://www.w3.org/2000/svg\\\\\\\\\\\\\\\"\\\\\\\\n    width=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n    height=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n    viewBox=\\\\\\\\\\\\\\\"0 0 16 16\\\\\\\\\\\\\\\"\\\\\\\\n    fill=\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ height: 20, width: 20 }}\\\\\\\\n  >\\\\\\\\n    <path\\\\\\\\n      fill-rule=\\\\\\\\\\\\\\\"evenodd\\\\\\\\\\\\\\\"\\\\\\\\n      clip-rule=\\\\\\\\\\\\\\\"evenodd\\\\\\\\\\\\\\\"\\\\\\\\n      d=\\\\\\\\\\\\\\\"M2 12.2986H14V13.3732H2V12.2986ZM2 9.07471H14V10.1493H2V9.07471ZM2 5.85083H14V6.92546H2V5.85083ZM2 2.62695H14V3.70158H2V2.62695Z\\\\\\\\\\\\\\\"\\\\\\\\n      fill=\\\\\\\\\\\\\\\"#818181\\\\\\\\\\\\\\\"\\\\\\\\n    />\\\\\\\\n  </svg>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Navbar = styled.div`\\\\\\\\n  padding: 1.5rem 0rem;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n\\\\\\\\n  background: #f4f4f4;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1.875rem 1.375rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinksContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 1.5rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: none;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst MobileMenu = styled.button`\\\\\\\\n  all: unset;\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nlet links = [\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Proposals\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"RFPs\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"rfps\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"About\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (isModerator) {\\\\\\\\n  links = [\\\\\\\\n    {\\\\\\\\n      title: \\\\\\\\\\\\\\\"Admin\\\\\\\\\\\\\\\",\\\\\\\\n      href: \\\\\\\\\\\\\\\"admin\\\\\\\\\\\\\\\",\\\\\\\\n      links: [],\\\\\\\\n    },\\\\\\\\n    ...links,\\\\\\\\n  ];\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst MobileNav = styled.div`\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: flex;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  position: absolute;\\\\\\\\n  top: 0;\\\\\\\\n  right: 0;\\\\\\\\n\\\\\\\\n  width: 207px;\\\\\\\\n\\\\\\\\n  padding: 24px 36px 36px 16px;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: flex-end;\\\\\\\\n  gap: 2.5rem;\\\\\\\\n  flex-shrink: 0;\\\\\\\\n\\\\\\\\n  border-radius: 0px 0px 0px 16px;\\\\\\\\n  background: rgba(41, 41, 41, 0.6);\\\\\\\\n  backdrop-filter: blur(5px);\\\\\\\\n\\\\\\\\n  z-index: 50;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst MobileLink = styled.a`\\\\\\\\n  color: #f4f4f4 !important;\\\\\\\\n  font-size: 20px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 20px; /* 100% */\\\\\\\\n  margin-bottom: 1rem;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    color: #00ec97 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n    color: #00ec97 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Navbar className=\\\\\\\\\\\\\\\"position-relative\\\\\\\\\\\\\\\">\\\\\\\\n    <Logo />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <LinksContainer>\\\\\\\\n        {links.map((link) => (\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.NavbarDropdown`}\\\\\\\\n            props={{\\\\\\\\n              title: link.title,\\\\\\\\n              href: link.href,\\\\\\\\n              links: link.links,\\\\\\\\n              page: page,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        ))}\\\\\\\\n      </LinksContainer>\\\\\\\\n      {context.accountId && <ProfileIcon />}\\\\\\\\n      <MobileMenu onClick={() => setShowMenu(!showMenu)}>\\\\\\\\n        <MenuIcon />\\\\\\\\n      </MobileMenu>\\\\\\\\n    </div>\\\\\\\\n    {showMenu && (\\\\\\\\n      <MobileNav>\\\\\\\\n        <div\\\\\\\\n          onClick={() => setShowMenu(!showMenu)}\\\\\\\\n          style={{ cursor: \\\\\\\\\\\\\\\"pointer\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-x\\\\\\\\\\\\\\\" style={{ fontSize: 20, color: \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\" }}></i>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n          {links.map((link, idx) =>\\\\\\\\n            link.href ? (\\\\\\\\n              <MobileLink\\\\\\\\n                key={`mobile-link-${idx}`}\\\\\\\\n                className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                href={`/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=${link.href}`}\\\\\\\\n              >\\\\\\\\n                {link.title}\\\\\\\\n              </MobileLink>\\\\\\\\n            ) : (\\\\\\\\n              link.links.map((it, idx) =>\\\\\\\\n                it.href.startsWith(\\\\\\\\\\\\\\\"http://\\\\\\\\\\\\\\\") ||\\\\\\\\n                it.href.startsWith(\\\\\\\\\\\\\\\"https://\\\\\\\\\\\\\\\") ? (\\\\\\\\n                  <MobileLink\\\\\\\\n                    key={`nested-link-${idx}`}\\\\\\\\n                    className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                    href={it.href}\\\\\\\\n                    target=\\\\\\\\\\\\\\\"no_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    /{it.title}\\\\\\\\n                  </MobileLink>\\\\\\\\n                ) : (\\\\\\\\n                  <MobileLink\\\\\\\\n                    key={`nested-link-${idx}`}\\\\\\\\n                    className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                    href={`/${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=${it.href}`}\\\\\\\\n                  >\\\\\\\\n                    /{it.title}\\\\\\\\n                  </MobileLink>\\\\\\\\n                )\\\\\\\\n              )\\\\\\\\n            )\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </MobileNav>\\\\\\\\n    )}\\\\\\\\n  </Navbar>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.Compose\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst EmbeddCSS = `\\\\\\\\n  .CodeMirror {\\\\\\\\n   margin-inline:10px;\\\\\\\\n   border-radius:5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  .nav-link {\\\\\\\\n    color: inherit !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card-header {\\\\\\\\n    padding-bottom: 0px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Compose = ({\\\\\\\\n  data,\\\\\\\\n  onChange,\\\\\\\\n  autocompleteEnabled,\\\\\\\\n  placeholder,\\\\\\\\n  height,\\\\\\\\n  embeddCSS,\\\\\\\\n  showProposalIdAutoComplete,\\\\\\\\n  onChangeKeyup,\\\\\\\\n  handler,\\\\\\\\n}) => {\\\\\\\\n  State.init({\\\\\\\\n    data: data,\\\\\\\\n    selectedTab: \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\",\\\\\\\\n    autoFocus: false,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    if (typeof onChange === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\") {\\\\\\\\n      onChange(state.data);\\\\\\\\n    }\\\\\\\\n  }, [state.data]);\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    // for clearing editor after txn approval/ showing draft state\\\\\\\\n    if (data !== state.data || handler !== state.handler) {\\\\\\\\n      State.update({ data: data, handler: handler });\\\\\\\\n    }\\\\\\\\n  }, [data, handler]);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"card-header\\\\\\\\\\\\\\\" style={{ position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <div>\\\\\\\\n            <ul class=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\">\\\\\\\\n              <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class={`nav-link ${\\\\\\\\n                    state.selectedTab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  }`}\\\\\\\\n                  onClick={() =>\\\\\\\\n                    State.update({ selectedTab: \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\", autoFocus: true })\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  Write\\\\\\\\n                </button>\\\\\\\\n              </li>\\\\\\\\n              <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class={`nav-link ${\\\\\\\\n                    state.selectedTab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  }`}\\\\\\\\n                  onClick={() => State.update({ selectedTab: \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" })}\\\\\\\\n                >\\\\\\\\n                  Preview\\\\\\\\n                </button>\\\\\\\\n              </li>\\\\\\\\n            </ul>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {state.selectedTab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? (\\\\\\\\n          <>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.SimpleMDE`}\\\\\\\\n              props={{\\\\\\\\n                data: { handler: state.handler, content: state.data },\\\\\\\\n                onChange: (content) => {\\\\\\\\n                  State.update({ data: content, handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\" });\\\\\\\\n                },\\\\\\\\n                placeholder: placeholder,\\\\\\\\n                height,\\\\\\\\n                embeddCSS: embeddCSS || EmbeddCSS,\\\\\\\\n                showAutoComplete: autocompleteEnabled,\\\\\\\\n                showProposalIdAutoComplete: showProposalIdAutoComplete,\\\\\\\\n                autoFocus: state.autoFocus,\\\\\\\\n                onChangeKeyup: onChangeKeyup,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n              props={{\\\\\\\\n                text: state.data,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn Compose(props);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Editor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst { id, timestamp, rfp_id } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://near.social/${REPL_DEVHUB}/widget/app?page=community&handle=developer-dao&tab=funding\\\\\\\\\\\\\\\";\\\\\\\\nconst ToCDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1jcazxTemEsOf72nfAIbv6CR1og_w4qVXg7GjXuVoGeI/edit?usp=sharing\\\\\\\\\\\\\\\";\\\\\\\\nconst CoCDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1S0Ky1xPLRlCRSbX6nLOAxBba7b0dYb4SpGJzaAPqI9k/edit?usp=sharing\\\\\\\\\\\\\\\";\\\\\\\\nif (!author) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LoginScreen`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nlet editProposalData = null;\\\\\\\\nlet draftProposalData = null;\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_PROPOSAL_EDIT\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editProposalData = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id: parseInt(id),\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  input {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .h6 {\\\\\\\\n      font-size: 14px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .text-sm {\\\\\\\\n      font-size: 11px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #03ba16 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst tokensOptions = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\" },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"OTHER\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst [linkedRfp, setLinkedRfp] = useState(rfp_id ? parseInt(rfp_id) : null);\\\\\\\\nconst [labels, setLabels] = useState([]);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [linkedProposals, setLinkedProposals] = useState([]);\\\\\\\\nconst [receiverAccount, setReceiverAccount] = useState(context.accountId);\\\\\\\\nconst [requestedSponsorshipAmount, setRequestedSponsorshipAmount] =\\\\\\\\n  useState(null);\\\\\\\\nconst [requestedSponsorshipToken, setRequestedSponsorshipToken] = useState(\\\\\\\\n  tokensOptions[2]\\\\\\\\n);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\nconst [selectedStatus, setSelectedStatus] = useState(\\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\");\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\n\\\\\\\\nconst [showProposalViewModal, setShowProposalViewModal] = useState(false); // when user creates/edit a proposal and confirm the txn, this is true\\\\\\\\nconst [proposalId, setProposalId] = useState(null);\\\\\\\\nconst [proposalIdsArray, setProposalIdsArray] = useState(null);\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [oldProposalData, setOldProposalData] = useState(null);\\\\\\\\nconst [supervisor, setSupervisor] = useState(null);\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftProposalData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editProposalData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      linked_rfp: linkedRfp,\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      labels: labels,\\\\\\\\n      summary: summary,\\\\\\\\n      requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n      requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n      receiver_account: receiverAccount,\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [\\\\\\\\n    linkedRfp,\\\\\\\\n    title,\\\\\\\\n    summary,\\\\\\\\n    description,\\\\\\\\n    labels,\\\\\\\\n    requestedSponsorshipAmount,\\\\\\\\n    requestedSponsorshipToken,\\\\\\\\n    receiverAccount,\\\\\\\\n  ]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (allowDraft) {\\\\\\\\n    let data = editProposalData || JSON.parse(draftProposalData);\\\\\\\\n    let snapshot = data.snapshot;\\\\\\\\n    if (data) {\\\\\\\\n      if (timestamp) {\\\\\\\\n        snapshot =\\\\\\\\n          data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n          data.snapshot;\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        draftProposalData &&\\\\\\\\n        editProposalData &&\\\\\\\\n        editProposalData.id === JSON.parse(draftProposalData).id\\\\\\\\n      ) {\\\\\\\\n        snapshot = {\\\\\\\\n          ...editProposalData.snapshot,\\\\\\\\n          ...JSON.parse(draftProposalData).snapshot,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n      if (!isNumber(linkedRfp)) {\\\\\\\\n        setLinkedRfp(snapshot.linked_rfp);\\\\\\\\n      }\\\\\\\\n      setLabels(snapshot.labels ?? []);\\\\\\\\n      setTitle(snapshot.name);\\\\\\\\n      setSummary(snapshot.summary);\\\\\\\\n      setDescription(snapshot.description);\\\\\\\\n      setReceiverAccount(snapshot.receiver_account);\\\\\\\\n      setRequestedSponsorshipAmount(snapshot.requested_sponsorship_usd_amount);\\\\\\\\n      setSupervisor(snapshot.supervisor);\\\\\\\\n\\\\\\\\n      const token = tokensOptions.find(\\\\\\\\n        (item) => item.value === snapshot.requested_sponsorship_paid_in_currency\\\\\\\\n      );\\\\\\\\n      setRequestedSponsorshipToken(token ?? tokensOptions[2]);\\\\\\\\n      if (isEditPage) {\\\\\\\\n        setConsent({ toc: true, coc: true });\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [editProposalData, draftProposalData, allowDraft]);\\\\\\\\n\\\\\\\\n// show loader until LS data is set in state\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n    setLoading(false);\\\\\\\\n  }, 500);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (showProposalViewModal) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  setDisabledSubmitBtn(\\\\\\\\n    isTxnCreated ||\\\\\\\\n      !title ||\\\\\\\\n      !description ||\\\\\\\\n      !summary ||\\\\\\\\n      !(labels ?? []).length ||\\\\\\\\n      !requestedSponsorshipAmount ||\\\\\\\\n      !receiverAccount ||\\\\\\\\n      !consent.toc ||\\\\\\\\n      !consent.coc\\\\\\\\n  );\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 10000);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, [\\\\\\\\n  memoizedDraftData,\\\\\\\\n  draftKey,\\\\\\\\n  draftProposalData,\\\\\\\\n  consent,\\\\\\\\n  isTxnCreated,\\\\\\\\n  showProposalViewModal,\\\\\\\\n]);\\\\\\\\n\\\\\\\\n// set RFP labels, disable link rfp change when linked rfp is past accepting stage\\\\\\\\nconst [disabledLinkRFP, setDisableLinkRFP] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (linkedRfp) {\\\\\\\\n    Near.asyncView(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n      rfp_id: linkedRfp.value ?? linkedRfp,\\\\\\\\n    }).then((i) => {\\\\\\\\n      const timeline = parseJSON(i.snapshot.timeline);\\\\\\\\n      setDisableLinkRFP(\\\\\\\\n        !isModerator &&\\\\\\\\n          timeline.status !== RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS\\\\\\\\n      );\\\\\\\\n      setLabels(i.snapshot.labels);\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [linkedRfp]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    editProposalData &&\\\\\\\\n    editProposalData?.snapshot?.linked_proposals?.length > 0\\\\\\\\n  ) {\\\\\\\\n    editProposalData.snapshot.linked_proposals.map((item) => {\\\\\\\\n      useCache(\\\\\\\\n        () =>\\\\\\\\n          Near.asyncView(\\\\\\\\n            REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n            \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n            {\\\\\\\\n              proposal_id: parseInt(item),\\\\\\\\n            }\\\\\\\\n          ).then((proposal) => {\\\\\\\\n            setLinkedProposals([\\\\\\\\n              ...linkedProposals,\\\\\\\\n              {\\\\\\\\n                label: \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + proposal.id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + proposal.snapshot.name,\\\\\\\\n                value: proposal.id,\\\\\\\\n              },\\\\\\\\n            ]);\\\\\\\\n          }),\\\\\\\\n        item + \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\",\\\\\\\\n        { subscribe: false }\\\\\\\\n      );\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [editProposalData]);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n// show proposal created after txn approval for popup wallet\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isTxnCreated) {\\\\\\\\n    if (editProposalData) {\\\\\\\\n      setOldProposalData(editProposalData);\\\\\\\\n      if (\\\\\\\\n        editProposalData &&\\\\\\\\n        typeof editProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        oldProposalData &&\\\\\\\\n        typeof oldProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        JSON.stringify(editProposalData) !== JSON.stringify(oldProposalData)\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(editProposalData.id);\\\\\\\\n        setShowProposalViewModal(true);\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      const proposalIds = Near.view(\\\\\\\\n        REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      if (Array.isArray(proposalIds) && !proposalIdsArray) {\\\\\\\\n        setProposalIdsArray(proposalIds);\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        Array.isArray(proposalIds) &&\\\\\\\\n        Array.isArray(proposalIdsArray) &&\\\\\\\\n        proposalIds.length !== proposalIdsArray.length\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(proposalIds[proposalIds.length - 1]);\\\\\\\\n        setShowProposalViewModal(true);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  setLoading(false);\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes) {\\\\\\\\n    setLoading(true);\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(REPL_RPC_URL, {\\\\\\\\n          method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n          headers: {\\\\\\\\n            \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          body: JSON.stringify({\\\\\\\\n            jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n            id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n            method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n            params: [props.transactionHashes, context.accountId],\\\\\\\\n          }),\\\\\\\\n        }).then((transaction) => {\\\\\\\\n          const transaction_method_name =\\\\\\\\n            transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n              .method_name;\\\\\\\\n\\\\\\\\n          const is_edit_or_add_post_transaction =\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\" ||\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n          if (is_edit_or_add_post_transaction) {\\\\\\\\n            setShowProposalViewModal(true);\\\\\\\\n            Storage.privateSet(draftKey, null);\\\\\\\\n          }\\\\\\\\n          // show the latest created proposal to user\\\\\\\\n          if (transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\") {\\\\\\\\n            useCache(\\\\\\\\n              () =>\\\\\\\\n                Near.asyncView(\\\\\\\\n                  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n                  \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n                ).then((proposalIdsArray) => {\\\\\\\\n                  setProposalId(\\\\\\\\n                    proposalIdsArray?.[proposalIdsArray?.length - 1]\\\\\\\\n                  );\\\\\\\\n                }),\\\\\\\\n              props.transactionHashes + \\\\\\\\\\\\\\\"proposalIds\\\\\\\\\\\\\\\",\\\\\\\\n              { subscribe: false }\\\\\\\\n            );\\\\\\\\n          } else {\\\\\\\\n            setProposalId(id);\\\\\\\\n          }\\\\\\\\n          setLoading(false);\\\\\\\\n        }),\\\\\\\\n      props.transactionHashes + context.accountId,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  } else {\\\\\\\\n    if (showProposalViewModal) {\\\\\\\\n      setShowProposalViewModal(false);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst DropdowntBtnContainer = styled.div`\\\\\\\\n  font-size: 13px;\\\\\\\\n  min-width: 150px;\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .select-header {\\\\\\\\n    display: flex;\\\\\\\\n    justify-content: space-between;\\\\\\\\n    align-items: center;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    border-radius-top: 5px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    background-color: #fff;\\\\\\\\n    border-radius: 5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .no-border {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .options-card {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 0;\\\\\\\\n    width: 200%;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    background-color: #fff;\\\\\\\\n    padding: 0.5rem;\\\\\\\\n    z-index: 99;\\\\\\\\n    font-size: 13px;\\\\\\\\n    border-radius:0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .left {\\\\\\\\n    right: 0 !important;\\\\\\\\n    left: auto !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .options-card {\\\\\\\\n      right: 0 !important;\\\\\\\\n      left: auto !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option {\\\\\\\\n    margin-block: 5px;\\\\\\\\n    padding: 10px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    border-bottom: 1px solid #f0f0f0;\\\\\\\\n    transition: background-color 0.3s ease;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:hover {\\\\\\\\n    background-color: #f0f0f0; /* Custom hover effect color */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:last-child {\\\\\\\\n    border-bottom: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f4f4f4 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    font-weight: 500;\\\\\\\\n    color: #b3b3b3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 8px;\\\\\\\\n    height: 8px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green {\\\\\\\\n    background-color: #04a46e;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"submit-proposal-draft-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SubmitBtn = () => {\\\\\\\\n  const btnOptions = [\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Submit Draft\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"The author can still edit the proposal and build consensus before sharing it with sponsors.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Ready for Review\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"Start the official review process with sponsors. This will lock the editing function, but comments are still open.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"review\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  const handleOptionClick = (option) => {\\\\\\\\n    setDraftBtnOpen(false);\\\\\\\\n    setSelectedStatus(option.value);\\\\\\\\n    handleSubmit(option.value);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const toggleDropdown = () => {\\\\\\\\n    setDraftBtnOpen(!isDraftBtnOpen);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const handleSubmit = (status) => {\\\\\\\\n    const isDraft = status === \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\";\\\\\\\\n    if (isDraft) {\\\\\\\\n      onSubmit({ isDraft });\\\\\\\\n      cleanDraft();\\\\\\\\n    } else {\\\\\\\\n      setReviewModal(true);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <DropdowntBtnContainer>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"custom-select\\\\\\\\\\\\\\\"\\\\\\\\n        tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n        onBlur={() => setDraftBtnOpen(false)}\\\\\\\\n      >\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\n            \\\\\\\\\\\\\\\"select-header d-flex gap-1 align-items-center submit-draft-button \\\\\\\\\\\\\\\" +\\\\\\\\n            (disabledSubmitBtn && \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\")\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            onClick={() => !disabledSubmitBtn && handleSubmit(selectedStatus)}\\\\\\\\n            className=\\\\\\\\\\\\\\\"p-2 d-flex gap-2 align-items-center \\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {isTxnCreated ? (\\\\\\\\n              LoadingButtonSpinner\\\\\\\\n            ) : (\\\\\\\\n              <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + selectedOption.iconColor}></div>\\\\\\\\n            )}\\\\\\\\n            <div className={`selected-option`}>{selectedOption.label}</div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"h-100 p-2\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ borderLeft: \\\\\\\\\\\\\\\"1px solid #ccc\\\\\\\\\\\\\\\" }}\\\\\\\\n            onClick={!disabledSubmitBtn && toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <i class={`bi bi-chevron-${isDraftBtnOpen ? \\\\\\\\\\\\\\\"up\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\"}`}></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {isDraftBtnOpen && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"options-card\\\\\\\\\\\\\\\">\\\\\\\\n            {btnOptions.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`option ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n              >\\\\\\\\n                <div className={`d-flex gap-2 align-items-center`}>\\\\\\\\n                  <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + option.iconColor}></div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">{option.label}</div>\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-muted text-xs\\\\\\\\\\\\\\\">{option.description}</div>\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </DropdowntBtnContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst onSubmit = ({ isDraft, isCancel }) => {\\\\\\\\n  setCreateTxn(true);\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"submitting transaction\\\\\\\\\\\\\\\");\\\\\\\\n  const linkedProposalsIds = linkedProposals.map((item) => item.value) ?? [];\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    linked_rfp: linkedRfp?.value,\\\\\\\\n    category: \\\\\\\\\\\\\\\"Infrastructure Committee\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    summary: summary,\\\\\\\\n    linked_proposals: linkedProposalsIds,\\\\\\\\n    requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n    requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n    receiver_account: receiverAccount,\\\\\\\\n    requested_sponsor: \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\",\\\\\\\\n    supervisor: supervisor,\\\\\\\\n    timeline: isCancel\\\\\\\\n      ? {\\\\\\\\n          status: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        }\\\\\\\\n      : isDraft\\\\\\\\n      ? { status: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\" }\\\\\\\\n      : {\\\\\\\\n          status: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        },\\\\\\\\n  };\\\\\\\\n  const args = {\\\\\\\\n    labels: linkedRfp ? [] : (labels ?? []).map((i) => i.value ?? i),\\\\\\\\n    body: body,\\\\\\\\n  };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editProposalData.id;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [collapseState, setCollapseState] = useState({});\\\\\\\\n\\\\\\\\nconst CollapsibleContainer = ({ title, children, noPaddingTop }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"border-bottom py-4 \\\\\\\\\\\\\\\" +\\\\\\\\n        (noPaddingTop && \\\\\\\\\\\\\\\"pt-0 \\\\\\\\\\\\\\\") +\\\\\\\\n        (collapseState[title] && \\\\\\\\\\\\\\\" pb-0\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className={\\\\\\\\\\\\\\\"d-flex justify-content-between \\\\\\\\\\\\\\\"}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-2 mb-sm-3\\\\\\\\\\\\\\\">{title}</div>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex d-sm-none cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() =>\\\\\\\\n            setCollapseState((prevState) => ({\\\\\\\\n              ...prevState,\\\\\\\\n              [title]: !prevState[title],\\\\\\\\n            }))\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          {!collapseState[title] ? (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-up h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          ) : (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-down h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className={!collapseState[title] ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"}>{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategoryDropdown = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n      props={{\\\\\\\\n        selected: labels,\\\\\\\\n        onChange: (v) => setLabels(v),\\\\\\\\n        disabled: linkedRfp, // when RFP is linked, labels are disabled\\\\\\\\n        linkedRfp: linkedRfp,\\\\\\\\n\\\\\\\\n        availableOptions: rfpLabelOptions,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData, linkedRfp, labels]);\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setTitle(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 80,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst SummaryComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: summary,\\\\\\\\n        multiline: true,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSummary(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 500,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst DescriptionComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: description,\\\\\\\\n        onChange: setDescription,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        autoFocus: false,\\\\\\\\n        showProposalIdAutoComplete: true,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ConsentComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"toc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={ToCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Infrastructure Committee\\\\\\\\u{2019}s Terms and Conditions\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.toc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              toc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"coc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={CoCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Infrastructure Committee\\\\\\\\u{2019}s Code of Conduct\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.coc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              coc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ProfileComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"mob.near/widget/Profile.ShortInlineBlock\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        accountId: author,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst LinkRFPComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedRfpDropdown`}\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedRfp,\\\\\\\\n          linkedRfp: linkedRfp,\\\\\\\\n          disabled: disabledLinkRFP,\\\\\\\\n          onDeleteRfp: () => setLabels([]),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData, disabledLinkRFP]);\\\\\\\\n\\\\\\\\nconst LinkedProposalsComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">\\\\\\\\n        Link any relevant proposals (e.g. previous milestones).\\\\\\\\n      </div>\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposalsDropdown`}\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedProposals,\\\\\\\\n          linkedProposals: linkedProposals,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ReceiverAccountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.AccountInput`}\\\\\\\\n      props={{\\\\\\\\n        value: receiverAccount,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Enter Address\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: setReceiverAccount,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst AmountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: requestedSponsorshipAmount,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          setRequestedSponsorshipAmount(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\",\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"$\\\\\\\\\\\\\\\",\\\\\\\\n          inputmode: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\",\\\\\\\\n          pattern: \\\\\\\\\\\\\\\"[0-9]*\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst CurrencyComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n      props={{\\\\\\\\n        options: tokensOptions,\\\\\\\\n        selectedValue: requestedSponsorshipToken,\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setRequestedSponsorshipToken(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-0 px-sm-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    <Heading className=\\\\\\\\\\\\\\\"px-2 px-sm-0\\\\\\\\\\\\\\\">\\\\\\\\n      {isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} Proposal\\\\\\\\n    </Heading>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.ViewProposalModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: showProposalViewModal,\\\\\\\\n        isEdit: isEditPage,\\\\\\\\n        proposalId: proposalId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmReviewModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          cleanDraft();\\\\\\\\n          onSubmit({ isDraft: false });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onSubmit({ isCancel: true });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 px-2 p-lg-0 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4 d-flex flex-wrap gap-6 w-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-2 w-100 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n                props={{\\\\\\\\n                  accountId: author,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Link RFP (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    \\\\\\\\\\\\\\\"Link this proposal if it is a response to a specific RFP. You can only link to active RFPs in the \\\\\\\\u{201c}Accepting Submission\\\\\\\\u{201d} stage. You can only link to one RFP.\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {LinkRFPComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Select the relevant categories that best align with your\\\\\\\\n                    contribution to the NEAR developer community. Need guidance?\\\\\\\\n                    See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href={FundingDocs}\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Funding Docs\\\\\\\\n                    </a>\\\\\\\\n                    .\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {CategoryDropdown}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Highlight the essence of your proposal in a few words. This will appear on your proposal\\\\\\\\u{2019}s detail page and the main proposal feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {TitleComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Explain your proposal briefly. This is your chance to make a good first impression on the community. Include what needs or goals your work will address, your solution, and the benefit for the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SummaryComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Expand on your summary with any relevant details like your\\\\\\\\n                    contribution timeline, key milestones, team background, and\\\\\\\\n                    a clear breakdown of how the funds will be used. Proposals\\\\\\\\n                    should be simple and clear (e.g. 1 month). For more complex\\\\\\\\n                    projects, treat each milestone as a separate proposal.\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {DescriptionComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\">\\\\\\\\n                {ConsentComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <div>\\\\\\\\n                  {isEditPage && (\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                          </div>\\\\\\\\n                        ),\\\\\\\\n                        onClick: () => setCancelModal(true),\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n                <div\\\\\\\\n                  className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\"\\\\\\\\n                  style={{\\\\\\\\n                    height: isDraftBtnOpen ? \\\\\\\\\\\\\\\"25vh\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"auto\\\\\\\\\\\\\\\",\\\\\\\\n                    alignItems: isDraftBtnOpen ? \\\\\\\\\\\\\\\"flex-start\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                >\\\\\\\\n                  <Link\\\\\\\\n                    to={\\\\\\\\n                      isEditPage\\\\\\\\n                        ? href({\\\\\\\\n                            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                              id: parseInt(id),\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                        : href({\\\\\\\\n                            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                    }\\\\\\\\n                  >\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                        onClick: cleanDraft,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </Link>\\\\\\\\n                  <SubmitBtn />\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-1 w-100 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <CollapsibleContainer noPaddingTop={true} title=\\\\\\\\\\\\\\\"Author Details\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                {ProfileComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n            </div>\\\\\\\\n          </CollapsibleContainer>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Link Proposals (Optional)\\\\\\\\\\\\\\\">\\\\\\\\n              {LinkedProposalsComponent}\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Funding Details\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Recipient NEAR Wallet Address\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Enter the address that will receive the funds. We\\\\\\\\u{2019}ll need this to send a test transaction once your proposal is approved.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {ReceiverAccountComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading={\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Recipient Verification Status\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"custom-tooltip\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-info-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        <span class=\\\\\\\\\\\\\\\"tooltiptext\\\\\\\\\\\\\\\">\\\\\\\\n                          To get approved and receive payments on our platform,\\\\\\\\n                          you must complete KYC/KYB verification using Fractal,\\\\\\\\n                          a trusted identity verification solution. This helps\\\\\\\\n                          others trust transactions with your account. Click\\\\\\\\n                          \\\\\\\\\\\\\\\"Get Verified\\\\\\\\\\\\\\\" to start. <br />\\\\\\\\n                          <br />\\\\\\\\n                          Once verified, your profile will display a badge,\\\\\\\\n                          which is valid for 365 days from the date of your\\\\\\\\n                          verification. You must renew your verification upon\\\\\\\\n                          expiration OR if any of your personal information\\\\\\\\n                          changes.\\\\\\\\n                        </span>\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  }\\\\\\\\n                  description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"border border-1 p-3 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.VerificationStatus`}\\\\\\\\n                      props={{\\\\\\\\n                        receiverAccount: receiverAccount,\\\\\\\\n                        showGetVerifiedBtn: true,\\\\\\\\n                        imageSize: 30,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Total Amount (USD)\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    <>\\\\\\\\n                      Enter the exact amount you are seeking. See\\\\\\\\n                      <a\\\\\\\\n                        href={FundingDocs}\\\\\\\\n                        className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        Funding Documentation\\\\\\\\n                      </a>\\\\\\\\n                      for guidelines.\\\\\\\\n                    </>\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {AmountComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Currency\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Select your preferred currency for receiving funds. Note: The exchange rate for NEAR tokens will be the closing rate at the day of the invoice.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {CurrencyComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.core.lib.contract\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nfunction ensureOtherIsLast(arr) {\\\\\\\\n  const otherIndex = arr.findIndex((item) => item.value === \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  if (otherIndex !== -1) {\\\\\\\\n    const [otherItem] = arr.splice(otherIndex, 1);\\\\\\\\n    arr.push(otherItem);\\\\\\\\n  }\\\\\\\\n  return arr;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getGlobalLabels() {\\\\\\\\n  let labels = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_global_labels\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n  if (labels !== null) {\\\\\\\\n    labels = ensureOtherIsLast(labels);\\\\\\\\n  }\\\\\\\\n  return labels ?? null;\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn {\\\\\\\\n  getGlobalLabels,\\\\\\\\n};\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.ViewRfpModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst isEdit = props.isEdit;\\\\\\\\nconst rfpId = props.rfpId;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.9);\\\\\\\\n  opacity: 0.9;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 30%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">\\\\\\\\n            Your RFP has been successfully {!isEdit ? \\\\\\\\\\\\\\\"published\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"edited\\\\\\\\\\\\\\\"}.\\\\\\\\n          </h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-center mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={linkHref({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\", id: rfpId },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-blue\\\\\\\\\\\\\\\" },\\\\\\\\n                label: \\\\\\\\\\\\\\\"View RFP\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: () => {},\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.WarningModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst onConfirmClick = props.onConfirmClick;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.5);\\\\\\\\n  opacity: 0.4;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Warning: No approved proposal found!</h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n        <ModalContent>\\\\\\\\n          You haven\\\\\\\\\\\\'t approved any proposals linked to the RFP. Please approve a\\\\\\\\n          proposal to proceed to the proposal selection phase.\\\\\\\\n        </ModalContent>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-outline-secondary\\\\\\\\\\\\\\\" },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Dismiss\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onConfirmClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.SimpleMDE\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * iframe embedding a SimpleMDE component\\\\\\\\n * https://github.com/sparksuite/simplemde-markdown-editor\\\\\\\\n */\\\\\\\\n\\\\\\\\nconst data = props.data;\\\\\\\\nconst onChange = props.onChange ?? (() => {});\\\\\\\\nconst onChangeKeyup = props.onChangeKeyup ?? (() => {}); // in case where we want immediate action\\\\\\\\nconst height = props.height ?? \\\\\\\\\\\\\\\"390\\\\\\\\\\\\\\\";\\\\\\\\nconst className = props.className ?? \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\";\\\\\\\\nconst embeddCSS = props.embeddCSS;\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  iframeHeight: height,\\\\\\\\n  message: props.data,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst profilesData = Social.get(\\\\\\\\\\\\\\\"*/profile/name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\nconst followingData = Social.get(\\\\\\\\n  `${context.accountId}/graph/follow/**`,\\\\\\\\n  \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\n// SIMPLEMDE CONFIG //\\\\\\\\nconst fontFamily = props.fontFamily ?? \\\\\\\\\\\\\\\"sans-serif\\\\\\\\\\\\\\\";\\\\\\\\nconst alignToolItems = props.alignToolItems ?? \\\\\\\\\\\\\\\"right\\\\\\\\\\\\\\\";\\\\\\\\nconst placeholder = props.placeholder ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst showAccountAutoComplete = props.showAutoComplete ?? false;\\\\\\\\nconst showProposalIdAutoComplete = props.showProposalIdAutoComplete ?? false;\\\\\\\\nconst showRfpIdAutoComplete = props.showRfpIdAutoComplete ?? false;\\\\\\\\nconst autoFocus = props.autoFocus ?? false;\\\\\\\\n\\\\\\\\nconst proposalQueryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst proposalLink = getLinkUsingCurrentGateway(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=proposal&id=`\\\\\\\\n);\\\\\\\\nconst proposalQuery = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${proposalQueryName}_bool_exp = {}) {\\\\\\\\n${proposalQueryName}(\\\\\\\\n  offset: $offset\\\\\\\\n  limit: $limit\\\\\\\\n  order_by: {proposal_id: desc}\\\\\\\\n  where: $where\\\\\\\\n) {\\\\\\\\n  name\\\\\\\\n  proposal_id\\\\\\\\n}\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst rfpQueryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst rfpQuery = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${rfpQueryName}_bool_exp = {}) {\\\\\\\\n${rfpQueryName}(\\\\\\\\n  offset: $offset\\\\\\\\n  limit: $limit\\\\\\\\n  order_by: {proposal_id: desc}\\\\\\\\n  where: $where\\\\\\\\n) {\\\\\\\\n  rfp_id\\\\\\\\n}\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst code = `\\\\\\\\n<!doctype html>\\\\\\\\n<html>\\\\\\\\n  <head>\\\\\\\\n  <meta charset=\\\\\\\\\\\\\\\"utf-8\\\\\\\\\\\\\\\">\\\\\\\\n  <meta name=\\\\\\\\\\\\\\\"viewport\\\\\\\\\\\\\\\" content=\\\\\\\\\\\\\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\\\\\\\\\\\\\">\\\\\\\\n  <style>\\\\\\\\n  body {  \\\\\\\\n      margin: auto;\\\\\\\\n      font-family: ${fontFamily};\\\\\\\\n      overflow: visible;\\\\\\\\n      font-size:14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    body {\\\\\\\\n      font-size: 12px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item:hover,\\\\\\\\n  .dropdown-item:focus {\\\\\\\\n    background-color:rgb(0, 236, 151) !important;\\\\\\\\n    color:white !important;\\\\\\\\n    outline: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n      text-align: ${alignToolItems};\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n  .CodeMirror {\\\\\\\\n    min-height:200px !important; // for autocomplete to be visble \\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .CodeMirror-scroll {\\\\\\\\n    min-height:200px !important; // for autocomplete to be visble \\\\\\\\n  }\\\\\\\\n\\\\\\\\n  ${embeddCSS}\\\\\\\\n\\\\\\\\n  </style>\\\\\\\\n  <link rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css\\\\\\\\\\\\\\\">\\\\\\\\n  <link rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/highlight.js/latest/styles/github.min.css\\\\\\\\\\\\\\\">\\\\\\\\n  <link href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\\\\\\\\\\\\\\\" rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\">\\\\\\\\n</head>\\\\\\\\n<body>\\\\\\\\n<div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n  <button style=\\\\\\\\\\\\\\\"display: none\\\\\\\\\\\\\\\" type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\" data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n    Dropdown button\\\\\\\\n  </button>\\\\\\\\n\\\\\\\\n  <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"mentiondropdown\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\"position: absolute;\\\\\\\\\\\\\\\">\\\\\\\\n</div>\\\\\\\\n<div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n  <button style=\\\\\\\\\\\\\\\"display: none\\\\\\\\\\\\\\\" type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\" data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n    Dropdown button\\\\\\\\n  </button>\\\\\\\\n  <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"referencedropdown\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\"position: absolute;\\\\\\\\\\\\\\\">\\\\\\\\n</div>\\\\\\\\n</ul>\\\\\\\\n\\\\\\\\n<textarea></textarea>\\\\\\\\n\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script>\\\\\\\\nlet codeMirrorInstance;\\\\\\\\nlet isEditorInitialized = false;\\\\\\\\nlet followingData = {};\\\\\\\\nlet profilesData = {};\\\\\\\\nlet proposalQuery = \\\\\\\\\\\\'\\\\\\\\\\\\';\\\\\\\\nlet proposalLink = \\\\\\\\\\\\'\\\\\\\\\\\\';\\\\\\\\nlet proposalQueryName = \\\\\\\\\\\\'\\\\\\\\\\\\';\\\\\\\\nlet showAccountAutoComplete = ${showAccountAutoComplete};\\\\\\\\nlet showProposalIdAutoComplete = ${showProposalIdAutoComplete};\\\\\\\\nlet showRfpIdAutoComplete = ${showRfpIdAutoComplete}\\\\\\\\n\\\\\\\\nfunction getSuggestedAccounts(term) {\\\\\\\\n  let results = [];\\\\\\\\n\\\\\\\\n  term = (term || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").toLowerCase();\\\\\\\\n  const limit = 5;\\\\\\\\n\\\\\\\\n  const profiles = Object.entries(profilesData);\\\\\\\\n\\\\\\\\n  for (let i = 0; i < profiles.length; i++) {\\\\\\\\n    let score = 0;\\\\\\\\n    const accountId = profiles[i][0];\\\\\\\\n    const accountIdSearch = profiles[i][0].replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").toLowerCase();\\\\\\\\n    const nameSearch = (profiles[i][1]?.profile?.name || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n      .replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n      .toLowerCase();\\\\\\\\n    const accountIdSearchIndex = accountIdSearch.indexOf(term);\\\\\\\\n    const nameSearchIndex = nameSearch.indexOf(term);\\\\\\\\n\\\\\\\\n    if (accountIdSearchIndex > -1 || nameSearchIndex > -1) {\\\\\\\\n      score += 10;\\\\\\\\n\\\\\\\\n      if (accountIdSearchIndex === 0) {\\\\\\\\n        score += 10;\\\\\\\\n      }\\\\\\\\n      if (nameSearchIndex === 0) {\\\\\\\\n        score += 10;\\\\\\\\n      }\\\\\\\\n      if (followingData[accountId] === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n        score += 30;\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      results.push({\\\\\\\\n        accountId,\\\\\\\\n        score,\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  results.sort((a, b) => b.score - a.score);\\\\\\\\n  results = results.slice(0, limit);\\\\\\\\n\\\\\\\\n  return results;\\\\\\\\n}\\\\\\\\n\\\\\\\\nasync function asyncFetch(endpoint, { method, headers, body }) {\\\\\\\\n  try {\\\\\\\\n    const response = await fetch(endpoint, {\\\\\\\\n      method: method,\\\\\\\\n      headers: headers,\\\\\\\\n      body: body\\\\\\\\n    });\\\\\\\\n\\\\\\\\n    if (!response.ok) {\\\\\\\\n      throw new Error(\\\\\\\\\\\\\\\"HTTP error!\\\\\\\\\\\\\\\");\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return await response.json();\\\\\\\\n  } catch (error) {\\\\\\\\n    console.error(\\\\\\\\\\\\'Error fetching data:\\\\\\\\\\\\', error);\\\\\\\\n    throw error;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractNumbers(str) {\\\\\\\\n  let numbers = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  for (let i = 0; i < str.length; i++) {\\\\\\\\n    if (!isNaN(str[i])) {\\\\\\\\n      numbers += str[i];\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return numbers;\\\\\\\\n};\\\\\\\\n\\\\\\\\nasync function getSuggestedProposals(id) {\\\\\\\\n  let results = [];\\\\\\\\n  const variables = {\\\\\\\\n    limit: 5,\\\\\\\\n    offset: 0,\\\\\\\\n    where: {},\\\\\\\\n  };\\\\\\\\n  if (id) {\\\\\\\\n    const proposalId = extractNumbers(id);\\\\\\\\n    if (proposalId) {\\\\\\\\n      variables[\\\\\\\\\\\\\\\"where\\\\\\\\\\\\\\\"] = { proposal_id: { _eq: id } };\\\\\\\\n    } else {\\\\\\\\n      variables[\\\\\\\\\\\\\\\"where\\\\\\\\\\\\\\\"] = { name: { _ilike: \\\\\\\\\\\\\\\"%\\\\\\\\\\\\\\\" + id + \\\\\\\\\\\\\\\"%\\\\\\\\\\\\\\\" } };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  await asyncFetch(\\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co/v1/graphql\\\\\\\\\\\\\\\", {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"polyprogrammist_near\\\\\\\\\\\\\\\" },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: proposalQuery,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\",\\\\\\\\n    }),\\\\\\\\n  })\\\\\\\\n    .then((res) => {\\\\\\\\n      const proposals =\\\\\\\\n        res?.data?.[\\\\\\\\n          proposalQueryName\\\\\\\\n        ];\\\\\\\\n      results = proposals;\\\\\\\\n    })\\\\\\\\n    .catch((error) => {\\\\\\\\n      console.error(error);\\\\\\\\n    });\\\\\\\\n  return results;\\\\\\\\n};\\\\\\\\n\\\\\\\\n// Initializes SimpleMDE element and attaches to text-area\\\\\\\\nconst simplemde = new SimpleMDE({\\\\\\\\n  forceSync: true,\\\\\\\\n  toolbar: [\\\\\\\\n    \\\\\\\\\\\\\\\"heading\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"bold\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"italic\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"|\\\\\\\\\\\\\\\", // adding | creates a divider in the toolbar\\\\\\\\n    \\\\\\\\\\\\\\\"quote\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"link\\\\\\\\\\\\\\\",\\\\\\\\n  ],\\\\\\\\n  placeholder: \\\\\\\\\\\\\\\\`${placeholder}\\\\\\\\\\\\\\\\`,\\\\\\\\n  initialValue: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  insertTexts: {\\\\\\\\n    link: [\\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"]()\\\\\\\\\\\\\\\"],\\\\\\\\n  },\\\\\\\\n  spellChecker: false,\\\\\\\\n  renderingConfig: {\\\\\\\\n\\\\\\\\t\\\\\\\\tsingleLineBreaks: false,\\\\\\\\n\\\\\\\\t\\\\\\\\tcodeSyntaxHighlighting: true,\\\\\\\\n\\\\\\\\t},\\\\\\\\n  autofocus:${autoFocus}\\\\\\\\n});\\\\\\\\n\\\\\\\\ncodeMirrorInstance = simplemde.codemirror;\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Sends message to Widget to update content\\\\\\\\n */\\\\\\\\nconst updateContent = () => {\\\\\\\\n  const content = simplemde.value();\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\", content }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n};\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Sends message to Widget to update iframe height\\\\\\\\n */\\\\\\\\nconst updateIframeHeight = () => {\\\\\\\\n  const iframeHeight = document.body.scrollHeight;\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"resize\\\\\\\\\\\\\\\", height: iframeHeight }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n};\\\\\\\\n\\\\\\\\n// On Change\\\\\\\\nsimplemde.codemirror.on(\\\\\\\\\\\\'blur\\\\\\\\\\\\', () => {\\\\\\\\n  updateContent();\\\\\\\\n});\\\\\\\\n\\\\\\\\nsimplemde.codemirror.on(\\\\\\\\\\\\'keyup\\\\\\\\\\\\', () => {\\\\\\\\n  updateIframeHeight();\\\\\\\\n  const content = simplemde.value();\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"updateOnKeyup\\\\\\\\\\\\\\\", content }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n});\\\\\\\\n\\\\\\\\n\\\\\\\\nif (showAccountAutoComplete) {\\\\\\\\n  let mentionToken;\\\\\\\\n  let mentionCursorStart;\\\\\\\\n  const dropdown = document.getElementById(\\\\\\\\\\\\\\\"mentiondropdown\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keydown\\\\\\\\\\\\\\\", () => {\\\\\\\\n    if (mentionToken && event.key === \\\\\\\\\\\\'ArrowDown\\\\\\\\\\\\') {\\\\\\\\n      dropdown.querySelector(\\\\\\\\\\\\'button\\\\\\\\\\\\').focus();\\\\\\\\n      event.preventDefault();\\\\\\\\n      return false;\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keyup\\\\\\\\\\\\\\\", (cm, event) => {\\\\\\\\n    const cursor = cm.getCursor();\\\\\\\\n    const token = cm.getTokenAt(cursor);\\\\\\\\n\\\\\\\\n    const createMentionDropDownOptions = () => {\\\\\\\\n      const mentionInput = cm.getRange(mentionCursorStart, cursor);\\\\\\\\n      dropdown.innerHTML = getSuggestedAccounts(mentionInput)\\\\\\\\n      .map(\\\\\\\\n        (item) =>\\\\\\\\n          \\\\\\\\\\\\'<li><button class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\\\\\' + item?.accountId + \\\\\\\\\\\\'</button></li>\\\\\\\\\\\\'\\\\\\\\n      )\\\\\\\\n      .join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n      dropdown.querySelectorAll(\\\\\\\\\\\\\\\"li\\\\\\\\\\\\\\\").forEach((li) => {\\\\\\\\n        li.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", () => {\\\\\\\\n          const selectedText = li.textContent.trim();\\\\\\\\n          simplemde.codemirror.replaceRange(selectedText, mentionCursorStart, cursor);\\\\\\\\n          mentionToken = null;\\\\\\\\n          dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n          cm.focus();\\\\\\\\n        });\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    // show dropwdown only when @ is at first place or when there is a space before @\\\\\\\\n      if (!mentionToken && (token.string === \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\" && cursor.ch === 1 || token.string === \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\" && cm.getTokenAt({line:cursor.line, ch: cursor.ch - 1}).string == \\\\\\\\\\\\' \\\\\\\\\\\\')) {\\\\\\\\n        mentionToken = token;\\\\\\\\n        mentionCursorStart = cursor;\\\\\\\\n        // Calculate cursor position relative to the iframe\\\\\\\\\\\\'s viewport\\\\\\\\n        const rect = cm.charCoords(cursor);\\\\\\\\n        const x = rect.left;\\\\\\\\n        const y = rect.bottom;\\\\\\\\n\\\\\\\\n        // Create dropdown with options\\\\\\\\n        dropdown.style.top = y + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n        dropdown.style.left = x + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n        createMentionDropDownOptions();\\\\\\\\n\\\\\\\\n        dropdown.classList.add(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        // Close dropdown on outside click\\\\\\\\n        document.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", function(event) {\\\\\\\\n            if (!dropdown.contains(event.target)) {\\\\\\\\n                mentionToken = null;\\\\\\\\n                dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            }\\\\\\\\n        });\\\\\\\\n    } else if (mentionToken && token.string.match(/[^@a-z0-9.]/)) {\\\\\\\\n        mentionToken = null;\\\\\\\\n        dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n    } else if (mentionToken) {\\\\\\\\n        createMentionDropDownOptions();\\\\\\\\n    }\\\\\\\\n});\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (showProposalIdAutoComplete) {\\\\\\\\n  let proposalId;\\\\\\\\n  let referenceCursorStart;\\\\\\\\n  const dropdown = document.getElementById(\\\\\\\\\\\\\\\"referencedropdown\\\\\\\\\\\\\\\");\\\\\\\\n  const loader = document.createElement(\\\\\\\\\\\\'div\\\\\\\\\\\\');\\\\\\\\n  loader.className = \\\\\\\\\\\\'loader\\\\\\\\\\\\';\\\\\\\\n  loader.textContent = \\\\\\\\\\\\'Loading...\\\\\\\\\\\\';\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keydown\\\\\\\\\\\\\\\", () => {\\\\\\\\n    if (proposalId && event.key === \\\\\\\\\\\\'ArrowDown\\\\\\\\\\\\') {\\\\\\\\n      dropdown.querySelector(\\\\\\\\\\\\'button\\\\\\\\\\\\').focus();\\\\\\\\n      event.preventDefault();\\\\\\\\n      return false;\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keyup\\\\\\\\\\\\\\\", (cm, event) => {\\\\\\\\n    const cursor = cm.getCursor();\\\\\\\\n    const token = cm.getTokenAt(cursor);\\\\\\\\n\\\\\\\\n    const createReferenceDropDownOptions = async () => {\\\\\\\\n      try {\\\\\\\\n        const proposalIdInput = cm.getRange(referenceCursorStart, cursor);\\\\\\\\n        dropdown.innerHTML = \\\\\\\\\\\\'\\\\\\\\\\\\'; // Clear previous content\\\\\\\\n        dropdown.appendChild(loader); // Show loader\\\\\\\\n\\\\\\\\n        const suggestedProposals = await getSuggestedProposals(proposalIdInput);\\\\\\\\n        dropdown.innerHTML = suggestedProposals\\\\\\\\n        .map(\\\\\\\\n          (item) =>\\\\\\\\n            \\\\\\\\\\\\'<li><button class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\\\\\' + \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" + item?.proposal_id + \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" + item.name + \\\\\\\\\\\\'</button></li>\\\\\\\\\\\\'\\\\\\\\n        )\\\\\\\\n        .join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        dropdown.querySelectorAll(\\\\\\\\\\\\\\\"li\\\\\\\\\\\\\\\").forEach((li) => {\\\\\\\\n          li.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", () => {\\\\\\\\n            const selectedText = li.textContent.trim();\\\\\\\\n            const startIndex = selectedText.indexOf(\\\\\\\\\\\\'#\\\\\\\\\\\\') + 1; \\\\\\\\n            const endIndex = selectedText.indexOf(\\\\\\\\\\\\' \\\\\\\\\\\\', startIndex);\\\\\\\\n            const id = endIndex !== -1 ? selectedText.substring(startIndex, endIndex) : selectedText.substring(startIndex);\\\\\\\\n            const link = proposalLink + id;\\\\\\\\n            const adjustedStart = {\\\\\\\\n              line: referenceCursorStart.line,\\\\\\\\n              ch: referenceCursorStart.ch - 1\\\\\\\\n            };\\\\\\\\n            simplemde.codemirror.replaceRange(\\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\" + selectedText + \\\\\\\\\\\\\\\"]\\\\\\\\\\\\\\\" + \\\\\\\\\\\\\\\"(\\\\\\\\\\\\\\\" + link + \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", adjustedStart, cursor);\\\\\\\\n            proposalId = null;\\\\\\\\n            dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            cm.focus();\\\\\\\\n          });\\\\\\\\n        });\\\\\\\\n      } catch (error) {\\\\\\\\n        console.error(\\\\\\\\\\\\'Error fetching data:\\\\\\\\\\\\', error);\\\\\\\\n        // Handle error: Remove loader\\\\\\\\n        dropdown.innerHTML = \\\\\\\\\\\\'\\\\\\\\\\\\'; // Clear previous content\\\\\\\\n      } finally {\\\\\\\\n        // Remove loader\\\\\\\\n        dropdown.removeChild(loader);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // show dropwdown only when there is space before # or it\\\\\\\\\\\\'s first char\\\\\\\\n      if (!proposalId && (token.string === \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" && cursor.ch === 1 || token.string === \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" && cm.getTokenAt({line:cursor.line, ch: cursor.ch - 1}).string == \\\\\\\\\\\\' \\\\\\\\\\\\')) {\\\\\\\\n        proposalId = token;\\\\\\\\n        referenceCursorStart = cursor;\\\\\\\\n        // Calculate cursor position relative to the iframe\\\\\\\\\\\\'s viewport\\\\\\\\n        const rect = cm.charCoords(cursor);\\\\\\\\n        const x = rect.left;\\\\\\\\n        const y = rect.bottom;\\\\\\\\n\\\\\\\\n        // Create dropdown with options\\\\\\\\n        dropdown.style.top = y + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n        dropdown.style.left = x + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n        createReferenceDropDownOptions();\\\\\\\\n\\\\\\\\n        dropdown.classList.add(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        // Close dropdown on outside click\\\\\\\\n        document.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", function(event) {\\\\\\\\n            if (!dropdown.contains(event.target)) {\\\\\\\\n              proposalId = null;\\\\\\\\n                dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            }\\\\\\\\n        });\\\\\\\\n    } else if (proposalId && (token.string.match(/[^#a-z0-9.]/) || !token.string)) {\\\\\\\\n      proposalId = null;\\\\\\\\n      dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n    } else if (proposalId) {\\\\\\\\n      createReferenceDropDownOptions();\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\n}\\\\\\\\n\\\\\\\\nwindow.addEventListener(\\\\\\\\\\\\\\\"message\\\\\\\\\\\\\\\", (event) => {\\\\\\\\n  if (!isEditorInitialized && event.data !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n    simplemde.value(event.data.content);\\\\\\\\n    isEditorInitialized = true;\\\\\\\\n  } else {\\\\\\\\n    if (event.data.handler === \\\\\\\\\\\\'refreshEditor\\\\\\\\\\\\') {\\\\\\\\n      codeMirrorInstance.getDoc().setValue(event.data.content);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  if (event.data.followingData) {\\\\\\\\n    followingData = event.data.followingData;\\\\\\\\n  }\\\\\\\\n  if (event.data.profilesData) {\\\\\\\\n    profilesData = JSON.parse(event.data.profilesData);\\\\\\\\n  }\\\\\\\\n  if (event.data.proposalQuery) {\\\\\\\\n    proposalQuery = event.data.proposalQuery;\\\\\\\\n  }\\\\\\\\n  if (event.data.proposalQueryName) {\\\\\\\\n    proposalQueryName = event.data.proposalQueryName;\\\\\\\\n  }\\\\\\\\n  if (event.data.proposalLink) {\\\\\\\\n    proposalLink = event.data.proposalLink;\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n});\\\\\\\\n</script>\\\\\\\\n</body>\\\\\\\\n</html>\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <iframe\\\\\\\\n    className={className}\\\\\\\\n    style={{\\\\\\\\n      height: `${state.iframeHeight}px`,\\\\\\\\n      maxHeight: \\\\\\\\\\\\\\\"410px\\\\\\\\\\\\\\\",\\\\\\\\n      minHeight: \\\\\\\\\\\\\\\"250px\\\\\\\\\\\\\\\",\\\\\\\\n    }}\\\\\\\\n    srcDoc={code}\\\\\\\\n    message={{\\\\\\\\n      content: props.data?.content ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n      followingData,\\\\\\\\n      profilesData: JSON.stringify(profilesData),\\\\\\\\n      proposalQuery: proposalQuery,\\\\\\\\n      proposalQueryName: proposalQueryName,\\\\\\\\n      handler: props.data.handler,\\\\\\\\n      proposalLink: proposalLink,\\\\\\\\n    }}\\\\\\\\n    onMessage={(e) => {\\\\\\\\n      switch (e.handler) {\\\\\\\\n        case \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            onChange(e.content);\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n        case \\\\\\\\\\\\\\\"resize\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            const offset = 10;\\\\\\\\n            State.update({ iframeHeight: e.height + offset });\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n        case \\\\\\\\\\\\\\\"updateOnKeyup\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            onChangeKeyup(e.content);\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n      }\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Proposal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst accountId = context.accountId;\\\\\\\\n/*\\\\\\\\n  ---props---\\\\\\\\n  props.id: number;\\\\\\\\n  props.timestamp: number; optional\\\\\\\\n  accountId: string\\\\\\\\n  blockHeight:number\\\\\\\\n  */\\\\\\\\n\\\\\\\\nconst DecisionStage = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.REJECTED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .description-box {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .draft-info-container {\\\\\\\\n    background-color: #ecf8fb;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .review-info-container {\\\\\\\\n    background-color: #fef6ee;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-3 {\\\\\\\\n    flex: 3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 20px;\\\\\\\\n    height: 20px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 180px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 135px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 180px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 75px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line-sm {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 70px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:disabled ~ .form-check-label,\\\\\\\\n  .form-check-input[disabled] ~ .form-check-label {\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input {\\\\\\\\n    border-color: black !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-btn {\\\\\\\\n    background-color: #687076;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #03ba16 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-vertical {\\\\\\\\n    border-top: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n    border-bottom: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  button.px-0 {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  red-icon i {\\\\\\\\n    color: red;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  input[type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"] {\\\\\\\\n    min-width: 13px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ProposalContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Text = styled.p`\\\\\\\\n  display: block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 20px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  white-space: nowrap;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 12px;\\\\\\\\n  margin: -6px -6px 6px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinkProfile = ({ account, children }) => {\\\\\\\\n  return (\\\\\\\\n    <Link href={`/near/widget/ProfilePage?accountId=${account}`}>\\\\\\\\n      {children}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst stepsArray = [1, 2, 3, 4, 5];\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\nconst proposal = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    proposal_id: parseInt(id),\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst [snapshotHistory, setSnapshotHistory] = useState([]);\\\\\\\\n\\\\\\\\nconst queryName = PROPOSAL_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n  ${queryName}(\\\\\\\\n    offset: $offset\\\\\\\\n    limit: $limit\\\\\\\\n    order_by: {ts: asc}\\\\\\\\n    where: $where\\\\\\\\n  ) {\\\\\\\\n    editor_id\\\\\\\\n    name\\\\\\\\n    summary\\\\\\\\n    description\\\\\\\\n    ts\\\\\\\\n    proposal_id\\\\\\\\n    timeline\\\\\\\\n    labels\\\\\\\\n    linked_proposals\\\\\\\\n    linked_rfp\\\\\\\\n    requested_sponsorship_usd_amount\\\\\\\\n    requested_sponsorship_paid_in_currency\\\\\\\\n    receiver_account\\\\\\\\n    requested_sponsor\\\\\\\\n    supervisor\\\\\\\\n  }\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst fetchSnapshotHistory = () => {\\\\\\\\n  const variables = {\\\\\\\\n    where: { proposal_id: { _eq: id } },\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const data = result.body.data?.[queryName];\\\\\\\\n        const history = data.map((item) => {\\\\\\\\n          const proposalData = {\\\\\\\\n            ...item,\\\\\\\\n            timestamp: item.ts,\\\\\\\\n            timeline: parseJSON(item.timeline),\\\\\\\\n          };\\\\\\\\n          delete proposalData.ts;\\\\\\\\n          return proposalData;\\\\\\\\n        });\\\\\\\\n        setSnapshotHistory(history);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchSnapshotHistory();\\\\\\\\n}, [id]);\\\\\\\\n\\\\\\\\nif (!proposal) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nif (timestamp && proposal) {\\\\\\\\n  proposal.snapshot =\\\\\\\\n    snapshotHistory.find((item) => item.timestamp === timestamp) ??\\\\\\\\n    proposal.snapshot;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { snapshot } = proposal;\\\\\\\\nsnapshot.timeline = parseJSON(snapshot.timeline);\\\\\\\\n\\\\\\\\nconst authorId = proposal.author_id;\\\\\\\\nconst blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\nconst item = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n  path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\\\\\\\\n  blockHeight,\\\\\\\\n};\\\\\\\\nconst proposalURL = getLinkUsingCurrentGateway(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=proposal&id=${proposal.id}&timestamp=${snapshot.timestamp}`\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SidePanelItem = ({ title, children, hideBorder, ishidden }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ gap: \\\\\\\\\\\\\\\"8px\\\\\\\\\\\\\\\" }}\\\\\\\\n      className={\\\\\\\\n        ishidden\\\\\\\\n          ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"d-flex flex-column pb-3 \\\\\\\\\\\\\\\" + (!hideBorder && \\\\\\\\\\\\\\\" border-bottom\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{title} </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nconst proposalStatusOptions = [\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Draft\\\\\\\\\\\\\\\",\\\\\\\\n    value: { status: PROPOSAL_TIMELINE_STATUS.DRAFT },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Review\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.REVIEW,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved-Conditionally\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Rejected\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.REJECTED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.CANCELED,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Payment-processing\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n      kyc_verified: false,\\\\\\\\n      test_transaction_sent: false,\\\\\\\\n      request_for_trustees_created: false,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Funded\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n      trustees_released_payment: true,\\\\\\\\n      kyc_verified: true,\\\\\\\\n      test_transaction_sent: true,\\\\\\\\n      request_for_trustees_created: true,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst CheckBox = ({ value, isChecked, label, disabled, onClick }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"checkbox\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={!isModerator || !showTimelineSetting || disabled}\\\\\\\\n        onChange={(e) => onClick(e.target.checked)}\\\\\\\\n      />\\\\\\\\n      <label style={{ width: \\\\\\\\\\\\\\\"90%\\\\\\\\\\\\\\\" }} class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">\\\\\\\\n        {label}\\\\\\\\n      </label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst RadioButton = ({ value, isChecked, label }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={true}\\\\\\\\n      />\\\\\\\\n      <label class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isAllowedToEditProposal = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    proposal_id: proposal.id,\\\\\\\\n    editor: accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst editProposal = ({ timeline }) => {\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    name: snapshot.name,\\\\\\\\n    description: snapshot.description,\\\\\\\\n    category: snapshot.category,\\\\\\\\n    summary: snapshot.summary,\\\\\\\\n    linked_proposals: snapshot.linked_proposals,\\\\\\\\n    requested_sponsorship_usd_amount: snapshot.requested_sponsorship_usd_amount,\\\\\\\\n    requested_sponsorship_paid_in_currency:\\\\\\\\n      snapshot.requested_sponsorship_paid_in_currency,\\\\\\\\n    receiver_account: snapshot.receiver_account,\\\\\\\\n    requested_sponsor: snapshot.requested_sponsor,\\\\\\\\n    timeline: timeline,\\\\\\\\n    linked_rfp: snapshot.linked_rfp,\\\\\\\\n    supervisor: supervisor ?? snapshot.supervisor,\\\\\\\\n  };\\\\\\\\n  const args = {\\\\\\\\n    labels: snapshot.linked_rfp ? [] : snapshot.labels,\\\\\\\\n    body: body,\\\\\\\\n    id: proposal.id,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst editProposalStatus = ({ timeline }) => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal_timeline\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: proposal.id,\\\\\\\\n        timeline: timeline,\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\nconst [showTimelineSetting, setShowTimelineSetting] = useState(false);\\\\\\\\nconst proposalStatus = useCallback(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.find(\\\\\\\\n      (i) => i.value.status === snapshot.timeline.status\\\\\\\\n    ),\\\\\\\\n  [snapshot]\\\\\\\\n);\\\\\\\\nconst [updatedProposalStatus, setUpdatedProposalStatus] = useState({});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  setUpdatedProposalStatus({\\\\\\\\n    ...proposalStatus(),\\\\\\\\n    value: { ...proposalStatus().value, ...snapshot.timeline },\\\\\\\\n  });\\\\\\\\n}, [proposal]);\\\\\\\\n\\\\\\\\nconst [paymentHashes, setPaymentHashes] = useState([\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"]);\\\\\\\\nconst [supervisor, setSupervisor] = useState(snapshot.supervisor);\\\\\\\\n\\\\\\\\nconst selectedStatusIndex = useMemo(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.findIndex((i) => {\\\\\\\\n      return updatedProposalStatus.value.status === i.value.status;\\\\\\\\n    }),\\\\\\\\n  [updatedProposalStatus]\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst TimelineItems = ({ title, children, value, values }) => {\\\\\\\\n  const indexOfCurrentItem = proposalStatusOptions.findIndex((i) =>\\\\\\\\n    Array.isArray(values)\\\\\\\\n      ? values.includes(i.value.status)\\\\\\\\n      : value === i.value.status\\\\\\\\n  );\\\\\\\\n  let color = \\\\\\\\\\\\\\\"transparent\\\\\\\\\\\\\\\";\\\\\\\\n  let statusIndex = selectedStatusIndex;\\\\\\\\n\\\\\\\\n  // index 2,3,4,5  is of decision\\\\\\\\n  if (selectedStatusIndex === 3 || selectedStatusIndex === 2) {\\\\\\\\n    statusIndex = 2;\\\\\\\\n  }\\\\\\\\n  if (statusIndex === indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FEF6EE\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  if (\\\\\\\\n    statusIndex > indexOfCurrentItem ||\\\\\\\\n    updatedProposalStatus.value.status === PROPOSAL_TIMELINE_STATUS.FUNDED\\\\\\\\n  ) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#EEFEF0\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // reject\\\\\\\\n  if (statusIndex === 4 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FF7F7F\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // cancelled\\\\\\\\n  if (statusIndex === 5 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"p-2 rounded-3\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        backgroundColor: color,\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 text-black\\\\\\\\\\\\\\\"> {title}</div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst link = href({\\\\\\\\n  widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n  params: {\\\\\\\\n    page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\",\\\\\\\\n    id: proposal.id,\\\\\\\\n    timestamp: timestamp,\\\\\\\\n  },\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst createdDate = snapshotHistory[0]?.timestamp ?? snapshot.timestamp;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmReviewModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[1].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[5].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex px-3 px-lg-0 justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center h3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>{snapshot.name}</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">#{proposal.id}</div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_NEAR}/widget/ShareButton`}\\\\\\\\n          props={{\\\\\\\\n            postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            url: proposalURL,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        {((isAllowedToEditProposal &&\\\\\\\\n          snapshot.timeline.status === PROPOSAL_TIMELINE_STATUS.DRAFT) ||\\\\\\\\n          isModerator) && (\\\\\\\\n          <Link to={link} style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap flex-md-nowrap px-3 px-lg-0 gap-2 align-items-center text-sm pb-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n        props={{\\\\\\\\n          timelineStatus: snapshot.timeline.status,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"w-100 d-flex flex-wrap flex-md-nowrap gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n          <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n        </div>\\\\\\\\n        <div>created on {readableDate(createdDate / 1000000)}</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 full-width-div px-3 px-lg-0\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4\\\\\\\\\\\\\\\">\\\\\\\\n        {snapshot.timeline.status === PROPOSAL_TIMELINE_STATUS.DRAFT &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"draft-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in draft mode and open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  The author can still refine the proposal and build consensus\\\\\\\\n                  before sharing it with sponsors. Click \\\\\\\\u{201c}Ready for review\\\\\\\\u{201d} when\\\\\\\\n                  you want to start the official review process. This will lock\\\\\\\\n                  the editing function, but comments are still open.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    label: \\\\\\\\\\\\\\\"Ready for review\\\\\\\\\\\\\\\",\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setReviewModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        {snapshot.timeline.status === PROPOSAL_TIMELINE_STATUS.REVIEW &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"review-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in review mode and still open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  You can\\\\\\\\u{2019}t edit the proposal, but comments are open. Only\\\\\\\\n                  moderators can make changes. Click \\\\\\\\u{201c}Cancel Proposal\\\\\\\\u{201d} to cancel\\\\\\\\n                  your proposal. This changes the status to Canceled, signaling\\\\\\\\n                  to sponsors that it\\\\\\\\u{2019}s no longer active or relevant.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    label: (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                      </div>\\\\\\\\n                    ),\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"btn-outline-danger btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setCancelModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"my-4\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-6\\\\\\\\\\\\\\\">\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"flex-3 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                  <Widget\\\\\\\\n                    src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n                    props={{\\\\\\\\n                      accountId: authorId,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n                <ProposalContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Header className=\\\\\\\\\\\\\\\"d-flex gap-1 align-items-center p-2 px-3 \\\\\\\\\\\\\\\">\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ maxWidth: \\\\\\\\\\\\\\\"60%\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n                    </div>\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                        props={{\\\\\\\\n                          blockHeight,\\\\\\\\n                          blockTimestamp: createdDate,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      {context.accountId && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                          <Widget\\\\\\\\n                            src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                            props={{\\\\\\\\n                              accountId: authorId,\\\\\\\\n                              blockHeight: blockHeight,\\\\\\\\n                            }}\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </Header>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 p-2 px-3 description-box\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      PROPOSAL CATEGORY\\\\\\\\n                    </div>\\\\\\\\n                    <div>\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n                        props={{\\\\\\\\n                          selected: snapshot.labels,\\\\\\\\n                          disabled: true,\\\\\\\\n                          hideDropdown: true,\\\\\\\\n                          onChange: () => {},\\\\\\\\n                          availableOptions: rfpLabelOptions,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      SUMMARY\\\\\\\\n                    </div>\\\\\\\\n                    <div>{snapshot.summary}</div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n                      DESCRIPTION\\\\\\\\n                    </div>\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n                      props={{ text: snapshot.description }}\\\\\\\\n                    />\\\\\\\\n\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LikeButton`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          proposalId: proposal.id,\\\\\\\\n                          notifyAccountIds: [authorId],\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          showOverlay: false,\\\\\\\\n                          onClick: () => {},\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                        props={{\\\\\\\\n                          url: proposalURL,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                </ProposalContainer>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.CommentsAndLogs`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    id: proposal.id,\\\\\\\\n                    item: item,\\\\\\\\n                    snapshotHistory: snapshotHistory,\\\\\\\\n                    latestSnapshot: snapshot,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div\\\\\\\\n                style={{\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                className=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.ComposeComment`}\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    item: item,\\\\\\\\n                    notifyAccountIds: [authorId],\\\\\\\\n                    proposalId: proposal.id,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 flex-1 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/AccountProfile`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: authorId,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\\\\\\\\"Linked RFP\\\\\\\\\\\\\\\"}\\\\\\\\n                ishidden={!isNumber(snapshot.linked_rfp)}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedRfps`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedRfpIds: [snapshot.linked_rfp],\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"Linked Proposals \\\\\\\\\\\\\\\" + `(${snapshot.linked_proposals.length})`\\\\\\\\n                }\\\\\\\\n                ishidden={!snapshot.linked_proposals.length}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n                  props={{\\\\\\\\n                    linkedProposalIds: snapshot.linked_proposals,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Funding Ask\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"h4 text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {snapshot.requested_sponsorship_usd_amount && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                      <div>\\\\\\\\n                        {parseInt(\\\\\\\\n                          snapshot.requested_sponsorship_usd_amount\\\\\\\\n                        ).toLocaleString()}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        USD\\\\\\\\n                      </div>\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                        Requested in{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        {snapshot.requested_sponsorship_paid_in_currency}\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Wallet Address\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/AccountProfile`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: snapshot.receiver_account,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Verification Status\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.VerificationStatus`}\\\\\\\\n                  props={{\\\\\\\\n                    receiverAccount: snapshot.receiver_account,\\\\\\\\n                    showGetVerifiedBtn:\\\\\\\\n                      accountId === snapshot.receiver_account ||\\\\\\\\n                      accountId === authorId,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title=\\\\\\\\\\\\\\\"Project Coordinator\\\\\\\\\\\\\\\"\\\\\\\\n                ishidden={!snapshot.supervisor}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/AccountProfile`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: snapshot.supervisor,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                hideBorder={true}\\\\\\\\n                title={\\\\\\\\n                  <div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Timeline\\\\\\\\n                      {isModerator && (\\\\\\\\n                        <div onClick={() => setShowTimelineSetting(true)}>\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                    {showTimelineSetting && (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"mt-2 d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <h6 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Proposal Status</h6>\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n                          props={{\\\\\\\\n                            options: proposalStatusOptions,\\\\\\\\n                            selectedValue: updatedProposalStatus,\\\\\\\\n                            onUpdate: (v) => {\\\\\\\\n                              setUpdatedProposalStatus({\\\\\\\\n                                ...v,\\\\\\\\n                                value: {\\\\\\\\n                                  ...v.value,\\\\\\\\n                                  ...updatedProposalStatus.value,\\\\\\\\n                                  status: v.value.status,\\\\\\\\n                                },\\\\\\\\n                              });\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-3 mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n                      {stepsArray.map((_, index) => {\\\\\\\\n                        const indexOfCurrentItem = index;\\\\\\\\n                        let color = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n                        let statusIndex = selectedStatusIndex;\\\\\\\\n                        // index 2,3,4 is of decision\\\\\\\\n                        if (\\\\\\\\n                          selectedStatusIndex === 3 ||\\\\\\\\n                          selectedStatusIndex === 2 ||\\\\\\\\n                          selectedStatusIndex === 4 ||\\\\\\\\n                          selectedStatusIndex === 5\\\\\\\\n                        ) {\\\\\\\\n                          statusIndex = 2;\\\\\\\\n                        }\\\\\\\\n                        if (selectedStatusIndex === 6) {\\\\\\\\n                          statusIndex = 3;\\\\\\\\n                        }\\\\\\\\n                        const current = statusIndex === indexOfCurrentItem;\\\\\\\\n                        const completed =\\\\\\\\n                          statusIndex > indexOfCurrentItem ||\\\\\\\\n                          updatedProposalStatus.value.status ===\\\\\\\\n                            PROPOSAL_TIMELINE_STATUS.FUNDED;\\\\\\\\n                        return (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <div\\\\\\\\n                              className={\\\\\\\\n                                \\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" +\\\\\\\\n                                (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                              }\\\\\\\\n                            >\\\\\\\\n                              {completed && (\\\\\\\\n                                <div\\\\\\\\n                                  className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n                                  style={{ height: \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" }}\\\\\\\\n                                >\\\\\\\\n                                  <i class=\\\\\\\\\\\\\\\"bi bi-check\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                </div>\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n\\\\\\\\n                            {index !== stepsArray.length - 1 && (\\\\\\\\n                              <div\\\\\\\\n                                className={\\\\\\\\n                                  \\\\\\\\\\\\\\\"vertical-line\\\\\\\\\\\\\\\" +\\\\\\\\n                                  (index === stepsArray.length - 2\\\\\\\\n                                    ? \\\\\\\\\\\\\\\"-sm \\\\\\\\\\\\\\\"\\\\\\\\n                                    : \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                                }\\\\\\\\n                              ></div>\\\\\\\\n                            )}\\\\\\\\n                          </div>\\\\\\\\n                        );\\\\\\\\n                      })}\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"1) Draft\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.DRAFT}\\\\\\\\n                      >\\\\\\\\n                        <div>\\\\\\\\n                          Once an author submits a proposal, it is in draft mode\\\\\\\\n                          and open for community comments. The author can still\\\\\\\\n                          make changes to the proposal during this stage and\\\\\\\\n                          submit it for official review when ready.\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"2) Review\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.REVIEW}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          Sponsors who agree to consider the proposal may\\\\\\\\n                          request attestations from work groups.\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  sponsor_requested_review: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor provides feedback or requests reviews\\\\\\\\\\\\\\\"\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .sponsor_requested_review\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Reviewer completes attestations (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  reviewer_completed_attestation: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .reviewer_completed_attestation\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"3) Decision\\\\\\\\\\\\\\\"\\\\\\\\n                        values={[\\\\\\\\n                          PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n                          PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n                          PROPOSAL_TIMELINE_STATUS.REJECTED,\\\\\\\\n                        ]}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <div>Sponsor makes a final decision:</div>\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Approved</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.APPROVED ||\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING ||\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.FUNDED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={\\\\\\\\n                              <>\\\\\\\\n                                <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                                  Approved - Conditional{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                                </div>\\\\\\\\n                                <span>\\\\\\\\n                                  Requires follow up from recipient. Moderators\\\\\\\\n                                  will provide further details.\\\\\\\\n                                </span>\\\\\\\\n                              </>\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Reject\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Rejected</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              PROPOSAL_TIMELINE_STATUS.REJECTED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Canceled</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              PROPOSAL_TIMELINE_STATUS.CANCELED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"4) Payment Processing\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor verifies KYC/KYB\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  kyc_verified: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor confirmed sponsorship and shared funding steps with recipient\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  test_transaction_sent: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"5) Funded\\\\\\\\\\\\\\\"\\\\\\\\n                        value={PROPOSAL_TIMELINE_STATUS.FUNDED}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          {paymentHashes?.length > 1 ? (\\\\\\\\n                            paymentHashes.slice(0, -1).map((link, index) => (\\\\\\\\n                              <a\\\\\\\\n                                key={index}\\\\\\\\n                                href={link}\\\\\\\\n                                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                              >\\\\\\\\n                                Payment Link\\\\\\\\n                                <i className=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                              </a>\\\\\\\\n                            ))\\\\\\\\n                          ) : updatedProposalStatus.value.payouts.length > 0 ? (\\\\\\\\n                            <div>\\\\\\\\n                              {updatedProposalStatus.value.payouts.map(\\\\\\\\n                                (link) => {\\\\\\\\n                                  return (\\\\\\\\n                                    <a\\\\\\\\n                                      href={link}\\\\\\\\n                                      className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                                    >\\\\\\\\n                                      Payment Link\\\\\\\\n                                      <i class=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                    </a>\\\\\\\\n                                  );\\\\\\\\n                                }\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n                          ) : (\\\\\\\\n                            \\\\\\\\\\\\\\\"No Payouts yet\\\\\\\\\\\\\\\"\\\\\\\\n                          )}\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                  {showTimelineSetting && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">\\\\\\\\n                          Project Coordinator\\\\\\\\n                        </label>\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.AccountInput`}\\\\\\\\n                          props={{\\\\\\\\n                            value: supervisor,\\\\\\\\n                            placeholder: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                            onUpdate: setSupervisor,\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                      {updatedProposalStatus.value.status ===\\\\\\\\n                        PROPOSAL_TIMELINE_STATUS.FUNDED && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">Payment Link</label>\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                            {paymentHashes.map((item, index) => (\\\\\\\\n                              <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-between align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                                <Widget\\\\\\\\n                                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n                                  props={{\\\\\\\\n                                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                                    value: item,\\\\\\\\n                                    onChange: (e) => {\\\\\\\\n                                      const updatedHashes = [...paymentHashes];\\\\\\\\n                                      updatedHashes[index] = e.target.value;\\\\\\\\n                                      setPaymentHashes(updatedHashes);\\\\\\\\n                                    },\\\\\\\\n                                    skipPaddingGap: true,\\\\\\\\n                                    placeholder: \\\\\\\\\\\\\\\"Enter URL\\\\\\\\\\\\\\\",\\\\\\\\n                                  }}\\\\\\\\n                                />\\\\\\\\n                                <div style={{ minWidth: 20 }}>\\\\\\\\n                                  {index !== paymentHashes.length - 1 ? (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-trash3 h6\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () => {\\\\\\\\n                                          const updatedHashes = [\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                          ];\\\\\\\\n                                          updatedHashes.splice(index, 1);\\\\\\\\n                                          setPaymentHashes(updatedHashes);\\\\\\\\n                                        },\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  ) : (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"green-btn shadow-none border-0 w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        disabled: !item,\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-plus-lg\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () =>\\\\\\\\n                                          setPaymentHashes([\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                            \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                                          ]),\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  )}\\\\\\\\n                                </div>\\\\\\\\n                              </div>\\\\\\\\n                            ))}\\\\\\\\n                          </div>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end text-sm\\\\\\\\\\\\\\\">\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                            classNames: {\\\\\\\\n                              root: \\\\\\\\\\\\\\\"btn-outline-danger border-0 shadow-none btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              setShowTimelineSetting(false);\\\\\\\\n                              setUpdatedProposalStatus(proposalStatus);\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                        <Widget\\\\\\\\n                          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                            disabled:\\\\\\\\n                              !supervisor &&\\\\\\\\n                              DecisionStage.includes(\\\\\\\\n                                updatedProposalStatus.value.status\\\\\\\\n                              ),\\\\\\\\n                            classNames: { root: \\\\\\\\\\\\\\\"green-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              if (snapshot.supervisor !== supervisor) {\\\\\\\\n                                editProposal({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              } else if (\\\\\\\\n                                updatedProposalStatus.value.status ===\\\\\\\\n                                PROPOSAL_TIMELINE_STATUS.FUNDED\\\\\\\\n                              ) {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: {\\\\\\\\n                                    ...updatedProposalStatus.value,\\\\\\\\n                                    payouts: !paymentHashes[0]\\\\\\\\n                                      ? []\\\\\\\\n                                      : paymentHashes.filter(\\\\\\\\n                                          (item) => item !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                                        ),\\\\\\\\n                                  },\\\\\\\\n                                });\\\\\\\\n                              } else {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              }\\\\\\\\n                              setShowTimelineSetting(false);\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.StageDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst setSelected = props.onStateChange ?? (() => {});\\\\\\\\n\\\\\\\\nconst timelineStatusArray = Object.entries(RFP_TIMELINE_STATUS).map(\\\\\\\\n  ([key, value]) => ({\\\\\\\\n    label: key\\\\\\\\n      .split(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\")\\\\\\\\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\\\\\\\\n      .join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"),\\\\\\\\n    value,\\\\\\\\n  })\\\\\\\\n);\\\\\\\\ntimelineStatusArray.unshift({ label: \\\\\\\\\\\\\\\"All\\\\\\\\\\\\\\\", value: null });\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n      props={{\\\\\\\\n        options: timelineStatusArray,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Timeline\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelected(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.template.AppLayout\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst data = fetch(`https://httpbin.org/headers`);\\\\\\\\nconst gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n// we need fixed positioning for near social and not for org\\\\\\\\nconst ParentContainer = gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\")\\\\\\\\n  ? styled.div`\\\\\\\\n      width: 100%;\\\\\\\\n      min-height: 90vh;\\\\\\\\n      background: #f4f4f4;\\\\\\\\n      padding-bottom: 1rem;\\\\\\\\n    `\\\\\\\\n  : styled.div`\\\\\\\\n      position: fixed;\\\\\\\\n      inset: 73px 0px 0px;\\\\\\\\n      width: 100%;\\\\\\\\n      overflow-y: scroll;\\\\\\\\n      min-height: 90vh;\\\\\\\\n      background: #f4f4f4;\\\\\\\\n    `;\\\\\\\\n\\\\\\\\nconst Theme = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  padding-top: calc(-1 * var(--body-top-padding));\\\\\\\\n  background: #f4f4f4;\\\\\\\\n  .container-xl {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ContentContainer = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst AppHeader = ({ page }) => (\\\\\\\\n  <Widget\\\\\\\\n    src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.organism.Navbar`}\\\\\\\\n    props={{\\\\\\\\n      page: page,\\\\\\\\n      ...props,\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst AppLayout = ({ page, children }) => {\\\\\\\\n  return (\\\\\\\\n    <ParentContainer>\\\\\\\\n      <Theme>\\\\\\\\n        <Container className=\\\\\\\\\\\\\\\"container-xl p-3\\\\\\\\\\\\\\\">\\\\\\\\n          <AppHeader page={page} />\\\\\\\\n          <ContentContainer className=\\\\\\\\\\\\\\\"content-container\\\\\\\\\\\\\\\">\\\\\\\\n            {children}\\\\\\\\n          </ContentContainer>\\\\\\\\n        </Container>\\\\\\\\n      </Theme>\\\\\\\\n    </ParentContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn { AppLayout };\\\\\\\\n\"}, \"near-prpsls-bos.components.admin.moderatorsTab\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { Tile } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/devhub.components.molecule.Tile`\\\\\\\\n) || { Tile: () => <></> };\\\\\\\\n\\\\\\\\nconst { accessControlInfo, createEditTeam } = props;\\\\\\\\n\\\\\\\\nconst [editModerators, setEditModerators] = useState(false);\\\\\\\\nconst [moderators, setModerators] = useState(\\\\\\\\n  accessControlInfo.members_list[\\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\"].children || []\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst handleEditModerators = () => {\\\\\\\\n  createEditTeam({\\\\\\\\n    teamName: \\\\\\\\\\\\\\\"moderators\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"The moderator group has permissions to create and edit RFPs, edit and manage proposals, and manage admins.\\\\\\\\\\\\\\\",\\\\\\\\n    members: moderators,\\\\\\\\n    contractCall: \\\\\\\\\\\\\\\"edit_member\\\\\\\\\\\\\\\",\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleCancelModerators = () => {\\\\\\\\n  setEditModerators(false);\\\\\\\\n  setModerators(accessControlInfo.members_list[\\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\"].children);\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <h3>Moderators</h3>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n      <h6>\\\\\\\\n        The moderator group has permissions to create and edit RFPs, edit and\\\\\\\\n        manage proposals, and manage admins.\\\\\\\\n      </h6>\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.PostControls`}\\\\\\\\n        props={{\\\\\\\\n          icon: \\\\\\\\\\\\\\\"bi bi-gear-wide-connected\\\\\\\\\\\\\\\",\\\\\\\\n          className: \\\\\\\\\\\\\\\"mb-3\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n          title: \\\\\\\\\\\\\\\"Edit members\\\\\\\\\\\\\\\",\\\\\\\\n          onClick: () => setEditModerators(!editModerators),\\\\\\\\n          testId: \\\\\\\\\\\\\\\"edit-members\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n    <Tile className=\\\\\\\\\\\\\\\"p-3\\\\\\\\\\\\\\\" style={{ background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      {editModerators ? (\\\\\\\\n        <>\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.admin.AccountsEditor`}\\\\\\\\n            props={{\\\\\\\\n              data: {\\\\\\\\n                maxLength: 100,\\\\\\\\n                placeholder: \\\\\\\\\\\\\\\"member.near\\\\\\\\\\\\\\\",\\\\\\\\n                list: moderators,\\\\\\\\n              },\\\\\\\\n              setList: setModerators,\\\\\\\\n              // Could add a check to see if it is an valid account id.\\\\\\\\n              validate: (newItem) => true,\\\\\\\\n              invalidate: () => null,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"d-flex align-items-center justify-content-end gap-3 mt-4\\\\\\\\\\\\\\\"\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: {\\\\\\\\n                  root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: handleCancelModerators,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n                icon: {\\\\\\\\n                  type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                  variant: \\\\\\\\\\\\\\\"bi-check-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Submit\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: handleEditModerators,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </>\\\\\\\\n      ) : (\\\\\\\\n        <>\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\">Members</div>\\\\\\\\n          {moderators && (\\\\\\\\n            <div class=\\\\\\\\\\\\\\\"vstack\\\\\\\\\\\\\\\">\\\\\\\\n              {moderators.length ? (\\\\\\\\n                moderators.map((child) => (\\\\\\\\n                  <Tile className=\\\\\\\\\\\\\\\"w-25 p-3 m-1\\\\\\\\\\\\\\\" minHeight={10}>\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.ProfileLine`}\\\\\\\\n                      props={{ accountId: child }}\\\\\\\\n                    />\\\\\\\\n                  </Tile>\\\\\\\\n                ))\\\\\\\\n              ) : (\\\\\\\\n                <div>No moderators</div>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </Tile>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedRfps\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`) || {\\\\\\\\n  href: () => {},\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst linkedRfpIds = props.linkedRfpIds ?? [];\\\\\\\\nconst linkedRfpsData = [];\\\\\\\\n\\\\\\\\nlinkedRfpIds.map((item) => {\\\\\\\\n  const data = Near.view(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n    rfp_id: item,\\\\\\\\n  });\\\\\\\\n  if (data !== null) {\\\\\\\\n    linkedRfpsData.push(data);\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  a {\\\\\\\\n    &:hover {\\\\\\\\n      text-decoration: none !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    {linkedRfpsData.map((item) => {\\\\\\\\n      return (\\\\\\\\n        <a\\\\\\\\n          href={href({\\\\\\\\n            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n            params: {\\\\\\\\n              page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n              id: item.id,\\\\\\\\n            },\\\\\\\\n          })}\\\\\\\\n          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n          rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <img src={RFP_IMAGE} height={40} width={40} />\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\" style={{ maxWidth: 250 }}>\\\\\\\\n              <b className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">{item.snapshot.name}</b>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                created on {readableDate(item.snapshot.timestamp / 1000000)}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </a>\\\\\\\\n      );\\\\\\\\n    })}\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.admin.AccountsEditor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { data, setList, validate, invalidate } = props;\\\\\\\\n\\\\\\\\nconst [newItem, setNewItem] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst handleAddItem = () => {\\\\\\\\n  if (validate(newItem)) {\\\\\\\\n    setList([...data.list, newItem]);\\\\\\\\n    setNewItem(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n  } else {\\\\\\\\n    return invalidate();\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleDeleteItem = (index) => {\\\\\\\\n  const updatedData = [...data.list];\\\\\\\\n  updatedData.splice(index, 1);\\\\\\\\n  setList(updatedData);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Item = styled.div`\\\\\\\\n  padding: 10px;\\\\\\\\n  margin: 5px;\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  flex-direction: row;\\\\\\\\n  gap: 10px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {data.list.map((item, index) => (\\\\\\\\n      <Item key={index}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n            props={{\\\\\\\\n              className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n              value: item,\\\\\\\\n              skipPaddingGap: true,\\\\\\\\n              placeholder: data.placeholder,\\\\\\\\n              inputProps: {\\\\\\\\n                prefix: data.prefix,\\\\\\\\n                disabled: true,\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"btn btn-outline-danger\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() => handleDeleteItem(index)}\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-trash-fill\\\\\\\\\\\\\\\" />\\\\\\\\n        </button>\\\\\\\\n      </Item>\\\\\\\\n    ))}\\\\\\\\n    {data.list.length < data.maxLength && (\\\\\\\\n      <Item>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.AccountInput`}\\\\\\\\n            props={{\\\\\\\\n              onUpdate: (value) => setNewItem(value),\\\\\\\\n              value: newItem,\\\\\\\\n              placeholder: data.placeholder,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"btn btn-success add-member\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={handleAddItem}\\\\\\\\n          disabled={newItem === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n          data-testid=\\\\\\\\\\\\\\\"add-to-list\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-plus\\\\\\\\\\\\\\\" />\\\\\\\\n        </button>\\\\\\\\n      </Item>\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.CommentsAndLogs\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst snapshotHistory = props.snapshotHistory;\\\\\\\\nconst approvedProposals = props.approvedProposals ?? [];\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  .log-line {\\\\\\\\n    position: absolute;\\\\\\\\n    left: 7%;\\\\\\\\n    top: -30px;\\\\\\\\n    bottom: 0;\\\\\\\\n    z-index: 1;\\\\\\\\n    width: 1px;\\\\\\\\n    background-color: var(--bs-border-color);\\\\\\\\n    z-index: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .inline-flex {\\\\\\\\n    display: -webkit-inline-box !important;\\\\\\\\n    align-items: center !important;\\\\\\\\n    gap: 0.25rem !important;\\\\\\\\n    margin-right: 2px;\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommentContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// check snapshot history all keys and values for differences\\\\\\\\nfunction getDifferentKeysWithValues(obj1, obj2) {\\\\\\\\n  return Object.keys(obj1)\\\\\\\\n    .filter((key) => {\\\\\\\\n      if (key !== \\\\\\\\\\\\\\\"editor_id\\\\\\\\\\\\\\\" && obj2.hasOwnProperty(key)) {\\\\\\\\n        const value1 = obj1[key];\\\\\\\\n        const value2 = obj2[key];\\\\\\\\n        if (Array.isArray(value1) && Array.isArray(value2)) {\\\\\\\\n          const sortedValue1 = [...value1].sort();\\\\\\\\n          const sortedValue2 = [...value2].sort();\\\\\\\\n          return JSON.stringify(sortedValue1) !== JSON.stringify(sortedValue2);\\\\\\\\n        } else if (typeof value1 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" && typeof value2 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else {\\\\\\\\n          return value1 !== value2;\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      return false;\\\\\\\\n    })\\\\\\\\n    .map((key) => ({\\\\\\\\n      key,\\\\\\\\n      originalValue: obj1[key],\\\\\\\\n      modifiedValue: obj2[key],\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  data: null,\\\\\\\\n  socialComments: null,\\\\\\\\n  changedKeysListWithValues: null,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction sortTimelineAndComments() {\\\\\\\\n  const comments = Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", props.item);\\\\\\\\n\\\\\\\\n  if (state.changedKeysListWithValues === null) {\\\\\\\\n    const changedKeysListWithValues = snapshotHistory\\\\\\\\n      .slice(1)\\\\\\\\n      .map((item, index) => {\\\\\\\\n        const startingPoint = snapshotHistory[index]; // Set comparison to the previous item\\\\\\\\n        return {\\\\\\\\n          editorId: item.editor_id,\\\\\\\\n          ...getDifferentKeysWithValues(startingPoint, item),\\\\\\\\n        };\\\\\\\\n      });\\\\\\\\n    State.update({ changedKeysListWithValues });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort comments and timeline logs by time\\\\\\\\n  const snapShotTimeStamp = Array.isArray(snapshotHistory)\\\\\\\\n    ? snapshotHistory.map((i) => {\\\\\\\\n        return { blockHeight: null, timestamp: parseFloat(i.timestamp / 1e6) };\\\\\\\\n      })\\\\\\\\n    : [];\\\\\\\\n\\\\\\\\n  const commentsTimeStampPromise = Array.isArray(comments)\\\\\\\\n    ? Promise.all(\\\\\\\\n        comments.map((item) => {\\\\\\\\n          return asyncFetch(\\\\\\\\n            `https://api.near.social/time?blockHeight=${item.blockHeight}`\\\\\\\\n          ).then((res) => {\\\\\\\\n            const timeMs = parseFloat(res.body);\\\\\\\\n            return {\\\\\\\\n              blockHeight: item.blockHeight,\\\\\\\\n              timestamp: timeMs,\\\\\\\\n            };\\\\\\\\n          });\\\\\\\\n        })\\\\\\\\n      ).then((res) => res)\\\\\\\\n    : Promise.resolve([]);\\\\\\\\n\\\\\\\\n  commentsTimeStampPromise.then((commentsTimeStamp) => {\\\\\\\\n    const combinedArray = [...snapShotTimeStamp, ...commentsTimeStamp];\\\\\\\\n    combinedArray.sort((a, b) => a.timestamp - b.timestamp);\\\\\\\\n    State.update({ data: combinedArray, socialComments: comments });\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nif ((snapshotHistory ?? []).length > 0) {\\\\\\\\n  sortTimelineAndComments();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Comment = ({ commentItem }) => {\\\\\\\\n  const { accountId, blockHeight } = commentItem;\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n    blockHeight,\\\\\\\\n  };\\\\\\\\n  const content = JSON.parse(Social.get(item.path, blockHeight) ?? \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n  const link = getLinkUsingCurrentGateway(\\\\\\\\n    `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=rfp&id=${props.id}&accountId=${accountId}&blockHeight=${blockHeight}`\\\\\\\\n  );\\\\\\\\n  function getHighlightCommentStyle() {\\\\\\\\n    const highlightComment =\\\\\\\\n      parseInt(props.blockHeight ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") === blockHeight &&\\\\\\\\n      props.accountId === accountId;\\\\\\\\n\\\\\\\\n    return {\\\\\\\\n      border: highlightComment ? \\\\\\\\\\\\\\\"2px solid black\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div style={{ zIndex: 99, background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n            props={{\\\\\\\\n              accountId: accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <CommentContainer\\\\\\\\n          style={getHighlightCommentStyle()}\\\\\\\\n          className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Header className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <Link href={`/near/widget/ProfilePage?accountId=${accountId}`}>\\\\\\\\n                <span className=\\\\\\\\\\\\\\\"fw-bold text-black\\\\\\\\\\\\\\\">{accountId}</span>\\\\\\\\n              </Link>\\\\\\\\n              commented \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight: blockHeight,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: accountId,\\\\\\\\n                    blockHeight: blockHeight,\\\\\\\\n                    contentPath: `/post/comment`,\\\\\\\\n                    contentType: \\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </Header>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n              props={{\\\\\\\\n                text: content.text,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LikeButton`}\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                props={{\\\\\\\\n                  url: link,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </CommentContainer>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction capitalizeFirstLetter(string) {\\\\\\\\n  const updated = string.replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n  return updated.charAt(0).toUpperCase() + updated.slice(1).toLowerCase();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction parseTimelineKeyAndValue(timeline, originalValue, modifiedValue) {\\\\\\\\n  const oldValue = originalValue[timeline];\\\\\\\\n  const newValue = modifiedValue[timeline];\\\\\\\\n  switch (timeline) {\\\\\\\\n    case \\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\":\\\\\\\\n      if (newValue === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED) {\\\\\\\\n        return (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved RFP to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            \\\\\\\\u{ff65} selected proposal(s) are{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            {approvedProposals.map((i, index) => (\\\\\\\\n              <span>\\\\\\\\n                <LinkToProposal id={i.proposal_id}>\\\\\\\\n                  {\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                  #{i.proposal_id} {i.name}\\\\\\\\n                </LinkToProposal>\\\\\\\\n                {index < approvedProposals.length - 1 && \\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"}\\\\\\\\n              </span>\\\\\\\\n            ))}\\\\\\\\n          </span>\\\\\\\\n        );\\\\\\\\n      }\\\\\\\\n      return (\\\\\\\\n        oldValue !== newValue && (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved RFP from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: oldValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            stage\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccountProfile = ({ accountId }) => {\\\\\\\\n  return (\\\\\\\\n    <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n        props={{\\\\\\\\n          accountId: accountId,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n          showAccountId: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </span>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction symmetricDifference(arr1, arr2) {\\\\\\\\n  const diffA = arr1.filter((item) => !arr2.includes(item));\\\\\\\\n  const diffB = arr2.filter((item) => !arr1.includes(item));\\\\\\\\n  return [...diffA, ...diffB];\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst LinkToProposal = ({ id, children }) => {\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n          id: id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      {children}\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst parseProposalKeyAndValue = (key, modifiedValue, originalValue) => {\\\\\\\\n  switch (key) {\\\\\\\\n    case \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed title</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"summary\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed {key}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed labels to {(modifiedValue ?? []).join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\": {\\\\\\\\n      const newProposals = modifiedValue || [];\\\\\\\\n      const oldProposals = originalValue || [];\\\\\\\\n      const difference = symmetricDifference(oldProposals, newProposals).join(\\\\\\\\n        \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n\\\\\\\\n      const isUnlinked = oldProposals.length > newProposals.length;\\\\\\\\n      const actionText = isUnlinked\\\\\\\\n        ? \\\\\\\\\\\\\\\"unlinked a proposal\\\\\\\\\\\\\\\"\\\\\\\\n        : \\\\\\\\\\\\\\\"linked a proposal\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          {actionText}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <LinkToProposal id={difference}> #{difference}</LinkToProposal>\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\": {\\\\\\\\n      const modifiedKeys = Object.keys(modifiedValue);\\\\\\\\n      const originalKeys = Object.keys(originalValue);\\\\\\\\n      return modifiedKeys.map((i, index) => {\\\\\\\\n        const text = parseTimelineKeyAndValue(i, originalValue, modifiedValue);\\\\\\\\n        return (\\\\\\\\n          text && (\\\\\\\\n            <span key={index} className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              {text}\\\\\\\\n              {text &&\\\\\\\\n                originalKeys.length > 1 &&\\\\\\\\n                index < modifiedKeys.length - 1 &&\\\\\\\\n                \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LogIconContainer = styled.div`\\\\\\\\n  margin-left: 50px;\\\\\\\\n  z-index: 99;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin-left: 10px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Log = ({ timestamp }) => {\\\\\\\\n  const updatedData = useMemo(\\\\\\\\n    () =>\\\\\\\\n      state.changedKeysListWithValues.find((obj) =>\\\\\\\\n        Object.values(obj).some(\\\\\\\\n          (value) =>\\\\\\\\n            value && parseFloat(value.modifiedValue / 1e6) === timestamp\\\\\\\\n        )\\\\\\\\n      ),\\\\\\\\n    [state.changedKeysListWithValues, timestamp]\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const editorId = updatedData.editorId;\\\\\\\\n  const valuesArray = Object.values(updatedData ?? {});\\\\\\\\n  // if valuesArray length is 2 that means it only has timestamp and editorId\\\\\\\\n  if (!updatedData || valuesArray.length === 2) {\\\\\\\\n    return <></>;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return valuesArray.map((i, index) => {\\\\\\\\n    if (i.key && i.key !== \\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\\") {\\\\\\\\n      return (\\\\\\\\n        <LogIconContainer\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          key={index}\\\\\\\\n        >\\\\\\\\n          <img\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiffqrxdi4xqu7erf46gdlwuodt6dm6rji2jtixs3iionjvga6rhdi\\\\\\\\\\\\\\\"\\\\\\\\n            height={30}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"flex-1 gap-1 w-100 text-wrap text-muted align-items-center \\\\\\\\\\\\\\\" +\\\\\\\\n              (i.key === \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" &&\\\\\\\\n              Object.keys(i.originalValue ?? {}).length > 1\\\\\\\\n                ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                : \\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n              <AccountProfile accountId={editorId} showAccountId={true} />\\\\\\\\n            </span>\\\\\\\\n            {parseProposalKeyAndValue(i.key, i.modifiedValue, i.originalValue)}\\\\\\\\n            \\\\\\\\u{ff65}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n              props={{\\\\\\\\n                blockTimestamp: timestamp * 1000000,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </LogIconContainer>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (Array.isArray(state.data)) {\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"log-line\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ height: state.data.length > 2 ? \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"150%\\\\\\\\\\\\\\\" }}\\\\\\\\n      ></div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n        {state.data.map((i, index) => {\\\\\\\\n          if (i.blockHeight) {\\\\\\\\n            const item = state.socialComments.find(\\\\\\\\n              (t) => t.blockHeight === i.blockHeight\\\\\\\\n            );\\\\\\\\n            return <Comment commentItem={item} />;\\\\\\\\n          } else {\\\\\\\\n            return <Log timestamp={i.timestamp} key={index} />;\\\\\\\\n          }\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.AccountInput\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst value = props.value;\\\\\\\\nconst placeholder = props.placeholder;\\\\\\\\nconst onUpdate = props.onUpdate;\\\\\\\\n\\\\\\\\nconst [account, setAccount] = useState(value);\\\\\\\\nconst [showAccountAutocomplete, setAutoComplete] = useState(false);\\\\\\\\nconst [isValidAccount, setValidAccount] = useState(true);\\\\\\\\nconst AutoComplete = styled.div`\\\\\\\\n  margin-top: 1rem;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (value !== account) {\\\\\\\\n    setAccount(value);\\\\\\\\n  }\\\\\\\\n}, [value]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (value !== account) {\\\\\\\\n    onUpdate(account);\\\\\\\\n  }\\\\\\\\n}, [account]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    const valid = account.length === 64 || (account ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").includes(\\\\\\\\\\\\\\\".near\\\\\\\\\\\\\\\");\\\\\\\\n    setValidAccount(valid);\\\\\\\\n    setAutoComplete(!valid);\\\\\\\\n  }, 100);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [account]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: account,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          setAccount(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        placeholder: placeholder,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 64,\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    {account && !isValidAccount && (\\\\\\\\n      <div style={{ color: \\\\\\\\\\\\\\\"red\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"text-sm mt-1\\\\\\\\\\\\\\\">\\\\\\\\n        Please enter valid account ID\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n    {showAccountAutocomplete && (\\\\\\\\n      <AutoComplete>\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.AccountAutocomplete`}\\\\\\\\n          props={{\\\\\\\\n            term: account,\\\\\\\\n            onSelect: (id) => {\\\\\\\\n              setAccount(id);\\\\\\\\n              setAutoComplete(false);\\\\\\\\n            },\\\\\\\\n            onClose: () => setAutoComplete(false),\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </AutoComplete>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.FilterByLabel\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst availableOptions = props.availableOptions;\\\\\\\\nconst options =\\\\\\\\n  (availableOptions ?? []).map((i) => {\\\\\\\\n    return { label: i.title, value: i.value };\\\\\\\\n  }) ?? [];\\\\\\\\noptions.unshift({ label: \\\\\\\\\\\\\\\"All\\\\\\\\\\\\\\\", value: null });\\\\\\\\nconst setSelected = props.onStateChange ?? (() => {});\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n      props={{\\\\\\\\n        options: options,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelected(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.ComposeComment\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst proposalId = props.proposalId;\\\\\\\\nconst rfpId = props.rfpId;\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_COMMENT_DRAFT\\\\\\\\\\\\\\\" + proposalId;\\\\\\\\nlet draftComment = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst ComposeEmbeddCSS = `\\\\\\\\n  .CodeMirror {\\\\\\\\n    border: none !important;\\\\\\\\n    min-height: 50px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .CodeMirror-scroll{\\\\\\\\n    min-height: 50px !important;\\\\\\\\n    max-height: 300px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst notifyAccountIds = props.notifyAccountIds ?? [];\\\\\\\\nconst accountId = context.accountId;\\\\\\\\nconst item = props.item;\\\\\\\\nconst [allowGetDraft, setAllowGetDraft] = useState(true);\\\\\\\\nconst [comment, setComment] = useState(null);\\\\\\\\nconst [isTxnCreated, setTxnCreated] = useState(false);\\\\\\\\nconst [handler, setHandler] = useState(\\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\"); // to update editor state on draft and txn approval\\\\\\\\nconst [showCommentToast, setCommentToast] = useState(false);\\\\\\\\n\\\\\\\\nif (allowGetDraft) {\\\\\\\\n  draftComment = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (draftComment) {\\\\\\\\n    setComment(draftComment);\\\\\\\\n    setAllowGetDraft(false);\\\\\\\\n    setHandler(\\\\\\\\\\\\\\\"refreshEditor\\\\\\\\\\\\\\\");\\\\\\\\n  }\\\\\\\\n}, [draftComment]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (draftComment === comment) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, comment);\\\\\\\\n  }, 1000);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [comment]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (handler === \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\") {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setHandler(\\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\");\\\\\\\\n  }, 3000);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [handler]);\\\\\\\\n\\\\\\\\nif (!accountId) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{\\\\\\\\n        marginLeft: 10,\\\\\\\\n        backgroundColor: \\\\\\\\\\\\\\\"#ECF8FB\\\\\\\\\\\\\\\",\\\\\\\\n        border: \\\\\\\\\\\\\\\"1px solid #E2E6EC\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1 p-4 rounded-2 flex-wrap flex-md-nowrap\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Link to=\\\\\\\\\\\\\\\"https://near.org/signup\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n          props={{\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"grey-btn\\\\\\\\\\\\\\\" },\\\\\\\\n            label: \\\\\\\\\\\\\\\"Sign up\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </Link>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">to join this conversation.</div>\\\\\\\\n      <div>Already have an account?</div>\\\\\\\\n      <a className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://near.org/signin\\\\\\\\\\\\\\\">\\\\\\\\n        Log in to comment\\\\\\\\n      </a>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractMentions(text) {\\\\\\\\n  const mentionRegex =\\\\\\\\n    /@((?:(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+\\\\\\\\\\\\\\\\.)*(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+)/gi;\\\\\\\\n  mentionRegex.lastIndex = 0;\\\\\\\\n  const accountIds = new Set();\\\\\\\\n  for (const match of text.matchAll(mentionRegex)) {\\\\\\\\n    if (\\\\\\\\n      !/[\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index - 1)) &&\\\\\\\\n      !/[/\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index + match[0].length)) &&\\\\\\\\n      match[1].length >= 2 &&\\\\\\\\n      match[1].length <= 64\\\\\\\\n    ) {\\\\\\\\n      accountIds.add(match[1].toLowerCase());\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return [...accountIds];\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractTagNotifications(text, item) {\\\\\\\\n  return extractMentions(text || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n    .filter((accountId) => accountId !== context.accountId)\\\\\\\\n    .map((accountId) => ({\\\\\\\\n      key: accountId,\\\\\\\\n      value: {\\\\\\\\n        type: \\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\n        item,\\\\\\\\n      },\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction composeData() {\\\\\\\\n  setTxnCreated(true);\\\\\\\\n  const data = {\\\\\\\\n    post: {\\\\\\\\n      comment: JSON.stringify({\\\\\\\\n        type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n        text: comment,\\\\\\\\n        item,\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n    index: {\\\\\\\\n      comment: JSON.stringify({\\\\\\\\n        key: item,\\\\\\\\n        value: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const notifications = extractTagNotifications(comment, {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  if (notifyAccountIds.length > 0) {\\\\\\\\n    notifyAccountIds.map((account) => {\\\\\\\\n      if (account !== context.accountId) {\\\\\\\\n        notifications.push({\\\\\\\\n          key: account,\\\\\\\\n          value: proposalId\\\\\\\\n            ? {\\\\\\\\n                type: \\\\\\\\\\\\\\\"devhub/reply\\\\\\\\\\\\\\\",\\\\\\\\n                item,\\\\\\\\n                proposal: proposalId,\\\\\\\\n              }\\\\\\\\n            : {\\\\\\\\n                type: \\\\\\\\\\\\\\\"devhub/reply\\\\\\\\\\\\\\\",\\\\\\\\n                item,\\\\\\\\n                rfpId: rfpId,\\\\\\\\n              },\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (notifications.length) {\\\\\\\\n    data.index.notify = JSON.stringify(\\\\\\\\n      notifications.length > 1 ? notifications : notifications[0]\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Social.set(data, {\\\\\\\\n    force: true,\\\\\\\\n    onCommit: () => {\\\\\\\\n      setCommentToast(true);\\\\\\\\n      setComment(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n      setHandler(\\\\\\\\\\\\\\\"refreshEditor\\\\\\\\\\\\\\\");\\\\\\\\n      setTxnCreated(false);\\\\\\\\n    },\\\\\\\\n    onCancel: () => {\\\\\\\\n      setTxnCreated(false);\\\\\\\\n    },\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes && comment) {\\\\\\\\n    setComment(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"comment-btn-spinner spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Compose = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: comment,\\\\\\\\n        onChangeKeyup: setComment,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Add your comment here...\\\\\\\\\\\\\\\",\\\\\\\\n        height: \\\\\\\\\\\\\\\"250\\\\\\\\\\\\\\\",\\\\\\\\n        embeddCSS: ComposeEmbeddCSS,\\\\\\\\n        handler: handler,\\\\\\\\n        showProposalIdAutoComplete: true,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftComment, handler]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_NEAR}/widget/DIG.Toast`}\\\\\\\\n      props={{\\\\\\\\n        title: \\\\\\\\\\\\\\\"Comment Submitted Successfully\\\\\\\\\\\\\\\",\\\\\\\\n        type: \\\\\\\\\\\\\\\"success\\\\\\\\\\\\\\\",\\\\\\\\n        open: showCommentToast,\\\\\\\\n        onOpenChange: (v) => setCommentToast(v),\\\\\\\\n        trigger: <></>,\\\\\\\\n        providerProps: { duration: 3000 },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n      props={{\\\\\\\\n        accountId: accountId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"mt-1\\\\\\\\\\\\\\\">Add a comment</b>\\\\\\\\n      {Compose}\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-content-center justify-content-end\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n          props={{\\\\\\\\n            label: isTxnCreated ? LoadingButtonSpinner : \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n            [\\\\\\\\\\\\\\\"data-testid\\\\\\\\\\\\\\\"]: \\\\\\\\\\\\\\\"compose-comment\\\\\\\\\\\\\\\",\\\\\\\\n            disabled: !comment || isTxnCreated,\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"green-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n            onClick: () => {\\\\\\\\n              composeData();\\\\\\\\n            },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.NavbarDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst title = props.title;\\\\\\\\nconst links = props.links;\\\\\\\\nconst href = props.href;\\\\\\\\n\\\\\\\\nconst [showMenu, setShowMenu] = useState(false);\\\\\\\\n\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst Dropdown = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: center;\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    &.active {\\\\\\\\n      color: #fff;\\\\\\\\n\\\\\\\\n      &:hover {\\\\\\\\n        text-decoration: none;\\\\\\\\n        color: #096d50 !important;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst DropdownMenu = styled.div`\\\\\\\\n  z-index: 50;\\\\\\\\n  position: absolute;\\\\\\\\n  top: 2.25rem;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    padding: 0.5rem 1rem;\\\\\\\\n    padding-top: 1rem;\\\\\\\\n    border-radius: 1rem;\\\\\\\\n    background: rgba(217, 217, 217, 0.7);\\\\\\\\n    backdrop-filter: blur(5px);\\\\\\\\n    width: max-content;\\\\\\\\n    animation: slide-down 300ms ease;\\\\\\\\n    transform-origin: top center;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @keyframes slide-down {\\\\\\\\n    0% {\\\\\\\\n      transform: scaleY(0);\\\\\\\\n    }\\\\\\\\n    100% {\\\\\\\\n      transform: scaleY(1);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst DropdownLink = styled.div`\\\\\\\\n  color: inherit;\\\\\\\\n  text-decoration: none;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    color: #555555;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n    color: #096d50 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Dropdown\\\\\\\\n    onMouseEnter={() => setShowMenu(true)}\\\\\\\\n    onMouseLeave={() => setShowMenu(false)}\\\\\\\\n  >\\\\\\\\n    {href ? (\\\\\\\\n      <DropdownLink className={href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"} href={href}>\\\\\\\\n        <Link\\\\\\\\n          style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n          to={linkHref({\\\\\\\\n            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n            params: { page: href },\\\\\\\\n          })}\\\\\\\\n        >\\\\\\\\n          {title}\\\\\\\\n        </Link>\\\\\\\\n      </DropdownLink>\\\\\\\\n    ) : (\\\\\\\\n      <p className={`m-0 py-2 nav-dropdown`} style={{ cursor: \\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {title} \\\\\\\\u{2193}\\\\\\\\n      </p>\\\\\\\\n    )}\\\\\\\\n    {showMenu && links.length !== 0 && (\\\\\\\\n      <DropdownMenu className={`${showMenu && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}`}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n          {links.map((link) => (\\\\\\\\n            // Check if the link is external\\\\\\\\n            <DropdownLink\\\\\\\\n              className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n              key={`${link.title}-${link.href}`}\\\\\\\\n            >\\\\\\\\n              {link.href.startsWith(\\\\\\\\\\\\\\\"http://\\\\\\\\\\\\\\\") ||\\\\\\\\n              link.href.startsWith(\\\\\\\\\\\\\\\"https://\\\\\\\\\\\\\\\") ? (\\\\\\\\n                // External link: Render an <a> tag\\\\\\\\n                <a\\\\\\\\n                  href={link.href}\\\\\\\\n                  style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n                  target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {link.title}\\\\\\\\n                </a>\\\\\\\\n              ) : (\\\\\\\\n                // Internal link: Render the <Link> component\\\\\\\\n                <Link\\\\\\\\n                  style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n                  to={linkHref({\\\\\\\\n                    widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                    params: { page: link.href },\\\\\\\\n                  })}\\\\\\\\n                >\\\\\\\\n                  {link.title}\\\\\\\\n                </Link>\\\\\\\\n              )}\\\\\\\\n            </DropdownLink>\\\\\\\\n          ))}\\\\\\\\n        </div>\\\\\\\\n      </DropdownMenu>\\\\\\\\n    )}\\\\\\\\n  </Dropdown>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.ConfirmCancelModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst onCancelClick = props.onCancelClick;\\\\\\\\nconst onConfirmClick = props.onConfirmClick;\\\\\\\\nconst linkedProposalIds = props.linkedProposalIds;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background: rgb(244, 244, 244) !important;\\\\\\\\n    max-height: 300px;\\\\\\\\n    overflow-y: auto;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.5);\\\\\\\\n  opacity: 0.4;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst [proposalStatus, setProposalStatus] = useState(null);\\\\\\\\n\\\\\\\\nconst OptionForm = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 pl-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n        props={{\\\\\\\\n          value: CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS,\\\\\\\\n          label: (\\\\\\\\n            <div>\\\\\\\\n              <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Option 1: </span>Cancel all linked\\\\\\\\n              proposals\\\\\\\\n            </div>\\\\\\\\n          ),\\\\\\\\n          isChecked: proposalStatus === CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS,\\\\\\\\n          onClick: (v) => {\\\\\\\\n            if (v) {\\\\\\\\n              setProposalStatus(CANCEL_RFP_OPTIONS.CANCEL_PROPOSALS);\\\\\\\\n            }\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n        props={{\\\\\\\\n          value: CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS,\\\\\\\\n          label: (\\\\\\\\n            <div>\\\\\\\\n              <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Option 2: </span> Unlink all linked\\\\\\\\n              proposals (maintain their status)\\\\\\\\n            </div>\\\\\\\\n          ),\\\\\\\\n          isChecked: proposalStatus === CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS,\\\\\\\\n          onClick: (v) => {\\\\\\\\n            if (v) {\\\\\\\\n              setProposalStatus(CANCEL_RFP_OPTIONS.UNLINK_PROPOSALS);\\\\\\\\n            }\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n        props={{\\\\\\\\n          value: CANCEL_RFP_OPTIONS.NONE,\\\\\\\\n          label: (\\\\\\\\n            <div>\\\\\\\\n              <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Option 3: </span> Leave all linked\\\\\\\\n              proposals as they are\\\\\\\\n            </div>\\\\\\\\n          ),\\\\\\\\n          isChecked: proposalStatus === CANCEL_RFP_OPTIONS.NONE,\\\\\\\\n          onClick: (v) => {\\\\\\\\n            if (v) {\\\\\\\\n              setProposalStatus(CANCEL_RFP_OPTIONS.NONE);\\\\\\\\n            }\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [proposalStatus]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Are you sure you want to cancel this RFP?</h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n        <ModalContent className=\\\\\\\\\\\\\\\"text-muted d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n          The RFP status will change to \\\\\\\\u{201c}Cancelled\\\\\\\\u{201d} and it will no longer be\\\\\\\\n          active or relevant. Comments will remain open.\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"bg-grey d-flex flex-column p-3 rounded-1 text-black\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"h6\\\\\\\\\\\\\\\">\\\\\\\\n              Linked Proposals ({linkedProposalIds.length})\\\\\\\\n            </div>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposals`}\\\\\\\\n              props={{\\\\\\\\n                linkedProposalIds: linkedProposalIds,\\\\\\\\n                showStatus: true,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"text-muted d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-lg\\\\\\\\\\\\\\\">\\\\\\\\n              What would you like to do with the linked proposals?\\\\\\\\n            </div>\\\\\\\\n            {OptionForm}\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"text-sm mt-2\\\\\\\\\\\\\\\">\\\\\\\\n            Note: To take specific actions on individual proposals, please\\\\\\\\n            manage them from their respective pages.\\\\\\\\n          </div>\\\\\\\\n        </ModalContent>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-outline-secondary\\\\\\\\\\\\\\\" },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onCancelClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-danger\\\\\\\\\\\\\\\" },\\\\\\\\n              disabled: !proposalStatus,\\\\\\\\n              label: \\\\\\\\\\\\\\\"Ready to Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: () => onConfirmClick(proposalStatus),\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedProposals\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`) || {\\\\\\\\n  href: () => {},\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/core.lib.common`\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst linkedProposalIds = props.linkedProposalIds ?? [];\\\\\\\\nconst linkedProposalsData = [];\\\\\\\\nconst showStatus = props.showStatus ?? false;\\\\\\\\n\\\\\\\\n// using contract instead of indexer, since indexer doesn\\\\\\\\\\\\'t return timestamp\\\\\\\\nlinkedProposalIds.map((item) => {\\\\\\\\n  const data = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id: item,\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n  if (data !== null) {\\\\\\\\n    linkedProposalsData.push(data);\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  a {\\\\\\\\n    &:hover {\\\\\\\\n      text-decoration: none !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    {linkedProposalsData.map((item) => {\\\\\\\\n      return (\\\\\\\\n        <a\\\\\\\\n          href={href({\\\\\\\\n            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n            params: {\\\\\\\\n              page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n              id: item.id,\\\\\\\\n            },\\\\\\\\n          })}\\\\\\\\n          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n          rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n              props={{\\\\\\\\n                accountId: item.snapshot.editor_id,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\" style={{ maxWidth: 250 }}>\\\\\\\\n              <b className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">{item.snapshot.name}</b>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                created on {readableDate(item.snapshot.timestamp / 1000000)}\\\\\\\\n              </div>\\\\\\\\n              {showStatus && (\\\\\\\\n                <div style={{ width: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"mt-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Widget\\\\\\\\n                    src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n                    props={{\\\\\\\\n                      timelineStatus: item.snapshot.timeline.status,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </a>\\\\\\\\n      );\\\\\\\\n    })}\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.CommentsAndLogs\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst snapshotHistory = props.snapshotHistory;\\\\\\\\nconst latestSnapshot = props.latestSnapshot;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  .log-line {\\\\\\\\n    position: absolute;\\\\\\\\n    left: 7%;\\\\\\\\n    top: -30px;\\\\\\\\n    bottom: 0;\\\\\\\\n    z-index: 1;\\\\\\\\n    width: 1px;\\\\\\\\n    background-color: var(--bs-border-color);\\\\\\\\n    z-index: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .inline-flex {\\\\\\\\n    display: -webkit-inline-box !important;\\\\\\\\n    align-items: center !important;\\\\\\\\n    gap: 0.25rem !important;\\\\\\\\n    margin-right: 2px;\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommentContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// check snapshot history all keys and values for differences\\\\\\\\nfunction getDifferentKeysWithValues(obj1, obj2) {\\\\\\\\n  return Object.keys(obj1)\\\\\\\\n    .filter((key) => {\\\\\\\\n      if (key !== \\\\\\\\\\\\\\\"editor_id\\\\\\\\\\\\\\\" && obj2.hasOwnProperty(key)) {\\\\\\\\n        const value1 = obj1[key];\\\\\\\\n        const value2 = obj2[key];\\\\\\\\n        if (Array.isArray(value1) && Array.isArray(value2)) {\\\\\\\\n          const sortedValue1 = [...value1].sort();\\\\\\\\n          const sortedValue2 = [...value2].sort();\\\\\\\\n          return JSON.stringify(sortedValue1) !== JSON.stringify(sortedValue2);\\\\\\\\n        } else if (typeof value1 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" && typeof value2 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else {\\\\\\\\n          return value1 !== value2;\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      return false;\\\\\\\\n    })\\\\\\\\n    .map((key) => ({\\\\\\\\n      key,\\\\\\\\n      originalValue: obj1[key],\\\\\\\\n      modifiedValue: obj2[key],\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  data: null,\\\\\\\\n  socialComments: null,\\\\\\\\n  changedKeysListWithValues: null,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction sortTimelineAndComments() {\\\\\\\\n  const comments = Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", props.item, { subscribe: true });\\\\\\\\n\\\\\\\\n  if (state.changedKeysListWithValues === null) {\\\\\\\\n    const changedKeysListWithValues = snapshotHistory\\\\\\\\n      .slice(1)\\\\\\\\n      .map((item, index) => {\\\\\\\\n        const startingPoint = snapshotHistory[index]; // Set comparison to the previous item\\\\\\\\n        return {\\\\\\\\n          editorId: item.editor_id,\\\\\\\\n          ...getDifferentKeysWithValues(startingPoint, item),\\\\\\\\n        };\\\\\\\\n      });\\\\\\\\n    State.update({ changedKeysListWithValues });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort comments and timeline logs by time\\\\\\\\n  const snapShotTimeStamp = Array.isArray(snapshotHistory)\\\\\\\\n    ? snapshotHistory.map((i) => {\\\\\\\\n        return { blockHeight: null, timestamp: parseFloat(i.timestamp / 1e6) };\\\\\\\\n      })\\\\\\\\n    : [];\\\\\\\\n\\\\\\\\n  const commentsTimeStampPromise = Array.isArray(comments)\\\\\\\\n    ? Promise.all(\\\\\\\\n        comments.map((item) => {\\\\\\\\n          return asyncFetch(\\\\\\\\n            `https://api.near.social/time?blockHeight=${item.blockHeight}`\\\\\\\\n          ).then((res) => {\\\\\\\\n            const timeMs = parseFloat(res.body);\\\\\\\\n            return {\\\\\\\\n              blockHeight: item.blockHeight,\\\\\\\\n              timestamp: timeMs,\\\\\\\\n            };\\\\\\\\n          });\\\\\\\\n        })\\\\\\\\n      ).then((res) => res)\\\\\\\\n    : Promise.resolve([]);\\\\\\\\n\\\\\\\\n  commentsTimeStampPromise.then((commentsTimeStamp) => {\\\\\\\\n    const combinedArray = [...snapShotTimeStamp, ...commentsTimeStamp];\\\\\\\\n    combinedArray.sort((a, b) => a.timestamp - b.timestamp);\\\\\\\\n    State.update({ data: combinedArray, socialComments: comments });\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nif ((snapshotHistory ?? []).length > 0) {\\\\\\\\n  sortTimelineAndComments();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Comment = ({ commentItem }) => {\\\\\\\\n  const { accountId, blockHeight } = commentItem;\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n    blockHeight,\\\\\\\\n  };\\\\\\\\n  const content = JSON.parse(Social.get(item.path, blockHeight) ?? \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n  const link = getLinkUsingCurrentGateway(\\\\\\\\n    `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app?page=proposal&id=${props.id}&accountId=${accountId}&blockHeight=${blockHeight}`\\\\\\\\n  );\\\\\\\\n  const hightlightComment =\\\\\\\\n    parseInt(props.blockHeight ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") === blockHeight &&\\\\\\\\n    props.accountId === accountId;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div style={{ zIndex: 99, background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n            props={{\\\\\\\\n              accountId: accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <CommentContainer\\\\\\\\n          style={{ border: hightlightComment ? \\\\\\\\\\\\\\\"2px solid black\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Header className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <Link href={`/near/widget/ProfilePage?accountId=${accountId}`}>\\\\\\\\n                <span className=\\\\\\\\\\\\\\\"fw-bold text-black\\\\\\\\\\\\\\\">{accountId}</span>\\\\\\\\n              </Link>\\\\\\\\n              commented \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n                props={{\\\\\\\\n                  blockHeight: blockHeight,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_NEAR}/widget/Posts.Menu`}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: accountId,\\\\\\\\n                    blockHeight: blockHeight,\\\\\\\\n                    contentPath: `/post/comment`,\\\\\\\\n                    contentType: \\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </Header>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer`}\\\\\\\\n              props={{\\\\\\\\n                text: content.text,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LikeButton`}\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_NEAR}/widget/CopyUrlButton`}\\\\\\\\n                props={{\\\\\\\\n                  url: link,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </CommentContainer>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction capitalizeFirstLetter(string) {\\\\\\\\n  const updated = string.replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n  return updated.charAt(0).toUpperCase() + updated.slice(1).toLowerCase();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction parseTimelineKeyAndValue(timeline, originalValue, modifiedValue) {\\\\\\\\n  const oldValue = originalValue[timeline];\\\\\\\\n  const newValue = modifiedValue[timeline];\\\\\\\\n  switch (timeline) {\\\\\\\\n    case \\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\": {\\\\\\\\n      if (\\\\\\\\n        (newValue === PROPOSAL_TIMELINE_STATUS.APPROVED ||\\\\\\\\n          newValue === PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY) &&\\\\\\\\n        latestSnapshot.linked_rfp\\\\\\\\n      ) {\\\\\\\\n        return (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved proposal to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            \\\\\\\\u{ff65} this proposal is selected for RFP{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <LinkToRfp id={latestSnapshot.linked_rfp}>\\\\\\\\n              #{latestSnapshot.linked_rfp}\\\\\\\\n            </LinkToRfp>\\\\\\\\n          </span>\\\\\\\\n        );\\\\\\\\n      } else\\\\\\\\n        return (\\\\\\\\n          oldValue !== newValue && (\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              moved proposal from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n                props={{\\\\\\\\n                  timelineStatus: oldValue,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\\\\\\\\n                props={{\\\\\\\\n                  timelineStatus: newValue,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              stage\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"sponsor_requested_review\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed review</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"reviewer_completed_attestation\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed attestation</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"kyc_verified\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>verified KYC/KYB</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"test_transaction_sent\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        !oldValue &&\\\\\\\\n        newValue && (\\\\\\\\n          <span>\\\\\\\\n            confirmed sponsorship and shared funding steps with recipient\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"payouts\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>updated the funding payment links.</span>;\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccountProfile = ({ accountId }) => {\\\\\\\\n  return (\\\\\\\\n    <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n        props={{\\\\\\\\n          accountId: accountId,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n          showAccountId: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </span>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LinkToRfp = ({ id, children }) => {\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n          id: id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      {children}\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst parseProposalKeyAndValue = (key, modifiedValue, originalValue) => {\\\\\\\\n  switch (key) {\\\\\\\\n    case \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed title</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"summary\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed {key}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed labels to {(modifiedValue ?? []).join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed category from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>updated linked proposals</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_rfp\\\\\\\\\\\\\\\": {\\\\\\\\n      const isUnlinked = isNumber(originalValue) && !isNumber(modifiedValue);\\\\\\\\n      const actionText = isUnlinked ? \\\\\\\\\\\\\\\"unlinked\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"linked\\\\\\\\\\\\\\\";\\\\\\\\n      const rfpId = originalValue ?? modifiedValue;\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          {actionText} an RFP <LinkToRfp id={rfpId}>#{rfpId}</LinkToRfp>\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_usd_amount\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship amount from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_paid_in_currency\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship currency from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"receiver_account\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed receiver account from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"supervisor\\\\\\\\\\\\\\\":\\\\\\\\n      return !originalValue && modifiedValue ? (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          added\\\\\\\\n          <AccountProfile accountId={modifiedValue} />\\\\\\\\n          as project coordinator\\\\\\\\n        </span>\\\\\\\\n      ) : (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed project coordinator from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\": {\\\\\\\\n      const modifiedKeys = Object.keys(modifiedValue);\\\\\\\\n      const originalKeys = Object.keys(originalValue);\\\\\\\\n      return modifiedKeys.map((i, index) => {\\\\\\\\n        const text = parseTimelineKeyAndValue(i, originalValue, modifiedValue);\\\\\\\\n        return (\\\\\\\\n          text && (\\\\\\\\n            <span key={index} className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              {text}\\\\\\\\n              {text && \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LogIconContainer = styled.div`\\\\\\\\n  margin-left: 50px;\\\\\\\\n  z-index: 99;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin-left: 10px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Log = ({ timestamp }) => {\\\\\\\\n  const updatedData = useMemo(\\\\\\\\n    () =>\\\\\\\\n      state.changedKeysListWithValues.find((obj) =>\\\\\\\\n        Object.values(obj).some(\\\\\\\\n          (value) =>\\\\\\\\n            value && parseFloat(value.modifiedValue / 1e6) === timestamp\\\\\\\\n        )\\\\\\\\n      ),\\\\\\\\n    [state.changedKeysListWithValues, timestamp]\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const editorId = updatedData.editorId;\\\\\\\\n  const valuesArray = Object.values(updatedData ?? {});\\\\\\\\n  // if valuesArray length is 2 that means it only has timestamp and editorId\\\\\\\\n  if (!updatedData || valuesArray.length === 2) {\\\\\\\\n    return <></>;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return valuesArray.map((i, index) => {\\\\\\\\n    if (i.key && i.key !== \\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\\") {\\\\\\\\n      return (\\\\\\\\n        <LogIconContainer\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          key={index}\\\\\\\\n        >\\\\\\\\n          <img\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiffqrxdi4xqu7erf46gdlwuodt6dm6rji2jtixs3iionjvga6rhdi\\\\\\\\\\\\\\\"\\\\\\\\n            height={30}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"flex-1 gap-1 w-100 text-wrap text-muted align-items-center \\\\\\\\\\\\\\\" +\\\\\\\\n              (i.key === \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" &&\\\\\\\\n              Object.keys(i.originalValue ?? {}).length > 1\\\\\\\\n                ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                : \\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n              <AccountProfile accountId={editorId} showAccountId={true} />{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n            {parseProposalKeyAndValue(i.key, i.modifiedValue, i.originalValue)}\\\\\\\\n            {i.key !== \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" && \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_NEAR}/widget/TimeAgo`}\\\\\\\\n              props={{\\\\\\\\n                blockTimestamp: timestamp * 1000000,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </LogIconContainer>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (Array.isArray(state.data)) {\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"log-line\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ height: state.data.length > 2 ? \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"150%\\\\\\\\\\\\\\\" }}\\\\\\\\n      ></div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n        {state.data.map((i, index) => {\\\\\\\\n          if (i.blockHeight) {\\\\\\\\n            const item = state.socialComments.find(\\\\\\\\n              (t) => t.blockHeight === i.blockHeight\\\\\\\\n            );\\\\\\\\n            return <Comment commentItem={item} />;\\\\\\\\n          } else {\\\\\\\\n            return <Log timestamp={i.timestamp} key={index} />;\\\\\\\\n          }\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.TimelineConfigurator\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst stepsArray = [1, 2, 3];\\\\\\\\nconst timeline = props.timeline;\\\\\\\\nconst disabled = props.disabled;\\\\\\\\nconst setTimeline = props.setTimeline ?? (() => {});\\\\\\\\n\\\\\\\\nconst TimelineStatusOptions = [\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Accepting Submissions\\\\\\\\\\\\\\\",\\\\\\\\n    value: { status: RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Evaluation\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: RFP_TIMELINE_STATUS.EVALUATION,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Proposal Selected\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Cancelled\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .circle-lg {\\\\\\\\n    width: 15px;\\\\\\\\n    height: 15px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 85px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 65px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nconst selectedTimelineStatusIndex = useMemo(\\\\\\\\n  () =>\\\\\\\\n    TimelineStatusOptions.findIndex((i) => i.value.status === timeline.status),\\\\\\\\n  [timeline]\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst TimelineItems = ({ title, children, value, values }) => {\\\\\\\\n  const indexOfCurrentItem = TimelineStatusOptions.findIndex((i) =>\\\\\\\\n    Array.isArray(values)\\\\\\\\n      ? values.includes(i.value.status)\\\\\\\\n      : value === i.value.status\\\\\\\\n  );\\\\\\\\n  let color = \\\\\\\\\\\\\\\"transparent\\\\\\\\\\\\\\\";\\\\\\\\n  let statusIndex = selectedTimelineStatusIndex;\\\\\\\\n  // index 2,3 is of decision\\\\\\\\n  if (selectedTimelineStatusIndex === 3) {\\\\\\\\n    statusIndex = 2;\\\\\\\\n  }\\\\\\\\n  if (statusIndex === indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FEF6EE\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  if (statusIndex > indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#EEFEF0\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // cancelled\\\\\\\\n  if (\\\\\\\\n    statusIndex === 2 &&\\\\\\\\n    (values ?? []).includes(RFP_TIMELINE_STATUS.CANCELLED) &&\\\\\\\\n    timeline.status === RFP_TIMELINE_STATUS.CANCELLED\\\\\\\\n  ) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"p-2 rounded-3\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        backgroundColor: color,\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 text-black\\\\\\\\\\\\\\\"> {title}</div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n    {!disabled && (\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n        <h6 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Status</h6>\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.DropDown`}\\\\\\\\n          props={{\\\\\\\\n            options: TimelineStatusOptions,\\\\\\\\n            selectedValue: TimelineStatusOptions.find(\\\\\\\\n              (i) => i.value.status === timeline.status\\\\\\\\n            ),\\\\\\\\n            onUpdate: (v) => {\\\\\\\\n              setTimeline({ status: v.value.status });\\\\\\\\n            },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-3 mt-2\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column mt-4\\\\\\\\\\\\\\\">\\\\\\\\n        {stepsArray.map((_, index) => {\\\\\\\\n          const indexOfCurrentItem = index;\\\\\\\\n          let color = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n          let statusIndex = selectedTimelineStatusIndex;\\\\\\\\n          // index 2,3 is of decision\\\\\\\\n          if (selectedTimelineStatusIndex === 3) {\\\\\\\\n            statusIndex = 2;\\\\\\\\n          }\\\\\\\\n          const current = statusIndex === indexOfCurrentItem;\\\\\\\\n          const completed =\\\\\\\\n            statusIndex > indexOfCurrentItem ||\\\\\\\\n            timeline.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED ||\\\\\\\\n            timeline.status === RFP_TIMELINE_STATUS.CANCELLED;\\\\\\\\n          return (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n              <div\\\\\\\\n                className={\\\\\\\\n                  \\\\\\\\\\\\\\\"circle-lg \\\\\\\\\\\\\\\" +\\\\\\\\n                  (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                  (current && !completed && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {completed && (\\\\\\\\n                  <div\\\\\\\\n                    className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n                    style={{ height: \\\\\\\\\\\\\\\"120%\\\\\\\\\\\\\\\" }}\\\\\\\\n                  >\\\\\\\\n                    <i className=\\\\\\\\\\\\\\\"bi bi-check\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n              {index !== stepsArray.length - 1 && (\\\\\\\\n                <div\\\\\\\\n                  className={\\\\\\\\n                    \\\\\\\\\\\\\\\"vertical-line \\\\\\\\\\\\\\\" +\\\\\\\\n                    (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                    (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                  }\\\\\\\\n                ></div>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          );\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n        <TimelineItems\\\\\\\\n          title=\\\\\\\\\\\\\\\"1) Accepting Submissions\\\\\\\\\\\\\\\"\\\\\\\\n          value={RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS}\\\\\\\\n        >\\\\\\\\n          <div>During this stage, the RFP is still open for submissions.</div>\\\\\\\\n        </TimelineItems>\\\\\\\\n        <TimelineItems\\\\\\\\n          title=\\\\\\\\\\\\\\\"2) Evaluation\\\\\\\\\\\\\\\"\\\\\\\\n          value={RFP_TIMELINE_STATUS.EVALUATION}\\\\\\\\n        >\\\\\\\\n          <div>\\\\\\\\n            This RFP is closed for submissions. All submitted proposals are\\\\\\\\n            under review.\\\\\\\\n          </div>\\\\\\\\n        </TimelineItems>\\\\\\\\n        <TimelineItems\\\\\\\\n          title=\\\\\\\\\\\\\\\"3) Decision\\\\\\\\\\\\\\\"\\\\\\\\n          values={[\\\\\\\\n            RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n            RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n          ]}\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div>Sponsor makes a final decision:</div>\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n              props={{\\\\\\\\n                value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                label: <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Proposal Selected</div>,\\\\\\\\n                disabled: disabled,\\\\\\\\n                isChecked:\\\\\\\\n                  timeline.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n                onClick: (v) => {\\\\\\\\n                  if (v) {\\\\\\\\n                    setTimeline({\\\\\\\\n                      status: RFP_TIMELINE_STATUS.PROPOSAL_SELECTED,\\\\\\\\n                    });\\\\\\\\n                  }\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.RadioButton`}\\\\\\\\n              props={{\\\\\\\\n                value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                disabled: disabled,\\\\\\\\n                label: <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">RFP Cancelled</div>,\\\\\\\\n                isChecked: timeline.status === RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n                onClick: (v) => {\\\\\\\\n                  if (v) {\\\\\\\\n                    setTimeline({\\\\\\\\n                      status: RFP_TIMELINE_STATUS.CANCELLED,\\\\\\\\n                    });\\\\\\\\n                  }\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </TimelineItems>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedRfpDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { linkedRfp, onChange, disabled, onDeleteRfp } = props;\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst [selectedRFP, setSelectedRFP] = useState(null);\\\\\\\\nconst [acceptingRfpsOptions, setAcceptingRfpsOption] = useState([]);\\\\\\\\nconst [allRfpOptions, setAllRfpOptions] = useState([]);\\\\\\\\nconst [searchRFPId, setSearchRfpId] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [initialStateApplied, setInitialState] = useState(false);\\\\\\\\n\\\\\\\\nconst queryName = RFP_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n  ${queryName}(\\\\\\\\n    offset: $offset\\\\\\\\n    limit: $limit\\\\\\\\n    order_by: {rfp_id: desc}\\\\\\\\n    where: $where\\\\\\\\n  ) {\\\\\\\\n    name\\\\\\\\n    rfp_id\\\\\\\\n    timeline\\\\\\\\n  }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\nfunction separateNumberAndText(str) {\\\\\\\\n  const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n  if (numberRegex.test(str)) {\\\\\\\\n    const number = str.match(numberRegex)[0];\\\\\\\\n    const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n    return { number: parseInt(number), text };\\\\\\\\n  } else {\\\\\\\\n    return { number: null, text: str.trim() };\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst buildWhereClause = () => {\\\\\\\\n  // show only accepting submissions stage rfps\\\\\\\\n  let where = {};\\\\\\\\n  const { number, text } = separateNumberAndText(searchRFPId);\\\\\\\\n\\\\\\\\n  if (number) {\\\\\\\\n    where = { rfp_id: { _eq: number }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (text) {\\\\\\\\n    where = { name: { _ilike: `%${text}%` }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return where;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst fetchRfps = () => {\\\\\\\\n  const FETCH_LIMIT = 30;\\\\\\\\n  const variables = {\\\\\\\\n    limit: FETCH_LIMIT,\\\\\\\\n    offset: 0,\\\\\\\\n    where: buildWhereClause(),\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const rfpsData = result.body.data?.[queryName];\\\\\\\\n        const data = [];\\\\\\\\n        const acceptingData = [];\\\\\\\\n        for (const prop of rfpsData) {\\\\\\\\n          const timeline = parseJSON(prop.timeline);\\\\\\\\n          const label = \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + prop.rfp_id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + prop.name;\\\\\\\\n          const value = prop.rfp_id;\\\\\\\\n          if (timeline.status === RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS) {\\\\\\\\n            acceptingData.push({\\\\\\\\n              label,\\\\\\\\n              value,\\\\\\\\n            });\\\\\\\\n          }\\\\\\\\n          data.push({\\\\\\\\n            label,\\\\\\\\n            value,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n        setAcceptingRfpsOption(acceptingData);\\\\\\\\n        setAllRfpOptions(data);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchRfps();\\\\\\\\n}, [searchRFPId]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(linkedRfp) !== JSON.stringify(selectedRFP)) {\\\\\\\\n    if (allRfpOptions.length > 0) {\\\\\\\\n      if (typeof linkedRfp !== \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n        setSelectedRFP(allRfpOptions.find((i) => linkedRfp === i.value));\\\\\\\\n      } else {\\\\\\\\n        setSelectedRFP(linkedRfp);\\\\\\\\n      }\\\\\\\\n      setInitialState(true);\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    setInitialState(true);\\\\\\\\n  }\\\\\\\\n}, [linkedRfp, allRfpOptions]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    JSON.stringify(linkedRfp) !== JSON.stringify(selectedRFP) &&\\\\\\\\n    initialStateApplied\\\\\\\\n  ) {\\\\\\\\n    onChange(selectedRFP);\\\\\\\\n  }\\\\\\\\n}, [selectedRFP, initialStateApplied]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {selectedRFP && (\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <a\\\\\\\\n          className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n          href={href({\\\\\\\\n            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n            params: {\\\\\\\\n              page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n              id: selectedRFP.value,\\\\\\\\n            },\\\\\\\\n          })}\\\\\\\\n          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n          rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          {selectedRFP.label}\\\\\\\\n        </a>\\\\\\\\n        {!disabled && (\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => {\\\\\\\\n              onDeleteRfp();\\\\\\\\n              setSelectedRFP(null);\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-trash3-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.DropDownWithSearch`}\\\\\\\\n      props={{\\\\\\\\n        disabled: disabled,\\\\\\\\n        selectedValue: selectedRFP.value,\\\\\\\\n        onChange: (v) => {\\\\\\\\n          setSelectedRFP(v);\\\\\\\\n        },\\\\\\\\n        options: isModerator ? allRfpOptions : acceptingRfpsOptions,\\\\\\\\n        showSearch: true,\\\\\\\\n        searchInputPlaceholder: \\\\\\\\\\\\\\\"Search by Id\\\\\\\\\\\\\\\",\\\\\\\\n        defaultLabel: \\\\\\\\\\\\\\\"Search RFP\\\\\\\\\\\\\\\",\\\\\\\\n        searchByValue: true,\\\\\\\\n        onSearch: (value) => {\\\\\\\\n          setSearchRfpId(value);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.ViewProposalModal\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst { href: linkHref } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst isOpen = props.isOpen;\\\\\\\\nconst isEdit = props.isEdit;\\\\\\\\nconst proposalId = props.proposalId;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn-blue {\\\\\\\\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.9);\\\\\\\\n  opacity: 0.9;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 30%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 2rem;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 12px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">\\\\\\\\n            Your Proposal has been successfully{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            {!isEdit ? \\\\\\\\\\\\\\\"published\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"edited\\\\\\\\\\\\\\\"}.\\\\\\\\n          </h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-center mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={linkHref({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\", id: proposalId },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-blue\\\\\\\\\\\\\\\" },\\\\\\\\n                label: \\\\\\\\\\\\\\\"View Proposal\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: () => {},\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.LinkedProposalsDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst linkedProposals = props.linkedProposals;\\\\\\\\nconst onChange = props.onChange;\\\\\\\\nconst [selectedProposals, setSelectedProposals] = useState(linkedProposals);\\\\\\\\nconst [proposalsOptions, setProposalsOptions] = useState([]);\\\\\\\\nconst [searchProposalId, setSearchProposalId] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst queryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n${queryName}(\\\\\\\\n  offset: $offset\\\\\\\\n  limit: $limit\\\\\\\\n  order_by: {proposal_id: desc}\\\\\\\\n  where: $where\\\\\\\\n) {\\\\\\\\n  name\\\\\\\\n  proposal_id\\\\\\\\n}\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(linkedProposals) !== JSON.stringify(selectedProposals)) {\\\\\\\\n    setSelectedProposals(linkedProposals);\\\\\\\\n  }\\\\\\\\n}, [linkedProposals]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(linkedProposals) !== JSON.stringify(selectedProposals)) {\\\\\\\\n    onChange(selectedProposals);\\\\\\\\n  }\\\\\\\\n}, [selectedProposals]);\\\\\\\\n\\\\\\\\nfunction separateNumberAndText(str) {\\\\\\\\n  const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n  if (numberRegex.test(str)) {\\\\\\\\n    const number = str.match(numberRegex)[0];\\\\\\\\n    const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n    return { number: parseInt(number), text };\\\\\\\\n  } else {\\\\\\\\n    return { number: null, text: str.trim() };\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst buildWhereClause = () => {\\\\\\\\n  let where = {};\\\\\\\\n  const { number, text } = separateNumberAndText(searchProposalId);\\\\\\\\n\\\\\\\\n  if (number) {\\\\\\\\n    where = { proposal_id: { _eq: number }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (text) {\\\\\\\\n    where = { name: { _ilike: `%${text}%` }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return where;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst fetchProposals = () => {\\\\\\\\n  const FETCH_LIMIT = 30;\\\\\\\\n  const variables = {\\\\\\\\n    limit: FETCH_LIMIT,\\\\\\\\n    offset: 0,\\\\\\\\n    where: buildWhereClause(),\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const proposalsData = result.body.data?.[queryName];\\\\\\\\n        const data = [];\\\\\\\\n        for (const prop of proposalsData) {\\\\\\\\n          data.push({\\\\\\\\n            label: \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + prop.proposal_id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + prop.name,\\\\\\\\n            value: prop.proposal_id,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n        setProposalsOptions(data);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchProposals();\\\\\\\\n}, [searchProposalId]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {selectedProposals.map((proposal) => {\\\\\\\\n      return (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <a\\\\\\\\n            className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n            href={href({\\\\\\\\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n              params: {\\\\\\\\n                page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                id: proposal.value,\\\\\\\\n              },\\\\\\\\n            })}\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {proposal.label}\\\\\\\\n          </a>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => {\\\\\\\\n              const updatedLinkedProposals = selectedProposals.filter(\\\\\\\\n                (item) => item.value !== proposal.value\\\\\\\\n              );\\\\\\\\n              setSelectedProposals(updatedLinkedProposals);\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-trash3-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      );\\\\\\\\n    })}\\\\\\\\n\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.DropDownWithSearch`}\\\\\\\\n      props={{\\\\\\\\n        selectedValue: selectedProposals,\\\\\\\\n        onChange: (v) => {\\\\\\\\n          if (!selectedProposals.some((item) => item.value === v.value)) {\\\\\\\\n            setSelectedProposals([...selectedProposals, v]);\\\\\\\\n          }\\\\\\\\n        },\\\\\\\\n        options: proposalsOptions,\\\\\\\\n        showSearch: true,\\\\\\\\n        searchInputPlaceholder: \\\\\\\\\\\\\\\"Search by Id\\\\\\\\\\\\\\\",\\\\\\\\n        defaultLabel: \\\\\\\\\\\\\\\"Search proposals\\\\\\\\\\\\\\\",\\\\\\\\n        searchByValue: true,\\\\\\\\n        onSearch: (value) => {\\\\\\\\n          setSearchProposalId(value);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst {\\\\\\\\n  selected,\\\\\\\\n  onChange,\\\\\\\\n  disabled,\\\\\\\\n  availableOptions,\\\\\\\\n  hideDropdown,\\\\\\\\n  linkedRfp,\\\\\\\\n} = props;\\\\\\\\n\\\\\\\\nconst [selectedOptions, setSelectedOptions] = useState([]);\\\\\\\\nconst [isOpen, setIsOpen] = useState(false);\\\\\\\\nconst [initialStateApplied, setInitialState] = useState(false);\\\\\\\\n\\\\\\\\nconst toggleDropdown = () => {\\\\\\\\n  setIsOpen(!isOpen);\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(selectedOptions) !== JSON.stringify(selected)) {\\\\\\\\n    if (availableOptions.length > 0) {\\\\\\\\n      if ((selected ?? []).some((i) => !i.value)) {\\\\\\\\n        setSelectedOptions(\\\\\\\\n          selected.map((i) => availableOptions.find((t) => t.value === i))\\\\\\\\n        );\\\\\\\\n      } else {\\\\\\\\n        setSelectedOptions(selected);\\\\\\\\n      }\\\\\\\\n      setInitialState(true);\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    setInitialState(true);\\\\\\\\n  }\\\\\\\\n}, [selected, availableOptions]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    JSON.stringify(selectedOptions) !== JSON.stringify(selected) &&\\\\\\\\n    initialStateApplied\\\\\\\\n  ) {\\\\\\\\n    onChange(selectedOptions);\\\\\\\\n  }\\\\\\\\n}, [selectedOptions, initialStateApplied]);\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .drop-btn {\\\\\\\\n    width: 100%;\\\\\\\\n    text-align: left;\\\\\\\\n    padding-inline: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 2%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item.active,\\\\\\\\n  .dropdown-item:active {\\\\\\\\n    background-color: #f0f0f0 !important;\\\\\\\\n    color: black;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f8f8f8 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    border-radius: 5px;\\\\\\\\n    opacity: inherit !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled.dropdown-toggle::after {\\\\\\\\n    display: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst handleOptionClick = (option) => {\\\\\\\\n  if (!selectedOptions.some((item) => item.value === option.value)) {\\\\\\\\n    setSelectedOptions([...selectedOptions, option]);\\\\\\\\n  }\\\\\\\\n  setIsOpen(false);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Item = ({ option }) => {\\\\\\\\n  return <div> {option.title}</div>;\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      {(selectedOptions ?? []).map((option) => {\\\\\\\\n        return (\\\\\\\\n          <div\\\\\\\\n            style={{\\\\\\\\n              color: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n              backgroundColor: `rgb(${option.color})`,\\\\\\\\n              width: \\\\\\\\\\\\\\\"max-content\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n            className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center badge rounded-lg p-2 h6 mb-0\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {option.title}\\\\\\\\n            {!disabled && (\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n                onClick={() => {\\\\\\\\n                  const updatedOptions = selectedOptions.filter(\\\\\\\\n                    (item) => item.value !== option.value\\\\\\\\n                  );\\\\\\\\n                  setSelectedOptions(updatedOptions);\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <i className=\\\\\\\\\\\\\\\"bi bi-trash3-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </div>\\\\\\\\n        );\\\\\\\\n      })}\\\\\\\\n    </div>\\\\\\\\n    {!hideDropdown && (\\\\\\\\n      <Container>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"custom-select w-100\\\\\\\\\\\\\\\"\\\\\\\\n          tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n          onBlur={() => setIsOpen(false)}\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"dropdown-toggle bg-white border rounded-2 btn drop-btn w-100 \\\\\\\\\\\\\\\" +\\\\\\\\n              (disabled ? \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n            onClick={!disabled && toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <div className={`selected-option`}>\\\\\\\\n              {linkedRfp ? (\\\\\\\\n                <span className=\\\\\\\\\\\\\\\"text-sm d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                  <i class=\\\\\\\\\\\\\\\"bi bi-lock-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  These categories match the chosen RFP and cannot be changed.\\\\\\\\n                  To use different categories, unlink the RFP.\\\\\\\\n                </span>\\\\\\\\n              ) : (\\\\\\\\n                <span>Select Category </span>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n\\\\\\\\n          {isOpen && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"dropdown-menu rounded-2 dropdown-menu-end dropdown-menu-lg-start px-2 shadow show w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div>\\\\\\\\n                {(availableOptions ?? []).map((option) => (\\\\\\\\n                  <div\\\\\\\\n                    key={option.value}\\\\\\\\n                    className={`dropdown-item cursor-pointer w-100 my-1 ${\\\\\\\\n                      (selectedOptions ?? []).find(\\\\\\\\n                        (item) => item.value === option.value\\\\\\\\n                      )\\\\\\\\n                        ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\"\\\\\\\\n                        : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                    }`}\\\\\\\\n                    onClick={() => handleOptionClick(option)}\\\\\\\\n                  >\\\\\\\\n                    <Item option={option} />\\\\\\\\n                  </div>\\\\\\\\n                ))}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Container>\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.00080666844528e+22
    }
  },
  {
    "id": "5385331126",
    "receipt_id": "Gp7iKAWhTyc7oMcwicoMKkR4jFLBnqBstftMGe61pc1b",
    "predecessor_account_id": "system",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2b7zRyeouzKpqtFSSWkEwXvU5hNc2QGcSU4KetZ6hLfB",
      "block_height": 120427271,
      "block_timestamp": 1717513106063288600
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "GLJ6W9Q5VeQJtZrK6x7uVFcfRNac8RJPaGGAy3WK2Hdv",
    "included_in_block_hash": "9VKE2Yxgt8YrzgFiwrUfuTCVP6FJ3KLnTvAxabn3ZqJK",
    "block_timestamp": "1717513104103503876",
    "block": {
      "block_height": 120427269
    },
    "receipt_conversion_tokens_burnt": "119979916974800000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.7873641141526634e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.00080666844528e+22
    }
  },
  {
    "id": "5386447455",
    "receipt_id": "9pSQqmFemCUMtNFPSF5NaqKpTmVKVgJwZE89UUMm1tZv",
    "predecessor_account_id": "infrastructure-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8WfkPadv35xXx2RotmwULZQraW8HEgzdLurorL82h7qj",
      "block_height": 120429770,
      "block_timestamp": 1717516192549473000
    },
    "receipt_outcome": {
      "gas_burnt": 5138834550683,
      "tokens_burnt": 513883455068300000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "cA5QQDsx91vE95PnA5r2my95rgL7kym4MFmBEm5hX4F",
    "included_in_block_hash": "6Dvc4PCVmyatwehNqZPmbn4GW8n69rVAxWkTsrKYQR4P",
    "block_timestamp": "1717516191239187520",
    "block": {
      "block_height": 120429769
    },
    "receipt_conversion_tokens_burnt": "32563170530600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 513883455068300000000,
        "args": "{\"data\": {\"infrastructure-committee.near\": {\"widget\": {\"near-prpsls-bos.components.pages.about\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\nconst Section = styled.div`\\\\\\\\n  padding: 1.5rem;\\\\\\\\n  @media screen and (max-width: 786px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.1rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 150%;\\\\\\\\n    margin-bottom: 1rem;\\\\\\\\n    text-align: justify;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  h4 {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.3rem !important;\\\\\\\\n    font-style: normal !important;\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n    line-height: 120% !important;\\\\\\\\n\\\\\\\\n    margin-top: 1rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  h4 {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.25rem;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 150%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  li {\\\\\\\\n    text-align: justify;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  ol li {\\\\\\\\n    font-size: 1.1rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a {\\\\\\\\n    color: #3c697d;\\\\\\\\n    font-weight: 500 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  i {\\\\\\\\n    font-size: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Section>\\\\\\\\n    <h4>Introduction</h4>\\\\\\\\n    <p>\\\\\\\\n      The Infrastructure Committee, a direct response to community concerns, was\\\\\\\\n      formed in collaboration with various leaders across the NEAR ecosystem.\\\\\\\\n      The committee will swiftly address infrastructure concerns with funding\\\\\\\\n      and processes to distribute those funds. These processes handle sharing\\\\\\\\n      RFPs, submitting proposals, reviewing and voting on proposals, and getting\\\\\\\\n      funds to teams when a proposal is approved. This initiative will focus\\\\\\\\n      funds on building resilient, fast, redundant infrastructure to meet NEAR\\\\\\\\\\\\'s\\\\\\\\n      thriving ecosystem\\\\\\\\\\\\'s short-term and future needs.\\\\\\\\n    </p>\\\\\\\\n    <p>\\\\\\\\n      The GitHub Wiki provides information about the\\\\\\\\n      <a\\\\\\\\n        href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Infrastructure-Committee\\\\\\\\\\\\\\\"\\\\\\\\n        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        Infrastructure Committee (IC)\\\\\\\\n      </a>{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n      and the{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n      <a\\\\\\\\n        href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Infrastructure-Working-Group\\\\\\\\\\\\\\\"\\\\\\\\n        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        Working Group (WG)\\\\\\\\n      </a>\\\\\\\\n      , including current members.\\\\\\\\n    </p>\\\\\\\\n    <h4>Process Summary</h4>\\\\\\\\n    <p>\\\\\\\\n      The Committee actively seeks proposals from partners like you to enhance,\\\\\\\\n      upgrade, and fortify NEAR ecosystem infrastructure. To this end, the\\\\\\\\n      Committee will draft several Requests For Proposals (RFPs) that outline\\\\\\\\n      urgent or highly desired projects. We encourage you to submit proposals as\\\\\\\\n      a response to an RFP or standalone, as your contributions are crucial to\\\\\\\\n      our collective success.\\\\\\\\n    </p>\\\\\\\\n    <p>\\\\\\\\n      Generally, the process proceeds as follows;\\\\\\\\n      <ol>\\\\\\\\n        <li>\\\\\\\\n          The proposal is drafted. Working Group and Committee members are free\\\\\\\\n          to review and offer suggestions.\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          Once everyone feels the proposal is ready, it moves to voting. The\\\\\\\\n          committee votes asynchronously and in regular committee meetings. A\\\\\\\\n          proposal is approved if it receives a majority vote from the Committee\\\\\\\\n          members.\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          In the event of a rejection, you will be informed by an IC or WG\\\\\\\\n          member, usually via the Telegram group established. Guidance may be\\\\\\\\n          offered on how to update the proposal for resubmission.\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          If your proposal is approved, you will move into the Funding Pipeline.\\\\\\\\n          You (or your company) will complete the KYC/B process, which involves\\\\\\\\n          providing your personal or company information for verification\\\\\\\\n          purposes. Next will be a legal working agreement, and finally, a test\\\\\\\\n          transaction will be conducted to ensure the target wallet address is\\\\\\\\n          correct.\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          Project Management: we encourage awarded teams to create a project on\\\\\\\\n          our{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <a\\\\\\\\n            href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group\\\\\\\\\\\\\\\"\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            Github repo\\\\\\\\n          </a>{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          where the community tracks progress on our{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <a\\\\\\\\n            href=\\\\\\\\\\\\\\\"https://github.com/orgs/near/projects/133/views/6\\\\\\\\\\\\\\\"\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            Github project\\\\\\\\n          </a>\\\\\\\\n          . Sharing project status gives the community and ecosystem leaders\\\\\\\\n          visibility into the status of awarded projects.\\\\\\\\n        </li>\\\\\\\\n      </ol>\\\\\\\\n    </p>\\\\\\\\n    <h4>Important Links</h4>\\\\\\\\n    <p>\\\\\\\\n      The following links contain specific information about the processes of\\\\\\\\n      responding to RFPs, submitting a proposal, voting, securing funds, and\\\\\\\\n      managing the subsequent project for transparency. Please note that the\\\\\\\\n      working group will update articles as processes change. We appreciate your\\\\\\\\n      patience and understanding.\\\\\\\\n      <ul>\\\\\\\\n        <li>\\\\\\\\n          <a\\\\\\\\n            href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Request-For-Proposals\\\\\\\\\\\\\\\"\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            RFPs\\\\\\\\n          </a>\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          <a\\\\\\\\n            href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Proposal-Process-%E2%80%90-Team\\\\\\\\\\\\\\\"\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            Submitting a Proposal\\\\\\\\n          </a>\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          <a\\\\\\\\n            href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Proposal-Process-%E2%80%90-Team#5-voting-on-proposals\\\\\\\\\\\\\\\"\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            Voting\\\\\\\\n          </a>\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          <a\\\\\\\\n            href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Funding-Process-%E2%80%90-Company\\\\\\\\\\\\\\\"\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            Getting Funds\\\\\\\\n          </a>\\\\\\\\n        </li>\\\\\\\\n        <li>\\\\\\\\n          <a\\\\\\\\n            href=\\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Projects-&-Tasks\\\\\\\\\\\\\\\"\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            Managing The Project\\\\\\\\n          </a>\\\\\\\\n        </li>\\\\\\\\n      </ul>\\\\\\\\n    </p>\\\\\\\\n\\\\\\\\n    <h4>Areas Of Funding</h4>\\\\\\\\n    <p>\\\\\\\\n      The Infrastructure Committee is looking for projects in the following\\\\\\\\n      areas. These areas are key to the growth and development of the NEAR\\\\\\\\n      ecosystem, so we encourage potential proposers to consider them when\\\\\\\\n      submitting their proposals.\\\\\\\\n      <ul>\\\\\\\\n        <li>Wallets</li>\\\\\\\\n        <li>Oracles</li>\\\\\\\\n        <li>RPC Nodes</li>\\\\\\\\n        <li>Bridges</li>\\\\\\\\n        <li>Onramps / Offramps</li>\\\\\\\\n        <li>Relayers</li>\\\\\\\\n        <li>Explorers</li>\\\\\\\\n        <li>Indexers</li>\\\\\\\\n        <li>Query API</li>\\\\\\\\n        <li>Data Lakes</li>\\\\\\\\n      </ul>\\\\\\\\n    </p>\\\\\\\\n    <h4>Proposal Markup</h4>\\\\\\\\n    <p>\\\\\\\\n      Please use the following markup templates when submitting the body of your\\\\\\\\n      proposal.\\\\\\\\n      <br />\\\\\\\\n      <a\\\\\\\\n        href=\\\\\\\\\\\\\\\"https://docs.google.com/document/d/1UZRfOE1JAOhsnSmp-RmL2hY7KPJbpBImKZVvPV4YJmA/edit?usp=sharing\\\\\\\\\\\\\\\"\\\\\\\\n        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        Proposal:\\\\\\\\n        https://docs.google.com/document/d/1UZRfOE1JAOhsnSmp-RmL2hY7KPJbpBImKZVvPV4YJmA/edit?usp=sharing\\\\\\\\n      </a>\\\\\\\\n    </p>\\\\\\\\n    <h4>Evaluation Criteria</h4>\\\\\\\\n    <p>Suggestions are forthcoming.</p>\\\\\\\\n  </Section>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 546446625598900000000
    }
  },
  {
    "id": "5386448212",
    "receipt_id": "qBdvf9rtHADnFSncCwwEdPHsYwNGC1cN9JdbtTrX7fv",
    "predecessor_account_id": "system",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6eTAD5jUNUpVjubtbVZXvaC1P3XHjv2vXedDja1CFz5V",
      "block_height": 120429771,
      "block_timestamp": 1717516193808280800
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "cA5QQDsx91vE95PnA5r2my95rgL7kym4MFmBEm5hX4F",
    "included_in_block_hash": "6Dvc4PCVmyatwehNqZPmbn4GW8n69rVAxWkTsrKYQR4P",
    "block_timestamp": "1717516191239187520",
    "block": {
      "block_height": 120429769
    },
    "receipt_conversion_tokens_burnt": "32563170530600000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8756422494359608e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 546446625598900000000
    }
  },
  {
    "id": "5388700652",
    "receipt_id": "71mzkv3YZshGNAKGNWmChJXHgnKNDfWQoLKsQHMhFGei",
    "predecessor_account_id": "trechriron71.near",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EJ8SgbpjcZeVuaDis7BUgPpbV8MP74JQFz35mALRGDG",
      "block_height": 120434185,
      "block_timestamp": 1717521759314414000
    },
    "receipt_outcome": {
      "gas_burnt": 5558764071890,
      "tokens_burnt": 555876407189000000000,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "9obWGeAZKQVSkRDGonLbFSAuurA44TmrfSc18FVtfTjP",
    "included_in_block_hash": "2hYq6WWxTYNZKFa5XRGAvTn2S71wfdyB6ecTYLBWuRxy",
    "block_timestamp": "1717521758312832512",
    "block": {
      "block_height": 120434184
    },
    "receipt_conversion_tokens_burnt": "50952403677000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_member",
        "deposit": 0,
        "fee": 555876407189000000000,
        "args": "{\"member\": \"eric3.near\", \"metadata\": {\"parents\": [], \"children\": [], \"description\": \"The moderator group has permissions to create and edit RFPs, edit and manage proposals, and manage admins.\", \"permissions\": {}, \"member_metadata_version\": \"V0\"}}"
      },
      {
        "action": "FUNCTION_CALL",
        "method": "edit_member",
        "deposit": 0,
        "fee": 555876407189000000000,
        "args": "{\"member\": \"team:moderators\", \"metadata\": {\"parents\": [], \"children\": [\"pivortex.near\", \"theori.near\", \"woben.near\", \"flmel.near\", \"petersalomonsen.near\", \"megha19.near\", \"frol.near\", \"polyprogrammist.near\", \"trechriron71.near\", \"eric3.near\"], \"description\": \"The moderator group has permissions to create and edit RFPs, edit and manage proposals, and manage admins.\", \"permissions\": {}, \"member_metadata_version\": \"V0\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 606828810866000000000
    }
  },
  {
    "id": "5446679090",
    "receipt_id": "8ePLmxqeSxFfy9BGqyXiChMLKaDz6wVNpfQnxpwT9S4b",
    "predecessor_account_id": "infrastructure-committee.near",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EndAkcr7NCngxz28CJXgXRU5Pe4SU9FbzYW1mNVEvbxn",
      "block_height": 120568220,
      "block_timestamp": 1717680966730631200
    },
    "receipt_outcome": {
      "gas_burnt": 24743290828983,
      "tokens_burnt": 2.4743290828983e+21,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "3qZED7zFyD3HBSaPZMNzzB6xzbVrMbvjSt2G8N7GoSDV",
    "included_in_block_hash": "EndAkcr7NCngxz28CJXgXRU5Pe4SU9FbzYW1mNVEvbxn",
    "block_timestamp": "1717680966730631102",
    "block": {
      "block_height": 120568220
    },
    "receipt_conversion_tokens_burnt": "281828893938400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "unsafe_self_upgrade",
        "deposit": 0,
        "fee": 2.4743290828983e+21,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.02586354212357e+22
    }
  },
  {
    "id": "5446679653",
    "receipt_id": "3zetMoi2t8wRq786FSanPP1ZWLxLKfji29nDiQuCo4pq",
    "predecessor_account_id": "infrastructure-committee.near",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5pKRh7w4mSQnmwREQyCCzj1HCX2XrKGPW1uHCC12bikQ",
      "block_height": 120568221,
      "block_timestamp": 1717680967742465300
    },
    "receipt_outcome": {
      "gas_burnt": 72786092842208,
      "tokens_burnt": 7.2786092842208e+21,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "3qZED7zFyD3HBSaPZMNzzB6xzbVrMbvjSt2G8N7GoSDV",
    "included_in_block_hash": "EndAkcr7NCngxz28CJXgXRU5Pe4SU9FbzYW1mNVEvbxn",
    "block_timestamp": "1717680966730631102",
    "block": {
      "block_height": 120568220
    },
    "receipt_conversion_tokens_burnt": "281828893938400000000",
    "actions": [
      {
        "action": "DEPLOY_CONTRACT",
        "method": null,
        "deposit": 0,
        "fee": 7.2786092842208e+21,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.02586354212357e+22
    }
  },
  {
    "id": "5446679657",
    "receipt_id": "3XTgqJvbY7u1BgRowyvCiNtaVLEHCxek8ixVRQbfeSTD",
    "predecessor_account_id": "infrastructure-committee.near",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5pKRh7w4mSQnmwREQyCCzj1HCX2XrKGPW1uHCC12bikQ",
      "block_height": 120568221,
      "block_timestamp": 1717680967742465300
    },
    "receipt_outcome": {
      "gas_burnt": 2238681601782,
      "tokens_burnt": 223868160178200000000,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "3qZED7zFyD3HBSaPZMNzzB6xzbVrMbvjSt2G8N7GoSDV",
    "included_in_block_hash": "EndAkcr7NCngxz28CJXgXRU5Pe4SU9FbzYW1mNVEvbxn",
    "block_timestamp": "1717680966730631102",
    "block": {
      "block_height": 120568220
    },
    "receipt_conversion_tokens_burnt": "281828893938400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "unsafe_migrate",
        "deposit": 0,
        "fee": 223868160178200000000,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.02586354212357e+22
    }
  },
  {
    "id": "5446679659",
    "receipt_id": "DdPpQkpSdiFh5vb8F7yAxcsJp6g5rBKgpKAcannS1b7M",
    "predecessor_account_id": "system",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5pKRh7w4mSQnmwREQyCCzj1HCX2XrKGPW1uHCC12bikQ",
      "block_height": 120568221,
      "block_timestamp": 1717680967742465300
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "3qZED7zFyD3HBSaPZMNzzB6xzbVrMbvjSt2G8N7GoSDV",
    "included_in_block_hash": "EndAkcr7NCngxz28CJXgXRU5Pe4SU9FbzYW1mNVEvbxn",
    "block_timestamp": "1717680966730631102",
    "block": {
      "block_height": 120568220
    },
    "receipt_conversion_tokens_burnt": "281828893938400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 7.512669874387093e+21,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.02586354212357e+22
    }
  },
  {
    "id": "5446680609",
    "receipt_id": "3wUPEfQmuFJnRuCF56pbcQ4DgbXVPZqEEQo3yb7jtmTA",
    "predecessor_account_id": "system",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6fi4ZKjfZcohBoUQce5mFpDxr3rzwKezcGNeVceQBXZ4",
      "block_height": 120568222,
      "block_timestamp": 1717680969099835000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "3qZED7zFyD3HBSaPZMNzzB6xzbVrMbvjSt2G8N7GoSDV",
    "included_in_block_hash": "EndAkcr7NCngxz28CJXgXRU5Pe4SU9FbzYW1mNVEvbxn",
    "block_timestamp": "1717680966730631102",
    "block": {
      "block_height": 120568220
    },
    "receipt_conversion_tokens_burnt": "281828893938400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.7176782261720732e+22,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.02586354212357e+22
    }
  },
  {
    "id": "5446681142",
    "receipt_id": "94hjtCj4wUBf8pHgqEZEVMKXMo7vxSeT6mSx6KzVMt4w",
    "predecessor_account_id": "system",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8RUM8XteYizu8CRsg8MDzEWNkiTzxRh9JjbSXkgQtG7r",
      "block_height": 120568223,
      "block_timestamp": 1717680970055218000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "3qZED7zFyD3HBSaPZMNzzB6xzbVrMbvjSt2G8N7GoSDV",
    "included_in_block_hash": "EndAkcr7NCngxz28CJXgXRU5Pe4SU9FbzYW1mNVEvbxn",
    "block_timestamp": "1717680966730631102",
    "block": {
      "block_height": 120568220
    },
    "receipt_conversion_tokens_burnt": "281828893938400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 3.367351067372159e+22,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.02586354212357e+22
    }
  },
  {
    "id": "5472222426",
    "receipt_id": "mYTXAkg3J32SwG4oKAQVQenJRs1t6NgiYFbikryqVrn",
    "predecessor_account_id": "infrastructure-committee.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6GsmChzBg5gHtWM9YYRupzDTp25kFn8NWRp9yCCDhzqs",
      "block_height": 120621663,
      "block_timestamp": 1717745145775253000
    },
    "receipt_outcome": {
      "gas_burnt": 26060464069060,
      "tokens_burnt": 2.606046406906e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "Eeu7fT1xNn7CcGjs6DMdB2eraTNnGX5e4NSMhjMkPVgd",
    "included_in_block_hash": "9zLfYYGTz8h24Mdq2XzhAmyoVhuY2fkvz7WY6Y8DLgQy",
    "block_timestamp": "1717745144787002377",
    "block": {
      "block_height": 120621662
    },
    "receipt_conversion_tokens_burnt": "52320106948000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 2.606046406906e+21,
        "args": "{\"data\": {\"infrastructure-committee.near\": {\"widget\": {\"near-prpsls-bos.components.pages.about\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst profile = Social.getr(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/profile`\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!profile) {\\\\\\\\n  <div\\\\\\\\n    style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n    className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n  >\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`} />\\\\\\\\n  </div>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"p-sm-2 p-4\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Markdown`}\\\\\\\\n      props={{\\\\\\\\n        content: profile.description,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.pages.admin\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst accessControlInfo =\\\\\\\\n  Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_access_control_info\\\\\\\\\\\\\\\"\\\\\\\\n  ) ?? null;\\\\\\\\n\\\\\\\\nif (!accessControlInfo.members_list) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst rootMembers =\\\\\\\\n  Near.view(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_root_members\\\\\\\\\\\\\\\") ?? null;\\\\\\\\nconst teamNames = Object.keys(rootMembers || {});\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst noPermissionBanner = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"d-flex flex-column justify-content-center align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n    <h2 className=\\\\\\\\\\\\\\\"alert alert-danger p-3 h6\\\\\\\\\\\\\\\">\\\\\\\\n      Your account does not have administration permissions.\\\\\\\\n    </h2>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!isModerator) {\\\\\\\\n  return noPermissionBanner;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction createEditTeam({\\\\\\\\n  teamName,\\\\\\\\n  members,\\\\\\\\n  description,\\\\\\\\n  contractCall, // typescript edit_member || add_member\\\\\\\\n}) {\\\\\\\\n  let txn = [];\\\\\\\\n\\\\\\\\n  const membersAndTeams = Object.keys(accessControlInfo.members_list);\\\\\\\\n  members.forEach((member) => {\\\\\\\\n    // if Contract panic member does not exist in the members_list\\\\\\\\n    if (!membersAndTeams.includes(member)) {\\\\\\\\n      // Add member\\\\\\\\n      txn.push({\\\\\\\\n        contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        methodName: \\\\\\\\\\\\\\\"add_member\\\\\\\\\\\\\\\",\\\\\\\\n        args: {\\\\\\\\n          member: member,\\\\\\\\n          metadata: {\\\\\\\\n            member_metadata_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n            description: description,\\\\\\\\n            permissions: {},\\\\\\\\n            children: [],\\\\\\\\n            parents: [],\\\\\\\\n          },\\\\\\\\n        },\\\\\\\\n        gas: Big(10).pow(14),\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  // Check edit team\\\\\\\\n  Near.call([\\\\\\\\n    ...txn,\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: contractCall, // add_member || edit_member\\\\\\\\n      args: {\\\\\\\\n        member: `team:${teamName}`,\\\\\\\\n        metadata: {\\\\\\\\n          member_metadata_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n          description: description,\\\\\\\\n          permissions: {},\\\\\\\\n          children: members,\\\\\\\\n          parents: [],\\\\\\\\n        },\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  margin: 0 auto;\\\\\\\\n  padding: 20px;\\\\\\\\n  text-align: left;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Tab = styled.button`\\\\\\\\n  color: rgb(0, 236, 151);\\\\\\\\n  &:hover {\\\\\\\\n    color: rgba(0, 236, 151, 0.5);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 p-4\\\\\\\\\\\\\\\">\\\\\\\\n      <ul class=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"myTab\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"tablist\\\\\\\\\\\\\\\">\\\\\\\\n        <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n          <Tab\\\\\\\\n            className=\\\\\\\\\\\\\\\"nav-link active\\\\\\\\\\\\\\\"\\\\\\\\n            id=\\\\\\\\\\\\\\\"profile-tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-target=\\\\\\\\\\\\\\\"#profile\\\\\\\\\\\\\\\"\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            aria-controls=\\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\\"\\\\\\\\n            aria-selected=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            Moderators\\\\\\\\n          </Tab>\\\\\\\\n        </li>\\\\\\\\n        <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n          <Tab\\\\\\\\n            className=\\\\\\\\\\\\\\\"nav-link\\\\\\\\\\\\\\\"\\\\\\\\n            id=\\\\\\\\\\\\\\\"about-tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-target=\\\\\\\\\\\\\\\"#about\\\\\\\\\\\\\\\"\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            aria-controls=\\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\"\\\\\\\\n            aria-selected=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            About\\\\\\\\n          </Tab>\\\\\\\\n        </li>\\\\\\\\n      </ul>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"tab-content\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"myTabContent\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          class=\\\\\\\\\\\\\\\"tab-pane fade show active\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\\"\\\\\\\\n          role=\\\\\\\\\\\\\\\"tabpanel\\\\\\\\\\\\\\\"\\\\\\\\n          aria-labelledby=\\\\\\\\\\\\\\\"profile-tab\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.admin.ModeratorsConfigurator`}\\\\\\\\n            props={{\\\\\\\\n              accessControlInfo,\\\\\\\\n              createEditTeam,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <div\\\\\\\\n          class=\\\\\\\\\\\\\\\"tab-pane fade\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\"\\\\\\\\n          role=\\\\\\\\\\\\\\\"tabpanel\\\\\\\\\\\\\\\"\\\\\\\\n          aria-labelledby=\\\\\\\\\\\\\\\"about-tab\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.admin.AboutConfigurator`}\\\\\\\\n            props={{\\\\\\\\n              accessControlInfo,\\\\\\\\n              createEditTeam,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.rfps.Editor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\n\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_RFP_EDIT\\\\\\\\\\\\\\\";\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Funding-Process-%E2%80%90-Company\\\\\\\\\\\\\\\";\\\\\\\\nconst ToCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst CoCDocs = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\nconst isAllowedToWriteRfp = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!author || !isAllowedToWriteRfp) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LoginScreen`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nlet editRfpData = null;\\\\\\\\nlet draftRfpData = null;\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editRfpData = Near.view(\\\\\\\\n    `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}`,\\\\\\\\n    \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      rfp_id: parseInt(id),\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  input {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .h5 {\\\\\\\\n    font-size: 18px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .h6 {\\\\\\\\n      font-size: 14px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .text-sm {\\\\\\\\n      font-size: 11px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-light-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 6px;\\\\\\\\n    height: 6px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 1.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nfunction getTimestamp(date) {\\\\\\\\n  // in nanoseconds\\\\\\\\n  const parsedDate = date ? new Date(date) : new Date();\\\\\\\\n  return Math.floor(parsedDate.getTime() * 1000000).toString();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getDate(timestamp) {\\\\\\\\n  const stamp =\\\\\\\\n    !timestamp || timestamp === \\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\" || timestamp === \\\\\\\\\\\\\\\"NaN\\\\\\\\\\\\\\\" ? null : timestamp;\\\\\\\\n  return new Date(parseFloat(stamp / 1000000)).toISOString().split(\\\\\\\\\\\\\\\"T\\\\\\\\\\\\\\\")[0];\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [labels, setLabels] = useState([]);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [submissionDeadline, setSubmissionDeadline] = useState(null);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\n\\\\\\\\nconst [showRfpViewModal, setShowRfpViewModal] = useState(false); // when user creates/edit a RFP and confirm the txn, this is true\\\\\\\\nconst [rfpId, setRfpId] = useState(null);\\\\\\\\nconst [rfpIdsArray, setRfpIdsArray] = useState(null);\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [oldRfpData, setOldRfpData] = useState(null);\\\\\\\\nconst [timeline, setTimeline] = useState({\\\\\\\\n  status: RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS,\\\\\\\\n});\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftRfpData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editRfpData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      labels: labels,\\\\\\\\n      summary: summary,\\\\\\\\n      submission_deadline: getTimestamp(submissionDeadline),\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [title, summary, description, submissionDeadline, labels]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (allowDraft) {\\\\\\\\n    let data = editRfpData || JSON.parse(draftRfpData);\\\\\\\\n    let snapshot = data.snapshot;\\\\\\\\n    if (data) {\\\\\\\\n      if (timestamp) {\\\\\\\\n        snapshot =\\\\\\\\n          data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n          data.snapshot;\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        draftRfpData &&\\\\\\\\n        editRfpData &&\\\\\\\\n        editRfpData.id === JSON.parse(draftRfpData).id\\\\\\\\n      ) {\\\\\\\\n        snapshot = {\\\\\\\\n          ...editRfpData.snapshot,\\\\\\\\n          ...JSON.parse(draftRfpData).snapshot,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n      setRfpId(data.id);\\\\\\\\n      setLabels(snapshot.labels);\\\\\\\\n      setTitle(snapshot.name);\\\\\\\\n      setSummary(snapshot.summary);\\\\\\\\n      setDescription(snapshot.description);\\\\\\\\n      setSubmissionDeadline(getDate(snapshot.submission_deadline));\\\\\\\\n      setTimeline(parseJSON(snapshot.timeline));\\\\\\\\n      if (isEditPage) {\\\\\\\\n        setConsent({ toc: true, coc: true });\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [editRfpData, draftRfpData, allowDraft]);\\\\\\\\n\\\\\\\\n// show loader until LS data is set in state\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n    setLoading(false);\\\\\\\\n  }, 200);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (showRfpViewModal) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  setDisabledSubmitBtn(\\\\\\\\n    !title ||\\\\\\\\n      !description ||\\\\\\\\n      !summary ||\\\\\\\\n      !(labels ?? []).length ||\\\\\\\\n      !submissionDeadline ||\\\\\\\\n      !consent.toc ||\\\\\\\\n      !consent.coc\\\\\\\\n  );\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 10000);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, [\\\\\\\\n  memoizedDraftData,\\\\\\\\n  draftKey,\\\\\\\\n  draftRfpData,\\\\\\\\n  consent,\\\\\\\\n  isTxnCreated,\\\\\\\\n  showRfpViewModal,\\\\\\\\n]);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n// show RFP created after txn approval for popup wallet\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isTxnCreated) {\\\\\\\\n    if (editRfpData) {\\\\\\\\n      setOldRfpData(editRfpData);\\\\\\\\n      if (\\\\\\\\n        editRfpData &&\\\\\\\\n        typeof editRfpData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        oldRfpData &&\\\\\\\\n        typeof oldRfpData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        JSON.stringify(editRfpData) !== JSON.stringify(oldRfpData)\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setRfpId(editRfpData.id);\\\\\\\\n        setShowRfpViewModal(true);\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      const rfpIds = Near.view(\\\\\\\\n        REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        \\\\\\\\\\\\\\\"get_all_rfp_ids\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      if (Array.isArray(rfpIds) && !rfpIdsArray) {\\\\\\\\n        setRfpIdsArray(rfpIds);\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        Array.isArray(rfpIds) &&\\\\\\\\n        Array.isArray(rfpIdsArray) &&\\\\\\\\n        rfpIds.length !== rfpIdsArray.length\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setRfpId(rfpIds[rfpIds.length - 1]);\\\\\\\\n        setShowRfpViewModal(true);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes) {\\\\\\\\n    setLoading(true);\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(REPL_RPC_URL, {\\\\\\\\n          method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n          headers: {\\\\\\\\n            \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          body: JSON.stringify({\\\\\\\\n            jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n            id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n            method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n            params: [props.transactionHashes, context.accountId],\\\\\\\\n          }),\\\\\\\\n        }).then((transaction) => {\\\\\\\\n          const transaction_method_name =\\\\\\\\n            transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n              .method_name;\\\\\\\\n\\\\\\\\n          const is_edit_or_add_rfp_transaction =\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"add_rfp\\\\\\\\\\\\\\\" ||\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"edit_rfp\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n          if (is_edit_or_add_rfp_transaction) {\\\\\\\\n            setShowRfpViewModal(true);\\\\\\\\n            Storage.privateSet(draftKey, null);\\\\\\\\n          }\\\\\\\\n          // show the latest created rfp to user\\\\\\\\n          if (transaction_method_name == \\\\\\\\\\\\\\\"add_rfp\\\\\\\\\\\\\\\") {\\\\\\\\n            useCache(\\\\\\\\n              () =>\\\\\\\\n                Near.asyncView(\\\\\\\\n                  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n                  \\\\\\\\\\\\\\\"get_all_rfp_ids\\\\\\\\\\\\\\\"\\\\\\\\n                ).then((rfpIdsArray) => {\\\\\\\\n                  setRfpId(rfpIdsArray?.[rfpIdsArray?.length - 1]);\\\\\\\\n                }),\\\\\\\\n              props.transactionHashes + \\\\\\\\\\\\\\\"rfpIds\\\\\\\\\\\\\\\",\\\\\\\\n              { subscribe: false }\\\\\\\\n            );\\\\\\\\n          } else {\\\\\\\\n            setRfpId(id);\\\\\\\\n          }\\\\\\\\n          setLoading(false);\\\\\\\\n        }),\\\\\\\\n      props.transactionHashes + context.accountId,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  } else {\\\\\\\\n    if (showRfpViewModal) {\\\\\\\\n      setShowRfpViewModal(false);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    className=\\\\\\\\\\\\\\\"submit-rfp-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst onSubmit = () => {\\\\\\\\n  setCreateTxn(true);\\\\\\\\n  const body = {\\\\\\\\n    rfp_body_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    summary: summary,\\\\\\\\n    submission_deadline: getTimestamp(submissionDeadline),\\\\\\\\n    timeline: timeline,\\\\\\\\n  };\\\\\\\\n  const args = { labels: (labels ?? []).map((i) => i.value), body: body };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editRfpData.id;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_rfp\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_rfp\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [collapseState, setCollapseState] = useState({});\\\\\\\\n\\\\\\\\nconst CollapsibleContainer = ({ title, children, noPaddingTop }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"border-bottom py-4 \\\\\\\\\\\\\\\" +\\\\\\\\n        (noPaddingTop && \\\\\\\\\\\\\\\"pt-0 \\\\\\\\\\\\\\\") +\\\\\\\\n        (collapseState[title] && \\\\\\\\\\\\\\\" pb-0\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className={\\\\\\\\\\\\\\\"d-flex justify-content-between \\\\\\\\\\\\\\\"}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-2 mb-sm-3\\\\\\\\\\\\\\\">{title}</div>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex d-sm-none cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() =>\\\\\\\\n            setCollapseState((prevState) => ({\\\\\\\\n              ...prevState,\\\\\\\\n              [title]: !prevState[title],\\\\\\\\n            }))\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          {!collapseState[title] ? (\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-chevron-up h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          ) : (\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-chevron-down h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className={!collapseState[title] ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"}>{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategoryDropdown = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n      props={{\\\\\\\\n        selected: labels,\\\\\\\\n        onChange: (v) => setLabels(v),\\\\\\\\n        disabled: false,\\\\\\\\n        availableOptions: rfpLabelOptions,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setTitle(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 80,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst SummaryComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: summary,\\\\\\\\n        multiline: true,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSummary(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 500,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst DescriptionComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: description,\\\\\\\\n        onChange: setDescription,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        autoFocus: false,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst ConsentComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"toc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={ToCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Terms and Conditions\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.toc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              toc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"coc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={CoCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Code of Conduct\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.coc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              coc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nconst SubmissionDeadline = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: submissionDeadline,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSubmissionDeadline(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        type: \\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\\",\\\\\\\\n        inputProps: {\\\\\\\\n          required: true,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftRfpData]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"w-100 py-2 px-0 px-sm-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.ViewRfpModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: showRfpViewModal,\\\\\\\\n        isEdit: isEditPage,\\\\\\\\n        rfpId: rfpId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n        onConfirmClick: (value) => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onCancelRFP(value);\\\\\\\\n        },\\\\\\\\n        linkedProposalIds: editRfpData.snapshot.linked_proposals,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.WarningModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isWarningModalOpen,\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setWarningModal(false);\\\\\\\\n          setTimeline({ status: RFP_TIMELINE_STATUS.EVALUATION });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Heading className=\\\\\\\\\\\\\\\"px-2 px-sm-0\\\\\\\\\\\\\\\">\\\\\\\\n      {isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} RFP\\\\\\\\n    </Heading>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 px-2 p-lg-0 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4 d-flex flex-wrap gap-6 w-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-2 w-100 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n              <img src={RFP_IMAGE} height={35} width={35} />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Select the relevant categories to help users quickly\\\\\\\\n                    understand the nature of the need. Need guidance? See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href={FundingDocs}\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Funding Docs\\\\\\\\n                    </a>\\\\\\\\n                    .\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {CategoryDropdown}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Highlight the essence of your RFP in a few words. This will appear on your RFP\\\\\\\\u{2019}s detail page and the main RFP feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {TitleComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Explain your RFP briefly. What is the problem or need, desired outcome, and benefit to the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SummaryComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  \\\\\\\\\\\\\\\"Expand on your summary with any relevant details like a detailed explanation of the problem and the expected solution, scope, and deliverables. Also include an estimate range for the project if you have a specific budget. And the selection criteria.\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {DescriptionComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\">\\\\\\\\n                {ConsentComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex justify-content-end gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <Link\\\\\\\\n                  to={\\\\\\\\n                    isEditPage\\\\\\\\n                      ? href({\\\\\\\\n                          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                          params: {\\\\\\\\n                            page: \\\\\\\\\\\\\\\"rfp\\\\\\\\\\\\\\\",\\\\\\\\n                            id: parseInt(id),\\\\\\\\n                          },\\\\\\\\n                        })\\\\\\\\n                      : href({\\\\\\\\n                          widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                          params: {\\\\\\\\n                            page: \\\\\\\\\\\\\\\"rfps\\\\\\\\\\\\\\\",\\\\\\\\n                          },\\\\\\\\n                        })\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  <Widget\\\\\\\\n                    src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                    props={{\\\\\\\\n                      classNames: {\\\\\\\\n                        root: \\\\\\\\\\\\\\\"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                      },\\\\\\\\n                      label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                      onClick: cleanDraft,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </Link>\\\\\\\\n                <Widget\\\\\\\\n                  src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    classNames: {\\\\\\\\n                      root: \\\\\\\\\\\\\\\"d-flex h-100 fw-light-bold btn-outline shadow-none border-1\\\\\\\\\\\\\\\",\\\\\\\\n                    },\\\\\\\\n                    label: (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"circle grey\\\\\\\\\\\\\\\"></div> <div>Submit</div>\\\\\\\\n                      </div>\\\\\\\\n                    ),\\\\\\\\n                    onClick: onSubmit,\\\\\\\\n                    disabled: disabledSubmitBtn,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-1 w-100 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <CollapsibleContainer noPaddingTop={true}>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Submission Deadline\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Enter the deadline for submitting proposals.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SubmissionDeadline}\\\\\\\\n              </InputContainer>\\\\\\\\n            </div>\\\\\\\\n          </CollapsibleContainer>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Timeline\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.rfps.TimelineConfigurator`}\\\\\\\\n                props={{\\\\\\\\n                  timeline: timeline,\\\\\\\\n                  setTimeline: (v) => {\\\\\\\\n                    if (editRfpData.snapshot.timeline.status === v.status) {\\\\\\\\n                      return;\\\\\\\\n                    }\\\\\\\\n                    // if proposal selected timeline is selected and no approved proposals exist, show warning\\\\\\\\n                    if (\\\\\\\\n                      v.status === RFP_TIMELINE_STATUS.PROPOSAL_SELECTED &&\\\\\\\\n                      Array.isArray(approvedProposals) &&\\\\\\\\n                      !approvedProposals.length\\\\\\\\n                    ) {\\\\\\\\n                      setWarningModal(true);\\\\\\\\n                    }\\\\\\\\n\\\\\\\\n                    if (v.status === RFP_TIMELINE_STATUS.CANCELLED) {\\\\\\\\n                      setCancelModal(true);\\\\\\\\n                    }\\\\\\\\n                    setTimeline(v);\\\\\\\\n                  },\\\\\\\\n                  disabled: isEditPage ? false : true,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.proposals.Editor\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { getGlobalLabels } = VM.require(\\\\\\\\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\\\\\\\\n) || { getGlobalLabels: () => {} };\\\\\\\\n\\\\\\\\nconst { id, timestamp, rfp_id } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://github.com/near/Infrastructure-Working-Group/wiki/Funding-Process-%E2%80%90-Company\\\\\\\\\\\\\\\";\\\\\\\\nconst ToCDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1jcazxTemEsOf72nfAIbv6CR1og_w4qVXg7GjXuVoGeI/edit?usp=sharing\\\\\\\\\\\\\\\";\\\\\\\\nconst CoCDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1S0Ky1xPLRlCRSbX6nLOAxBba7b0dYb4SpGJzaAPqI9k/edit?usp=sharing\\\\\\\\\\\\\\\";\\\\\\\\nif (!author) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LoginScreen`} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nlet editProposalData = null;\\\\\\\\nlet draftProposalData = null;\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"INFRA_PROPOSAL_EDIT\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst rfpLabelOptions = getGlobalLabels();\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editProposalData = Near.view(\\\\\\\\n    REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n    \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      proposal_id: parseInt(id),\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  input {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .h6 {\\\\\\\\n      font-size: 14px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .text-sm {\\\\\\\\n      font-size: 11px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #03ba16 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst tokensOptions = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\" },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"OTHER\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst [linkedRfp, setLinkedRfp] = useState(rfp_id ? parseInt(rfp_id) : null);\\\\\\\\nconst [labels, setLabels] = useState([]);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [linkedProposals, setLinkedProposals] = useState([]);\\\\\\\\nconst [receiverAccount, setReceiverAccount] = useState(context.accountId);\\\\\\\\nconst [requestedSponsorshipAmount, setRequestedSponsorshipAmount] =\\\\\\\\n  useState(null);\\\\\\\\nconst [requestedSponsorshipToken, setRequestedSponsorshipToken] = useState(\\\\\\\\n  tokensOptions[2]\\\\\\\\n);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\nconst [selectedStatus, setSelectedStatus] = useState(\\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\");\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\n\\\\\\\\nconst [showProposalViewModal, setShowProposalViewModal] = useState(false); // when user creates/edit a proposal and confirm the txn, this is true\\\\\\\\nconst [proposalId, setProposalId] = useState(null);\\\\\\\\nconst [proposalIdsArray, setProposalIdsArray] = useState(null);\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [oldProposalData, setOldProposalData] = useState(null);\\\\\\\\nconst [supervisor, setSupervisor] = useState(null);\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftProposalData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\n  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_write_rfps\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editProposalData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      linked_rfp: linkedRfp,\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      labels: labels,\\\\\\\\n      summary: summary,\\\\\\\\n      requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n      requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n      receiver_account: receiverAccount,\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [\\\\\\\\n    linkedRfp,\\\\\\\\n    title,\\\\\\\\n    summary,\\\\\\\\n    description,\\\\\\\\n    labels,\\\\\\\\n    requestedSponsorshipAmount,\\\\\\\\n    requestedSponsorshipToken,\\\\\\\\n    receiverAccount,\\\\\\\\n  ]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (allowDraft) {\\\\\\\\n    let data = editProposalData || JSON.parse(draftProposalData);\\\\\\\\n    let snapshot = data.snapshot;\\\\\\\\n    if (data) {\\\\\\\\n      if (timestamp) {\\\\\\\\n        snapshot =\\\\\\\\n          data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n          data.snapshot;\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        draftProposalData &&\\\\\\\\n        editProposalData &&\\\\\\\\n        editProposalData.id === JSON.parse(draftProposalData).id\\\\\\\\n      ) {\\\\\\\\n        snapshot = {\\\\\\\\n          ...editProposalData.snapshot,\\\\\\\\n          ...JSON.parse(draftProposalData).snapshot,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n      if (!isNumber(linkedRfp)) {\\\\\\\\n        setLinkedRfp(snapshot.linked_rfp);\\\\\\\\n      }\\\\\\\\n      setLabels(snapshot.labels ?? []);\\\\\\\\n      setTitle(snapshot.name);\\\\\\\\n      setSummary(snapshot.summary);\\\\\\\\n      setDescription(snapshot.description);\\\\\\\\n      setReceiverAccount(snapshot.receiver_account);\\\\\\\\n      setRequestedSponsorshipAmount(snapshot.requested_sponsorship_usd_amount);\\\\\\\\n      setSupervisor(snapshot.supervisor);\\\\\\\\n\\\\\\\\n      const token = tokensOptions.find(\\\\\\\\n        (item) => item.value === snapshot.requested_sponsorship_paid_in_currency\\\\\\\\n      );\\\\\\\\n      setRequestedSponsorshipToken(token ?? tokensOptions[2]);\\\\\\\\n      if (isEditPage) {\\\\\\\\n        setConsent({ toc: true, coc: true });\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [editProposalData, draftProposalData, allowDraft]);\\\\\\\\n\\\\\\\\n// show loader until LS data is set in state\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n    setLoading(false);\\\\\\\\n  }, 500);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (showProposalViewModal) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  setDisabledSubmitBtn(\\\\\\\\n    isTxnCreated ||\\\\\\\\n      !title ||\\\\\\\\n      !description ||\\\\\\\\n      !summary ||\\\\\\\\n      !(labels ?? []).length ||\\\\\\\\n      !requestedSponsorshipAmount ||\\\\\\\\n      !receiverAccount ||\\\\\\\\n      !consent.toc ||\\\\\\\\n      !consent.coc\\\\\\\\n  );\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 10000);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, [\\\\\\\\n  memoizedDraftData,\\\\\\\\n  draftKey,\\\\\\\\n  draftProposalData,\\\\\\\\n  consent,\\\\\\\\n  isTxnCreated,\\\\\\\\n  showProposalViewModal,\\\\\\\\n]);\\\\\\\\n\\\\\\\\n// set RFP labels, disable link rfp change when linked rfp is past accepting stage\\\\\\\\nconst [disabledLinkRFP, setDisableLinkRFP] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (linkedRfp) {\\\\\\\\n    Near.asyncView(REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT, \\\\\\\\\\\\\\\"get_rfp\\\\\\\\\\\\\\\", {\\\\\\\\n      rfp_id: linkedRfp.value ?? linkedRfp,\\\\\\\\n    }).then((i) => {\\\\\\\\n      const timeline = parseJSON(i.snapshot.timeline);\\\\\\\\n      setDisableLinkRFP(\\\\\\\\n        !isModerator &&\\\\\\\\n          timeline.status !== RFP_TIMELINE_STATUS.ACCEPTING_SUBMISSIONS\\\\\\\\n      );\\\\\\\\n      setLabels(i.snapshot.labels);\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [linkedRfp]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    editProposalData &&\\\\\\\\n    editProposalData?.snapshot?.linked_proposals?.length > 0\\\\\\\\n  ) {\\\\\\\\n    editProposalData.snapshot.linked_proposals.map((item) => {\\\\\\\\n      useCache(\\\\\\\\n        () =>\\\\\\\\n          Near.asyncView(\\\\\\\\n            REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n            \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\",\\\\\\\\n            {\\\\\\\\n              proposal_id: parseInt(item),\\\\\\\\n            }\\\\\\\\n          ).then((proposal) => {\\\\\\\\n            setLinkedProposals([\\\\\\\\n              ...linkedProposals,\\\\\\\\n              {\\\\\\\\n                label: \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + proposal.id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + proposal.snapshot.name,\\\\\\\\n                value: proposal.id,\\\\\\\\n              },\\\\\\\\n            ]);\\\\\\\\n          }),\\\\\\\\n        item + \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\",\\\\\\\\n        { subscribe: false }\\\\\\\\n      );\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [editProposalData]);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n// show proposal created after txn approval for popup wallet\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isTxnCreated) {\\\\\\\\n    if (editProposalData) {\\\\\\\\n      setOldProposalData(editProposalData);\\\\\\\\n      if (\\\\\\\\n        editProposalData &&\\\\\\\\n        typeof editProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        oldProposalData &&\\\\\\\\n        typeof oldProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        JSON.stringify(editProposalData) !== JSON.stringify(oldProposalData)\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(editProposalData.id);\\\\\\\\n        setShowProposalViewModal(true);\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      const proposalIds = Near.view(\\\\\\\\n        REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n        \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      if (Array.isArray(proposalIds) && !proposalIdsArray) {\\\\\\\\n        setProposalIdsArray(proposalIds);\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        Array.isArray(proposalIds) &&\\\\\\\\n        Array.isArray(proposalIdsArray) &&\\\\\\\\n        proposalIds.length !== proposalIdsArray.length\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(proposalIds[proposalIds.length - 1]);\\\\\\\\n        setShowProposalViewModal(true);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  setLoading(false);\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes) {\\\\\\\\n    setLoading(true);\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(REPL_RPC_URL, {\\\\\\\\n          method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n          headers: {\\\\\\\\n            \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          body: JSON.stringify({\\\\\\\\n            jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n            id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n            method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n            params: [props.transactionHashes, context.accountId],\\\\\\\\n          }),\\\\\\\\n        }).then((transaction) => {\\\\\\\\n          const transaction_method_name =\\\\\\\\n            transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n              .method_name;\\\\\\\\n\\\\\\\\n          const is_edit_or_add_post_transaction =\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\" ||\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n          if (is_edit_or_add_post_transaction) {\\\\\\\\n            setShowProposalViewModal(true);\\\\\\\\n            Storage.privateSet(draftKey, null);\\\\\\\\n          }\\\\\\\\n          // show the latest created proposal to user\\\\\\\\n          if (transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\") {\\\\\\\\n            useCache(\\\\\\\\n              () =>\\\\\\\\n                Near.asyncView(\\\\\\\\n                  REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n                  \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n                ).then((proposalIdsArray) => {\\\\\\\\n                  setProposalId(\\\\\\\\n                    proposalIdsArray?.[proposalIdsArray?.length - 1]\\\\\\\\n                  );\\\\\\\\n                }),\\\\\\\\n              props.transactionHashes + \\\\\\\\\\\\\\\"proposalIds\\\\\\\\\\\\\\\",\\\\\\\\n              { subscribe: false }\\\\\\\\n            );\\\\\\\\n          } else {\\\\\\\\n            setProposalId(id);\\\\\\\\n          }\\\\\\\\n          setLoading(false);\\\\\\\\n        }),\\\\\\\\n      props.transactionHashes + context.accountId,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  } else {\\\\\\\\n    if (showProposalViewModal) {\\\\\\\\n      setShowProposalViewModal(false);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst DropdowntBtnContainer = styled.div`\\\\\\\\n  font-size: 13px;\\\\\\\\n  min-width: 150px;\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .select-header {\\\\\\\\n    display: flex;\\\\\\\\n    justify-content: space-between;\\\\\\\\n    align-items: center;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    border-radius-top: 5px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    background-color: #fff;\\\\\\\\n    border-radius: 5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .no-border {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .options-card {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 0;\\\\\\\\n    width: 200%;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    background-color: #fff;\\\\\\\\n    padding: 0.5rem;\\\\\\\\n    z-index: 99;\\\\\\\\n    font-size: 13px;\\\\\\\\n    border-radius:0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .left {\\\\\\\\n    right: 0 !important;\\\\\\\\n    left: auto !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .options-card {\\\\\\\\n      right: 0 !important;\\\\\\\\n      left: auto !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option {\\\\\\\\n    margin-block: 5px;\\\\\\\\n    padding: 10px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    border-bottom: 1px solid #f0f0f0;\\\\\\\\n    transition: background-color 0.3s ease;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:hover {\\\\\\\\n    background-color: #f0f0f0; /* Custom hover effect color */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:last-child {\\\\\\\\n    border-bottom: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f4f4f4 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    font-weight: 500;\\\\\\\\n    color: #b3b3b3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 8px;\\\\\\\\n    height: 8px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green {\\\\\\\\n    background-color: #04a46e;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"submit-proposal-draft-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SubmitBtn = () => {\\\\\\\\n  const btnOptions = [\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Submit Draft\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"The author can still edit the proposal and build consensus before sharing it with sponsors.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Ready for Review\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"Start the official review process with sponsors. This will lock the editing function, but comments are still open.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"review\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  const handleOptionClick = (option) => {\\\\\\\\n    setDraftBtnOpen(false);\\\\\\\\n    setSelectedStatus(option.value);\\\\\\\\n    handleSubmit(option.value);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const toggleDropdown = () => {\\\\\\\\n    setDraftBtnOpen(!isDraftBtnOpen);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const handleSubmit = (status) => {\\\\\\\\n    const isDraft = status === \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\";\\\\\\\\n    if (isDraft) {\\\\\\\\n      onSubmit({ isDraft });\\\\\\\\n      cleanDraft();\\\\\\\\n    } else {\\\\\\\\n      setReviewModal(true);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <DropdowntBtnContainer>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"custom-select\\\\\\\\\\\\\\\"\\\\\\\\n        tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n        onBlur={() => setDraftBtnOpen(false)}\\\\\\\\n      >\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\n            \\\\\\\\\\\\\\\"select-header d-flex gap-1 align-items-center submit-draft-button \\\\\\\\\\\\\\\" +\\\\\\\\n            (disabledSubmitBtn && \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\")\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            onClick={() => !disabledSubmitBtn && handleSubmit(selectedStatus)}\\\\\\\\n            className=\\\\\\\\\\\\\\\"p-2 d-flex gap-2 align-items-center \\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {isTxnCreated ? (\\\\\\\\n              LoadingButtonSpinner\\\\\\\\n            ) : (\\\\\\\\n              <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + selectedOption.iconColor}></div>\\\\\\\\n            )}\\\\\\\\n            <div className={`selected-option`}>{selectedOption.label}</div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"h-100 p-2\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ borderLeft: \\\\\\\\\\\\\\\"1px solid #ccc\\\\\\\\\\\\\\\" }}\\\\\\\\n            onClick={!disabledSubmitBtn && toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <i class={`bi bi-chevron-${isDraftBtnOpen ? \\\\\\\\\\\\\\\"up\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\"}`}></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {isDraftBtnOpen && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"options-card\\\\\\\\\\\\\\\">\\\\\\\\n            {btnOptions.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`option ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n              >\\\\\\\\n                <div className={`d-flex gap-2 align-items-center`}>\\\\\\\\n                  <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + option.iconColor}></div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">{option.label}</div>\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-muted text-xs\\\\\\\\\\\\\\\">{option.description}</div>\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </DropdowntBtnContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst onSubmit = ({ isDraft, isCancel }) => {\\\\\\\\n  setCreateTxn(true);\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"submitting transaction\\\\\\\\\\\\\\\");\\\\\\\\n  const linkedProposalsIds = linkedProposals.map((item) => item.value) ?? [];\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    linked_rfp: linkedRfp?.value,\\\\\\\\n    category: \\\\\\\\\\\\\\\"Infrastructure Committee\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    summary: summary,\\\\\\\\n    linked_proposals: linkedProposalsIds,\\\\\\\\n    requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n    requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n    receiver_account: receiverAccount,\\\\\\\\n    requested_sponsor: \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\",\\\\\\\\n    supervisor: supervisor,\\\\\\\\n    timeline: isCancel\\\\\\\\n      ? {\\\\\\\\n          status: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        }\\\\\\\\n      : isDraft\\\\\\\\n      ? { status: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\" }\\\\\\\\n      : {\\\\\\\\n          status: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        },\\\\\\\\n  };\\\\\\\\n  const args = {\\\\\\\\n    labels: linkedRfp ? [] : (labels ?? []).map((i) => i.value ?? i),\\\\\\\\n    body: body,\\\\\\\\n  };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editProposalData.id;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [collapseState, setCollapseState] = useState({});\\\\\\\\n\\\\\\\\nconst CollapsibleContainer = ({ title, children, noPaddingTop }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"border-bottom py-4 \\\\\\\\\\\\\\\" +\\\\\\\\n        (noPaddingTop && \\\\\\\\\\\\\\\"pt-0 \\\\\\\\\\\\\\\") +\\\\\\\\n        (collapseState[title] && \\\\\\\\\\\\\\\" pb-0\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className={\\\\\\\\\\\\\\\"d-flex justify-content-between \\\\\\\\\\\\\\\"}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-2 mb-sm-3\\\\\\\\\\\\\\\">{title}</div>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex d-sm-none cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() =>\\\\\\\\n            setCollapseState((prevState) => ({\\\\\\\\n              ...prevState,\\\\\\\\n              [title]: !prevState[title],\\\\\\\\n            }))\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          {!collapseState[title] ? (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-up h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          ) : (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-down h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className={!collapseState[title] ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"}>{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategoryDropdown = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\\\\\\\\n      props={{\\\\\\\\n        selected: labels,\\\\\\\\n        onChange: (v) => setLabels(v),\\\\\\\\n        disabled: linkedRfp, // when RFP is linked, labels are disabled\\\\\\\\n        linkedRfp: linkedRfp,\\\\\\\\n\\\\\\\\n        availableOptions: rfpLabelOptions,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData, linkedRfp, labels]);\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setTitle(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 80,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst SummaryComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: summary,\\\\\\\\n        multiline: true,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSummary(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 500,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst DescriptionComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Compose`}\\\\\\\\n      props={{\\\\\\\\n        data: description,\\\\\\\\n        onChange: setDescription,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        autoFocus: false,\\\\\\\\n        showProposalIdAutoComplete: true,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ConsentComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"toc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={ToCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Infrastructure Committee\\\\\\\\u{2019}s Terms and Conditions\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.toc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              toc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Checkbox`}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"coc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={CoCDocs}\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Infrastructure Committee\\\\\\\\u{2019}s Code of Conduct\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.coc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              coc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ProfileComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"mob.near/widget/Profile.ShortInlineBlock\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        accountId: author,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst LinkRFPComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedRfpDropdown`}\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedRfp,\\\\\\\\n          linkedRfp: linkedRfp,\\\\\\\\n          disabled: disabledLinkRFP,\\\\\\\\n          onDeleteRfp: () => setLabels([]),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData, disabledLinkRFP]);\\\\\\\\n\\\\\\\\nconst LinkedProposalsComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">\\\\\\\\n        Link any relevant proposals (e.g. previous milestones).\\\\\\\\n      </div>\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.LinkedProposalsDropdown`}\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedProposals,\\\\\\\\n          linkedProposals: linkedProposals,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ReceiverAccountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.AccountInput`}\\\\\\\\n      props={{\\\\\\\\n        value: receiverAccount,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Enter Address\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: setReceiverAccount,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst AmountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: requestedSponsorshipAmount,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          setRequestedSponsorshipAmount(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\",\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"$\\\\\\\\\\\\\\\",\\\\\\\\n          inputmode: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\",\\\\\\\\n          pattern: \\\\\\\\\\\\\\\"[0-9]*\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst CurrencyComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.DropDown`}\\\\\\\\n      props={{\\\\\\\\n        options: tokensOptions,\\\\\\\\n        selectedValue: requestedSponsorshipToken,\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setRequestedSponsorshipToken(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-0 px-sm-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    <Heading className=\\\\\\\\\\\\\\\"px-2 px-sm-0\\\\\\\\\\\\\\\">\\\\\\\\n      {isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} Proposal\\\\\\\\n    </Heading>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.proposals.ViewProposalModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: showProposalViewModal,\\\\\\\\n        isEdit: isEditPage,\\\\\\\\n        proposalId: proposalId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmReviewModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          cleanDraft();\\\\\\\\n          onSubmit({ isDraft: false });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.ConfirmCancelModal`}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onSubmit({ isCancel: true });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 px-2 p-lg-0 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4 d-flex flex-wrap gap-6 w-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-2 w-100 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\\\\\\\\n                props={{\\\\\\\\n                  accountId: author,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Link RFP (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    \\\\\\\\\\\\\\\"Link this proposal if it is a response to a specific RFP. You can only link to active RFPs in the \\\\\\\\u{201c}Accepting Submission\\\\\\\\u{201d} stage. You can only link to one RFP.\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {LinkRFPComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Select the relevant categories that best align with your\\\\\\\\n                    contribution to the NEAR developer community. Need guidance?\\\\\\\\n                    See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href={FundingDocs}\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Funding Docs\\\\\\\\n                    </a>\\\\\\\\n                    .\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {CategoryDropdown}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Highlight the essence of your proposal in a few words. This will appear on your proposal\\\\\\\\u{2019}s detail page and the main proposal feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {TitleComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Explain your proposal briefly. This is your chance to make a good first impression on the community. Include what needs or goals your work will address, your solution, and the benefit for the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                {SummaryComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Expand on your summary with any relevant details like your\\\\\\\\n                    contribution timeline, key milestones, team background, and\\\\\\\\n                    a clear breakdown of how the funds will be used. Proposals\\\\\\\\n                    should be simple and clear (e.g. 1 month). For more complex\\\\\\\\n                    projects, treat each milestone as a separate proposal.\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                {DescriptionComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\">\\\\\\\\n                {ConsentComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                <div>\\\\\\\\n                  {isEditPage && (\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                          </div>\\\\\\\\n                        ),\\\\\\\\n                        onClick: () => setCancelModal(true),\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n                <div\\\\\\\\n                  className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\"\\\\\\\\n                  style={{\\\\\\\\n                    height: isDraftBtnOpen ? \\\\\\\\\\\\\\\"25vh\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"auto\\\\\\\\\\\\\\\",\\\\\\\\n                    alignItems: isDraftBtnOpen ? \\\\\\\\\\\\\\\"flex-start\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                >\\\\\\\\n                  <Link\\\\\\\\n                    to={\\\\\\\\n                      isEditPage\\\\\\\\n                        ? href({\\\\\\\\n                            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                              id: parseInt(id),\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                        : href({\\\\\\\\n                            widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                    }\\\\\\\\n                  >\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                        onClick: cleanDraft,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </Link>\\\\\\\\n                  <SubmitBtn />\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div\\\\\\\\n          style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"flex-1 w-100 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <CollapsibleContainer noPaddingTop={true} title=\\\\\\\\\\\\\\\"Author Details\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer heading=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                {ProfileComponent}\\\\\\\\n              </InputContainer>\\\\\\\\n            </div>\\\\\\\\n          </CollapsibleContainer>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Link Proposals (Optional)\\\\\\\\\\\\\\\">\\\\\\\\n              {LinkedProposalsComponent}\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n            <CollapsibleContainer title=\\\\\\\\\\\\\\\"Funding Details\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Recipient NEAR Wallet Address\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Enter the address that will receive the funds. We\\\\\\\\u{2019}ll need this to send a test transaction once your proposal is approved.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {ReceiverAccountComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading={\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Recipient Verification Status\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"custom-tooltip\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-info-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        <span class=\\\\\\\\\\\\\\\"tooltiptext\\\\\\\\\\\\\\\">\\\\\\\\n                          To get approved and receive payments on our platform,\\\\\\\\n                          you must complete KYC/KYB verification using Fractal,\\\\\\\\n                          a trusted identity verification solution. This helps\\\\\\\\n                          others trust transactions with your account. Click\\\\\\\\n                          \\\\\\\\\\\\\\\"Get Verified\\\\\\\\\\\\\\\" to start. <br />\\\\\\\\n                          <br />\\\\\\\\n                          Once verified, your profile will display a badge,\\\\\\\\n                          which is valid for 365 days from the date of your\\\\\\\\n                          verification. You must renew your verification upon\\\\\\\\n                          expiration OR if any of your personal information\\\\\\\\n                          changes.\\\\\\\\n                        </span>\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  }\\\\\\\\n                  description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"border border-1 p-3 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.VerificationStatus`}\\\\\\\\n                      props={{\\\\\\\\n                        receiverAccount: receiverAccount,\\\\\\\\n                        showGetVerifiedBtn: true,\\\\\\\\n                        imageSize: 30,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Total Amount (USD)\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    <>\\\\\\\\n                      Enter the exact amount you are seeking. See\\\\\\\\n                      <a\\\\\\\\n                        href={FundingDocs}\\\\\\\\n                        className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        Funding Documentation\\\\\\\\n                      </a>\\\\\\\\n                      for guidelines.\\\\\\\\n                    </>\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {AmountComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Currency\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Select your preferred currency for receiving funds. Note: The exchange rate for NEAR tokens will be the closing rate at the day of the invoice.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {CurrencyComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.molecule.Markdown\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\nconst Container = styled.div`\\\\\\\\n  p {\\\\\\\\n    white-space: pre-line; // This ensures text breaks to new line\\\\\\\\n\\\\\\\\n    span {\\\\\\\\n      white-space: normal; // and this ensures profile links look normal\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  blockquote {\\\\\\\\n    margin: 1em 0;\\\\\\\\n    padding-left: 1.5em;\\\\\\\\n    border-left: 4px solid #ccc;\\\\\\\\n    color: #666;\\\\\\\\n    font-style: italic;\\\\\\\\n    font-size: inherit;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  pre {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n    border: 1px solid #ddd;\\\\\\\\n    border-radius: 4px;\\\\\\\\n    padding: 1em;\\\\\\\\n    overflow-x: auto;\\\\\\\\n    font-family: \\\\\\\\\\\\\\\"Courier New\\\\\\\\\\\\\\\", Courier, monospace;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a {\\\\\\\\n    color: #3c697d;\\\\\\\\n    font-weight: 500 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <Markdown text={props.content} />\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.admin.AboutConfigurator\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { Tile } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/devhub.components.molecule.Tile`\\\\\\\\n) || { Tile: () => <></> };\\\\\\\\n\\\\\\\\nconst item = {\\\\\\\\n  path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/profile/**`,\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst profile = Social.get(item.path);\\\\\\\\n\\\\\\\\nif (!profile.description) {\\\\\\\\n  <div\\\\\\\\n    style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n    className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n  >\\\\\\\\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`} />\\\\\\\\n  </div>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst initialData = profile.description;\\\\\\\\nconst [content, setContent] = useState(null);\\\\\\\\nconst [showCommentToast, setCommentToast] = useState(false);\\\\\\\\nconst [handler, setHandler] = useState(null);\\\\\\\\nconst [isTxnCreated, setTxnCreated] = useState(false);\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  margin: 0 auto;\\\\\\\\n  padding: 20px;\\\\\\\\n  text-align: left;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst hasDataChanged = () => {\\\\\\\\n  return content !== initialData;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handlePublish = () => {\\\\\\\\n  setTxnCreated(true);\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"set_social_db_profile_description\\\\\\\\\\\\\\\",\\\\\\\\n      args: { description: content },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isTxnCreated) {\\\\\\\\n    const checkForAboutInSocialDB = () => {\\\\\\\\n      Near.asyncView(REPL_SOCIAL_CONTRACT, \\\\\\\\\\\\\\\"get\\\\\\\\\\\\\\\", {\\\\\\\\n        keys: [item.path],\\\\\\\\n      }).then((result) => {\\\\\\\\n        try {\\\\\\\\n          const submittedAboutText = content;\\\\\\\\n          const lastAboutTextFromSocialDB =\\\\\\\\n            result[REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT].profile.description;\\\\\\\\n          if (submittedAboutText === lastAboutTextFromSocialDB) {\\\\\\\\n            setTxnCreated(false);\\\\\\\\n            setCommentToast(true);\\\\\\\\n            return;\\\\\\\\n          }\\\\\\\\n        } catch (e) {}\\\\\\\\n        setTimeout(() => checkForAboutInSocialDB(), 2000);\\\\\\\\n      });\\\\\\\\n    };\\\\\\\\n    checkForAboutInSocialDB();\\\\\\\\n  }\\\\\\\\n}, [isTxnCreated]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (!content && initialData) {\\\\\\\\n    setContent(initialData);\\\\\\\\n    setHandler(\\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\");\\\\\\\\n  }\\\\\\\\n}, [initialData]);\\\\\\\\n\\\\\\\\nfunction Preview() {\\\\\\\\n  return (\\\\\\\\n    <Tile className=\\\\\\\\\\\\\\\"p-3\\\\\\\\\\\\\\\" style={{ background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Markdown`}\\\\\\\\n        props={{\\\\\\\\n          content: content,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </Tile>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <Widget\\\\\\\\n      src={`${REPL_NEAR}/widget/DIG.Toast`}\\\\\\\\n      props={{\\\\\\\\n        title: \\\\\\\\\\\\\\\"About page updated successfully\\\\\\\\\\\\\\\",\\\\\\\\n        type: \\\\\\\\\\\\\\\"success\\\\\\\\\\\\\\\",\\\\\\\\n        open: showCommentToast,\\\\\\\\n        onOpenChange: (v) => setCommentToast(v),\\\\\\\\n        trigger: <></>,\\\\\\\\n        providerProps: { duration: 3000 },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <ul className=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"editPreviewTabs\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"tablist\\\\\\\\\\\\\\\">\\\\\\\\n      <li className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"nav-link active\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"edit-tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-target=\\\\\\\\\\\\\\\"#edit\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          aria-controls=\\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\"\\\\\\\\n          aria-selected=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          Edit\\\\\\\\n        </button>\\\\\\\\n      </li>\\\\\\\\n      <li className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"nav-link\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"preview-tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-target=\\\\\\\\\\\\\\\"#preview\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          aria-controls=\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\"\\\\\\\\n          aria-selected=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          Preview\\\\\\\\n        </button>\\\\\\\\n      </li>\\\\\\\\n    </ul>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"tab-content\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"editPreviewTabsContent\\\\\\\\\\\\\\\">\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"tab-pane show active py-4\\\\\\\\\\\\\\\"\\\\\\\\n        id=\\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\"\\\\\\\\n        role=\\\\\\\\\\\\\\\"tabpanel\\\\\\\\\\\\\\\"\\\\\\\\n        aria-labelledby=\\\\\\\\\\\\\\\"edit-tab\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        <Widget\\\\\\\\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.SimpleMDE`}\\\\\\\\n          props={{\\\\\\\\n            data: { handler: handler, content: content },\\\\\\\\n            onChangeKeyup: (v) => {\\\\\\\\n              setContent(v);\\\\\\\\n            },\\\\\\\\n            showAutoComplete: true,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-end gap-3 mt-4\\\\\\\\\\\\\\\"}\\\\\\\\n        >\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n              disabled: !hasDataChanged(),\\\\\\\\n              icon: {\\\\\\\\n                type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                variant: \\\\\\\\\\\\\\\"bi-check-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n              },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Publish\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: handlePublish,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"tab-pane\\\\\\\\\\\\\\\"\\\\\\\\n        id=\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\"\\\\\\\\n        role=\\\\\\\\\\\\\\\"tabpanel\\\\\\\\\\\\\\\"\\\\\\\\n        aria-labelledby=\\\\\\\\\\\\\\\"preview-tab\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\" }}\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"w-100 h-100 py-4\\\\\\\\\\\\\\\">\\\\\\\\n          <Preview />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"near-prpsls-bos.components.admin.ModeratorsConfigurator\": {\"\": \"/*\\\\\\\\nLicense: MIT\\\\\\\\nAuthor: devhub.near\\\\\\\\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\\\\\\\\n*/\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\nconst REPL_DEVHUB = \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE = \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT =\\\\\\\\n  \\\\\\\\\\\\\\\"infrastructure-committee.near\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_RPC_URL = \\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\";\\\\\\\\nconst REPL_NEAR = \\\\\\\\\\\\\\\"near\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_IMAGE =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfps_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst RFP_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_rfp_snapshots\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst PROPOSAL_QUERY_NAME =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_ic_v1_proposal_snapshots\\\\\\\\\\\\\\\";\\\\\\\\nconst RFP_TIMELINE_STATUS = {\\\\\\\\n  ACCEPTING_SUBMISSIONS: \\\\\\\\\\\\\\\"ACCEPTING_SUBMISSIONS\\\\\\\\\\\\\\\",\\\\\\\\n  EVALUATION: \\\\\\\\\\\\\\\"EVALUATION\\\\\\\\\\\\\\\",\\\\\\\\n  PROPOSAL_SELECTED: \\\\\\\\\\\\\\\"PROPOSAL_SELECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELLED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PROPOSAL_TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CANCEL_RFP_OPTIONS = {\\\\\\\\n  CANCEL_PROPOSALS: \\\\\\\\\\\\\\\"CANCEL_PROPOSALS\\\\\\\\\\\\\\\",\\\\\\\\n  UNLINK_PROPOSALS: \\\\\\\\\\\\\\\"UNLINK_PROPOSALSS\\\\\\\\\\\\\\\",\\\\\\\\n  NONE: \\\\\\\\\\\\\\\"NONE\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction parseJSON(json) {\\\\\\\\n  if (typeof json === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    try {\\\\\\\\n      return JSON.parse(json);\\\\\\\\n    } catch (error) {\\\\\\\\n      return json;\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    return json;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isNumber(value) {\\\\\\\\n  return typeof value === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\\\\\\\\n];\\\\\\\\n\\\\\\\\nfunction getLinkUsingCurrentGateway(url) {\\\\\\\\n  const data = fetch(`https://httpbin.org/headers`);\\\\\\\\n  const gatewayURL = data?.body?.headers?.Origin ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return `https://${\\\\\\\\n    gatewayURL.includes(\\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\") ? \\\\\\\\\\\\\\\"dev.near.org\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\"\\\\\\\\n  }/${url}`;\\\\\\\\n}\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"includes/common.jsx\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst { Tile } = VM.require(\\\\\\\\n  `${REPL_DEVHUB}/widget/devhub.components.molecule.Tile`\\\\\\\\n) || { Tile: () => <></> };\\\\\\\\n\\\\\\\\nconst { accessControlInfo, createEditTeam } = props;\\\\\\\\n\\\\\\\\nconst [editModerators, setEditModerators] = useState(false);\\\\\\\\nconst [moderators, setModerators] = useState(\\\\\\\\n  accessControlInfo.members_list[\\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\"].children || []\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst handleEditModerators = () => {\\\\\\\\n  createEditTeam({\\\\\\\\n    teamName: \\\\\\\\\\\\\\\"moderators\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"The moderator group has permissions to create and edit RFPs, edit and manage proposals, and manage admins.\\\\\\\\\\\\\\\",\\\\\\\\n    members: moderators,\\\\\\\\n    contractCall: \\\\\\\\\\\\\\\"edit_member\\\\\\\\\\\\\\\",\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleCancelModerators = () => {\\\\\\\\n  setEditModerators(false);\\\\\\\\n  setModerators(accessControlInfo.members_list[\\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\"].children);\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <h3>Moderators</h3>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n      <h6>\\\\\\\\n        The moderator group has permissions to create and edit RFPs, edit and\\\\\\\\n        manage proposals, and manage admins.\\\\\\\\n      </h6>\\\\\\\\n      <Widget\\\\\\\\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.PostControls`}\\\\\\\\n        props={{\\\\\\\\n          icon: \\\\\\\\\\\\\\\"bi bi-gear-wide-connected\\\\\\\\\\\\\\\",\\\\\\\\n          className: \\\\\\\\\\\\\\\"mb-3\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n          title: \\\\\\\\\\\\\\\"Edit members\\\\\\\\\\\\\\\",\\\\\\\\n          onClick: () => setEditModerators(!editModerators),\\\\\\\\n          testId: \\\\\\\\\\\\\\\"edit-members\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n    <Tile className=\\\\\\\\\\\\\\\"p-3\\\\\\\\\\\\\\\" style={{ background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      {editModerators ? (\\\\\\\\n        <>\\\\\\\\n          <Widget\\\\\\\\n            src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.admin.AccountsEditor`}\\\\\\\\n            props={{\\\\\\\\n              data: {\\\\\\\\n                maxLength: 100,\\\\\\\\n                placeholder: \\\\\\\\\\\\\\\"member.near\\\\\\\\\\\\\\\",\\\\\\\\n                list: moderators,\\\\\\\\n              },\\\\\\\\n              setList: setModerators,\\\\\\\\n              // Could add a check to see if it is an valid account id.\\\\\\\\n              validate: (newItem) => true,\\\\\\\\n              invalidate: () => null,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"d-flex align-items-center justify-content-end gap-3 mt-4\\\\\\\\\\\\\\\"\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: {\\\\\\\\n                  root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: handleCancelModerators,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n                icon: {\\\\\\\\n                  type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                  variant: \\\\\\\\\\\\\\\"bi-check-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Submit\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: handleEditModerators,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </>\\\\\\\\n      ) : (\\\\\\\\n        <>\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\">Members</div>\\\\\\\\n          {moderators && (\\\\\\\\n            <div class=\\\\\\\\\\\\\\\"vstack\\\\\\\\\\\\\\\">\\\\\\\\n              {moderators.length ? (\\\\\\\\n                moderators.map((child) => (\\\\\\\\n                  <Tile className=\\\\\\\\\\\\\\\"w-25 p-3 m-1\\\\\\\\\\\\\\\" minHeight={10}>\\\\\\\\n                    <Widget\\\\\\\\n                      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.ProfileLine`}\\\\\\\\n                      props={{ accountId: child }}\\\\\\\\n                    />\\\\\\\\n                  </Tile>\\\\\\\\n                ))\\\\\\\\n              ) : (\\\\\\\\n                <div>No moderators</div>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </Tile>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.658366513854e+21
    }
  },
  {
    "id": "5472223392",
    "receipt_id": "5JkKybVKqDjg98NEKCEsHwRnkizoca5fdCvE7QSShmDc",
    "predecessor_account_id": "system",
    "receiver_account_id": "infrastructure-committee.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6HJMNZhho717pAPNN4bZjRjNMV9NczxVPRsqHWMEtMUz",
      "block_height": 120621664,
      "block_timestamp": 1717745147085998000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "infrastructure-committee.near",
      "status": true
    },
    "transaction_hash": "Eeu7fT1xNn7CcGjs6DMdB2eraTNnGX5e4NSMhjMkPVgd",
    "included_in_block_hash": "9zLfYYGTz8h24Mdq2XzhAmyoVhuY2fkvz7WY6Y8DLgQy",
    "block_timestamp": "1717745144787002377",
    "block": {
      "block_height": 120621662
    },
    "receipt_conversion_tokens_burnt": "52320106948000000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8559555078151877e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.658366513854e+21
    }
  }
]