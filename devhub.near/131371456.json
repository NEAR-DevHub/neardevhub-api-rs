[
  {
    "id": "9595451051",
    "receipt_id": "DYr4yJdTk4qKzuomczpkbjHEJAB2QPjNtdp2UUMrSPTW",
    "predecessor_account_id": "djeaunty_fourmule.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EKgxzTooLVUWkRXDkJ4QsLhSy2cwX57xQJx5qzPX1B1W",
      "block_height": 131383096,
      "block_timestamp": 1730103591971947500
    },
    "receipt_outcome": {
      "gas_burnt": 5323343504819,
      "tokens_burnt": 532334350481900000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "FH5T1JLGmDLk56MhKTbkABBVG1vix6eheo3K8Q5qQUtJ",
    "included_in_block_hash": "AWniv5avYQPd9cGyzcC8CiGC6bn25jZnUKZ3eWHzaZgg",
    "block_timestamp": "1730103590856988597",
    "block": {
      "block_height": 131383095
    },
    "receipt_conversion_tokens_burnt": "42292956943500000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_proposal",
        "deposit": 0,
        "fee": 532334350481900000000,
        "args": "{\"body\": {\"name\": \"DevHub Developer Contributor report by Oleg Kuzmin for 2024-30-09 \\\\\\\\u{2013} 2024-27-10\", \"summary\": \"development of `cargo-near` \", \"category\": \"Tooling & Infrastructure\", \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"supervisor\": \"frol.near\", \"description\": \"_I am submitting this contributor report as a [fellowship contributor led by @frol.near](/#/devgovgigs.near/widget/gigs-board.pages.Post?id=541)._\\\\\\\\n\\\\\\\\n- [ ] week Mon Sep 30 2024 - Fri Oct 4 2024\\\\\\\\n  - [x] [cargo-near(chore!): remove unsafe `std::env::set_var` from implementation](https://github.com/near/cargo-near/pull/228)\\\\\\\\n- [ ] week Mon Oct 7 2024 - Fri Oct 11 2024\\\\\\\\n  - [ ] [cargo-near(feat): remove `multivalue` and `reference-types` features from rustc >= 1.82.0](https://github.com/near/cargo-near/pull/229)\\\\\\\\n  - [x] [borsh-rs(feat): ser/de for `IpAddr` type; schema for `Ipv4Addr`/`Ipv6Addr`/`IpAddr` types](https://github.com/near/borsh-rs/pull/309)\\\\\\\\n  - [x] [cargo-near(feat!): integrate `wasm-opt` by default](https://github.com/near/cargo-near/pull/231)\\\\\\\\n  - [x] [cargo-near(chore!): remove unsafe `std::env::set_var` from implementation](https://github.com/near/cargo-near/pull/228)\\\\\\\\n- [ ] week Mon Oct 2024 - Fri Oct 18 2024\\\\\\\\n  - [x] [cargo-near(feat!): integrate `wasm-opt` by default](https://github.com/near/cargo-near/pull/231)\\\\\\\\n  - [x] [cargo-near(chore!): remove unsafe `std::env::set_var` from implementation](https://github.com/near/cargo-near/pull/228)\\\\\\\\n  - [x] [near-workspaces-rs(chore): bump `cargo-near-build` to 0.2.0](https://github.com/near/near-workspaces-rs/pull/380)\\\\\\\\n  - [x] [near-workspaces-rs(ci): fix clippy 1.82 (doc preambles)](https://github.com/near/near-workspaces-rs/pull/381)\\\\\\\\n- [ ] week Mon Oct 21 2024 - Fri Oct 25 2024\\\\\\\\n  - [x] [near-sdk-rs(ci): temporarily freeze 1.81 for test-examples.yml and test-small-examples.yml](https://github.com/near/near-sdk-rs/pull/1250)\\\\\\\\n  - [ ] [cargo-near(test): cargo near new intergration test + gh autorenewal workflow](https://github.com/near/cargo-near/pull/235)\\\\\\\\n\\\\\\\\n### Cost\\\\\\\\n- Total hours: 69 \\\\\\\\n- Rate: $50/hour\\\\\\\\n\", \"linked_proposals\": [], \"receiver_account\": \"nomadx.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"3450\", \"requested_sponsorship_paid_in_currency\": \"USDT\"}, \"labels\": [], \"accepted_terms_and_conditions_version\": 131382857}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7359814835285e+21
    }
  },
  {
    "id": "9595451303",
    "receipt_id": "Drr9jugqUenwrooxbkFYG5KbPZeLj6NVfwZ9PM9WecWY",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6ZXp5gmsiiGkVb2uDB9c6ehv1J1X2hGr9kECkfcX5Ajn",
      "block_height": 131383097,
      "block_timestamp": 1730103593209891600
    },
    "receipt_outcome": {
      "gas_burnt": 4570430126442,
      "tokens_burnt": 457043012644200000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "FH5T1JLGmDLk56MhKTbkABBVG1vix6eheo3K8Q5qQUtJ",
    "included_in_block_hash": "AWniv5avYQPd9cGyzcC8CiGC6bn25jZnUKZ3eWHzaZgg",
    "block_timestamp": "1730103590856988597",
    "block": {
      "block_height": 131383095
    },
    "receipt_conversion_tokens_burnt": "42292956943500000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 457043012644200000000,
        "args": "{\"data\": {\"devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"We have just received a new *Tooling & Infrastructure* proposal.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**By**: @djeaunty_fourmule.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Title**: \\\\\\\\u{201c}DevHub Developer Contributor report by Oleg Kuzmin for 2024-30-09 \\\\\\\\u{2013} 2024-27-10\\\\\\\\u{201c}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Summary**:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndevelopment of `cargo-near` \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nRead the full proposal and share your feedback on [DevHub](/devhub.near/widget/app?page=proposal&id=235)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7359814835285e+21
    }
  },
  {
    "id": "9595451309",
    "receipt_id": "BsQwKBrZiRCYRtpWmbgWBSbz1xNWRZWVdPm3zFKTfNvd",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6ZXp5gmsiiGkVb2uDB9c6ehv1J1X2hGr9kECkfcX5Ajn",
      "block_height": 131383097,
      "block_timestamp": 1730103593209891600
    },
    "receipt_outcome": {
      "gas_burnt": 3471417469446,
      "tokens_burnt": 347141746944600000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "FH5T1JLGmDLk56MhKTbkABBVG1vix6eheo3K8Q5qQUtJ",
    "included_in_block_hash": "AWniv5avYQPd9cGyzcC8CiGC6bn25jZnUKZ3eWHzaZgg",
    "block_timestamp": "1730103590856988597",
    "block": {
      "block_height": 131383095
    },
    "receipt_conversion_tokens_burnt": "42292956943500000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_block_height_callback",
        "deposit": 0,
        "fee": 347141746944600000000,
        "args": "{\"proposal\": {\"id\": 235, \"snapshot\": {\"name\": \"DevHub Developer Contributor report by Oleg Kuzmin for 2024-30-09 \\\\\\\\u{2013} 2024-27-10\", \"labels\": [], \"summary\": \"development of `cargo-near` \", \"category\": \"Tooling & Infrastructure\", \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"editor_id\": \"djeaunty_fourmule.near\", \"timestamp\": \"1730103591971947443\", \"supervisor\": \"frol.near\", \"description\": \"_I am submitting this contributor report as a [fellowship contributor led by @frol.near](/#/devgovgigs.near/widget/gigs-board.pages.Post?id=541)._\\\\\\\\n\\\\\\\\n- [ ] week Mon Sep 30 2024 - Fri Oct 4 2024\\\\\\\\n  - [x] [cargo-near(chore!): remove unsafe `std::env::set_var` from implementation](https://github.com/near/cargo-near/pull/228)\\\\\\\\n- [ ] week Mon Oct 7 2024 - Fri Oct 11 2024\\\\\\\\n  - [ ] [cargo-near(feat): remove `multivalue` and `reference-types` features from rustc >= 1.82.0](https://github.com/near/cargo-near/pull/229)\\\\\\\\n  - [x] [borsh-rs(feat): ser/de for `IpAddr` type; schema for `Ipv4Addr`/`Ipv6Addr`/`IpAddr` types](https://github.com/near/borsh-rs/pull/309)\\\\\\\\n  - [x] [cargo-near(feat!): integrate `wasm-opt` by default](https://github.com/near/cargo-near/pull/231)\\\\\\\\n  - [x] [cargo-near(chore!): remove unsafe `std::env::set_var` from implementation](https://github.com/near/cargo-near/pull/228)\\\\\\\\n- [ ] week Mon Oct 2024 - Fri Oct 18 2024\\\\\\\\n  - [x] [cargo-near(feat!): integrate `wasm-opt` by default](https://github.com/near/cargo-near/pull/231)\\\\\\\\n  - [x] [cargo-near(chore!): remove unsafe `std::env::set_var` from implementation](https://github.com/near/cargo-near/pull/228)\\\\\\\\n  - [x] [near-workspaces-rs(chore): bump `cargo-near-build` to 0.2.0](https://github.com/near/near-workspaces-rs/pull/380)\\\\\\\\n  - [x] [near-workspaces-rs(ci): fix clippy 1.82 (doc preambles)](https://github.com/near/near-workspaces-rs/pull/381)\\\\\\\\n- [ ] week Mon Oct 21 2024 - Fri Oct 25 2024\\\\\\\\n  - [x] [near-sdk-rs(ci): temporarily freeze 1.81 for test-examples.yml and test-small-examples.yml](https://github.com/near/near-sdk-rs/pull/1250)\\\\\\\\n  - [ ] [cargo-near(test): cargo near new intergration test + gh autorenewal workflow](https://github.com/near/cargo-near/pull/235)\\\\\\\\n\\\\\\\\n### Cost\\\\\\\\n- Total hours: 69 \\\\\\\\n- Rate: $50/hour\\\\\\\\n\", \"linked_proposals\": [], \"receiver_account\": \"nomadx.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"3450\", \"requested_sponsorship_paid_in_currency\": \"USDT\"}, \"author_id\": \"djeaunty_fourmule.near\", \"snapshot_history\": [], \"social_db_post_block_height\": \"0\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7359814835285e+21
    }
  },
  {
    "id": "9595451314",
    "receipt_id": "8CtjrtuqXvitfRS1WFbC2NYomrVPSN3LrzgDaVmBu3jC",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6ZXp5gmsiiGkVb2uDB9c6ehv1J1X2hGr9kECkfcX5Ajn",
      "block_height": 131383097,
      "block_timestamp": 1730103593209891600
    },
    "receipt_outcome": {
      "gas_burnt": 3571694165143,
      "tokens_burnt": 357169416514300000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "FH5T1JLGmDLk56MhKTbkABBVG1vix6eheo3K8Q5qQUtJ",
    "included_in_block_hash": "AWniv5avYQPd9cGyzcC8CiGC6bn25jZnUKZ3eWHzaZgg",
    "block_timestamp": "1730103590856988597",
    "block": {
      "block_height": 131383095
    },
    "receipt_conversion_tokens_burnt": "42292956943500000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 357169416514300000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"[{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":235,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"djeaunty_fourmule.near\\\\\\\\\\\\\\\"}},{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":235,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"djeaunty_fourmule.near\\\\\\\\\\\\\\\"}},{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":235,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"djeaunty_fourmule.near\\\\\\\\\\\\\\\"}}]\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7359814835285e+21
    }
  },
  {
    "id": "9602502299",
    "receipt_id": "Gg8zX13pjR71ERXERzhN9Eg9U9VDwFcbe6ERkkzexEii",
    "predecessor_account_id": "tfdevhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "FtaZDRXTXkHehh7THePuETQKMmuvp3nisgg7ydVEWtUL",
      "block_height": 131401026,
      "block_timestamp": 1730123649158087200
    },
    "receipt_outcome": {
      "gas_burnt": 5322469926118,
      "tokens_burnt": 532246992611800000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "3vF88UvShVm4HnCvYpddbvp2rwWN9aMswtH1mqaAcoSZ",
    "included_in_block_hash": "HgnPPz61n26rGbs9rmar8uCkkQ6jZ7g5gGahFh64jnVa",
    "block_timestamp": "1730123648159397099",
    "block": {
      "block_height": 131401025
    },
    "receipt_conversion_tokens_burnt": "32737140457500000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 532246992611800000000,
        "args": "{\"id\": 231, \"timeline\": {\"status\": \"FUNDED\", \"payouts\": [\"https://nearblocks.io/txns/DJk11xkBoV72M43hfAEdGf2xbg9FLjHotzJaP2GBCTBX\"], \"kyc_verified\": true, \"timeline_version\": \"V1\", \"test_transaction_sent\": true, \"kyc_verified_deprecated\": false, \"sponsor_requested_review\": true, \"trustees_released_payment\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 919550101976800000000
    }
  },
  {
    "id": "9602503794",
    "receipt_id": "DrSH7p2zHA7FjkL1Z4xAKnzcb5AzPr1NEhzfCXGsLD1N",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "27e2wvWUScakuc6TimrPiVgdhq781VkGGfdtdDRN4yUJ",
      "block_height": 131401028,
      "block_timestamp": 1730123651443844400
    },
    "receipt_outcome": {
      "gas_burnt": 3545659689075,
      "tokens_burnt": 354565968907500000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "3vF88UvShVm4HnCvYpddbvp2rwWN9aMswtH1mqaAcoSZ",
    "included_in_block_hash": "HgnPPz61n26rGbs9rmar8uCkkQ6jZ7g5gGahFh64jnVa",
    "block_timestamp": "1730123648159397099",
    "block": {
      "block_height": 131401025
    },
    "receipt_conversion_tokens_burnt": "32737140457500000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 354565968907500000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"joespano.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":231,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tfdevhub.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 919550101976800000000
    }
  },
  {
    "id": "9602540122",
    "receipt_id": "Hjiqoc52ARziBNJ6FwnZWZUAx9aqrNnMKKFQPRLzwsRj",
    "predecessor_account_id": "tfdevhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8cmioE3JMKaJPoofdGbQJmAjWJyZCsH9ySkZ3crLCxxs",
      "block_height": 131401083,
      "block_timestamp": 1730123712759205600
    },
    "receipt_outcome": {
      "gas_burnt": 43240904878608,
      "tokens_burnt": 4.3240904878608e+21,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "9TAuPoacaxs4u387VhS3aCVmeiGiGMYtyheepUtyzuWj",
    "included_in_block_hash": "14kS4ySAYEk1VnbHTHgwGnBwz9p4MKzPm68Cj1szdxmy",
    "block_timestamp": "1730123711752987337",
    "block": {
      "block_height": 131401082
    },
    "receipt_conversion_tokens_burnt": "32737140457500000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 4.3240904878608e+21,
        "args": "{\"id\": 229, \"timeline\": {\"status\": \"FUNDED\", \"payouts\": [\"https://nearblocks.io/txns/5sW6qdypM2CfdZbhMCH51BPEaxPCSP2gHraLdnqTC2uH\"], \"kyc_verified\": true, \"timeline_version\": \"V1\", \"test_transaction_sent\": true, \"kyc_verified_deprecated\": false, \"sponsor_requested_review\": true, \"trustees_released_payment\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 4.7094197273302e+21
    }
  },
  {
    "id": "9602541494",
    "receipt_id": "77Hm7FoT6sBVTZK5P4axah6mR6z8kjjSQRFcbgxygvmD",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8BxopoUSrqvEh3iAqr7pn8Kak2MDamJ99zVT2Dg2yLDP",
      "block_height": 131401085,
      "block_timestamp": 1730123714862070000
    },
    "receipt_outcome": {
      "gas_burnt": 3525920990119,
      "tokens_burnt": 352592099011900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "9TAuPoacaxs4u387VhS3aCVmeiGiGMYtyheepUtyzuWj",
    "included_in_block_hash": "14kS4ySAYEk1VnbHTHgwGnBwz9p4MKzPm68Cj1szdxmy",
    "block_timestamp": "1730123711752987337",
    "block": {
      "block_height": 131401082
    },
    "receipt_conversion_tokens_burnt": "32737140457500000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 352592099011900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"petersalomonsen.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":229,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tfdevhub.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 4.7094197273302e+21
    }
  },
  {
    "id": "9608453134",
    "receipt_id": "H7hqpNiPmmHMoWngr2DBkPfb3nfH28v1XU1Na5C9vQt8",
    "predecessor_account_id": "tfdevhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2PBssm7ZWpbNF8We1PfnhjfgtKrzdAmuiSusisSWBDBq",
      "block_height": 131415637,
      "block_timestamp": 1730140028304249900
    },
    "receipt_outcome": {
      "gas_burnt": 4448255504214,
      "tokens_burnt": 444825550421400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "CPo2kY81iYz644T2TqRVgDzcSLeYKANmXX4sDzJDbUe7",
    "included_in_block_hash": "5ZETEF4tfePctqE3bkTJVgneoee9mcwcPzGPPeuMDepy",
    "block_timestamp": "1730140027102017837",
    "block": {
      "block_height": 131415636
    },
    "receipt_conversion_tokens_burnt": "32579784198000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 444825550421400000000,
        "args": "{\"id\": 173, \"timeline\": {\"status\": \"FUNDED\", \"payouts\": [\"https://nearblocks.io/txns/5TbvvCGkk4Vq1r6Efy9dbgPFPqejbFgk7T8NkZi2PDtG\"], \"kyc_verified\": true, \"timeline_version\": \"V1\", \"test_transaction_sent\": true, \"sponsor_requested_review\": true, \"trustees_released_payment\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": true}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 829939009623700000000
    }
  },
  {
    "id": "9608453273",
    "receipt_id": "FBQZPCsyThDtkVPpB2bDT3RtDhsQQsQ6gR8BwP3XVd3U",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "Azw5gKEj8fAdoHpzMeQsiHykD43582rxJ1PhGkkZKHKY",
      "block_height": 131415638,
      "block_timestamp": 1730140029242534700
    },
    "receipt_outcome": {
      "gas_burnt": 3525336750043,
      "tokens_burnt": 352533675004300000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "CPo2kY81iYz644T2TqRVgDzcSLeYKANmXX4sDzJDbUe7",
    "included_in_block_hash": "5ZETEF4tfePctqE3bkTJVgneoee9mcwcPzGPPeuMDepy",
    "block_timestamp": "1730140027102017837",
    "block": {
      "block_height": 131415636
    },
    "receipt_conversion_tokens_burnt": "32579784198000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 352533675004300000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"robert.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":173,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tfdevhub.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 829939009623700000000
    }
  },
  {
    "id": "9608463136",
    "receipt_id": "FA7AWPPGoQZ5rs77PvZs3PtkCP1vpv9eLiTaZx9PwLRc",
    "predecessor_account_id": "tfdevhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3p6o8eUFQJbK1o1rZvkKe3MpzBaYLFaa3oHHMu2vx1b7",
      "block_height": 131415692,
      "block_timestamp": 1730140088389261800
    },
    "receipt_outcome": {
      "gas_burnt": 4743221460006,
      "tokens_burnt": 474322146000600000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "BQ4hoWNPjWZbBZnrC9rsBTCWfwzxFVv6PRHysW5mMYS7",
    "included_in_block_hash": "4Y2Js7LsKNcmVcSTtXbyqRTxwditixcNvirvNQ1DWnkN",
    "block_timestamp": "1730140087363475315",
    "block": {
      "block_height": 131415691
    },
    "receipt_conversion_tokens_burnt": "32579784198000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 474322146000600000000,
        "args": "{\"id\": 173, \"timeline\": {\"status\": \"FUNDED\", \"payouts\": [\"https://nearblocks.io/txns/5TbvvCGkk4Vq1r6Efy9dbgPFPqejbFgk7T8NkZi2PDtG\"], \"kyc_verified\": true, \"timeline_version\": \"V1\", \"test_transaction_sent\": true, \"sponsor_requested_review\": true, \"trustees_released_payment\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": true}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 859365702230500000000
    }
  },
  {
    "id": "9608463282",
    "receipt_id": "DYpya3Gc2ghjX32ZBNj1im8AqyQ2w4d4vAzRjc7ZuYV4",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "H1VcBqnMY4au2cXU8E338aCq2eSAkzbjN6FD3R1jcFGX",
      "block_height": 131415693,
      "block_timestamp": 1730140089507484200
    },
    "receipt_outcome": {
      "gas_burnt": 3524637720319,
      "tokens_burnt": 352463772031900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "BQ4hoWNPjWZbBZnrC9rsBTCWfwzxFVv6PRHysW5mMYS7",
    "included_in_block_hash": "4Y2Js7LsKNcmVcSTtXbyqRTxwditixcNvirvNQ1DWnkN",
    "block_timestamp": "1730140087363475315",
    "block": {
      "block_height": 131415691
    },
    "receipt_conversion_tokens_burnt": "32579784198000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 352463772031900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"robert.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":173,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tfdevhub.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 859365702230500000000
    }
  },
  {
    "id": "9608471593",
    "receipt_id": "3nECeB2PaCJdKRvEjL2k7Kuc3q9wyBHGbXEwFF6vooLN",
    "predecessor_account_id": "tfdevhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9oMTjPaVsc8ATdGZgZc2QE36bxmEvCX9RP7bHBkW7Xi6",
      "block_height": 131415751,
      "block_timestamp": 1730140151231645700
    },
    "receipt_outcome": {
      "gas_burnt": 4905068253990,
      "tokens_burnt": 490506825399000000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "7NwQeRsWy9Ghb58gcviv9RqM9Vs6uE1J1ekoqPtfJAKV",
    "included_in_block_hash": "2Bcmmt4Ksc5jNnJTVUFBq2rBMTwHFmctYQn93v3a7kXK",
    "block_timestamp": "1730140150138842512",
    "block": {
      "block_height": 131415750
    },
    "receipt_conversion_tokens_burnt": "32579784198000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 490506825399000000000,
        "args": "{\"id\": 173, \"timeline\": {\"status\": \"FUNDED\", \"payouts\": [\"https://nearblocks.io/txns/5TbvvCGkk4Vq1r6Efy9dbgPFPqejbFgk7T8NkZi2PDtG\"], \"kyc_verified\": true, \"timeline_version\": \"V1\", \"test_transaction_sent\": true, \"sponsor_requested_review\": true, \"trustees_released_payment\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": true}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 881079163999300000000
    }
  },
  {
    "id": "9608471660",
    "receipt_id": "HxgSSqj1FYKxkQf92KRptsTjn56JMrLNnKYV4EjLyDWt",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3tFqH5pb287GEVFJssw8VEo6zz2HtAxSXeXaAfuMB1Er",
      "block_height": 131415752,
      "block_timestamp": 1730140152295010000
    },
    "receipt_outcome": {
      "gas_burnt": 3579925544023,
      "tokens_burnt": 357992554402300000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "7NwQeRsWy9Ghb58gcviv9RqM9Vs6uE1J1ekoqPtfJAKV",
    "included_in_block_hash": "2Bcmmt4Ksc5jNnJTVUFBq2rBMTwHFmctYQn93v3a7kXK",
    "block_timestamp": "1730140150138842512",
    "block": {
      "block_height": 131415750
    },
    "receipt_conversion_tokens_burnt": "32579784198000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 357992554402300000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"robert.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":173,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tfdevhub.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 881079163999300000000
    }
  },
  {
    "id": "9612890308",
    "receipt_id": "4WAzSXMHgnmZzxPRok2dyFcGUoAhy2heUtQqfAP7p8Ca",
    "predecessor_account_id": "theori.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "c7uREiLKvpM7YR5iqLdDu2FaEeyPuEN2mgUvVrZPoof",
      "block_height": 131427075,
      "block_timestamp": 1730152757999582500
    },
    "receipt_outcome": {
      "gas_burnt": 5108546336284,
      "tokens_burnt": 510854633628400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "7kjK4rB9UAvLEH5chtwQtL6SBymdyq6qCN91thGyaZGk",
    "included_in_block_hash": "5XtZa81mHxTE1KwPhDUJG9YyXm6vkXbZnsis9hSCzF6c",
    "block_timestamp": "1730152757058619851",
    "block": {
      "block_height": 131427074
    },
    "receipt_conversion_tokens_burnt": "31702403842000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 510854633628400000000,
        "args": "{\"id\": 234, \"timeline\": {\"status\": \"REVIEW\", \"kyc_verified\": true, \"timeline_version\": \"V1\", \"sponsor_requested_review\": true, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 900643931255500000000
    }
  },
  {
    "id": "9612890533",
    "receipt_id": "H8xF6Dh5Xia7Q5Ro2miJpv8eaNDhMFQ1kSHT2aJFgRSA",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "ArCB7q2yDb3tqsAQUpVyrDM4mtJTy3eMwxFhrcfNcPqi",
      "block_height": 131427076,
      "block_timestamp": 1730152759143429400
    },
    "receipt_outcome": {
      "gas_burnt": 3580868937851,
      "tokens_burnt": 358086893785100000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "7kjK4rB9UAvLEH5chtwQtL6SBymdyq6qCN91thGyaZGk",
    "included_in_block_hash": "5XtZa81mHxTE1KwPhDUJG9YyXm6vkXbZnsis9hSCzF6c",
    "block_timestamp": "1730152757058619851",
    "block": {
      "block_height": 131427074
    },
    "receipt_conversion_tokens_burnt": "31702403842000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 358086893785100000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"thomasguntenaar.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":234,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"theori.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 900643931255500000000
    }
  },
  {
    "id": "9614023692",
    "receipt_id": "F1FbwQDMaFmfp9wiRsHjHf74TnRNiFrWUw59988SLGbw",
    "predecessor_account_id": "joespano.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "4V3jvwEGyU7eXnFJF4pDzJ9T54n5qFsZWfxxUJPkz1LR",
      "block_height": 131430534,
      "block_timestamp": 1730156557838911000
    },
    "receipt_outcome": {
      "gas_burnt": 5276438858815,
      "tokens_burnt": 527643885881500000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "3ycmR5fLLebEPend5U31ksqcKvYxi9cddrVwn4RRzdAA",
    "included_in_block_hash": "3cRpCsk7xZBqnc6yw61LpEwLB7aNDZaMgvEKopU6z4Qa",
    "block_timestamp": "1730156556742510714",
    "block": {
      "block_height": 131430533
    },
    "receipt_conversion_tokens_burnt": "41091327325500000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_proposal",
        "deposit": 0,
        "fee": 527643885881500000000,
        "args": "{\"body\": {\"name\": \"DevHub Activities Report  10/14-10/27\", \"summary\": \"DevHub Moderator Contributions Bi-Weekly Report\", \"category\": \"DevDAO Operations\", \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"supervisor\": \"theori.near\", \"description\": \"\\\\\\\\n**DevHub Activities:**\\\\\\\\n- Continued leadership planning for Q4 & Q1 2025\\\\\\\\n- Outreach regarding content and potential new services\\\\\\\\n\\\\\\\\t- Community and ecosystem meetings\\\\\\\\n- Updated DevHub YouTube videos\\\\\\\\n- Workgroup support\\\\\\\\n\\\\\\\\t- Marketing\\\\\\\\n- Planning for upcoming content roadmap\\\\\\\\n\\\\\\\\n**DevRel:**\\\\\\\\n- Internal Meetings: weekly stand-ups, 1-on-1 with team members, and meetings with core team members.\\\\\\\\n- Upcoming event pre-production coordination\\\\\\\\n\\\\\\\\t- Redacted workshops\\\\\\\\n- Ecosystem developer conversations and feedback collection for current and future initiatives\\\\\\\\n- Tutorial content editing\\\\\\\\n- Developer outreach\\\\\\\\n\\\\\\\\t- Remote support for NEAR ecosystem projects and ongoing hackathon\\\\\\\\n\\\\\\\\n**Marketing & Retention Planning & In-Progress:**\\\\\\\\n* New show concept and episode planning\\\\\\\\n\\\\\\\\t* Recording\\\\\\\\n\\\\\\\\t* Clip creations\\\\\\\\n* Social Media posts\\\\\\\\n\\\\\\\\t* [Top social posts this period](https://drive.google.com/file/d/1XeZ99NeMGxbsAEdlsnOsg4J43_K0YZfC/view?usp=sharing)\\\\\\\\n- Content coordination\\\\\\\\n\\\\\\\\t- Planning regarding new concepts for Live Streams\\\\\\\\n\\\\\\\\t\\\\\\\\t- Working on custom content plan for attracting non-web3 devs\\\\\\\\n\\\\\\\\t* Coordination with NF, Pagoda, and 3rd parties for upcoming content items\\\\\\\\n\\\\\\\\t\\\\\\\\t* Additional redacted hackathon content brief reviews\\\\\\\\n\\\\\\\\t\\\\\\\\t* Planing time and recording for Redacted and collabs with NF live streams\\\\\\\\n\\\\\\\\t* AMA planning and recording\\\\\\\\n\\\\\\\\t* Post-Hackathon follow-up planning and meetings\\\\\\\\n\\\\\\\\t* Multiple workshops live stream\\\\\\\\n\\\\\\\\t\\\\\\\\t* Proximity\\\\\\\\n\\\\\\\\t\\\\\\\\t* Bitte\\\\\\\\n\\\\\\\\t\\\\\\\\t* Meta Pool\\\\\\\\n\\\\\\\\t\\\\\\\\t* Fridays with Frol\\\\\\\\n\\\\\\\\t\\\\\\\\t* Zettablock\\\\\\\\n\\\\\\\\nReimbursements:\\\\\\\\nLoom - $15\\\\\\\\nMailchimp - $63\", \"linked_proposals\": [], \"receiver_account\": \"joespano.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"8078\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"labels\": [], \"accepted_terms_and_conditions_version\": 131430339}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7170974754533e+21
    }
  },
  {
    "id": "9614025836",
    "receipt_id": "AAXyxgndL2NLTT3qmjM41mPix7AFctXXnwSwN2JGqzY3",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6q4tAWZCGPXhmKeSyqwnebRUmL7H1Cc9L9RAjorvQU2A",
      "block_height": 131430538,
      "block_timestamp": 1730156562281949400
    },
    "receipt_outcome": {
      "gas_burnt": 4487129069510,
      "tokens_burnt": 448712906951000000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "3ycmR5fLLebEPend5U31ksqcKvYxi9cddrVwn4RRzdAA",
    "included_in_block_hash": "3cRpCsk7xZBqnc6yw61LpEwLB7aNDZaMgvEKopU6z4Qa",
    "block_timestamp": "1730156556742510714",
    "block": {
      "block_height": 131430533
    },
    "receipt_conversion_tokens_burnt": "41091327325500000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 448712906951000000000,
        "args": "{\"data\": {\"devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"We have just received a new *DevDAO Operations* proposal.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**By**: @joespano.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Title**: \\\\\\\\u{201c}DevHub Activities Report  10/14-10/27\\\\\\\\u{201c}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Summary**:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nDevHub Moderator Contributions Bi-Weekly Report\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nRead the full proposal and share your feedback on [DevHub](/devhub.near/widget/app?page=proposal&id=236)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7170974754533e+21
    }
  },
  {
    "id": "9614025847",
    "receipt_id": "4qAXyvF5ax2wDpFE46F3twz4gqQJ6g6U8tQRP1oCEf3j",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6q4tAWZCGPXhmKeSyqwnebRUmL7H1Cc9L9RAjorvQU2A",
      "block_height": 131430538,
      "block_timestamp": 1730156562281949400
    },
    "receipt_outcome": {
      "gas_burnt": 3397146283194,
      "tokens_burnt": 339714628319400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "3ycmR5fLLebEPend5U31ksqcKvYxi9cddrVwn4RRzdAA",
    "included_in_block_hash": "3cRpCsk7xZBqnc6yw61LpEwLB7aNDZaMgvEKopU6z4Qa",
    "block_timestamp": "1730156556742510714",
    "block": {
      "block_height": 131430533
    },
    "receipt_conversion_tokens_burnt": "41091327325500000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_block_height_callback",
        "deposit": 0,
        "fee": 339714628319400000000,
        "args": "{\"proposal\": {\"id\": 236, \"snapshot\": {\"name\": \"DevHub Activities Report  10/14-10/27\", \"labels\": [], \"summary\": \"DevHub Moderator Contributions Bi-Weekly Report\", \"category\": \"DevDAO Operations\", \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"editor_id\": \"joespano.near\", \"timestamp\": \"1730156561170187884\", \"supervisor\": \"theori.near\", \"description\": \"\\\\\\\\n**DevHub Activities:**\\\\\\\\n- Continued leadership planning for Q4 & Q1 2025\\\\\\\\n- Outreach regarding content and potential new services\\\\\\\\n\\\\\\\\t- Community and ecosystem meetings\\\\\\\\n- Updated DevHub YouTube videos\\\\\\\\n- Workgroup support\\\\\\\\n\\\\\\\\t- Marketing\\\\\\\\n- Planning for upcoming content roadmap\\\\\\\\n\\\\\\\\n**DevRel:**\\\\\\\\n- Internal Meetings: weekly stand-ups, 1-on-1 with team members, and meetings with core team members.\\\\\\\\n- Upcoming event pre-production coordination\\\\\\\\n\\\\\\\\t- Redacted workshops\\\\\\\\n- Ecosystem developer conversations and feedback collection for current and future initiatives\\\\\\\\n- Tutorial content editing\\\\\\\\n- Developer outreach\\\\\\\\n\\\\\\\\t- Remote support for NEAR ecosystem projects and ongoing hackathon\\\\\\\\n\\\\\\\\n**Marketing & Retention Planning & In-Progress:**\\\\\\\\n* New show concept and episode planning\\\\\\\\n\\\\\\\\t* Recording\\\\\\\\n\\\\\\\\t* Clip creations\\\\\\\\n* Social Media posts\\\\\\\\n\\\\\\\\t* [Top social posts this period](https://drive.google.com/file/d/1XeZ99NeMGxbsAEdlsnOsg4J43_K0YZfC/view?usp=sharing)\\\\\\\\n- Content coordination\\\\\\\\n\\\\\\\\t- Planning regarding new concepts for Live Streams\\\\\\\\n\\\\\\\\t\\\\\\\\t- Working on custom content plan for attracting non-web3 devs\\\\\\\\n\\\\\\\\t* Coordination with NF, Pagoda, and 3rd parties for upcoming content items\\\\\\\\n\\\\\\\\t\\\\\\\\t* Additional redacted hackathon content brief reviews\\\\\\\\n\\\\\\\\t\\\\\\\\t* Planing time and recording for Redacted and collabs with NF live streams\\\\\\\\n\\\\\\\\t* AMA planning and recording\\\\\\\\n\\\\\\\\t* Post-Hackathon follow-up planning and meetings\\\\\\\\n\\\\\\\\t* Multiple workshops live stream\\\\\\\\n\\\\\\\\t\\\\\\\\t* Proximity\\\\\\\\n\\\\\\\\t\\\\\\\\t* Bitte\\\\\\\\n\\\\\\\\t\\\\\\\\t* Meta Pool\\\\\\\\n\\\\\\\\t\\\\\\\\t* Fridays with Frol\\\\\\\\n\\\\\\\\t\\\\\\\\t* Zettablock\\\\\\\\n\\\\\\\\nReimbursements:\\\\\\\\nLoom - $15\\\\\\\\nMailchimp - $63\", \"linked_proposals\": [], \"receiver_account\": \"joespano.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"8078\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"author_id\": \"joespano.near\", \"snapshot_history\": [], \"social_db_post_block_height\": \"0\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7170974754533e+21
    }
  },
  {
    "id": "9614025851",
    "receipt_id": "6xqSsF1gx46cgEgqFndRkChergEMsXJ9CtT6NW2DzHWb",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6q4tAWZCGPXhmKeSyqwnebRUmL7H1Cc9L9RAjorvQU2A",
      "block_height": 131430538,
      "block_timestamp": 1730156562281949400
    },
    "receipt_outcome": {
      "gas_burnt": 3599347269759,
      "tokens_burnt": 359934726975900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "3ycmR5fLLebEPend5U31ksqcKvYxi9cddrVwn4RRzdAA",
    "included_in_block_hash": "3cRpCsk7xZBqnc6yw61LpEwLB7aNDZaMgvEKopU6z4Qa",
    "block_timestamp": "1730156556742510714",
    "block": {
      "block_height": 131430533
    },
    "receipt_conversion_tokens_burnt": "41091327325500000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 359934726975900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"[{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"theori.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":236,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"joespano.near\\\\\\\\\\\\\\\"}},{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":236,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"joespano.near\\\\\\\\\\\\\\\"}}]\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7170974754533e+21
    }
  },
  {
    "id": "9624710648",
    "receipt_id": "EjNrA78eg4g5FnqsQHPRWeRjL1NcB3JUvu3kR7ZgLT2S",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9FjnLf6y3BKHBSHGxDYDuGUuWjkZN4sy6bTvUJbZwmwU",
      "block_height": 131462448,
      "block_timestamp": 1730191770472252400
    },
    "receipt_outcome": {
      "gas_burnt": 4513422985094,
      "tokens_burnt": 451342298509400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "5BRkw2nYg1MDFXXr98HrkgD2DUZNaDhzH9dzknJXHNQY",
    "included_in_block_hash": "AUwMZoiPKfvCsCxWMtBRJop3jxGHjzKTvUfJc8ji7zUB",
    "block_timestamp": "1730191769720504729",
    "block": {
      "block_height": 131462447
    },
    "receipt_conversion_tokens_burnt": "31707172213500000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 451342298509400000000,
        "args": "{\"id\": 235, \"timeline\": {\"status\": \"APPROVED\", \"kyc_verified\": true, \"timeline_version\": \"V1\", \"sponsor_requested_review\": true, \"reviewer_completed_attestation\": true}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 842133548261200000000
    }
  },
  {
    "id": "9624711535",
    "receipt_id": "7poQnA7juFFgU3xpHGi64AC4e76svBxcjfHGwYFmE4Hk",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7BPg2fQPbP5E26fGYbnRwUZL5hMX4m5y1Qjp1iEwoAEs",
      "block_height": 131462449,
      "block_timestamp": 1730191771537585400
    },
    "receipt_outcome": {
      "gas_burnt": 3590840775383,
      "tokens_burnt": 359084077538300000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "5BRkw2nYg1MDFXXr98HrkgD2DUZNaDhzH9dzknJXHNQY",
    "included_in_block_hash": "AUwMZoiPKfvCsCxWMtBRJop3jxGHjzKTvUfJc8ji7zUB",
    "block_timestamp": "1730191769720504729",
    "block": {
      "block_height": 131462447
    },
    "receipt_conversion_tokens_burnt": "31707172213500000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 359084077538300000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"djeaunty_fourmule.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":235,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 842133548261200000000
    }
  },
  {
    "id": "9634146860",
    "receipt_id": "AoJzZSdfyRwNJPMUwCCAqWwvxFvtTYZPjbAsH4HeTiVg",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5Wyms6TBjeLVo7YStpf5sdHKfYRU3jeWANF3ShQoSCpn",
      "block_height": 131485891,
      "block_timestamp": 1730217942397883000
    },
    "receipt_outcome": {
      "gas_burnt": 16060058389220,
      "tokens_burnt": 1.606005838922e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "9LoyBJzFz6vS7LTCUppjAokDyKcoDJRHnEkUiyw8gCsv",
    "included_in_block_hash": "GRVVR1N2cKjBFKj4E3eWcXoZiBdbMwtTQV4ujx1fb4yv",
    "block_timestamp": "1730217941220115966",
    "block": {
      "block_height": 131485890
    },
    "receipt_conversion_tokens_burnt": "302526831556000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.606005838922e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.entity.post.PostEditor\": {\"\": \"const { normalize } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.stringUtils\\\\\\\\\\\\\\\");\\\\\\\\nconst { getDepositAmountForWriteAccess } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.common\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\ngetDepositAmountForWriteAccess || (getDepositAmountForWriteAccess = () => {});\\\\\\\\nnormalize || (normalize = () => {});\\\\\\\\n\\\\\\\\nconst CenteredMessage = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n  height: 384px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"submit-post-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nfunction initLabels() {\\\\\\\\n  const labels = [];\\\\\\\\n  if (typeof props.labels === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    labels.push(...props.labels.split(\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"));\\\\\\\\n  }\\\\\\\\n  if (Array.isArray(props.labels)) {\\\\\\\\n    labels.push(...props.labels);\\\\\\\\n  }\\\\\\\\n  if (props.referral) {\\\\\\\\n    labels.push(`referral:${props.referral}`);\\\\\\\\n  }\\\\\\\\n  return labels;\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (!context.accountId) {\\\\\\\\n  return (\\\\\\\\n    <CenteredMessage height={\\\\\\\\\\\\\\\"384px\\\\\\\\\\\\\\\"}>\\\\\\\\n      <h2>Please sign in to create a post.</h2>\\\\\\\\n    </CenteredMessage>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst userStorageDeposit = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"storage_balance_of\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    account_id: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst cleanDescription = (description) => {\\\\\\\\n  return description\\\\\\\\n    ? description.replace(\\\\\\\\n        /###### Requested amount: .+?\\\\\\\\\\\\\\\\n###### Requested sponsor: @[^\\\\\\\\\\\\\\\\s]+\\\\\\\\\\\\\\\\n/g,\\\\\\\\n        \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n      )\\\\\\\\n    : description;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst postTypeOptions = {\\\\\\\\n  Idea: {\\\\\\\\n    name: \\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\",\\\\\\\\n    icon: \\\\\\\\\\\\\\\"bi-lightbulb\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Get feedback from the community about a problem, opportunity, or need.\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  Solution: {\\\\\\\\n    name: \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\",\\\\\\\\n    icon: \\\\\\\\\\\\\\\"bi-rocket\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Provide a specific proposal or implementation to an idea, optionally requesting funding. If your solution relates to an existing idea, please reply to the original post with a solution.\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nlet fields = {\\\\\\\\n  Comment: [\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n  Idea: [\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n  Solution: [\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"fund_raising\\\\\\\\\\\\\\\"],\\\\\\\\n  Attestation: [\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n  Sponsorship: [\\\\\\\\n    \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"amount\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"sponsorship_token\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"supervisor\\\\\\\\\\\\\\\",\\\\\\\\n  ],\\\\\\\\n  Github: [\\\\\\\\\\\\\\\"githubLink\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isCreatePostPage = props.isCreatePostPage ?? false;\\\\\\\\nconst postType = props.postType ?? \\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\";\\\\\\\\nconst parentId = props.parentId ?? null;\\\\\\\\nconst mode = props.mode ?? \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\";\\\\\\\\nconst labelStrings = initLabels();\\\\\\\\nconst [postIdList, setPostIdList] = useState(null); // to show updated post after approve txn\\\\\\\\nconst [showPostPage, setShowPostPage] = useState(false); // show newly created post\\\\\\\\nconst [postId, setPostId] = useState(props.postId ?? null);\\\\\\\\nconst [postData, setPostData] = useState(null); // for capturing edit post change\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [isSubmittingTransaction, setIsSubmittingTransaction] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (mode == \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\") {\\\\\\\\n    const data = Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_post\\\\\\\\\\\\\\\", {\\\\\\\\n      post_id: postId,\\\\\\\\n    });\\\\\\\\n    if (!postData) {\\\\\\\\n      setPostData(data);\\\\\\\\n    }\\\\\\\\n    if (postData && data && JSON.stringify(postData) !== JSON.stringify(data)) {\\\\\\\\n      props.setEditorState(false);\\\\\\\\n      props.setExpandReplies(true);\\\\\\\\n      setPostData(data);\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    const postIds = Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_all_post_ids\\\\\\\\\\\\\\\");\\\\\\\\n    if (!postIdList) {\\\\\\\\n      setPostIdList(postIds);\\\\\\\\n    }\\\\\\\\n    if (\\\\\\\\n      isTxnCreated &&\\\\\\\\n      postIdList?.length > 0 &&\\\\\\\\n      postIds.length > 0 &&\\\\\\\\n      postIdList.length !== postIds.length\\\\\\\\n    ) {\\\\\\\\n      props.onDraftStateChange(null);\\\\\\\\n      if (isCreatePostPage) {\\\\\\\\n        setShowPostPage(true);\\\\\\\\n        setPostId(postIds[postIds?.length - 1]);\\\\\\\\n      } else {\\\\\\\\n        // close editor and expand replies\\\\\\\\n        props.setEditorState(false);\\\\\\\\n        props.setExpandReplies(true);\\\\\\\\n      }\\\\\\\\n      setPostIdList(postIds);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst labels = labelStrings.map((s) => {\\\\\\\\n  return { name: s };\\\\\\\\n});\\\\\\\\n\\\\\\\\ninitState({\\\\\\\\n  seekingFunding: props.seekingFunding ?? false,\\\\\\\\n  author_id: context.accountId,\\\\\\\\n  // Should be a list of objects with field \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\".\\\\\\\\n  labels,\\\\\\\\n  // Should be a list of labels as strings.\\\\\\\\n  // Both of the label structures should be modified together.\\\\\\\\n  labelStrings: [],\\\\\\\\n  postType,\\\\\\\\n  name: props.name ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  description:\\\\\\\\n    (props.postType === \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\"\\\\\\\\n      ? cleanDescription(props.description)\\\\\\\\n      : props.description) ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  amount: props.amount ?? \\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\",\\\\\\\\n  token: props.token ?? \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\",\\\\\\\\n  supervisor: props.supervisor ?? \\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\",\\\\\\\\n  githubLink: props.githubLink ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  warning: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  draftStateApplied: false,\\\\\\\\n  mentionInput: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", // text next to @ tag\\\\\\\\n  mentionsArray: [], // all the mentions in the description\\\\\\\\n  displayFields: fields[postType],\\\\\\\\n});\\\\\\\\n\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"core/lib/autocomplete\\\\\\\\\\\\\\\" */\\\\\\\\nconst autocompleteEnabled = true;\\\\\\\\n\\\\\\\\nconst AutoComplete = styled.div`\\\\\\\\n  z-index: 5;\\\\\\\\n\\\\\\\\n  > div > div {\\\\\\\\n    padding: calc(var(--padding) / 2);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (props.transactionHashes) {\\\\\\\\n  const transaction = useCache(\\\\\\\\n    () =>\\\\\\\\n      asyncFetch(\\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\", {\\\\\\\\n        method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n        headers: {\\\\\\\\n          \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n        body: JSON.stringify({\\\\\\\\n          jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n          id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n          method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n          params: [props.transactionHashes, context.accountId],\\\\\\\\n        }),\\\\\\\\n      }).then((res) => res),\\\\\\\\n    props.transactionHashes + context.accountId,\\\\\\\\n    { subscribe: false }\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  if (transaction !== null) {\\\\\\\\n    const transaction_method_name =\\\\\\\\n      transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n        .method_name;\\\\\\\\n\\\\\\\\n    const is_edit_or_add_post_transaction =\\\\\\\\n      transaction_method_name == \\\\\\\\\\\\\\\"add_post\\\\\\\\\\\\\\\" ||\\\\\\\\n      transaction_method_name == \\\\\\\\\\\\\\\"edit_post\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n    if (is_edit_or_add_post_transaction) {\\\\\\\\n      props.onDraftStateChange(null);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // show the latest created post to user\\\\\\\\n    if (transaction_method_name == \\\\\\\\\\\\\\\"add_post\\\\\\\\\\\\\\\" && isCreatePostPage) {\\\\\\\\n      setShowPostPage(true);\\\\\\\\n      setPostId(postIdList?.[postIdList?.length - 1]);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction textareaInputHandler(value) {\\\\\\\\n  const words = value.split(/\\\\\\\\\\\\\\\\s+/);\\\\\\\\n  const allMentiones = words\\\\\\\\n    .filter((word) => word.startsWith(\\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\"))\\\\\\\\n    .map((mention) => mention.slice(1));\\\\\\\\n  const newMentiones = allMentiones.filter(\\\\\\\\n    (item) => !state.mentionsArray.includes(item)\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  State.update((lastKnownState) => ({\\\\\\\\n    ...lastKnownState,\\\\\\\\n    text: value,\\\\\\\\n    showAccountAutocomplete: newMentiones?.length > 0,\\\\\\\\n    mentionsArray: allMentiones,\\\\\\\\n    mentionInput: newMentiones?.[0] ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction autoCompleteAccountId(id) {\\\\\\\\n  // to make sure we update the @ at correct index\\\\\\\\n  let currentIndex = 0;\\\\\\\\n  const updatedDescription = state.description.replace(\\\\\\\\n    /(?:^|\\\\\\\\\\\\\\\\s)(@[^\\\\\\\\\\\\\\\\s]*)/g,\\\\\\\\n    (match) => {\\\\\\\\n      if (currentIndex === state.mentionsArray.indexOf(state.mentionInput)) {\\\\\\\\n        currentIndex++;\\\\\\\\n        return ` @${id}`;\\\\\\\\n      } else {\\\\\\\\n        currentIndex++;\\\\\\\\n        return match;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n  State.update((lastKnownState) => ({\\\\\\\\n    ...lastKnownState,\\\\\\\\n    handler: \\\\\\\\\\\\\\\"autocompleteSelected\\\\\\\\\\\\\\\",\\\\\\\\n    description: updatedDescription,\\\\\\\\n    showAccountAutocomplete: false,\\\\\\\\n  }));\\\\\\\\n}\\\\\\\\n\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"core/lib/autocomplete\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nif (!state.draftStateApplied && props.draftState) {\\\\\\\\n  State.update({ ...props.draftState, draftStateApplied: true });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst typeSwitch = (optionName) => {\\\\\\\\n  State.update({\\\\\\\\n    postType: optionName,\\\\\\\\n    displayFields: fields[optionName],\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\n// This must be outside onClick, because Near.view returns null at first, and when the view call finished, it returns true/false.\\\\\\\\n// If checking this inside onClick, it will give `null` and we cannot tell the result is true or false.\\\\\\\\nlet grantNotify = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"is_write_permission_granted\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    predecessor_id: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n    key: context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\",\\\\\\\\n  }\\\\\\\\n);\\\\\\\\nif (grantNotify === null || userStorageDeposit === null) {\\\\\\\\n  return;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst tokenMapping = {\\\\\\\\n  NEAR: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\",\\\\\\\\n  USDT: {\\\\\\\\n    NEP141: {\\\\\\\\n      address: \\\\\\\\\\\\\\\"usdt.tether-token.near\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  USDC: {\\\\\\\\n    NEP141: {\\\\\\\\n      address:\\\\\\\\n        \\\\\\\\\\\\\\\"17208628f84f5d6ad33f0da3bbbeb27ffcb398eac501a31bd6ad2011e36133a1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst onSubmit = () => {\\\\\\\\n  setIsSubmittingTransaction(true);\\\\\\\\n  let labels = state.labelStrings;\\\\\\\\n  var body = {\\\\\\\\n    Comment: { description: state.description, comment_version: \\\\\\\\\\\\\\\"V2\\\\\\\\\\\\\\\" },\\\\\\\\n    Idea: {\\\\\\\\n      name: state.name,\\\\\\\\n      description: state.description,\\\\\\\\n      idea_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    Solution: {\\\\\\\\n      name: state.name,\\\\\\\\n      description: generateDescription(\\\\\\\\n        state.description,\\\\\\\\n        state.amount,\\\\\\\\n        state.token,\\\\\\\\n        state.supervisor,\\\\\\\\n        state.seekingFunding\\\\\\\\n      ),\\\\\\\\n      solution_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    Attestation: {\\\\\\\\n      name: state.name,\\\\\\\\n      description: state.description,\\\\\\\\n      attestation_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    Sponsorship: {\\\\\\\\n      name: state.name,\\\\\\\\n      description: state.description,\\\\\\\\n      amount: state.amount,\\\\\\\\n      sponsorship_token: tokenMapping[state.token],\\\\\\\\n      supervisor: state.supervisor,\\\\\\\\n      sponsorship_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    Github: {\\\\\\\\n      name: state.name,\\\\\\\\n      description: state.description,\\\\\\\\n      github_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n      github_link: state.githubLink,\\\\\\\\n    },\\\\\\\\n  }[state.postType];\\\\\\\\n  body[\\\\\\\\\\\\\\\"post_type\\\\\\\\\\\\\\\"] = state.postType;\\\\\\\\n  if (!context.accountId) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  let txn = [];\\\\\\\\n  if (mode == \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\") {\\\\\\\\n    props.onDraftStateChange(\\\\\\\\n      Object.assign({}, state, { parent_post_id: parentId })\\\\\\\\n    );\\\\\\\\n    txn.push({\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"add_post\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        parent_id: parentId,\\\\\\\\n        labels,\\\\\\\\n        body,\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    });\\\\\\\\n  } else if (mode == \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\") {\\\\\\\\n    props.onDraftStateChange(\\\\\\\\n      Object.assign({}, state, { edit_post_id: postId })\\\\\\\\n    );\\\\\\\\n    txn.push({\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_post\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: postId,\\\\\\\\n        labels,\\\\\\\\n        body,\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n  if (mode == \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\" || mode == \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\") {\\\\\\\\n    if (grantNotify === false) {\\\\\\\\n      txn.unshift({\\\\\\\\n        contractName: \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n        methodName: \\\\\\\\\\\\\\\"grant_write_permission\\\\\\\\\\\\\\\",\\\\\\\\n        args: {\\\\\\\\n          predecessor_id: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n          keys: [context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\"],\\\\\\\\n        },\\\\\\\\n        gas: Big(10).pow(14),\\\\\\\\n        deposit: getDepositAmountForWriteAccess(userStorageDeposit),\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    setCreateTxn(true);\\\\\\\\n    Near.call(txn);\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst checkLabel = (label) => {\\\\\\\\n  Near.asyncView(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"is_allowed_to_use_labels\\\\\\\\\\\\\\\", {\\\\\\\\n    editor: context.accountId,\\\\\\\\n    labels: [label],\\\\\\\\n  }).then((allowed) => {\\\\\\\\n    if (allowed) {\\\\\\\\n      State.update({ warning: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" });\\\\\\\\n    } else {\\\\\\\\n      State.update({\\\\\\\\n        warning:\\\\\\\\n          \\\\\\\\\\\\'The label \\\\\\\\\\\\\\\"\\\\\\\\\\\\' +\\\\\\\\n          label +\\\\\\\\n          \\\\\\\\\\\\'\\\\\\\\\\\\\\\" is protected and can only be added by moderators\\\\\\\\\\\\',\\\\\\\\n      });\\\\\\\\n      return;\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst setLabels = (labels) => {\\\\\\\\n  labels = labels.map((o) => {\\\\\\\\n    o.name = normalize(o.name);\\\\\\\\n    return o;\\\\\\\\n  });\\\\\\\\n  if (labels.length < state.labels.length) {\\\\\\\\n    let oldLabels = new Set(state.labels.map((label) => label.name));\\\\\\\\n    for (let label of labels) {\\\\\\\\n      oldLabels.delete(label.name);\\\\\\\\n    }\\\\\\\\n    let removed = oldLabels.values().next().value;\\\\\\\\n    Near.asyncView(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"is_allowed_to_use_labels\\\\\\\\\\\\\\\", {\\\\\\\\n      editor: context.accountId,\\\\\\\\n      labels: [removed],\\\\\\\\n    }).then((allowed) => {\\\\\\\\n      if (allowed) {\\\\\\\\n        let labelStrings = labels.map(({ name }) => name);\\\\\\\\n        State.update({ labels, labelStrings });\\\\\\\\n      } else {\\\\\\\\n        State.update({\\\\\\\\n          warning:\\\\\\\\n            \\\\\\\\\\\\'The label \\\\\\\\\\\\\\\"\\\\\\\\\\\\' +\\\\\\\\n            removed +\\\\\\\\n            \\\\\\\\\\\\'\\\\\\\\\\\\\\\" is protected and can only be updated by moderators\\\\\\\\\\\\',\\\\\\\\n        });\\\\\\\\n        return;\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  } else {\\\\\\\\n    let labelStrings = labels.map((o) => {\\\\\\\\n      return o.name;\\\\\\\\n    });\\\\\\\\n    State.update({ labels, labelStrings });\\\\\\\\n  }\\\\\\\\n};\\\\\\\\nconst existingLabelStrings =\\\\\\\\n  Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_all_allowed_labels\\\\\\\\\\\\\\\", {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }) ?? [];\\\\\\\\nconst existingLabelSet = new Set(existingLabelStrings);\\\\\\\\nconst existingLabels = existingLabelStrings\\\\\\\\n  .filter((it) => it !== \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\") // remove blog label so users cannot publish blogs from feed\\\\\\\\n  .map((s) => {\\\\\\\\n    return { name: s };\\\\\\\\n  });\\\\\\\\n\\\\\\\\nconst labelEditor = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-12  mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    <label htmlFor=\\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\" className=\\\\\\\\\\\\\\\"fs-6 fw-bold mb-1\\\\\\\\\\\\\\\">\\\\\\\\n      Labels\\\\\\\\n    </label>\\\\\\\\n    <Typeahead\\\\\\\\n      multiple\\\\\\\\n      labelKey=\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\"\\\\\\\\n      onInputChange={checkLabel}\\\\\\\\n      onChange={setLabels}\\\\\\\\n      options={existingLabels}\\\\\\\\n      placeholder=\\\\\\\\\\\\\\\"near.social, widget, NEP, standard, protocol, tool\\\\\\\\\\\\\\\"\\\\\\\\n      selected={state.labels}\\\\\\\\n      positionFixed\\\\\\\\n      allowNew={(results, props) => {\\\\\\\\n        return (\\\\\\\\n          !existingLabelSet.has(props.text) &&\\\\\\\\n          props.text.toLowerCase() !== \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\" && // dont allow adding \\\\\\\\\\\\\\\"Blog\\\\\\\\\\\\\\\"\\\\\\\\n          props.selected.filter((selected) => selected.name === props.text)\\\\\\\\n            .length == 0 &&\\\\\\\\n          Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"is_allowed_to_use_labels\\\\\\\\\\\\\\\", {\\\\\\\\n            editor: context.accountId,\\\\\\\\n            labels: [props.text],\\\\\\\\n          })\\\\\\\\n        );\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst githubLinkDiv = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-12  mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    Github Issue URL:\\\\\\\\n    <input\\\\\\\\n      type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n      value={state.githubLink}\\\\\\\\n      onChange={(event) => State.update({ githubLink: event.target.value })}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst nameDiv = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-12  mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    <label htmlFor=\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\" className=\\\\\\\\\\\\\\\"fs-6 fw-bold mb-1\\\\\\\\\\\\\\\">\\\\\\\\n      Title\\\\\\\\n    </label>\\\\\\\\n    <input\\\\\\\\n      name=\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\"\\\\\\\\n      id=\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\"\\\\\\\\n      data-testid=\\\\\\\\\\\\\\\"name-editor\\\\\\\\\\\\\\\"\\\\\\\\n      type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n      value={state.name}\\\\\\\\n      onChange={(event) => State.update({ name: event.target.value })}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst amountDiv = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-6  mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    Amount:\\\\\\\\n    <input\\\\\\\\n      type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n      value={state.amount}\\\\\\\\n      onChange={(event) => State.update({ amount: event.target.value })}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst tokenDiv = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    Currency\\\\\\\\n    <select\\\\\\\\n      onChange={(event) => State.update({ token: event.target.value })}\\\\\\\\n      class=\\\\\\\\\\\\\\\"form-select\\\\\\\\\\\\\\\"\\\\\\\\n      aria-label=\\\\\\\\\\\\\\\"Select currency\\\\\\\\\\\\\\\"\\\\\\\\n      value={state.token}\\\\\\\\n    >\\\\\\\\n      <option value=\\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\">USDT</option>\\\\\\\\n      <option value=\\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\">NEAR</option>\\\\\\\\n      <option value=\\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\">USDC</option>\\\\\\\\n    </select>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst supervisorDiv = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    Supervisor:\\\\\\\\n    <input\\\\\\\\n      type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n      value={state.supervisor}\\\\\\\\n      onChange={(event) => State.update({ supervisor: event.target.value })}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst callDescriptionDiv = () => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"col-lg-12  mb-2\\\\\\\\\\\\\\\">\\\\\\\\n      <label htmlFor=\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\" className=\\\\\\\\\\\\\\\"fs-6 fw-bold mb-1\\\\\\\\\\\\\\\">\\\\\\\\n        Description\\\\\\\\n      </label>\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.SimpleMDE\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          data: { handler: state.handler, content: state.description },\\\\\\\\n          onChange: (content) => {\\\\\\\\n            State.update({ description: content, handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\" });\\\\\\\\n            textareaInputHandler(content);\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      {autocompleteEnabled && state.showAccountAutocomplete && (\\\\\\\\n        <AutoComplete>\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.AccountAutocomplete\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              term: state.mentionInput,\\\\\\\\n              onSelect: autoCompleteAccountId,\\\\\\\\n              onClose: () => State.update({ showAccountAutocomplete: false }),\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </AutoComplete>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst disclaimer = (\\\\\\\\n  <p>\\\\\\\\n    <i>\\\\\\\\n      * Note, all projects that were granted sponsorships are required to pass\\\\\\\\n      KYC to receive the funding.\\\\\\\\n    </i>\\\\\\\\n  </p>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst isFundraisingDiv = (\\\\\\\\n  // This is jank with just btns and not radios. But the radios were glitchy af\\\\\\\\n  <>\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"mb-2\\\\\\\\\\\\\\\">\\\\\\\\n      <p class=\\\\\\\\\\\\\\\"fs-6 fw-bold mb-1\\\\\\\\\\\\\\\">\\\\\\\\n        Are you seeking funding for your solution?\\\\\\\\n        <span class=\\\\\\\\\\\\\\\"text-muted fw-normal\\\\\\\\\\\\\\\">(Optional)</span>\\\\\\\\n      </p>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"form-check form-check-inline\\\\\\\\\\\\\\\">\\\\\\\\n        <label class=\\\\\\\\\\\\\\\"form-check-label\\\\\\\\\\\\\\\">\\\\\\\\n          <button\\\\\\\\n            className=\\\\\\\\\\\\\\\"btn btn-light p-0\\\\\\\\\\\\\\\"\\\\\\\\n            style={{\\\\\\\\n              backgroundColor: state.seekingFunding ? \\\\\\\\\\\\\\\"#0C7283\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"inherit\\\\\\\\\\\\\\\",\\\\\\\\n              color: \\\\\\\\\\\\\\\"#f3f3f3\\\\\\\\\\\\\\\",\\\\\\\\n              border: \\\\\\\\\\\\\\\"solid #D9D9D9\\\\\\\\\\\\\\\",\\\\\\\\n              borderRadius: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\",\\\\\\\\n              height: \\\\\\\\\\\\\\\"20px\\\\\\\\\\\\\\\",\\\\\\\\n              width: \\\\\\\\\\\\\\\"20px\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n            onClick={() => State.update({ seekingFunding: true })}\\\\\\\\n          />\\\\\\\\n          Yes\\\\\\\\n        </label>\\\\\\\\n      </div>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"form-check form-check-inline\\\\\\\\\\\\\\\">\\\\\\\\n        <label class=\\\\\\\\\\\\\\\"form-check-label\\\\\\\\\\\\\\\">\\\\\\\\n          <button\\\\\\\\n            className=\\\\\\\\\\\\\\\"btn btn-light p-0\\\\\\\\\\\\\\\"\\\\\\\\n            style={{\\\\\\\\n              backgroundColor: !state.seekingFunding ? \\\\\\\\\\\\\\\"#0C7283\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"inherit\\\\\\\\\\\\\\\",\\\\\\\\n              color: \\\\\\\\\\\\\\\"#f3f3f3\\\\\\\\\\\\\\\",\\\\\\\\n              border: \\\\\\\\\\\\\\\"solid #D9D9D9\\\\\\\\\\\\\\\",\\\\\\\\n              borderRadius: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\",\\\\\\\\n              height: \\\\\\\\\\\\\\\"20px\\\\\\\\\\\\\\\",\\\\\\\\n              width: \\\\\\\\\\\\\\\"20px\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n            onClick={() => State.update({ seekingFunding: false })}\\\\\\\\n          />\\\\\\\\n          No\\\\\\\\n        </label>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst fundraisingDiv = (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"d-flex flex-column mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n      Currency\\\\\\\\n      <select\\\\\\\\n        onChange={(event) => State.update({ token: event.target.value })}\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-select\\\\\\\\\\\\\\\"\\\\\\\\n        aria-label=\\\\\\\\\\\\\\\"Default select example\\\\\\\\\\\\\\\"\\\\\\\\n        value={state.token}\\\\\\\\n      >\\\\\\\\n        <option value=\\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\">USDT</option>\\\\\\\\n        <option value=\\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\">NEAR</option>\\\\\\\\n        <option value=\\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\">USDC</option>\\\\\\\\n      </select>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n      Requested amount\\\\\\\\n      <span class=\\\\\\\\\\\\\\\"text-muted fw-normal\\\\\\\\\\\\\\\">(Numbers Only)</span>\\\\\\\\n      <input\\\\\\\\n        data-testid=\\\\\\\\\\\\\\\"requested-amount-editor\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\"\\\\\\\\n        value={parseInt(state.amount) > 0 ? state.amount : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n        min={0}\\\\\\\\n        onChange={(event) => {\\\\\\\\n          State.update({\\\\\\\\n            amount: Number(\\\\\\\\n              event.target.value.toString().replace(/e/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n            ).toString(),\\\\\\\\n          });\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n      <p class=\\\\\\\\\\\\\\\"mb-1\\\\\\\\\\\\\\\">\\\\\\\\n        Requested sponsor\\\\\\\\n        <span class=\\\\\\\\\\\\\\\"text-muted fw-normal\\\\\\\\\\\\\\\">(Optional)</span>\\\\\\\\n      </p>\\\\\\\\n      <p style={{ fontSize: \\\\\\\\\\\\\\\"13px\\\\\\\\\\\\\\\" }} class=\\\\\\\\\\\\\\\"m-0 text-muted fw-light\\\\\\\\\\\\\\\">\\\\\\\\n        If you are requesting funding from a specific sponsor, please enter\\\\\\\\n        their username.\\\\\\\\n      </p>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"input-group flex-nowrap\\\\\\\\\\\\\\\">\\\\\\\\n        <span class=\\\\\\\\\\\\\\\"input-group-text\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"addon-wrapping\\\\\\\\\\\\\\\">\\\\\\\\n          @\\\\\\\\n        </span>\\\\\\\\n        <input\\\\\\\\n          type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n          class=\\\\\\\\\\\\\\\"form-control\\\\\\\\\\\\\\\"\\\\\\\\n          placeholder=\\\\\\\\\\\\\\\"Enter username\\\\\\\\\\\\\\\"\\\\\\\\n          value={state.supervisor}\\\\\\\\n          onChange={(event) => State.update({ supervisor: event.target.value })}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nfunction generateDescription(text, amount, token, supervisor, seekingFunding) {\\\\\\\\n  const fundingText =\\\\\\\\n    amount > 0 && token ? `###### Requested amount: ${amount} ${token}\\\\\\\\\\\\\\\\n` : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  const supervisorText = supervisor\\\\\\\\n    ? `###### Requested sponsor: @${supervisor}\\\\\\\\\\\\\\\\n`\\\\\\\\n    : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return seekingFunding ? `${fundingText}${supervisorText}${text}` : text;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [tab, setTab] = useState(\\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst renamedPostType =\\\\\\\\n  state.postType == \\\\\\\\\\\\\\\"Submission\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\" : state.postType;\\\\\\\\n// Below there is a weird code with fields.includes(\\\\\\\\\\\\\\\"githubLink\\\\\\\\\\\\\\\") ternary operator.\\\\\\\\n// This is to hack around rendering bug of near.social.\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-grow-1 w-100\\\\\\\\\\\\\\\">\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"mx-2 mx-md-5 mb-5\\\\\\\\\\\\\\\">\\\\\\\\n      {showPostPage ? (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Post\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            id: postId,\\\\\\\\n            expandable: true,\\\\\\\\n            defaultExpanded: false,\\\\\\\\n            isInList: true,\\\\\\\\n            isPreview: false,\\\\\\\\n            onDraftStateChange: props.onDraftStateChange,\\\\\\\\n            referral: postId,\\\\\\\\n            transactionHashes: props.transactionHashes,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      ) : (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card-header\\\\\\\\\\\\\\\">\\\\\\\\n            <div>\\\\\\\\n              <ul class=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\">\\\\\\\\n                <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                  <button\\\\\\\\n                    class={`nav-link ${tab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}`}\\\\\\\\n                    onClick={() => setTab(\\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\")}\\\\\\\\n                  >\\\\\\\\n                    Editor\\\\\\\\n                  </button>\\\\\\\\n                </li>\\\\\\\\n                <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                  <button\\\\\\\\n                    class={`nav-link ${tab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}`}\\\\\\\\n                    onClick={() => setTab(\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\")}\\\\\\\\n                  >\\\\\\\\n                    Preview\\\\\\\\n                  </button>\\\\\\\\n                </li>\\\\\\\\n              </ul>\\\\\\\\n            </div>\\\\\\\\n            {!isCreatePostPage && tab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"my-3\\\\\\\\\\\\\\\">\\\\\\\\n                {mode} {renamedPostType}\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n            {tab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" && <div className=\\\\\\\\\\\\\\\"my-3\\\\\\\\\\\\\\\">Post Preview</div>}\\\\\\\\n          </div>\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n            {tab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" && (\\\\\\\\n              <>\\\\\\\\n                {state.warning && (\\\\\\\\n                  <div\\\\\\\\n                    class=\\\\\\\\\\\\\\\"alert alert-warning alert-dismissible fade show\\\\\\\\\\\\\\\"\\\\\\\\n                    role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    {state.warning}\\\\\\\\n                    <button\\\\\\\\n                      type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n                      class=\\\\\\\\\\\\\\\"btn-close\\\\\\\\\\\\\\\"\\\\\\\\n                      data-bs-dismiss=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\"\\\\\\\\n                      aria-label=\\\\\\\\\\\\\\\"Close\\\\\\\\\\\\\\\"\\\\\\\\n                      onClick={() => State.update({ warning: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" })}\\\\\\\\n                    ></button>\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n                {isCreatePostPage && (\\\\\\\\n                  <div>\\\\\\\\n                    <p class=\\\\\\\\\\\\\\\"card-title fw-bold fs-6\\\\\\\\\\\\\\\">\\\\\\\\n                      What do you want to create?\\\\\\\\n                    </p>\\\\\\\\n                    <div class=\\\\\\\\\\\\\\\"d-flex flex-row gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                      {Object.values(postTypeOptions).map((option) => (\\\\\\\\n                        <button\\\\\\\\n                          className={`btn btn-${\\\\\\\\n                            state.postType === option.name\\\\\\\\n                              ? \\\\\\\\\\\\\\\"primary\\\\\\\\\\\\\\\"\\\\\\\\n                              : \\\\\\\\\\\\\\\"outline-secondary\\\\\\\\\\\\\\\"\\\\\\\\n                          }`}\\\\\\\\n                          data-testid={`btn-${option.name.toLowerCase()}`}\\\\\\\\n                          key={option.name}\\\\\\\\n                          onClick={() => typeSwitch(option.name)}\\\\\\\\n                          style={\\\\\\\\n                            state.postType === option.name\\\\\\\\n                              ? {\\\\\\\\n                                  backgroundColor: \\\\\\\\\\\\\\\"#0C7283\\\\\\\\\\\\\\\",\\\\\\\\n                                  color: \\\\\\\\\\\\\\\"#f3f3f3\\\\\\\\\\\\\\\",\\\\\\\\n                                }\\\\\\\\n                              : null\\\\\\\\n                          }\\\\\\\\n                          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n                        >\\\\\\\\n                          <i className={`bi ${option.icon}`} />\\\\\\\\n                          <span>{option.name}</span>\\\\\\\\n                        </button>\\\\\\\\n                      ))}\\\\\\\\n                    </div>\\\\\\\\n                    <p class=\\\\\\\\\\\\\\\"text-muted w-75 my-1\\\\\\\\\\\\\\\">\\\\\\\\n                      {postTypeOptions[state.postType].description}\\\\\\\\n                    </p>\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n                {/* This statement around the githubLinkDiv creates a weird render bug\\\\\\\\n      where the title renders extra on state change. */}\\\\\\\\n                {state.displayFields.includes(\\\\\\\\\\\\\\\"githubLink\\\\\\\\\\\\\\\") ? (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\">\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"githubLink\\\\\\\\\\\\\\\") &&\\\\\\\\n                      githubLinkDiv}\\\\\\\\n                    {labelEditor}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\") && nameDiv}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\") &&\\\\\\\\n                      callDescriptionDiv()}\\\\\\\\n                  </div>\\\\\\\\n                ) : (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\">\\\\\\\\n                    {labelEditor}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\") && nameDiv}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"amount\\\\\\\\\\\\\\\") && amountDiv}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"sponsorship_token\\\\\\\\\\\\\\\") &&\\\\\\\\n                      tokenDiv}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"supervisor\\\\\\\\\\\\\\\") &&\\\\\\\\n                      supervisorDiv}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\") &&\\\\\\\\n                      callDescriptionDiv()}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"fund_raising\\\\\\\\\\\\\\\") &&\\\\\\\\n                      isFundraisingDiv}\\\\\\\\n                    {state.seekingFunding &&\\\\\\\\n                      state.displayFields.includes(\\\\\\\\\\\\\\\"fund_raising\\\\\\\\\\\\\\\") &&\\\\\\\\n                      fundraisingDiv}\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n\\\\\\\\n                {disclaimer}\\\\\\\\n              </>\\\\\\\\n            )}\\\\\\\\n            {tab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mb-2\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Post\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    isPreview: true,\\\\\\\\n                    id: 0, // irrelevant\\\\\\\\n                    post: {\\\\\\\\n                      author_id: state.author_id,\\\\\\\\n                      likes: [],\\\\\\\\n                      snapshot: {\\\\\\\\n                        editor_id: state.editor_id,\\\\\\\\n                        labels: state.labelStrings,\\\\\\\\n                        post_type: postType,\\\\\\\\n                        name: state.name,\\\\\\\\n                        description:\\\\\\\\n                          state.postType == \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\"\\\\\\\\n                            ? generateDescription(\\\\\\\\n                                state.description,\\\\\\\\n                                state.amount,\\\\\\\\n                                state.token,\\\\\\\\n                                state.supervisor,\\\\\\\\n                                state.seekingFunding\\\\\\\\n                              )\\\\\\\\n                            : state.description,\\\\\\\\n                        amount: state.amount,\\\\\\\\n                        sponsorship_token: state.token,\\\\\\\\n                        supervisor: state.supervisor,\\\\\\\\n                        github_link: state.githubLink,\\\\\\\\n                      },\\\\\\\\n                    },\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n\\\\\\\\n            <>\\\\\\\\n              <button\\\\\\\\n                data-testid=\\\\\\\\\\\\\\\"submit-create-post\\\\\\\\\\\\\\\"\\\\\\\\n                style={{\\\\\\\\n                  width: \\\\\\\\\\\\\\\"7rem\\\\\\\\\\\\\\\",\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"#0C7283\\\\\\\\\\\\\\\",\\\\\\\\n                  color: \\\\\\\\\\\\\\\"#f3f3f3\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                disabled={\\\\\\\\n                  (state.seekingFunding &&\\\\\\\\n                    (!state.amount || state.amount < 1)) ||\\\\\\\\n                  (isCreatePostPage &&\\\\\\\\n                    (state.name === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" || state.description === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"))\\\\\\\\n                }\\\\\\\\n                className=\\\\\\\\\\\\\\\"btn btn-light mb-2 p-3\\\\\\\\\\\\\\\"\\\\\\\\n                onClick={onSubmit}\\\\\\\\n                disabled={isSubmittingTransaction}\\\\\\\\n              >\\\\\\\\n                {isSubmittingTransaction ? LoadingButtonSpinner : <></>}\\\\\\\\n                Submit\\\\\\\\n              </button>\\\\\\\\n              {!isCreatePostPage && (\\\\\\\\n                <button\\\\\\\\n                  style={{\\\\\\\\n                    width: \\\\\\\\\\\\\\\"7rem\\\\\\\\\\\\\\\",\\\\\\\\n                    backgroundColor: \\\\\\\\\\\\\\\"#fff\\\\\\\\\\\\\\\",\\\\\\\\n                    color: \\\\\\\\\\\\\\\"#000\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                  className=\\\\\\\\\\\\\\\"btn btn-light mb-2 p-3\\\\\\\\\\\\\\\"\\\\\\\\n                  onClick={() => props.setEditorState(false)}\\\\\\\\n                >\\\\\\\\n                  Cancel\\\\\\\\n                </button>\\\\\\\\n              )}\\\\\\\\n            </>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.molecule.SimpleMDE\": {\"\": \"/**\\\\\\\\n * iframe embedding a SimpleMDE component\\\\\\\\n * https://github.com/sparksuite/simplemde-markdown-editor\\\\\\\\n */\\\\\\\\nconst { getLinkUsingCurrentGateway } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\"\\\\\\\\n) || { getLinkUsingCurrentGateway: () => {} };\\\\\\\\nconst data = props.data;\\\\\\\\nconst onChange = props.onChange ?? (() => {});\\\\\\\\nconst onChangeKeyup = props.onChangeKeyup ?? (() => {}); // in case where we want immediate action\\\\\\\\nconst height = props.height ?? \\\\\\\\\\\\\\\"390\\\\\\\\\\\\\\\";\\\\\\\\nconst className = props.className ?? \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\";\\\\\\\\nconst embeddCSS = props.embeddCSS;\\\\\\\\nconst sortedRelevantUsers = props.sortedRelevantUsers || [];\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  iframeHeight: height,\\\\\\\\n  message: props.data,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst profilesData = Social.get(\\\\\\\\\\\\\\\"*/profile/name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\") ?? {};\\\\\\\\nconst followingData =\\\\\\\\n  Social.get(`${context.accountId}/graph/follow/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\") ?? {};\\\\\\\\n\\\\\\\\n// SIMPLEMDE CONFIG //\\\\\\\\nconst fontFamily = props.fontFamily ?? \\\\\\\\\\\\\\\"sans-serif\\\\\\\\\\\\\\\";\\\\\\\\nconst alignToolItems = props.alignToolItems ?? \\\\\\\\\\\\\\\"right\\\\\\\\\\\\\\\";\\\\\\\\nconst placeholder = props.placeholder ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst showAccountAutoComplete = props.showAutoComplete ?? false;\\\\\\\\nconst showProposalIdAutoComplete = props.showProposalIdAutoComplete ?? false;\\\\\\\\nconst autoFocus = props.autoFocus ?? false;\\\\\\\\n\\\\\\\\nconst queryName = \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_prod_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n${queryName}(\\\\\\\\n  offset: $offset\\\\\\\\n  limit: $limit\\\\\\\\n  order_by: {proposal_id: desc}\\\\\\\\n  where: $where\\\\\\\\n) {\\\\\\\\n  name\\\\\\\\n  proposal_id\\\\\\\\n}\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst proposalLink = getLinkUsingCurrentGateway(\\\\\\\\n  `devhub.near/widget/app?page=proposal&id=`\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst code = `\\\\\\\\n<!doctype html>\\\\\\\\n<html>\\\\\\\\n  <head>\\\\\\\\n  <meta charset=\\\\\\\\\\\\\\\"utf-8\\\\\\\\\\\\\\\">\\\\\\\\n  <meta name=\\\\\\\\\\\\\\\"viewport\\\\\\\\\\\\\\\" content=\\\\\\\\\\\\\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\\\\\\\\\\\\\">\\\\\\\\n  <style>\\\\\\\\n  body {  \\\\\\\\n      margin: auto;\\\\\\\\n      font-family: ${fontFamily};\\\\\\\\n      overflow: visible;\\\\\\\\n      font-size:14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    body {\\\\\\\\n      font-size: 12px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item:hover,\\\\\\\\n  .dropdown-item:focus {\\\\\\\\n    background-color:rgb(0, 236, 151) !important;\\\\\\\\n    color:white !important;\\\\\\\\n    outline: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n      text-align: ${alignToolItems};\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n  .CodeMirror {\\\\\\\\n    min-height:200px !important; // for autocomplete to be visble \\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .CodeMirror-scroll {\\\\\\\\n    min-height:200px !important; // for autocomplete to be visble \\\\\\\\n  }\\\\\\\\n\\\\\\\\n  ${embeddCSS}\\\\\\\\n\\\\\\\\n  </style>\\\\\\\\n  <link rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css\\\\\\\\\\\\\\\">\\\\\\\\n  <link rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/highlight.js/latest/styles/github.min.css\\\\\\\\\\\\\\\">\\\\\\\\n  <link href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\\\\\\\\\\\\\\\" rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\">\\\\\\\\n</head>\\\\\\\\n<body>\\\\\\\\n<div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n  <button style=\\\\\\\\\\\\\\\"display: none\\\\\\\\\\\\\\\" type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\" data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n    Dropdown button\\\\\\\\n  </button>\\\\\\\\n\\\\\\\\n  <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"mentiondropdown\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\"position: absolute;\\\\\\\\\\\\\\\">\\\\\\\\n</div>\\\\\\\\n<div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n  <button style=\\\\\\\\\\\\\\\"display: none\\\\\\\\\\\\\\\" type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\" data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n    Dropdown button\\\\\\\\n  </button>\\\\\\\\n  <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"referencedropdown\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\"position: absolute;\\\\\\\\\\\\\\\">\\\\\\\\n</div>\\\\\\\\n</ul>\\\\\\\\n\\\\\\\\n<textarea></textarea>\\\\\\\\n\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script>\\\\\\\\nlet codeMirrorInstance;\\\\\\\\nlet isEditorInitialized = false;\\\\\\\\nlet followingData = {};\\\\\\\\nlet profilesData = {};\\\\\\\\nlet proposalLink = \\\\\\\\\\\\'\\\\\\\\\\\\';\\\\\\\\nlet query = \\\\\\\\\\\\'\\\\\\\\\\\\';\\\\\\\\nlet showAccountAutoComplete = ${showAccountAutoComplete};\\\\\\\\nlet showProposalIdAutoComplete = ${showProposalIdAutoComplete};\\\\\\\\n\\\\\\\\nfunction getSuggestedAccounts(term) {\\\\\\\\n  let results = [];\\\\\\\\n\\\\\\\\n  term = (term || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").toLowerCase();\\\\\\\\n  let limit = 5;\\\\\\\\n  if (term.length < 2) {\\\\\\\\n   results = [${sortedRelevantUsers\\\\\\\\n     .map((u) => \\\\\\\\\\\\\\\"{accountId:\\\\\\\\\\\\'\\\\\\\\\\\\\\\" + u + \\\\\\\\\\\\\\\"\\\\\\\\\\\\', score: 60}\\\\\\\\\\\\\\\")\\\\\\\\n     .join(\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\")}];\\\\\\\\n    limit = ${5 + sortedRelevantUsers.length};\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const profiles = Object.entries(profilesData);\\\\\\\\n\\\\\\\\n  for (let i = 0; i < profiles.length; i++) {\\\\\\\\n    let score = 0;\\\\\\\\n    const accountId = profiles[i][0];\\\\\\\\n    const accountIdSearch = profiles[i][0].replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").toLowerCase();\\\\\\\\n    const nameSearch = (profiles[i][1]?.profile?.name || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n      .replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n      .toLowerCase();\\\\\\\\n    const accountIdSearchIndex = accountIdSearch.indexOf(term);\\\\\\\\n    const nameSearchIndex = nameSearch.indexOf(term);\\\\\\\\n\\\\\\\\n    if (accountIdSearchIndex > -1 || nameSearchIndex > -1) {\\\\\\\\n      score += 10;\\\\\\\\n\\\\\\\\n      if (accountIdSearchIndex === 0) {\\\\\\\\n        score += 10;\\\\\\\\n      }\\\\\\\\n      if (nameSearchIndex === 0) {\\\\\\\\n        score += 10;\\\\\\\\n      }\\\\\\\\n      if (followingData[accountId] === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n        score += 30;\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      results.push({\\\\\\\\n        accountId,\\\\\\\\n        score,\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  results.sort((a, b) => b.score - a.score);\\\\\\\\n  results = results.slice(0, limit);\\\\\\\\n\\\\\\\\n  return results;\\\\\\\\n}\\\\\\\\n\\\\\\\\nasync function asyncFetch(endpoint, { method, headers, body }) {\\\\\\\\n  try {\\\\\\\\n    const response = await fetch(endpoint, {\\\\\\\\n      method: method,\\\\\\\\n      headers: headers,\\\\\\\\n      body: body\\\\\\\\n    });\\\\\\\\n\\\\\\\\n    if (!response.ok) {\\\\\\\\n      throw new Error(\\\\\\\\\\\\\\\"HTTP error!\\\\\\\\\\\\\\\");\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return await response.json();\\\\\\\\n  } catch (error) {\\\\\\\\n    console.error(\\\\\\\\\\\\'Error fetching data:\\\\\\\\\\\\', error);\\\\\\\\n    throw error;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractNumbers(str) {\\\\\\\\n  let numbers = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  for (let i = 0; i < str.length; i++) {\\\\\\\\n    if (!isNaN(str[i])) {\\\\\\\\n      numbers += str[i];\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return numbers;\\\\\\\\n};\\\\\\\\n\\\\\\\\nasync function getSuggestedProposals(id) {\\\\\\\\n  let results = [];\\\\\\\\n  const variables = {\\\\\\\\n    limit: 5,\\\\\\\\n    offset: 0,\\\\\\\\n    where: {},\\\\\\\\n  };\\\\\\\\n  if (id) {\\\\\\\\n    const proposalId = extractNumbers(id);\\\\\\\\n    if (proposalId) {\\\\\\\\n      variables[\\\\\\\\\\\\\\\"where\\\\\\\\\\\\\\\"] = { proposal_id: { _eq: id } };\\\\\\\\n    } else {\\\\\\\\n      variables[\\\\\\\\\\\\\\\"where\\\\\\\\\\\\\\\"] = {\\\\\\\\n        _or: [\\\\\\\\n          { name: { _iregex: id } },\\\\\\\\n          { summary: { _iregex: id } },\\\\\\\\n          { description: { _iregex: id } },\\\\\\\\n        ],\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  await asyncFetch(\\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co/v1/graphql\\\\\\\\\\\\\\\", {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"polyprogrammist_near\\\\\\\\\\\\\\\" },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: query,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\",\\\\\\\\n    }),\\\\\\\\n  })\\\\\\\\n    .then((res) => {\\\\\\\\n      const proposals =\\\\\\\\n        res?.data?.[\\\\\\\\n          \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_prod_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\"\\\\\\\\n        ];\\\\\\\\n      results = proposals;\\\\\\\\n    })\\\\\\\\n    .catch((error) => {\\\\\\\\n      console.error(error);\\\\\\\\n    });\\\\\\\\n  return results;\\\\\\\\n};\\\\\\\\n\\\\\\\\n// Initializes SimpleMDE element and attaches to text-area\\\\\\\\nconst simplemde = new SimpleMDE({\\\\\\\\n  forceSync: true,\\\\\\\\n  toolbar: [\\\\\\\\n    \\\\\\\\\\\\\\\"heading\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"bold\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"italic\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"|\\\\\\\\\\\\\\\", // adding | creates a divider in the toolbar\\\\\\\\n    \\\\\\\\\\\\\\\"quote\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"link\\\\\\\\\\\\\\\",\\\\\\\\n    {\\\\\\\\n      name: \\\\\\\\\\\\\\\"image\\\\\\\\\\\\\\\",\\\\\\\\n      action: function customFunction(editor) {\\\\\\\\n        const loadingIndicator = document.createElement(\\\\\\\\\\\\'div\\\\\\\\\\\\');\\\\\\\\n        loadingIndicator.textContent = \\\\\\\\\\\\'Uploading...\\\\\\\\\\\\';\\\\\\\\n        loadingIndicator.style.position = \\\\\\\\\\\\'absolute\\\\\\\\\\\\';\\\\\\\\n        loadingIndicator.style.top = \\\\\\\\\\\\'10px\\\\\\\\\\\\'; // Adjust position as needed\\\\\\\\n        loadingIndicator.style.right = \\\\\\\\\\\\'10px\\\\\\\\\\\\';\\\\\\\\n        loadingIndicator.style.display = \\\\\\\\\\\\'none\\\\\\\\\\\\'; // Initially hidden\\\\\\\\n        loadingIndicator.style.backgroundColor = \\\\\\\\\\\\'rgba(255, 255, 255, 0.8)\\\\\\\\\\\\';\\\\\\\\n        loadingIndicator.style.border = \\\\\\\\\\\\'1px solid #ccc\\\\\\\\\\\\';\\\\\\\\n        loadingIndicator.style.padding = \\\\\\\\\\\\'5px\\\\\\\\\\\\';\\\\\\\\n        loadingIndicator.style.borderRadius = \\\\\\\\\\\\'5px\\\\\\\\\\\\';\\\\\\\\n        document.body.appendChild(loadingIndicator); // Append to the body or desired container\\\\\\\\n\\\\\\\\n\\\\\\\\n        const fileInput = document.createElement(\\\\\\\\\\\\'input\\\\\\\\\\\\');\\\\\\\\n        fileInput.type = \\\\\\\\\\\\'file\\\\\\\\\\\\';\\\\\\\\n        fileInput.accept = \\\\\\\\\\\\'image/*\\\\\\\\\\\\';\\\\\\\\n\\\\\\\\n        fileInput.addEventListener(\\\\\\\\\\\\'change\\\\\\\\\\\\', async function(event) {\\\\\\\\n          const file = event.target.files[0];\\\\\\\\n          if (file) {\\\\\\\\n            loadingIndicator.style.display = \\\\\\\\\\\\'block\\\\\\\\\\\\';\\\\\\\\n            try {\\\\\\\\n              const response = await fetch(\\\\\\\\\\\\\\\"https://ipfs.near.social/add\\\\\\\\\\\\\\\", {\\\\\\\\n                method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n                headers: {\\\\\\\\n                  Accept: \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\"\\\\\\\\n                },\\\\\\\\n                body: file\\\\\\\\n              });\\\\\\\\n              const data = await response.json();\\\\\\\\n              if (data && data.cid) {\\\\\\\\n                const imgSrc = \\\\\\\\\\\\'https://ipfs.near.social/ipfs/\\\\\\\\\\\\' + data.cid\\\\\\\\n                const imgMarkdown = \\\\\\\\\\\\\\\"![\\\\\\\\\\\\\\\" + imgSrc + \\\\\\\\\\\\\\\"](\\\\\\\\\\\\\\\" + imgSrc + \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\";\\\\\\\\n                editor.codemirror.replaceRange(imgMarkdown, editor.codemirror.getCursor());\\\\\\\\n                editor.codemirror.focus();\\\\\\\\n              } else {\\\\\\\\n                console.error(\\\\\\\\\\\\'Image upload failed:\\\\\\\\\\\\', data);\\\\\\\\n              }\\\\\\\\n            } catch (error) {\\\\\\\\n              console.error(\\\\\\\\\\\\'Error uploading image:\\\\\\\\\\\\', error);\\\\\\\\n            }\\\\\\\\n            finally {\\\\\\\\n              // Hide the loading indicator when done\\\\\\\\n              loadingIndicator.style.display = \\\\\\\\\\\\'none\\\\\\\\\\\\';\\\\\\\\n            }\\\\\\\\n          }\\\\\\\\n        });\\\\\\\\n        \\\\\\\\n        fileInput.click();\\\\\\\\n      },\\\\\\\\n      className: \\\\\\\\\\\\\\\"fa fa-picture-o\\\\\\\\\\\\\\\",\\\\\\\\n      title: \\\\\\\\\\\\\\\"Upload Image\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  ],\\\\\\\\n  placeholder: \\\\\\\\\\\\\\\\`${placeholder}\\\\\\\\\\\\\\\\`,\\\\\\\\n  initialValue: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  insertTexts: {\\\\\\\\n    link: [\\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"]()\\\\\\\\\\\\\\\"],\\\\\\\\n  },\\\\\\\\n  spellChecker: false,\\\\\\\\n  renderingConfig: {\\\\\\\\n\\\\\\\\t\\\\\\\\tsingleLineBreaks: false,\\\\\\\\n\\\\\\\\t\\\\\\\\tcodeSyntaxHighlighting: true,\\\\\\\\n\\\\\\\\t},\\\\\\\\n  autofocus:${autoFocus}\\\\\\\\n});\\\\\\\\n\\\\\\\\ncodeMirrorInstance = simplemde.codemirror;\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Sends message to Widget to update content\\\\\\\\n */\\\\\\\\nconst updateContent = () => {\\\\\\\\n  const content = simplemde.value();\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\", content }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n};\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Sends message to Widget to update iframe height\\\\\\\\n */\\\\\\\\nconst updateIframeHeight = () => {\\\\\\\\n  const iframeHeight = document.body.scrollHeight;\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"resize\\\\\\\\\\\\\\\", height: iframeHeight }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n};\\\\\\\\n\\\\\\\\n// On Change\\\\\\\\nsimplemde.codemirror.on(\\\\\\\\\\\\'blur\\\\\\\\\\\\', () => {\\\\\\\\n  updateContent();\\\\\\\\n});\\\\\\\\n\\\\\\\\nsimplemde.codemirror.on(\\\\\\\\\\\\'keyup\\\\\\\\\\\\', () => {\\\\\\\\n  updateIframeHeight();\\\\\\\\n  const content = simplemde.value();\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"updateOnKeyup\\\\\\\\\\\\\\\", content }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n});\\\\\\\\n\\\\\\\\n\\\\\\\\nif (showAccountAutoComplete) {\\\\\\\\n  let mentionToken;\\\\\\\\n  let mentionCursorStart;\\\\\\\\n  const dropdown = document.getElementById(\\\\\\\\\\\\\\\"mentiondropdown\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keydown\\\\\\\\\\\\\\\", () => {\\\\\\\\n    if (mentionToken && event.key === \\\\\\\\\\\\'ArrowDown\\\\\\\\\\\\') {\\\\\\\\n      dropdown.querySelector(\\\\\\\\\\\\'button\\\\\\\\\\\\').focus();\\\\\\\\n      event.preventDefault();\\\\\\\\n      return false;\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keyup\\\\\\\\\\\\\\\", (cm, event) => {\\\\\\\\n    const cursor = cm.getCursor();\\\\\\\\n    const token = cm.getTokenAt(cursor);\\\\\\\\n\\\\\\\\n    const createMentionDropDownOptions = () => {\\\\\\\\n      const mentionInput = cm.getRange(mentionCursorStart, cursor);\\\\\\\\n      dropdown.innerHTML = getSuggestedAccounts(mentionInput)\\\\\\\\n      .map(\\\\\\\\n        (item) =>\\\\\\\\n          \\\\\\\\\\\\'<li><button class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\\\\\' + item?.accountId + \\\\\\\\\\\\'</button></li>\\\\\\\\\\\\'\\\\\\\\n      )\\\\\\\\n      .join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n      dropdown.querySelectorAll(\\\\\\\\\\\\\\\"li\\\\\\\\\\\\\\\").forEach((li) => {\\\\\\\\n        li.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", () => {\\\\\\\\n          const selectedText = li.textContent.trim();\\\\\\\\n          simplemde.codemirror.replaceRange(selectedText, mentionCursorStart, cursor);\\\\\\\\n          mentionToken = null;\\\\\\\\n          dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n          cm.focus();\\\\\\\\n        });\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    // show dropwdown only when @ is at first place or when there is a space before @\\\\\\\\n      if (!mentionToken && (token.string === \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\" && cursor.ch === 1 || token.string === \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\" && cm.getTokenAt({line:cursor.line, ch: cursor.ch - 1}).string == \\\\\\\\\\\\' \\\\\\\\\\\\')) {\\\\\\\\n        mentionToken = token;\\\\\\\\n        mentionCursorStart = cursor;\\\\\\\\n        // Calculate cursor position relative to the iframe\\\\\\\\\\\\'s viewport\\\\\\\\n        const rect = cm.charCoords(cursor);\\\\\\\\n        const x = rect.left;\\\\\\\\n        const y = rect.bottom;\\\\\\\\n\\\\\\\\n        // Create dropdown with options\\\\\\\\n        dropdown.style.top = y + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n        dropdown.style.left = x + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n        createMentionDropDownOptions();\\\\\\\\n\\\\\\\\n        dropdown.classList.add(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        // Close dropdown on outside click\\\\\\\\n        document.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", function(event) {\\\\\\\\n            if (!dropdown.contains(event.target)) {\\\\\\\\n                mentionToken = null;\\\\\\\\n                dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            }\\\\\\\\n        });\\\\\\\\n    } else if (mentionToken && token.string.match(/[^@a-z0-9.]/)) {\\\\\\\\n        mentionToken = null;\\\\\\\\n        dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n    } else if (mentionToken) {\\\\\\\\n        createMentionDropDownOptions();\\\\\\\\n    }\\\\\\\\n});\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (showProposalIdAutoComplete) {\\\\\\\\n  let proposalId;\\\\\\\\n  let referenceCursorStart;\\\\\\\\n  const dropdown = document.getElementById(\\\\\\\\\\\\\\\"referencedropdown\\\\\\\\\\\\\\\");\\\\\\\\n  const loader = document.createElement(\\\\\\\\\\\\'div\\\\\\\\\\\\');\\\\\\\\n  loader.className = \\\\\\\\\\\\'loader\\\\\\\\\\\\';\\\\\\\\n  loader.textContent = \\\\\\\\\\\\'Loading...\\\\\\\\\\\\';\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keydown\\\\\\\\\\\\\\\", () => {\\\\\\\\n    if (proposalId && event.key === \\\\\\\\\\\\'ArrowDown\\\\\\\\\\\\') {\\\\\\\\n      dropdown.querySelector(\\\\\\\\\\\\'button\\\\\\\\\\\\').focus();\\\\\\\\n      event.preventDefault();\\\\\\\\n      return false;\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keyup\\\\\\\\\\\\\\\", (cm, event) => {\\\\\\\\n    const cursor = cm.getCursor();\\\\\\\\n    const token = cm.getTokenAt(cursor);\\\\\\\\n\\\\\\\\n    const createReferenceDropDownOptions = async () => {\\\\\\\\n      try {\\\\\\\\n        const proposalIdInput = cm.getRange(referenceCursorStart, cursor);\\\\\\\\n        dropdown.innerHTML = \\\\\\\\\\\\'\\\\\\\\\\\\'; // Clear previous content\\\\\\\\n        dropdown.appendChild(loader); // Show loader\\\\\\\\n\\\\\\\\n        const suggestedProposals = await getSuggestedProposals(proposalIdInput);\\\\\\\\n        dropdown.innerHTML = suggestedProposals\\\\\\\\n        .map(\\\\\\\\n          (item) =>\\\\\\\\n            \\\\\\\\\\\\'<li><button class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\\\\\' + \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" + item?.proposal_id + \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" + item.name + \\\\\\\\\\\\'</button></li>\\\\\\\\\\\\'\\\\\\\\n        )\\\\\\\\n        .join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        dropdown.querySelectorAll(\\\\\\\\\\\\\\\"li\\\\\\\\\\\\\\\").forEach((li) => {\\\\\\\\n          li.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", () => {\\\\\\\\n            const selectedText = li.textContent.trim();\\\\\\\\n            const startIndex = selectedText.indexOf(\\\\\\\\\\\\'#\\\\\\\\\\\\') + 1; \\\\\\\\n            const endIndex = selectedText.indexOf(\\\\\\\\\\\\' \\\\\\\\\\\\', startIndex);\\\\\\\\n            const id = endIndex !== -1 ? selectedText.substring(startIndex, endIndex) : selectedText.substring(startIndex);\\\\\\\\n            const link = proposalLink + id;\\\\\\\\n            const adjustedStart = {\\\\\\\\n              line: referenceCursorStart.line,\\\\\\\\n              ch: referenceCursorStart.ch - 1\\\\\\\\n            };\\\\\\\\n            simplemde.codemirror.replaceRange(\\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\" + selectedText + \\\\\\\\\\\\\\\"]\\\\\\\\\\\\\\\" + \\\\\\\\\\\\\\\"(\\\\\\\\\\\\\\\" + link + \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", adjustedStart, cursor);\\\\\\\\n            proposalId = null;\\\\\\\\n            dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            cm.focus();\\\\\\\\n          });\\\\\\\\n        });\\\\\\\\n      } catch (error) {\\\\\\\\n        console.error(\\\\\\\\\\\\'Error fetching data:\\\\\\\\\\\\', error);\\\\\\\\n        // Handle error: Remove loader\\\\\\\\n        dropdown.innerHTML = \\\\\\\\\\\\'\\\\\\\\\\\\'; // Clear previous content\\\\\\\\n      } finally {\\\\\\\\n        // Remove loader\\\\\\\\n        dropdown.removeChild(loader);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // show dropwdown only when there is space before # or it\\\\\\\\\\\\'s first char\\\\\\\\n      if (!proposalId && (token.string === \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" && cursor.ch === 1 || token.string === \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" && cm.getTokenAt({line:cursor.line, ch: cursor.ch - 1}).string == \\\\\\\\\\\\' \\\\\\\\\\\\')) {\\\\\\\\n        proposalId = token;\\\\\\\\n        referenceCursorStart = cursor;\\\\\\\\n        // Calculate cursor position relative to the iframe\\\\\\\\\\\\'s viewport\\\\\\\\n        const rect = cm.charCoords(cursor);\\\\\\\\n        const x = rect.left;\\\\\\\\n        const y = rect.bottom;\\\\\\\\n\\\\\\\\n        // Create dropdown with options\\\\\\\\n        dropdown.style.top = y + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n        dropdown.style.left = x + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n        createReferenceDropDownOptions();\\\\\\\\n\\\\\\\\n        dropdown.classList.add(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        // Close dropdown on outside click\\\\\\\\n        document.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", function(event) {\\\\\\\\n            if (!dropdown.contains(event.target)) {\\\\\\\\n              proposalId = null;\\\\\\\\n                dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            }\\\\\\\\n        });\\\\\\\\n    } else if (proposalId && (token.string.match(/[^#a-z0-9.]/) || !token.string)) {\\\\\\\\n      proposalId = null;\\\\\\\\n      dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n    } else if (proposalId) {\\\\\\\\n      createReferenceDropDownOptions();\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\n}\\\\\\\\n\\\\\\\\nwindow.addEventListener(\\\\\\\\\\\\\\\"message\\\\\\\\\\\\\\\", (event) => {\\\\\\\\n  if (!isEditorInitialized && event.data !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n    simplemde.value(event.data.content);\\\\\\\\n    isEditorInitialized = true;\\\\\\\\n  } else {\\\\\\\\n    if (event.data.handler === \\\\\\\\\\\\'refreshEditor\\\\\\\\\\\\' || event.data.handler === \\\\\\\\\\\\'committed\\\\\\\\\\\\') {\\\\\\\\n      codeMirrorInstance.getDoc().setValue(event.data.content);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  if (event.data.followingData) {\\\\\\\\n    followingData = event.data.followingData;\\\\\\\\n  }\\\\\\\\n  if (event.data.profilesData) {\\\\\\\\n    profilesData = JSON.parse(event.data.profilesData);\\\\\\\\n  }\\\\\\\\n  if (event.data.query) {\\\\\\\\n    query = event.data.query;\\\\\\\\n  }\\\\\\\\n  if (event.data.proposalLink) {\\\\\\\\n    proposalLink = event.data.proposalLink;\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n</script>\\\\\\\\n</body>\\\\\\\\n</html>\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <iframe\\\\\\\\n    className={className}\\\\\\\\n    style={{\\\\\\\\n      height: `${state.iframeHeight}px`,\\\\\\\\n      maxHeight: \\\\\\\\\\\\\\\"410px\\\\\\\\\\\\\\\",\\\\\\\\n      minHeight: \\\\\\\\\\\\\\\"250px\\\\\\\\\\\\\\\",\\\\\\\\n    }}\\\\\\\\n    srcDoc={code}\\\\\\\\n    message={{\\\\\\\\n      content: props.data?.content ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n      followingData,\\\\\\\\n      profilesData: JSON.stringify(profilesData),\\\\\\\\n      query: query,\\\\\\\\n      handler: props.data.handler,\\\\\\\\n      proposalLink: proposalLink,\\\\\\\\n    }}\\\\\\\\n    onMessage={(e) => {\\\\\\\\n      switch (e.handler) {\\\\\\\\n        case \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            onChange(e.content);\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n        case \\\\\\\\\\\\\\\"resize\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            const offset = 10;\\\\\\\\n            State.update({ iframeHeight: e.height + offset });\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n        case \\\\\\\\\\\\\\\"updateOnKeyup\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            onChangeKeyup(e.content);\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n      }\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.blog.editor.form\": {\"\": \"const FormContainer = styled.div`\\\\\\\\n  & > *:not(:last-child) {\\\\\\\\n    margin-bottom: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst {\\\\\\\\n  title,\\\\\\\\n  setTitle,\\\\\\\\n  subtitle,\\\\\\\\n  setSubtitle,\\\\\\\\n  options,\\\\\\\\n  category,\\\\\\\\n  setCategory,\\\\\\\\n  description,\\\\\\\\n  setDescription,\\\\\\\\n  debouncedUpdateState,\\\\\\\\n  author,\\\\\\\\n  setAuthor,\\\\\\\\n  date,\\\\\\\\n  setDate,\\\\\\\\n  content,\\\\\\\\n  setContent,\\\\\\\\n} = props;\\\\\\\\n\\\\\\\\nconst TitleInput = ({ title, setTitle }) => {\\\\\\\\n  return (\\\\\\\\n    <div>\\\\\\\\n      <h5>Title</h5>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n            onChange: (e) => setTitle(e.target.value),\\\\\\\\n            value: title,\\\\\\\\n            placeholder: \\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\",\\\\\\\\n            inputProps: { name: \\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\" },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\nconst SubtitleInput = ({ subtitle, setSubtitle }) => {\\\\\\\\n  return (\\\\\\\\n    <div>\\\\\\\\n      <h5>Subtitle</h5>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n            onChange: (e) => setSubtitle(e.target.value),\\\\\\\\n            value: subtitle,\\\\\\\\n            placeholder: \\\\\\\\\\\\\\\"Subtitle\\\\\\\\\\\\\\\",\\\\\\\\n            inputProps: { name: \\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\" },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategorySelect = ({ options, category, setCategory }) => {\\\\\\\\n  return (\\\\\\\\n    <div>\\\\\\\\n      <h5>Category</h5>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Select\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n            options,\\\\\\\\n            value: category,\\\\\\\\n            onChange: (e) => setCategory(e.target.value),\\\\\\\\n            placeholder: \\\\\\\\\\\\\\\"Select a category\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst DescriptionInput = ({ description, setDescription }) => {\\\\\\\\n  return (\\\\\\\\n    <div>\\\\\\\\n      <h5>Description</h5>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n            onChange: (e) => setDescription(e.target.value),\\\\\\\\n            value: description,\\\\\\\\n            placeholder: \\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\",\\\\\\\\n            inputProps: { name: \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\" },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst AuthorInput = ({ author, setAuthor }) => {\\\\\\\\n  return (\\\\\\\\n    <div>\\\\\\\\n      <h5>Author</h5>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n            onChange: (e) => setAuthor(e.target.value),\\\\\\\\n            value: author,\\\\\\\\n            placeholder: \\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\",\\\\\\\\n            inputProps: { name: \\\\\\\\\\\\\\\"author\\\\\\\\\\\\\\\" },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst DateInput = ({ date, setDate }) => {\\\\\\\\n  return (\\\\\\\\n    <div>\\\\\\\\n      <h5>Date</h5>\\\\\\\\n      <input\\\\\\\\n        name=\\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\\"\\\\\\\\n        value={date}\\\\\\\\n        onChange={(e) => setDate(e.target.value)}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst ContentEditor = ({ content, setContent }) => {\\\\\\\\n  return (\\\\\\\\n    <div>\\\\\\\\n      <h5>Content</h5>\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.SimpleMDE\\\\\\\\\\\\\\\"\\\\\\\\n        props={{ data: { content }, onChange: setContent }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <FormContainer id=\\\\\\\\\\\\\\\"blog-editor-form\\\\\\\\\\\\\\\">\\\\\\\\n    <TitleInput title={title} setTitle={setTitle} />\\\\\\\\n    <SubtitleInput subtitle={subtitle} setSubtitle={setSubtitle} />\\\\\\\\n    <CategorySelect\\\\\\\\n      options={options}\\\\\\\\n      category={category}\\\\\\\\n      setCategory={setCategory}\\\\\\\\n    />\\\\\\\\n    <DescriptionInput\\\\\\\\n      description={description}\\\\\\\\n      setDescription={setDescription}\\\\\\\\n      debouncedUpdateState={debouncedUpdateState}\\\\\\\\n    />\\\\\\\\n    <AuthorInput author={author} setAuthor={setAuthor} />\\\\\\\\n    <DateInput date={date} setDate={setDate} />\\\\\\\\n    <ContentEditor content={content} setContent={setContent} />\\\\\\\\n  </FormContainer>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.wiki.Configurator\": {\"\": \"const { data, onSubmit } = props;\\\\\\\\n\\\\\\\\nconst initialData = data;\\\\\\\\nconst [content, setContent] = useState(data.content || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [title, setTitle] = useState(data.title || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [subtitle, setSubtitle] = useState(data.subtitle || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst [textAlign, setTextAlign] = useState(data.textAlign || \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  margin: 0 auto;\\\\\\\\n  padding: 20px;\\\\\\\\n  text-align: left;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst FormContainer = styled.div`\\\\\\\\n  padding-top: 1rem;\\\\\\\\n\\\\\\\\n  & > *:not(:last-child) {\\\\\\\\n    margin-bottom: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst hasDataChanged = () => {\\\\\\\\n  return (\\\\\\\\n    content !== initialData.content ||\\\\\\\\n    title !== initialData.title ||\\\\\\\\n    subtitle !== initialData.subtitle ||\\\\\\\\n    textAlign !== initialData.textAlign\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleSubmit = () => {\\\\\\\\n  if (title) onSubmit({ title, subtitle, content, textAlign });\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <ul className=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"editPreviewTabs\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"tablist\\\\\\\\\\\\\\\">\\\\\\\\n      <li className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"nav-link active\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"edit-tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-target=\\\\\\\\\\\\\\\"#edit\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          aria-controls=\\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\"\\\\\\\\n          aria-selected=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          Edit\\\\\\\\n        </button>\\\\\\\\n      </li>\\\\\\\\n      <li className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"nav-link\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"preview-tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-target=\\\\\\\\\\\\\\\"#preview\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          aria-controls=\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\"\\\\\\\\n          aria-selected=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          Preview\\\\\\\\n        </button>\\\\\\\\n      </li>\\\\\\\\n    </ul>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"tab-content\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"editPreviewTabsContent\\\\\\\\\\\\\\\">\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"tab-pane show active p-4\\\\\\\\\\\\\\\"\\\\\\\\n        id=\\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\"\\\\\\\\n        role=\\\\\\\\\\\\\\\"tabpanel\\\\\\\\\\\\\\\"\\\\\\\\n        aria-labelledby=\\\\\\\\\\\\\\\"edit-tab\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\" }}\\\\\\\\n      >\\\\\\\\n        <div style={{ position: \\\\\\\\\\\\\\\"absolute\\\\\\\\\\\\\\\", top: 10, right: 0 }}>\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Switch\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              currentValue: textAlign,\\\\\\\\n              key: \\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\",\\\\\\\\n              onChange: (e) => setTextAlign(e.target.value),\\\\\\\\n              options: [\\\\\\\\n                { label: \\\\\\\\\\\\\\\"Left\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\" },\\\\\\\\n                { label: \\\\\\\\\\\\\\\"Center\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" },\\\\\\\\n                { label: \\\\\\\\\\\\\\\"Right\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"right\\\\\\\\\\\\\\\" },\\\\\\\\n              ],\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <FormContainer>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\",\\\\\\\\n                className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                onChange: (e) => setTitle(e.target.value),\\\\\\\\n                value: title,\\\\\\\\n                inputProps: {\\\\\\\\n                  min: 2,\\\\\\\\n                  max: 60,\\\\\\\\n                  required: true,\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Subtitle\\\\\\\\\\\\\\\",\\\\\\\\n                className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                onChange: (e) => setSubtitle(e.target.value),\\\\\\\\n                value: subtitle,\\\\\\\\n                inputProps: {\\\\\\\\n                  min: 2,\\\\\\\\n                  max: 250,\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.SimpleMDE\\\\\\\\\\\\\\\"\\\\\\\\n            props={{ data: { content }, onChange: setContent }}\\\\\\\\n          />\\\\\\\\n        </FormContainer>\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-end gap-3 mt-4\\\\\\\\\\\\\\\"}\\\\\\\\n        >\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n              disabled: !hasDataChanged() || !title || !content,\\\\\\\\n              icon: {\\\\\\\\n                type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                variant: \\\\\\\\\\\\\\\"bi-check-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n              },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Publish\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: handleSubmit,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"tab-pane\\\\\\\\\\\\\\\"\\\\\\\\n        id=\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\"\\\\\\\\n        role=\\\\\\\\\\\\\\\"tabpanel\\\\\\\\\\\\\\\"\\\\\\\\n        aria-labelledby=\\\\\\\\\\\\\\\"preview-tab\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"w-100 h-100 p-4\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.wiki.Viewer\\\\\\\\\\\\\\\"\\\\\\\\n            props={{ title, subtitle, content, textAlign }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.908532670478e+21
    }
  },
  {
    "id": "9634147353",
    "receipt_id": "4179PrkCx5Cc6eKT93EGUPiF8QXeNWFpS9UkJ4mFoGpS",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "GUfGxDrBV3XPi8oJhbEApT8CqkgyU9swXCBadJReUDu7",
      "block_height": 131485892,
      "block_timestamp": 1730217943545920800
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "9LoyBJzFz6vS7LTCUppjAokDyKcoDJRHnEkUiyw8gCsv",
    "included_in_block_hash": "GRVVR1N2cKjBFKj4E3eWcXoZiBdbMwtTQV4ujx1fb4yv",
    "block_timestamp": "1730217941220115966",
    "block": {
      "block_height": 131485890
    },
    "receipt_conversion_tokens_burnt": "302526831556000000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8654075713355865e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.908532670478e+21
    }
  },
  {
    "id": "9642883924",
    "receipt_id": "CdCqPAwUrtujEa8eEWPh3TGf1eBBWV1bQQFpb4VCSVcC",
    "predecessor_account_id": "theori.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "CRFGNeDm8VddGR1At9P6sh7EmCpzsRgz1ob97WzCda85",
      "block_height": 131508826,
      "block_timestamp": 1730243437950768000
    },
    "receipt_outcome": {
      "gas_burnt": 4444882578608,
      "tokens_burnt": 444488257860800000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "DuSdjzaJFNipxU45JKkD6gpryYMpipnWCiEv2zpRQaiN",
    "included_in_block_hash": "48A8PCBBQfYN5gWmKLnqhh42Q2uRK3P9PTxjaxaDjcG6",
    "block_timestamp": "1730243436938813966",
    "block": {
      "block_height": 131508825
    },
    "receipt_conversion_tokens_burnt": "31702403842000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 444488257860800000000,
        "args": "{\"id\": 236, \"timeline\": {\"status\": \"REVIEW\", \"kyc_verified\": true, \"timeline_version\": \"V1\", \"sponsor_requested_review\": true, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 828724837313500000000
    }
  }
]