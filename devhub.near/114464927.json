[
  {
    "id": "3028065232",
    "receipt_id": "ENgoKJs2vuZVYhFRefJVzwv7kTJGaGpYv2FHQosbEZLZ",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2tF8Qx9KKdWzU8UKgE2DnGKbPHMRU2Ybz8ioWTVpzB4k",
      "block_height": 114487091,
      "block_timestamp": 1710115539172134000
    },
    "receipt_outcome": {
      "gas_burnt": 6007237809036,
      "tokens_burnt": 600723780903600000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "2ZJ7BiJ4cw4p1gR8v4F7pFFgj3giyDod2ARtZkNkmzJQ",
    "included_in_block_hash": "BgX1e2h3fSH15mwDNmPWyLUF87i3C2AKDFtdeiNnyrGD",
    "block_timestamp": "1710115538158269745",
    "block": {
      "block_height": 114487090
    },
    "receipt_conversion_tokens_burnt": "242807527944600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "create_discussion",
        "deposit": 0,
        "fee": 600723780903600000000,
        "args": "{\"handle\": \"near-discovery\", \"block_height\": 114487076}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.441185952614e+21
    }
  },
  {
    "id": "3028068622",
    "receipt_id": "9XxGe1hPofZFzbsxtRX12fM6bMfN8RwZ5qmPdP4Y4yBq",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "zTzaqPfGC95bkN4tZsNaPTmnkqxWJnSbU1oLe3NuLxo",
      "block_height": 114487101,
      "block_timestamp": 1710115552965750000
    },
    "receipt_outcome": {
      "gas_burnt": 5976546437658,
      "tokens_burnt": 597654643765800000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "2ZJ7BiJ4cw4p1gR8v4F7pFFgj3giyDod2ARtZkNkmzJQ",
    "included_in_block_hash": "BgX1e2h3fSH15mwDNmPWyLUF87i3C2AKDFtdeiNnyrGD",
    "block_timestamp": "1710115538158269745",
    "block": {
      "block_height": 114487090
    },
    "receipt_conversion_tokens_burnt": "242807527944600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 597654643765800000000,
        "args": "{\"data\": {\"discussions.near-discovery.community.devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"repost\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"item\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near/post/main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"blockHeight\\\\\\\\\\\\\\\":114487076}}}\", \"repost\": \"[{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"repost\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"item\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near/post/main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"blockHeight\\\\\\\\\\\\\\\":114487076}}},{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near/post/main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"blockHeight\\\\\\\\\\\\\\\":114487076},\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"repost\\\\\\\\\\\\\\\"}}]\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.441185952614e+21
    }
  },
  {
    "id": "3034621705",
    "receipt_id": "22pxxgBNbJiKhzGvqEo6o27sqjvsfwe9zWxdX8BsrSFw",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6FtVwyE3X7inHkWEdf3kE94Tg55sJh5HkSqq6v74TCRv",
      "block_height": 114508456,
      "block_timestamp": 1710145174900827400
    },
    "receipt_outcome": {
      "gas_burnt": 7417439370210,
      "tokens_burnt": 741743937021000000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "6rQp3THyrPVUuxpQ49CjHUhhXM77pP3QNeFcxAXnM589",
    "included_in_block_hash": "B7PHvcjj56DdzdkwMKoy99D1eodRjV5kd8vXnprJFy2X",
    "block_timestamp": "1710145173439160728",
    "block": {
      "block_height": 114508455
    },
    "receipt_conversion_tokens_burnt": "243526604319000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "update_community",
        "deposit": 0,
        "fee": 741743937021000000000,
        "args": "{\"handle\": \"near-discovery\", \"community\": {\"tag\": \"near-discovery\", \"name\": \"BOS Community\", \"addons\": [{\"id\": \"cb587g\", \"enabled\": true, \"addon_id\": \"telegram\", \"parameters\": \"{\\\\\\\\\\\\\\\"handles\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"NEARisBOS\\\\\\\\\\\\\\\"]}\", \"display_name\": \"Telegram\"}, {\"id\": \"37dlcr\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Overview\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"near.org is one of the reference gateways that showcases the full functionality of the BOS stack. It is a place for developers to explore, connect, and grow in their journey of building applications on the BOS. This community will be focused on empowering developers and organizations to build effective applications and experiences on near.org. \\\\\\\\\\\\\\\\n \\\\\\\\\\\\\\\\n---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## STRUCTURE\\\\\\\\\\\\\\\\nThe near.org community consists of two main groups:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Working Group\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThis formal group is a selected committee of subject matter experts who make official decisions on proposals and questions related to the near.org gateway. They follow a strict process to review proposals, recommend funding to DAO, and hold grant takers accountable. They also engage with the broader community to understand their needs and encourage ideation. \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Members**\\\\\\\\\\\\\\\\n- @gauthamravi.near\\\\\\\\\\\\\\\\n- @charleslavon.near\\\\\\\\\\\\\\\\n- @theori.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Community Group\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThis informal self-organized group provides a space for anyone interested in NEAR Discovery (near.org) and its applications. While this group does not make official decisions, it offers a great opportunity to meet with others to share ideas and submit proposals. This group is not controlled by anyone but the people who are organizing it. The group has a dedicated Telegram channel as well as regular monthly calls. \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### Communication Channels\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- Here on the Discussions page!\\\\\\\\\\\\\\\\n- Check the Events tab for upcoming Community/Work Group calls.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Current Work & Topics of Discussion &nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nIf you\\\\\\\\u{2019}d like to add a current topic you\\\\\\\\u{2019}re working on as part of this community, please make a post on the main Group page for inclusion!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Community Links &nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n##### Community Organizations / Projects\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n##### Reference Material\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nIf you\\\\\\\\u{2019}d like to add links to your project, interesting reference material for the community, or anything else worth linking here, please reach out to any of the community leads! We want to be as inclusive as possible.\\\\\\\\\\\\\\\"}\", \"display_name\": \"Wiki 1\"}, {\"id\": \"id5pxq\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Events\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"We plan to organize the first community call in late August 2023. Stay tuned for more details.\\\\\\\\\\\\\\\"}\", \"display_name\": \"Wiki 2\"}], \"admins\": [\"theori.near\", \"gauthamravi.near\", \"bo.near\", \"charleslavon.near\"], \"handle\": \"near-discovery\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreiallqdbswmds66wtcxbyyw3a6uc5ifn3q3s5476mhfoyefyiuzpvq\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreiemktmsdhpdoomwlvfi2ztm7c5sdqdmb2z5mg4bjssoqkz7wunaoi\", \"description\": \"Building the near.org gateway on BOS\", \"website_url\": \"near.org\", \"bio_markdown\": \"The NEAR Discovery community is dedicated to bringing together developers and organizations that are building applications on the near.org gateway and other BOS gateways.\", \"github_handle\": \"near/near-discovery\", \"twitter_handle\": \"NEARProtocol\", \"telegram_handle\": \"NEARisBOS\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.3894692446422e+21
    }
  },
  {
    "id": "3034623638",
    "receipt_id": "2virFnDd9oQfwah7D5XJ1csG83yMJhf87AyySJhM6Uhh",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2KJ3RPZnuvFwSxiKiHt3r3KKMz7pHeDFvuE2usgB37vL",
      "block_height": 114508461,
      "block_timestamp": 1710145181568805400
    },
    "receipt_outcome": {
      "gas_burnt": 24041987033022,
      "tokens_burnt": 2.4041987033022e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "6rQp3THyrPVUuxpQ49CjHUhhXM77pP3QNeFcxAXnM589",
    "included_in_block_hash": "B7PHvcjj56DdzdkwMKoy99D1eodRjV5kd8vXnprJFy2X",
    "block_timestamp": "1710145173439160728",
    "block": {
      "block_height": 114508455
    },
    "receipt_conversion_tokens_burnt": "243526604319000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 2.4041987033022e+21,
        "args": "{\"data\": {\"near-discovery.community.devhub.near\": {\"profile\": {\"name\": \"BOS Community\", \"tags\": {\"community\": \"\", \"announcements\": \"\", \"near-discovery\": \"\"}, \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreiallqdbswmds66wtcxbyyw3a6uc5ifn3q3s5476mhfoyefyiuzpvq\"}, \"linktree\": {\"github\": \"near/near-discovery\", \"twitter\": \"NEARProtocol\", \"website\": \"near.social/devhub.near/widget/app?page=community&handle=near-discovery\", \"telegram\": \"NEARisBOS\"}, \"description\": \"The NEAR Discovery community is dedicated to bringing together developers and organizations that are building applications on the near.org gateway and other BOS gateways.\\\\\\\\n\\\\\\\\nLearn more about our community [on DevHub](/devhub.near/widget/app?page=community&handle=near-discovery).\", \"backgroundImage\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreiemktmsdhpdoomwlvfi2ztm7c5sdqdmb2z5mg4bjssoqkz7wunaoi\"}}}, \"discussions.near-discovery.community.devhub.near\": {\"profile\": {\"name\": \"BOS Community (Community Discussions)\", \"tags\": {\"community\": \"\", \"discussions\": \"\", \"near-discovery\": \"\"}, \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreiallqdbswmds66wtcxbyyw3a6uc5ifn3q3s5476mhfoyefyiuzpvq\"}, \"linktree\": {\"github\": \"near/near-discovery\", \"twitter\": \"NEARProtocol\", \"website\": \"near.social/devhub.near/widget/app?page=community&handle=near-discovery\", \"telegram\": \"NEARisBOS\"}, \"description\": \"Building the near.org gateway on BOS\\\\\\\\n\\\\\\\\nLearn more about our community [on DevHub](/devhub.near/widget/app?page=community&handle=near-discovery).\", \"backgroundImage\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreiemktmsdhpdoomwlvfi2ztm7c5sdqdmb2z5mg4bjssoqkz7wunaoi\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.3894692446422e+21
    }
  },
  {
    "id": "3039395855",
    "receipt_id": "Der5wNimCUXhhb3hx9rtEo8rKXSBrPP3VwSqRM2P3WM1",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "Ehr1zSJa7WCYvcyRttaDSAtbq8QohSK64o3swtzhYLYJ",
      "block_height": 114525345,
      "block_timestamp": 1710168907739526400
    },
    "receipt_outcome": {
      "gas_burnt": 23153851328699,
      "tokens_burnt": 2.3153851328699e+21,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "DEbp523QxVZgbkBd3rhQLcuXBrSN2HBqRBMSJk11nLni",
    "included_in_block_hash": "Ehr1zSJa7WCYvcyRttaDSAtbq8QohSK64o3swtzhYLYJ",
    "block_timestamp": "1710168907739526368",
    "block": {
      "block_height": 114525345
    },
    "receipt_conversion_tokens_burnt": "445457157760000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "unsafe_self_upgrade",
        "deposit": 0,
        "fee": 2.3153851328699e+21,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9178705978112e+21
    }
  },
  {
    "id": "3039396277",
    "receipt_id": "6RQTB369Fz39z3XqG4dZqcC52UutLYHYpdbh5wp1rQqU",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "D8wdUfDov7HmAZBPoDYdgTFMveApUPKRDYsJBiWNZJEa",
      "block_height": 114525346,
      "block_timestamp": 1710168909193948200
    },
    "receipt_outcome": {
      "gas_burnt": 58820514805664,
      "tokens_burnt": 5.8820514805664e+21,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "DEbp523QxVZgbkBd3rhQLcuXBrSN2HBqRBMSJk11nLni",
    "included_in_block_hash": "Ehr1zSJa7WCYvcyRttaDSAtbq8QohSK64o3swtzhYLYJ",
    "block_timestamp": "1710168907739526368",
    "block": {
      "block_height": 114525345
    },
    "receipt_conversion_tokens_burnt": "445457157760000000000",
    "actions": [
      {
        "action": "DEPLOY_CONTRACT",
        "method": null,
        "deposit": 0,
        "fee": 5.8820514805664e+21,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9178705978112e+21
    }
  },
  {
    "id": "3039396279",
    "receipt_id": "AE71pLZYRpCoXn3YvqWMgiWiqqXzts8RWx8xnYVd6DX8",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "D8wdUfDov7HmAZBPoDYdgTFMveApUPKRDYsJBiWNZJEa",
      "block_height": 114525346,
      "block_timestamp": 1710168909193948200
    },
    "receipt_outcome": {
      "gas_burnt": 2749768266149,
      "tokens_burnt": 274976826614900000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "DEbp523QxVZgbkBd3rhQLcuXBrSN2HBqRBMSJk11nLni",
    "included_in_block_hash": "Ehr1zSJa7WCYvcyRttaDSAtbq8QohSK64o3swtzhYLYJ",
    "block_timestamp": "1710168907739526368",
    "block": {
      "block_height": 114525345
    },
    "receipt_conversion_tokens_burnt": "445457157760000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "unsafe_migrate",
        "deposit": 0,
        "fee": 274976826614900000000,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9178705978112e+21
    }
  },
  {
    "id": "3039396281",
    "receipt_id": "J5nrcZNJypGJC7quuyiQzHRvQbrB8mSJ6GB7eeikGm7N",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "D8wdUfDov7HmAZBPoDYdgTFMveApUPKRDYsJBiWNZJEa",
      "block_height": 114525346,
      "block_timestamp": 1710168909193948200
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "DEbp523QxVZgbkBd3rhQLcuXBrSN2HBqRBMSJk11nLni",
    "included_in_block_hash": "Ehr1zSJa7WCYvcyRttaDSAtbq8QohSK64o3swtzhYLYJ",
    "block_timestamp": "1710168907739526368",
    "block": {
      "block_height": 114525345
    },
    "receipt_conversion_tokens_burnt": "445457157760000000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.2201429284569194e+22,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9178705978112e+21
    }
  },
  {
    "id": "3039402884",
    "receipt_id": "3GLPnQ7jRRGimrz9y5Cu5Ms6uK1Ab6i6xFdnZihYfJtK",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "J5Wyv4E5YySJNSzZwgjJ424sgGkocSECLVp3wm7xQvND",
      "block_height": 114525366,
      "block_timestamp": 1710168935689401000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "DEbp523QxVZgbkBd3rhQLcuXBrSN2HBqRBMSJk11nLni",
    "included_in_block_hash": "Ehr1zSJa7WCYvcyRttaDSAtbq8QohSK64o3swtzhYLYJ",
    "block_timestamp": "1710168907739526368",
    "block": {
      "block_height": 114525345
    },
    "receipt_conversion_tokens_burnt": "445457157760000000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.3881046995193563e+22,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9178705978112e+21
    }
  },
  {
    "id": "3039408490",
    "receipt_id": "D4jGHiiU9doJ3b1EYiVrTEcmBvt65BKSY5KsMHxMJMen",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "Ak1AnhHXPZPT5CjmsJc26YHV9vTWH2pBKMofEw6XKVij",
      "block_height": 114525384,
      "block_timestamp": 1710168960007804400
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "DEbp523QxVZgbkBd3rhQLcuXBrSN2HBqRBMSJk11nLni",
    "included_in_block_hash": "Ehr1zSJa7WCYvcyRttaDSAtbq8QohSK64o3swtzhYLYJ",
    "block_timestamp": "1710168907739526368",
    "block": {
      "block_height": 114525345
    },
    "receipt_conversion_tokens_burnt": "445457157760000000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 3.413977990790471e+22,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9178705978112e+21
    }
  },
  {
    "id": "3039509515",
    "receipt_id": "H8rtkqpMWjWMLCgCgi9U7LknKfEHVTYQ2FLw6UXbYHZZ",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7bnRjiHbjQFT4kco1sWSPWSm2FLqHy6B4R8cawoS6JyV",
      "block_height": 114525676,
      "block_timestamp": 1710169363808743400
    },
    "receipt_outcome": {
      "gas_burnt": 15075419904960,
      "tokens_burnt": 1.507541990496e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "GrYZDkZXk1YxKG4ZTM5sJskSFDotBdQxPJzzD3ydYdbY",
    "included_in_block_hash": "jeenugSEGJwQqnz7itQoQWP4H7N3fFYJXp2qWNYutyn",
    "block_timestamp": "1710169362497426890",
    "block": {
      "block_height": 114525675
    },
    "receipt_conversion_tokens_burnt": "255084817945200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.507541990496e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.entity.post.Post\": {\"\": \"// Ideally, this would be a page\\\\\\\\n\\\\\\\\nconst { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\nconst { getDepositAmountForWriteAccess } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.common\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\ngetDepositAmountForWriteAccess || (getDepositAmountForWriteAccess = () => {});\\\\\\\\nconst { draftState, onDraftStateChange } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.draft\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!href) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ButtonWithHover = styled.button`\\\\\\\\n  background-color: #fff;\\\\\\\\n  transition: all 300ms;\\\\\\\\n  border-radius: 0.5rem;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #e9ecef;\\\\\\\\n    color: #000;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:disabled {\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #b7b7b7;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LikeLoadingSpinner = (\\\\\\\\n  <span\\\\\\\\n    className=\\\\\\\\\\\\\\\"like-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst postId = props.post.id ?? (props.id ? parseInt(props.id) : 0);\\\\\\\\n\\\\\\\\nconst [isLikeClicked, setIsLikeClicked] = useState(false);\\\\\\\\nconst [numLikes, setNumLikes] = useState(null);\\\\\\\\n\\\\\\\\nconst post =\\\\\\\\n  props.post ??\\\\\\\\n  Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_post\\\\\\\\\\\\\\\", { post_id: postId });\\\\\\\\n\\\\\\\\nif (!post) {\\\\\\\\n  return <div>Loading ...</div>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (isLikeClicked && numLikes !== post.likes.length) {\\\\\\\\n  setIsLikeClicked(false);\\\\\\\\n}\\\\\\\\n\\\\\\\\nsetNumLikes(post.likes.length);\\\\\\\\n\\\\\\\\nconst referral = props.referral;\\\\\\\\nconst currentTimestamp = props.timestamp ?? post.snapshot.timestamp;\\\\\\\\nconst compareTimestamp = props.compareTimestamp ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst swapTimestamps = currentTimestamp < compareTimestamp;\\\\\\\\n\\\\\\\\nconst snapshotHistory = post.snapshot_history;\\\\\\\\n\\\\\\\\nconst snapshot =\\\\\\\\n  currentTimestamp === post.snapshot.timestamp\\\\\\\\n    ? post.snapshot\\\\\\\\n    : (snapshotHistory &&\\\\\\\\n        snapshotHistory.find((s) => s.timestamp === currentTimestamp)) ??\\\\\\\\n      null;\\\\\\\\n\\\\\\\\nconst compareSnapshot =\\\\\\\\n  compareTimestamp === post.snapshot.timestamp\\\\\\\\n    ? post.snapshot\\\\\\\\n    : (snapshotHistory &&\\\\\\\\n        snapshotHistory.find((s) => s.timestamp === compareTimestamp)) ??\\\\\\\\n      null;\\\\\\\\n\\\\\\\\n// If this post is displayed under another post. Used to limit the size.\\\\\\\\nconst isUnderPost = props.isUnderPost ? true : false;\\\\\\\\n\\\\\\\\nconst parentId = Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_parent_id\\\\\\\\\\\\\\\", {\\\\\\\\n  post_id: postId,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst childPostIdsUnordered =\\\\\\\\n  Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_children_ids\\\\\\\\\\\\\\\", {\\\\\\\\n    post_id: postId,\\\\\\\\n  }) ?? [];\\\\\\\\n\\\\\\\\nconst childPostIds = props.isPreview ? [] : childPostIdsUnordered.reverse();\\\\\\\\nconst expandable = props.isPreview ? false : props.expandable ?? false;\\\\\\\\nconst defaultExpanded = expandable ? props.defaultExpanded : true;\\\\\\\\n\\\\\\\\nfunction readableDate(timestamp) {\\\\\\\\n  var a = new Date(timestamp);\\\\\\\\n  return a.toDateString() + \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" + a.toLocaleTimeString();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst timestamp = readableDate(\\\\\\\\n  snapshot.timestamp ? snapshot.timestamp / 1000000 : Date.now()\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst postSearchKeywords = props.searchKeywords ? (\\\\\\\\n  <div style={{ \\\\\\\\\\\\\\\"font-family\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"monospace\\\\\\\\\\\\\\\" }} key=\\\\\\\\\\\\\\\"post-search-keywords\\\\\\\\\\\\\\\">\\\\\\\\n    <span>Found keywords: </span>\\\\\\\\n\\\\\\\\n    {props.searchKeywords.map((tag) => (\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Tag\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{ linkTo: \\\\\\\\\\\\\\\"Feed\\\\\\\\\\\\\\\", tag }}\\\\\\\\n      />\\\\\\\\n    ))}\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"post-search-keywords\\\\\\\\\\\\\\\"></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst searchKeywords = props.searchKeywords ? (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"mb-4\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"search-keywords\\\\\\\\\\\\\\\">\\\\\\\\n    <small class=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{postSearchKeywords}</small>\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"search-keywords\\\\\\\\\\\\\\\"></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst allowedToEdit =\\\\\\\\n  !props.isPreview &&\\\\\\\\n  Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"is_allowed_to_edit\\\\\\\\\\\\\\\", {\\\\\\\\n    post_id: postId,\\\\\\\\n    editor: context.accountId,\\\\\\\\n  });\\\\\\\\n\\\\\\\\nconst btnEditorWidget = (postType, name) => {\\\\\\\\n  return (\\\\\\\\n    <li>\\\\\\\\n      <a\\\\\\\\n        class=\\\\\\\\\\\\\\\"dropdown-item\\\\\\\\\\\\\\\"\\\\\\\\n        role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n        onClick={() =>\\\\\\\\n          State.update({ postType, editorType: \\\\\\\\\\\\\\\"EDIT\\\\\\\\\\\\\\\", showEditor: true })\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        {name}\\\\\\\\n      </a>\\\\\\\\n    </li>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst editControl = allowedToEdit ? (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"btn-group\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"group\\\\\\\\\\\\\\\">\\\\\\\\n    <a\\\\\\\\n      class=\\\\\\\\\\\\\\\"card-link px-2\\\\\\\\\\\\\\\"\\\\\\\\n      role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n      title=\\\\\\\\\\\\\\\"Edit post\\\\\\\\\\\\\\\"\\\\\\\\n      data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n      aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n      type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"bi bi-pencil-square\\\\\\\\\\\\\\\"></div>\\\\\\\\n    </a>\\\\\\\\n\\\\\\\\n    <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\">\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as an idea\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as a solution\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Attestation\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as an attestation\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as a sponsorship\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as a comment\\\\\\\\\\\\\\\")}\\\\\\\\n    </ul>\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst shareButton = props.isPreview ? (\\\\\\\\n  <div></div>\\\\\\\\n) : (\\\\\\\\n  <Link\\\\\\\\n    class=\\\\\\\\\\\\\\\"card-link text-dark\\\\\\\\\\\\\\\"\\\\\\\\n    to={href({\\\\\\\\n      widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n      params: { page: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\", id: postId },\\\\\\\\n    })}\\\\\\\\n    role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n    target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n    title=\\\\\\\\\\\\\\\"Open in new tab\\\\\\\\\\\\\\\"\\\\\\\\n  >\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"bi bi-share\\\\\\\\\\\\\\\"></div>\\\\\\\\n  </Link>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst ProfileCardContainer = styled.div`\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// card-header\\\\\\\\nconst header = (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"header\\\\\\\\\\\\\\\">\\\\\\\\n    <small class=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"row justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"d-flex align-items-center flex-wrap\\\\\\\\\\\\\\\">\\\\\\\\n          <ProfileCardContainer>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.ProfileCard\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                accountId: post.author_id,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </ProfileCardContainer>\\\\\\\\n\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"d-flex ms-auto\\\\\\\\\\\\\\\">\\\\\\\\n            {editControl}\\\\\\\\n            {timestamp}\\\\\\\\n\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.History\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                post,\\\\\\\\n                timestamp: currentTimestamp,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            {shareButton}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </small>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\n// const emptyIcons = {\\\\\\\\n//   Idea: \\\\\\\\\\\\\\\"bi-lightbulb\\\\\\\\\\\\\\\",\\\\\\\\n//   Comment: \\\\\\\\\\\\\\\"bi-chat\\\\\\\\\\\\\\\",\\\\\\\\n//   Solution: \\\\\\\\\\\\\\\"bi-rocket\\\\\\\\\\\\\\\",\\\\\\\\n//   Attestation: \\\\\\\\\\\\\\\"bi-check-circle\\\\\\\\\\\\\\\",\\\\\\\\n//   Sponsorship: \\\\\\\\\\\\\\\"bi-cash-coin\\\\\\\\\\\\\\\",\\\\\\\\n//   Github: \\\\\\\\\\\\\\\"bi-github\\\\\\\\\\\\\\\",\\\\\\\\n//   Like: \\\\\\\\\\\\\\\"bi-heart\\\\\\\\\\\\\\\",\\\\\\\\n//   Reply: \\\\\\\\\\\\\\\"bi-reply\\\\\\\\\\\\\\\",\\\\\\\\n// };\\\\\\\\n\\\\\\\\nconst emptyIcons = {\\\\\\\\n  Idea: \\\\\\\\\\\\\\\"\\\\\\\\u{1f4a1}\\\\\\\\\\\\\\\",\\\\\\\\n  Comment: \\\\\\\\\\\\\\\"bi-chat\\\\\\\\\\\\\\\",\\\\\\\\n  Solution: \\\\\\\\\\\\\\\"\\\\\\\\u{1f680}\\\\\\\\\\\\\\\",\\\\\\\\n  Attestation: \\\\\\\\\\\\\\\"\\\\\\\\u{2705}\\\\\\\\\\\\\\\",\\\\\\\\n  Sponsorship: \\\\\\\\\\\\\\\"\\\\\\\\u{1fa99}\\\\\\\\\\\\\\\",\\\\\\\\n  Github: \\\\\\\\\\\\\\\"bi-github\\\\\\\\\\\\\\\",\\\\\\\\n  Like: \\\\\\\\\\\\\\\"bi-heart\\\\\\\\\\\\\\\",\\\\\\\\n  Reply: \\\\\\\\\\\\\\\"bi-reply\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst fillIcons = {\\\\\\\\n  Idea: \\\\\\\\\\\\\\\"\\\\\\\\u{1f4a1}\\\\\\\\\\\\\\\",\\\\\\\\n  Comment: \\\\\\\\\\\\\\\"bi-chat-fill\\\\\\\\\\\\\\\",\\\\\\\\n  Solution: \\\\\\\\\\\\\\\"\\\\\\\\u{1f680}\\\\\\\\\\\\\\\",\\\\\\\\n  Attestation: \\\\\\\\\\\\\\\"\\\\\\\\u{2705}\\\\\\\\\\\\\\\",\\\\\\\\n  Sponsorship: \\\\\\\\\\\\\\\"\\\\\\\\u{1fa99}\\\\\\\\\\\\\\\",\\\\\\\\n  Github: \\\\\\\\\\\\\\\"bi-github\\\\\\\\\\\\\\\",\\\\\\\\n  Like: \\\\\\\\\\\\\\\"bi-heart-fill\\\\\\\\\\\\\\\",\\\\\\\\n  Reply: \\\\\\\\\\\\\\\"bi-reply-fill\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\n// Trigger saving this widget.\\\\\\\\n\\\\\\\\nconst borders = {\\\\\\\\n  Idea: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Comment: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Solution: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Attestation: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Sponsorship: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Github: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst containsLike = props.isPreview\\\\\\\\n  ? false\\\\\\\\n  : post.likes.find((l) => l.author_id == context.accountId);\\\\\\\\nconst likeBtnClass = containsLike ? fillIcons.Like : emptyIcons.Like;\\\\\\\\n// This must be outside onLike, because Near.view returns null at first, and when the view call finished, it returns true/false.\\\\\\\\n// If checking this inside onLike, it will give `null` and we cannot tell the result is true or false.\\\\\\\\nlet grantNotify = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"is_write_permission_granted\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    predecessor_id: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n    key: context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\",\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst userStorageDeposit = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"storage_balance_of\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    account_id: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (grantNotify === null || userStorageDeposit === null) {\\\\\\\\n  return;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst onLike = () => {\\\\\\\\n  if (!context.accountId) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  let likeTxn = [\\\\\\\\n    {\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"add_like\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        post_id: postId,\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  if (grantNotify === false) {\\\\\\\\n    likeTxn.unshift({\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"grant_write_permission\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        predecessor_id: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n        keys: [context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\"],\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n      deposit: getDepositAmountForWriteAccess(userStorageDeposit),\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  setIsLikeClicked(true);\\\\\\\\n  Near.call(likeTxn);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst btnCreatorWidget = (postType, icon, name, desc) => {\\\\\\\\n  return (\\\\\\\\n    <li class=\\\\\\\\\\\\\\\"py-1\\\\\\\\\\\\\\\">\\\\\\\\n      <a\\\\\\\\n        class=\\\\\\\\\\\\\\\"dropdown-item text-decoration-none d-flex align-items-center lh-sm\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ color: \\\\\\\\\\\\\\\"rgb(55,109,137)\\\\\\\\\\\\\\\" }}\\\\\\\\n        role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n        onClick={() =>\\\\\\\\n          State.update({ postType, editorType: \\\\\\\\\\\\\\\"CREATE\\\\\\\\\\\\\\\", showEditor: true })\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <i class={`bi ${icon}`} style={{ fontSize: \\\\\\\\\\\\\\\"1.5rem\\\\\\\\\\\\\\\" }}>\\\\\\\\n          {\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n        </i>\\\\\\\\n\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"ps-2 text-wrap\\\\\\\\\\\\\\\" style={{ width: \\\\\\\\\\\\\\\"18rem\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <div>{name}</div>\\\\\\\\n          <small class=\\\\\\\\\\\\\\\"fw-light text-secondary\\\\\\\\\\\\\\\">{desc}</small>\\\\\\\\n        </div>\\\\\\\\n      </a>\\\\\\\\n    </li>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FooterButtonsContianer = styled.div`\\\\\\\\n  width: 66.66666667%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst buttonsFooter = props.isPreview ? null : (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"buttons-footer\\\\\\\\\\\\\\\">\\\\\\\\n    <FooterButtonsContianer>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"btn-group\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"group\\\\\\\\\\\\\\\" aria-label=\\\\\\\\\\\\\\\"Basic outlined example\\\\\\\\\\\\\\\">\\\\\\\\n        <ButtonWithHover\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn d-flex align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n          onClick={onLike}\\\\\\\\n          disabled={isLikeClicked}\\\\\\\\n        >\\\\\\\\n          <i class={`bi ${likeBtnClass}`}> </i>\\\\\\\\n          {isLikeClicked ? LikeLoadingSpinner : <></>}\\\\\\\\n          {post.likes.length == 0 ? (\\\\\\\\n            \\\\\\\\\\\\\\\"Like\\\\\\\\\\\\\\\"\\\\\\\\n          ) : (\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.layout.LikeButton.Faces\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                likesByUsers: Object.fromEntries(\\\\\\\\n                  post.likes.map(({ author_id }) => [author_id, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"])\\\\\\\\n                ),\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          )}\\\\\\\\n        </ButtonWithHover>\\\\\\\\n\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"btn-group\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"group\\\\\\\\\\\\\\\">\\\\\\\\n          <ButtonWithHover\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            class=\\\\\\\\\\\\\\\"btn\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n            aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            \\\\\\\\u{21aa} Reply\\\\\\\\n          </ButtonWithHover>\\\\\\\\n          <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\">\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Idea,\\\\\\\\n              \\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Get feedback from the community about a problem, opportunity, or need.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Solution,\\\\\\\\n              \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Provide a specific proposal or implementation to an idea, optionally requesting funding.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Attestation\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Attestation,\\\\\\\\n              \\\\\\\\\\\\\\\"Attestation\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Formally review or validate a solution as a recognized expert.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Sponsorship,\\\\\\\\n              \\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Offer to fund projects, events, or proposals that match your needs.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            <li>\\\\\\\\n              <hr class=\\\\\\\\\\\\\\\"dropdown-divider\\\\\\\\\\\\\\\" />\\\\\\\\n            </li>\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Comment,\\\\\\\\n              \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Ask a question, provide information, or share a resource that is relevant to the thread.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n          </ul>\\\\\\\\n        </div>\\\\\\\\n        {childPostIds.length > 0 && (\\\\\\\\n          <ButtonWithHover\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            class=\\\\\\\\\\\\\\\"btn\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"collapse\\\\\\\\\\\\\\\"\\\\\\\\n            href={`#collapseChildPosts${postId}`}\\\\\\\\n            aria-expanded={defaultExpanded}\\\\\\\\n            aria-controls={`collapseChildPosts${postId}`}\\\\\\\\n            onClick={() =>\\\\\\\\n              State.update({ expandReplies: !state.expandReplies })\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <i\\\\\\\\n              class={`bi bi-chevron-${state.expandReplies ? \\\\\\\\\\\\\\\"up\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\"}`}\\\\\\\\n            ></i>{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            {`${state.expandReplies ? \\\\\\\\\\\\\\\"Collapse\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Expand\\\\\\\\\\\\\\\"} Replies (${\\\\\\\\n              childPostIds.length\\\\\\\\n            })`}\\\\\\\\n          </ButtonWithHover>\\\\\\\\n        )}\\\\\\\\n\\\\\\\\n        {isUnderPost || !parentId ? (\\\\\\\\n          <div key=\\\\\\\\\\\\\\\"link-to-parent\\\\\\\\\\\\\\\"></div>\\\\\\\\n        ) : (\\\\\\\\n          <Link\\\\\\\\n            to={href({\\\\\\\\n              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\", id: parentId },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <ButtonWithHover\\\\\\\\n              type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n              style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"btn\\\\\\\\\\\\\\\"\\\\\\\\n              key=\\\\\\\\\\\\\\\"link-to-parent\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <i class=\\\\\\\\\\\\\\\"bi bi-arrow-90deg-up\\\\\\\\\\\\\\\"></i>Go to parent\\\\\\\\n            </ButtonWithHover>\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </FooterButtonsContianer>\\\\\\\\n    )\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst tokenMapping = {\\\\\\\\n  NEAR: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\",\\\\\\\\n  USDT: {\\\\\\\\n    NEP141: {\\\\\\\\n      address: \\\\\\\\\\\\\\\"usdt.tether-token.near\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  USDC: {\\\\\\\\n    NEP141: {\\\\\\\\n      address:\\\\\\\\n        \\\\\\\\\\\\\\\"17208628f84f5d6ad33f0da3bbbeb27ffcb398eac501a31bd6ad2011e36133a1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  // Add more tokens here as needed\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst reverseTokenMapping = Object.keys(tokenMapping).reduce(\\\\\\\\n  (reverseMap, key) => {\\\\\\\\n    const value = tokenMapping[key];\\\\\\\\n    if (typeof value === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n      reverseMap[JSON.stringify(value)] = key;\\\\\\\\n    }\\\\\\\\n    return reverseMap;\\\\\\\\n  },\\\\\\\\n  {}\\\\\\\\n);\\\\\\\\n\\\\\\\\nfunction tokenResolver(token) {\\\\\\\\n  if (typeof token === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    return token;\\\\\\\\n  } else if (typeof token === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n    const tokenString = reverseTokenMapping[JSON.stringify(token)];\\\\\\\\n    return tokenString || null;\\\\\\\\n  } else {\\\\\\\\n    return null; // Invalid input\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst isDraft =\\\\\\\\n  (draftState?.parent_post_id === postId &&\\\\\\\\n    draftState?.postType === state.postType) ||\\\\\\\\n  (draftState?.edit_post_id === postId &&\\\\\\\\n    draftState?.postType === state.postType);\\\\\\\\n\\\\\\\\nconst setExpandReplies = (value) => {\\\\\\\\n  State.update({ expandReplies: value });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst setEditorState = (value) => {\\\\\\\\n  if (draftState && !value) {\\\\\\\\n    // clear the draft state since user initiated cancel\\\\\\\\n    onDraftStateChange(null);\\\\\\\\n  }\\\\\\\\n  State.update({ showEditor: value });\\\\\\\\n};\\\\\\\\n\\\\\\\\nlet amount = null;\\\\\\\\nlet token = null;\\\\\\\\nlet supervisor = null;\\\\\\\\n\\\\\\\\nif (state.postType === \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\") {\\\\\\\\n  const amountMatch = post.snapshot.description.match(\\\\\\\\n    /Requested amount: (\\\\\\\\\\\\\\\\d+(\\\\\\\\\\\\\\\\.\\\\\\\\\\\\\\\\d+)?) (\\\\\\\\\\\\\\\\w+)/\\\\\\\\n  );\\\\\\\\n  amount = amountMatch ? parseFloat(amountMatch[1]) : null;\\\\\\\\n  token = amountMatch ? amountMatch[3] : null;\\\\\\\\n\\\\\\\\n  const sponsorMatch = post.snapshot.description.match(\\\\\\\\n    /Requested sponsor: @([^\\\\\\\\\\\\\\\\s]+)/\\\\\\\\n  );\\\\\\\\n  supervisor = sponsorMatch ? sponsorMatch[1] : null;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst seekingFunding = amount !== null || token !== null || supervisor !== null;\\\\\\\\n\\\\\\\\nfunction Editor() {\\\\\\\\n  return (\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"row mt-2\\\\\\\\\\\\\\\" id={`accordion${postId}`} key=\\\\\\\\\\\\\\\"editors-footer\\\\\\\\\\\\\\\">\\\\\\\\n      <div\\\\\\\\n        key={`${state.postType}${state.editorType}${postId}`}\\\\\\\\n        className={\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\"}\\\\\\\\n      >\\\\\\\\n        {state.editorType === \\\\\\\\\\\\\\\"CREATE\\\\\\\\\\\\\\\" ? (\\\\\\\\n          <>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.PostEditor\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                postType: state.postType,\\\\\\\\n                onDraftStateChange,\\\\\\\\n                draftState:\\\\\\\\n                  draftState?.parent_post_id == postId ? draftState : undefined,\\\\\\\\n                parentId: postId,\\\\\\\\n                mode: \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\",\\\\\\\\n                transactionHashes: props.transactionHashes,\\\\\\\\n                setExpandReplies,\\\\\\\\n                setEditorState: setEditorState,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        ) : (\\\\\\\\n          <>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.PostEditor\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                postType: state.postType,\\\\\\\\n                postId,\\\\\\\\n                mode: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                author_id: post.author_id,\\\\\\\\n                labels: post.snapshot.labels,\\\\\\\\n                name: post.snapshot.name,\\\\\\\\n                description: post.snapshot.description,\\\\\\\\n                amount: post.snapshot.amount || amount,\\\\\\\\n                token: tokenResolver(post.snapshot.sponsorship_token || token),\\\\\\\\n                supervisor:\\\\\\\\n                  post.snapshot.post.snapshot.supervisor || supervisor,\\\\\\\\n                seekingFunding: seekingFunding,\\\\\\\\n                githubLink: post.snapshot.github_link,\\\\\\\\n                onDraftStateChange,\\\\\\\\n                draftState:\\\\\\\\n                  draftState?.edit_post_id == postId ? draftState : undefined,\\\\\\\\n                setEditorState: setEditorState,\\\\\\\\n                transactionHashes: props.transactionHashes,\\\\\\\\n                setExpandReplies,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst renamedPostType =\\\\\\\\n  snapshot.post_type == \\\\\\\\\\\\\\\"Submission\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\" : snapshot.post_type;\\\\\\\\n\\\\\\\\nconst tags = post.snapshot.labels ? (\\\\\\\\n  <div\\\\\\\\n    class=\\\\\\\\\\\\\\\"card-title d-flex flex-wrap align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ margin: \\\\\\\\\\\\\\\"20px 0\\\\\\\\\\\\\\\" }}\\\\\\\\n    key=\\\\\\\\\\\\\\\"post-labels\\\\\\\\\\\\\\\"\\\\\\\\n  >\\\\\\\\n    {post.snapshot.labels.map((tag, idx) => (\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center my-3 me-3\\\\\\\\\\\\\\\">\\\\\\\\n        <Link\\\\\\\\n          to={href({\\\\\\\\n            widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n            params: { page: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\", tag: tag },\\\\\\\\n          })}\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              if (typeof props.updateTagInParent === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\") {\\\\\\\\n                props.updateTagInParent(tag);\\\\\\\\n              }\\\\\\\\n            }}\\\\\\\\n            className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ cursor: \\\\\\\\\\\\\\\"pointer\\\\\\\\\\\\\\\", textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Tag\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                tag,\\\\\\\\n                black: true,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </Link>\\\\\\\\n        {idx !== post.snapshot.labels.length - 1 && (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"ms-3\\\\\\\\\\\\\\\">\\\\\\\\u{2022}</span>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    ))}\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"post-labels\\\\\\\\\\\\\\\"></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Title = styled.h5`\\\\\\\\n  margin: 1rem 0;\\\\\\\\n\\\\\\\\n  color: #151515;\\\\\\\\n  font-size: 1.15rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 1.625rem; /* 55.556% */\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst postTitle =\\\\\\\\n  snapshot.post_type == \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\" ? (\\\\\\\\n    <div key=\\\\\\\\\\\\\\\"post-title\\\\\\\\\\\\\\\"></div>\\\\\\\\n  ) : (\\\\\\\\n    <Title key=\\\\\\\\\\\\\\\"post-title\\\\\\\\\\\\\\\">\\\\\\\\n      {emptyIcons[snapshot.post_type]} {renamedPostType}: {snapshot.name}\\\\\\\\n    </Title>\\\\\\\\n  );\\\\\\\\n\\\\\\\\nconst postExtra =\\\\\\\\n  snapshot.post_type == \\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\" ? (\\\\\\\\n    <div key=\\\\\\\\\\\\\\\"post-extra\\\\\\\\\\\\\\\">\\\\\\\\n      <h6 class=\\\\\\\\\\\\\\\"card-subtitle mb-2 text-muted\\\\\\\\\\\\\\\">\\\\\\\\n        Maximum amount: {snapshot.amount}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n        {tokenResolver(snapshot.sponsorship_token)}\\\\\\\\n      </h6>\\\\\\\\n      <h6 class=\\\\\\\\\\\\\\\"card-subtitle mb-2 text-muted\\\\\\\\\\\\\\\">\\\\\\\\n        Supervisor:{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.ProfileLine\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{ accountId: snapshot.supervisor }}\\\\\\\\n        />\\\\\\\\n      </h6>\\\\\\\\n    </div>\\\\\\\\n  ) : (\\\\\\\\n    <div></div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\nconst childPostHasDraft = childPostIds.find(\\\\\\\\n  (childId) =>\\\\\\\\n    childId == draftState?.edit_post_id || childId == draftState?.parent_post_id\\\\\\\\n);\\\\\\\\nif (\\\\\\\\n  (childPostHasDraft || state.childrenOfChildPostsHasDraft) &&\\\\\\\\n  props.expandParent\\\\\\\\n) {\\\\\\\\n  props.expandParent();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst postsList =\\\\\\\\n  props.isPreview || childPostIds.length == 0 ? (\\\\\\\\n    <div key=\\\\\\\\\\\\\\\"posts-list\\\\\\\\\\\\\\\"></div>\\\\\\\\n  ) : (\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"posts-list\\\\\\\\\\\\\\\">\\\\\\\\n      <div\\\\\\\\n        class={`collapse mt-3 ${\\\\\\\\n          defaultExpanded ||\\\\\\\\n          childPostHasDraft ||\\\\\\\\n          state.childrenOfChildPostsHasDraft ||\\\\\\\\n          state.expandReplies\\\\\\\\n            ? \\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\"\\\\\\\\n            : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n        }`}\\\\\\\\n        id={`collapseChildPosts${postId}`}\\\\\\\\n      >\\\\\\\\n        {childPostIds.map((childId) => (\\\\\\\\n          <div key={childId} style={{ marginBottom: \\\\\\\\\\\\\\\"0.5rem\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Post\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                id: childId,\\\\\\\\n                isUnderPost: true,\\\\\\\\n                onDraftStateChange,\\\\\\\\n                draftState,\\\\\\\\n                expandParent: () =>\\\\\\\\n                  State.update({ childrenOfChildPostsHasDraft: true }),\\\\\\\\n                referral: `subpost${childId}of${postId}`,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        ))}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\nconst LimitedMarkdown = styled.div`\\\\\\\\n  max-height: 20em;\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// Determine if located in the post page.\\\\\\\\nconst isInList = props.isInList;\\\\\\\\nconst contentArray = snapshot.description.split(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\");\\\\\\\\nconst needClamp = isInList && contentArray.length > 5;\\\\\\\\n\\\\\\\\ninitState({\\\\\\\\n  clamp: needClamp,\\\\\\\\n  expandReplies: defaultExpanded,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst clampedContent = needClamp\\\\\\\\n  ? contentArray.slice(0, 3).join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\")\\\\\\\\n  : snapshot.description;\\\\\\\\n\\\\\\\\nconst SeeMore = styled.a`\\\\\\\\n  cursor: pointer;\\\\\\\\n  color: #00b774 !important;\\\\\\\\n  font-weight: bold;\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// Should make sure the posts under the currently top viewed post are limited in size.\\\\\\\\nconst descriptionArea = isUnderPost ? (\\\\\\\\n  <LimitedMarkdown className=\\\\\\\\\\\\\\\"overflow-auto\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"description-area\\\\\\\\\\\\\\\">\\\\\\\\n    {/* {widget(\\\\\\\\\\\\\\\"components.molecule.markdown-viewer\\\\\\\\\\\\\\\", {\\\\\\\\n      text: snapshot.description,\\\\\\\\n    })} */}\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        text: snapshot.description,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </LimitedMarkdown>\\\\\\\\n) : (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100 overflow-auto\\\\\\\\\\\\\\\">\\\\\\\\n    <div class={state.clamp ? \\\\\\\\\\\\\\\"clamp\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}>\\\\\\\\n      {/* {widget(\\\\\\\\\\\\\\\"components.molecule.markdown-viewer\\\\\\\\\\\\\\\", {\\\\\\\\n        text: state.clamp ? clampedContent : snapshot.description,\\\\\\\\n      })} */}\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          text: state.clamp ? clampedContent : snapshot.description,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n    {state.clamp ? (\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"d-flex justify-content-start\\\\\\\\\\\\\\\">\\\\\\\\n        <SeeMore onClick={() => State.update({ clamp: false })}>\\\\\\\\n          See more\\\\\\\\n        </SeeMore>\\\\\\\\n      </div>\\\\\\\\n    ) : (\\\\\\\\n      <></>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst timestampElement = (_snapshot) => {\\\\\\\\n  return (\\\\\\\\n    <Link\\\\\\\\n      class=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n          id: postId,\\\\\\\\n          timestamp: _snapshot.timestamp,\\\\\\\\n          compareTimestamp: null,\\\\\\\\n          referral,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n    >\\\\\\\\n      {readableDate(_snapshot.timestamp / 1000000).substring(4)}\\\\\\\\n\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"mob.near/widget/ProfileImage\\\\\\\\\\\\\\\"\\\\\\\\n        props={{\\\\\\\\n          accountId: _snapshot.editor_id,\\\\\\\\n          style: {\\\\\\\\n            width: \\\\\\\\\\\\\\\"1.25em\\\\\\\\\\\\\\\",\\\\\\\\n            height: \\\\\\\\\\\\\\\"1.25em\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          imageStyle: {\\\\\\\\n            transform: \\\\\\\\\\\\\\\"translateY(-12.5%)\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      {_snapshot.editor_id.substring(0, 8)}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction combineText(_snapshot) {\\\\\\\\n  return (\\\\\\\\n    \\\\\\\\\\\\\\\"## \\\\\\\\\\\\\\\" +\\\\\\\\n    _snapshot.post_type +\\\\\\\\n    \\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\" +\\\\\\\\n    _snapshot.name +\\\\\\\\n    \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\" +\\\\\\\\n    _snapshot.description\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CardContainer = styled.div`\\\\\\\\n  padding: 1.5rem 3rem !important;\\\\\\\\n  border-radius: 16px !important;\\\\\\\\n  border: 1px solid rgba(129, 129, 129, 0.3) !important;\\\\\\\\n  background: #fffefe !important;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    padding: 1rem !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <CardContainer className={`card ${borders[snapshot.post_type]} attractable`}>\\\\\\\\n    {header}\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\" style={{ padding: 0 }}>\\\\\\\\n      {searchKeywords}\\\\\\\\n      {compareSnapshot ? (\\\\\\\\n        <div\\\\\\\\n          class=\\\\\\\\\\\\\\\"border rounded\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ marginTop: \\\\\\\\\\\\\\\"16px\\\\\\\\\\\\\\\", marginBottom: \\\\\\\\\\\\\\\"16px\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"d-flex justify-content-end\\\\\\\\\\\\\\\" style={{ fontSize: \\\\\\\\\\\\\\\"12px\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <div class=\\\\\\\\\\\\\\\"d-flex w-50 justify-content-end mt-1 me-2\\\\\\\\\\\\\\\">\\\\\\\\n              {timestampElement(snapshot)}\\\\\\\\n              {snapshot !== compareSnapshot && (\\\\\\\\n                <>\\\\\\\\n                  <div class=\\\\\\\\\\\\\\\"mx-1 align-self-center\\\\\\\\\\\\\\\">\\\\\\\\n                    <i class=\\\\\\\\\\\\\\\"bi bi-file-earmark-diff\\\\\\\\\\\\\\\" />\\\\\\\\n                  </div>\\\\\\\\n                  {timestampElement(compareSnapshot)}\\\\\\\\n                </>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"w-100 overflow-auto\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"markeljan.near/widget/MarkdownDiff\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                post: post,\\\\\\\\n                currentCode: combineText(\\\\\\\\n                  swapTimestamps ? compareSnapshot : snapshot\\\\\\\\n                ),\\\\\\\\n                prevCode: combineText(\\\\\\\\n                  swapTimestamps ? snapshot : compareSnapshot\\\\\\\\n                ),\\\\\\\\n                showLineNumber: true,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      ) : (\\\\\\\\n        <>\\\\\\\\n          {postTitle}\\\\\\\\n          {postExtra}\\\\\\\\n          {descriptionArea}\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n      {tags}\\\\\\\\n      {buttonsFooter}\\\\\\\\n      {!props.isPreview && (isDraft || state.showEditor) && <Editor />}\\\\\\\\n      {postsList}\\\\\\\\n    </div>\\\\\\\\n  </CardContainer>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.post.PostEditor\": {\"\": \"const { normalize } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.stringUtils\\\\\\\\\\\\\\\");\\\\\\\\nconst { getDepositAmountForWriteAccess } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.common\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\ngetDepositAmountForWriteAccess || (getDepositAmountForWriteAccess = () => {});\\\\\\\\nnormalize || (normalize = () => {});\\\\\\\\n\\\\\\\\nconst CenteredMessage = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n  height: 384px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"submit-post-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nfunction initLabels() {\\\\\\\\n  const labels = [];\\\\\\\\n  if (typeof props.labels === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    labels.push(...props.labels.split(\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"));\\\\\\\\n  }\\\\\\\\n  if (Array.isArray(props.labels)) {\\\\\\\\n    labels.push(...props.labels);\\\\\\\\n  }\\\\\\\\n  if (props.referral) {\\\\\\\\n    labels.push(`referral:${props.referral}`);\\\\\\\\n  }\\\\\\\\n  return labels;\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (!context.accountId) {\\\\\\\\n  return (\\\\\\\\n    <CenteredMessage height={\\\\\\\\\\\\\\\"384px\\\\\\\\\\\\\\\"}>\\\\\\\\n      <h2>Please sign in to create a post.</h2>\\\\\\\\n    </CenteredMessage>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst userStorageDeposit = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"storage_balance_of\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    account_id: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst cleanDescription = (description) => {\\\\\\\\n  return description\\\\\\\\n    ? description.replace(\\\\\\\\n        /###### Requested amount: .+?\\\\\\\\\\\\\\\\n###### Requested sponsor: @[^\\\\\\\\\\\\\\\\s]+\\\\\\\\\\\\\\\\n/g,\\\\\\\\n        \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n      )\\\\\\\\n    : description;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst postTypeOptions = {\\\\\\\\n  Idea: {\\\\\\\\n    name: \\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\",\\\\\\\\n    icon: \\\\\\\\\\\\\\\"bi-lightbulb\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Get feedback from the community about a problem, opportunity, or need.\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  Solution: {\\\\\\\\n    name: \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\",\\\\\\\\n    icon: \\\\\\\\\\\\\\\"bi-rocket\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Provide a specific proposal or implementation to an idea, optionally requesting funding. If your solution relates to an existing idea, please reply to the original post with a solution.\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nlet fields = {\\\\\\\\n  Comment: [\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n  Idea: [\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n  Solution: [\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"fund_raising\\\\\\\\\\\\\\\"],\\\\\\\\n  Attestation: [\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n  Sponsorship: [\\\\\\\\n    \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"amount\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"sponsorship_token\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"supervisor\\\\\\\\\\\\\\\",\\\\\\\\n  ],\\\\\\\\n  Github: [\\\\\\\\\\\\\\\"githubLink\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isCreatePostPage = props.isCreatePostPage ?? false;\\\\\\\\nconst postType = props.postType ?? \\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\";\\\\\\\\nconst parentId = props.parentId ?? null;\\\\\\\\nconst mode = props.mode ?? \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\";\\\\\\\\nconst labelStrings = initLabels();\\\\\\\\nconst [postIdList, setPostIdList] = useState(null); // to show updated post after approve txn\\\\\\\\nconst [showPostPage, setShowPostPage] = useState(false); // show newly created post\\\\\\\\nconst [postId, setPostId] = useState(props.postId ?? null);\\\\\\\\nconst [postData, setPostData] = useState(null); // for capturing edit post change\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [isSubmittingTransaction, setIsSubmittingTransaction] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (mode == \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\") {\\\\\\\\n    const data = Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_post\\\\\\\\\\\\\\\", {\\\\\\\\n      post_id: postId,\\\\\\\\n    });\\\\\\\\n    if (!postData) {\\\\\\\\n      setPostData(data);\\\\\\\\n    }\\\\\\\\n    if (postData && data && JSON.stringify(postData) !== JSON.stringify(data)) {\\\\\\\\n      props.setEditorState(false);\\\\\\\\n      props.setExpandReplies(true);\\\\\\\\n      setPostData(data);\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    const postIds = Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_all_post_ids\\\\\\\\\\\\\\\");\\\\\\\\n    if (!postIdList) {\\\\\\\\n      setPostIdList(postIds);\\\\\\\\n    }\\\\\\\\n    if (\\\\\\\\n      isTxnCreated &&\\\\\\\\n      postIdList?.length > 0 &&\\\\\\\\n      postIds.length > 0 &&\\\\\\\\n      postIdList.length !== postIds.length\\\\\\\\n    ) {\\\\\\\\n      props.onDraftStateChange(null);\\\\\\\\n      if (isCreatePostPage) {\\\\\\\\n        setShowPostPage(true);\\\\\\\\n        setPostId(postIds[postIds?.length - 1]);\\\\\\\\n      } else {\\\\\\\\n        // close editor and expand replies\\\\\\\\n        props.setEditorState(false);\\\\\\\\n        props.setExpandReplies(true);\\\\\\\\n      }\\\\\\\\n      setPostIdList(postIds);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst labels = labelStrings.map((s) => {\\\\\\\\n  return { name: s };\\\\\\\\n});\\\\\\\\n\\\\\\\\ninitState({\\\\\\\\n  seekingFunding: props.seekingFunding ?? false,\\\\\\\\n  author_id: context.accountId,\\\\\\\\n  // Should be a list of objects with field \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\".\\\\\\\\n  labels,\\\\\\\\n  // Should be a list of labels as strings.\\\\\\\\n  // Both of the label structures should be modified together.\\\\\\\\n  labelStrings: [],\\\\\\\\n  postType,\\\\\\\\n  name: props.name ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  description:\\\\\\\\n    (props.postType === \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\"\\\\\\\\n      ? cleanDescription(props.description)\\\\\\\\n      : props.description) ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  amount: props.amount ?? \\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\",\\\\\\\\n  token: props.token ?? \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\",\\\\\\\\n  supervisor: props.supervisor ?? \\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\",\\\\\\\\n  githubLink: props.githubLink ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  warning: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  draftStateApplied: false,\\\\\\\\n  mentionInput: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", // text next to @ tag\\\\\\\\n  mentionsArray: [], // all the mentions in the description\\\\\\\\n  displayFields: fields[postType],\\\\\\\\n});\\\\\\\\n\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"core/lib/autocomplete\\\\\\\\\\\\\\\" */\\\\\\\\nconst autocompleteEnabled = true;\\\\\\\\n\\\\\\\\nconst AutoComplete = styled.div`\\\\\\\\n  z-index: 5;\\\\\\\\n\\\\\\\\n  > div > div {\\\\\\\\n    padding: calc(var(--padding) / 2);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (props.transactionHashes) {\\\\\\\\n  const transaction = useCache(\\\\\\\\n    () =>\\\\\\\\n      asyncFetch(\\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\", {\\\\\\\\n        method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n        headers: {\\\\\\\\n          \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n        body: JSON.stringify({\\\\\\\\n          jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n          id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n          method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n          params: [props.transactionHashes, context.accountId],\\\\\\\\n        }),\\\\\\\\n      }).then((res) => res),\\\\\\\\n    props.transactionHashes + context.accountId,\\\\\\\\n    { subscribe: false }\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  if (transaction !== null) {\\\\\\\\n    const transaction_method_name =\\\\\\\\n      transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n        .method_name;\\\\\\\\n\\\\\\\\n    const is_edit_or_add_post_transaction =\\\\\\\\n      transaction_method_name == \\\\\\\\\\\\\\\"add_post\\\\\\\\\\\\\\\" ||\\\\\\\\n      transaction_method_name == \\\\\\\\\\\\\\\"edit_post\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n    if (is_edit_or_add_post_transaction) {\\\\\\\\n      props.onDraftStateChange(null);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // show the latest created post to user\\\\\\\\n    if (transaction_method_name == \\\\\\\\\\\\\\\"add_post\\\\\\\\\\\\\\\" && isCreatePostPage) {\\\\\\\\n      setShowPostPage(true);\\\\\\\\n      setPostId(postIdList?.[postIdList?.length - 1]);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction textareaInputHandler(value) {\\\\\\\\n  const words = value.split(/\\\\\\\\\\\\\\\\s+/);\\\\\\\\n  const allMentiones = words\\\\\\\\n    .filter((word) => word.startsWith(\\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\"))\\\\\\\\n    .map((mention) => mention.slice(1));\\\\\\\\n  const newMentiones = allMentiones.filter(\\\\\\\\n    (item) => !state.mentionsArray.includes(item)\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  State.update((lastKnownState) => ({\\\\\\\\n    ...lastKnownState,\\\\\\\\n    text: value,\\\\\\\\n    showAccountAutocomplete: newMentiones?.length > 0,\\\\\\\\n    mentionsArray: allMentiones,\\\\\\\\n    mentionInput: newMentiones?.[0] ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction autoCompleteAccountId(id) {\\\\\\\\n  // to make sure we update the @ at correct index\\\\\\\\n  let currentIndex = 0;\\\\\\\\n  const updatedDescription = state.description.replace(\\\\\\\\n    /(?:^|\\\\\\\\\\\\\\\\s)(@[^\\\\\\\\\\\\\\\\s]*)/g,\\\\\\\\n    (match) => {\\\\\\\\n      if (currentIndex === state.mentionsArray.indexOf(state.mentionInput)) {\\\\\\\\n        currentIndex++;\\\\\\\\n        return ` @${id}`;\\\\\\\\n      } else {\\\\\\\\n        currentIndex++;\\\\\\\\n        return match;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n  State.update((lastKnownState) => ({\\\\\\\\n    ...lastKnownState,\\\\\\\\n    handler: \\\\\\\\\\\\\\\"autocompleteSelected\\\\\\\\\\\\\\\",\\\\\\\\n    description: updatedDescription,\\\\\\\\n    showAccountAutocomplete: false,\\\\\\\\n  }));\\\\\\\\n}\\\\\\\\n\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"core/lib/autocomplete\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nif (!state.draftStateApplied && props.draftState) {\\\\\\\\n  State.update({ ...props.draftState, draftStateApplied: true });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst typeSwitch = (optionName) => {\\\\\\\\n  State.update({\\\\\\\\n    postType: optionName,\\\\\\\\n    displayFields: fields[optionName],\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\n// This must be outside onClick, because Near.view returns null at first, and when the view call finished, it returns true/false.\\\\\\\\n// If checking this inside onClick, it will give `null` and we cannot tell the result is true or false.\\\\\\\\nlet grantNotify = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"is_write_permission_granted\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    predecessor_id: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n    key: context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\",\\\\\\\\n  }\\\\\\\\n);\\\\\\\\nif (grantNotify === null || userStorageDeposit === null) {\\\\\\\\n  return;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst tokenMapping = {\\\\\\\\n  NEAR: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\",\\\\\\\\n  USDT: {\\\\\\\\n    NEP141: {\\\\\\\\n      address: \\\\\\\\\\\\\\\"usdt.tether-token.near\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  USDC: {\\\\\\\\n    NEP141: {\\\\\\\\n      address:\\\\\\\\n        \\\\\\\\\\\\\\\"17208628f84f5d6ad33f0da3bbbeb27ffcb398eac501a31bd6ad2011e36133a1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst onSubmit = () => {\\\\\\\\n  setIsSubmittingTransaction(true);\\\\\\\\n  let labels = state.labelStrings;\\\\\\\\n  var body = {\\\\\\\\n    Comment: { description: state.description, comment_version: \\\\\\\\\\\\\\\"V2\\\\\\\\\\\\\\\" },\\\\\\\\n    Idea: {\\\\\\\\n      name: state.name,\\\\\\\\n      description: state.description,\\\\\\\\n      idea_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    Solution: {\\\\\\\\n      name: state.name,\\\\\\\\n      description: generateDescription(\\\\\\\\n        state.description,\\\\\\\\n        state.amount,\\\\\\\\n        state.token,\\\\\\\\n        state.supervisor,\\\\\\\\n        state.seekingFunding\\\\\\\\n      ),\\\\\\\\n      solution_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    Attestation: {\\\\\\\\n      name: state.name,\\\\\\\\n      description: state.description,\\\\\\\\n      attestation_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    Sponsorship: {\\\\\\\\n      name: state.name,\\\\\\\\n      description: state.description,\\\\\\\\n      amount: state.amount,\\\\\\\\n      sponsorship_token: tokenMapping[state.token],\\\\\\\\n      supervisor: state.supervisor,\\\\\\\\n      sponsorship_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    Github: {\\\\\\\\n      name: state.name,\\\\\\\\n      description: state.description,\\\\\\\\n      github_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n      github_link: state.githubLink,\\\\\\\\n    },\\\\\\\\n  }[state.postType];\\\\\\\\n  body[\\\\\\\\\\\\\\\"post_type\\\\\\\\\\\\\\\"] = state.postType;\\\\\\\\n  if (!context.accountId) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  let txn = [];\\\\\\\\n  if (mode == \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\") {\\\\\\\\n    props.onDraftStateChange(\\\\\\\\n      Object.assign({}, state, { parent_post_id: parentId })\\\\\\\\n    );\\\\\\\\n    txn.push({\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"add_post\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        parent_id: parentId,\\\\\\\\n        labels,\\\\\\\\n        body,\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    });\\\\\\\\n  } else if (mode == \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\") {\\\\\\\\n    props.onDraftStateChange(\\\\\\\\n      Object.assign({}, state, { edit_post_id: postId })\\\\\\\\n    );\\\\\\\\n    txn.push({\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_post\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: postId,\\\\\\\\n        labels,\\\\\\\\n        body,\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n  if (mode == \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\" || mode == \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\") {\\\\\\\\n    if (grantNotify === false) {\\\\\\\\n      txn.unshift({\\\\\\\\n        contractName: \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n        methodName: \\\\\\\\\\\\\\\"grant_write_permission\\\\\\\\\\\\\\\",\\\\\\\\n        args: {\\\\\\\\n          predecessor_id: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n          keys: [context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\"],\\\\\\\\n        },\\\\\\\\n        gas: Big(10).pow(14),\\\\\\\\n        deposit: getDepositAmountForWriteAccess(userStorageDeposit),\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    setCreateTxn(true);\\\\\\\\n    Near.call(txn);\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst checkLabel = (label) => {\\\\\\\\n  Near.asyncView(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"is_allowed_to_use_labels\\\\\\\\\\\\\\\", {\\\\\\\\n    editor: context.accountId,\\\\\\\\n    labels: [label],\\\\\\\\n  }).then((allowed) => {\\\\\\\\n    if (allowed) {\\\\\\\\n      State.update({ warning: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" });\\\\\\\\n    } else {\\\\\\\\n      State.update({\\\\\\\\n        warning:\\\\\\\\n          \\\\\\\\\\\\'The label \\\\\\\\\\\\\\\"\\\\\\\\\\\\' +\\\\\\\\n          label +\\\\\\\\n          \\\\\\\\\\\\'\\\\\\\\\\\\\\\" is protected and can only be added by moderators\\\\\\\\\\\\',\\\\\\\\n      });\\\\\\\\n      return;\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst setLabels = (labels) => {\\\\\\\\n  labels = labels.map((o) => {\\\\\\\\n    o.name = normalize(o.name);\\\\\\\\n    return o;\\\\\\\\n  });\\\\\\\\n  if (labels.length < state.labels.length) {\\\\\\\\n    let oldLabels = new Set(state.labels.map((label) => label.name));\\\\\\\\n    for (let label of labels) {\\\\\\\\n      oldLabels.delete(label.name);\\\\\\\\n    }\\\\\\\\n    let removed = oldLabels.values().next().value;\\\\\\\\n    Near.asyncView(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"is_allowed_to_use_labels\\\\\\\\\\\\\\\", {\\\\\\\\n      editor: context.accountId,\\\\\\\\n      labels: [removed],\\\\\\\\n    }).then((allowed) => {\\\\\\\\n      if (allowed) {\\\\\\\\n        let labelStrings = labels.map(({ name }) => name);\\\\\\\\n        State.update({ labels, labelStrings });\\\\\\\\n      } else {\\\\\\\\n        State.update({\\\\\\\\n          warning:\\\\\\\\n            \\\\\\\\\\\\'The label \\\\\\\\\\\\\\\"\\\\\\\\\\\\' +\\\\\\\\n            removed +\\\\\\\\n            \\\\\\\\\\\\'\\\\\\\\\\\\\\\" is protected and can only be updated by moderators\\\\\\\\\\\\',\\\\\\\\n        });\\\\\\\\n        return;\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  } else {\\\\\\\\n    let labelStrings = labels.map((o) => {\\\\\\\\n      return o.name;\\\\\\\\n    });\\\\\\\\n    State.update({ labels, labelStrings });\\\\\\\\n  }\\\\\\\\n};\\\\\\\\nconst existingLabelStrings =\\\\\\\\n  Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_all_allowed_labels\\\\\\\\\\\\\\\", {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }) ?? [];\\\\\\\\nconst existingLabelSet = new Set(existingLabelStrings);\\\\\\\\nconst existingLabels = existingLabelStrings\\\\\\\\n  .filter((it) => it !== \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\") // remove blog label so users cannot publish blogs from feed\\\\\\\\n  .map((s) => {\\\\\\\\n    return { name: s };\\\\\\\\n  });\\\\\\\\n\\\\\\\\nconst labelEditor = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-12  mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    <label htmlFor=\\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\" className=\\\\\\\\\\\\\\\"fs-6 fw-bold mb-1\\\\\\\\\\\\\\\">\\\\\\\\n      Labels\\\\\\\\n    </label>\\\\\\\\n    <Typeahead\\\\\\\\n      multiple\\\\\\\\n      labelKey=\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\"\\\\\\\\n      onInputChange={checkLabel}\\\\\\\\n      onChange={setLabels}\\\\\\\\n      options={existingLabels}\\\\\\\\n      placeholder=\\\\\\\\\\\\\\\"near.social, widget, NEP, standard, protocol, tool\\\\\\\\\\\\\\\"\\\\\\\\n      selected={state.labels}\\\\\\\\n      positionFixed\\\\\\\\n      allowNew={(results, props) => {\\\\\\\\n        return (\\\\\\\\n          !existingLabelSet.has(props.text) &&\\\\\\\\n          props.text.toLowerCase() !== \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\" && // dont allow adding \\\\\\\\\\\\\\\"Blog\\\\\\\\\\\\\\\"\\\\\\\\n          props.selected.filter((selected) => selected.name === props.text)\\\\\\\\n            .length == 0 &&\\\\\\\\n          Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"is_allowed_to_use_labels\\\\\\\\\\\\\\\", {\\\\\\\\n            editor: context.accountId,\\\\\\\\n            labels: [props.text],\\\\\\\\n          })\\\\\\\\n        );\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst githubLinkDiv = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-12  mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    Github Issue URL:\\\\\\\\n    <input\\\\\\\\n      type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n      value={state.githubLink}\\\\\\\\n      onChange={(event) => State.update({ githubLink: event.target.value })}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst nameDiv = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-12  mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    <label htmlFor=\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\" className=\\\\\\\\\\\\\\\"fs-6 fw-bold mb-1\\\\\\\\\\\\\\\">\\\\\\\\n      Title\\\\\\\\n    </label>\\\\\\\\n    <input\\\\\\\\n      name=\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\"\\\\\\\\n      id=\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\"\\\\\\\\n      data-testid=\\\\\\\\\\\\\\\"name-editor\\\\\\\\\\\\\\\"\\\\\\\\n      type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n      value={state.name}\\\\\\\\n      onChange={(event) => State.update({ name: event.target.value })}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst amountDiv = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-6  mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    Amount:\\\\\\\\n    <input\\\\\\\\n      type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n      value={state.amount}\\\\\\\\n      onChange={(event) => State.update({ amount: event.target.value })}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst tokenDiv = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    Currency\\\\\\\\n    <select\\\\\\\\n      onChange={(event) => State.update({ token: event.target.value })}\\\\\\\\n      class=\\\\\\\\\\\\\\\"form-select\\\\\\\\\\\\\\\"\\\\\\\\n      aria-label=\\\\\\\\\\\\\\\"Select currency\\\\\\\\\\\\\\\"\\\\\\\\n      value={state.token}\\\\\\\\n    >\\\\\\\\n      <option value=\\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\">USDT</option>\\\\\\\\n      <option value=\\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\">NEAR</option>\\\\\\\\n      <option value=\\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\">USDC</option>\\\\\\\\n    </select>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst supervisorDiv = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    Supervisor:\\\\\\\\n    <input\\\\\\\\n      type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n      value={state.supervisor}\\\\\\\\n      onChange={(event) => State.update({ supervisor: event.target.value })}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst callDescriptionDiv = () => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"col-lg-12  mb-2\\\\\\\\\\\\\\\">\\\\\\\\n      <label htmlFor=\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\" className=\\\\\\\\\\\\\\\"fs-6 fw-bold mb-1\\\\\\\\\\\\\\\">\\\\\\\\n        Description\\\\\\\\n      </label>\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownEditor\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          data: { handler: state.handler, content: state.description },\\\\\\\\n          onChange: (content) => {\\\\\\\\n            State.update({ description: content, handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\" });\\\\\\\\n            textareaInputHandler(content);\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      {autocompleteEnabled && state.showAccountAutocomplete && (\\\\\\\\n        <AutoComplete>\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.AccountAutocomplete\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              term: state.mentionInput,\\\\\\\\n              onSelect: autoCompleteAccountId,\\\\\\\\n              onClose: () => State.update({ showAccountAutocomplete: false }),\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </AutoComplete>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst disclaimer = (\\\\\\\\n  <p>\\\\\\\\n    <i>\\\\\\\\n      * Note, all projects that were granted sponsorships are required to pass\\\\\\\\n      KYC to receive the funding.\\\\\\\\n    </i>\\\\\\\\n  </p>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst isFundraisingDiv = (\\\\\\\\n  // This is jank with just btns and not radios. But the radios were glitchy af\\\\\\\\n  <>\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"mb-2\\\\\\\\\\\\\\\">\\\\\\\\n      <p class=\\\\\\\\\\\\\\\"fs-6 fw-bold mb-1\\\\\\\\\\\\\\\">\\\\\\\\n        Are you seeking funding for your solution?\\\\\\\\n        <span class=\\\\\\\\\\\\\\\"text-muted fw-normal\\\\\\\\\\\\\\\">(Optional)</span>\\\\\\\\n      </p>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"form-check form-check-inline\\\\\\\\\\\\\\\">\\\\\\\\n        <label class=\\\\\\\\\\\\\\\"form-check-label\\\\\\\\\\\\\\\">\\\\\\\\n          <button\\\\\\\\n            className=\\\\\\\\\\\\\\\"btn btn-light p-0\\\\\\\\\\\\\\\"\\\\\\\\n            style={{\\\\\\\\n              backgroundColor: state.seekingFunding ? \\\\\\\\\\\\\\\"#0C7283\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"inherit\\\\\\\\\\\\\\\",\\\\\\\\n              color: \\\\\\\\\\\\\\\"#f3f3f3\\\\\\\\\\\\\\\",\\\\\\\\n              border: \\\\\\\\\\\\\\\"solid #D9D9D9\\\\\\\\\\\\\\\",\\\\\\\\n              borderRadius: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\",\\\\\\\\n              height: \\\\\\\\\\\\\\\"20px\\\\\\\\\\\\\\\",\\\\\\\\n              width: \\\\\\\\\\\\\\\"20px\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n            onClick={() => State.update({ seekingFunding: true })}\\\\\\\\n          />\\\\\\\\n          Yes\\\\\\\\n        </label>\\\\\\\\n      </div>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"form-check form-check-inline\\\\\\\\\\\\\\\">\\\\\\\\n        <label class=\\\\\\\\\\\\\\\"form-check-label\\\\\\\\\\\\\\\">\\\\\\\\n          <button\\\\\\\\n            className=\\\\\\\\\\\\\\\"btn btn-light p-0\\\\\\\\\\\\\\\"\\\\\\\\n            style={{\\\\\\\\n              backgroundColor: !state.seekingFunding ? \\\\\\\\\\\\\\\"#0C7283\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"inherit\\\\\\\\\\\\\\\",\\\\\\\\n              color: \\\\\\\\\\\\\\\"#f3f3f3\\\\\\\\\\\\\\\",\\\\\\\\n              border: \\\\\\\\\\\\\\\"solid #D9D9D9\\\\\\\\\\\\\\\",\\\\\\\\n              borderRadius: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\",\\\\\\\\n              height: \\\\\\\\\\\\\\\"20px\\\\\\\\\\\\\\\",\\\\\\\\n              width: \\\\\\\\\\\\\\\"20px\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n            onClick={() => State.update({ seekingFunding: false })}\\\\\\\\n          />\\\\\\\\n          No\\\\\\\\n        </label>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst fundraisingDiv = (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"d-flex flex-column mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n      Currency\\\\\\\\n      <select\\\\\\\\n        onChange={(event) => State.update({ token: event.target.value })}\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-select\\\\\\\\\\\\\\\"\\\\\\\\n        aria-label=\\\\\\\\\\\\\\\"Default select example\\\\\\\\\\\\\\\"\\\\\\\\n        value={state.token}\\\\\\\\n      >\\\\\\\\n        <option value=\\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\">USDT</option>\\\\\\\\n        <option value=\\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\">NEAR</option>\\\\\\\\n        <option value=\\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\">USDC</option>\\\\\\\\n      </select>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n      Requested amount\\\\\\\\n      <span class=\\\\\\\\\\\\\\\"text-muted fw-normal\\\\\\\\\\\\\\\">(Numbers Only)</span>\\\\\\\\n      <input\\\\\\\\n        data-testid=\\\\\\\\\\\\\\\"requested-amount-editor\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\"\\\\\\\\n        value={parseInt(state.amount) > 0 ? state.amount : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n        min={0}\\\\\\\\n        onChange={(event) => {\\\\\\\\n          State.update({\\\\\\\\n            amount: Number(\\\\\\\\n              event.target.value.toString().replace(/e/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n            ).toString(),\\\\\\\\n          });\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n      <p class=\\\\\\\\\\\\\\\"mb-1\\\\\\\\\\\\\\\">\\\\\\\\n        Requested sponsor\\\\\\\\n        <span class=\\\\\\\\\\\\\\\"text-muted fw-normal\\\\\\\\\\\\\\\">(Optional)</span>\\\\\\\\n      </p>\\\\\\\\n      <p style={{ fontSize: \\\\\\\\\\\\\\\"13px\\\\\\\\\\\\\\\" }} class=\\\\\\\\\\\\\\\"m-0 text-muted fw-light\\\\\\\\\\\\\\\">\\\\\\\\n        If you are requesting funding from a specific sponsor, please enter\\\\\\\\n        their username.\\\\\\\\n      </p>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"input-group flex-nowrap\\\\\\\\\\\\\\\">\\\\\\\\n        <span class=\\\\\\\\\\\\\\\"input-group-text\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"addon-wrapping\\\\\\\\\\\\\\\">\\\\\\\\n          @\\\\\\\\n        </span>\\\\\\\\n        <input\\\\\\\\n          type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n          class=\\\\\\\\\\\\\\\"form-control\\\\\\\\\\\\\\\"\\\\\\\\n          placeholder=\\\\\\\\\\\\\\\"Enter username\\\\\\\\\\\\\\\"\\\\\\\\n          value={state.supervisor}\\\\\\\\n          onChange={(event) => State.update({ supervisor: event.target.value })}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nfunction generateDescription(text, amount, token, supervisor, seekingFunding) {\\\\\\\\n  const fundingText =\\\\\\\\n    amount > 0 && token ? `###### Requested amount: ${amount} ${token}\\\\\\\\\\\\\\\\n` : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  const supervisorText = supervisor\\\\\\\\n    ? `###### Requested sponsor: @${supervisor}\\\\\\\\\\\\\\\\n`\\\\\\\\n    : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return seekingFunding ? `${fundingText}${supervisorText}${text}` : text;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [tab, setTab] = useState(\\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst renamedPostType =\\\\\\\\n  state.postType == \\\\\\\\\\\\\\\"Submission\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\" : state.postType;\\\\\\\\n// Below there is a weird code with fields.includes(\\\\\\\\\\\\\\\"githubLink\\\\\\\\\\\\\\\") ternary operator.\\\\\\\\n// This is to hack around rendering bug of near.social.\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-grow-1 w-100\\\\\\\\\\\\\\\">\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"mx-2 mx-md-5 mb-5\\\\\\\\\\\\\\\">\\\\\\\\n      {showPostPage ? (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Post\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            id: postId,\\\\\\\\n            expandable: true,\\\\\\\\n            defaultExpanded: false,\\\\\\\\n            isInList: true,\\\\\\\\n            isPreview: false,\\\\\\\\n            onDraftStateChange: props.onDraftStateChange,\\\\\\\\n            referral: postId,\\\\\\\\n            transactionHashes: props.transactionHashes,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      ) : (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card-header\\\\\\\\\\\\\\\">\\\\\\\\n            <div>\\\\\\\\n              <ul class=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\">\\\\\\\\n                <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                  <button\\\\\\\\n                    class={`nav-link ${tab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}`}\\\\\\\\n                    onClick={() => setTab(\\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\")}\\\\\\\\n                  >\\\\\\\\n                    Editor\\\\\\\\n                  </button>\\\\\\\\n                </li>\\\\\\\\n                <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                  <button\\\\\\\\n                    class={`nav-link ${tab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}`}\\\\\\\\n                    onClick={() => setTab(\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\")}\\\\\\\\n                  >\\\\\\\\n                    Preview\\\\\\\\n                  </button>\\\\\\\\n                </li>\\\\\\\\n              </ul>\\\\\\\\n            </div>\\\\\\\\n            {!isCreatePostPage && tab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"my-3\\\\\\\\\\\\\\\">\\\\\\\\n                {mode} {renamedPostType}\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n            {tab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" && <div className=\\\\\\\\\\\\\\\"my-3\\\\\\\\\\\\\\\">Post Preview</div>}\\\\\\\\n          </div>\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n            {tab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" && (\\\\\\\\n              <>\\\\\\\\n                {state.warning && (\\\\\\\\n                  <div\\\\\\\\n                    class=\\\\\\\\\\\\\\\"alert alert-warning alert-dismissible fade show\\\\\\\\\\\\\\\"\\\\\\\\n                    role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    {state.warning}\\\\\\\\n                    <button\\\\\\\\n                      type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n                      class=\\\\\\\\\\\\\\\"btn-close\\\\\\\\\\\\\\\"\\\\\\\\n                      data-bs-dismiss=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\"\\\\\\\\n                      aria-label=\\\\\\\\\\\\\\\"Close\\\\\\\\\\\\\\\"\\\\\\\\n                      onClick={() => State.update({ warning: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" })}\\\\\\\\n                    ></button>\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n                {isCreatePostPage && (\\\\\\\\n                  <div>\\\\\\\\n                    <p class=\\\\\\\\\\\\\\\"card-title fw-bold fs-6\\\\\\\\\\\\\\\">\\\\\\\\n                      What do you want to create?\\\\\\\\n                    </p>\\\\\\\\n                    <div class=\\\\\\\\\\\\\\\"d-flex flex-row gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                      {Object.values(postTypeOptions).map((option) => (\\\\\\\\n                        <button\\\\\\\\n                          className={`btn btn-${\\\\\\\\n                            state.postType === option.name\\\\\\\\n                              ? \\\\\\\\\\\\\\\"primary\\\\\\\\\\\\\\\"\\\\\\\\n                              : \\\\\\\\\\\\\\\"outline-secondary\\\\\\\\\\\\\\\"\\\\\\\\n                          }`}\\\\\\\\n                          data-testid={`btn-${option.name.toLowerCase()}`}\\\\\\\\n                          key={option.name}\\\\\\\\n                          onClick={() => typeSwitch(option.name)}\\\\\\\\n                          style={\\\\\\\\n                            state.postType === option.name\\\\\\\\n                              ? {\\\\\\\\n                                  backgroundColor: \\\\\\\\\\\\\\\"#0C7283\\\\\\\\\\\\\\\",\\\\\\\\n                                  color: \\\\\\\\\\\\\\\"#f3f3f3\\\\\\\\\\\\\\\",\\\\\\\\n                                }\\\\\\\\n                              : null\\\\\\\\n                          }\\\\\\\\n                          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n                        >\\\\\\\\n                          <i className={`bi ${option.icon}`} />\\\\\\\\n                          <span>{option.name}</span>\\\\\\\\n                        </button>\\\\\\\\n                      ))}\\\\\\\\n                    </div>\\\\\\\\n                    <p class=\\\\\\\\\\\\\\\"text-muted w-75 my-1\\\\\\\\\\\\\\\">\\\\\\\\n                      {postTypeOptions[state.postType].description}\\\\\\\\n                    </p>\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n                {/* This statement around the githubLinkDiv creates a weird render bug\\\\\\\\n      where the title renders extra on state change. */}\\\\\\\\n                {state.displayFields.includes(\\\\\\\\\\\\\\\"githubLink\\\\\\\\\\\\\\\") ? (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\">\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"githubLink\\\\\\\\\\\\\\\") &&\\\\\\\\n                      githubLinkDiv}\\\\\\\\n                    {labelEditor}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\") && nameDiv}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\") &&\\\\\\\\n                      callDescriptionDiv()}\\\\\\\\n                  </div>\\\\\\\\n                ) : (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\">\\\\\\\\n                    {labelEditor}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\") && nameDiv}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"amount\\\\\\\\\\\\\\\") && amountDiv}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"sponsorship_token\\\\\\\\\\\\\\\") &&\\\\\\\\n                      tokenDiv}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"supervisor\\\\\\\\\\\\\\\") &&\\\\\\\\n                      supervisorDiv}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\") &&\\\\\\\\n                      callDescriptionDiv()}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"fund_raising\\\\\\\\\\\\\\\") &&\\\\\\\\n                      isFundraisingDiv}\\\\\\\\n                    {state.seekingFunding &&\\\\\\\\n                      state.displayFields.includes(\\\\\\\\\\\\\\\"fund_raising\\\\\\\\\\\\\\\") &&\\\\\\\\n                      fundraisingDiv}\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n\\\\\\\\n                {disclaimer}\\\\\\\\n              </>\\\\\\\\n            )}\\\\\\\\n            {tab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mb-2\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Post\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    isPreview: true,\\\\\\\\n                    id: 0, // irrelevant\\\\\\\\n                    post: {\\\\\\\\n                      author_id: state.author_id,\\\\\\\\n                      likes: [],\\\\\\\\n                      snapshot: {\\\\\\\\n                        editor_id: state.editor_id,\\\\\\\\n                        labels: state.labelStrings,\\\\\\\\n                        post_type: postType,\\\\\\\\n                        name: state.name,\\\\\\\\n                        description:\\\\\\\\n                          state.postType == \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\"\\\\\\\\n                            ? generateDescription(\\\\\\\\n                                state.description,\\\\\\\\n                                state.amount,\\\\\\\\n                                state.token,\\\\\\\\n                                state.supervisor,\\\\\\\\n                                state.seekingFunding\\\\\\\\n                              )\\\\\\\\n                            : state.description,\\\\\\\\n                        amount: state.amount,\\\\\\\\n                        sponsorship_token: state.token,\\\\\\\\n                        supervisor: state.supervisor,\\\\\\\\n                        github_link: state.githubLink,\\\\\\\\n                      },\\\\\\\\n                    },\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n\\\\\\\\n            <>\\\\\\\\n              <button\\\\\\\\n                data-testid=\\\\\\\\\\\\\\\"submit-create-post\\\\\\\\\\\\\\\"\\\\\\\\n                style={{\\\\\\\\n                  width: \\\\\\\\\\\\\\\"7rem\\\\\\\\\\\\\\\",\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"#0C7283\\\\\\\\\\\\\\\",\\\\\\\\n                  color: \\\\\\\\\\\\\\\"#f3f3f3\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                disabled={\\\\\\\\n                  (state.seekingFunding &&\\\\\\\\n                    (!state.amount || state.amount < 1)) ||\\\\\\\\n                  (isCreatePostPage &&\\\\\\\\n                    (state.name === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" || state.description === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"))\\\\\\\\n                }\\\\\\\\n                className=\\\\\\\\\\\\\\\"btn btn-light mb-2 p-3\\\\\\\\\\\\\\\"\\\\\\\\n                onClick={onSubmit}\\\\\\\\n                disabled={isSubmittingTransaction}\\\\\\\\n              >\\\\\\\\n                {isSubmittingTransaction ? LoadingButtonSpinner : <></>}\\\\\\\\n                Submit\\\\\\\\n              </button>\\\\\\\\n              {!isCreatePostPage && (\\\\\\\\n                <button\\\\\\\\n                  style={{\\\\\\\\n                    width: \\\\\\\\\\\\\\\"7rem\\\\\\\\\\\\\\\",\\\\\\\\n                    backgroundColor: \\\\\\\\\\\\\\\"#fff\\\\\\\\\\\\\\\",\\\\\\\\n                    color: \\\\\\\\\\\\\\\"#000\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                  className=\\\\\\\\\\\\\\\"btn btn-light mb-2 p-3\\\\\\\\\\\\\\\"\\\\\\\\n                  onClick={() => props.setEditorState(false)}\\\\\\\\n                >\\\\\\\\n                  Cancel\\\\\\\\n                </button>\\\\\\\\n              )}\\\\\\\\n            </>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7626268084412e+21
    }
  },
  {
    "id": "3039510083",
    "receipt_id": "2VDJ938htZ7QBP6MWVsui5LaYV5VJr9WuwCdzbRTFqwy",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "FcTHv6QWdKorxRBkP6MEX2ANHyQsMNsGZJf4j5RKk8iy",
      "block_height": 114525677,
      "block_timestamp": 1710169365137144000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "GrYZDkZXk1YxKG4ZTM5sJskSFDotBdQxPJzzD3ydYdbY",
    "included_in_block_hash": "jeenugSEGJwQqnz7itQoQWP4H7N3fFYJXp2qWNYutyn",
    "block_timestamp": "1710169362497426890",
    "block": {
      "block_height": 114525675
    },
    "receipt_conversion_tokens_burnt": "255084817945200000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8759889279943625e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7626268084412e+21
    }
  },
  {
    "id": "3049830980",
    "receipt_id": "A7sTMnL9eDVsXBPo7jMaiES1AeJVaatWoFqJVhQ7RMXi",
    "predecessor_account_id": "gagdiez.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "234qSbLkzj8vakjJNdwpCuAMvuiywjYuH2mPhUPC62ta",
      "block_height": 114565833,
      "block_timestamp": 1710239671790826000
    },
    "receipt_outcome": {
      "gas_burnt": 6708712346288,
      "tokens_burnt": 670871234628800000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "FFHRNWbRLfdmkU2SDGtUDUuvBm4HD7tKrkTbXhHw2Dg",
    "included_in_block_hash": "9iYNXk6kqsti3N3xMktFAXNb4bhvCQdgdDApaigTXg9b",
    "block_timestamp": "1710239667214673234",
    "block": {
      "block_height": 114565831
    },
    "receipt_conversion_tokens_burnt": "242979918456000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 670871234628800000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{1f6a8} New Documentation Alert \\\\\\\\u{1f6a8}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nDid you know that your NEAR account can control accounts on other chains, such as Ethereum?? This is possible thanks to Chain Signatures, which allows you to link your NEAR account to multiple accounts on other protocols, and fully control them, letting you sign foreign transactions completely on-chain in NEAR.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nLearn more about how it works and how you can use them in our new articles:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- [What are Chain Signatures?](https://docs.near.org/concepts/abstraction/chain-signatures)\\\\\\\\\\\\\\\\n- [Create a Chain Signature](https://docs.near.org/abstraction/chain-signatures)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nOpen for feedback / questions / suggestions :)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"documentation\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5099055013482e+21
    }
  },
  {
    "id": "3049840955",
    "receipt_id": "wWdqana2TsgGs9wg2RUMEiSmYW2GgNKcDdSRPEGGPkg",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6aKuTULuaitE1vs8ZC9j9BMsDevrnFZKTvqnSudyMpEg",
      "block_height": 114565871,
      "block_timestamp": 1710239746319601000
    },
    "receipt_outcome": {
      "gas_burnt": 5960543482634,
      "tokens_burnt": 596054348263400000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "FFHRNWbRLfdmkU2SDGtUDUuvBm4HD7tKrkTbXhHw2Dg",
    "included_in_block_hash": "9iYNXk6kqsti3N3xMktFAXNb4bhvCQdgdDApaigTXg9b",
    "block_timestamp": "1710239667214673234",
    "block": {
      "block_height": 114565831
    },
    "receipt_conversion_tokens_burnt": "242979918456000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 596054348263400000000,
        "args": "{\"data\": {\"documentation.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{1f6a8} New Documentation Alert \\\\\\\\u{1f6a8}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nDid you know that your NEAR account can control accounts on other chains, such as Ethereum?? This is possible thanks to Chain Signatures, which allows you to link your NEAR account to multiple accounts on other protocols, and fully control them, letting you sign foreign transactions completely on-chain in NEAR.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nLearn more about how it works and how you can use them in our new articles:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- [What are Chain Signatures?](https://docs.near.org/concepts/abstraction/chain-signatures)\\\\\\\\\\\\\\\\n- [Create a Chain Signature](https://docs.near.org/abstraction/chain-signatures)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nOpen for feedback / questions / suggestions :)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5099055013482e+21
    }
  },
  {
    "id": "3049837880",
    "receipt_id": "5QXGkHvXFeUt9BDSJ6vV8WjDqg7M2FVM2LV86nexFJJm",
    "predecessor_account_id": "gagdiez.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "D5YwH1pD9B4mGkUEXzqkmHGKHEHgyQKeXySzVkjeritC",
      "block_height": 114565861,
      "block_timestamp": 1710239731245864000
    },
    "receipt_outcome": {
      "gas_burnt": 6736356258140,
      "tokens_burnt": 673635625814000000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "4gSALyFYGtvaTVKtj5N4jtmhx4zRKKLs7D8mwLAv7BX2",
    "included_in_block_hash": "6TRxGZKE4N9P9Gc1GHq4f6Rnb2zQh2MXvvYsmdvnk7fM",
    "block_timestamp": "1710239729527477542",
    "block": {
      "block_height": 114565860
    },
    "receipt_conversion_tokens_burnt": "242979918456000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 673635625814000000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{1f6a8} New Documentation Alert \\\\\\\\u{1f6a8}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nDid you know that your NEAR account can control accounts on other chains, such as Ethereum?? This is possible thanks to Chain Signatures, which allows you to link your NEAR account to multiple accounts on other protocols, and fully control them, letting you sign foreign transactions completely on-chain in NEAR.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nLearn more about how it works and how you can use them in our new articles:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- [What are Chain Signatures?](https://docs.near.org/concepts/abstraction/chain-signatures)\\\\\\\\\\\\\\\\n- [Create a Chain Signature](https://docs.near.org/abstraction/chain-signatures)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nOpen for feedback / questions / suggestions :)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"documentation\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5152061132382e+21
    }
  },
  {
    "id": "3049847051",
    "receipt_id": "EMwXG7CP3UirNZtfpRPSH8DmfzkVBVfb7BsTKUNREpBb",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9cLqQBp1N9W1ZVozmTQcovRyjEnAK1uneTmyXF8jp3tj",
      "block_height": 114565897,
      "block_timestamp": 1710239790777967600
    },
    "receipt_outcome": {
      "gas_burnt": 5985905689682,
      "tokens_burnt": 598590568968200000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "4gSALyFYGtvaTVKtj5N4jtmhx4zRKKLs7D8mwLAv7BX2",
    "included_in_block_hash": "6TRxGZKE4N9P9Gc1GHq4f6Rnb2zQh2MXvvYsmdvnk7fM",
    "block_timestamp": "1710239729527477542",
    "block": {
      "block_height": 114565860
    },
    "receipt_conversion_tokens_burnt": "242979918456000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 598590568968200000000,
        "args": "{\"data\": {\"documentation.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{1f6a8} New Documentation Alert \\\\\\\\u{1f6a8}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nDid you know that your NEAR account can control accounts on other chains, such as Ethereum?? This is possible thanks to Chain Signatures, which allows you to link your NEAR account to multiple accounts on other protocols, and fully control them, letting you sign foreign transactions completely on-chain in NEAR.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nLearn more about how it works and how you can use them in our new articles:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- [What are Chain Signatures?](https://docs.near.org/concepts/abstraction/chain-signatures)\\\\\\\\\\\\\\\\n- [Create a Chain Signature](https://docs.near.org/abstraction/chain-signatures)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nOpen for feedback / questions / suggestions :)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5152061132382e+21
    }
  },
  {
    "id": "3050213984",
    "receipt_id": "92LqFBwrZCQNm1aKGcYYyFBszE76bVSNa6yUkdCZpgDQ",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9BZ9aGhbY8eCZZqBiqfYxVWDwiGH3B7oKutWvHZAb3VE",
      "block_height": 114567181,
      "block_timestamp": 1710242254628270000
    },
    "receipt_outcome": {
      "gas_burnt": 8248944712810,
      "tokens_burnt": 824894471281000000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "4nJedfqUT9yCex7WjDEjyT1cykj4puYoZirxLXGHA6bp",
    "included_in_block_hash": "CuUX7MVAPfsUwKBBgoRay8bQMBY163kfi7L6TYUNz42h",
    "block_timestamp": "1710242251776701602",
    "block": {
      "block_height": 114567180
    },
    "receipt_conversion_tokens_burnt": "244621764792200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "update_community",
        "deposit": 0,
        "fee": 824894471281000000000,
        "args": "{\"handle\": \"documentation\", \"community\": {\"tag\": \"documentation\", \"name\": \"Documentation\", \"addons\": [{\"id\": \"w4rep7\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"About Us\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"At ***DevHub*** we believe in the power of collaboration and knowledge sharing. Our Documentation community plays a pivotal role in this endeavour by serving as guidance for both New and Experienced developers in the NEAR Ecosystem .\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nBy actively participating in the creation and maintenance of NEAR Documentation, you become a part of our mission to build a stronger and more supportive ecosystem. \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Documentation Contributors \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n1. @gagdiez.near: Guillermo\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nAreas of Contribution: Design and implementation of all documentation, examples and tutorials.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nBackground and experiences: Researcher, Engineer, and Senior Developer Relation @ NEAR\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n2. @cryptogarik.near: Garik \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nAreas of Contribution: Design and implementation of documentation, examples and tutorials.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nBackground and experiences: Senior Sotfware Engineer, NEAR community builder and contributor.\\\\\\\\\\\\\\\\n \\\\\\\\\\\\\\\\n 3. @fcoew.near: Francisco \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nAreas of Contribution: Improving documentation, examples, and basic tooling.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nBackground and experiences: 15 years of professional expertise as a developer. Hands-on experience with backend technologies, like Node.js and Python\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"About Us \\\\\\\\u{1f603}\"}, {\"id\": \"rfpy7f\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Get Involved\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"# How to contribute to NEAR Docs\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nNEAR documentation is an open source repository that anyone can fork, extend and contribute to by creating pull requests. To get started, all you need is some spare time, a computer with Node.js installed, and a GitHub account.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## New to NEAR?\\\\\\\\\\\\\\\\nIf you\\\\\\\\\\\\'re new in the ecosystem, consider contributing by choosing a specific topic and following the documentation from start to finish. For instance, you can go through the \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"building smart contracts\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" docs and take notes on any areas where you face challenges\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nA web developer with real world experience in building applications (specially backend technologies) should be able to go through the docs. If you have such expertise and do not manage to understand the docs, then you have found a documentation problem! \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nIn such cases, reach out through Telegram or Discord to seek clarification and then contribute by improving the docs to benefit others with your newfound knowledge.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Forking\\\\\\\\\\\\\\\\nTo create a local instance of the docs: \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n1. Fork the official docs repository \\\\\\\\\\\\\\\\n2. Clone the forked repo to your local machine. \\\\\\\\\\\\\\\\n3. Navigate to the `website` folder.\\\\\\\\\\\\\\\\n4. Install all dependencies by running (`npm install`). \\\\\\\\\\\\\\\\n5. Start a local version of the docs by running (`npm start`). \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Modifying an Article\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n1. Locate the relevant markdown file in the `docs` folder.\\\\\\\\\\\\\\\\n2. Edit the markdown file to make your desired changes.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nIf you dont know which article corresponds to a specific markdown file, simply use the `Edit this page` button at the end of every article.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Creating an Article\\\\\\\\\\\\\\\\nTo create a new article:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n1. Create a new markdown file in the `docs` folder.\\\\\\\\\\\\\\\\n2. Add the new article to the `sidebar.json` file. This will add it to the navigation sidebar.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nAwesome! you\\\\\\\\\\\\'ve successfully added new content to the docs \\\\\\\\u{1f680}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nBut keep in mind, building good documentation can be a challenging task and yet...surprisingly straightforward. The reason is simple: it is hard to write educational material, but it is very simple to evaluate its usefulness. \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThis guide on ***[The Art of Writing good Docs](https://docs.google.com/document/d/1bYNNlqu36-k44LN86KL8332ldAlgr84ql_2lcnyRYW8/edit?usp=sharing  )*** will give you the right mindset to keep throughout your creative process: \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n***Tool Developers***\\\\\\\\\\\\\\\\nIf you\\\\\\\\\\\\'re a tool developer, you can contribute by:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- Creating documentation for your tool and other tools used in the NEAR ecosystem.\\\\\\\\\\\\\\\\n- Standardizing repositories\\\\\\\\\\\\\\\\n- Contributing to typedocs and READMEs to enhance the usability of NEAR tools.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Specific Tasks\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nFor a list of specific tasks to work on, refer to this [***LINK***](https://docs.google.com/document/u/1/d/1SK-a50ZZBEG_RU6Je04CeVlr23bjodS65jz_EJDKiUo/mobilebasic).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n***Your contributions play a vital role in improving NEAR documentation and making it more accessible to everyone***\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"}\", \"display_name\": \"Get Involved \\\\\\\\u{1f3c6}\"}, {\"id\": \"5dhk1o\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Documentation Updates\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"## Feb 16th 2024 \\\\\\\\\\\\\\\\n1. Cross contract calls examples in JavaScript ([examples PR](https://github.com/near-examples/cross-contract-calls/pull/1), [docs PR](https://github.com/near/docs/pull/1730)) (@cryptogarik.near)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n2. (@maguila.near)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- Formated changes for examples\\\\\\\\\\\\\\\\nhttps://github.com/near/docs/pull/1725/files\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- Fix linter issues and examples for near-sdk-js\\\\\\\\\\\\\\\\nhttps://github.com/near/near-sdk-js/pull/378\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- Fixed guestbook contract\\\\\\\\\\\\\\\\nhttps://github.com/near-examples/guest-book-examples/pull/3\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n-----\\\\\\\\\\\\\\\\n## Feb 9th 2024 \\\\\\\\\\\\\\\\n1. Developed the onboarding guide: [document](https://docs.google.com/document/d/14u3f9Yhn71GJdLb_BunDyklW4NukenzrHpHIwk-GjyQ/edit) (@vladana.near)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n2. Refactoring NFT Primitives pages, Refactoring FT Primitives pages, Refactoring DEX Primitives pages, Refactoring DAO Primitives pages, Refactoring Linkdrops Primitives pages [Document](https://github.com/near/docs/pull/1689) (@cryptogarik.near)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n3. Updating and adding codespaces for examples, [Adding nextjs structure](https://github.com/near/create-near-app/pull/2127), [Updating create-near-app - updating rs template](https://github.com/near/create-near-app/pull/2128) (@maguila.near)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n------\\\\\\\\\\\\\\\\n## Jan 26th 2024 \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**1. Created 3 new quickstart guides from the ground (@vladana.near & @gagdiez.near)**\\\\\\\\\\\\\\\\n* [Smart Contracts on NEAR](https://docs.google.com/document/d/14u3f9Yhn71GJdLb_BunDyklW4NukenzrHpHIwk-GjyQ/edit#heading=h.qzc57ea134v)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**2. Fixed 100 broken links (@maguila.near)**\\\\\\\\\\\\\\\\n* https://github.com/near/docs/pull/1611\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**3. Fixed docs CLI - building 2x faster, fixed crowdin errors  (@maguila.near)**\\\\\\\\\\\\\\\\n* Build crowdin project for testing \\\\\\\\\\\\\\\\nhttps://github.com/matiasbenary/testdocusaurus\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n* Implement and optimized documentation CI\\\\\\\\\\\\\\\\nhttps://github.com/near/docs/pull/1658\\\\\\\\\\\\\\\\nhttps://github.com/near/docs/pull/1661\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\n**4. Created a new Primitives section on docs - 30 pages (@cryptogarik.near)**\\\\\\\\\\\\\\\\n* NFT Primitives [minor fixes in docs](https://github.com/near/docs/pull/1637)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**5.Created automatic typedocs in 4 projects & remove them from docs (@maguila.near)**\\\\\\\\\\\\\\\\n* Automatizing Typedoc: \\\\\\\\\\\\\\\\nhttps://github.com/near/near-sdk-js/pull/371,\\\\\\\\\\\\\\\\nhttps://github.com/near/near-lake-framework-js/pull/50,\\\\\\\\\\\\\\\\nhttps://github.com/near/near-workspaces-js/pull/228\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**6.Interactive docs - users can now login with their NEAR Account**\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### In Progress:\\\\\\\\\\\\\\\\n**1. Creating 4 new onboarding pages (@vladana.near & @gagdiez.near)**\\\\\\\\\\\\\\\\n**2. Fixing basic examples and templates (@maguila.near)**\\\\\\\\\\\\\\\\n- https://github.com/near/docs/pull/1611\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**3. Creating BOS components for primitives (@cryptogarik.near)**\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n------\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"Documentation Updates \\\\\\\\u{1f929}\"}, {\"id\": \"kcxoy6\", \"enabled\": true, \"addon_id\": \"telegram\", \"parameters\": \"{\\\\\\\\\\\\\\\"handles\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"neardocscg\\\\\\\\\\\\\\\"]}\", \"display_name\": \"Telegram\"}], \"admins\": [\"bo.near\", \"bucanero.near\", \"gagdiez.near\", \"victorkanu1.near\", \"bpolania.near\", \"joshua.near\"], \"handle\": \"documentation\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreidr2apd44pd7r2t5du6mjtjatuygvy2y2c6fmagn4c53vdzocyi6m\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreigdmw3m4reb4nmlmqq4p4flq465ryhh3tpr2wkp7zl6uljnc5tsoe\", \"description\": \"Participate in creating and maintaining NEAR docs\", \"website_url\": \"docs.near.org\", \"bio_markdown\": \"Community to discuss everything about NEAR developer documentation\", \"github_handle\": \"near/docs\", \"twitter_handle\": \"NEARDevHub\", \"telegram_handle\": \"neardocscg\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.4591538229098e+21
    }
  },
  {
    "id": "3050215978",
    "receipt_id": "DpTVAHGEN4xYmosqp3EQ5xESNpm4ENzZyxBX5DLzDu8r",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9Z5E2ZC3TFaTyLTNPSYXLSLU85476vKjuwvE97fpMwAB",
      "block_height": 114567187,
      "block_timestamp": 1710242265767886300
    },
    "receipt_outcome": {
      "gas_burnt": 23896375868366,
      "tokens_burnt": 2.3896375868366e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "4nJedfqUT9yCex7WjDEjyT1cykj4puYoZirxLXGHA6bp",
    "included_in_block_hash": "CuUX7MVAPfsUwKBBgoRay8bQMBY163kfi7L6TYUNz42h",
    "block_timestamp": "1710242251776701602",
    "block": {
      "block_height": 114567180
    },
    "receipt_conversion_tokens_burnt": "244621764792200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 2.3896375868366e+21,
        "args": "{\"data\": {\"documentation.community.devhub.near\": {\"profile\": {\"name\": \"Documentation\", \"tags\": {\"community\": \"\", \"announcements\": \"\", \"documentation\": \"\"}, \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreidr2apd44pd7r2t5du6mjtjatuygvy2y2c6fmagn4c53vdzocyi6m\"}, \"linktree\": {\"github\": \"near/docs\", \"twitter\": \"NEARDevHub\", \"website\": \"near.social/devhub.near/widget/app?page=community&handle=documentation\", \"telegram\": \"neardocscg\"}, \"description\": \"Community to discuss everything about NEAR developer documentation\\\\\\\\n\\\\\\\\nLearn more about our community [on DevHub](/devhub.near/widget/app?page=community&handle=documentation).\", \"backgroundImage\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreigdmw3m4reb4nmlmqq4p4flq465ryhh3tpr2wkp7zl6uljnc5tsoe\"}}}, \"discussions.documentation.community.devhub.near\": {\"profile\": {\"name\": \"Documentation (Community Discussions)\", \"tags\": {\"community\": \"\", \"discussions\": \"\", \"documentation\": \"\"}, \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreidr2apd44pd7r2t5du6mjtjatuygvy2y2c6fmagn4c53vdzocyi6m\"}, \"linktree\": {\"github\": \"near/docs\", \"twitter\": \"NEARDevHub\", \"website\": \"near.social/devhub.near/widget/app?page=community&handle=documentation\", \"telegram\": \"neardocscg\"}, \"description\": \"Participate in creating and maintaining NEAR docs\\\\\\\\n\\\\\\\\nLearn more about our community [on DevHub](/devhub.near/widget/app?page=community&handle=documentation).\", \"backgroundImage\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreigdmw3m4reb4nmlmqq4p4flq465ryhh3tpr2wkp7zl6uljnc5tsoe\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.4591538229098e+21
    }
  },
  {
    "id": "3051960555",
    "receipt_id": "5iM3ySySmbaaYCjark6zLZw2Tq8N3uvMCEdPRxZ6asuc",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5BkbTjKZpVwSu59ubmZ6b1m9B2dVBcicZv5jnDakfXEQ",
      "block_height": 114573430,
      "block_timestamp": 1710254214785481500
    },
    "receipt_outcome": {
      "gas_burnt": 23164929343601,
      "tokens_burnt": 2.3164929343601e+21,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "52jP4GU48W9hRxrm7GYZZSwSH8AcBMtyUe3KEBNQLE2n",
    "included_in_block_hash": "5BkbTjKZpVwSu59ubmZ6b1m9B2dVBcicZv5jnDakfXEQ",
    "block_timestamp": "1710254214785481454",
    "block": {
      "block_height": 114573430
    },
    "receipt_conversion_tokens_burnt": "445584158811200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "unsafe_self_upgrade",
        "deposit": 0,
        "fee": 2.3164929343601e+21,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9227854549718e+21
    }
  },
  {
    "id": "3051960839",
    "receipt_id": "13n8pHMH5QgnQus35tXPAbKSApgWuUHqGySnbnB7X1nc",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9vb5AC8gx9KEtt9WJygrnfDxFzGYJWx24UmTSG5tCCNz",
      "block_height": 114573432,
      "block_timestamp": 1710254219566043400
    },
    "receipt_outcome": {
      "gas_burnt": 58857192237856,
      "tokens_burnt": 5.8857192237856e+21,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "52jP4GU48W9hRxrm7GYZZSwSH8AcBMtyUe3KEBNQLE2n",
    "included_in_block_hash": "5BkbTjKZpVwSu59ubmZ6b1m9B2dVBcicZv5jnDakfXEQ",
    "block_timestamp": "1710254214785481454",
    "block": {
      "block_height": 114573430
    },
    "receipt_conversion_tokens_burnt": "445584158811200000000",
    "actions": [
      {
        "action": "DEPLOY_CONTRACT",
        "method": null,
        "deposit": 0,
        "fee": 5.8857192237856e+21,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9227854549718e+21
    }
  },
  {
    "id": "3051960841",
    "receipt_id": "BPwkyzLmxEcEZunxZ9A8tRzYRyiQ5uKrRjACc18Hcvs8",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9vb5AC8gx9KEtt9WJygrnfDxFzGYJWx24UmTSG5tCCNz",
      "block_height": 114573432,
      "block_timestamp": 1710254219566043400
    },
    "receipt_outcome": {
      "gas_burnt": 2749891380149,
      "tokens_burnt": 274989138014900000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "52jP4GU48W9hRxrm7GYZZSwSH8AcBMtyUe3KEBNQLE2n",
    "included_in_block_hash": "5BkbTjKZpVwSu59ubmZ6b1m9B2dVBcicZv5jnDakfXEQ",
    "block_timestamp": "1710254214785481454",
    "block": {
      "block_height": 114573430
    },
    "receipt_conversion_tokens_burnt": "445584158811200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "unsafe_migrate",
        "deposit": 0,
        "fee": 274989138014900000000,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9227854549718e+21
    }
  },
  {
    "id": "3051960843",
    "receipt_id": "GNpTFWCncGVwwXsL9PSpvtR2mXNudUyURQ3PAPo1mjbW",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9vb5AC8gx9KEtt9WJygrnfDxFzGYJWx24UmTSG5tCCNz",
      "block_height": 114573432,
      "block_timestamp": 1710254219566043400
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "52jP4GU48W9hRxrm7GYZZSwSH8AcBMtyUe3KEBNQLE2n",
    "included_in_block_hash": "5BkbTjKZpVwSu59ubmZ6b1m9B2dVBcicZv5jnDakfXEQ",
    "block_timestamp": "1710254214785481454",
    "block": {
      "block_height": 114573430
    },
    "receipt_conversion_tokens_burnt": "445584158811200000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.2188424947257324e+22,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9227854549718e+21
    }
  },
  {
    "id": "3051964360",
    "receipt_id": "8Tf1n9fmUYqz8U77Ev8yg7XcXTwJ3L4pfhfUHQJqWbSW",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3aMakamQEFYqnAjM2hks5w6YJB6ULBJAeJzQs4NVJ9mq",
      "block_height": 114573445,
      "block_timestamp": 1710254243231700000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "52jP4GU48W9hRxrm7GYZZSwSH8AcBMtyUe3KEBNQLE2n",
    "included_in_block_hash": "5BkbTjKZpVwSu59ubmZ6b1m9B2dVBcicZv5jnDakfXEQ",
    "block_timestamp": "1710254214785481454",
    "block": {
      "block_height": 114573430
    },
    "receipt_conversion_tokens_burnt": "445584158811200000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.3889702498492068e+22,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9227854549718e+21
    }
  },
  {
    "id": "3051967920",
    "receipt_id": "7JerQAAn36R67818UHxqcLK1i2TKTBh6XJLRmckPyUvf",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "Fe6JTEyvGM4vYd2DABJKjnucfeqJDvgBcEUUjDUSo6kw",
      "block_height": 114573459,
      "block_timestamp": 1710254274640412700
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "52jP4GU48W9hRxrm7GYZZSwSH8AcBMtyUe3KEBNQLE2n",
    "included_in_block_hash": "5BkbTjKZpVwSu59ubmZ6b1m9B2dVBcicZv5jnDakfXEQ",
    "block_timestamp": "1710254214785481454",
    "block": {
      "block_height": 114573430
    },
    "receipt_conversion_tokens_burnt": "445584158811200000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 3.413976759650471e+22,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9227854549718e+21
    }
  },
  {
    "id": "3055757447",
    "receipt_id": "Ax7EQyKvT8MroPuHv6hFfQSwxdcUWPDTyiUJQfujHKxk",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "DqY6VuZ9BhmzZq5KvakEgus3EAJfgomLxEiotsKNDzRb",
      "block_height": 114589219,
      "block_timestamp": 1710280243465604400
    },
    "receipt_outcome": {
      "gas_burnt": 6948055133443,
      "tokens_burnt": 694805513344300000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "BZvss7uEJ6djpYZAMmgrN16qT6aP4dSFv82WBUnuRqHb",
    "included_in_block_hash": "5LB2odgvjGfmZpfKUW2ipnUmDQngZqmCwFPrkW6cXu8Q",
    "block_timestamp": "1710280240132673974",
    "block": {
      "block_height": 114589217
    },
    "receipt_conversion_tokens_burnt": "242999371081800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "update_community",
        "deposit": 0,
        "fee": 694805513344300000000,
        "args": "{\"handle\": \"nearukraine\", \"community\": {\"tag\": \"nearukraine\", \"name\": \"Near Ukraine Guild\", \"addons\": [{\"id\": \"nitmhf\", \"enabled\": true, \"addon_id\": \"telegram\", \"parameters\": \"{\\\\\\\\\\\\\\\"handles\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"nearprotocoluachannel\\\\\\\\\\\\\\\"]}\", \"display_name\": \"Telegram\"}, {\"id\": \"fqhqwj\", \"enabled\": true, \"addon_id\": \"github\", \"parameters\": \"{}\", \"display_name\": \"Github\"}], \"admins\": [\"nearukraineguild.near\"], \"handle\": \"nearukraine\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreifydvg7r7e34j5chme633yjhk6lqyhbesmdcd2ninjx6dyl46qyey\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreid6e4sxkufdk6thaswuxy6qx4ojgorl67yf5q7v6polifljvx5px4\", \"description\": \"Community of Developers, Builders, Founders!\", \"website_url\": \"linktr.ee/nearuaguild\", \"bio_markdown\": \"This is a sample text about your community.\\\\\\\\nYou can change it on the community configuration page.\", \"github_handle\": \"nearuaguild\", \"twitter_handle\": \"nearuaguild\", \"telegram_handle\": \"nearprotocoluachannel\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.3016272863453e+21
    }
  }
]