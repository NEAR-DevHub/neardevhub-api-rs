[
  {
    "id": "4015121196",
    "receipt_id": "E9MoZxtrqW2WTxDMFw8XAdrybnG4YUnKU9kBwv7Pmgr5",
    "predecessor_account_id": "sashapais.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3yLPkFxhTmMoGu5GsSYJo9AciAtU9VoFY39iRzgbeLmu",
      "block_height": 117187961,
      "block_timestamp": 1713551647479093800
    },
    "receipt_outcome": {
      "gas_burnt": 4885964360326,
      "tokens_burnt": 488596436032600000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "EKDBAbHgco51koTfp7MtmqnzLjCN1RUPGyEkzG3pnPsA",
    "included_in_block_hash": "N3G3KsEiFGhFkJojQ6L2XWicCCBCfek1FFj5rQSKYzP",
    "block_timestamp": "1713551646305577049",
    "block": {
      "block_height": 117187960
    },
    "receipt_conversion_tokens_burnt": "31108248276800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_proposal",
        "deposit": 0,
        "fee": 488596436032600000000,
        "args": "{\"body\": {\"name\": \"DevHub Design Contributions report February 15 - March 31, 2024\", \"summary\": \"DevHub Design Contributions report February 15 - March 31, 2024\", \"category\": \"Engagement & Awareness\", \"timeline\": {\"status\": \"DRAFT\"}, \"supervisor\": \"orangejoe.near\", \"description\": \"**Breakdown:**\\\\\\\\nProposal workflow mobile \\\\\\\\u{2014} 24 hours\\\\\\\\nDevHub hackathon\\\\\\\\u{2019}24 subbranding \\\\\\\\u{2014} 20 hours\\\\\\\\nBadge/reputation system (ongoing) + incl profile page design to host it (continued) \\\\\\\\u{2014} 10 hours\\\\\\\\nNear Dev News identity/cover design system \\\\\\\\u{2014} 20 hours\\\\\\\\nDevHub Live covers, animations, design system \\\\\\\\u{2014} 10 hours\\\\\\\\nAnimated covers for bi-weekly megathread \\\\\\\\u{2014} 2 hours\\\\\\\\nNFTs for EthSeoul, ETHDam \\\\\\\\u{2014} 2 hours\\\\\\\\nX Spaces covers \\\\\\\\u{2014} 2 hours\\\\\\\\nCalls: Joe, Marketing sync \\\\\\\\u{2014} 2 hours\\\\\\\\n\\\\\\\\nEvents:\\\\\\\\nEthCC prep kickoff: calls and research with Jose \\\\\\\\u{2014} 8 hours\\\\\\\\n\\\\\\\\n**Deliverables:**\\\\\\\\nProposal workflow designs\\\\\\\\nHackathons season 2024: backdrops, swag\\\\\\\\nReputation system draft\\\\\\\\nNear Dev News page setup + covers\\\\\\\\nDevHub Live images/videos/NFT\\\\\\\\nMegathread covers x3\\\\\\\\nX Spaces covers x2\\\\\\\\n\\\\\\\\n**Total hours: 100 hours\\\\\\\\nHourly rate: $55\\\\\\\\nService fee: $5500**\", \"linked_proposals\": [], \"receiver_account\": \"sashapais.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"5500\", \"requested_sponsorship_paid_in_currency\": \"USDT\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6453887586139e+21
    }
  },
  {
    "id": "4015121490",
    "receipt_id": "A5QitGXewKECLgETDBnTzzFwP5ZeEqAqAUX65azwM5Mj",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EFf1bVhQZe59cd3CpkebVoPYSBApyLvTJw2ZAKZbzo8R",
      "block_height": 117187962,
      "block_timestamp": 1713551648687685600
    },
    "receipt_outcome": {
      "gas_burnt": 4546320787214,
      "tokens_burnt": 454632078721400000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "EKDBAbHgco51koTfp7MtmqnzLjCN1RUPGyEkzG3pnPsA",
    "included_in_block_hash": "N3G3KsEiFGhFkJojQ6L2XWicCCBCfek1FFj5rQSKYzP",
    "block_timestamp": "1713551646305577049",
    "block": {
      "block_height": 117187960
    },
    "receipt_conversion_tokens_burnt": "31108248276800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 454632078721400000000,
        "args": "{\"data\": {\"devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"We have just received a new *Engagement & Awareness* proposal.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**By**: @sashapais.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Title**: \\\\\\\\u{201c}DevHub Design Contributions report February 15 - March 31, 2024\\\\\\\\u{201c}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Summary**:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nDevHub Design Contributions report February 15 - March 31, 2024\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nRead the full proposal and share your feedback on [DevHub](/devhub.near/widget/app?page=proposal&id=55)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6453887586139e+21
    }
  },
  {
    "id": "4015121498",
    "receipt_id": "GtivFFSjaPrCk4iZoaGwqno4sADC1cW9ekGwjcnTsmBW",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EFf1bVhQZe59cd3CpkebVoPYSBApyLvTJw2ZAKZbzo8R",
      "block_height": 117187962,
      "block_timestamp": 1713551648687685600
    },
    "receipt_outcome": {
      "gas_burnt": 3170536344892,
      "tokens_burnt": 317053634489200000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "EKDBAbHgco51koTfp7MtmqnzLjCN1RUPGyEkzG3pnPsA",
    "included_in_block_hash": "N3G3KsEiFGhFkJojQ6L2XWicCCBCfek1FFj5rQSKYzP",
    "block_timestamp": "1713551646305577049",
    "block": {
      "block_height": 117187960
    },
    "receipt_conversion_tokens_burnt": "31108248276800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_block_height_callback",
        "deposit": 0,
        "fee": 317053634489200000000,
        "args": "{\"proposal\": {\"id\": 55, \"snapshot\": {\"name\": \"DevHub Design Contributions report February 15 - March 31, 2024\", \"labels\": [], \"summary\": \"DevHub Design Contributions report February 15 - March 31, 2024\", \"category\": \"Engagement & Awareness\", \"timeline\": {\"status\": \"DRAFT\"}, \"editor_id\": \"sashapais.near\", \"timestamp\": \"1713551647479093670\", \"supervisor\": \"orangejoe.near\", \"description\": \"**Breakdown:**\\\\\\\\nProposal workflow mobile \\\\\\\\u{2014} 24 hours\\\\\\\\nDevHub hackathon\\\\\\\\u{2019}24 subbranding \\\\\\\\u{2014} 20 hours\\\\\\\\nBadge/reputation system (ongoing) + incl profile page design to host it (continued) \\\\\\\\u{2014} 10 hours\\\\\\\\nNear Dev News identity/cover design system \\\\\\\\u{2014} 20 hours\\\\\\\\nDevHub Live covers, animations, design system \\\\\\\\u{2014} 10 hours\\\\\\\\nAnimated covers for bi-weekly megathread \\\\\\\\u{2014} 2 hours\\\\\\\\nNFTs for EthSeoul, ETHDam \\\\\\\\u{2014} 2 hours\\\\\\\\nX Spaces covers \\\\\\\\u{2014} 2 hours\\\\\\\\nCalls: Joe, Marketing sync \\\\\\\\u{2014} 2 hours\\\\\\\\n\\\\\\\\nEvents:\\\\\\\\nEthCC prep kickoff: calls and research with Jose \\\\\\\\u{2014} 8 hours\\\\\\\\n\\\\\\\\n**Deliverables:**\\\\\\\\nProposal workflow designs\\\\\\\\nHackathons season 2024: backdrops, swag\\\\\\\\nReputation system draft\\\\\\\\nNear Dev News page setup + covers\\\\\\\\nDevHub Live images/videos/NFT\\\\\\\\nMegathread covers x3\\\\\\\\nX Spaces covers x2\\\\\\\\n\\\\\\\\n**Total hours: 100 hours\\\\\\\\nHourly rate: $55\\\\\\\\nService fee: $5500**\", \"linked_proposals\": [], \"receiver_account\": \"sashapais.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"5500\", \"requested_sponsorship_paid_in_currency\": \"USDT\"}, \"author_id\": \"sashapais.near\", \"snapshot_history\": [], \"social_db_post_block_height\": \"0\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6453887586139e+21
    }
  },
  {
    "id": "4015121499",
    "receipt_id": "7zWgcJ6wnUijfz5WUujMw3mCXwV5cJ78tcdHCxEyah7k",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EFf1bVhQZe59cd3CpkebVoPYSBApyLvTJw2ZAKZbzo8R",
      "block_height": 117187962,
      "block_timestamp": 1713551648687685600
    },
    "receipt_outcome": {
      "gas_burnt": 3539983610939,
      "tokens_burnt": 353998361093900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "EKDBAbHgco51koTfp7MtmqnzLjCN1RUPGyEkzG3pnPsA",
    "included_in_block_hash": "N3G3KsEiFGhFkJojQ6L2XWicCCBCfek1FFj5rQSKYzP",
    "block_timestamp": "1713551646305577049",
    "block": {
      "block_height": 117187960
    },
    "receipt_conversion_tokens_burnt": "31108248276800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 353998361093900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"[{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"orangejoe.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":55,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"sashapais.near\\\\\\\\\\\\\\\"}},{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":55,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"sashapais.near\\\\\\\\\\\\\\\"}}]\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6453887586139e+21
    }
  },
  {
    "id": "4015124317",
    "receipt_id": "5KRWFRQjMXyKEkSsm7BoeYpARygmib1zVGdys2vpWkmd",
    "predecessor_account_id": "sashapais.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7wj3BYT32mMiUN4jZSaUUTioWC59TuyFEQ8BkS6boBeT",
      "block_height": 117187974,
      "block_timestamp": 1713551662834993400
    },
    "receipt_outcome": {
      "gas_burnt": 3997385091720,
      "tokens_burnt": 399738509172000000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "B7VoxsQ6jiYYQEtMdpxuzq7zRqo9rdXRxxozmMozBZW4",
    "included_in_block_hash": "HYYfdsqjBwsaCZgC6JCjPHp9d4BFcmhJLi7emVRWRd2S",
    "block_timestamp": "1713551661698484258",
    "block": {
      "block_height": 117187973
    },
    "receipt_conversion_tokens_burnt": "30835911515600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 399738509172000000000,
        "args": "{\"id\": 55, \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 780464922846700000000
    }
  },
  {
    "id": "4015124576",
    "receipt_id": "H5XsE6cmW5V7Hf9DXKKMo9BQzRfmAQPgSjegURxZ4sEJ",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "4swfP8ZvX7H9ZYNhTStUR3skxCgj6rBsdgv9AxwqUQTg",
      "block_height": 117187975,
      "block_timestamp": 1713551663896869400
    },
    "receipt_outcome": {
      "gas_burnt": 3498905021591,
      "tokens_burnt": 349890502159100000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "B7VoxsQ6jiYYQEtMdpxuzq7zRqo9rdXRxxozmMozBZW4",
    "included_in_block_hash": "HYYfdsqjBwsaCZgC6JCjPHp9d4BFcmhJLi7emVRWRd2S",
    "block_timestamp": "1713551661698484258",
    "block": {
      "block_height": 117187973
    },
    "receipt_conversion_tokens_burnt": "30835911515600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349890502159100000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"sashapais.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":55,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"sashapais.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 780464922846700000000
    }
  },
  {
    "id": "4027664305",
    "receipt_id": "E3H1TM3W7j2DhfRzL5uePoLrT45tTTuc6nb9gzU7BeAc",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2owDATV5B57wTSn4RYYkfCZyRJMc8zpTfWs8ycPWQX9A",
      "block_height": 117227288,
      "block_timestamp": 1713600112913007600
    },
    "receipt_outcome": {
      "gas_burnt": 18138443545907,
      "tokens_burnt": 1.8138443545907e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "6QsiqSSWjU8KT5681ntXqsaYnGHx35yfYvXWz91wrx6f",
    "included_in_block_hash": "2mPW6aFbfo6UWGWtg9QLoLTjTZZrJ7aPEX8NkSf9B84d",
    "block_timestamp": "1713600111553083444",
    "block": {
      "block_height": 117227287
    },
    "receipt_conversion_tokens_burnt": "42870379083800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.8138443545907e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.entity.proposal.Editor\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\nconst { getDepositAmountForWriteAccess } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.common\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"PROPOSAL_EDIT\\\\\\\\\\\\\\\";\\\\\\\\ngetDepositAmountForWriteAccess || (getDepositAmountForWriteAccess = () => {});\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://near.social/devhub.near/widget/app?page=community&handle=developer-dao&tab=funding\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nif (!author) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.LoginScreen\\\\\\\\\\\\\\\"} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nlet editProposalData = null;\\\\\\\\nlet draftProposalData = null;\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editProposalData = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n    proposal_id: parseInt(id),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  input {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .h6 {\\\\\\\\n      font-size: 14px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .text-sm {\\\\\\\\n      font-size: 11px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst tokensOptions = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\" },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"OTHER\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst devdaoAccount = \\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst [category, setCategory] = useState(null);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [linkedProposals, setLinkedProposals] = useState([]);\\\\\\\\nconst [receiverAccount, setReceiverAccount] = useState(context.accountId);\\\\\\\\nconst [requestedSponsor, setRequestedSponsor] = useState(devdaoAccount);\\\\\\\\nconst [requestedSponsorshipAmount, setRequestedSponsorshipAmount] =\\\\\\\\n  useState(null);\\\\\\\\nconst [requestedSponsorshipToken, setRequestedSponsorshipToken] = useState(\\\\\\\\n  tokensOptions[2]\\\\\\\\n);\\\\\\\\nconst [supervisor, setSupervisor] = useState(null);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\nconst [selectedStatus, setSelectedStatus] = useState(\\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\");\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\n\\\\\\\\nconst [showProposalPage, setShowProposalPage] = useState(false); // when user creates/edit a proposal and confirm the txn, this is true\\\\\\\\nconst [proposalId, setProposalId] = useState(null);\\\\\\\\nconst [proposalIdsArray, setProposalIdsArray] = useState(null);\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [oldProposalData, setOldProposalData] = useState(null);\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftProposalData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editProposalData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      category: category,\\\\\\\\n      summary: summary,\\\\\\\\n      requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n      requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n      receiver_account: receiverAccount,\\\\\\\\n      supervisor: supervisor,\\\\\\\\n      requested_sponsor: requestedSponsor,\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [\\\\\\\\n    title,\\\\\\\\n    summary,\\\\\\\\n    description,\\\\\\\\n    category,\\\\\\\\n    requestedSponsorshipAmount,\\\\\\\\n    requestedSponsorshipToken,\\\\\\\\n    receiverAccount,\\\\\\\\n    supervisor,\\\\\\\\n    requestedSponsor,\\\\\\\\n  ]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (allowDraft) {\\\\\\\\n    let data = editProposalData || JSON.parse(draftProposalData);\\\\\\\\n    let snapshot = data.snapshot;\\\\\\\\n    if (data) {\\\\\\\\n      if (timestamp) {\\\\\\\\n        snapshot =\\\\\\\\n          data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n          data.snapshot;\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        draftProposalData &&\\\\\\\\n        editProposalData &&\\\\\\\\n        editProposalData.id === JSON.parse(draftProposalData).id\\\\\\\\n      ) {\\\\\\\\n        snapshot = {\\\\\\\\n          ...editProposalData.snapshot,\\\\\\\\n          ...JSON.parse(draftProposalData).snapshot,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n      setCategory(snapshot.category);\\\\\\\\n      setTitle(snapshot.name);\\\\\\\\n      setSummary(snapshot.summary);\\\\\\\\n      setDescription(snapshot.description);\\\\\\\\n      setReceiverAccount(snapshot.receiver_account);\\\\\\\\n      setRequestedSponsor(snapshot.requested_sponsor);\\\\\\\\n      setRequestedSponsorshipAmount(snapshot.requested_sponsorship_usd_amount);\\\\\\\\n      setSupervisor(snapshot.supervisor);\\\\\\\\n\\\\\\\\n      const token = tokensOptions.find(\\\\\\\\n        (item) => item.value === snapshot.requested_sponsorship_paid_in_currency\\\\\\\\n      );\\\\\\\\n      setRequestedSponsorshipToken(token ?? tokensOptions[2]);\\\\\\\\n      if (isEditPage) {\\\\\\\\n        setConsent({ toc: true, coc: true });\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    setLoading(false);\\\\\\\\n  }\\\\\\\\n}, [editProposalData, draftProposalData, allowDraft]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (draftProposalData) {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n  }\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (showProposalPage) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  setDisabledSubmitBtn(\\\\\\\\n    isTxnCreated ||\\\\\\\\n      !title ||\\\\\\\\n      !description ||\\\\\\\\n      !summary ||\\\\\\\\n      !category ||\\\\\\\\n      !requestedSponsorshipAmount ||\\\\\\\\n      !receiverAccount ||\\\\\\\\n      !requestedSponsor ||\\\\\\\\n      !consent.toc ||\\\\\\\\n      !consent.coc\\\\\\\\n  );\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 10000);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, [\\\\\\\\n  memoizedDraftData,\\\\\\\\n  draftKey,\\\\\\\\n  draftProposalData,\\\\\\\\n  consent,\\\\\\\\n  isTxnCreated,\\\\\\\\n  showProposalPage,\\\\\\\\n]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    editProposalData &&\\\\\\\\n    editProposalData?.snapshot?.linked_proposals?.length > 0\\\\\\\\n  ) {\\\\\\\\n    editProposalData.snapshot.linked_proposals.map((item) => {\\\\\\\\n      useCache(\\\\\\\\n        () =>\\\\\\\\n          Near.asyncView(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n            proposal_id: parseInt(item),\\\\\\\\n          }).then((proposal) => {\\\\\\\\n            setLinkedProposals([\\\\\\\\n              ...linkedProposals,\\\\\\\\n              {\\\\\\\\n                label: \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + proposal.id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + proposal.snapshot.name,\\\\\\\\n                value: proposal.id,\\\\\\\\n              },\\\\\\\\n            ]);\\\\\\\\n          }),\\\\\\\\n        item + \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\",\\\\\\\\n        { subscribe: false }\\\\\\\\n      );\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [editProposalData]);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n// show proposal created after txn approval for popup wallet\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isTxnCreated) {\\\\\\\\n    if (editProposalData) {\\\\\\\\n      setOldProposalData(editProposalData);\\\\\\\\n      if (\\\\\\\\n        editProposalData &&\\\\\\\\n        typeof editProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        oldProposalData &&\\\\\\\\n        typeof oldProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        JSON.stringify(editProposalData) !== JSON.stringify(oldProposalData)\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(editProposalData.id);\\\\\\\\n        setShowProposalPage(true);\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      const proposalIds = Near.view(\\\\\\\\n        \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n        \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      if (Array.isArray(proposalIds) && !proposalIdsArray) {\\\\\\\\n        setProposalIdsArray(proposalIds);\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        Array.isArray(proposalIds) &&\\\\\\\\n        Array.isArray(proposalIdsArray) &&\\\\\\\\n        proposalIds.length !== proposalIdsArray.length\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(proposalIds[proposalIds.length - 1]);\\\\\\\\n        setShowProposalPage(true);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes) {\\\\\\\\n    setLoading(true);\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(\\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\", {\\\\\\\\n          method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n          headers: {\\\\\\\\n            \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          body: JSON.stringify({\\\\\\\\n            jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n            id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n            method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n            params: [props.transactionHashes, context.accountId],\\\\\\\\n          }),\\\\\\\\n        }).then((transaction) => {\\\\\\\\n          const transaction_method_name =\\\\\\\\n            transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n              .method_name;\\\\\\\\n\\\\\\\\n          const is_edit_or_add_post_transaction =\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\" ||\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n          if (is_edit_or_add_post_transaction) {\\\\\\\\n            setShowProposalPage(true);\\\\\\\\n            Storage.privateSet(draftKey, null);\\\\\\\\n          }\\\\\\\\n          // show the latest created proposal to user\\\\\\\\n          if (transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\") {\\\\\\\\n            useCache(\\\\\\\\n              () =>\\\\\\\\n                Near.asyncView(\\\\\\\\n                  \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n                  \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n                ).then((proposalIdsArray) => {\\\\\\\\n                  setProposalId(\\\\\\\\n                    proposalIdsArray?.[proposalIdsArray?.length - 1]\\\\\\\\n                  );\\\\\\\\n                }),\\\\\\\\n              props.transactionHashes + \\\\\\\\\\\\\\\"proposalIds\\\\\\\\\\\\\\\",\\\\\\\\n              { subscribe: false }\\\\\\\\n            );\\\\\\\\n          } else {\\\\\\\\n            setProposalId(id);\\\\\\\\n          }\\\\\\\\n          setLoading(false);\\\\\\\\n        }),\\\\\\\\n      props.transactionHashes + context.accountId,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  } else {\\\\\\\\n    if (showProposalPage) {\\\\\\\\n      setShowProposalPage(false);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst DropdowntBtnContainer = styled.div`\\\\\\\\n  font-size: 13px;\\\\\\\\n  min-width: 150px;\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .select-header {\\\\\\\\n    display: flex;\\\\\\\\n    justify-content: space-between;\\\\\\\\n    align-items: center;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    border-radius-top: 5px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    background-color: #fff;\\\\\\\\n    border-radius: 5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .no-border {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .options-card {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 0;\\\\\\\\n    width: 200%;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    background-color: #fff;\\\\\\\\n    padding: 0.5rem;\\\\\\\\n    z-index: 99;\\\\\\\\n    font-size: 13px;\\\\\\\\n    border-radius:0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .left {\\\\\\\\n    right: 0 !important;\\\\\\\\n    left: auto !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .options-card {\\\\\\\\n      right: 0 !important;\\\\\\\\n      left: auto !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option {\\\\\\\\n    margin-block: 5px;\\\\\\\\n    padding: 10px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    border-bottom: 1px solid #f0f0f0;\\\\\\\\n    transition: background-color 0.3s ease;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:hover {\\\\\\\\n    background-color: #f0f0f0; /* Custom hover effect color */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:last-child {\\\\\\\\n    border-bottom: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f4f4f4 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    font-weight: 500;\\\\\\\\n    color: #b3b3b3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 8px;\\\\\\\\n    height: 8px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green {\\\\\\\\n    background-color: #04a46e;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"submit-proposal-draft-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SubmitBtn = () => {\\\\\\\\n  const btnOptions = [\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Submit Draft\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"The author can still edit the proposal and build consensus before sharing it with sponsors.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Ready for Review\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"Start the official review process with sponsors. This will lock the editing function, but comments are still open.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"review\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  const handleOptionClick = (option) => {\\\\\\\\n    setDraftBtnOpen(false);\\\\\\\\n    setSelectedStatus(option.value);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const toggleDropdown = () => {\\\\\\\\n    setDraftBtnOpen(!isDraftBtnOpen);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const handleSubmit = () => {\\\\\\\\n    const isDraft = selectedStatus === \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\";\\\\\\\\n    if (isDraft) {\\\\\\\\n      onSubmit({ isDraft });\\\\\\\\n      cleanDraft();\\\\\\\\n    } else {\\\\\\\\n      setReviewModal(true);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <DropdowntBtnContainer>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"custom-select\\\\\\\\\\\\\\\"\\\\\\\\n        tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n        onBlur={() => setDraftBtnOpen(false)}\\\\\\\\n      >\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\n            \\\\\\\\\\\\\\\"select-header d-flex gap-1 align-items-center submit-draft-button \\\\\\\\\\\\\\\" +\\\\\\\\n            (disabledSubmitBtn && \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\")\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            onClick={() => !disabledSubmitBtn && handleSubmit()}\\\\\\\\n            className=\\\\\\\\\\\\\\\"p-2 d-flex gap-2 align-items-center \\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {isTxnCreated ? (\\\\\\\\n              LoadingButtonSpinner\\\\\\\\n            ) : (\\\\\\\\n              <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + selectedOption.iconColor}></div>\\\\\\\\n            )}\\\\\\\\n            <div className={`selected-option`}>{selectedOption.label}</div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"h-100 p-2\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ borderLeft: \\\\\\\\\\\\\\\"1px solid #ccc\\\\\\\\\\\\\\\" }}\\\\\\\\n            onClick={!disabledSubmitBtn && toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <i class={`bi bi-chevron-${isOpen ? \\\\\\\\\\\\\\\"up\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\"}`}></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {isDraftBtnOpen && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"options-card\\\\\\\\\\\\\\\">\\\\\\\\n            {btnOptions.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`option ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n              >\\\\\\\\n                <div className={`d-flex gap-2 align-items-center`}>\\\\\\\\n                  <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + option.iconColor}></div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">{option.label}</div>\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-muted text-xs\\\\\\\\\\\\\\\">{option.description}</div>\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </DropdowntBtnContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst onSubmit = ({ isDraft, isCancel }) => {\\\\\\\\n  setCreateTxn(true);\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"submitting transaction\\\\\\\\\\\\\\\");\\\\\\\\n  const linkedProposalsIds = linkedProposals.map((item) => item.value) ?? [];\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    category: category,\\\\\\\\n    summary: summary,\\\\\\\\n    linked_proposals: linkedProposalsIds,\\\\\\\\n    requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n    requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n    receiver_account: receiverAccount,\\\\\\\\n    supervisor: supervisor || null,\\\\\\\\n    requested_sponsor: requestedSponsor,\\\\\\\\n    timeline: isCancel\\\\\\\\n      ? {\\\\\\\\n          status: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        }\\\\\\\\n      : isDraft\\\\\\\\n      ? { status: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\" }\\\\\\\\n      : {\\\\\\\\n          status: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        },\\\\\\\\n  };\\\\\\\\n  const args = { labels: [], body: body };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editProposalData.id;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst descriptionPlaceholder = `**PROJECT DETAILS**\\\\\\\\nProvide a clear overview of the scope, deliverables, and expected outcomes. What benefits will it provide to the NEAR community? How will you measure success?\\\\\\\\n\\\\\\\\n**TIMELINE**\\\\\\\\nDescribe the timeline of your project and key milestones, specifying if the work was already complete or not. Include your plans for reporting progress to the community.\\\\\\\\n\\\\\\\\nOPTIONAL FIELDS\\\\\\\\n\\\\\\\\n**TEAM**\\\\\\\\nProvide a list of who will be working on the project along with their relevant skillset and experience. You may include links to portfolios or profiles to help the community get to know who the DAO will fund and how their backgrounds will contribute to your project\\\\\\\\u{2019}s success.\\\\\\\\n\\\\\\\\n**BUDGET BREAKDOWN**\\\\\\\\nInclude a detailed breakdown on how you will use the funds and include rate justification. Our community values transparency, so be as specific as possible.\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Spinner\\\\\\\\\\\\\\\"}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [collapseState, setCollapseState] = useState({});\\\\\\\\n\\\\\\\\nconst CollapsibleContainer = ({ title, children, noPaddingTop }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"border-bottom py-4 \\\\\\\\\\\\\\\" +\\\\\\\\n        (noPaddingTop && \\\\\\\\\\\\\\\"pt-0 \\\\\\\\\\\\\\\") +\\\\\\\\n        (collapseState[title] && \\\\\\\\\\\\\\\" pb-0\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className={\\\\\\\\\\\\\\\"d-flex justify-content-between \\\\\\\\\\\\\\\"}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-2 mb-sm-3\\\\\\\\\\\\\\\">{title}</div>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex d-sm-none cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() =>\\\\\\\\n            setCollapseState((prevState) => ({\\\\\\\\n              ...prevState,\\\\\\\\n              [title]: !prevState[title],\\\\\\\\n            }))\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          {!collapseState[title] ? (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-up h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          ) : (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-down h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className={!collapseState[title] ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"}>{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategoryDropdown = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CategoryDropdown\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        selectedValue: category,\\\\\\\\n        onChange: setCategory,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setTitle(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 80,\\\\\\\\n          required: true,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst SummaryComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: summary,\\\\\\\\n        multiline: true,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSummary(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 500,\\\\\\\\n          required: true,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst DescriptionComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Compose\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        data: description,\\\\\\\\n        onChange: setDescription,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        autoFocus: false,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ConsentComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Checkbox\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"toc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={\\\\\\\\n                  \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1nRGy7LhpLj56SjN9MseV1x-ubH8O_c6B9DOAZ9qTwMU/edit?usp=sharing\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                DevHub\\\\\\\\u{2019}s Terms and Conditions\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.toc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              toc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Checkbox\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"coc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={\\\\\\\\n                  \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1c6XV8Sj_BRKw8jnTIsjdLPPN6Al5eEStt1ZLYSuqw9U/edit\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                DevHub\\\\\\\\u{2019}s Code of Conduct\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.coc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              coc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ProfileComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"mob.near/widget/Profile.ShortInlineBlock\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        accountId: author,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst LinkedProposalsComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">\\\\\\\\n        Link any relevant proposals (e.g. previous milestones).\\\\\\\\n      </div>\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.LinkedProposalsDropdown\\\\\\\\\\\\\\\"\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedProposals,\\\\\\\\n          linkedProposals: linkedProposals,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ReceiverAccountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AccountInput\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        value: receiverAccount,\\\\\\\\n        placeholder: devdaoAccount,\\\\\\\\n        onUpdate: setReceiverAccount,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst AmountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: requestedSponsorshipAmount,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          setRequestedSponsorshipAmount(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\",\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"$\\\\\\\\\\\\\\\",\\\\\\\\n          inputmode: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\",\\\\\\\\n          pattern: \\\\\\\\\\\\\\\"[0-9]*\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst CurrencyComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        options: tokensOptions,\\\\\\\\n        selectedValue: requestedSponsorshipToken,\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setRequestedSponsorshipToken(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst SponsorComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AccountInput\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        value: requestedSponsor,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"DevDAO\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: setRequestedSponsor,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst SupervisorComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AccountInput\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        value: supervisor,\\\\\\\\n        onUpdate: setSupervisor,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nif (showProposalPage) {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Proposal\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{ id: proposalId, ...props }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n} else\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-0 px-sm-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <Heading className=\\\\\\\\\\\\\\\"px-2 px-sm-0\\\\\\\\\\\\\\\">\\\\\\\\n        {isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} Proposal\\\\\\\\n      </Heading>\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmReviewModal\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          isOpen: isReviewModalOpen,\\\\\\\\n          onCancelClick: () => setReviewModal(false),\\\\\\\\n          onReviewClick: () => {\\\\\\\\n            setReviewModal(false);\\\\\\\\n            cleanDraft();\\\\\\\\n            onSubmit({ isDraft: false });\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmCancelModal\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          isOpen: isCancelModalOpen,\\\\\\\\n          onCancelClick: () => setCancelModal(false),\\\\\\\\n          onConfirmClick: () => {\\\\\\\\n            setCancelModal(false);\\\\\\\\n            onSubmit({ isCancel: true });\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 px-2 p-lg-0 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"container-xl py-4 d-flex flex-wrap gap-6 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <div\\\\\\\\n            style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n            className=\\\\\\\\\\\\\\\"flex-2 w-100 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: author,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    <>\\\\\\\\n                      Select the category that best aligns with your\\\\\\\\n                      contribution to the NEAR developer community. Need\\\\\\\\n                      guidance? See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <a\\\\\\\\n                        href={FundingDocs}\\\\\\\\n                        className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        Funding Docs\\\\\\\\n                      </a>\\\\\\\\n                      .\\\\\\\\n                    </>\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {CategoryDropdown}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Highlight the essence of your proposal in a few words. This will appear on your proposal\\\\\\\\u{2019}s detail page and the main proposal feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {TitleComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Explain your proposal briefly. This is your chance to make a good first impression on the community. Include what needs or goals your work will address, your solution, and the benefit for the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {SummaryComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    <>\\\\\\\\n                      Expand on your summary with any relevant details like your\\\\\\\\n                      contribution timeline, key milestones, team background,\\\\\\\\n                      and a clear breakdown of how the funds will be used.\\\\\\\\n                      Proposals should be simple and clear (e.g. 1 month). For\\\\\\\\n                      more complex projects, treat each milestone as a separate\\\\\\\\n                      proposal. Need more guidance?\\\\\\\\n                      <a\\\\\\\\n                        href={FundingDocs}\\\\\\\\n                        className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        See Funding Docs\\\\\\\\n                      </a>\\\\\\\\n                      .\\\\\\\\n                    </>\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {DescriptionComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\">\\\\\\\\n                  {ConsentComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    {isEditPage && (\\\\\\\\n                      <Widget\\\\\\\\n                        src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                        props={{\\\\\\\\n                          classNames: {\\\\\\\\n                            root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                          },\\\\\\\\n                          label: (\\\\\\\\n                            <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                              <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                            </div>\\\\\\\\n                          ),\\\\\\\\n                          onClick: () => setCancelModal(true),\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Link\\\\\\\\n                      to={\\\\\\\\n                        isEditPage\\\\\\\\n                          ? href({\\\\\\\\n                              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                              params: {\\\\\\\\n                                page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                                id: parseInt(id),\\\\\\\\n                              },\\\\\\\\n                            })\\\\\\\\n                          : href({\\\\\\\\n                              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                              params: {\\\\\\\\n                                page: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n                              },\\\\\\\\n                            })\\\\\\\\n                      }\\\\\\\\n                    >\\\\\\\\n                      <Widget\\\\\\\\n                        src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                        props={{\\\\\\\\n                          classNames: {\\\\\\\\n                            root: \\\\\\\\\\\\\\\"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                          },\\\\\\\\n                          label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                          onClick: cleanDraft,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </Link>\\\\\\\\n                    <SubmitBtn />\\\\\\\\n                  </div>\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n            className=\\\\\\\\\\\\\\\"flex-1 w-100 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            <CollapsibleContainer noPaddingTop={true} title=\\\\\\\\\\\\\\\"Author Details\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer heading=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                  {ProfileComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n              <CollapsibleContainer title=\\\\\\\\\\\\\\\"Link Proposals (Optional)\\\\\\\\\\\\\\\">\\\\\\\\n                {LinkedProposalsComponent}\\\\\\\\n              </CollapsibleContainer>\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n              <CollapsibleContainer title=\\\\\\\\\\\\\\\"Funding Details\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n                  <InputContainer\\\\\\\\n                    heading=\\\\\\\\\\\\\\\"Recipient NEAR Wallet Address\\\\\\\\\\\\\\\"\\\\\\\\n                    description=\\\\\\\\\\\\\\\"Enter the address that will receive the funds. We\\\\\\\\u{2019}ll need this to send a test transaction once your proposal is approved.\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    {ReceiverAccountComponent}\\\\\\\\n                  </InputContainer>\\\\\\\\n                  <InputContainer\\\\\\\\n                    heading={\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                        Recipient Verification Status\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"custom-tooltip\\\\\\\\\\\\\\\">\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-info-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                          <span class=\\\\\\\\\\\\\\\"tooltiptext\\\\\\\\\\\\\\\">\\\\\\\\n                            To get approved and receive payments on our\\\\\\\\n                            platform, you must complete KYC/KYB verification\\\\\\\\n                            using Fractal, a trusted identity verification\\\\\\\\n                            solution. This helps others trust transactions with\\\\\\\\n                            your account. Click \\\\\\\\\\\\\\\"Get Verified\\\\\\\\\\\\\\\" to start. <br />\\\\\\\\n                            <br />\\\\\\\\n                            Once verified, your profile will display a badge,\\\\\\\\n                            which is valid for 365 days from the date of your\\\\\\\\n                            verification. You must renew your verification upon\\\\\\\\n                            expiration OR if any of your personal information\\\\\\\\n                            changes.\\\\\\\\n                          </span>\\\\\\\\n                        </div>\\\\\\\\n                      </div>\\\\\\\\n                    }\\\\\\\\n                    description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"border border-1 p-3 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.VerificationStatus\\\\\\\\\\\\\\\"\\\\\\\\n                        props={{\\\\\\\\n                          receiverAccount: receiverAccount,\\\\\\\\n                          showGetVerifiedBtn: true,\\\\\\\\n                          imageSize: 30,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </InputContainer>\\\\\\\\n                  <InputContainer\\\\\\\\n                    heading=\\\\\\\\\\\\\\\"Total Amount (USD)\\\\\\\\\\\\\\\"\\\\\\\\n                    description={\\\\\\\\n                      <>\\\\\\\\n                        Enter the exact amount you are seeking. See\\\\\\\\n                        <a\\\\\\\\n                          href={FundingDocs}\\\\\\\\n                          className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                          rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                        >\\\\\\\\n                          Funding Documentation\\\\\\\\n                        </a>\\\\\\\\n                        for guidelines.\\\\\\\\n                      </>\\\\\\\\n                    }\\\\\\\\n                  >\\\\\\\\n                    {AmountComponent}\\\\\\\\n                  </InputContainer>\\\\\\\\n                  <InputContainer\\\\\\\\n                    heading=\\\\\\\\\\\\\\\"Currency\\\\\\\\\\\\\\\"\\\\\\\\n                    description=\\\\\\\\\\\\\\\"Select your preferred currency for receiving funds. Note: The exchange rate for NEAR tokens will be the closing rate at the day of the invoice.\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    {CurrencyComponent}\\\\\\\\n                  </InputContainer>\\\\\\\\n                  <InputContainer heading=\\\\\\\\\\\\\\\"Requested Sponsor\\\\\\\\\\\\\\\" description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\">\\\\\\\\n                    {SponsorComponent}\\\\\\\\n                  </InputContainer>\\\\\\\\n                  <InputContainer\\\\\\\\n                    heading=\\\\\\\\\\\\\\\"Supervisor (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                    description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    {SupervisorComponent}\\\\\\\\n                  </InputContainer>\\\\\\\\n                </div>\\\\\\\\n              </CollapsibleContainer>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n\"}, \"devhub.components.molecule.Input\": {\"\": \"const TextInput = ({\\\\\\\\n  className,\\\\\\\\n  format,\\\\\\\\n  inputProps: { className: inputClassName, ...inputProps },\\\\\\\\n  key,\\\\\\\\n  label,\\\\\\\\n  multiline,\\\\\\\\n  onChange,\\\\\\\\n  placeholder,\\\\\\\\n  type,\\\\\\\\n  value,\\\\\\\\n  skipPaddingGap,\\\\\\\\n  style,\\\\\\\\n  error,\\\\\\\\n  ...otherProps\\\\\\\\n}) => {\\\\\\\\n  State.init({\\\\\\\\n    data: value,\\\\\\\\n    error: error,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    const inputError = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    if (value !== state.data) {\\\\\\\\n      // check for input number error (since type: number doesn\\\\\\\\\\\\'t work on firefox/safari)\\\\\\\\n      if (inputProps.inputmode === \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\") {\\\\\\\\n        const inputValue = state.data;\\\\\\\\n        if (!inputValue) {\\\\\\\\n          return;\\\\\\\\n        }\\\\\\\\n        let isValidInteger = /^[1-9][0-9]*$/.test(inputValue);\\\\\\\\n        if (!isValidInteger) {\\\\\\\\n          inputError = \\\\\\\\\\\\\\\"Please enter the nearest positive whole number.\\\\\\\\\\\\\\\";\\\\\\\\n        }\\\\\\\\n        State.update({ error: inputError });\\\\\\\\n      }\\\\\\\\n      const handler = setTimeout(() => {\\\\\\\\n        onChange({ target: { value: state.data }, error: inputError });\\\\\\\\n      }, 30);\\\\\\\\n\\\\\\\\n      return () => {\\\\\\\\n        clearTimeout(handler);\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n  }, [state.data]);\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    if (value !== state.data) {\\\\\\\\n      State.update({ data: value });\\\\\\\\n    }\\\\\\\\n  }, [value]);\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    if (error !== state.error) {\\\\\\\\n      State.update({ error: error });\\\\\\\\n    }\\\\\\\\n  }, [error]);\\\\\\\\n\\\\\\\\n  const typeAttribute =\\\\\\\\n    type === \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\" ||\\\\\\\\n    type === \\\\\\\\\\\\\\\"password\\\\\\\\\\\\\\\" ||\\\\\\\\n    type === \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\" ||\\\\\\\\n    type === \\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\\"\\\\\\\\n      ? type\\\\\\\\n      : \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n  const isValid = () => {\\\\\\\\n    if (!state.data || state.data.length === 0) {\\\\\\\\n      return !inputProps.required;\\\\\\\\n    } else if (inputProps.min && inputProps.min > state.data?.length) {\\\\\\\\n      return false;\\\\\\\\n    } else if (inputProps.max && inputProps.max < state.data?.length) {\\\\\\\\n      return false;\\\\\\\\n    } else if (\\\\\\\\n      inputProps.allowCommaAndSpace === false &&\\\\\\\\n      /^[^,\\\\\\\\\\\\\\\\s]*$/.test(state.data) === false\\\\\\\\n    ) {\\\\\\\\n      return false;\\\\\\\\n    } else if (\\\\\\\\n      inputProps.validUrl === true &&\\\\\\\\n      /^(www\\\\\\\\\\\\\\\\.)?[-a-zA-Z0-9@:%._\\\\\\\\\\\\\\\\+~#=]{2,256}\\\\\\\\\\\\\\\\.[a-z]{2,6}\\\\\\\\\\\\\\\\b([-a-zA-Z0-9@:%_\\\\\\\\\\\\\\\\+.~#?&//=]*)$/.test(\\\\\\\\n        state.data\\\\\\\\n      ) === false\\\\\\\\n    ) {\\\\\\\\n      return false;\\\\\\\\n    }\\\\\\\\n    return true;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const renderedLabels = [\\\\\\\\n    (label?.length ?? 0) > 0 ? (\\\\\\\\n      <span className=\\\\\\\\\\\\\\\"d-inline-flex gap-1 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\n        <span>{label}</span>\\\\\\\\n\\\\\\\\n        {inputProps.required ? <span className=\\\\\\\\\\\\\\\"text-danger\\\\\\\\\\\\\\\">*</span> : null}\\\\\\\\n      </span>\\\\\\\\n    ) : null,\\\\\\\\n\\\\\\\\n    format === \\\\\\\\\\\\\\\"markdown\\\\\\\\\\\\\\\" ? (\\\\\\\\n      <i class=\\\\\\\\\\\\\\\"bi bi-markdown text-muted\\\\\\\\\\\\\\\" title=\\\\\\\\\\\\\\\"Markdown\\\\\\\\\\\\\\\" />\\\\\\\\n    ) : null,\\\\\\\\n\\\\\\\\n    format === \\\\\\\\\\\\\\\"comma-separated\\\\\\\\\\\\\\\" ? (\\\\\\\\n      <span\\\\\\\\n        className={`d-inline-flex align-items-center ${\\\\\\\\n          isValid() ? \\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"text-danger\\\\\\\\\\\\\\\"\\\\\\\\n        }`}\\\\\\\\n        style={{ fontSize: 12 }}\\\\\\\\n      >\\\\\\\\n        {format}\\\\\\\\n      </span>\\\\\\\\n    ) : null,\\\\\\\\n\\\\\\\\n    (inputProps.max ?? null) !== null ? (\\\\\\\\n      <span\\\\\\\\n        className={`d-inline-flex ${isValid() ? \\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"text-danger\\\\\\\\\\\\\\\"}`}\\\\\\\\n        style={{ fontSize: 12 }}\\\\\\\\n      >{`${state.data?.length ?? 0} / ${inputProps.max}`}</span>\\\\\\\\n    ) : null,\\\\\\\\n  ].filter((label) => label !== null);\\\\\\\\n\\\\\\\\n  const onKeyDown = props.onKeyDown ?? (() => {});\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={[\\\\\\\\n        \\\\\\\\\\\\\\\"d-flex flex-column flex-1 align-items-start justify-content-evenly\\\\\\\\\\\\\\\",\\\\\\\\n        skipPaddingGap ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"gap-1 p-2\\\\\\\\\\\\\\\",\\\\\\\\n        className ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n      ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n      style={style}\\\\\\\\n      {...otherProps}\\\\\\\\n    >\\\\\\\\n      {renderedLabels.length > 0 ? (\\\\\\\\n        <span\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-items-center gap-3 w-100\\\\\\\\\\\\\\\"\\\\\\\\n          id={key}\\\\\\\\n        >\\\\\\\\n          {renderedLabels.map((label) => label)}\\\\\\\\n        </span>\\\\\\\\n      ) : null}\\\\\\\\n\\\\\\\\n      {!multiline ? (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"input-group\\\\\\\\\\\\\\\">\\\\\\\\n            {inputProps.prefix && (\\\\\\\\n              <span className=\\\\\\\\\\\\\\\"input-group-text bg-white border-end-0\\\\\\\\\\\\\\\">\\\\\\\\n                {inputProps.prefix}\\\\\\\\n              </span>\\\\\\\\n            )}\\\\\\\\n            <input\\\\\\\\n              aria-describedby={key}\\\\\\\\n              data-testid={key}\\\\\\\\n              aria-label={label}\\\\\\\\n              className={[\\\\\\\\n                \\\\\\\\\\\\\\\"form-control border\\\\\\\\\\\\\\\",\\\\\\\\n                inputClassName,\\\\\\\\n                inputProps.prefix ? \\\\\\\\\\\\\\\"border-start-0\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n              ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n              type={typeAttribute}\\\\\\\\n              maxLength={inputProps.max}\\\\\\\\n              value={state.data}\\\\\\\\n              onChange={(e) => State.update({ data: e.target.value })}\\\\\\\\n              onBlur={(e) => {\\\\\\\\n                if (props.onBlur) {\\\\\\\\n                  onBlur({ target: { value: e.target.value } });\\\\\\\\n                }\\\\\\\\n              }}\\\\\\\\n              onKeyDown={onKeyDown}\\\\\\\\n              {...{ placeholder, ...inputProps }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n          {state.error && (\\\\\\\\n            <div style={{ color: \\\\\\\\\\\\\\\"red\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">\\\\\\\\n              {state.error}\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      ) : (\\\\\\\\n        <textarea\\\\\\\\n          aria-describedby={key}\\\\\\\\n          data-testid={key}\\\\\\\\n          aria-label={label}\\\\\\\\n          className={[\\\\\\\\\\\\\\\"form-control border\\\\\\\\\\\\\\\", inputClassName].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n          placeholder={\\\\\\\\n            placeholder + (inputProps.required ? \\\\\\\\\\\\\\\" ( required )\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n          }\\\\\\\\n          style={{ resize: inputProps.resize ?? \\\\\\\\\\\\\\\"vertical\\\\\\\\\\\\\\\" }}\\\\\\\\n          type={typeAttribute}\\\\\\\\n          maxLength={inputProps.max}\\\\\\\\n          value={state.data}\\\\\\\\n          onChange={(e) => State.update({ data: e.target.value })}\\\\\\\\n          onBlur={(e) => {\\\\\\\\n            if (props.onBlur) {\\\\\\\\n              onBlur({ target: { value: e.target.value } });\\\\\\\\n            }\\\\\\\\n          }}\\\\\\\\n          onKeyDown={onKeyDown}\\\\\\\\n          {...{ placeholder, ...inputProps }}\\\\\\\\n        />\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn TextInput(props);\\\\\\\\n\"}, \"devhub.components.molecule.Checkbox\": {\"\": \"const CheckBox = ({ value, isChecked, label, onClick }) => {\\\\\\\\n  const [checked, setChecked] = useState(isChecked);\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    if (isChecked !== checked) {\\\\\\\\n      setChecked(isChecked);\\\\\\\\n    }\\\\\\\\n  }, [isChecked]);\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    onClick(checked);\\\\\\\\n  }, [checked]);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"checkbox\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={checked}\\\\\\\\n        onChange={(e) => setChecked(e.target.checked)}\\\\\\\\n      />\\\\\\\\n      <label class=\\\\\\\\\\\\\\\"form-check-label text-sm\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn CheckBox(props);\\\\\\\\n\"}, \"devhub.components.molecule.DropDown\": {\"\": \"const options = props.options; // [{label:\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",value:\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\nconst label = props.label;\\\\\\\\nconst onUpdate = props.onUpdate ?? (() => {});\\\\\\\\nconst selectedValue = props.selectedValue;\\\\\\\\nconst [selected, setSelected] = useState(selectedValue);\\\\\\\\n\\\\\\\\nconst StyledDropdown = styled.div`\\\\\\\\n  .drop-btn {\\\\\\\\n    width: 100%;\\\\\\\\n    max-width: 200px;\\\\\\\\n    text-align: left;\\\\\\\\n    padding-inline: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item.active,\\\\\\\\n  .dropdown-item:active {\\\\\\\\n    background-color: #f0f0f0 !important;\\\\\\\\n    color: black;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  onUpdate(selected);\\\\\\\\n}, [selected]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"dropdown w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <StyledDropdown>\\\\\\\\n        <button\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn drop-btn text-truncate dropdown-toggle bg-white border rounded-2\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n          aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          {label} {selected && label && \\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"} {selected.label}\\\\\\\\n        </button>\\\\\\\\n        <ul class=\\\\\\\\\\\\\\\"dropdown-menu dropdown-menu-end dropdown-menu-lg-start px-2 shadow\\\\\\\\\\\\\\\">\\\\\\\\n          {options.map((item) => (\\\\\\\\n            <li\\\\\\\\n              style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n              onClick={() => {\\\\\\\\n                if (selected.label !== item.label) {\\\\\\\\n                  setSelected(item);\\\\\\\\n                }\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {item.label}\\\\\\\\n            </li>\\\\\\\\n          ))}\\\\\\\\n        </ul>\\\\\\\\n      </StyledDropdown>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.AccountInput\": {\"\": \"const value = props.value;\\\\\\\\nconst placeholder = props.placeholder;\\\\\\\\nconst onUpdate = props.onUpdate;\\\\\\\\n\\\\\\\\nconst [account, setAccount] = useState(value);\\\\\\\\nconst [showAccountAutocomplete, setAutoComplete] = useState(false);\\\\\\\\nconst [isValidAccount, setValidAccount] = useState(true);\\\\\\\\nconst AutoComplete = styled.div`\\\\\\\\n  max-width: 400px;\\\\\\\\n  margin-top: 1rem;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (value !== account) {\\\\\\\\n    setAccount(value);\\\\\\\\n  }\\\\\\\\n}, [value]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (value !== account) {\\\\\\\\n    onUpdate(account);\\\\\\\\n  }\\\\\\\\n}, [account]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    const valid = account.length === 64 || (account ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").includes(\\\\\\\\\\\\\\\".near\\\\\\\\\\\\\\\");\\\\\\\\n    setValidAccount(valid);\\\\\\\\n    setAutoComplete(!valid);\\\\\\\\n  }, 100);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [account]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: account,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          setAccount(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        placeholder: placeholder,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 64,\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    {account && !isValidAccount && (\\\\\\\\n      <div style={{ color: \\\\\\\\\\\\\\\"red\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"text-sm mt-1\\\\\\\\\\\\\\\">\\\\\\\\n        Please enter valid account ID\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n    {showAccountAutocomplete && (\\\\\\\\n      <AutoComplete>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.AccountAutocomplete\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            term: account,\\\\\\\\n            onSelect: (id) => {\\\\\\\\n              setAccount(id);\\\\\\\\n              setAutoComplete(false);\\\\\\\\n            },\\\\\\\\n            onClose: () => setAutoComplete(false),\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </AutoComplete>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.LinkedProposalsDropdown\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst linkedProposals = props.linkedProposals;\\\\\\\\nconst onChange = props.onChange;\\\\\\\\nconst [selectedProposals, setSelectedProposals] = useState(linkedProposals);\\\\\\\\nconst [proposalsOptions, setProposalsOptions] = useState([]);\\\\\\\\nconst [searchProposalId, setSearchProposalId] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\nconst queryName =\\\\\\\\n  \\\\\\\\\\\\\\\"thomasguntenaar_near_devhub_proposals_quebec_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n${queryName}(\\\\\\\\n  offset: $offset\\\\\\\\n  limit: $limit\\\\\\\\n  order_by: {proposal_id: desc}\\\\\\\\n  where: $where\\\\\\\\n) {\\\\\\\\n  name\\\\\\\\n  proposal_id\\\\\\\\n}\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(linkedProposals) !== JSON.stringify(selectedProposals)) {\\\\\\\\n    setSelectedProposals(linkedProposals);\\\\\\\\n  }\\\\\\\\n}, [linkedProposals]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (JSON.stringify(linkedProposals) !== JSON.stringify(selectedProposals)) {\\\\\\\\n    onChange(selectedProposals);\\\\\\\\n  }\\\\\\\\n}, [selectedProposals]);\\\\\\\\n\\\\\\\\nfunction separateNumberAndText(str) {\\\\\\\\n  const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n  if (numberRegex.test(str)) {\\\\\\\\n    const number = str.match(numberRegex)[0];\\\\\\\\n    const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n    return { number: parseInt(number), text };\\\\\\\\n  } else {\\\\\\\\n    return { number: null, text: str.trim() };\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst buildWhereClause = () => {\\\\\\\\n  let where = {};\\\\\\\\n  const { number, text } = separateNumberAndText(searchProposalId);\\\\\\\\n\\\\\\\\n  if (number) {\\\\\\\\n    where = { proposal_id: { _eq: number }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (text) {\\\\\\\\n    where = { name: { _ilike: `%${text}%` }, ...where };\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return where;\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `thomasguntenaar_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst fetchProposals = () => {\\\\\\\\n  const FETCH_LIMIT = 30;\\\\\\\\n  const variables = {\\\\\\\\n    limit: FETCH_LIMIT,\\\\\\\\n    offset: 0,\\\\\\\\n    where: buildWhereClause(),\\\\\\\\n  };\\\\\\\\n  fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const proposalsData =\\\\\\\\n          result.body.data\\\\\\\\n            .thomasguntenaar_near_devhub_proposals_quebec_proposals_with_latest_snapshot;\\\\\\\\n\\\\\\\\n        const data = [];\\\\\\\\n        for (const prop of proposalsData) {\\\\\\\\n          data.push({\\\\\\\\n            label: \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + prop.proposal_id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + prop.name,\\\\\\\\n            value: prop.proposal_id,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n        setProposalsOptions(data);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  fetchProposals();\\\\\\\\n}, [searchProposalId]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {selectedProposals.map((proposal) => {\\\\\\\\n      return (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <a\\\\\\\\n            className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n            href={href({\\\\\\\\n              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n              params: {\\\\\\\\n                page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                id: proposal.value,\\\\\\\\n              },\\\\\\\\n            })}\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {proposal.label}\\\\\\\\n          </a>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => {\\\\\\\\n              const updatedLinkedProposals = selectedProposals.filter(\\\\\\\\n                (item) => item.value !== proposal.value\\\\\\\\n              );\\\\\\\\n              setSelectedProposals(updatedLinkedProposals);\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-trash3-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      );\\\\\\\\n    })}\\\\\\\\n\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDownWithSearch\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        selectedValue: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (v) => {\\\\\\\\n          if (!selectedProposals.some((item) => item.value === v.value)) {\\\\\\\\n            setSelectedProposals([...selectedProposals, v]);\\\\\\\\n          }\\\\\\\\n        },\\\\\\\\n        options: proposalsOptions,\\\\\\\\n        showSearch: true,\\\\\\\\n        searchInputPlaceholder: \\\\\\\\\\\\\\\"Search by Id\\\\\\\\\\\\\\\",\\\\\\\\n        defaultLabel: \\\\\\\\\\\\\\\"Search proposals\\\\\\\\\\\\\\\",\\\\\\\\n        searchByValue: true,\\\\\\\\n        onSearch: (value) => {\\\\\\\\n          setSearchProposalId(value);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.8567147336745e+21
    }
  },
  {
    "id": "4027665049",
    "receipt_id": "67tsar257GfB6XxjyPWSDcTnG2CFj5VGBheSpXERoay4",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6pHnAihngS18H4zEaKbh3EGjTjqaJL11k6fXBqdeyyQK",
      "block_height": 117227289,
      "block_timestamp": 1713600114303260000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "6QsiqSSWjU8KT5681ntXqsaYnGHx35yfYvXWz91wrx6f",
    "included_in_block_hash": "2mPW6aFbfo6UWGWtg9QLoLTjTZZrJ7aPEX8NkSf9B84d",
    "block_timestamp": "1713600111553083444",
    "block": {
      "block_height": 117227287
    },
    "receipt_conversion_tokens_burnt": "42870379083800000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8632868823834915e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.8567147336745e+21
    }
  },
  {
    "id": "4027735049",
    "receipt_id": "6KeytpYszo5Wj9uHfuPGGjBKdh5J8V37vwdSJytDqoCV",
    "predecessor_account_id": "petersalomonsen.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5H7tg2UTfzcBpnbyjSo37mu8QPSpSh27gqFLP8tAwbHE",
      "block_height": 117227458,
      "block_timestamp": 1713600339929309000
    },
    "receipt_outcome": {
      "gas_burnt": 7642513511454,
      "tokens_burnt": 764251351145400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "7nTHc28tKFCbcwa2SdKLhVWikkRYwmzh5BZZb6BYrLV9",
    "included_in_block_hash": "4rg1U6eWBo8Mc6QCn7wpZ7n2pXzVFZVGnmnDZuYcEatq",
    "block_timestamp": "1713600338697334586",
    "block": {
      "block_height": 117227457
    },
    "receipt_conversion_tokens_burnt": "30835911515600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 764251351145400000000,
        "args": "{\"id\": 50, \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.1442571617997e+21
    }
  },
  {
    "id": "4027736150",
    "receipt_id": "36s9dLPMq2vgnFF5S1XUV25b8rrJFgT2vwV5fqAptM9M",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6XvQCj84TDFR4JapTfgfWzKFwkxJDMnb6HXdfs9h4GRm",
      "block_height": 117227460,
      "block_timestamp": 1713600343202051600
    },
    "receipt_outcome": {
      "gas_burnt": 3491698991387,
      "tokens_burnt": 349169899138700000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "7nTHc28tKFCbcwa2SdKLhVWikkRYwmzh5BZZb6BYrLV9",
    "included_in_block_hash": "4rg1U6eWBo8Mc6QCn7wpZ7n2pXzVFZVGnmnDZuYcEatq",
    "block_timestamp": "1713600338697334586",
    "block": {
      "block_height": 117227457
    },
    "receipt_conversion_tokens_burnt": "30835911515600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349169899138700000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"petersalomonsen.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":50,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"petersalomonsen.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.1442571617997e+21
    }
  },
  {
    "id": "4070179456",
    "receipt_id": "5mikWFQDRuwghTk9chfvY7sjFSL3KrSwiBPUEuYnBNB8",
    "predecessor_account_id": "nneoma.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "35sUT5mvHfzk7jjcwvw6JKwMFpvpUEgCANFGPkUfDvnN",
      "block_height": 117345881,
      "block_timestamp": 1713746483295573500
    },
    "receipt_outcome": {
      "gas_burnt": 5203296405581,
      "tokens_burnt": 520329640558100000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "Aaui26KmJ8WYSsYULiN441p8UCs9pENMFj77qBYxvb3H",
    "included_in_block_hash": "BSaxA86ZjVMwdjqkvaEttvva1zaLXa2pdfMcACcVYw47",
    "block_timestamp": "1713746482162533837",
    "block": {
      "block_height": 117345880
    },
    "receipt_conversion_tokens_burnt": "31280862381600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_proposal",
        "deposit": 0,
        "fee": 520329640558100000000,
        "args": "{\"body\": {\"name\": \"Summary of Work Activities: Hackbox Product Manager (Mar 20 - April 20 2024)\", \"summary\": \"A summary of all work initiated and deliverables completed by Hackbox PM from March 20th to April 20th 2024\", \"category\": \"Events & Hackathons\", \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"supervisor\": \"yarotska.near\", \"description\": \"- Finalized prize delivery for Account Abstraction Hacks winners\\\\\\\\n- Finalized prize delivery for [InterUni Mini-Hackathon](https://heroes.build/bounties/bounty/486) participants via HEROES\\\\\\\\n- Aggregated GitHub repos from NEAR hackathons in the [tracking document](https://docs.google.com/spreadsheets/d/1vE1MxaHzhWHNf9xHFYPucKsp86ZPnk-KtMytZH7CW5E/edit#gid=1897032744) for the EC dataset\\\\\\\\n- Made PRs to EC dataset\\\\\\\\n- Developed [guidelines](https://docs.google.com/document/d/1X4e3xPftyQVM0xnAwAzZopq8BXtVZMOkicR0Zh_reCg/edit) for updating NEAR datasets with Owen\\\\\\\\n- Began screening Hackbox Q2 and Q3 applicants\\\\\\\\n- Produced the [Hackbox Q2 2024 Roadmap](https://docs.google.com/document/d/15YKFdH_hrV1RCVtkBjH5Huefi0VyrRzfjAD1GKH4WCw/edit#heading=h.vtm9jefb61g) detailing planned partnerships, updates, and integrations\\\\\\\\n- Supported the initiation of the Events Committee\\\\\\\\n- Supported the production of the Q2 Events budget for Events Committee review\\\\\\\\n- Engaged various partners including PitchTalk and TAIKAI to scope out the development of a NEAR-native hackathon platform\\\\\\\\n- Oversaw the budget and proposal creation for three teams with planned events for Q2 in Tunisia, Canada and Germany\\\\\\\\n- Drafted onboarding plans for Hackbox Q2 events teams\\\\\\\\n- OpenQ onboarding\\\\\\\\n- Weekly meetings with DevHub working groups and ecosystem stakeholders\\\\\\\\n\\\\\\\\n\\\\\\\\n### Timeline\\\\\\\\nStart: March 20 2024\\\\\\\\nEnd date: April 20 2024\\\\\\\\nTotal hours per week: 42\\\\\\\\nTotal hours: 168\\\\\\\\nHourly rate: $50/hr\\\\\\\\nTotal: $8400\", \"linked_proposals\": [], \"receiver_account\": \"discoballer.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"8400\", \"requested_sponsorship_paid_in_currency\": \"USDT\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6749841298182e+21
    }
  },
  {
    "id": "4070179543",
    "receipt_id": "EWSH28eAWC5LxGPCa667dgYxLB7uMojS4dn5iZpdNFt8",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "G5ar72pne8UzQXbN1DwYKpZjwKBtzDp8XTEfSDimip9C",
      "block_height": 117345882,
      "block_timestamp": 1713746484355213800
    },
    "receipt_outcome": {
      "gas_burnt": 4550689263230,
      "tokens_burnt": 455068926323000000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "Aaui26KmJ8WYSsYULiN441p8UCs9pENMFj77qBYxvb3H",
    "included_in_block_hash": "BSaxA86ZjVMwdjqkvaEttvva1zaLXa2pdfMcACcVYw47",
    "block_timestamp": "1713746482162533837",
    "block": {
      "block_height": 117345880
    },
    "receipt_conversion_tokens_burnt": "31280862381600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 455068926323000000000,
        "args": "{\"data\": {\"devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"We have just received a new *Events & Hackathons* proposal.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**By**: @nneoma.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Title**: \\\\\\\\u{201c}Summary of Work Activities: Hackbox Product Manager (Mar 20 - April 20 2024)\\\\\\\\u{201c}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Summary**:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nA summary of all work initiated and deliverables completed by Hackbox PM from March 20th to April 20th 2024\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nRead the full proposal and share your feedback on [DevHub](/devhub.near/widget/app?page=proposal&id=56)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6749841298182e+21
    }
  },
  {
    "id": "4070179548",
    "receipt_id": "72q45q38cuJd3PCFBcWKq2MvwUEfb3kABjacqk36tLRM",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "G5ar72pne8UzQXbN1DwYKpZjwKBtzDp8XTEfSDimip9C",
      "block_height": 117345882,
      "block_timestamp": 1713746484355213800
    },
    "receipt_outcome": {
      "gas_burnt": 3177797498816,
      "tokens_burnt": 317779749881600000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "Aaui26KmJ8WYSsYULiN441p8UCs9pENMFj77qBYxvb3H",
    "included_in_block_hash": "BSaxA86ZjVMwdjqkvaEttvva1zaLXa2pdfMcACcVYw47",
    "block_timestamp": "1713746482162533837",
    "block": {
      "block_height": 117345880
    },
    "receipt_conversion_tokens_burnt": "31280862381600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_block_height_callback",
        "deposit": 0,
        "fee": 317779749881600000000,
        "args": "{\"proposal\": {\"id\": 56, \"snapshot\": {\"name\": \"Summary of Work Activities: Hackbox Product Manager (Mar 20 - April 20 2024)\", \"labels\": [], \"summary\": \"A summary of all work initiated and deliverables completed by Hackbox PM from March 20th to April 20th 2024\", \"category\": \"Events & Hackathons\", \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"editor_id\": \"nneoma.near\", \"timestamp\": \"1713746483295573444\", \"supervisor\": \"yarotska.near\", \"description\": \"- Finalized prize delivery for Account Abstraction Hacks winners\\\\\\\\n- Finalized prize delivery for [InterUni Mini-Hackathon](https://heroes.build/bounties/bounty/486) participants via HEROES\\\\\\\\n- Aggregated GitHub repos from NEAR hackathons in the [tracking document](https://docs.google.com/spreadsheets/d/1vE1MxaHzhWHNf9xHFYPucKsp86ZPnk-KtMytZH7CW5E/edit#gid=1897032744) for the EC dataset\\\\\\\\n- Made PRs to EC dataset\\\\\\\\n- Developed [guidelines](https://docs.google.com/document/d/1X4e3xPftyQVM0xnAwAzZopq8BXtVZMOkicR0Zh_reCg/edit) for updating NEAR datasets with Owen\\\\\\\\n- Began screening Hackbox Q2 and Q3 applicants\\\\\\\\n- Produced the [Hackbox Q2 2024 Roadmap](https://docs.google.com/document/d/15YKFdH_hrV1RCVtkBjH5Huefi0VyrRzfjAD1GKH4WCw/edit#heading=h.vtm9jefb61g) detailing planned partnerships, updates, and integrations\\\\\\\\n- Supported the initiation of the Events Committee\\\\\\\\n- Supported the production of the Q2 Events budget for Events Committee review\\\\\\\\n- Engaged various partners including PitchTalk and TAIKAI to scope out the development of a NEAR-native hackathon platform\\\\\\\\n- Oversaw the budget and proposal creation for three teams with planned events for Q2 in Tunisia, Canada and Germany\\\\\\\\n- Drafted onboarding plans for Hackbox Q2 events teams\\\\\\\\n- OpenQ onboarding\\\\\\\\n- Weekly meetings with DevHub working groups and ecosystem stakeholders\\\\\\\\n\\\\\\\\n\\\\\\\\n### Timeline\\\\\\\\nStart: March 20 2024\\\\\\\\nEnd date: April 20 2024\\\\\\\\nTotal hours per week: 42\\\\\\\\nTotal hours: 168\\\\\\\\nHourly rate: $50/hr\\\\\\\\nTotal: $8400\", \"linked_proposals\": [], \"receiver_account\": \"discoballer.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"8400\", \"requested_sponsorship_paid_in_currency\": \"USDT\"}, \"author_id\": \"nneoma.near\", \"snapshot_history\": [], \"social_db_post_block_height\": \"0\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6749841298182e+21
    }
  },
  {
    "id": "4070179556",
    "receipt_id": "66AZBP6KwtZ1d7SUaNym6pCGw5ynsC44uTSRwRmHgZ8L",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "G5ar72pne8UzQXbN1DwYKpZjwKBtzDp8XTEfSDimip9C",
      "block_height": 117345882,
      "block_timestamp": 1713746484355213800
    },
    "receipt_outcome": {
      "gas_burnt": 3505249506739,
      "tokens_burnt": 350524950673900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "Aaui26KmJ8WYSsYULiN441p8UCs9pENMFj77qBYxvb3H",
    "included_in_block_hash": "BSaxA86ZjVMwdjqkvaEttvva1zaLXa2pdfMcACcVYw47",
    "block_timestamp": "1713746482162533837",
    "block": {
      "block_height": 117345880
    },
    "receipt_conversion_tokens_burnt": "31280862381600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 350524950673900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"[{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yarotska.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":56,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"nneoma.near\\\\\\\\\\\\\\\"}},{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":56,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"nneoma.near\\\\\\\\\\\\\\\"}}]\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6749841298182e+21
    }
  },
  {
    "id": "4077913787",
    "receipt_id": "PSvpp98GuidRiiv5oR1ddTTkq3P73Y1j45uNoot4Sry",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "CdjfmQQ6bdje52PvETLCgGCfyBvcXw4RbRLHKoxwxYMd",
      "block_height": 117369153,
      "block_timestamp": 1713774177085804500
    },
    "receipt_outcome": {
      "gas_burnt": 12952052947090,
      "tokens_burnt": 1.295205294709e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "5LXr5m5M8qACjK4iVf5kMKL7w3cksvSHToELbD5nJ1NJ",
    "included_in_block_hash": "HyAt9st2GSeQdCuN16qjb12fUHPJTH9AL1kGpxUf6WYv",
    "block_timestamp": "1713774176055802071",
    "block": {
      "block_height": 117369152
    },
    "receipt_conversion_tokens_burnt": "39381427670200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.295205294709e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.entity.addon.github.Viewer\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\nconst { useQuery } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseQuery || (useQuery = () => {});\\\\\\\\n\\\\\\\\nhref || (href = () => {});\\\\\\\\nconst { kanbanBoards, handle, permissions } = props;\\\\\\\\n\\\\\\\\nconst data = Object.values(kanbanBoards ?? {})?.[0];\\\\\\\\n\\\\\\\\nif (!kanbanBoards || !data?.metadata) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center justify-content-center gap-4\\\\\\\\\\\\\\\"\\\\\\\\n      style={{ height: 384 }}\\\\\\\\n    >\\\\\\\\n      <h5 className=\\\\\\\\\\\\\\\"h5 d-inline-flex gap-2 m-0\\\\\\\\\\\\\\\">\\\\\\\\n        {permissions.can_configure\\\\\\\\n          ? \\\\\\\\\\\\\\\"You can configure the board by clicking on the settings icon.\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"This board isn\\\\\\\\\\\\'t configured yet.\\\\\\\\\\\\\\\"}\\\\\\\\n      </h5>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Widget\\\\\\\\n    src={`devhub.near/widget/devhub.entity.addon.${data.metadata.type}`}\\\\\\\\n    props={{\\\\\\\\n      ...data,\\\\\\\\n      isConfiguratorActive: false,\\\\\\\\n      isSynced: true,\\\\\\\\n      permissions,\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.github.Configurator\": {\"\": \"const Struct = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.struct\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!Struct) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\nconst { useQuery } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\nconst { uuid, withUUIDIndex } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.uuid\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nuuid || (uuid = () => {});\\\\\\\\nwithUUIDIndex || (withUUIDIndex = () => {});\\\\\\\\nuseQuery || (useQuery = () => {});\\\\\\\\n\\\\\\\\nconst AttractableDiv = styled.div`\\\\\\\\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\\\\\\\\n  transition: box-shadow 0.6s;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst settings = {\\\\\\\\n  maxColumnsNumber: 20,\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst GithubKanbanBoardTicketFeaturesSchema = {\\\\\\\\n  id: { label: \\\\\\\\\\\\\\\"GitHub ID\\\\\\\\\\\\\\\" },\\\\\\\\n  author: { label: \\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\" },\\\\\\\\n  labels: { label: \\\\\\\\\\\\\\\"Labels\\\\\\\\\\\\\\\" },\\\\\\\\n  type: { label: \\\\\\\\\\\\\\\"Type\\\\\\\\\\\\\\\" },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst GithubKanbanBoardTicketTypesSchema = {\\\\\\\\n  issue: { label: \\\\\\\\\\\\\\\"Issue\\\\\\\\\\\\\\\" },\\\\\\\\n  pullRequest: { label: \\\\\\\\\\\\\\\"Pull Request\\\\\\\\\\\\\\\" },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst GithubKanbanBoardLabelsSchema = {\\\\\\\\n  allLabelsMust: { label: \\\\\\\\\\\\\\\"All labels must be present in ticket\\\\\\\\\\\\\\\" },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst GithubKanbanBoardDefaults = {\\\\\\\\n  columns: {\\\\\\\\n    ...withUUIDIndex({\\\\\\\\n      description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n      labelSearchTerms: [],\\\\\\\\n      title: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n      allLabelsMust: false,\\\\\\\\n    }),\\\\\\\\n  },\\\\\\\\n  dataTypesIncluded: { issue: true, pullRequest: true },\\\\\\\\n  description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  repoURL: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  ticketState: \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\",\\\\\\\\n  title: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  metadata: {\\\\\\\\n    id: uuid(),\\\\\\\\n    type: \\\\\\\\\\\\\\\"github.kanban_board\\\\\\\\\\\\\\\",\\\\\\\\n    ticket: {\\\\\\\\n      type: \\\\\\\\\\\\\\\"github.kanban_ticket\\\\\\\\\\\\\\\",\\\\\\\\n      features: { id: true, author: true, labels: true, type: true },\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst toMigrated = ({ metadata, id, ...restParams }) => ({\\\\\\\\n  ...GithubKanbanBoardDefaults,\\\\\\\\n  metadata: {\\\\\\\\n    ...GithubKanbanBoardDefaults.metadata,\\\\\\\\n    ...metadata,\\\\\\\\n    id: id ?? metadata.id,\\\\\\\\n  },\\\\\\\\n  ...restParams,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction extractOwnerAndRepo(url) {\\\\\\\\n  // Remove any leading or trailing slashes and split the URL by \\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\"\\\\\\\\n  const parts = url\\\\\\\\n    .trim()\\\\\\\\n    .replace(/^\\\\\\\\\\\\\\\\/+|\\\\\\\\\\\\\\\\/+$/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n    .split(\\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  // Check if the URL matches the GitHub repository format\\\\\\\\n  if (parts.length === 5 && parts[2] === \\\\\\\\\\\\\\\"github.com\\\\\\\\\\\\\\\") {\\\\\\\\n    const owner = parts[3];\\\\\\\\n    const repo = parts[4];\\\\\\\\n    return { owner, repo };\\\\\\\\n  } else {\\\\\\\\n    return null;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isValidGitHubRepoLink(url) {\\\\\\\\n  // Regular expression to match GitHub repository URLs\\\\\\\\n  const githubRepoRegex =\\\\\\\\n    /^(?:https?:\\\\\\\\\\\\\\\\/\\\\\\\\\\\\\\\\/)?(?:www\\\\\\\\\\\\\\\\.)?github\\\\\\\\\\\\\\\\.com\\\\\\\\\\\\\\\\/([^\\\\\\\\\\\\\\\\/]+)\\\\\\\\\\\\\\\\/([^\\\\\\\\\\\\\\\\/]+)\\\\\\\\\\\\\\\\/?$/;\\\\\\\\n\\\\\\\\n  // Check if the URL matches the GitHub repository format\\\\\\\\n  return githubRepoRegex.test(url);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst GithubViewConfigurator = ({ kanbanBoards, permissions, onSubmit }) => {\\\\\\\\n  const data = kanbanBoards ? Object.values(kanbanBoards)?.[0] : {};\\\\\\\\n\\\\\\\\n  if (!data) {\\\\\\\\n    return (\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"alert alert-danger\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n        Loading...\\\\\\\\n      </div>\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const initialBoardState = Struct.typeMatch(data)\\\\\\\\n    ? toMigrated(data)\\\\\\\\n    : GithubKanbanBoardDefaults;\\\\\\\\n\\\\\\\\n  const getColumnData = useCallback((state) => {\\\\\\\\n    if (Object.keys(state).length > 0) {\\\\\\\\n      return state?.columns ?? {};\\\\\\\\n    }\\\\\\\\n    return state;\\\\\\\\n  }, []);\\\\\\\\n\\\\\\\\n  const getNonColumnData = useCallback((state) => {\\\\\\\\n    if (Object.keys(state).length > 0) {\\\\\\\\n      delete state.columns;\\\\\\\\n      return state;\\\\\\\\n    }\\\\\\\\n    return state;\\\\\\\\n  }, []);\\\\\\\\n\\\\\\\\n  // to improve the state update speed, decoupled columns and other configuration metadata\\\\\\\\n  const [parentState, setParentState] = useState(initialBoardState);\\\\\\\\n  const [metadataState, setMetadata] = useState(\\\\\\\\n    getNonColumnData(initialBoardState)\\\\\\\\n  );\\\\\\\\n  const [showPreview, setPreview] = useState(false);\\\\\\\\n  const [columnsState, setColumnsState] = useState(\\\\\\\\n    getColumnData(initialBoardState)\\\\\\\\n  );\\\\\\\\n  const [repoLabels, setRepoLabels] = useState([]);\\\\\\\\n\\\\\\\\n  function fetchLabelsFromRepo(url) {\\\\\\\\n    const data = extractOwnerAndRepo(url);\\\\\\\\n    if (data) {\\\\\\\\n      const { repo, owner } = data;\\\\\\\\n      useCache(\\\\\\\\n        () =>\\\\\\\\n          asyncFetch(\\\\\\\\n            `https://api.github.com/repos/${owner}/${repo}/labels`\\\\\\\\n          ).then((res) => {\\\\\\\\n            if (Array.isArray(res.body)) {\\\\\\\\n              const labels = [];\\\\\\\\n              res.body.map((item) => {\\\\\\\\n                labels.push(item.name);\\\\\\\\n              });\\\\\\\\n              setRepoLabels(labels);\\\\\\\\n            }\\\\\\\\n          }),\\\\\\\\n        owner + repo + \\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\",\\\\\\\\n        { subscribe: false }\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    if (metadataState.repoURL && isValidGitHubRepoLink(metadataState.repoURL)) {\\\\\\\\n      fetchLabelsFromRepo(metadataState.repoURL);\\\\\\\\n    }\\\\\\\\n  }, [metadataState]);\\\\\\\\n\\\\\\\\n  const formUpdate =\\\\\\\\n    ({ path, via: customFieldUpdate, isColumnsUpdate, ...params }) =>\\\\\\\\n    (fieldInput) => {\\\\\\\\n      const transformFn = (node) => {\\\\\\\\n        if (typeof customFieldUpdate === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\") {\\\\\\\\n          return customFieldUpdate({\\\\\\\\n            input: fieldInput?.target?.value ?? fieldInput,\\\\\\\\n            lastKnownValue: node,\\\\\\\\n            params,\\\\\\\\n          });\\\\\\\\n        } else {\\\\\\\\n          return Struct.defaultFieldUpdate({\\\\\\\\n            input: fieldInput?.target?.value ?? fieldInput,\\\\\\\\n            lastKnownValue: node,\\\\\\\\n            params,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n      };\\\\\\\\n      const updatedValues = Struct.deepFieldUpdate(\\\\\\\\n        (isColumnsUpdate ? { columns: columnsState } : metadataState) ?? {},\\\\\\\\n        path,\\\\\\\\n        (node) => transformFn(node)\\\\\\\\n      );\\\\\\\\n      if (isColumnsUpdate) {\\\\\\\\n        setColumnsState(updatedValues?.columns);\\\\\\\\n      } else {\\\\\\\\n        setMetadata((prevFormState) => ({\\\\\\\\n          ...prevFormState,\\\\\\\\n          ...updatedValues,\\\\\\\\n        }));\\\\\\\\n      }\\\\\\\\n    };\\\\\\\\n\\\\\\\\n  const formReset = () => {\\\\\\\\n    setColumnsState(getColumnData(initialBoardState));\\\\\\\\n    setMetadata(getNonColumnData(initialBoardState));\\\\\\\\n    setParentState(initialBoardState);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const columnsCreateNew = ({ lastKnownValue }) =>\\\\\\\\n    Object.keys(lastKnownValue).length < settings.maxColumnsNumber\\\\\\\\n      ? {\\\\\\\\n          ...(lastKnownValue ?? {}),\\\\\\\\n          ...withUUIDIndex({\\\\\\\\n            description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n            labelSearchTerms: [],\\\\\\\\n            title: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n            allLabelsMust: false,\\\\\\\\n          }),\\\\\\\\n        }\\\\\\\\n      : lastKnownValue;\\\\\\\\n\\\\\\\\n  const columnsDeleteById =\\\\\\\\n    (id) =>\\\\\\\\n    ({ lastKnownValue }) =>\\\\\\\\n      Object.fromEntries(\\\\\\\\n        Object.entries(lastKnownValue).filter(([columnId]) => columnId !== id)\\\\\\\\n      );\\\\\\\\n\\\\\\\\n  const onCancel = () => {\\\\\\\\n    formReset();\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const updateParentState = () => {\\\\\\\\n    const updatedState = { ...metadataState, columns: columnsState };\\\\\\\\n    setParentState(updatedState);\\\\\\\\n    return updatedState;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const onSave = () => onSubmit(updateParentState());\\\\\\\\n\\\\\\\\n  const formElement = (\\\\\\\\n    <>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`devhub.near/widget/devhub.components.molecule.Input`}\\\\\\\\n          props={{\\\\\\\\n            className: \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\",\\\\\\\\n            key: `${metadataState.metadata.id}-repoURL`,\\\\\\\\n            label: \\\\\\\\\\\\\\\"Repository URL\\\\\\\\\\\\\\\",\\\\\\\\n            onChange: formUpdate({\\\\\\\\n              path: [\\\\\\\\\\\\\\\"repoURL\\\\\\\\\\\\\\\"],\\\\\\\\n              isColumnsUpdate: false,\\\\\\\\n            }),\\\\\\\\n            placeholder: \\\\\\\\\\\\\\\"https://github.com/example-org/example-repo\\\\\\\\\\\\\\\",\\\\\\\\n            value: metadataState.repoURL ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        <Widget\\\\\\\\n          src={`devhub.near/widget/devhub.components.molecule.Input`}\\\\\\\\n          props={{\\\\\\\\n            className: \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\",\\\\\\\\n            key: `${metadataState.metadata.id}-title`,\\\\\\\\n            label: \\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\",\\\\\\\\n            onChange: formUpdate({ path: [\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\"], isColumnsUpdate: false }),\\\\\\\\n            placeholder: \\\\\\\\\\\\\\\"NEAR Protocol NEPs\\\\\\\\\\\\\\\",\\\\\\\\n            value: metadataState.title ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        <Widget\\\\\\\\n          src={`devhub.near/widget/devhub.components.molecule.Input`}\\\\\\\\n          props={{\\\\\\\\n            className: \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\",\\\\\\\\n            key: `${metadataState.metadata.id}-description`,\\\\\\\\n            label: \\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\",\\\\\\\\n            onChange: formUpdate({\\\\\\\\n              path: [\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n              isColumnsUpdate: false,\\\\\\\\n            }),\\\\\\\\n            placeholder: \\\\\\\\\\\\\\\"Latest NEAR Enhancement Proposals by status.\\\\\\\\\\\\\\\",\\\\\\\\n            value: metadataState.description ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-1 align-items-start justify-content-evenly gap-1 p-2\\\\\\\\\\\\\\\">\\\\\\\\n        <label>Select which tasks you want to display:</label>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"input-group\\\\\\\\\\\\\\\" style={{ width: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <Widget\\\\\\\\n            src={`devhub.near/widget/devhub.components.organism.Configurator`}\\\\\\\\n            props={{\\\\\\\\n              heading: \\\\\\\\\\\\\\\"Ticket types\\\\\\\\\\\\\\\",\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"col-12 col-md-4 h-auto\\\\\\\\\\\\\\\" },\\\\\\\\n              externalState: metadataState.dataTypesIncluded,\\\\\\\\n              isActive: true,\\\\\\\\n              isEmbedded: true,\\\\\\\\n              isUnlocked: permissions.can_configure,\\\\\\\\n              onChange: formUpdate({\\\\\\\\n                path: [\\\\\\\\\\\\\\\"dataTypesIncluded\\\\\\\\\\\\\\\"],\\\\\\\\n                isColumnsUpdate: false,\\\\\\\\n              }),\\\\\\\\n              schema: GithubKanbanBoardTicketTypesSchema,\\\\\\\\n              hideSubmitBtn: true,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-1 align-items-start justify-content-evenly gap-1 p-2\\\\\\\\\\\\\\\">\\\\\\\\n        <label>Select which state of tickets you want to display:</label>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"input-group mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`devhub.near/widget/devhub.components.molecule.Switch`}\\\\\\\\n            props={{\\\\\\\\n              currentValue: metadataState.ticketState,\\\\\\\\n              key: \\\\\\\\\\\\\\\"ticketState\\\\\\\\\\\\\\\",\\\\\\\\n              onChange: formUpdate({\\\\\\\\n                path: [\\\\\\\\\\\\\\\"ticketState\\\\\\\\\\\\\\\"],\\\\\\\\n                isColumnsUpdate: false,\\\\\\\\n              }),\\\\\\\\n              options: [\\\\\\\\n                { label: \\\\\\\\\\\\\\\"All\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\" },\\\\\\\\n                { label: \\\\\\\\\\\\\\\"Open\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"open\\\\\\\\\\\\\\\" },\\\\\\\\n                { label: \\\\\\\\\\\\\\\"Closed\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"closed\\\\\\\\\\\\\\\" },\\\\\\\\n              ],\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-1 align-items-start justify-content-evenly gap-1 p-2\\\\\\\\\\\\\\\">\\\\\\\\n        <label>\\\\\\\\n          Select which items you want to display on each card in a column:\\\\\\\\n        </label>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"input-group\\\\\\\\\\\\\\\" style={{ width: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <Widget\\\\\\\\n            src={`devhub.near/widget/devhub.components.organism.Configurator`}\\\\\\\\n            props={{\\\\\\\\n              heading: \\\\\\\\\\\\\\\"Card fields\\\\\\\\\\\\\\\",\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"col-12 col-md-4 h-auto\\\\\\\\\\\\\\\" },\\\\\\\\n              externalState: metadataState.metadata.ticket.features,\\\\\\\\n              isActive: true,\\\\\\\\n              isEmbedded: true,\\\\\\\\n              isUnlocked: permissions.can_configure,\\\\\\\\n              onChange: formUpdate({\\\\\\\\n                path: [\\\\\\\\\\\\\\\"metadata\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"ticket\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"features\\\\\\\\\\\\\\\"],\\\\\\\\n                isColumnsUpdate: false,\\\\\\\\n              }),\\\\\\\\n              schema: GithubKanbanBoardTicketFeaturesSchema,\\\\\\\\n              hideSubmitBtn: true,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-between mb-2\\\\\\\\\\\\\\\">\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"d-inline-flex gap-2 m-0\\\\\\\\\\\\\\\">\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-list-task\\\\\\\\\\\\\\\" />\\\\\\\\n          <span>{`Each board configuration ( maximum allowed - ${settings.maxColumnsNumber} ) : `}</span>\\\\\\\\n        </span>\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-3 w-100 boardconfiguration\\\\\\\\\\\\\\\">\\\\\\\\n        {Object.values(columnsState ?? {}).map(\\\\\\\\n          (\\\\\\\\n            { id, description, labelSearchTerms, title, allLabelsMust },\\\\\\\\n            index\\\\\\\\n          ) => (\\\\\\\\n            <AttractableDiv\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex gap-3 rounded-4 border p-3 w-100\\\\\\\\\\\\\\\"\\\\\\\\n              key={`column-${id}-configurator`}\\\\\\\\n            >\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 w-100\\\\\\\\\\\\\\\">\\\\\\\\n                <div>Board #{index}</div>\\\\\\\\n                <Widget\\\\\\\\n                  src={`devhub.near/widget/devhub.components.molecule.Input`}\\\\\\\\n                  props={{\\\\\\\\n                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                    key: `${metadataState.metadata.id}-column-${id}-title`,\\\\\\\\n                    label: \\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\",\\\\\\\\n                    onChange: formUpdate({\\\\\\\\n                      path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\", id, \\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\"],\\\\\\\\n                      isColumnsUpdate: true,\\\\\\\\n                    }),\\\\\\\\n                    placeholder: \\\\\\\\\\\\\\\"\\\\\\\\u{1f440} Review\\\\\\\\\\\\\\\",\\\\\\\\n                    value: title,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-1 align-items-start justify-content-evenly gap-1 p-2\\\\\\\\\\\\\\\">\\\\\\\\n                  <label>Search tickets using labels:</label>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"input-group\\\\\\\\\\\\\\\">\\\\\\\\n                    <Typeahead\\\\\\\\n                      id=\\\\\\\\\\\\\\\"hashtags\\\\\\\\\\\\\\\"\\\\\\\\n                      onChange={(data) => {\\\\\\\\n                        const formUpdateFunc = formUpdate({\\\\\\\\n                          path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\", id, \\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\"],\\\\\\\\n                          isColumnsUpdate: true,\\\\\\\\n                        });\\\\\\\\n                        return formUpdateFunc(data.join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"));\\\\\\\\n                      }}\\\\\\\\n                      selected={labelSearchTerms?.[0] ? labelSearchTerms : []}\\\\\\\\n                      multiple\\\\\\\\n                      labelKey=\\\\\\\\\\\\\\\"hashtags\\\\\\\\\\\\\\\"\\\\\\\\n                      emptyLabel=\\\\\\\\\\\\\\\"Find your unique label\\\\\\\\\\\\\\\"\\\\\\\\n                      placeholder=\\\\\\\\\\\\\\\"WG-, draft, review, proposal,\\\\\\\\\\\\\\\"\\\\\\\\n                      options={repoLabels}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                </div>\\\\\\\\n                <div style={{ width: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                  <Widget\\\\\\\\n                    src={`devhub.near/widget/devhub.components.organism.Configurator`}\\\\\\\\n                    props={{\\\\\\\\n                      heading: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                      classNames: { root: \\\\\\\\\\\\\\\"col-12 col-md-4 h-auto\\\\\\\\\\\\\\\" },\\\\\\\\n                      externalState: { allLabelsMust: allLabelsMust },\\\\\\\\n                      isActive: true,\\\\\\\\n                      isEmbedded: true,\\\\\\\\n                      isUnlocked: permissions.can_configure,\\\\\\\\n                      onChange: (data) => {\\\\\\\\n                        const formUpdateFunc = formUpdate({\\\\\\\\n                          path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\", id, \\\\\\\\\\\\\\\"allLabelsMust\\\\\\\\\\\\\\\"],\\\\\\\\n                          isColumnsUpdate: true,\\\\\\\\n                        });\\\\\\\\n                        return formUpdateFunc(data[\\\\\\\\\\\\\\\"allLabelsMust\\\\\\\\\\\\\\\"]);\\\\\\\\n                      },\\\\\\\\n                      schema: GithubKanbanBoardLabelsSchema,\\\\\\\\n                      hideSubmitBtn: true,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n                <Widget\\\\\\\\n                  src={`devhub.near/widget/devhub.components.molecule.Input`}\\\\\\\\n                  props={{\\\\\\\\n                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                    key: `${metadataState.metadata.id}-column-${id}-description`,\\\\\\\\n                    label: \\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\",\\\\\\\\n                    onChange: formUpdate({\\\\\\\\n                      path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\", id, \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n                      isColumnsUpdate: true,\\\\\\\\n                    }),\\\\\\\\n                    placeholder:\\\\\\\\n                      \\\\\\\\\\\\\\\"NEPs that need a review by Subject Matter Experts.\\\\\\\\\\\\\\\",\\\\\\\\n                    value: description,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 border-start p-3 pe-0\\\\\\\\\\\\\\\"\\\\\\\\n                style={{ marginTop: -16, marginBottom: -16 }}\\\\\\\\n              >\\\\\\\\n                <button\\\\\\\\n                  className=\\\\\\\\\\\\\\\"btn btn-outline-danger\\\\\\\\\\\\\\\"\\\\\\\\n                  onClick={formUpdate({\\\\\\\\n                    path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\"],\\\\\\\\n                    via: columnsDeleteById(id),\\\\\\\\n                    isColumnsUpdate: true,\\\\\\\\n                  })}\\\\\\\\n                  title=\\\\\\\\\\\\\\\"Delete column\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  <i className=\\\\\\\\\\\\\\\"bi bi-trash-fill\\\\\\\\\\\\\\\" />\\\\\\\\n                </button>\\\\\\\\n              </div>\\\\\\\\n            </AttractableDiv>\\\\\\\\n          )\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </>\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\"\\\\\\\\n      style={{ maxWidth: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <ul className=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"editPreviewTabs\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"tablist\\\\\\\\\\\\\\\">\\\\\\\\n        <li className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n          <button\\\\\\\\n            className={`nav-link ${!showPreview ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}`}\\\\\\\\n            id=\\\\\\\\\\\\\\\"edit-tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-target=\\\\\\\\\\\\\\\"#edit\\\\\\\\\\\\\\\"\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            aria-controls=\\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\"\\\\\\\\n            aria-selected=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => setPreview(false)}\\\\\\\\n          >\\\\\\\\n            Edit\\\\\\\\n          </button>\\\\\\\\n        </li>\\\\\\\\n        <li className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n          <button\\\\\\\\n            className={`nav-link ${showPreview ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}`}\\\\\\\\n            id=\\\\\\\\\\\\\\\"preview-tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-target=\\\\\\\\\\\\\\\"#preview\\\\\\\\\\\\\\\"\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            aria-controls=\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\"\\\\\\\\n            aria-selected=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => {\\\\\\\\n              updateParentState();\\\\\\\\n              setPreview(true);\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            Preview\\\\\\\\n          </button>\\\\\\\\n        </li>\\\\\\\\n      </ul>\\\\\\\\n      {showPreview ? (\\\\\\\\n        <div>\\\\\\\\n          <Widget\\\\\\\\n            src={`devhub.near/widget/devhub.entity.addon.github.Viewer`}\\\\\\\\n            props={{\\\\\\\\n              kanbanBoards: {\\\\\\\\n                [parentState.metadata.id]: parentState,\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      ) : (\\\\\\\\n        <div className={\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\"}>\\\\\\\\n          <div className={\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100\\\\\\\\\\\\\\\"}>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-between gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <h5 className=\\\\\\\\\\\\\\\"h5 d-inline-flex gap-2 m-0\\\\\\\\\\\\\\\">\\\\\\\\n                <i className=\\\\\\\\\\\\\\\"bi bi-gear-wide-connected\\\\\\\\\\\\\\\" />\\\\\\\\n                <span>GitHub board configuration</span>\\\\\\\\n              </h5>\\\\\\\\n            </div>\\\\\\\\n            <div>\\\\\\\\n              This configuration enables integration of your GitHub repository\\\\\\\\n              as a Kanban board, facilitating issue and pull request tracking.\\\\\\\\n              You can create distinct columns to organize various items, each\\\\\\\\n              with unique labels.\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          {Object.keys(parentState).length > 0 && (\\\\\\\\n            <div>\\\\\\\\n              {formElement}\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between gap-2 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                <div style={{ minWidth: \\\\\\\\\\\\\\\"200px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                  <Widget\\\\\\\\n                    src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                    props={{\\\\\\\\n                      classNames: {\\\\\\\\n                        root: \\\\\\\\\\\\\\\"btn-sm btn-outline-secondary\\\\\\\\\\\\\\\",\\\\\\\\n                      },\\\\\\\\n                      label: \\\\\\\\\\\\\\\"Add another column\\\\\\\\\\\\\\\",\\\\\\\\n                      disabled:\\\\\\\\n                        parentState.columns &&\\\\\\\\n                        Object.keys(parentState.columns).length >=\\\\\\\\n                          settings.maxColumnsNumber,\\\\\\\\n                      icon: { type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\", variant: \\\\\\\\\\\\\\\"bi-plus-lg\\\\\\\\\\\\\\\" },\\\\\\\\n                      onClick: formUpdate({\\\\\\\\n                        path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\"],\\\\\\\\n                        via: columnsCreateNew,\\\\\\\\n                        isColumnsUpdate: true,\\\\\\\\n                      }),\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex gap-3 justify-content-end w-100\\\\\\\\\\\\\\\">\\\\\\\\n                  <Widget\\\\\\\\n                    src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                    props={{\\\\\\\\n                      classNames: {\\\\\\\\n                        root: \\\\\\\\\\\\\\\"d-flex btn btn-outline-danger shadow-none border-0\\\\\\\\\\\\\\\",\\\\\\\\n                      },\\\\\\\\n                      isHidden: typeof onCancel !== \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\",\\\\\\\\n                      label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                      onClick: onCancel,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                  <Widget\\\\\\\\n                    src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                    props={{\\\\\\\\n                      classNames: { root: \\\\\\\\\\\\\\\"btn btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n                      icon: {\\\\\\\\n                        type: \\\\\\\\\\\\\\\"svg_icon\\\\\\\\\\\\\\\",\\\\\\\\n                        variant: \\\\\\\\\\\\\\\"floppy_drive\\\\\\\\\\\\\\\",\\\\\\\\n                        width: 14,\\\\\\\\n                        height: 14,\\\\\\\\n                      },\\\\\\\\n                      isHidden: typeof onSave !== \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\",\\\\\\\\n                      label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                      onClick: onSave,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn GithubViewConfigurator(props);\\\\\\\\n\"}, \"devhub.entity.addon.github.kanban_board\": {\"\": \"const { DataRequest } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.data-request\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\nDataRequest || (DataRequest = { paginated: () => {} });\\\\\\\\n\\\\\\\\nconst resPerPage = 100;\\\\\\\\n\\\\\\\\nfunction extractOwnerAndRepo(url) {\\\\\\\\n  // Remove any leading or trailing slashes and split the URL by \\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\"\\\\\\\\n  const parts = url\\\\\\\\n    .trim()\\\\\\\\n    .replace(/^\\\\\\\\\\\\\\\\/+|\\\\\\\\\\\\\\\\/+$/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n    .split(\\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  // Check if the URL matches the GitHub repository format\\\\\\\\n  if (parts.length === 5 && parts[2] === \\\\\\\\\\\\\\\"github.com\\\\\\\\\\\\\\\") {\\\\\\\\n    const owner = parts[3];\\\\\\\\n    const repo = parts[4];\\\\\\\\n    return { owner, repo };\\\\\\\\n  } else {\\\\\\\\n    return null;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst GithubKanbanBoard = ({\\\\\\\\n  columns,\\\\\\\\n  title,\\\\\\\\n  description,\\\\\\\\n  repoURL,\\\\\\\\n  ticketState,\\\\\\\\n  dataTypesIncluded,\\\\\\\\n  metadata,\\\\\\\\n}) => {\\\\\\\\n  State.init({\\\\\\\\n    ticketsLastPage: false,\\\\\\\\n    fetchedTicketsCount: {},\\\\\\\\n    ticketsByColumn: {},\\\\\\\\n    cachedItems: {},\\\\\\\\n    displayCount: 40,\\\\\\\\n    noTicketsFound: false,\\\\\\\\n    error: null,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  const ticketStateFilter = ticketState ?? \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n  function fetchTickets(columnId, labelSearchTerms, allLabelsMust) {\\\\\\\\n    const pageNumber = !state.fetchedTicketsCount[columnId]\\\\\\\\n      ? 1\\\\\\\\n      : state.fetchedTicketsCount[columnId] / resPerPage + 1;\\\\\\\\n    const { repo, owner } = extractOwnerAndRepo(repoURL);\\\\\\\\n    const type =\\\\\\\\n      dataTypesIncluded.issue && dataTypesIncluded.pullRequest\\\\\\\\n        ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n        : dataTypesIncluded.issue\\\\\\\\n        ? \\\\\\\\\\\\\\\"type:issue\\\\\\\\\\\\\\\"\\\\\\\\n        : \\\\\\\\\\\\\\\"type:pr\\\\\\\\\\\\\\\";\\\\\\\\n    const labels = allLabelsMust\\\\\\\\n      ? (labelSearchTerms ?? []).map((item) => `label:${item}`).join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")\\\\\\\\n      : `label:${(labelSearchTerms ?? []).join(\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\")}`;\\\\\\\\n    const state =\\\\\\\\n      ticketStateFilter === \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : `state:${ticketStateFilter}`;\\\\\\\\n    const q = encodeURIComponent(\\\\\\\\n      `${labels} repo:${owner}/${repo} ${state} ${type}`\\\\\\\\n    );\\\\\\\\n    const res = fetch(\\\\\\\\n      `https://api.github.com/search/issues?per_page=${resPerPage}&page=${pageNumber}&q=${q}`\\\\\\\\n    );\\\\\\\\n\\\\\\\\n    if (res !== null) {\\\\\\\\n      if (res.status !== 200) {\\\\\\\\n        State.update({\\\\\\\\n          error:\\\\\\\\n            \\\\\\\\\\\\\\\"The listed users and repositories cannot be searched either because the resources do not exist or you do not have permission to view them.\\\\\\\\\\\\\\\",\\\\\\\\n        });\\\\\\\\n      } else {\\\\\\\\n        if (!res.body.incomplete_results) {\\\\\\\\n          State.update({\\\\\\\\n            ticketsLastPage: true,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n        if (res.body.total_count === 0) {\\\\\\\\n          State.update({\\\\\\\\n            noTicketsFound: true,\\\\\\\\n          });\\\\\\\\n        } else {\\\\\\\\n          State.update((lastKnownState) => ({\\\\\\\\n            ...lastKnownState,\\\\\\\\n            fetchedTicketsCount: {\\\\\\\\n              ...lastKnownState.fetchedTicketsCount,\\\\\\\\n              [columnId]:\\\\\\\\n                lastKnownState.fetchedTicketsCount[columnId] ?? 0 + resPerPage,\\\\\\\\n            },\\\\\\\\n            ticketsByColumn: {\\\\\\\\n              ...lastKnownState.ticketsByColumn,\\\\\\\\n              [columnId]: [\\\\\\\\n                ...(lastKnownState?.ticketsByColumn?.[columnId] ?? []),\\\\\\\\n                ...res.body.items,\\\\\\\\n              ],\\\\\\\\n            },\\\\\\\\n          }));\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (\\\\\\\\n    repoURL &&\\\\\\\\n    Object.keys(state.ticketsByColumn).length !== Object.keys(columns).length\\\\\\\\n  ) {\\\\\\\\n    Object.keys(columns).map((item) => {\\\\\\\\n      const columnId = item;\\\\\\\\n      const columnData = columns[columnId];\\\\\\\\n      fetchTickets(\\\\\\\\n        columnId,\\\\\\\\n        columnData?.labelSearchTerms,\\\\\\\\n        columnData.allLabelsMust\\\\\\\\n      );\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const renderItem = (ticket) => (\\\\\\\\n    <Widget\\\\\\\\n      src={`devhub.near/widget/devhub.entity.addon.${metadata.ticket.type}`}\\\\\\\\n      props={{ metadata: metadata.ticket, payload: ticket }}\\\\\\\\n      key={ticket.id}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const cachedRenderItem = (item, index) => {\\\\\\\\n    const key = JSON.stringify(item);\\\\\\\\n\\\\\\\\n    if (!(key in state.cachedItems)) {\\\\\\\\n      state.cachedItems[key] = renderItem(item, index);\\\\\\\\n      State.update();\\\\\\\\n    }\\\\\\\\n    return state.cachedItems[key];\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const makeMoreItems = (columnId, labelSearchTerms, allLabelsMust) => {\\\\\\\\n    const addDisplayCount = 20;\\\\\\\\n    const newDisplayCount = state.displayCount + addDisplayCount;\\\\\\\\n    State.update({\\\\\\\\n      displayCount: newDisplayCount,\\\\\\\\n    });\\\\\\\\n    if (state.fetchedTicketsCount[columnId] < 2 * newDisplayCount) {\\\\\\\\n      fetchTickets(columnId, labelSearchTerms, allLabelsMust);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-2 pb-4\\\\\\\\\\\\\\\">\\\\\\\\n        <h5 className=\\\\\\\\\\\\\\\"h5 d-inline-flex gap-2 m-0\\\\\\\\\\\\\\\">\\\\\\\\n          <span>{title}</span>\\\\\\\\n        </h5>\\\\\\\\n\\\\\\\\n        <p className=\\\\\\\\\\\\\\\"m-0 py-1 text-secondary text-center\\\\\\\\\\\\\\\">{description}</p>\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-3 w-100\\\\\\\\\\\\\\\" style={{ overflowX: \\\\\\\\\\\\\\\"auto\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {Object.keys(columns).length === 0 ? (\\\\\\\\n          <div\\\\\\\\n            className={[\\\\\\\\n              \\\\\\\\\\\\\\\"d-flex align-items-center justify-content-center\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"w-100 text-black-50 opacity-50\\\\\\\\\\\\\\\",\\\\\\\\n            ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n            style={{ height: 384 }}\\\\\\\\n          >\\\\\\\\n            No columns were created so far.\\\\\\\\n          </div>\\\\\\\\n        ) : null}\\\\\\\\n        {Object.values(columns ?? {})?.map((column) => {\\\\\\\\n          const tickets = state.ticketsByColumn[column.id]\\\\\\\\n            ? state.ticketsByColumn[column.id].slice(0, state.displayCount)\\\\\\\\n            : [];\\\\\\\\n          const renderedItems = tickets.map(cachedRenderItem);\\\\\\\\n\\\\\\\\n          return (\\\\\\\\n            <div\\\\\\\\n              className=\\\\\\\\\\\\\\\"col-3\\\\\\\\\\\\\\\"\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}\\\\\\\\n              key={`column-${column.id}-view`}\\\\\\\\n            >\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"card rounded-4\\\\\\\\\\\\\\\">\\\\\\\\n                <div\\\\\\\\n                  style={{ height: \\\\\\\\\\\\\\\"75vh\\\\\\\\\\\\\\\", overflow: \\\\\\\\\\\\\\\"auto\\\\\\\\\\\\\\\" }}\\\\\\\\n                  className={[\\\\\\\\n                    \\\\\\\\\\\\\\\"card-body d-flex flex-column gap-3 p-2\\\\\\\\\\\\\\\",\\\\\\\\n                    \\\\\\\\\\\\\\\"border border-1 rounded-4\\\\\\\\\\\\\\\",\\\\\\\\n                  ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n                  id={column.id}\\\\\\\\n                >\\\\\\\\n                  <span className=\\\\\\\\\\\\\\\"d-flex flex-column py-1\\\\\\\\\\\\\\\">\\\\\\\\n                    <h6 className=\\\\\\\\\\\\\\\"card-title h6 m-0\\\\\\\\\\\\\\\">{column.title}</h6>\\\\\\\\n                    <p class=\\\\\\\\\\\\\\\"text-secondary m-0\\\\\\\\\\\\\\\">{column.description}</p>\\\\\\\\n                  </span>\\\\\\\\n                  {state.error && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"alert alert-danger\\\\\\\\\\\\\\\">\\\\\\\\n                      Error: {state.error}\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                  {state.noTicketsFound && <p>No tickets found</p>}\\\\\\\\n                  {state.fetchedTicketsCount[column.id] > 0 && (\\\\\\\\n                    <InfiniteScroll\\\\\\\\n                      loadMore={() =>\\\\\\\\n                        makeMoreItems(\\\\\\\\n                          column.id,\\\\\\\\n                          column?.labelSearchTerms,\\\\\\\\n                          column.allLabelsMust\\\\\\\\n                        )\\\\\\\\n                      }\\\\\\\\n                      hasMore={!state.ticketsLastPage}\\\\\\\\n                      loader={<>Loading...</>}\\\\\\\\n                      useWindow={false}\\\\\\\\n                      threshold={80}\\\\\\\\n                    >\\\\\\\\n                      <div class=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        {renderedItems}\\\\\\\\n                      </div>\\\\\\\\n                    </InfiniteScroll>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          );\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn GithubKanbanBoard(props);\\\\\\\\n\"}, \"devhub.entity.community.configuration.AddonsConfigurator\": {\"\": \"const { getAllAddons } =\\\\\\\\n  VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\") ||\\\\\\\\n  (() => {});\\\\\\\\n\\\\\\\\nconst { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\") || (() => {});\\\\\\\\n\\\\\\\\nconst availableAddons = getAllAddons() || [];\\\\\\\\n\\\\\\\\nconst isActive = props.isActive;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Item = styled.div`\\\\\\\\n  padding: 10px;\\\\\\\\n  margin: 5px;\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 10px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Icon = styled.span`\\\\\\\\n  margin-right: 10px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst EditableField = styled.input`\\\\\\\\n  flex: 1;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ToggleButton = styled.input`\\\\\\\\n  margin-left: 10px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Table = styled.table`\\\\\\\\n  width: 100%;\\\\\\\\n  border-collapse: collapse;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.thead`\\\\\\\\n  background-color: #f0f0f0;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst HeaderCell = styled.th`\\\\\\\\n  padding: 10px;\\\\\\\\n  text-align: left;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Row = styled.tr``;\\\\\\\\n\\\\\\\\nconst Cell = styled.td`\\\\\\\\n  padding: 10px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nfunction generateRandom6CharUUID() {\\\\\\\\n  const chars = \\\\\\\\\\\\\\\"0123456789abcdefghijklmnopqrstuvwxyz\\\\\\\\\\\\\\\";\\\\\\\\n  let result = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n  for (let i = 0; i < 6; i++) {\\\\\\\\n    const randomIndex = Math.floor(Math.random() * chars.length);\\\\\\\\n    result += chars[randomIndex];\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return result;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AddonItem = ({\\\\\\\\n  data,\\\\\\\\n  onUpdate,\\\\\\\\n  onMove,\\\\\\\\n  onRemove,\\\\\\\\n  index,\\\\\\\\n  isTop,\\\\\\\\n  isBottom,\\\\\\\\n}) => {\\\\\\\\n  const handleNameChange = (event) => {\\\\\\\\n    const newName = event.target.value;\\\\\\\\n    onUpdate({ ...data, display_name: newName });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const handleEnableChange = () => {\\\\\\\\n    onUpdate({ ...data, enabled: !data.enabled });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const moveItemUp = () => {\\\\\\\\n    if (!isTop) {\\\\\\\\n      onMove(index, index - 1);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const moveItemDown = () => {\\\\\\\\n    if (!isBottom) {\\\\\\\\n      onMove(index, index + 1);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const removeItem = () => {\\\\\\\\n    onRemove(data.id);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const addonMatch =\\\\\\\\n    availableAddons.find((it) => it.id === data.addon_id) ?? null;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Row>\\\\\\\\n      <Cell>\\\\\\\\n        <div style={{ display: \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\", flexDirection: \\\\\\\\\\\\\\\"column\\\\\\\\\\\\\\\", gap: \\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <button\\\\\\\\n            className=\\\\\\\\\\\\\\\"btn btn-sm btn-secondary rounded-0\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={moveItemUp}\\\\\\\\n            disabled={!isActive || isTop}\\\\\\\\n            style={{ visibility: isTop && !isBottom ? \\\\\\\\\\\\\\\"hidden\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\" }}\\\\\\\\n          >\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-arrow-up\\\\\\\\\\\\\\\"></i>\\\\\\\\n          </button>\\\\\\\\n          <button\\\\\\\\n            className=\\\\\\\\\\\\\\\"btn btn-sm btn-secondary rounded-0\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={moveItemDown}\\\\\\\\n            disabled={!isActive || isBottom}\\\\\\\\n            style={{ visibility: isBottom && !isTop ? \\\\\\\\\\\\\\\"hidden\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\" }}\\\\\\\\n          >\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-arrow-down\\\\\\\\\\\\\\\"></i>\\\\\\\\n          </button>\\\\\\\\n        </div>\\\\\\\\n      </Cell>\\\\\\\\n      <Cell>\\\\\\\\n        <div>{addonMatch.title}</div>\\\\\\\\n      </Cell>\\\\\\\\n      <Cell>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            label: \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\",\\\\\\\\n            value: data.display_name,\\\\\\\\n            onChange: handleNameChange,\\\\\\\\n            inputProps: {\\\\\\\\n              min: 3,\\\\\\\\n              max: 30,\\\\\\\\n              disabled: !data.enabled || !isActive,\\\\\\\\n            },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </Cell>\\\\\\\\n      <Cell>\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\n            \\\\\\\\\\\\\\\"d-flex flex-column flex-1 align-items-start justify-content-evenly\\\\\\\\\\\\\\\"\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Toggle\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              value: data.enabled,\\\\\\\\n              onChange: handleEnableChange,\\\\\\\\n              disabled: !isActive,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </Cell>\\\\\\\\n      <Cell>\\\\\\\\n        <div style={{ display: \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\", gap: \\\\\\\\\\\\\\\"2px\\\\\\\\\\\\\\\" }}>\\\\\\\\n          {isActive && (\\\\\\\\n            <button className=\\\\\\\\\\\\\\\"btn btn-outline-danger\\\\\\\\\\\\\\\" onClick={removeItem}>\\\\\\\\n              <i className=\\\\\\\\\\\\\\\"bi bi-trash-fill\\\\\\\\\\\\\\\" />\\\\\\\\n            </button>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Cell>\\\\\\\\n    </Row>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction arraysAreEqual(arr1, arr2) {\\\\\\\\n  if (arr1.length !== arr2.length) {\\\\\\\\n    return false;\\\\\\\\n  }\\\\\\\\n  for (let i = 0; i < arr1.length; i++) {\\\\\\\\n    if (arr1[i] !== arr2[i]) {\\\\\\\\n      return false;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return true;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AddonsConfigurator = ({ data, onSubmit }) => {\\\\\\\\n  const [originalList, setOriginalList] = useState(data);\\\\\\\\n  const [list, setList] = useState(data);\\\\\\\\n  const [changesMade, setChangesMade] = useState(false);\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    setOriginalList(data);\\\\\\\\n  }, [data]);\\\\\\\\n\\\\\\\\n  const updateItem = (updatedItem) => {\\\\\\\\n    const updatedList = list.map((item) =>\\\\\\\\n      item.id === updatedItem.id ? updatedItem : item\\\\\\\\n    );\\\\\\\\n    setList(updatedList);\\\\\\\\n    setChangesMade(!arraysAreEqual(originalList, updatedList));\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const moveItem = (fromIndex, toIndex) => {\\\\\\\\n    const updatedList = [...list];\\\\\\\\n    const [movedItem] = updatedList.splice(fromIndex, 1);\\\\\\\\n    updatedList.splice(toIndex, 0, movedItem);\\\\\\\\n    setList(updatedList);\\\\\\\\n    setChangesMade(!arraysAreEqual(originalList, updatedList));\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const [selectedAddon, setSelectedAddon] = useState(null);\\\\\\\\n\\\\\\\\n  const handleAddItem = () => {\\\\\\\\n    const newItem = {\\\\\\\\n      id: generateRandom6CharUUID(),\\\\\\\\n      addon_id: selectedAddon.id,\\\\\\\\n      display_name: selectedAddon.title,\\\\\\\\n      enabled: true,\\\\\\\\n      parameters: \\\\\\\\\\\\\\\"{}\\\\\\\\\\\\\\\",\\\\\\\\n    };\\\\\\\\n    const updatedList = [...list, newItem];\\\\\\\\n    setList(updatedList);\\\\\\\\n    setChangesMade(!arraysAreEqual(originalList, updatedList));\\\\\\\\n    setSelectedAddon(null);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const removeItem = (id) => {\\\\\\\\n    const updatedList = list.filter((item) => item.id !== id);\\\\\\\\n    setList(updatedList);\\\\\\\\n    setChangesMade(!arraysAreEqual(originalList, updatedList));\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container>\\\\\\\\n      <p>\\\\\\\\n        Add or remove custom tabs, which will appear in your community\\\\\\\\\\\\'s\\\\\\\\n        navigation bar.\\\\\\\\n        <br />\\\\\\\\n        You can customize them on each page.\\\\\\\\n      </p>\\\\\\\\n      {list.length > 0 && (\\\\\\\\n        <Table>\\\\\\\\n          <Header>\\\\\\\\n            <Row>\\\\\\\\n              <HeaderCell style={{ width: \\\\\\\\\\\\\\\"30px\\\\\\\\\\\\\\\" }}>Order</HeaderCell>\\\\\\\\n              <HeaderCell>Tab Type</HeaderCell>\\\\\\\\n              <HeaderCell>Tab Name</HeaderCell>\\\\\\\\n              <HeaderCell style={{ width: \\\\\\\\\\\\\\\"45px\\\\\\\\\\\\\\\" }}>Enabled</HeaderCell>\\\\\\\\n              {isActive && (\\\\\\\\n                <HeaderCell style={{ width: \\\\\\\\\\\\\\\"40px\\\\\\\\\\\\\\\" }}>Actions</HeaderCell>\\\\\\\\n              )}\\\\\\\\n            </Row>\\\\\\\\n          </Header>\\\\\\\\n          <tbody data-testid=\\\\\\\\\\\\\\\"addon-table\\\\\\\\\\\\\\\">\\\\\\\\n            {list.map((item, index) => (\\\\\\\\n              <AddonItem\\\\\\\\n                key={item.id}\\\\\\\\n                data={item}\\\\\\\\n                onUpdate={updateItem}\\\\\\\\n                onMove={moveItem}\\\\\\\\n                onRemove={removeItem}\\\\\\\\n                index={index}\\\\\\\\n                isTop={index === 0}\\\\\\\\n                isBottom={index === list.length - 1}\\\\\\\\n              />\\\\\\\\n            ))}\\\\\\\\n          </tbody>\\\\\\\\n        </Table>\\\\\\\\n      )}\\\\\\\\n      {isActive && availableAddons && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex justify-content-center pt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-grow-1 px-4\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Select\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                options: availableAddons.map((addon) => ({\\\\\\\\n                  label: addon.title,\\\\\\\\n                  value: addon.id,\\\\\\\\n                })),\\\\\\\\n                value: selectedAddon.id ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                onChange: (e) =>\\\\\\\\n                  setSelectedAddon(\\\\\\\\n                    availableAddons.find((addon) => addon.id === e.target.value)\\\\\\\\n                  ),\\\\\\\\n                placeholder: \\\\\\\\\\\\\\\"Select an addon\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <button\\\\\\\\n              className=\\\\\\\\\\\\\\\"btn btn-success\\\\\\\\\\\\\\\"\\\\\\\\n              onClick={handleAddItem}\\\\\\\\n              disabled={!selectedAddon}\\\\\\\\n            >\\\\\\\\n              <i className=\\\\\\\\\\\\\\\"bi bi-plus\\\\\\\\\\\\\\\" />\\\\\\\\n            </button>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n      {isActive && (\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-end gap-3 mt-4\\\\\\\\\\\\\\\"}\\\\\\\\n        >\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n              disabled: !changesMade,\\\\\\\\n              icon: {\\\\\\\\n                type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                variant: \\\\\\\\\\\\\\\"bi-check-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n              },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Submit\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: () => onSubmit(list),\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn AddonsConfigurator(props);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.3345867223792e+21
    }
  },
  {
    "id": "4077914211",
    "receipt_id": "7EH8tKhmqaP87B2cQmQrxBkppg3tY1jFHSfE6XpSRHqf",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EqdsNqgsKfUQp5ec9Xnx7fa25V9Corj7p1YFEwexR8GH",
      "block_height": 117369154,
      "block_timestamp": 1713774178343355400
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "5LXr5m5M8qACjK4iVf5kMKL7w3cksvSHToELbD5nJ1NJ",
    "included_in_block_hash": "HyAt9st2GSeQdCuN16qjb12fUHPJTH9AL1kGpxUf6WYv",
    "block_timestamp": "1713774176055802071",
    "block": {
      "block_height": 117369152
    },
    "receipt_conversion_tokens_burnt": "39381427670200000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.868255199502445e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.3345867223792e+21
    }
  },
  {
    "id": "4078059590",
    "receipt_id": "Cs4qsdJm11vBEBqid65cyNfecv7gRNzjS4gf8ZDizah1",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "4Xur9fnkCAcALUAYCxN3X2qidtJ7U4j78eb2rom6LKx1",
      "block_height": 117369632,
      "block_timestamp": 1713774728324956200
    },
    "receipt_outcome": {
      "gas_burnt": 4161122341427,
      "tokens_burnt": 416112234142700000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "J5D2K274TBennMeCUUd1ZqhGFt99D7jLA95ak4JXZZHK",
    "included_in_block_hash": "J4DJ95DE6wRuqLpfjkwfjRdgDXiuaRjCSU3rSJBDZrpF",
    "block_timestamp": "1713774726924722718",
    "block": {
      "block_height": 117369631
    },
    "receipt_conversion_tokens_burnt": "30839041823200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 416112234142700000000,
        "args": "{\"id\": 53, \"timeline\": {\"status\": \"APPROVED_CONDITIONALLY\", \"sponsor_requested_review\": true, \"reviewer_completed_attestation\": true}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 797053582113800000000
    }
  },
  {
    "id": "4078060203",
    "receipt_id": "FDSHQJhbwujD5CJtNMkcBcRtJwuPXa3g54zoZrrDcEJW",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7YR5FBsoab2a7Cd7ZkbU8ACzGTLj5BgoKomxxWn2DTTp",
      "block_height": 117369633,
      "block_timestamp": 1713774729567908600
    },
    "receipt_outcome": {
      "gas_burnt": 3501023061479,
      "tokens_burnt": 350102306147900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "J5D2K274TBennMeCUUd1ZqhGFt99D7jLA95ak4JXZZHK",
    "included_in_block_hash": "J4DJ95DE6wRuqLpfjkwfjRdgDXiuaRjCSU3rSJBDZrpF",
    "block_timestamp": "1713774726924722718",
    "block": {
      "block_height": 117369631
    },
    "receipt_conversion_tokens_burnt": "30839041823200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 350102306147900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"22516c1b4e5d40db919e5e56a040c5670eac947fcb53a71207d5ce640a973820\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":53,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 797053582113800000000
    }
  },
  {
    "id": "4080410127",
    "receipt_id": "5vSuWWPX9xdJ6i5r765Uybosnrdu5NbbmgigDYPEurST",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2jHUyZo7uTwYYieqW59rnYpxjvKZkZPr8GbSVk9Tbpx2",
      "block_height": 117375522,
      "block_timestamp": 1713781809180250600
    },
    "receipt_outcome": {
      "gas_burnt": 4375906758901,
      "tokens_burnt": 437590675890100000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "A376hxPF3RhPyi3pWgXDKSAuikdaA1fimySn8A7E2fPL",
    "included_in_block_hash": "26wJ17mhsvc74kR2Sm7hyfHfmPFRnq8m9VLiB1uFrpUF",
    "block_timestamp": "1713781807891649449",
    "block": {
      "block_height": 117375521
    },
    "receipt_conversion_tokens_burnt": "31429999179400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 437590675890100000000,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.components.molecule.Compose\": {\"\": \"const EmbeddCSS = `\\\\\\\\n  .CodeMirror {\\\\\\\\n   margin-inline:10px;\\\\\\\\n   border-radius:5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  .nav-link {\\\\\\\\n    color: inherit !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card-header {\\\\\\\\n    padding-bottom: 0px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Compose = ({\\\\\\\\n  data,\\\\\\\\n  onChange,\\\\\\\\n  autocompleteEnabled,\\\\\\\\n  placeholder,\\\\\\\\n  height,\\\\\\\\n  embeddCSS,\\\\\\\\n}) => {\\\\\\\\n  State.init({\\\\\\\\n    data: data,\\\\\\\\n    selectedTab: \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\",\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    onChange(state.data);\\\\\\\\n  }, [state.data]);\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    if (data !== state.data) {\\\\\\\\n      State.update({ data: data, handler: \\\\\\\\\\\\\\\"autocompleteSelected\\\\\\\\\\\\\\\" });\\\\\\\\n    }\\\\\\\\n  }, [data]);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"card-header\\\\\\\\\\\\\\\" style={{ position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <div>\\\\\\\\n            <ul class=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\">\\\\\\\\n              <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class={`nav-link ${\\\\\\\\n                    state.selectedTab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  }`}\\\\\\\\n                  onClick={() => State.update({ selectedTab: \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" })}\\\\\\\\n                >\\\\\\\\n                  Write\\\\\\\\n                </button>\\\\\\\\n              </li>\\\\\\\\n              <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class={`nav-link ${\\\\\\\\n                    state.selectedTab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  }`}\\\\\\\\n                  onClick={() => State.update({ selectedTab: \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" })}\\\\\\\\n                >\\\\\\\\n                  Preview\\\\\\\\n                </button>\\\\\\\\n              </li>\\\\\\\\n            </ul>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {state.selectedTab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? (\\\\\\\\n          <>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.SimpleMDE\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                data: { handler: state.handler, content: state.data },\\\\\\\\n                onChange: (content) => {\\\\\\\\n                  State.update({ data: content, handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\" });\\\\\\\\n                },\\\\\\\\n                placeholder: placeholder,\\\\\\\\n                height,\\\\\\\\n                embeddCSS: embeddCSS || EmbeddCSS,\\\\\\\\n                showAutoComplete: autocompleteEnabled,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                text: state.data,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn Compose(props);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 469020675069500000000
    }
  },
  {
    "id": "4080410766",
    "receipt_id": "HUy8iujJT6W31vvNAEFJ9RU72FbkSrqxKiMNKTChN1h7",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "4U1zXUjpZQ6GhNJKVn2NitxFuvz1mBGFD4Kx4ALXWT9G",
      "block_height": 117375523,
      "block_timestamp": 1713781810530391000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "A376hxPF3RhPyi3pWgXDKSAuikdaA1fimySn8A7E2fPL",
    "included_in_block_hash": "26wJ17mhsvc74kR2Sm7hyfHfmPFRnq8m9VLiB1uFrpUF",
    "block_timestamp": "1713781807891649449",
    "block": {
      "block_height": 117375521
    },
    "receipt_conversion_tokens_burnt": "31429999179400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8763343494658902e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 469020675069500000000
    }
  },
  {
    "id": "4083614163",
    "receipt_id": "BJKYfm8H5ceKbbscXg5pRajUTVF7BWqrom2jLK217KuB",
    "predecessor_account_id": "pizzadao.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "A7EJQYG5wZBvSWP8TzwnfGhbHKfMDzfxrTP3D2Zju5zY",
      "block_height": 117382124,
      "block_timestamp": 1713789922558541000
    },
    "receipt_outcome": {
      "gas_burnt": 8000704843816,
      "tokens_burnt": 800070484381600000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "b8QdnEf4tu27T11bNuPGRV4oZaX5UZ6ZDq8d82a6cjK",
    "included_in_block_hash": "GTSRPCCL6tjMGAQ7wz9m6Hr5kDAsgvQwXP6aXLD85fX6",
    "block_timestamp": "1713789921324230021",
    "block": {
      "block_height": 117382123
    },
    "receipt_conversion_tokens_burnt": "30835911515600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 800070484381600000000,
        "args": "{\"id\": 45, \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.1803634241783e+21
    }
  },
  {
    "id": "4083614315",
    "receipt_id": "DMDeYduSS2ZBQruPTNFXtat6PG6YTv3qntfVPJSduJyJ",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "HkP6ooPt6gkB3BREcvGqfCTJ9ZkHV6shQHsxTQNetYKd",
      "block_height": 117382125,
      "block_timestamp": 1713789923844859100
    },
    "receipt_outcome": {
      "gas_burnt": 3494570282811,
      "tokens_burnt": 349457028281100000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "b8QdnEf4tu27T11bNuPGRV4oZaX5UZ6ZDq8d82a6cjK",
    "included_in_block_hash": "GTSRPCCL6tjMGAQ7wz9m6Hr5kDAsgvQwXP6aXLD85fX6",
    "block_timestamp": "1713789921324230021",
    "block": {
      "block_height": 117382123
    },
    "receipt_conversion_tokens_burnt": "30835911515600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349457028281100000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"pizzadao.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":45,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"pizzadao.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.1803634241783e+21
    }
  },
  {
    "id": "4083629510",
    "receipt_id": "GbNDX9qyeGfapXboWVZwyNSvb4aer4jFRNwSs63ZWfHU",
    "predecessor_account_id": "pizzadao.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EDfP68WojQD5Gjrb5T3RrZd2KF6Q1T66784Xs63UsHbx",
      "block_height": 117382151,
      "block_timestamp": 1713789955395580400
    },
    "receipt_outcome": {
      "gas_burnt": 3966318558603,
      "tokens_burnt": 396631855860300000000,
      "executor_account_id": "devhub.near",
      "status": false
    },
    "transaction_hash": "EcXAx363s3MdGnn9m8jeeWVpDnhuYpc4nALCEZavcvLY",
    "included_in_block_hash": "fcNxbjueSoEXfesMAmVwp4gZhHiF2WdxsocMikYBJvN",
    "block_timestamp": "1713789954426563742",
    "block": {
      "block_height": 117382150
    },
    "receipt_conversion_tokens_burnt": "31452134926000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal",
        "deposit": 0,
        "fee": 396631855860300000000,
        "args": "{\"id\": 45, \"body\": {\"name\": \"PizzaDAO Event at ETHDenver\", \"summary\": \"NEAR Dev Hub continued its PizzaDAO collaboration with an event in Denver. The event was hugely successful, with more than 700 attendees. \\\\\\\\n\\\\\\\\nVideo from Denver: https://twitter.com/Pizza_DAO/status/1772294489907814478\", \"category\": \"Events & Hackathons\", \"timeline\": {\"status\": \"DRAFT\"}, \"supervisor\": \"bpolania.near\", \"description\": \"**PizzaDAOxNearDevHub**\\\\\\\\nOver the past three years, PizzaDAO has traveled worldwide, organizing blockchain ecosystem events on every populated continent. These events have cultivated valuable relationships for the positive development of the web3 community, creating opportunities for knowledge sharing, networking, and fostering new connections among attendees worldwide.\\\\\\\\n\\\\\\\\nWe aim to throw a great pizza party at ETH Denver in partnership with NearCampus and NearDevHub, capitalizing on the synergy between our organizations to promote growth and development within the ecosystem.\\\\\\\\n\\\\\\\\n**Objectives:**\\\\\\\\nProduce an event during ETH Denver:\\\\\\\\n\\\\\\\\nPromote the NEAR Dev Hub Program and Forge New Strategic Alliances:\\\\\\\\nIncrease awareness by showcasing NEAR Dev Hub at the event. Initiate and cultivate strategic partnerships with key stakeholders in the web3 community and other relevant industries during the event.\\\\\\\\n\\\\\\\\nBring Together the Web3 Community and Local University Community:\\\\\\\\nFacilitate the convergence of the web3 community attending ETH events with the local university community. Encourage interaction, knowledge sharing, and collaboration between these two communities to foster a broader understanding of the web3 ecosystem. By achieving these objectives, PizzaDAO aims to contribute to the growth and development of the web3 ecosystem and create lasting connections and partnerships that benefit both the NEAR Dev Hub program and the broader community.\\\\\\\\n\\\\\\\\n**Event Details:**\\\\\\\\nETH Denver / https://www.ethdenver.com/\\\\\\\\nThis event was on February 28th from 6:00 PM to 9:00 PM at the historic Sports Castle. We hosted 700+ attendees and Boris spoke briefly about NEAR at the event.\\\\\\\\n\\\\\\\\nThe preparation for this event took place over a number of month, considering the local communities involved, emphasizing the importance of contacts, suppliers, and networks in ensuring event success.\\\\\\\\n\\\\\\\\nThe event had a unique graphic designed by PizzaDAO\\\\\\\\\\\\'s illustrator.\\\\\\\\n\\\\\\\\nWe produced a quality post-event video for the event:\\\\\\\\n[Denver](https://twitter.com/Pizza_DAO/status/1772294489907814478)\\\\\\\\n\\\\\\\\n**Denver Budget: $2,500**\\\\\\\\n[Link to full Denver budget details](https://docs.google.com/spreadsheets/d/13JM4x1fThsKVyPuL5X-SGafpXSeCVCVk4z1EagS2MAE/edit#gid=1374391718)\", \"linked_proposals\": [], \"receiver_account\": \"pizzadao.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"2500\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": false
    },
    "outcomes_agg": {
      "transaction_fee": 428083990786300000000
    }
  },
  {
    "id": "4084614411",
    "receipt_id": "BPYagEfjogrvyBTXKP27TnXdv5dzSSfA4JuZsQbUbgMG",
    "predecessor_account_id": "megha19.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "52FBkBu2Ku3EJZc1CUfWbymFyMLUpNQfnTS1ZSHuA6VX",
      "block_height": 117384279,
      "block_timestamp": 1713792528696504300
    },
    "receipt_outcome": {
      "gas_burnt": 5356285785891,
      "tokens_burnt": 535628578589100000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "2N96B8jxk3gxtD9arHaVsc1ZJh7A7iTQBy6MFwwz5oEg",
    "included_in_block_hash": "Dnnz6XMr8ggNXAjfFFQNo6un2Xx4ThMKELgzhnVRfmyQ",
    "block_timestamp": "1713792527750762163",
    "block": {
      "block_height": 117384278
    },
    "receipt_conversion_tokens_burnt": "31869360210400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_proposal",
        "deposit": 0,
        "fee": 535628578589100000000,
        "args": "{\"body\": {\"name\": \"DevHub Developer Contributor report by Megha for 03/25/2024 \\\\\\\\u{2013} 04/21/2024\", \"summary\": \"Improved proposals experience by reducing the lag in filling form, added autocomplete and auto-link existing proposal dropdown, worked on communities kanban board.\", \"category\": \"DevDAO Platform\", \"timeline\": {\"status\": \"DRAFT\"}, \"supervisor\": \"theori.near\", \"description\": \"#### Summary of Activities\\\\\\\\n##### Week 1 (25 Mar to 31 Mar)\\\\\\\\n- add comments view (instead of using mob\\\\\\\\u{2019}s widget) [#712](https://github.com/NEAR-DevHub/neardevhub-bos/pull/712) (5h)\\\\\\\\n- Fix minor UI issues and bugs reported by users [#708](https://github.com/NEAR-DevHub/neardevhub-bos/pull/708) (4h)\\\\\\\\n- Call with Ori and Peter regarding Kanban board issues(1h)\\\\\\\\n- Optimise search drop-down for linked proposals [#711](https://github.com/NEAR-DevHub/neardevhub-bos/pull/711) (5h)\\\\\\\\n- Call with Peter regarding communities issue (0.5h)\\\\\\\\n- Figure out issue with communities GitHub Kanban board, add new GitHub APIs, improve the labels input and form UI, enhance performance using paginated fetch and infinite scroll [#714](https://github.com/NEAR-DevHub/neardevhub-bos/pull/714) (3d)\\\\\\\\n- Test notification fix and chat with Dmitriy regarding new issues on near.org (1h)\\\\\\\\n- Merge all existing PRs (1h)\\\\\\\\n\\\\\\\\nTotal: 41.5 hours\\\\\\\\n\\\\\\\\n##### Week 2 (1 April to 7 April)\\\\\\\\n- Worked with Peter to improve the performance of create proposal and failing tests (2h)\\\\\\\\n- Call with Ori regarding communities add-on (0.5h)\\\\\\\\n- Work on Ori\\\\\\\\u{2019}s suggestions, add search terms support for GitHub kanban, added OR/AND logical support for labels [#720](https://github.com/NEAR-DevHub/neardevhub-bos/pull/720) (2d)\\\\\\\\n- Team call (0.5h)\\\\\\\\n- Add error handling for GitHub API, PR review [#720](https://github.com/NEAR-DevHub/neardevhub-bos/pull/720) (3h)\\\\\\\\n- Tried adding dropdown for mentions autocomplete in create proposal instead of scroll down [#725](https://github.com/NEAR-DevHub/neardevhub-bos/pull/725) (2d)\\\\\\\\n- Discussed with Peter about the issues with SimpleMDE and CodeMirror (1h)\\\\\\\\n\\\\\\\\nTotal: 39 hours\\\\\\\\n\\\\\\\\n##### Week 3 (8 April to 14 April)\\\\\\\\n- Worked on new bugs reported on testing channel: added user profile for likes, fixed comment issue after redirect [#729](https://github.com/NEAR-DevHub/neardevhub-bos/pull/729) (5h)\\\\\\\\n- Fixed [#726,](https://github.com/NEAR-DevHub/neardevhub-bos/issues/726) [#727](https://github.com/NEAR-DevHub/neardevhub-bos/issues/727), [#728](https://github.com/NEAR-DevHub/neardevhub-bos/issues/728) (6h)\\\\\\\\n- Discussed with Vadim about timeline status for approved state (0.5h)\\\\\\\\n- Add new features requested by Ori [#741](https://github.com/NEAR-DevHub/neardevhub-bos/pull/741)(6h)\\\\\\\\n- Helped Thomas with Merged feed issue (2h)\\\\\\\\n- Team call (0.5h)\\\\\\\\n- Figure out issue with tests failing (3h)\\\\\\\\n- Discuss with Peter about onBlur and a tag issue with KYC verification dropdown and fix timestamp [#736](https://github.com/NEAR-DevHub/neardevhub-bos/pull/736) (3h)\\\\\\\\n- Work on improving proposals lag issue, memorised each component so they update only with change in corresponding state, and few other updated [#740](https://github.com/NEAR-DevHub/neardevhub-bos/pull/740) (1d)\\\\\\\\n- Worked on Peter\\\\\\\\u{2019}s changes on dropdown selector for autocomplete, make draft work, refactor code, hide dropdown in email tag, discuss with Peter regarding few issues with its functionality [#725](https://github.com/NEAR-DevHub/neardevhub-bos/pull/725) (1d)\\\\\\\\n\\\\\\\\nTotal: 42 hours\\\\\\\\n\\\\\\\\n#### Week 4 (15 April to 21 April)\\\\\\\\n- Call with Peter about different near.org and near.social error In useMemo (0.5h)\\\\\\\\n- Work on useMemo fixes, create individual widgets with separate state for all different kinds of kind of inputs in editor page [#740](https://github.com/NEAR-DevHub/neardevhub-bos/pull/740) (1d)\\\\\\\\n- Call with Ori regarding infrastructure committee (0.5h)\\\\\\\\n- Team call (0.5h)\\\\\\\\n- Proposals lag PR requested changes (2h)\\\\\\\\n- Go through infrastructure committee tickets and figma (3h)\\\\\\\\n- Call with Ori about doubts related to infrastructure committee (0.5h)\\\\\\\\n- Created [infrastructure committee repo](https://github.com/NEAR-DevHub/near-prpsls-bos) with playwright tests and build watcher (1d)\\\\\\\\n- Fix preview in proposals [#757](https://github.com/NEAR-DevHub/neardevhub-bos/pull/757) (1h)\\\\\\\\n- Add reference drop-down for proposals markdown [#710](https://github.com/NEAR-DevHub/neardevhub-bos/issues/710) (1.5d)\\\\\\\\n- Add tests for [#758](https://github.com/NEAR-DevHub/neardevhub-bos/pull/758) (4h)\\\\\\\\n\\\\\\\\nTotal: 40 hours\\\\\\\\n\\\\\\\\nTotal Hours: 162.5\\\\\\\\nHourly rate: $50/h\\\\\\\\nTotal: 8125 USD\", \"linked_proposals\": [], \"receiver_account\": \"megha19.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"8125\", \"requested_sponsorship_paid_in_currency\": \"OTHER\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7196680076864e+21
    }
  },
  {
    "id": "4084614763",
    "receipt_id": "2r2AyLik1LUrtbuKAY3kU4xAXv3qPmm9qbqy4xiZVCnQ",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EpUsWVsNcpDRS74TRtDbrzyrGAuBoz5bzKqK8dZ5depX",
      "block_height": 117384280,
      "block_timestamp": 1713792529915256800
    },
    "receipt_outcome": {
      "gas_burnt": 4558671156146,
      "tokens_burnt": 455867115614600000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "2N96B8jxk3gxtD9arHaVsc1ZJh7A7iTQBy6MFwwz5oEg",
    "included_in_block_hash": "Dnnz6XMr8ggNXAjfFFQNo6un2Xx4ThMKELgzhnVRfmyQ",
    "block_timestamp": "1713792527750762163",
    "block": {
      "block_height": 117384278
    },
    "receipt_conversion_tokens_burnt": "31869360210400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 455867115614600000000,
        "args": "{\"data\": {\"devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"We have just received a new *DevDAO Platform* proposal.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**By**: @megha19.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Title**: \\\\\\\\u{201c}DevHub Developer Contributor report by Megha for 03/25/2024 \\\\\\\\u{2013} 04/21/2024\\\\\\\\u{201c}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Summary**:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nImproved proposals experience by reducing the lag in filling form, added autocomplete and auto-link existing proposal dropdown, worked on communities kanban board.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nRead the full proposal and share your feedback on [DevHub](/devhub.near/widget/app?page=proposal&id=57)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7196680076864e+21
    }
  }
]