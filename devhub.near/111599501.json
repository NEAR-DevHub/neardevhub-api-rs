[
  {
    "id": "2278219101",
    "receipt_id": "4St69N32D1Z1tQTiGpbdsdbGGqpE755vi4XZiuksRLnq",
    "predecessor_account_id": "victorkanu1.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "E9xmEU1DS22zpQmJuKLc4bMfgRXhimTubgdv4i1hAr8z",
      "block_height": 111599882,
      "block_timestamp": 1706523745507700000
    },
    "receipt_outcome": {
      "gas_burnt": 7966492171498,
      "tokens_burnt": 796649217149800000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "GkfRZF73SeZeZwRAbHuYng6VLiKGLLQaarjhs7RYVgoV",
    "included_in_block_hash": "7ZKB9kkcTmxSaKBvpdwxtvLY34GTetHsz5DnMkaBBxsi",
    "block_timestamp": "1706523744489841217",
    "block": {
      "block_height": 111599881
    },
    "receipt_conversion_tokens_burnt": "244091401247400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_addons",
        "deposit": 0,
        "fee": 796649217149800000000,
        "args": "{\"addons\": [{\"id\": \"p8zzt1\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Overview of Marketing Support Services\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"We provide comprehensive marketing support services tailored for NEAR DevHub and our programs, including Hackbox, NEAR Campus, and the Fellowships.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThe Marketing services included Social Media amplification through Twitter X, Twitter Spaces, LinkedIn, TikTok, Youtube, Graphic design support and the design and execution of marketing campaigns.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nWhile most of our operations are online, we can also design and help to execute and elevate IRL operations.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nIn 2024 Q3 We\\\\\\\\u{2019}ll consider using the reputation tools to gain Marketing support privileges for projects.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n------\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Our tasks\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- Once per day, the marketing team will download the form applications and upload the new requests to the spreadsheet.\\\\\\\\\\\\\\\\n- The marketing team will review the new applications and fill out the Marketing Planning Log and the Twitter Planning Log on the spreadsheet.\\\\\\\\\\\\\\\\n- Suppose the marketing team notices missing information on the applications. In that case, it will contact the project owner through Telegram to get all the information and assets required for the amplification.\\\\\\\\\\\\\\\\n- The marketing team will post the amplification on due date and fill out the X report spreadsheet into the POST DATA tab.\\\\\\\\\\\\\\\\n- Seven days after the publishing date, the marketing team will upload the post activity data to the X report.\\\\\\\\\\\\\\\\n- The marketing team will keep the Marketing Planning Log updated.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n-----\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"About us \\\\\\\\u{2b50}\\\\\\\\u{fe0f}\"}, {\"id\": \"4hy9wk\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Marketing Policies and Handbook\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"**Welcome to the NEAR DevHub Marketing Policies and Handbook \\\\\\\\u{2013}** your comprehensive guide to navigating and harnessing the power of our marketing resources. As a vital part of NEAR DevHub, this handbook aims to streamline the process of requesting marketing support for your initiatives, covering a range of services including Social Media amplification, graphic design, Twitter spaces, and the development of engaging marketing campaigns.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nWithin these pages, you\\\\\\\\\\\\'ll find clear guidelines on how to effectively communicate your marketing needs, ensuring that our team can seamlessly assist you in amplifying your projects. This handbook is your go-to resource for understanding the procedures, expectations, and collaborative opportunities that the NEAR DevHub Marketing team offers.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nBy aligning with these policies, you\\\\\\\\\\\\'ll pave the way for successful collaborations, ensuring that your projects receive the attention and support they deserve.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n-----\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Requesting Social Media Assistance\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nNEAR DevHub\\\\\\\\u{2019}s marketing team offers social media amplification through Twitter X and LinkedIn.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nNEAR DevHub team will request their amplification on this [spreadsheet](https://docs.google.com/spreadsheets/d/1wC9eZAe-dXziyuWFJBUhRJ7kAgvMW-zM9cI7dCDsPPM/edit#gid=0), filling out the info on the first tab named Request social media & Copy.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nCore Team members can also request amplification via Telegram DM to the Marketing team. The Marketing team will fill out the form for them. We suggest requesting the amplification seven to three days in advance of the publishing day. If the Core Team needs to post immediately, even on the same day, they can request it via Telegram DM.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nNEAR DevHub program partners such as Hackbox, NEAR Campus and Fellowships can request amplification by filling out the [Social Media request form](https://forms.gle/2UxKZjsKcKiT3co68).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThe amplification request through this form should be fully submitted seven days before the deadline. If they need graphic design support, they must request it before the social media amplification to provide the design asset. \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nPlease remember to share all the information available when you request amplification.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n-----\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"Request Media Assistance \\\\\\\\u{1f4fa}\"}, {\"id\": \"uy1tmi\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Graphic Design Requests\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\nNEAR DevHub\\\\\\\\u{2019}s marketing team offers graphic design support for all your needs, digital, online, and printed or produced for IRL events.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nNEAR DevHub team will request graphic design support on this spreadsheet, filling out the info on the second tab named [Request Graphic Design](https://docs.google.com/spreadsheets/d/1wC9eZAe-dXziyuWFJBUhRJ7kAgvMW-zM9cI7dCDsPPM/edit#gid=0).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nCore Team members can also request graphic design assets via Telegram DM to the Marketing team. The Marketing team will fill out the form for them. If the Core Team needs the assets immediately, even on the same day, they can request it via Telegram DM. Please consider the production times below as a reference for your request.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nNEAR DevHub program partners such as Hackbox, NEAR Campus, and Fellowships can request amplification by filling out the [Graphic Design request](https://docs.google.com/forms/d/1T1XcKNGrzvQs0BR9siaEDWQToQmTRb-ENaRSPrFns2E/edit) form.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThe graphic design support application through this form should be fully submitted some amount of days before the deadline regarding the asset requested.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**If they need graphic design and social media amplification, they need to plan ahead to share the asset on the Social Media amplification form.\\\\\\\\\\\\\\\\nPlease remember to share all the information available when you request a graphic design asset**\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"Request Design Assistance \\\\\\\\u{1f3a8}\"}, {\"id\": \"zgy5z7\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{}\", \"display_name\": \"Updates \\\\\\\\u{26a1}\\\\\\\\u{fe0f}\"}], \"handle\": \"devhub-marketing\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6265513436794e+21
    }
  },
  {
    "id": "2278219127",
    "receipt_id": "3REx56eS8326ZqJPUdKW1itJ5vve3DWnXCdm2Cy3HuCS",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EKBFpXbsRNzz6MRhQCHmtEdSxGHJsMFbDr2BVvMo4jCg",
      "block_height": 111599883,
      "block_timestamp": 1706523746623863800
    },
    "receipt_outcome": {
      "gas_burnt": 5858107252822,
      "tokens_burnt": 585810725282200000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "GkfRZF73SeZeZwRAbHuYng6VLiKGLLQaarjhs7RYVgoV",
    "included_in_block_hash": "7ZKB9kkcTmxSaKBvpdwxtvLY34GTetHsz5DnMkaBBxsi",
    "block_timestamp": "1706523744489841217",
    "block": {
      "block_height": 111599881
    },
    "receipt_conversion_tokens_burnt": "244091401247400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 585810725282200000000,
        "args": "{\"data\": {\"devhub-marketing.community.devhub.near\": {\"profile\": {\"name\": \"DevHub Marketing\", \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreif6iwbss63x2maim5bb4w6ypxkuyabnhuc4nk3dgzjaaulfxn4wvm\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6265513436794e+21
    }
  },
  {
    "id": "2279528358",
    "receipt_id": "2EpVBo1bezYRaX7qwnzT26CLE6QJqFrgvL5yJrK32JkW",
    "predecessor_account_id": "victorkanu1.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9jmbTFcqYmPNJN6PUxfMiA4djf4d5nJYUpA9D78FqrA1",
      "block_height": 111609076,
      "block_timestamp": 1706533535083635200
    },
    "receipt_outcome": {
      "gas_burnt": 7383865583871,
      "tokens_burnt": 738386558387100000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "Gpcd4rVfwgy54heiYN7FBbtLwvqpbsBSegDTqSQyhvik",
    "included_in_block_hash": "DAmZ2zTFXp6xXmtzWgdLb1qpRkbZmuQG4jPijpeKnvBK",
    "block_timestamp": "1706533533876092253",
    "block": {
      "block_height": 111609075
    },
    "receipt_conversion_tokens_burnt": "243854392243400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "update_community",
        "deposit": 0,
        "fee": 738386558387100000000,
        "args": "{\"handle\": \"devrel\", \"community\": {\"tag\": \"devrel\", \"name\": \"Decentralized DevRel\", \"addons\": [{\"id\": \"hq1s0t\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Developer Relations at near/dev/hub \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"## About Us \\\\\\\\u{1f3c6}\\\\\\\\\\\\\\\\nWe are a dynamic team of community contributors dedicated to fostering the growth of the NEAR developer community. Our mission goes beyond engagement; we actively support developers through education, seamless onboarding, and collaborative development with NEAR\\\\\\\\\\\\'s open web stack. From gathering valuable feedback to orchestrating community calls and events, our commitment is to empower you as a developer and facilitate your journey in unlocking the full potential of NEAR Protocol.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## The Team \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n1. @bpolania.near\\\\\\\\\\\\\\\\n   \\\\\\\\\\\\\\\\n   Areas of Contribution: Head of DevRel , Coordinating NEAR Campus.\\\\\\\\\\\\\\\\n   \\\\\\\\\\\\\\\\n2. @victorkanu1.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n   Areas of Contribution: Developer onboarding / engagement, Technical writing, workshops, Coordinating African initiatives, Hackathons. \\\\\\\\\\\\\\\\n   \\\\\\\\\\\\\\\\n3. @pivortex.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\tAreas of Contribution: Discord Support, Hosting workshops, Office Hours, Regional DevRel Support, Hackathons.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\n4. @orangejoe.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    Areas of Contribution: Developer Retention , Developer Onboarding, Developer Support. \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\n5. @josecouto.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    Areas of Contribution: DevHub Marketing , Twitter Management, Hackathons.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n   \\\\\\\\\\\\\\\\n6. @Flmel.near  \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n     Areas of Contribution: Developer Support, Documentation, Tooling, Office Hours.\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"Meet the team \\\\\\\\u{2b50}\\\\\\\\u{fe0f}\"}, {\"id\": \"9uriqz\", \"enabled\": true, \"addon_id\": \"blog\", \"parameters\": \"{}\", \"display_name\": \"Resources / Blogs \\\\\\\\u{1f680}\"}, {\"id\": \"ftd6ha\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Office Hours \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\nNEAR Developer Office Hours are held several times a week by DevHub or other community groups, and are a great way to level up your NEAR development or just meet other developers in the community! We host office hours on the NEAR [Discord](https://discord.com/invite/zfhfRpaM4m), which is also a great place to ask questions via chat!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n#### NEAR DevHub - Developer Office Hours \\\\\\\\u{26a1}\\\\\\\\u{fe0f}\\\\\\\\\\\\\\\\n***When***: Thursday  - 11:00 \\\\\\\\u{2013} 12:00 UTC (1:00 PM - 2:00PM CEST) & 18:00 \\\\\\\\u{2013} 19:00 UTC (11AM - 12PM PST)\\\\\\\\\\\\\\\\n***Where***: NEAR official Discord Server \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Developer Office Hours\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" Channel \\\\\\\\\\\\\\\\n- https://discord.com/channels/490367152054992913/914965851646603264\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nJoin these sessions get dev support on your projects, chat about developing on NEAR and get to know the development community better\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n----- \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n#### NEAR Build DAO \\\\\\\\u{1f3c6}\\\\\\\\\\\\\\\\nOffice hours : Wednesday -  17:00 UTC / 12pm ET\\\\\\\\\\\\\\\\n \\\\\\\\u{201c}Hack-it Fridays\\\\\\\\u{201d}: Friday -  17:00 UTC / 12pm ET\\\\\\\\\\\\\\\\n \\\\\\\\\\\\\\\\n***Where***: Info how to join these sessions can be found on the #support channel on the Build DAO Telegram https://www.nearbuilders.com/tg-builders\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n----\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n#### NEAR HORIZON Founder Fridays \\\\\\\\u{1f91d}\\\\\\\\\\\\\\\\n***When***: Friday -  14:30 - 15:15 UTC (15:30 CET) \\\\\\\\\\\\\\\\n***Where***: https://shortlink.near.foundation/horizon-office-hours-rsvp  (Requires Booking)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent geared toward Founders featuring: AMA\\\\\\\\\\\\'s from providers familiar with Web3 and NEAR ecosystem, ecosystem project demos, and updates from NDC, Horizon, and others...\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n-----\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n#### NEAR Chinese Developer Community Office Hours \\\\\\\\u{1f680}\\\\\\\\\\\\\\\\n***When***: Friday - 12:00 - 13:00 UTC (20:00-21:00 UTC +8)\\\\\\\\\\\\\\\\n***Where***: https://meeting.tencent.com/dm/srZlduGSaHfY\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThe NEAR Chinese Developer Community Office Hour is held every Friday evening at 20:00 (UTC +8), featuring updates on NEAR engineering and ecosystem, course demos and open discussions.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nNEAR\\\\\\\\u{4e2d}\\\\\\\\u{6587}\\\\\\\\u{5f00}\\\\\\\\u{53d1}\\\\\\\\u{8005}\\\\\\\\u{793e}\\\\\\\\u{533a}\\\\\\\\u{7684}Office Hour\\\\\\\\u{6bcf}\\\\\\\\u{5468}\\\\\\\\u{4e94}\\\\\\\\u{665a}\\\\\\\\u{4e0a}20:00(UTC+8)\\\\\\\\u{4e3e}\\\\\\\\u{884c}\\\\\\\\u{ff0c}\\\\\\\\u{5185}\\\\\\\\u{5bb9}\\\\\\\\u{5305}\\\\\\\\u{62ec}NEAR\\\\\\\\u{5de5}\\\\\\\\u{7a0b}\\\\\\\\u{548c}\\\\\\\\u{751f}\\\\\\\\u{6001}\\\\\\\\u{7684}\\\\\\\\u{6700}\\\\\\\\u{65b0}\\\\\\\\u{8fdb}\\\\\\\\u{5c55}\\\\\\\\u{3001}\\\\\\\\u{8bfe}\\\\\\\\u{7a0b}\\\\\\\\u{6f14}\\\\\\\\u{793a}\\\\\\\\u{4ee5}\\\\\\\\u{53ca}\\\\\\\\u{5f00}\\\\\\\\u{653e}\\\\\\\\u{5f0f}\\\\\\\\u{8ba8}\\\\\\\\u{8bba}\\\\\\\\u{3002}\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"Office hours \\\\\\\\u{1f468}\\\\\\\\u{200d}\\\\\\\\u{1f4bb}\"}, {\"id\": \"dqnckr\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{}\", \"display_name\": \"Updates \\\\\\\\u{26a1}\\\\\\\\u{fe0f}\"}], \"admins\": [\"victorkanu1.near\", \"bpolania.near\", \"pivortex.near\", \"flmel.near\", \"orangejoe.near\"], \"handle\": \"devrel\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreignlfyjejbvnclxbkiybjejjjqgelvrjyqxd4gscb2maoy3qw7ame\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreicic7xwcw4no6kqpcqlhe3hcszlkfp5u53yw5a4x4lap3uzlndbcm\", \"description\": \"Providing community management and support to developers\", \"website_url\": null, \"bio_markdown\": \"A group of community contributors who engage with the NEAR developer community, gather feedback, and coordinate community calls and events.\", \"github_handle\": null, \"twitter_handle\": null, \"telegram_handle\": \"+niaMtWIjY3ZlZTVh\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5680269188759e+21
    }
  },
  {
    "id": "2279529057",
    "receipt_id": "4zc95xUh92kQf8mPetrwznr9VrR4M3d7nA2r5jxHqB73",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5ULDXJRg6gQzDhJ86YuqYkAd8m39TMFD1ZqfLs6FgoBG",
      "block_height": 111609077,
      "block_timestamp": 1706533536220605000
    },
    "receipt_outcome": {
      "gas_burnt": 5857859682454,
      "tokens_burnt": 585785968245400000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "Gpcd4rVfwgy54heiYN7FBbtLwvqpbsBSegDTqSQyhvik",
    "included_in_block_hash": "DAmZ2zTFXp6xXmtzWgdLb1qpRkbZmuQG4jPijpeKnvBK",
    "block_timestamp": "1706533533876092253",
    "block": {
      "block_height": 111609075
    },
    "receipt_conversion_tokens_burnt": "243854392243400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 585785968245400000000,
        "args": "{\"data\": {\"devrel.community.devhub.near\": {\"profile\": {\"name\": \"Decentralized DevRel\", \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreignlfyjejbvnclxbkiybjejjjqgelvrjyqxd4gscb2maoy3qw7ame\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5680269188759e+21
    }
  },
  {
    "id": "2280290499",
    "receipt_id": "2AtUsxFcA83TNQQ9XJwssHk1mJjAEAwC1xbTiidmpsKr",
    "predecessor_account_id": "victorkanu1.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "H7UvYSSEwporXMamfZK9aTrf2eZXQ3D8gzDW4n7vQNuM",
      "block_height": 111614075,
      "block_timestamp": 1706538865184760300
    },
    "receipt_outcome": {
      "gas_burnt": 7733273033458,
      "tokens_burnt": 773327303345800000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "3utdXmVFnruZDuKDtCEXp9YWYVdn5Hvb4C8AtFkz6diz",
    "included_in_block_hash": "Fej8RWz1MJ4SAbFP8KMomMdSLHj3JRDMqGEcrkULvimS",
    "block_timestamp": "1706538864212404134",
    "block": {
      "block_height": 111614074
    },
    "receipt_conversion_tokens_burnt": "243278862831800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_addon",
        "deposit": 0,
        "fee": 773327303345800000000,
        "args": "{\"handle\": \"contract-standards\", \"community_addon\": {\"id\": \"tzf4ez\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Contract Community / WG Calls\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"**Welcome to our Community Call Recap Space! Here, you can catch up on the latest highlights and summaries of our community calls and stay informed about upcoming events.**\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### [Working Group Call] - June 30th, 2023 \\\\\\\\\\\\\\\\n**MODERATOR :** Maxwell S\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**VIDEO :** [Contract Standards Work Group Meeting \\\\\\\\u{2013} June 30th, 2023](https://youtu.be/S1An5CDG154)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**AGENDA**\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n* Objective\\\\\\\\\\\\\\\\n* Introductions\\\\\\\\\\\\\\\\n* Discussion: NEP-393 Soulbound Token\\\\\\\\\\\\\\\\n* Voting Decision\\\\\\\\\\\\\\\\n* Getting Involved\\\\\\\\\\\\\\\\n* NOTES\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**NEP-393 Soulbound Token**: This NEP introduces wallet-bound non-fungible tokens on NEAR, known as Soulbound tokens. These tokens cannot be easily transferred from wallet to wallet, serving as a form of wallet identification and credentialing. This implementation includes tools for transferring credentials, such as bans or deletions, of the transferring wallet.\\\\\\\\\\\\\\\\nVOTE DECISION\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**NEP-393: Approved**\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**ACTION ITEMS**\\\\\\\\\\\\\\\\n- Robert Z: Fill out the \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Changelog\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" section in the NEP with the reference to the video recording of WG call, benefit and concerns table.\\\\\\\\\\\\\\\\n- Vlad F: Approve and merge the NEP.\\\\\\\\\\\\\\\\n- Robert Z: Endorse SBT support in Wallets.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**RELATED RESOURCES**\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- NEP-393 Soulbound Token on GitHub: [LINK](https://github.com/near/NEPs/pull/393)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n---------\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### [Community Call] - May 25th, 2023\\\\\\\\\\\\\\\\nAnyone can propose topics and join the community call for discussion.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**MODERATOR:** Maxwell S\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**VIDEO:** [Contract Standards Community Group Call #3 \\\\\\\\u{2013} NEAR DevHub September 27th, 2023\\\\\\\\\\\\\\\\n](https://youtu.be/T0qMj1zGA3U)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**AGENDA** \\\\\\\\\\\\\\\\n- Discussion on incentivizing completion of the Multitoken standard and what the blockers might be.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**OUTCOMES**\\\\\\\\\\\\\\\\n- Ken from NEAR Horizon offered to do some unblocking work to move NEP-245 forward in the coming weeks.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n----------\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"Community Events \\\\\\\\u{1f4fa}\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.607112458966e+21
    }
  },
  {
    "id": "2280290539",
    "receipt_id": "Cm3PFNCHcmLKDErDURVj2pGfbK391FnAFWvE1SgQ4MQD",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "z4XsPfSNZhoENQyddKT4d9qujL6Q8W54GRvEVC9ujpG",
      "block_height": 111614076,
      "block_timestamp": 1706538866295512600
    },
    "receipt_outcome": {
      "gas_burnt": 5905062927884,
      "tokens_burnt": 590506292788400000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "3utdXmVFnruZDuKDtCEXp9YWYVdn5Hvb4C8AtFkz6diz",
    "included_in_block_hash": "Fej8RWz1MJ4SAbFP8KMomMdSLHj3JRDMqGEcrkULvimS",
    "block_timestamp": "1706538864212404134",
    "block": {
      "block_height": 111614074
    },
    "receipt_conversion_tokens_burnt": "243278862831800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 590506292788400000000,
        "args": "{\"data\": {\"contract-standards.community.devhub.near\": {\"profile\": {\"name\": \"Contract Standards\", \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreieuxcx2oy5xbnhgppedsm7sym2xass4acgcvkxyaytf5igyoqitva\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.607112458966e+21
    }
  },
  {
    "id": "2288327047",
    "receipt_id": "HJD45WgwG6JTH9whXP5RUuKT2oruawdbRY6gih6m6dbP",
    "predecessor_account_id": "pivortex.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "D2MZBfFNs3rgZ4j9qSam6cia3S8rDfnzRTSgnpjofDVt",
      "block_height": 111682645,
      "block_timestamp": 1706610563486163000
    },
    "receipt_outcome": {
      "gas_burnt": 7942020888370,
      "tokens_burnt": 794202088837000000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "D4h9UqochyMCWh4XBZeFAS2S7t15ggKPf2Eie9AmmxvS",
    "included_in_block_hash": "BXAr6JTXRLxK2waqQcjqRkBbnUJzCuPBAw7HiGGXkCMw",
    "block_timestamp": "1706610562416284915",
    "block": {
      "block_height": 111682644
    },
    "receipt_conversion_tokens_burnt": "243371877686200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_addon",
        "deposit": 0,
        "fee": 794202088837000000000,
        "args": "{\"handle\": \"zero-knowledge\", \"community_addon\": {\"id\": \"8m9guu\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Projects\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"If you have a ZK project building on NEAR and would like it featured here or have an update for a featured project, please fill out this [Google form](https://forms.gle/whyTeNXBWUYJAnpn7).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Electron Labs\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nElectron is building the next generation of ZK-Light clients that enable ZK-proving of consensus protocols. Electron is launching ZK-Proof aggregation that will enable multiple proofs from different chains to be aggregated together into a single proof.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### How to contribute \\\\\\\\\\\\\\\\nThe project is open source. Anyone who wishes to collaborate can open a PR via [GitHub](https://github.com/Electron-Labs).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Links \\\\\\\\\\\\\\\\n- [Website](https://electronlabs.org/)\\\\\\\\\\\\\\\\n- [GitHub](https://github.com/Electron-Labs)\\\\\\\\\\\\\\\\n- [Twitter](https://twitter.com/labs_electron)\\\\\\\\\\\\\\\\n- [LinkedIn](https://www.linkedin.com/company/electron-labs/)\\\\\\\\\\\\\\\\n- [Youtube](https://www.youtube.com/@electronlabs)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Zpoken\\\\\\\\\\\\\\\\nZpoken is a web3 development organization focusing on cryptography research and decentralized tech. Zpoken is building a NEAR ZK Light Client. \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### How to contribute\\\\\\\\\\\\\\\\nThe project is open source. Anyone who wishes to collaborate can open a PR via [GitHub](https://github.com/ZpokenWeb3).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Links\\\\\\\\\\\\\\\\n- [Website](https://zpoken.io/)\\\\\\\\\\\\\\\\n- [GitHub](https://github.com/ZpokenWeb3)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Opact\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nOpact is a decentralized private transactions protocol designed for well-intended users. It breaks the link between the sender and the receiver of a transaction utilizing zero-knowledge proofs. To be able to use it, you have to be accepted into an allowlist connected to KYT providers, which block wallets involved in malicious activities, such as hacking.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### How to contribute \\\\\\\\\\\\\\\\nThe project is open source. Anyone who wishes to collaborate can open a PR via [Github](https://github.com/opact-protocol) directly or get in contact with Hack-a-Chain\\\\\\\\u{2019}s team on [Telegram](t.me/hackachain).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Links\\\\\\\\\\\\\\\\n- [Website](https://www.opact.io/)\\\\\\\\\\\\\\\\n- [Application](https://tickets.opact.io/)\\\\\\\\\\\\\\\\n- [Docs](https://docs.tickets.opact.io/)\\\\\\\\\\\\\\\\n- [Github](https://github.com/opact-protocol)\\\\\\\\\\\\\\\\n- NEAR ZK Tools \\\\\\\\\\\\\\\\n    - [Groth16 verifier](https://crates.io/crates/near_groth16_verifier)\\\\\\\\\\\\\\\\n    - [Plonk verifier](https://github.com/opact-protocol/tickets/tree/main/packages/contract-libraries/plonk_verifier)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\"}\", \"display_name\": \"Projects\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6272183998564e+21
    }
  },
  {
    "id": "2288327068",
    "receipt_id": "F6WhrY184iN2DB775BrhTmsEA9EECR31SmYx3LqsR535",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9AKpDN6bTbj2ZVtGwdHwT2vtAhspSKHzSVjKRSqfyr3a",
      "block_height": 111682646,
      "block_timestamp": 1706610564408417000
    },
    "receipt_outcome": {
      "gas_burnt": 5896444333332,
      "tokens_burnt": 589644433333200000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "D4h9UqochyMCWh4XBZeFAS2S7t15ggKPf2Eie9AmmxvS",
    "included_in_block_hash": "BXAr6JTXRLxK2waqQcjqRkBbnUJzCuPBAw7HiGGXkCMw",
    "block_timestamp": "1706610562416284915",
    "block": {
      "block_height": 111682644
    },
    "receipt_conversion_tokens_burnt": "243371877686200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 589644433333200000000,
        "args": "{\"data\": {\"zero-knowledge.community.devhub.near\": {\"profile\": {\"name\": \"Zero Knowledge\", \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreiaac3oa4kuwtq4k37toegyrvac4u4sowegowlioagxhq46pvmw2wy\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6272183998564e+21
    }
  },
  {
    "id": "2288783168",
    "receipt_id": "7EzDEFjgLqcUmtPrUGwAJagqmbr4RHUnqb12LzkwHExA",
    "predecessor_account_id": "pivortex.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "HBTxMA25E1jA9kAnnoVqVkRLjHjhvWyfRJGLHQV1XmZw",
      "block_height": 111685559,
      "block_timestamp": 1706613678326856000
    },
    "receipt_outcome": {
      "gas_burnt": 7966846879970,
      "tokens_burnt": 796684687997000000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "GP4g5CGoPbJxo6UxPKdirj6NniwkrypCuYcc7qbYPdh4",
    "included_in_block_hash": "avb9iJ1KspC5Y72qzF3f4XtYKbLaRDaMgMYzb3az7AM",
    "block_timestamp": "1706613677301534179",
    "block": {
      "block_height": 111685558
    },
    "receipt_conversion_tokens_burnt": "243475401430400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_addon",
        "deposit": 0,
        "fee": 796684687997000000000,
        "args": "{\"handle\": \"zero-knowledge\", \"community_addon\": {\"id\": \"lv25d8\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"About\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Zero Knowledge (ZK) proof is a method for verifying a transaction without disclosing the details of the transaction. This technology has various use cases within blockchain, such as enhancing scalability and privacy.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThis community brings together individuals, experts, and organizations who are interested in developing a ZK ecosystem on NEAR. Our vision is to drive the development of ZK technology and explore its potential applications.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Structure \\\\\\\\\\\\\\\\nThe Zero Knowledge community consists of two groups: the community group and the work group working group. \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Community Group\\\\\\\\\\\\\\\\nThis informal self-organized group provides a space for anyone interested in Zero Knowledge and its applications. While this group does not make official decisions, it offers a great opportunity to meet with others to share ideas and submit proposals. This group is not controlled by anyone but the people who are organizing it. The group has a dedicated Telegram channel as well as regular monthly calls.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Working Group\\\\\\\\\\\\\\\\nThis formal group is a selected committee of subject matter experts who make official decisions on proposals and questions related to Zero Knowledge on NEAR. They follow a strict process to review proposals, recommend funding to DAO, and hold grant takers accountable. They also engage with the broader community to understand their needs and encourage ideation.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Members**\\\\\\\\\\\\\\\\n- Anton Yezhov (@yezhov.near)\\\\\\\\\\\\\\\\n- Garvit Goel (@garvit_electron.near)\\\\\\\\\\\\\\\\n- Igor Gulamov (@igorgulamov.near)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Communication Channels \\\\\\\\\\\\\\\\nThe ZK community communicates through the [ZK Telegram group](https://t.me/NearZeroKnowledge).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThe community also community calls that take place every two months, the recordings can be found [here](https://www.youtube.com/playlist?list=PLrLLmjcJVAB9H6Jhm33S7nhwSadQplbGD). These calls give the community a chance to discuss current topics, discuss proposals and share what they have been working on. If you have a topic suggestion please reach out on Telegram.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nOur next community call is taking place in  **February**.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## How to get involved \\\\\\\\\\\\\\\\nThe best way to get involved is to join the discussion happening on our Telegram and our community calls. If you would like to contribute to an ZK project within the ecosystem check out the [Projects](https://near.social/devhub.near/widget/app?page=community&handle=zero-knowledge&tab=Projects) tab  If you have an idea or solution for enhancing ZK on NEAR please see the [Proposals](https://near.social/devhub.near/widget/app?page=community&handle=zero-knowledge&tab=Proposals) tab.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Resources\\\\\\\\\\\\\\\\nTo be completed.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nIf you have an idea to improve this page or spot an error please fill in this [Google form](https://forms.gle/whyTeNXBWUYJAnpn7).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\"}\", \"display_name\": \"About\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6298045227606e+21
    }
  },
  {
    "id": "2288783762",
    "receipt_id": "8vLk3L6UnCfmsfJSJTUu9UzhiBSu9feZwZi73SvYuriw",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "igLzfjejMNSjcKjW4DwuQjWNuMTg79a2TmwZwib5EiT",
      "block_height": 111685560,
      "block_timestamp": 1706613679359351000
    },
    "receipt_outcome": {
      "gas_burnt": 5896444333332,
      "tokens_burnt": 589644433333200000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "GP4g5CGoPbJxo6UxPKdirj6NniwkrypCuYcc7qbYPdh4",
    "included_in_block_hash": "avb9iJ1KspC5Y72qzF3f4XtYKbLaRDaMgMYzb3az7AM",
    "block_timestamp": "1706613677301534179",
    "block": {
      "block_height": 111685558
    },
    "receipt_conversion_tokens_burnt": "243475401430400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 589644433333200000000,
        "args": "{\"data\": {\"zero-knowledge.community.devhub.near\": {\"profile\": {\"name\": \"Zero Knowledge\", \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreiaac3oa4kuwtq4k37toegyrvac4u4sowegowlioagxhq46pvmw2wy\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6298045227606e+21
    }
  },
  {
    "id": "2290373803",
    "receipt_id": "44PzJGFuk5z6dRm8217FiAZHe7UcZd5mjmm55QVoHd9t",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8HuBN7pmuzBQMyfMewAkt4jSZ1tDcz5qqwSn8rjovMF4",
      "block_height": 111695661,
      "block_timestamp": 1706624542080384300
    },
    "receipt_outcome": {
      "gas_burnt": 7397635577548,
      "tokens_burnt": 739763557754800000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "JAp14LJwrQEdbhKbP3k7j9BNDx8SkZt1L6r8MFKSvxsf",
    "included_in_block_hash": "A51KzH98qYgWF7Hn4PpHfALxDQF5H1sETfbe4DKzULS8",
    "block_timestamp": "1706624541256236778",
    "block": {
      "block_height": 111695660
    },
    "receipt_conversion_tokens_burnt": "243845895694200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "update_community",
        "deposit": 0,
        "fee": 739763557754800000000,
        "args": "{\"handle\": \"tooling\", \"community\": {\"tag\": \"tooling\", \"name\": \"Tooling\", \"addons\": [{\"id\": \"duxizk\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Overview\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#### COMMUNITY\\\\\\\\\\\\\\\\n- 47 members\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### NEPS\\\\\\\\\\\\\\\\n- NEP-418 Proposal to allow attached_deposit in view contexts - [LINK](https://github.com/near/NEPs/pull/418)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## STRUCTURE\\\\\\\\\\\\\\\\nThe Tooling community consists of two main groups:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Working Group\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThis formal group is a selected committee of subject matter experts who make official decisions on proposals and questions related to the NEAR dApp standards. They follow a strict process to review proposals, recommend funding to DAO or grant programs, and hold grant takers accountable. They engage with the broader community to understand their needs and encourage ideation.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Members**\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- [Bo Yao](https://github.com/ailisp)\\\\\\\\\\\\\\\\n- [David Millar-Durrant](https://github.com/DavidM-D)\\\\\\\\\\\\\\\\n- [Serhii Volovyk](https://github.com/volovyks)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Community Group\\\\\\\\\\\\\\\\nThis informal self-organized group provides a space for anyone interested in the NEAR tooling. While this group does not make official decisions, it offers a great opportunity to meet with others to share ideas and submit proposals. This group is not controlled by anyone but the people who are organizing it. The group has a dedicated Telegram channel.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### Communication Channels\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- [Tooling Community Group in Telegram](https://t.me/NEAR_Tools_Community_Group)\\\\\\\\\\\\\\\\n- Here on the Discussions page!\\\\\\\\\\\\\\\\n- Check the Events tab for upcoming Community/Work Group calls.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nIf you\\\\\\\\u{2019}d like to add links to your project, interesting reference material for the community, or anything else worth linking here, please reach out to the community lead! We want to be as inclusive as possible.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"About us \\\\\\\\u{2b50}\\\\\\\\u{fe0f}\"}, {\"id\": \"kp910a\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Tooling Community / WG Calls\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"**Welcome to the Tooling Community and Work Group Calls page, where you can find recaps and information on previous community and work group calls related to NEAR DevHub and tooling development.**\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Note: These formal calls are conducted to review specific proposals, discuss attestations, or vote on decisions**\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### [Community Call] #1: Oct 6th, 2023\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**MODERATOR :** Maxwell S\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**VIDEO :** [Tools Community Group Call #1 \\\\\\\\u{2013} NEAR DevHub October 6th, 2023](https://youtu.be/vg9LYGLU7ok)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**AGENDA**\\\\\\\\\\\\\\\\n-  SourceScan presents the product and upcoming work\\\\\\\\\\\\\\\\n- Michael (Pagoda) presents bos-loader and workflow\\\\\\\\\\\\\\\\n- Guillermo presents BOS VSCode extension\\\\\\\\\\\\\\\\n- Elliot (DevHub) presents some of his toolchain/workflow for building BOS apps\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n----------\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### [Working Group Call] - January 19, 2023\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**MODERATOR :** Vlad Frolov\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**VIDEO :** [Tooling Working Group Call - January 19, 2023](https://youtu.be/poVmblmc3L4)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**AGENDA**\\\\\\\\\\\\\\\\n-   Update on Developer Governance and the NEP process\\\\\\\\\\\\\\\\n-   Introductions\\\\\\\\\\\\\\\\n-   Discussion: NEP-418 Proposal to allow attached_deposit in view contexts\\\\\\\\\\\\\\\\n-   Voting Decision\\\\\\\\\\\\\\\\n-   Getting Involved\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**NOTES**\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**- NEP-418 :** A proposal to implement an `attached_deposit` host function for view-function calls, so it would just return zero instead of aborting the function call. \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**VOTE DECISION**\\\\\\\\\\\\\\\\n-   NEP-418 : Approved\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**ACTION ITEMS**\\\\\\\\\\\\\\\\n- No action items were discussed\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**RELATED RESOURCES**\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- NEP-418 Proposal to allow attached_deposit in view contexts - [LINK](https://github.com/near/NEPs/pull/418)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[Previous Meeting Notes](https://docs.google.com/document/d/1DGMpaS_X1MSoRae5R0ULClc5Dsv6KmWvfjicFZTJZ64)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n---------\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"Community Calls / Events \\\\\\\\u{1f4fa}\"}, {\"id\": \"0ucwyc\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{}\", \"display_name\": \"Updates \\\\\\\\u{1f468}\\\\\\\\u{200d}\\\\\\\\u{1f4bb}\"}], \"admins\": [\"theori.near\", \"victorkanu1.near\", \"frol.near\", \"flmel.near\", \"gagdiez.near\"], \"handle\": \"tooling\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreie25uquonqegy2zq3mw22lxavscptdfx2awd5j5quzier62owceuu\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreidvb4ge7ruznpfeqfwmjgjuuuw3lwidkyc5yz64r6vis7kvvjoram\", \"description\": \"Supporting the ongoing innovation of tooling.\", \"website_url\": null, \"bio_markdown\": \"This space brings together individuals, experts, and organizations who are interested in supporting the ongoing innovation of tooling on NEAR.\", \"github_handle\": null, \"twitter_handle\": null, \"telegram_handle\": \"NEAR_Tools_Community_Group\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5698299132112e+21
    }
  },
  {
    "id": "2290373832",
    "receipt_id": "4Qt5K6ekUFXvuFFT6oebXGTpWGUhNz71sWXaZvyzJfmB",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9JGhQKBke2Fkkz2Z5m16y1NpkZUrCDMC9iGoJJSh6rrt",
      "block_height": 111695662,
      "block_timestamp": 1706624543135161000
    },
    "receipt_outcome": {
      "gas_burnt": 5862204597622,
      "tokens_burnt": 586220459762200000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "JAp14LJwrQEdbhKbP3k7j9BNDx8SkZt1L6r8MFKSvxsf",
    "included_in_block_hash": "A51KzH98qYgWF7Hn4PpHfALxDQF5H1sETfbe4DKzULS8",
    "block_timestamp": "1706624541256236778",
    "block": {
      "block_height": 111695660
    },
    "receipt_conversion_tokens_burnt": "243845895694200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 586220459762200000000,
        "args": "{\"data\": {\"tooling.community.devhub.near\": {\"profile\": {\"name\": \"Tooling\", \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreie25uquonqegy2zq3mw22lxavscptdfx2awd5j5quzier62owceuu\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5698299132112e+21
    }
  },
  {
    "id": "2290377448",
    "receipt_id": "Fwj7NqcGmXvy6Rbrum7mFuquXc6WFerUcTTdVKKgPaSK",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8kt8qnUy9EX79NfweykdCarpgyhbjkzfWZqE212ZXm92",
      "block_height": 111695843,
      "block_timestamp": 1706624718655579400
    },
    "receipt_outcome": {
      "gas_burnt": 6540185358278,
      "tokens_burnt": 654018535827800000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "28xz7RQ7G48ZzMYrFkUhA3e7gMn7JX6DXp2aZ3GETQ5L",
    "included_in_block_hash": "DPRN9b6NqXyHt9FDRxxdJXEcdp8wjNCXHgAzELxcv8in",
    "block_timestamp": "1706624717823184594",
    "block": {
      "block_height": 111695842
    },
    "receipt_conversion_tokens_burnt": "242912840436000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 654018535827800000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"image\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"ipfs_cid\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bafkreidtlqtlao5cshirxr7odjtq7xyaht3xmx5hevax4etvlxady7gbsi\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"TODAY!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nJoin our second #NEAR Tools Community Group Call where we will get updates and discuss on SDK, CLI, NEAR-API-JS and tooling projects from the ecosystem Including, SourceScan, PikesPeak, and Jutsu \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{1f5d3}\\\\\\\\u{fe0f} When: Tuesday, Jan 30, 5:00 PM UTC\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nhttps://bit.ly/3SgXJls\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"tooling\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5813589591438e+21
    }
  },
  {
    "id": "2290377464",
    "receipt_id": "qKwLes5KLJGaJMK56t4gyG1Ug8QVhbF3nG4ADD7tb3W",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "GtiN5vnzyShXK5hdYpQb5FLRgJM8PEqUgb2BVHR3nrAd",
      "block_height": 111695844,
      "block_timestamp": 1706624719604000000
    },
    "receipt_outcome": {
      "gas_burnt": 6844275828800,
      "tokens_burnt": 684427582880000000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "28xz7RQ7G48ZzMYrFkUhA3e7gMn7JX6DXp2aZ3GETQ5L",
    "included_in_block_hash": "DPRN9b6NqXyHt9FDRxxdJXEcdp8wjNCXHgAzELxcv8in",
    "block_timestamp": "1706624717823184594",
    "block": {
      "block_height": 111695842
    },
    "receipt_conversion_tokens_burnt": "242912840436000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 684427582880000000000,
        "args": "{\"data\": {\"tooling.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"image\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"ipfs_cid\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bafkreidtlqtlao5cshirxr7odjtq7xyaht3xmx5hevax4etvlxady7gbsi\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"TODAY!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nJoin our second #NEAR Tools Community Group Call where we will get updates and discuss on SDK, CLI, NEAR-API-JS and tooling projects from the ecosystem Including, SourceScan, PikesPeak, and Jutsu \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{1f5d3}\\\\\\\\u{fe0f} When: Tuesday, Jan 30, 5:00 PM UTC\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nhttps://bit.ly/3SgXJls\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5813589591438e+21
    }
  },
  {
    "id": "2293139038",
    "receipt_id": "BFRnyLV6bcE1mLHotjpjp6LYkhCArsg3LPxZcbnuQ52m",
    "predecessor_account_id": "pivortex.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3b1tXt5aXj8TN2tkKFHhvFS4shnyV38fFQpW1kn1nMMp",
      "block_height": 111714617,
      "block_timestamp": 1706644537289882000
    },
    "receipt_outcome": {
      "gas_burnt": 6530112751591,
      "tokens_burnt": 653011275159100000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "8zhXsdwbfmaDHWSy7sA1foNYtwf5Hrx6ubvQUzZg7u3E",
    "included_in_block_hash": "HgJPcHPccb6DQh9EW4FHsdqL5EKVG3k8Y1GbK7CN5rnN",
    "block_timestamp": "1706644536258265963",
    "block": {
      "block_height": 111714616
    },
    "receipt_conversion_tokens_burnt": "242831228845000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 653011275159100000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"test\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"devhub-test\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4837377810295e+21
    }
  },
  {
    "id": "2293139155",
    "receipt_id": "2Bh8e4doDP4yhfkEioM6uN22Uf5VhCG2MGabM41grvTJ",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "qxMehmcdthWR1diLZzP4rBYqgsF37cNTKNpTQj2rPd1",
      "block_height": 111714618,
      "block_timestamp": 1706644538091033900
    },
    "receipt_outcome": {
      "gas_burnt": 5878952770254,
      "tokens_burnt": 587895277025400000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "8zhXsdwbfmaDHWSy7sA1foNYtwf5Hrx6ubvQUzZg7u3E",
    "included_in_block_hash": "HgJPcHPccb6DQh9EW4FHsdqL5EKVG3k8Y1GbK7CN5rnN",
    "block_timestamp": "1706644536258265963",
    "block": {
      "block_height": 111714616
    },
    "receipt_conversion_tokens_burnt": "242831228845000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 587895277025400000000,
        "args": "{\"data\": {\"devhub-test.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"test\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4837377810295e+21
    }
  },
  {
    "id": "2293200543",
    "receipt_id": "6J89V4si3LrJ3GHkySTGHopCWskrGT9t2Qhwdr2ynctd",
    "predecessor_account_id": "pivortex.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5RTMfsBoErc9B3sbeeLMqd7XWCS5GJDQAb7iqEsE3u7J",
      "block_height": 111714791,
      "block_timestamp": 1706644735052479500
    },
    "receipt_outcome": {
      "gas_burnt": 6620116162035,
      "tokens_burnt": 662011616203500000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "9F4XtrfDwVGDfcZZqeaxyuwfpAz9RLbyREu26ind7xqF",
    "included_in_block_hash": "LfSY1UBcQyy41TXu9MW6DY9tReezW5s3EKVry3f8GWb",
    "block_timestamp": "1706644733987641441",
    "block": {
      "block_height": 111714790
    },
    "receipt_conversion_tokens_burnt": "242940789611000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 662011616203500000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Hi all,\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n@garvit_electron.near and @pivortex.near will be taking part in a Twitter space hosted by Subsquid tomorrow at 3 PM UTC, discussing Zero Knowledge from an entry-level perspective. It will be a great opportunity to learn more about ZK if you\\\\\\\\\\\\'re a beginner.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nSet a reminder [here](https://twitter.com/i/spaces/1OyJAWnbdybKb?s=20)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\", \"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"garvit_electron.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"item\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"pivortex.near/post/main\\\\\\\\\\\\\\\"}}}\"}}, \"handle\": \"zero-knowledge\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6442894890479e+21
    }
  },
  {
    "id": "2293201193",
    "receipt_id": "AF4i7xX9FEZoYdnxLykNHJXdAzLy96i6b4c3KvxCM8gw",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "4J2opGNXfLHjhy2R3p7utF68ytWAoggiUEFesGMZXtot",
      "block_height": 111714792,
      "block_timestamp": 1706644735901039400
    },
    "receipt_outcome": {
      "gas_burnt": 7393370832334,
      "tokens_burnt": 739337083233400000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "9F4XtrfDwVGDfcZZqeaxyuwfpAz9RLbyREu26ind7xqF",
    "included_in_block_hash": "LfSY1UBcQyy41TXu9MW6DY9tReezW5s3EKVry3f8GWb",
    "block_timestamp": "1706644733987641441",
    "block": {
      "block_height": 111714790
    },
    "receipt_conversion_tokens_burnt": "242940789611000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 739337083233400000000,
        "args": "{\"data\": {\"zero-knowledge.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Hi all,\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n@garvit_electron.near and @pivortex.near will be taking part in a Twitter space hosted by Subsquid tomorrow at 3 PM UTC, discussing Zero Knowledge from an entry-level perspective. It will be a great opportunity to learn more about ZK if you\\\\\\\\\\\\'re a beginner.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nSet a reminder [here](https://twitter.com/i/spaces/1OyJAWnbdybKb?s=20)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\", \"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"garvit_electron.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"item\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"pivortex.near/post/main\\\\\\\\\\\\\\\"}}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6442894890479e+21
    }
  },
  {
    "id": "2294740610",
    "receipt_id": "HUrAZWfzpF2HT1q2Sesfec43GFvquPCBdJ953TppLFFt",
    "predecessor_account_id": "theori.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "CZAXLSaSPbzpE2aTdE1gVT5QQKh4ZCxAurDQkTXhd7JM",
      "block_height": 111727815,
      "block_timestamp": 1706658306960381700
    },
    "receipt_outcome": {
      "gas_burnt": 6721411952422,
      "tokens_burnt": 672141195242200000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "EQvBN1NU2c7Vd94gi8NbfHUnur2u4ZkejAsseKXMfbsU",
    "included_in_block_hash": "9jQ5oqYR2CN4XYtrAxn6aZe8fSaSamsWs5YGS8QARwK8",
    "block_timestamp": "1706658305945844037",
    "block": {
      "block_height": 111727814
    },
    "receipt_conversion_tokens_burnt": "243113627309200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 672141195242200000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"image\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"ipfs_cid\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bafkreichvq32kr45lmovgc2j2ndqmti5l3nd44g3gyqzxydtoix5wmzfje\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"# Introducing Community Announcements\\\\\\\\\\\\\\\\n## Stay in the loop with with your favorite communities on DevHub\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nEver miss out on important NEAR events or updates because they got buried on NEAR Social, Telegram, or some random Discord thread? We hear you loud and clear. Juggling scattered updates across multiple channels is not fun. That\\\\\\\\u{2019}s why we\\\\\\\\u{2019}re thrilled to introduce **Community Announcements**, your streamlined channel for staying in the loop with your favorite topics.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nModerators now have a dedicated space right on the homepage of each community to share the latest news, events, and insights. Missed announcement of discussion? No worries, just head to the announcement feed to catch up at your own pace.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nAnd the best part? Announcements are tightly integrated with NEAR Social, so you can subscribe to these announcements directly within your feed. But the conversation doesn\\\\\\\\u{2019}t stop there. Our upcoming Discussion feature will give each community a dedicate space for people to engage, ask questions, and share their perspectives. \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nExplore the feeds in your communities today! And keep an eye out for even more exciting features coming soon.\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"devhub-platform\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.608554164079e+21
    }
  },
  {
    "id": "2294740624",
    "receipt_id": "7EoGM2smzd7kZmGVbue5hGFx2uzwMWsGNnkMhCKwVMfJ",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5HNQ2VhtYBnL5DKW9fDPX4ToxVha6t1ieEQ5VHUD4QQ8",
      "block_height": 111727816,
      "block_timestamp": 1706658307891920400
    },
    "receipt_outcome": {
      "gas_burnt": 6932993415276,
      "tokens_burnt": 693299341527600000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "EQvBN1NU2c7Vd94gi8NbfHUnur2u4ZkejAsseKXMfbsU",
    "included_in_block_hash": "9jQ5oqYR2CN4XYtrAxn6aZe8fSaSamsWs5YGS8QARwK8",
    "block_timestamp": "1706658305945844037",
    "block": {
      "block_height": 111727814
    },
    "receipt_conversion_tokens_burnt": "243113627309200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 693299341527600000000,
        "args": "{\"data\": {\"devhub-platform.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"image\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"ipfs_cid\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bafkreichvq32kr45lmovgc2j2ndqmti5l3nd44g3gyqzxydtoix5wmzfje\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"# Introducing Community Announcements\\\\\\\\\\\\\\\\n## Stay in the loop with with your favorite communities on DevHub\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nEver miss out on important NEAR events or updates because they got buried on NEAR Social, Telegram, or some random Discord thread? We hear you loud and clear. Juggling scattered updates across multiple channels is not fun. That\\\\\\\\u{2019}s why we\\\\\\\\u{2019}re thrilled to introduce **Community Announcements**, your streamlined channel for staying in the loop with your favorite topics.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nModerators now have a dedicated space right on the homepage of each community to share the latest news, events, and insights. Missed announcement of discussion? No worries, just head to the announcement feed to catch up at your own pace.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nAnd the best part? Announcements are tightly integrated with NEAR Social, so you can subscribe to these announcements directly within your feed. But the conversation doesn\\\\\\\\u{2019}t stop there. Our upcoming Discussion feature will give each community a dedicate space for people to engage, ask questions, and share their perspectives. \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nExplore the feeds in your communities today! And keep an eye out for even more exciting features coming soon.\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.608554164079e+21
    }
  },
  {
    "id": "2295099443",
    "receipt_id": "14m12R5UGhEvkW1jszPDBsuXg8iUbyDss8XUWxmW6JeY",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "BmNbvDqAJynjYpR4BAGCXikZAg61rcmvi4jxzTEFvaJJ",
      "block_height": 111734891,
      "block_timestamp": 1706665415474604800
    },
    "receipt_outcome": {
      "gas_burnt": 12205378008520,
      "tokens_burnt": 1.220537800852e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "2W5EBKeKgWixEHzVT38Sj5dFN2HRTHU17vJqyNBjbMyA",
    "included_in_block_hash": "GjYDSzUuHfmon6GLTMeyuVPANcimn8c2zgMGp3AiS11x",
    "block_timestamp": "1706665414296295293",
    "block": {
      "block_height": 111734890
    },
    "receipt_conversion_tokens_burnt": "248703909496000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.220537800852e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.components.organism.Feed\": {\"\": \"const { Feed } = VM.require(\\\\\\\\\\\\\\\"devs.near/widget/Feed\\\\\\\\\\\\\\\");\\\\\\\\nFeed = Feed || (() => <></>);\\\\\\\\nconst setPostExists = props.setPostExists ?? (() => {});\\\\\\\\nconst showFlagAccountFeature = props.showFlagAccountFeature ?? false;\\\\\\\\n\\\\\\\\nconst filteredAccountIds = props.filteredAccountIds ?? [];\\\\\\\\n\\\\\\\\nconst GRAPHQL_ENDPOINT =\\\\\\\\n  props.GRAPHQL_ENDPOINT ?? \\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nlet lastPostSocialApi = Social.index(\\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\", {\\\\\\\\n  limit: 1,\\\\\\\\n  order: \\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\\",\\\\\\\\n});\\\\\\\\n\\\\\\\\nif (lastPostSocialApi == null) {\\\\\\\\n  return \\\\\\\\\\\\\\\"Loading...\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  // If QueryAPI Feed is lagging behind Social API, fallback to old widget.\\\\\\\\n  shouldFallback: false,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(`${GRAPHQL_ENDPOINT}/v1/graphql`, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"dataplatform_near\\\\\\\\\\\\\\\" },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst lastPostQuery = `\\\\\\\\nquery IndexerQuery {\\\\\\\\n  dataplatform_near_social_feed_posts( limit: 1, order_by: { block_height: desc }) {\\\\\\\\n      block_height\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nfetchGraphQL(lastPostQuery, \\\\\\\\\\\\\\\"IndexerQuery\\\\\\\\\\\\\\\", {})\\\\\\\\n  .then((feedIndexerResponse) => {\\\\\\\\n    if (\\\\\\\\n      feedIndexerResponse &&\\\\\\\\n      feedIndexerResponse.body.data.dataplatform_near_social_feed_posts.length >\\\\\\\\n        0\\\\\\\\n    ) {\\\\\\\\n      const nearSocialBlockHeight = lastPostSocialApi[0].blockHeight;\\\\\\\\n      const feedIndexerBlockHeight =\\\\\\\\n        feedIndexerResponse.body.data.dataplatform_near_social_feed_posts[0]\\\\\\\\n          .block_height;\\\\\\\\n\\\\\\\\n      const lag = nearSocialBlockHeight - feedIndexerBlockHeight;\\\\\\\\n      let shouldFallback = lag > 2 || !feedIndexerBlockHeight;\\\\\\\\n      if (shouldFallback === true) {\\\\\\\\n        console.log(\\\\\\\\n          \\\\\\\\\\\\\\\"Falling back to Social index feed. Block difference is: \\\\\\\\\\\\\\\",\\\\\\\\n          nearSocialBlockHeight - feedIndexerBlockHeight\\\\\\\\n        );\\\\\\\\n        State.update({ shouldFallback });\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      console.log(\\\\\\\\n        \\\\\\\\\\\\\\\"Falling back to Social index feed. No QueryApi data received.\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      State.update({ shouldFallback: true });\\\\\\\\n    }\\\\\\\\n  })\\\\\\\\n  .catch((error) => {\\\\\\\\n    console.log(\\\\\\\\n      \\\\\\\\\\\\\\\"Error while fetching QueryApi feed (falling back to index feed): \\\\\\\\\\\\\\\",\\\\\\\\n      error\\\\\\\\n    );\\\\\\\\n    State.update({ shouldFallback: true });\\\\\\\\n  });\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    {state.shouldFallback ? (\\\\\\\\n      <Feed\\\\\\\\n        index={[\\\\\\\\n          {\\\\\\\\n            action: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            key: \\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\n            options: {\\\\\\\\n              limit: 10,\\\\\\\\n              order: \\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\\",\\\\\\\\n              accountId: filteredAccountIds,\\\\\\\\n            },\\\\\\\\n            cacheOptions: {\\\\\\\\n              ignoreCache: true,\\\\\\\\n            },\\\\\\\\n          },\\\\\\\\n        ]}\\\\\\\\n        Item={(item) => {\\\\\\\\n          setPostExists(true);\\\\\\\\n\\\\\\\\n          return (\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"near/widget/v1.Posts.Post\\\\\\\\\\\\\\\"\\\\\\\\n              loading={<div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\" style={{ height: \\\\\\\\\\\\\\\"200px\\\\\\\\\\\\\\\" }} />}\\\\\\\\n              props={{\\\\\\\\n                accountId: item.accountId,\\\\\\\\n                blockHeight: item.blockHeight,\\\\\\\\n                filteredAccountIds: filteredAccountIds,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          );\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    ) : (\\\\\\\\n      <Widget\\\\\\\\n        src={`devhub.near/widget/devhub.components.organism.Feed.NearQueryApi`}\\\\\\\\n        props={{\\\\\\\\n          GRAPHQL_ENDPOINT,\\\\\\\\n          showFlagAccountFeature: true,\\\\\\\\n          filteredAccountIds: filteredAccountIds,\\\\\\\\n          setPostExists: setPostExists,\\\\\\\\n          showFlagAccountFeature: showFlagAccountFeature,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.community.Compose\": {\"\": \"const communityAccountId = props.communityAccountId;\\\\\\\\nif (!communityAccountId) {\\\\\\\\n  return <></>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  image: {},\\\\\\\\n  text: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  showPreview: false,\\\\\\\\n  mentionInput: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", // text next to @ tag\\\\\\\\n  mentionsArray: [], // all the mentions in the description\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst profile = Social.getr(`${communityAccountId}/profile`);\\\\\\\\nconst autocompleteEnabled = true;\\\\\\\\n\\\\\\\\nconst content = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n  image: state.image.cid ? { ipfs_cid: state.image.cid } : undefined,\\\\\\\\n  text: state.text,\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction extractMentions(text) {\\\\\\\\n  const mentionRegex =\\\\\\\\n    /@((?:(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+\\\\\\\\\\\\\\\\.)*(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+)/gi;\\\\\\\\n  mentionRegex.lastIndex = 0;\\\\\\\\n  const accountIds = new Set();\\\\\\\\n  for (const match of text.matchAll(mentionRegex)) {\\\\\\\\n    if (\\\\\\\\n      !/[\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index - 1)) &&\\\\\\\\n      !/[/\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index + match[0].length)) &&\\\\\\\\n      match[1].length >= 2 &&\\\\\\\\n      match[1].length <= 64\\\\\\\\n    ) {\\\\\\\\n      accountIds.add(match[1].toLowerCase());\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return [...accountIds];\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractTagNotifications(text, item) {\\\\\\\\n  return extractMentions(text || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n    .filter((accountId) => accountId !== communityAccountId)\\\\\\\\n    .map((accountId) => ({\\\\\\\\n      key: accountId,\\\\\\\\n      value: {\\\\\\\\n        type: \\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\n        item,\\\\\\\\n      },\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction composeData() {\\\\\\\\n  const data = {\\\\\\\\n    post: {\\\\\\\\n      main: JSON.stringify(content),\\\\\\\\n    },\\\\\\\\n    index: {\\\\\\\\n      post: JSON.stringify({\\\\\\\\n        key: \\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\n        value: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const notifications = extractTagNotifications(state.text, {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${communityAccountId}/post/main`,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  if (notifications.length) {\\\\\\\\n    data.index.notify = JSON.stringify(\\\\\\\\n      notifications.length > 1 ? notifications : notifications[0]\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return data;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst handleSubmit = () => {\\\\\\\\n  const data = composeData();\\\\\\\\n  if (props.onSubmit) {\\\\\\\\n    props.onSubmit(data);\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction resetState() {\\\\\\\\n  State.update({\\\\\\\\n    image: {},\\\\\\\\n    text: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction textareaInputHandler(value) {\\\\\\\\n  const words = value.split(/\\\\\\\\\\\\\\\\s+/);\\\\\\\\n  const allMentiones = words\\\\\\\\n    .filter((word) => word.startsWith(\\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\"))\\\\\\\\n    .map((mention) => mention.slice(1));\\\\\\\\n  const newMentiones = allMentiones.filter(\\\\\\\\n    (item) => !state.mentionsArray.includes(item)\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  State.update((lastKnownState) => ({\\\\\\\\n    ...lastKnownState,\\\\\\\\n    text: value,\\\\\\\\n    showAccountAutocomplete: newMentiones?.length > 0,\\\\\\\\n    mentionsArray: allMentiones,\\\\\\\\n    mentionInput: newMentiones?.[0] ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction autoCompleteAccountId(id) {\\\\\\\\n  // to make sure we update the @ at correct index\\\\\\\\n  let currentIndex = 0;\\\\\\\\n  const updatedDescription = state.text.replace(\\\\\\\\n    /(?:^|\\\\\\\\\\\\\\\\s)(@[^\\\\\\\\\\\\\\\\s]*)/g,\\\\\\\\n    (match) => {\\\\\\\\n      if (currentIndex === state.mentionsArray.indexOf(state.mentionInput)) {\\\\\\\\n        currentIndex++;\\\\\\\\n        return ` @${id}`;\\\\\\\\n      } else {\\\\\\\\n        currentIndex++;\\\\\\\\n        return match;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n  State.update((lastKnownState) => ({\\\\\\\\n    ...lastKnownState,\\\\\\\\n    text: updatedDescription,\\\\\\\\n    showAccountAutocomplete: false,\\\\\\\\n  }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  --padding: 24px;\\\\\\\\n  position: relative;\\\\\\\\n\\\\\\\\n  @media (max-width: 1024px) {\\\\\\\\n    --padding: 12px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n  position: absolute;\\\\\\\\n  top: var(--padding);\\\\\\\\n  left: var(--padding);\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media (max-width: 992px) {\\\\\\\\n    display: none;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Textarea = styled.div`\\\\\\\\n  display: grid;\\\\\\\\n  vertical-align: top;\\\\\\\\n  align-items: center;\\\\\\\\n  position: relative;\\\\\\\\n  align-items: stretch;\\\\\\\\n\\\\\\\\n  &::after,\\\\\\\\n  textarea {\\\\\\\\n    width: 100%;\\\\\\\\n    min-width: 1em;\\\\\\\\n    height: unset;\\\\\\\\n    min-height: 164px;\\\\\\\\n    font: inherit;\\\\\\\\n    padding: var(--padding) var(--padding) calc(40px + (var(--padding) * 2))\\\\\\\\n      calc(40px + (var(--padding) * 2));\\\\\\\\n    margin: 0;\\\\\\\\n    resize: none;\\\\\\\\n    background: none;\\\\\\\\n    appearance: none;\\\\\\\\n    border: none;\\\\\\\\n    grid-area: 1 / 1;\\\\\\\\n    overflow: hidden;\\\\\\\\n    outline: none;\\\\\\\\n\\\\\\\\n    @media (max-width: 1024px) {\\\\\\\\n      min-height: 124px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    @media (max-width: 992px) {\\\\\\\\n      padding-left: var(--padding);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &::after {\\\\\\\\n    content: attr(data-value) \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\";\\\\\\\\n    visibility: hidden;\\\\\\\\n    white-space: pre-wrap;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    transition: all 200ms;\\\\\\\\n\\\\\\\\n    &::placeholder {\\\\\\\\n      opacity: 1;\\\\\\\\n      color: #687076;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    &:empty + p {\\\\\\\\n      display: block;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst TextareaDescription = styled.p`\\\\\\\\n  position: absolute;\\\\\\\\n  top: calc(var(--padding) + 24px);\\\\\\\\n  left: calc(42px + (var(--padding) * 2));\\\\\\\\n  right: var(--padding);\\\\\\\\n  font-size: 10px;\\\\\\\\n  line-height: 18px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  pointer-events: none;\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  a {\\\\\\\\n    color: #000;\\\\\\\\n    outline: none;\\\\\\\\n    font-weight: 600;\\\\\\\\n    pointer-events: auto;\\\\\\\\n\\\\\\\\n    &:hover,\\\\\\\\n    &:focus {\\\\\\\\n      color: #000;\\\\\\\\n      text-decoration: underline;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media (max-width: 992px) {\\\\\\\\n    left: var(--padding);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: inline-flex;\\\\\\\\n  gap: 12px;\\\\\\\\n  position: absolute;\\\\\\\\n  bottom: var(--padding);\\\\\\\\n  right: var(--padding);\\\\\\\\n\\\\\\\\n  .commit-post-button,\\\\\\\\n  .preview-post-button {\\\\\\\\n    background: #59e692;\\\\\\\\n    color: #09342e;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    height: 40px;\\\\\\\\n    padding: 0 35px;\\\\\\\\n    font-weight: 600;\\\\\\\\n    font-size: 14px;\\\\\\\\n    border: none;\\\\\\\\n    cursor: pointer;\\\\\\\\n    transition: background 200ms, opacity 200ms;\\\\\\\\n\\\\\\\\n    &:hover,\\\\\\\\n    &:focus {\\\\\\\\n      background: rgb(112 242 164);\\\\\\\\n      outline: none;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    &:disabled {\\\\\\\\n      opacity: 0.5;\\\\\\\\n      pointer-events: none;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .preview-post-button {\\\\\\\\n    color: #11181c;\\\\\\\\n    background: #f1f3f5;\\\\\\\\n    padding: 0;\\\\\\\\n    width: 40px;\\\\\\\\n\\\\\\\\n    &:hover,\\\\\\\\n    &:focus {\\\\\\\\n      background: #d7dbde;\\\\\\\\n      outline: none;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .upload-image-button {\\\\\\\\n    display: flex;\\\\\\\\n    align-items: center;\\\\\\\\n    justify-content: center;\\\\\\\\n    background: #f1f3f5;\\\\\\\\n    color: #11181c;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    height: 40px;\\\\\\\\n    min-width: 40px;\\\\\\\\n    font-size: 0;\\\\\\\\n    border: none;\\\\\\\\n    cursor: pointer;\\\\\\\\n    transition: background 200ms, opacity 200ms;\\\\\\\\n\\\\\\\\n    &::before {\\\\\\\\n      font-size: 16px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    &:hover,\\\\\\\\n    &:focus {\\\\\\\\n      background: #d7dbde;\\\\\\\\n      outline: none;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    &:disabled {\\\\\\\\n      opacity: 0.5;\\\\\\\\n      pointer-events: none;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    span {\\\\\\\\n      margin-left: 12px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .d-inline-block {\\\\\\\\n    display: flex !important;\\\\\\\\n    gap: 12px;\\\\\\\\n    margin: 0 !important;\\\\\\\\n\\\\\\\\n    .overflow-hidden {\\\\\\\\n      width: 40px !important;\\\\\\\\n      height: 40px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst PreviewWrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  padding: var(--padding);\\\\\\\\n  padding-bottom: calc(40px + (var(--padding) * 2));\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst AutoComplete = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  z-index: 5;\\\\\\\\n  bottom: 0;\\\\\\\\n  left: 0;\\\\\\\\n  right: 0;\\\\\\\\n\\\\\\\\n  > div > div {\\\\\\\\n    padding: calc(var(--padding) / 2);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Wrapper>\\\\\\\\n    {state.showPreview ? (\\\\\\\\n      <PreviewWrapper>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"near/widget/v1.Posts.Post\\\\\\\\\\\\\\\"\\\\\\\\n          loading={<div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\" style={{ height: \\\\\\\\\\\\\\\"200px\\\\\\\\\\\\\\\" }} />}\\\\\\\\n          props={{\\\\\\\\n            accountId: communityAccountId,\\\\\\\\n            blockHeight: \\\\\\\\\\\\\\\"now\\\\\\\\\\\\\\\",\\\\\\\\n            content,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </PreviewWrapper>\\\\\\\\n    ) : (\\\\\\\\n      <>\\\\\\\\n        <Avatar>\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"mob.near/widget/Image\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              image: profile.image,\\\\\\\\n              alt: profile.name,\\\\\\\\n              fallbackUrl:\\\\\\\\n                \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreibiyqabm3kl24gcb2oegb7pmwdi6wwrpui62iwb44l7uomnn3lhbi\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </Avatar>\\\\\\\\n\\\\\\\\n        <Textarea data-value={state.text}>\\\\\\\\n          <textarea\\\\\\\\n            data-testid=\\\\\\\\\\\\\\\"compose-announcement\\\\\\\\\\\\\\\"\\\\\\\\n            placeholder=\\\\\\\\\\\\\\\"What\\\\\\\\\\\\'s happening?\\\\\\\\\\\\\\\"\\\\\\\\n            onInput={(event) => textareaInputHandler(event.target.value)}\\\\\\\\n            onKeyUp={(event) => {\\\\\\\\n              if (event.key === \\\\\\\\\\\\\\\"Escape\\\\\\\\\\\\\\\") {\\\\\\\\n                State.update({ showAccountAutocomplete: false });\\\\\\\\n              }\\\\\\\\n            }}\\\\\\\\n            value={state.text}\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          <TextareaDescription>\\\\\\\\n            <a\\\\\\\\n              href=\\\\\\\\\\\\\\\"https://www.markdownguide.org/basic-syntax/\\\\\\\\\\\\\\\"\\\\\\\\n              target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              Markdown\\\\\\\\n            </a>\\\\\\\\n            is supported\\\\\\\\n          </TextareaDescription>\\\\\\\\n        </Textarea>\\\\\\\\n      </>\\\\\\\\n    )}\\\\\\\\n\\\\\\\\n    {autocompleteEnabled && state.showAccountAutocomplete && (\\\\\\\\n      <AutoComplete>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.AccountAutocomplete\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            term: state.mentionInput,\\\\\\\\n            onSelect: autoCompleteAccountId,\\\\\\\\n            onClose: () => State.update({ showAccountAutocomplete: false }),\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </AutoComplete>\\\\\\\\n    )}\\\\\\\\n\\\\\\\\n    <Actions>\\\\\\\\n      {!state.showPreview && (\\\\\\\\n        <IpfsImageUpload\\\\\\\\n          image={state.image}\\\\\\\\n          className=\\\\\\\\\\\\\\\"upload-image-button bi bi-image\\\\\\\\\\\\\\\"\\\\\\\\n        />\\\\\\\\n      )}\\\\\\\\n\\\\\\\\n      <button\\\\\\\\n        type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n        disabled={!state.text}\\\\\\\\n        className=\\\\\\\\\\\\\\\"preview-post-button\\\\\\\\\\\\\\\"\\\\\\\\n        title={state.showPreview ? \\\\\\\\\\\\\\\"Edit Post\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Preview Post\\\\\\\\\\\\\\\"}\\\\\\\\n        onClick={() => State.update({ showPreview: !state.showPreview })}\\\\\\\\n      >\\\\\\\\n        {state.showPreview ? (\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-pencil\\\\\\\\\\\\\\\" />\\\\\\\\n        ) : (\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-eye-fill\\\\\\\\\\\\\\\" />\\\\\\\\n        )}\\\\\\\\n      </button>\\\\\\\\n\\\\\\\\n      <button\\\\\\\\n        data-testid=\\\\\\\\\\\\\\\"post-btn\\\\\\\\\\\\\\\"\\\\\\\\n        disabled={!state.text && !state.image}\\\\\\\\n        onClick={handleSubmit}\\\\\\\\n        className=\\\\\\\\\\\\\\\"commit-post-button\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        Post\\\\\\\\n      </button>\\\\\\\\n    </Actions>\\\\\\\\n  </Wrapper>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.community.Announcements\": {\"\": \"const { handle } = props;\\\\\\\\nconst { getCommunity, setCommunitySocialDB } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\ngetCommunity = getCommunity || (() => <></>);\\\\\\\\nsetCommunitySocialDB = setCommunitySocialDB || (() => <></>);\\\\\\\\n\\\\\\\\nconst communityData = getCommunity({ handle });\\\\\\\\nconst [postsExists, setPostExists] = useState(false);\\\\\\\\n\\\\\\\\nconst MainContent = styled.div`\\\\\\\\n  padding-left: 2rem;\\\\\\\\n  flex: 3;\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    padding-left: 0rem;\\\\\\\\n  }\\\\\\\\n  .post:hover {\\\\\\\\n    background-color: inherit !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst SidebarContainer = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 19px;\\\\\\\\n  font-weight: 600;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst SubHeading = styled.div`\\\\\\\\n  font-size: 15px;\\\\\\\\n  font-weight: 600;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  flex-wrap: no-wrap;\\\\\\\\n  max-width: 100%;\\\\\\\\n\\\\\\\\n  .max-width-100 {\\\\\\\\n    max-width: 100%;\\\\\\\\n  }\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card {\\\\\\\\n    border-radius: 1rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .display-none {\\\\\\\\n    display: none;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Tag = styled.div`\\\\\\\\n  border-top-right-radius: 50px;\\\\\\\\n  border-bottom-right-radius: 50px;\\\\\\\\n  border-top-left-radius: 50px;\\\\\\\\n  border-bottom-left-radius: 50px;\\\\\\\\n  padding-inline: 0.8rem;\\\\\\\\n  padding-block: 0.3rem;\\\\\\\\n  display: flex;\\\\\\\\n  gap: 0.5rem;\\\\\\\\n  border-width: 1px;\\\\\\\\n  border-style: solid;\\\\\\\\n  font-size: 14px;\\\\\\\\n  color: rgba(0, 236, 151, 1);\\\\\\\\n  font-weight: 800;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst [sort, setSort] = useState(\\\\\\\\\\\\\\\"timedesc\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\" style={{ maxWidth: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\" }}>\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"d-flex gap-3 m-3 pl-2\\\\\\\\\\\\\\\">\\\\\\\\n      <MainContent className=\\\\\\\\\\\\\\\"max-width-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n          {context.accountId &&\\\\\\\\n            (communityData?.admins ?? []).includes(context.accountId) && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"card p-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Compose\\\\\\\\\\\\\\\"}\\\\\\\\n                  props={{\\\\\\\\n                    onSubmit: (v) => setCommunitySocialDB({ handle, data: v }),\\\\\\\\n                    communityAccountId: `${handle}.community.devhub.near`,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n            <Heading>Announcements</Heading>\\\\\\\\n            <div\\\\\\\\n              className={\\\\\\\\n                postsExists\\\\\\\\n                  ? \\\\\\\\\\\\\\\"d-flex align-items-center gap-2\\\\\\\\\\\\\\\"\\\\\\\\n                  : \\\\\\\\\\\\\\\" display-none\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n            >\\\\\\\\n              <select\\\\\\\\n                name=\\\\\\\\\\\\\\\"sort\\\\\\\\\\\\\\\"\\\\\\\\n                id=\\\\\\\\\\\\\\\"sort\\\\\\\\\\\\\\\"\\\\\\\\n                class=\\\\\\\\\\\\\\\"form-select\\\\\\\\\\\\\\\"\\\\\\\\n                value={sort}\\\\\\\\n                onChange={(e) => {\\\\\\\\n                  setSort(e.target.value);\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <option selected value=\\\\\\\\\\\\\\\"timedesc\\\\\\\\\\\\\\\">\\\\\\\\n                  Latest\\\\\\\\n                </option>\\\\\\\\n                <option value=\\\\\\\\\\\\\\\"recentcommentdesc\\\\\\\\\\\\\\\">Last Commented</option>\\\\\\\\n              </select>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          {!postsExists && (\\\\\\\\n            <div>\\\\\\\\n              <h6>No announcements exists.</h6>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n          <div className={postsExists && \\\\\\\\\\\\\\\"card p-4\\\\\\\\\\\\\\\"}>\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.organism.Feed\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                showFlagAccountFeature: true,\\\\\\\\n                filteredAccountIds: [\\\\\\\\n                  `${handle}.community.devhub.near`,\\\\\\\\n                ],\\\\\\\\n                sort: sort,\\\\\\\\n                setPostExists: setPostExists,\\\\\\\\n                showFlagAccountFeature: true,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </MainContent>\\\\\\\\n      <SidebarContainer>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card p-4\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"mb-2\\\\\\\\\\\\\\\">{communityData?.description}</div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-wrap\\\\\\\\\\\\\\\">\\\\\\\\n              <Tag>{communityData?.tag} </Tag>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card p-4 d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <SubHeading>Community Admins</SubHeading>\\\\\\\\n            {(communityData?.admins ?? []).map((accountId) => (\\\\\\\\n              <div\\\\\\\\n                key={accountId}\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex\\\\\\\\\\\\\\\"\\\\\\\\n                style={{ fontWeight: 500 }}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.ProfileCard\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{ accountId }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </SidebarContainer>\\\\\\\\n    </Container>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.organism.Feed.NearQueryApi\": {\"\": \"const LIMIT = 10;\\\\\\\\nconst filteredAccountIds = props.filteredAccountIds;\\\\\\\\nconst setPostExists = props.setPostExists ?? (() => {});\\\\\\\\nconst GRAPHQL_ENDPOINT =\\\\\\\\n  props.GRAPHQL_ENDPOINT ?? \\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst sort = props.sort || \\\\\\\\\\\\\\\"timedec\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n// get the full list of posts that the current user has flagged so\\\\\\\\n// they can be hidden\\\\\\\\nconst selfFlaggedPosts = context.accountId\\\\\\\\n  ? Social.index(\\\\\\\\\\\\\\\"flag\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\", {\\\\\\\\n      accountId: context.accountId,\\\\\\\\n    }) ?? []\\\\\\\\n  : [];\\\\\\\\n\\\\\\\\n// V2 self moderation data, structure is like:\\\\\\\\n// { moderate: {\\\\\\\\n//     \\\\\\\\\\\\\\\"account1.near\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"report\\\\\\\\\\\\\\\",\\\\\\\\n//     \\\\\\\\\\\\\\\"account2.near\\\\\\\\\\\\\\\": {\\\\\\\\n//         \\\\\\\\\\\\\\\".post.main\\\\\\\\\\\\\\\": { // slashes are not allowed in keys\\\\\\\\n//           \\\\\\\\\\\\\\\"100000123\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"spam\\\\\\\\\\\\\\\", // post ids are account/blockHeight\\\\\\\\n//         }\\\\\\\\n//     },\\\\\\\\n//   }\\\\\\\\n// }\\\\\\\\nconst selfModeration = context.accountId\\\\\\\\n  ? Social.getr(`${context.accountId}/moderate`, \\\\\\\\\\\\\\\"optimistic\\\\\\\\\\\\\\\") ?? []\\\\\\\\n  : [];\\\\\\\\nconst postsModerationKey = \\\\\\\\\\\\\\\".post.main\\\\\\\\\\\\\\\";\\\\\\\\nconst commentsModerationKey = \\\\\\\\\\\\\\\".post.comment\\\\\\\\\\\\\\\";\\\\\\\\nconst matchesModeration = (moderated, socialDBObjectType, item) => {\\\\\\\\n  if (!moderated) return false;\\\\\\\\n  const accountFound = moderated[item.account_id];\\\\\\\\n  if (typeof accountFound === \\\\\\\\\\\\\\\"undefined\\\\\\\\\\\\\\\") {\\\\\\\\n    return false;\\\\\\\\n  }\\\\\\\\n  if (typeof accountFound === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" || accountFound[\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"]) {\\\\\\\\n    return true;\\\\\\\\n  }\\\\\\\\n  const moderatedItemsOfType = accountFound[socialDBObjectType];\\\\\\\\n  return (\\\\\\\\n    moderatedItemsOfType &&\\\\\\\\n    typeof moderatedItemsOfType[item.block_height] !== \\\\\\\\\\\\\\\"undefined\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst shouldFilter = (item, socialDBObjectType) => {\\\\\\\\n  return (\\\\\\\\n    selfFlaggedPosts.find((flagged) => {\\\\\\\\n      return (\\\\\\\\n        flagged?.value?.blockHeight === item.block_height &&\\\\\\\\n        flagged?.value?.path.includes(item.account_id)\\\\\\\\n      );\\\\\\\\n    }) || matchesModeration(selfModeration, socialDBObjectType, item)\\\\\\\\n  );\\\\\\\\n};\\\\\\\\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(`${GRAPHQL_ENDPOINT}/v1/graphql`, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"dataplatform_near\\\\\\\\\\\\\\\" },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst createQuery = (type, isUpdate) => {\\\\\\\\n  let querySortOption = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  switch (sort) {\\\\\\\\n    case \\\\\\\\\\\\\\\"recentcommentdesc\\\\\\\\\\\\\\\":\\\\\\\\n      querySortOption = `{ last_comment_timestamp: desc_nulls_last },`;\\\\\\\\n      break;\\\\\\\\n    default:\\\\\\\\n      querySortOption = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  let queryFilter = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  let timeOperation = \\\\\\\\\\\\\\\"_lte\\\\\\\\\\\\\\\";\\\\\\\\n  if (isUpdate) {\\\\\\\\n    timeOperation = \\\\\\\\\\\\\\\"_gt\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const queryTime = initialQueryTime ? initialQueryTime : Date.now() * 1000000;\\\\\\\\n\\\\\\\\n  if (filteredAccountIds) {\\\\\\\\n    queryFilter = `where: {\\\\\\\\n          _and: [\\\\\\\\n            {account_id: {_in: \\\\\\\\\\\\\\\"${filteredAccountIds}\\\\\\\\\\\\\\\"}},\\\\\\\\n            {block_timestamp: {${timeOperation}: ${queryTime}}}\\\\\\\\n          ]\\\\\\\\n        }, `;\\\\\\\\n  } else {\\\\\\\\n    queryFilter = `where: {\\\\\\\\n          _and: [\\\\\\\\n            {block_timestamp: {${timeOperation}: ${queryTime}}}\\\\\\\\n          ]\\\\\\\\n        }, `;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return `\\\\\\\\nquery FeedQuery($offset: Int, $limit: Int) {\\\\\\\\n  dataplatform_near_social_feed_moderated_posts(${queryFilter} order_by: [${querySortOption} { block_height: desc }], offset: $offset, limit: $limit) {\\\\\\\\n    account_id\\\\\\\\n    block_height\\\\\\\\n    block_timestamp\\\\\\\\n    content\\\\\\\\n    receipt_id\\\\\\\\n    accounts_liked\\\\\\\\n    last_comment_timestamp\\\\\\\\n    comments(order_by: {block_height: asc}) {\\\\\\\\n      account_id\\\\\\\\n      block_height\\\\\\\\n      block_timestamp\\\\\\\\n      content\\\\\\\\n    }\\\\\\\\n    verifications {\\\\\\\\n      human_provider\\\\\\\\n      human_valid_until\\\\\\\\n      human_verification_level\\\\\\\\n    }\\\\\\\\n\\\\\\\\n  }\\\\\\\\n  dataplatform_near_social_feed_moderated_posts_aggregate(${queryFilter} order_by: {id: asc}) {\\\\\\\\n    aggregate {\\\\\\\\n      count\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst loadMorePosts = (isUpdate) => {\\\\\\\\n  const queryName = \\\\\\\\\\\\\\\"FeedQuery\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n  if (!isUpdate) {\\\\\\\\n    setIsLoading(true);\\\\\\\\n  }\\\\\\\\n  const offset = isUpdate ? 0 : postsData.posts.length;\\\\\\\\n  const limit = isUpdate ? 100 : LIMIT;\\\\\\\\n  const query = createQuery(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", isUpdate);\\\\\\\\n  fetchGraphQL(query, queryName, {\\\\\\\\n    offset: offset,\\\\\\\\n    limit: limit,\\\\\\\\n  }).then((result) => {\\\\\\\\n    if (result.status === 200 && result.body) {\\\\\\\\n      if (result.body.errors) {\\\\\\\\n        console.log(\\\\\\\\\\\\\\\"error:\\\\\\\\\\\\\\\", result.body.errors);\\\\\\\\n        return;\\\\\\\\n      }\\\\\\\\n      let data = result.body.data;\\\\\\\\n      if (data) {\\\\\\\\n        const newPosts = data.dataplatform_near_social_feed_moderated_posts;\\\\\\\\n        const postsCountLeft =\\\\\\\\n          data.dataplatform_near_social_feed_moderated_posts_aggregate.aggregate\\\\\\\\n            .count;\\\\\\\\n        if (newPosts.length > 0) {\\\\\\\\n          let filteredPosts = newPosts.filter(\\\\\\\\n            (i) => !shouldFilter(i, postsModerationKey)\\\\\\\\n          );\\\\\\\\n          filteredPosts = filteredPosts.map((post) => {\\\\\\\\n            const prevComments = post.comments;\\\\\\\\n            const filteredComments = prevComments.filter(\\\\\\\\n              (comment) => !shouldFilter(comment, commentsModerationKey)\\\\\\\\n            );\\\\\\\\n            post.comments = filteredComments;\\\\\\\\n            return post;\\\\\\\\n          });\\\\\\\\n\\\\\\\\n          if (isUpdate) {\\\\\\\\n            setNewUnseenPosts(filteredPosts);\\\\\\\\n          } else {\\\\\\\\n            setPostsData({\\\\\\\\n              posts: [...postsData.posts, ...filteredPosts],\\\\\\\\n              postsCountLeft,\\\\\\\\n            });\\\\\\\\n            setIsLoading(false);\\\\\\\\n          }\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    if (!isUpdate && initialQueryTime === null) {\\\\\\\\n      const newTime =\\\\\\\\n        postsData.posts && postsData.posts[0]\\\\\\\\n          ? postsData.posts[0].block_timestamp\\\\\\\\n          : Date.now() * 1000000;\\\\\\\\n      setInitialQueryTime(newTime + 1000);\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst displayNewPosts = () => {\\\\\\\\n  if (newUnseenPosts.length > 0) {\\\\\\\\n    stopFeedUpdates();\\\\\\\\n    const initialQueryTime = newUnseenPosts[0].block_timestamp + 1000; // timestamp is getting rounded by 3 digits\\\\\\\\n    const newTotalCount = postsData.postsCountLeft + newUnseenPosts.length;\\\\\\\\n    setPostsData({\\\\\\\\n      posts: [...newUnseenPosts, ...postsData.posts],\\\\\\\\n      postsCountLeft: newTotalCount,\\\\\\\\n    });\\\\\\\\n    setNewUnseenPosts([]);\\\\\\\\n    setInitialQueryTime(initialQueryTime);\\\\\\\\n  }\\\\\\\\n};\\\\\\\\nconst startFeedUpdates = () => {\\\\\\\\n  if (initialQueryTime === null) return;\\\\\\\\n\\\\\\\\n  clearInterval(feedInterval);\\\\\\\\n  const newFeedInterval = setInterval(() => {\\\\\\\\n    loadMorePosts(true);\\\\\\\\n  }, 5000);\\\\\\\\n  setFeedInterval(newFeedInterval);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst stopFeedUpdates = () => {\\\\\\\\n  clearInterval(feedInterval);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [initialized, setInitialized] = useState(false);\\\\\\\\nconst [initialQueryTime, setInitialQueryTime] = useState(null);\\\\\\\\nconst [feedInterval, setFeedInterval] = useState(null);\\\\\\\\nconst [newUnseenPosts, setNewUnseenPosts] = useState([]);\\\\\\\\nconst [postsData, setPostsData] = useState({ posts: [], postsCountLeft: 0 });\\\\\\\\nconst [isLoading, setIsLoading] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  loadMorePosts(false);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (postsData.posts.length > 0) {\\\\\\\\n    setPostExists(true);\\\\\\\\n  }\\\\\\\\n}, [postsData]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (initialQueryTime === null) {\\\\\\\\n    clearInterval(feedInterval);\\\\\\\\n  } else {\\\\\\\\n    startFeedUpdates();\\\\\\\\n  }\\\\\\\\n}, [initialQueryTime]);\\\\\\\\n\\\\\\\\nconst hasMore =\\\\\\\\n  postsData.postsCountLeft !== postsData.posts.length &&\\\\\\\\n  postsData.posts.length > 0;\\\\\\\\n\\\\\\\\nif (!initialized && sort) {\\\\\\\\n  setInitialized(true);\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"near/widget/Posts.Feed\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        hasMore,\\\\\\\\n        isLoading,\\\\\\\\n        loadMorePosts: () => {\\\\\\\\n          if (!isLoading) {\\\\\\\\n            loadMorePosts(false);\\\\\\\\n          }\\\\\\\\n        },\\\\\\\\n        posts: postsData.posts,\\\\\\\\n        showFlagAccountFeature: props.showFlagAccountFeature,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.469241710348e+21
    }
  },
  {
    "id": "2295099470",
    "receipt_id": "AGoXn9u1DDgET8LfyGsvggwaNDkmSjtz2j7JhRtBMYQq",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "54KiAitcdPueGgrrSVuyaduH3YxiyKbcPi6DHgBGnJhJ",
      "block_height": 111734892,
      "block_timestamp": 1706665416523069700
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "2W5EBKeKgWixEHzVT38Sj5dFN2HRTHU17vJqyNBjbMyA",
    "included_in_block_hash": "GjYDSzUuHfmon6GLTMeyuVPANcimn8c2zgMGp3AiS11x",
    "block_timestamp": "1706665414296295293",
    "block": {
      "block_height": 111734890
    },
    "receipt_conversion_tokens_burnt": "248703909496000000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.878460137478066e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.469241710348e+21
    }
  },
  {
    "id": "2298559490",
    "receipt_id": "GqSt2DAChUuUpDevJToGfLy5mC7TCzcb3LLa6M3eoKv3",
    "predecessor_account_id": "gagdiez.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "GuCfJW55GcYbJ3W1qUcRjGpNpN3hkSv1wgjJrHkXJt7f",
      "block_height": 111767020,
      "block_timestamp": 1706699261303828000
    },
    "receipt_outcome": {
      "gas_burnt": 6657795789434,
      "tokens_burnt": 665779578943400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "BkD69RuFf9aAL91MApCGbevpgV4oCEP5e3FGpazVHM6c",
    "included_in_block_hash": "CsCL4Wj7TRxEWHPyJfzePPcqFWuAM4dZBdLFH7whm3v",
    "block_timestamp": "1706699260222288676",
    "block": {
      "block_height": 111767019
    },
    "receipt_conversion_tokens_burnt": "242998700301600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 665779578943400000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Many thanks to all the contributors who helped creating the `Primitives` section in the official documentation!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- [Fungible Tokens (FT)](https://docs.near.org/primitives/ft)\\\\\\\\\\\\\\\\n- [Non-Fungible Tokens (NFT)](https://docs.near.org/primitives/nft)\\\\\\\\\\\\\\\\n- [Linkdrops](https://docs.near.org/primitives/linkdrop)\\\\\\\\\\\\\\\\n- [Price Oracles](https://docs.near.org/primitives/oracles)\\\\\\\\\\\\\\\\n- [Decentralized Organizations (DAO)](https://docs.near.org/primitives/dao)\\\\\\\\\\\\\\\\n- [Price Oracles](https://docs.near.org/primitives/oracles)\\\\\\\\\\\\\\\\n- [Decentralized Exchanges (DEX)](https://docs.near.org/primitives/dex)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nWe expect the `Primitives` section to keep growing with all the building blocks we have for Web3 developers, alongside useful code snippets on how to use them!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"fellowship\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5118823825158e+21
    }
  },
  {
    "id": "2298559518",
    "receipt_id": "8yMB9xXK8Apbw53EQ9M4PRKhUTEzGTRUNqmd43DfD9Ff",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7WDYmqy8peH62HiyMfVoock9gmXU63CcyVvpQPSnTRJN",
      "block_height": 111767021,
      "block_timestamp": 1706699262211430700
    },
    "receipt_outcome": {
      "gas_burnt": 6031041032708,
      "tokens_burnt": 603104103270800000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "BkD69RuFf9aAL91MApCGbevpgV4oCEP5e3FGpazVHM6c",
    "included_in_block_hash": "CsCL4Wj7TRxEWHPyJfzePPcqFWuAM4dZBdLFH7whm3v",
    "block_timestamp": "1706699260222288676",
    "block": {
      "block_height": 111767019
    },
    "receipt_conversion_tokens_burnt": "242998700301600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 603104103270800000000,
        "args": "{\"data\": {\"fellowship.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Many thanks to all the contributors who helped creating the `Primitives` section in the official documentation!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- [Fungible Tokens (FT)](https://docs.near.org/primitives/ft)\\\\\\\\\\\\\\\\n- [Non-Fungible Tokens (NFT)](https://docs.near.org/primitives/nft)\\\\\\\\\\\\\\\\n- [Linkdrops](https://docs.near.org/primitives/linkdrop)\\\\\\\\\\\\\\\\n- [Price Oracles](https://docs.near.org/primitives/oracles)\\\\\\\\\\\\\\\\n- [Decentralized Organizations (DAO)](https://docs.near.org/primitives/dao)\\\\\\\\\\\\\\\\n- [Price Oracles](https://docs.near.org/primitives/oracles)\\\\\\\\\\\\\\\\n- [Decentralized Exchanges (DEX)](https://docs.near.org/primitives/dex)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nWe expect the `Primitives` section to keep growing with all the building blocks we have for Web3 developers, alongside useful code snippets on how to use them!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5118823825158e+21
    }
  },
  {
    "id": "2301136601",
    "receipt_id": "EcY8tvWYZGMZxwuuSEq6S5R2GgyM6R22ztbvq1VGBwAu",
    "predecessor_account_id": "orangejoe.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "ctA8UPxqxoNPxoEEuVYv7Sc3smPiqDFmcieomavY3RZ",
      "block_height": 111778792,
      "block_timestamp": 1706712588255673300
    },
    "receipt_outcome": {
      "gas_burnt": 6651198943623,
      "tokens_burnt": 665119894362300000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "5zsPqy3FxLzXpRJp4iHzcwAWGmGd1H2RtMAfbVG9ANuo",
    "included_in_block_hash": "4vSF3rkYn411eKDok69uA91BmYN44P3JLYZwQsRhYFUa",
    "block_timestamp": "1706712586921897749",
    "block": {
      "block_height": 111778791
    },
    "receipt_conversion_tokens_burnt": "242937435710000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "update_community",
        "deposit": 0,
        "fee": 665119894362300000000,
        "args": "{\"handle\": \"challenges\", \"community\": {\"tag\": \"challenges\", \"name\": \"Challenges\", \"addons\": [], \"admins\": [\"orangejoe.near\", \"victorkanu1.near\"], \"handle\": \"challenges\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreibysr2mkwhb4j36h2t7mqwhynqdy4vzjfygfkfg65kuspd2bawauu\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\", \"description\": \"Growing developers skills and building reputation \", \"website_url\": null, \"bio_markdown\": \"This is a sample text about your community.\\\\\\\\nYou can change it on the community configuration page.\", \"github_handle\": null, \"twitter_handle\": null, \"telegram_handle\": null}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5780646997373e+21
    }
  }
]