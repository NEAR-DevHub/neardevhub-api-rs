[
  {
    "id": "6540583891",
    "receipt_id": "Gy5DVtRgFmrWXfxWGJ57NJSvybSRDj9uE1cWNNBPUWHh",
    "predecessor_account_id": "tfdevhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6QQt63jUW9fk9nBZr6a25xReH7hqTBiM2M1emUgr9ddt",
      "block_height": 123084508,
      "block_timestamp": 1720639034068761600
    },
    "receipt_outcome": {
      "gas_burnt": 14971466295619,
      "tokens_burnt": 1.4971466295619e+21,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "9pboSZ1mf94j7Piva7yh4N4Dkny6dEdeigKoosCYAWvm",
    "included_in_block_hash": "5Fb7HWvXDhW53U6TGEPYpi6rNgCLYPVPUnVoRPtmSxfY",
    "block_timestamp": "1720639032799927091",
    "block": {
      "block_height": 123084507
    },
    "receipt_conversion_tokens_burnt": "30889350338200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 1.4971466295619e+21,
        "args": "{\"id\": 82, \"timeline\": {\"status\": \"FUNDED\", \"payouts\": [\"https://nearblocks.io/txns/8oLUoDkEFXMfEgrMF5hw1FdXpgtJrUDWAgVWPaTR7KN5\"], \"kyc_verified\": true, \"timeline_version\": \"V1\", \"test_transaction_sent\": true, \"sponsor_requested_review\": false, \"trustees_released_payment\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.8777771926016e+21
    }
  },
  {
    "id": "6540584171",
    "receipt_id": "Hin4PQ4HzRNsgSQ8eMMGoeHFeoDPyZ8ghhhyzJykp6px",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "4M6JjWs8cTKM3UD5qJpiLohLNMyuhJm7ihG1B5UEWbG5",
      "block_height": 123084509,
      "block_timestamp": 1720639035270619100
    },
    "receipt_outcome": {
      "gas_burnt": 3497412127015,
      "tokens_burnt": 349741212701500000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "9pboSZ1mf94j7Piva7yh4N4Dkny6dEdeigKoosCYAWvm",
    "included_in_block_hash": "5Fb7HWvXDhW53U6TGEPYpi6rNgCLYPVPUnVoRPtmSxfY",
    "block_timestamp": "1720639032799927091",
    "block": {
      "block_height": 123084507
    },
    "receipt_conversion_tokens_burnt": "30889350338200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349741212701500000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"izcc.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":82,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tfdevhub.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.8777771926016e+21
    }
  },
  {
    "id": "6540649561",
    "receipt_id": "9t6K6NyUgnJeViwKveAsefsQLbaNQthHcY83HcJE81F3",
    "predecessor_account_id": "tfdevhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3kk8fZZYcjgMXrtrY3VpV5GCYYDeNvGPVEsrD8amFtGL",
      "block_height": 123084682,
      "block_timestamp": 1720639222919535400
    },
    "receipt_outcome": {
      "gas_burnt": 5434541351670,
      "tokens_burnt": 543454135167000000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "8heENm8dNWf6mQantTjHMbqnhYZzvrqJPzrcdNVGhF44",
    "included_in_block_hash": "7xZVfHQLmfG9kyPY71JDrXFM7GACHkkqp7vr6JAcLo5S",
    "block_timestamp": "1720639221980927255",
    "block": {
      "block_height": 123084681
    },
    "receipt_conversion_tokens_burnt": "30888903151400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 543454135167000000000,
        "args": "{\"id\": 81, \"timeline\": {\"status\": \"FUNDED\", \"payouts\": [\"https://nearblocks.io/txns/GzTxZLcHa3pVWBdHtQZYxZKj8qycwLJKYqtUksUtAj3Y\"], \"kyc_verified\": true, \"timeline_version\": \"V1\", \"test_transaction_sent\": true, \"sponsor_requested_review\": true, \"trustees_released_payment\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": true}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 932745471718300000000
    }
  },
  {
    "id": "6540649803",
    "receipt_id": "4kgQi5R3hB4EvqgeiwSE6x3ciWQJ7Eg8nZTJnoPj1PuY",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5RngDsLZ3j1fUWsG2WqStUFmZxHsjEy7Rp7z38SjBARF",
      "block_height": 123084683,
      "block_timestamp": 1720639223940417500
    },
    "receipt_outcome": {
      "gas_burnt": 3584024333999,
      "tokens_burnt": 358402433399900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "8heENm8dNWf6mQantTjHMbqnhYZzvrqJPzrcdNVGhF44",
    "included_in_block_hash": "7xZVfHQLmfG9kyPY71JDrXFM7GACHkkqp7vr6JAcLo5S",
    "block_timestamp": "1720639221980927255",
    "block": {
      "block_height": 123084681
    },
    "receipt_conversion_tokens_burnt": "30888903151400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 358402433399900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"22516c1b4e5d40db919e5e56a040c5670eac947fcb53a71207d5ce640a973820\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":81,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tfdevhub.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 932745471718300000000
    }
  },
  {
    "id": "6540674956",
    "receipt_id": "Bmv6LS5n8odzTmAX4dmdAexyRAnumPkKeaLgjNdkLWfG",
    "predecessor_account_id": "tfdevhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "HsmAgzDuuAAywfQLw9EcZz7h9afMenjDGHaa3uLyDmMm",
      "block_height": 123084753,
      "block_timestamp": 1720639299622466000
    },
    "receipt_outcome": {
      "gas_burnt": 4431256100141,
      "tokens_burnt": 443125610014100000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "DTXsQb4i7tjcpJ3B3xaAwMSXhXRiKADziSuEZZcxDQUH",
    "included_in_block_hash": "BD2E9ex7td321oPKqZozJW3AFo4XiQYFA6LbxeKrb4aJ",
    "block_timestamp": "1720639298425246770",
    "block": {
      "block_height": 123084752
    },
    "receipt_conversion_tokens_burnt": "30889126744800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 443125610014100000000,
        "args": "{\"id\": 135, \"timeline\": {\"status\": \"FUNDED\", \"payouts\": [\"https://nearblocks.io/txns/BNEimV1tqyV91FYXsecSYP3wLbsen99UzMDqWXmtYRzF\"], \"kyc_verified\": true, \"timeline_version\": \"V1\", \"test_transaction_sent\": true, \"sponsor_requested_review\": true, \"trustees_released_payment\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": true}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 826937073396800000000
    }
  },
  {
    "id": "6540675251",
    "receipt_id": "3ejwHsXNe2icE6muYuzW52FbmW32k2oG1R7Jw4Hv2fep",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8zEufHe6A3B3tw4zHzuh4gpYaXMUqWSKmLG7jTg5E8V9",
      "block_height": 123084754,
      "block_timestamp": 1720639300783887400
    },
    "receipt_outcome": {
      "gas_burnt": 3529223366379,
      "tokens_burnt": 352922336637900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "DTXsQb4i7tjcpJ3B3xaAwMSXhXRiKADziSuEZZcxDQUH",
    "included_in_block_hash": "BD2E9ex7td321oPKqZozJW3AFo4XiQYFA6LbxeKrb4aJ",
    "block_timestamp": "1720639298425246770",
    "block": {
      "block_height": 123084752
    },
    "receipt_conversion_tokens_burnt": "30889126744800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 352922336637900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"spring-neardao.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":135,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tfdevhub.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 826937073396800000000
    }
  },
  {
    "id": "6540717277",
    "receipt_id": "2GXBFs8u7eWZ3EMtshk9hvHknVxu4tnBHoxXY4xxQwxQ",
    "predecessor_account_id": "tfdevhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "FfoEyu19VqbiRNBVQShtNu2YTC3DjXvz3xGuUbq6DTCF",
      "block_height": 123084882,
      "block_timestamp": 1720639441888233700
    },
    "receipt_outcome": {
      "gas_burnt": 4689989849464,
      "tokens_burnt": 468998984946400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "8WybazLykZnAo8o8KidhB9PYtTdc36AbWhRdPscA8x5B",
    "included_in_block_hash": "HhGHknPGCTmseq9kTMUCHfTbXJycFqbFtvRH9KLbp37z",
    "block_timestamp": "1720639440780891419",
    "block": {
      "block_height": 123084881
    },
    "receipt_conversion_tokens_burnt": "30881077382400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 468998984946400000000,
        "args": "{\"id\": 132, \"timeline\": {\"status\": \"FUNDED\", \"payouts\": [\"Bank Payment 2,515.57 EUR on 7/9/24\"], \"kyc_verified\": true, \"timeline_version\": \"V1\", \"test_transaction_sent\": true, \"sponsor_requested_review\": true, \"trustees_released_payment\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": true}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 852413007692700000000
    }
  },
  {
    "id": "6540717724",
    "receipt_id": "2S6peC8vhWZ9UWgeup8ZnPqsZ9Y6735fswoXkg4UAi5P",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7WV9GWnQ5YDX3u5JTPM4n4XnHNJsX6Wyzn32xxt4GPxx",
      "block_height": 123084883,
      "block_timestamp": 1720639443017342500
    },
    "receipt_outcome": {
      "gas_burnt": 3525329453639,
      "tokens_burnt": 352532945363900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "8WybazLykZnAo8o8KidhB9PYtTdc36AbWhRdPscA8x5B",
    "included_in_block_hash": "HhGHknPGCTmseq9kTMUCHfTbXJycFqbFtvRH9KLbp37z",
    "block_timestamp": "1720639440780891419",
    "block": {
      "block_height": 123084881
    },
    "receipt_conversion_tokens_burnt": "30881077382400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 352532945363900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"denbite.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":132,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tfdevhub.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 852413007692700000000
    }
  },
  {
    "id": "6542313641",
    "receipt_id": "6EioTZaWk8GeXpRthWtLEhxu7aRtAim9rjJZFWy1N2F7",
    "predecessor_account_id": "tfdevhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3izopXHxSa784gCb4FMSmiJkn2Mthk2Fsn1HsgpEHoqK",
      "block_height": 123089498,
      "block_timestamp": 1720644580499395800
    },
    "receipt_outcome": {
      "gas_burnt": 6114108039135,
      "tokens_burnt": 611410803913500000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "DWDkUyyGhKDFK1ghheXmRkhbBtFXMHgsPdM9ePL6JLv7",
    "included_in_block_hash": "Aqa1WBFy7r49ZU5WN2Rv1aDGoGQj5hPKr2oRmfMftCuY",
    "block_timestamp": "1720644579345508611",
    "block": {
      "block_height": 123089497
    },
    "receipt_conversion_tokens_burnt": "31536653231200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal",
        "deposit": 0,
        "fee": 611410803913500000000,
        "args": "{\"id\": 122, \"body\": {\"name\": \"DevHub Fin Ops 5/24/24 - 6/14/24 (3 weeks)\", \"summary\": \"Audit and reconciliation of 2024 DevHub proposals submitted for payment processing.\", \"category\": \"DevDAO Operations\", \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"supervisor\": \"theori.near\", \"description\": \"The process to pay DevHub contributor proposals is fractured.  I was brought on board to audit the current system in place, audit the records as they currently exist, propose improvements based on my findings, collaborate to implement an improved process and serve as the ongoing liason between DevHub contributors and NF as it relates to proposal payment processing.\\\\\\\\n\\\\\\\\nWeek #1 5/24/24 - 5/30/24\\\\\\\\n5/24/24 - Onboarding w/Ori and Dan (NF Legal)\\\\\\\\n5/28/24 - Onboarding, TG set up, Zoom meeting w/Ori, TG w/Dan re:schedule access\\\\\\\\n5/29/24 - Reset accounts/onboard, Update all proposals in DevHub w/payment links, Create initials list of blockers, TG w/Ori and Dan \\\\\\\\nTotal 9.5 hours\\\\\\\\n\\\\\\\\nWeek #2 6/3/24 - 6/7/24\\\\\\\\n6/3/24 - Connect to Slack, Connect to finance payment schedules, Respond to email, Research J. Spano proposal, TG w/Dan, Research CRM\\\\\\\\n6/5/24 - TG\\\\\\\\n6/6/24 - J. Spano rsolution, Boris proposal(s) research, Work on new workflow ideas, Prep and call w/Ori\\\\\\\\n6/7/24 - Slack w/Philipp, Update CRM, Mtg w/Ori to discuss update and treasury, Research QB\\\\\\\\nTotal 10 hours\\\\\\\\n\\\\\\\\nWeek #3 6/9/24 - 6/14/24\\\\\\\\n6/9/24 - TG\\\\\\\\n6/10/24 - TG and email, Agenda update for meeting, TG, Zoom meeting to review processes, Prepare export file for audit\\\\\\\\n6/11/24 - Prep info for Ori\\\\\\\\\\\\'s meeting, Update CRM, TG w/Dan re:CRM export, Work on export file, TG\\\\\\\\n6/12/24 - Update proposals numbers from DevHub portal on master file for audit, TG\\\\\\\\n6/13/24 - Update DevHub portal w/payment links, Meeting w/Ori, Isolate recon items from audit\\\\\\\\n6/14/24 - TG w/Dan, Update CRM, Slack, Email\\\\\\\\nTotal 17.5 hours\\\\\\\\n\\\\\\\\nResults:  \\\\\\\\n\\\\\\\\n2024 proposals are reconciled between DevHub portal and CRM.  \\\\\\\\n\\\\\\\\nThere are:\\\\\\\\n4 proposals in DevHub portal that need to be canceled or moved\\\\\\\\n5 proposals in CRM that are from the old system showing as Invoice Pending that need to be canceled or moved\\\\\\\\n2 proposals as Invoice Pending that I have reaching out to the contributor for an invoice\\\\\\\\nAll other proposals are in KYC or Legal Pending\\\\\\\\n\\\\\\\\nWe are still ironing out some different ideas on the final process that these proposals will followed, focused primarily on KYC and invoice submission.\\\\\\\\n\\\\\\\\n- Total hours: 37\\\\\\\\n- Rate: $80/hour\\\\\\\\n\\\\\\\\nRate determination is below the low end of the average hourly contract rate ($87 - $162) for an accountant with the same years of experience.  That average rate does not account for my 5 years of blockchain specific experience.  I\\\\\\\\\\\\'m not fulfilling all the duties that typically fall under this type of role, that is why I proposed a rate lower than the low end of the average.  \\\\\\\\nhttps://www.salary.com/research/salary/benchmark/controller-hourly-wages\\\\\\\\n\\\\\\\\n\", \"linked_proposals\": [], \"receiver_account\": \"9bd73bc9ba6ff289e2deb597dd6fe83dc0056af7a2937d6dec119660ba0146a4\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"2960\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 992700822035800000000
    }
  },
  {
    "id": "6542313766",
    "receipt_id": "EKb8KP72HSSYw6z5szyFSNeQo9u8zoEqHSzwcS9wPzc8",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "JDm5UijMMgDmAPbC2PmcknmKRnZDPcVQedinU4dv6Y2c",
      "block_height": 123089499,
      "block_timestamp": 1720644581577848600
    },
    "receipt_outcome": {
      "gas_burnt": 3497533648911,
      "tokens_burnt": 349753364891100000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "DWDkUyyGhKDFK1ghheXmRkhbBtFXMHgsPdM9ePL6JLv7",
    "included_in_block_hash": "Aqa1WBFy7r49ZU5WN2Rv1aDGoGQj5hPKr2oRmfMftCuY",
    "block_timestamp": "1720644579345508611",
    "block": {
      "block_height": 123089497
    },
    "receipt_conversion_tokens_burnt": "31536653231200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349753364891100000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tfdevhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":122,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tfdevhub.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 992700822035800000000
    }
  },
  {
    "id": "6542925269",
    "receipt_id": "4PmvVDRf3nFkCqcb47hfzWwU3PiZHWifG9yvDVBdBjSN",
    "predecessor_account_id": "tfdevhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "FtV5c3P9FeuDr8L4oYEo28rr1QdoCd4S1HDECJYBqoKq",
      "block_height": 123091241,
      "block_timestamp": 1720646537796698600
    },
    "receipt_outcome": {
      "gas_burnt": 9180089249466,
      "tokens_burnt": 918008924946600000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "EipyW4xjHcvbVEojAwr4XXwo4btcYFz45HXUMfvuc3JM",
    "included_in_block_hash": "3WqybZznhzDSG4MnzoH73YZQFMyr186zVPEtg1r1uDK6",
    "block_timestamp": "1720646536661993707",
    "block": {
      "block_height": 123091240
    },
    "receipt_conversion_tokens_burnt": "30880406602200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 918008924946600000000,
        "args": "{\"id\": 28, \"timeline\": {\"status\": \"FUNDED\", \"payouts\": [\"Transferred to and Paid by Infra\"], \"kyc_verified\": true, \"timeline_version\": \"V1\", \"test_transaction_sent\": true, \"sponsor_requested_review\": true, \"trustees_released_payment\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.2986114135083e+21
    }
  },
  {
    "id": "6542925464",
    "receipt_id": "GaEreoME5jBzcVaBBs6nJssNzV8tBF7FRoo5pASMGfh4",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "94hKux6sMSHKFRs653Wz491txuqi1ooLTfkbYrJDY14d",
      "block_height": 123091242,
      "block_timestamp": 1720646538891074800
    },
    "receipt_outcome": {
      "gas_burnt": 3497220819595,
      "tokens_burnt": 349722081959500000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "EipyW4xjHcvbVEojAwr4XXwo4btcYFz45HXUMfvuc3JM",
    "included_in_block_hash": "3WqybZznhzDSG4MnzoH73YZQFMyr186zVPEtg1r1uDK6",
    "block_timestamp": "1720646536661993707",
    "block": {
      "block_height": 123091240
    },
    "receipt_conversion_tokens_burnt": "30880406602200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349722081959500000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"jutsuai.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":28,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tfdevhub.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.2986114135083e+21
    }
  },
  {
    "id": "6543273399",
    "receipt_id": "76ob6d4xi6h7gDKDK3ot2xS8ypoVtznRcyGKw6SJg1av",
    "predecessor_account_id": "theori.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "25bST7o9aoMSTXE2hJqUszn4USqbT6r9P23bUmMKnPpS",
      "block_height": 123092245,
      "block_timestamp": 1720647680958147600
    },
    "receipt_outcome": {
      "gas_burnt": 6884879756633,
      "tokens_burnt": 688487975663300000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "FP4Wy27EHEoT9ic2d4vh37WTk9sFnzyfMJ8RUsDzdNLJ",
    "included_in_block_hash": "Cv4Zwcbzij5EQ8phNJvpiYUJcTKjWZcFkpmq5uDg3Q8d",
    "block_timestamp": "1720647679909035385",
    "block": {
      "block_height": 123092244
    },
    "receipt_conversion_tokens_burnt": "30847985559200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 688487975663300000000,
        "args": "{\"id\": 122, \"timeline\": {\"status\": \"REVIEW\", \"kyc_verified\": true, \"timeline_version\": \"V1\", \"sponsor_requested_review\": true, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.0690379748884e+21
    }
  },
  {
    "id": "6543273501",
    "receipt_id": "HcReCAeqHgCSz9pwt9YLBXKQtJetnLgkTC7NHPsfJaXP",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "HTHYnXkcMnqmHAgKMyYzjsrPLXH1evdndF9FKo1sVGt1",
      "block_height": 123092246,
      "block_timestamp": 1720647682090481700
    },
    "receipt_outcome": {
      "gas_burnt": 3497020136659,
      "tokens_burnt": 349702013665900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "FP4Wy27EHEoT9ic2d4vh37WTk9sFnzyfMJ8RUsDzdNLJ",
    "included_in_block_hash": "Cv4Zwcbzij5EQ8phNJvpiYUJcTKjWZcFkpmq5uDg3Q8d",
    "block_timestamp": "1720647679909035385",
    "block": {
      "block_height": 123092244
    },
    "receipt_conversion_tokens_burnt": "30847985559200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349702013665900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tfdevhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":122,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"theori.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.0690379748884e+21
    }
  },
  {
    "id": "6543522844",
    "receipt_id": "31Geo3FEjKSfL976Kg2TkGWJmifZHhvvx3iyTzM8J2UD",
    "predecessor_account_id": "theori.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7HA7DuP535ztZa5FQT2sBhhm4VNZrYxQ9zWhDPQFqYQ4",
      "block_height": 123093000,
      "block_timestamp": 1720648523232191500
    },
    "receipt_outcome": {
      "gas_burnt": 7447133809747,
      "tokens_burnt": 744713380974700000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "5NYq9G1TuprnrscrE7qzAKF7gFnErfpi8TUUuEyp1who",
    "included_in_block_hash": "43wZ18Aw6AM7e8c71nxUxyN5mYxvnknAVGnLb879E2s5",
    "block_timestamp": "1720648522071580509",
    "block": {
      "block_height": 123092999
    },
    "receipt_conversion_tokens_burnt": "30848432746000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 744713380974700000000,
        "args": "{\"id\": 122, \"timeline\": {\"status\": \"APPROVED\", \"kyc_verified\": true, \"timeline_version\": \"V1\", \"sponsor_requested_review\": true, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.1252638273866e+21
    }
  },
  {
    "id": "6543522988",
    "receipt_id": "5UpHm1pKprPXxUYMrkFJf7Et9kk4SooNYviNQpnVPH4m",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3uErtjo443CsFU1z2fMmW14KbDh4s1CyBiMHj57uamv1",
      "block_height": 123093001,
      "block_timestamp": 1720648524213685500
    },
    "receipt_outcome": {
      "gas_burnt": 3497020136659,
      "tokens_burnt": 349702013665900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "5NYq9G1TuprnrscrE7qzAKF7gFnErfpi8TUUuEyp1who",
    "included_in_block_hash": "43wZ18Aw6AM7e8c71nxUxyN5mYxvnknAVGnLb879E2s5",
    "block_timestamp": "1720648522071580509",
    "block": {
      "block_height": 123092999
    },
    "receipt_conversion_tokens_burnt": "30848432746000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349702013665900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tfdevhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":122,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"theori.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.1252638273866e+21
    }
  },
  {
    "id": "6562228906",
    "receipt_id": "8vBC6uF4DzdVEtK99p7oqLVo8D6KX2EStcTYgAdbYwgY",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "CtPZP4n1faPKGaDnY8aZ5E5fHhTqyn2ikzC5weuGkTk2",
      "block_height": 123144919,
      "block_timestamp": 1720707142713476600
    },
    "receipt_outcome": {
      "gas_burnt": 10586624561634,
      "tokens_burnt": 1.0586624561634e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "FUMKztRbDABuCtz27U6wUKxYbgv5q1r3YTyXhtRuchGy",
    "included_in_block_hash": "8K4ZN9UKLVf5HpnjapQMVguwbbUTyCEu3AjfWTQhTaPa",
    "block_timestamp": "1720707141631189343",
    "block": {
      "block_height": 123144918
    },
    "receipt_conversion_tokens_burnt": "38645358197400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.0586624561634e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.entity.proposal.CommentsAndLogs\": {\"\": \"const { getLinkUsingCurrentGateway } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\"\\\\\\\\n) || { getLinkUsingCurrentGateway: () => {} };\\\\\\\\nconst snapshotHistory = props.snapshotHistory;\\\\\\\\nconst proposalId = props.id;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  .log-line {\\\\\\\\n    position: absolute;\\\\\\\\n    left: 7%;\\\\\\\\n    top: -30px;\\\\\\\\n    bottom: 0;\\\\\\\\n    z-index: 1;\\\\\\\\n    width: 1px;\\\\\\\\n    background-color: var(--bs-border-color);\\\\\\\\n    z-index: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .inline-flex {\\\\\\\\n    display: -webkit-inline-box !important;\\\\\\\\n    align-items: center !important;\\\\\\\\n    gap: 0.25rem !important;\\\\\\\\n    margin-right: 2px;\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommentContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// check snapshot history all keys and values for differences\\\\\\\\nfunction getDifferentKeysWithValues(obj1, obj2) {\\\\\\\\n  return Object.keys(obj1)\\\\\\\\n    .filter((key) => {\\\\\\\\n      if (key !== \\\\\\\\\\\\\\\"editor_id\\\\\\\\\\\\\\\" && obj2.hasOwnProperty(key)) {\\\\\\\\n        const value1 = obj1[key];\\\\\\\\n        const value2 = obj2[key];\\\\\\\\n\\\\\\\\n        if (typeof value1 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" && typeof value2 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else if (Array.isArray(value1) && Array.isArray(value2)) {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else {\\\\\\\\n          return value1 !== value2;\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      return false;\\\\\\\\n    })\\\\\\\\n    .map((key) => ({\\\\\\\\n      key,\\\\\\\\n      originalValue: obj1[key],\\\\\\\\n      modifiedValue: obj2[key],\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  data: null,\\\\\\\\n  socialComments: null,\\\\\\\\n  changedKeysListWithValues: null,\\\\\\\\n  snapshotHistoryLength: 0,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction sortTimelineAndComments() {\\\\\\\\n  const comments = Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", props.item, { subscribe: true });\\\\\\\\n\\\\\\\\n  if (snapshotHistory.length > state.snapshotHistoryLength) {\\\\\\\\n    const changedKeysListWithValues = snapshotHistory\\\\\\\\n      .slice(1)\\\\\\\\n      .map((item, index) => {\\\\\\\\n        const startingPoint = snapshotHistory[index]; // Set comparison to the previous item\\\\\\\\n        return {\\\\\\\\n          editorId: item.editor_id,\\\\\\\\n          ...getDifferentKeysWithValues(startingPoint, item),\\\\\\\\n        };\\\\\\\\n      });\\\\\\\\n\\\\\\\\n    // add log for accepting terms and condition\\\\\\\\n    changedKeysListWithValues.unshift({\\\\\\\\n      0: {\\\\\\\\n        key: \\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\\",\\\\\\\\n        originalValue: \\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\",\\\\\\\\n        modifiedValue: snapshotHistory[0].timestamp,\\\\\\\\n      },\\\\\\\\n      1: {\\\\\\\\n        key: \\\\\\\\\\\\\\\"terms_and_condition\\\\\\\\\\\\\\\",\\\\\\\\n        originalValue: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n        modifiedValue: \\\\\\\\\\\\\\\"accepted\\\\\\\\\\\\\\\",\\\\\\\\n      },\\\\\\\\n      editorId: snapshotHistory[0].editor_id,\\\\\\\\n    });\\\\\\\\n\\\\\\\\n    State.update({\\\\\\\\n      changedKeysListWithValues,\\\\\\\\n      snapshotHistoryLength: snapshotHistory.length,\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort comments and timeline logs by time\\\\\\\\n  const snapShotTimeStamp = Array.isArray(snapshotHistory)\\\\\\\\n    ? snapshotHistory.map((i) => {\\\\\\\\n        return { blockHeight: null, timestamp: parseFloat(i.timestamp / 1e6) };\\\\\\\\n      })\\\\\\\\n    : [];\\\\\\\\n\\\\\\\\n  const commentsTimeStampPromise = Array.isArray(comments)\\\\\\\\n    ? Promise.all(\\\\\\\\n        comments.map((item) => {\\\\\\\\n          return asyncFetch(\\\\\\\\n            `https://api.near.social/time?blockHeight=${item.blockHeight}`\\\\\\\\n          ).then((res) => {\\\\\\\\n            const timeMs = parseFloat(res.body);\\\\\\\\n            return {\\\\\\\\n              blockHeight: item.blockHeight,\\\\\\\\n              timestamp: timeMs,\\\\\\\\n            };\\\\\\\\n          });\\\\\\\\n        })\\\\\\\\n      ).then((res) => res)\\\\\\\\n    : Promise.resolve([]);\\\\\\\\n\\\\\\\\n  commentsTimeStampPromise.then((commentsTimeStamp) => {\\\\\\\\n    const combinedArray = [...snapShotTimeStamp, ...commentsTimeStamp];\\\\\\\\n    combinedArray.sort((a, b) => a.timestamp - b.timestamp);\\\\\\\\n    State.update({ data: combinedArray, socialComments: comments });\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nsortTimelineAndComments();\\\\\\\\nconst Comment = ({ commentItem }) => {\\\\\\\\n  const { accountId, blockHeight } = commentItem;\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n    blockHeight,\\\\\\\\n  };\\\\\\\\n  const content = JSON.parse(Social.get(item.path, blockHeight) ?? \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n  const link = `https://devhub.near.page/proposal/${proposalId}?accountId=${accountId}&blockHeight=${blockHeight}`;\\\\\\\\n  const hightlightComment =\\\\\\\\n    parseInt(props.blockHeight ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") === blockHeight &&\\\\\\\\n    props.accountId === accountId;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div style={{ zIndex: 99, background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              accountId: accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <CommentContainer\\\\\\\\n          id={`${accountId.replace(/[^a-z0-9]/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")}${blockHeight}`}\\\\\\\\n          style={{ border: hightlightComment ? \\\\\\\\\\\\\\\"2px solid black\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <Header className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <Link href={`/near/widget/ProfilePage?accountId=${accountId}`}>\\\\\\\\n                <span className=\\\\\\\\\\\\\\\"fw-bold text-black\\\\\\\\\\\\\\\">{accountId}</span>\\\\\\\\n              </Link>\\\\\\\\n              commented \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  blockHeight: blockHeight,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/Posts.Menu\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: accountId,\\\\\\\\n                    blockHeight: blockHeight,\\\\\\\\n                    contentPath: `/post/comment`,\\\\\\\\n                    contentType: \\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </Header>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                text: content.text,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.LikeButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/CopyUrlButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  url: link,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </CommentContainer>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction capitalizeFirstLetter(string) {\\\\\\\\n  const updated = string.replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n  return updated.charAt(0).toUpperCase() + updated.slice(1).toLowerCase();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction parseTimelineKeyAndValue(timeline, originalValue, modifiedValue) {\\\\\\\\n  const oldValue = originalValue[timeline];\\\\\\\\n  const newValue = modifiedValue[timeline];\\\\\\\\n  switch (timeline) {\\\\\\\\n    case \\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        oldValue !== newValue && (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved proposal from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: oldValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            stage\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"sponsor_requested_review\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed review</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"reviewer_completed_attestation\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed attestation</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"kyc_verified\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>verified KYC/KYB</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"test_transaction_sent\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        !oldValue &&\\\\\\\\n        newValue && (\\\\\\\\n          <span>\\\\\\\\n            confirmed sponsorship and shared funding steps with recipient\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"payouts\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>updated the funding payment links.</span>;\\\\\\\\n    // we don\\\\\\\\\\\\'t have this step for now\\\\\\\\n    // case \\\\\\\\\\\\\\\"request_for_trustees_created\\\\\\\\\\\\\\\":\\\\\\\\n    //   return !oldValue && newValue && <span>successfully created request for trustees</span>;\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccountProfile = ({ accountId }) => {\\\\\\\\n  return (\\\\\\\\n    <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          accountId: accountId,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n          showAccountId: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </span>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst parseProposalKeyAndValue = (key, modifiedValue, originalValue) => {\\\\\\\\n  switch (key) {\\\\\\\\n    case \\\\\\\\\\\\\\\"terms_and_condition\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          accepted\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AcceptedTerms\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{ proposalId: proposalId }}\\\\\\\\n          />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed title</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"summary\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed {key}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed category from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>updated linked proposals</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_usd_amount\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship amount from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_paid_in_currency\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship currency from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"receiver_account\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed receiver account from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"supervisor\\\\\\\\\\\\\\\":\\\\\\\\n      return !originalValue && modifiedValue ? (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          added\\\\\\\\n          <AccountProfile accountId={modifiedValue} />\\\\\\\\n          as supervisor\\\\\\\\n        </span>\\\\\\\\n      ) : (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed receiver account from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsor\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed sponsor from <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\": {\\\\\\\\n      const modifiedKeys = Object.keys(modifiedValue);\\\\\\\\n      const originalKeys = Object.keys(originalValue);\\\\\\\\n      return modifiedKeys.map((i, index) => {\\\\\\\\n        const text = parseTimelineKeyAndValue(i, originalValue, modifiedValue);\\\\\\\\n        return (\\\\\\\\n          text && (\\\\\\\\n            <span key={index} className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              {text}\\\\\\\\n              {text && \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LogIconContainer = styled.div`\\\\\\\\n  margin-left: 50px;\\\\\\\\n  z-index: 99;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin-left: 10px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Log = ({ timestamp }) => {\\\\\\\\n  const updatedData = useMemo(\\\\\\\\n    () =>\\\\\\\\n      state.changedKeysListWithValues.find((obj) =>\\\\\\\\n        Object.values(obj).some(\\\\\\\\n          (value) =>\\\\\\\\n            value && parseFloat(value.modifiedValue / 1e6) === timestamp\\\\\\\\n        )\\\\\\\\n      ),\\\\\\\\n    [state.changedKeysListWithValues, timestamp]\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const editorId = updatedData.editorId;\\\\\\\\n  const valuesArray = Object.values(updatedData ?? {});\\\\\\\\n  // if valuesArray length is 2 that means it only has timestamp and editorId\\\\\\\\n  if (!updatedData || valuesArray.length === 2) {\\\\\\\\n    return <></>;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return valuesArray.map((i, index) => {\\\\\\\\n    if (i.key && i.key !== \\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\\" && i.key !== \\\\\\\\\\\\\\\"proposal_body_version\\\\\\\\\\\\\\\") {\\\\\\\\n      return (\\\\\\\\n        <LogIconContainer\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          key={index}\\\\\\\\n        >\\\\\\\\n          <img\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiffqrxdi4xqu7erf46gdlwuodt6dm6rji2jtixs3iionjvga6rhdi\\\\\\\\\\\\\\\"\\\\\\\\n            height={30}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"flex-1 gap-1 w-100 text-wrap text-muted align-items-center \\\\\\\\\\\\\\\" +\\\\\\\\n              (i.key === \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" &&\\\\\\\\n              Object.keys(i.originalValue ?? {}).length > 1\\\\\\\\n                ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                : \\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <span\\\\\\\\n              className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\"\\\\\\\\n              style={{ marginRight: 0 }}\\\\\\\\n            >\\\\\\\\n              <AccountProfile accountId={editorId} showAccountId={true} />\\\\\\\\n            </span>\\\\\\\\n            {parseProposalKeyAndValue(i.key, i.modifiedValue, i.originalValue)}\\\\\\\\n            {i.key !== \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" && \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                blockTimestamp: timestamp * 1000000,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </LogIconContainer>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (Array.isArray(state.data)) {\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"log-line\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ height: state.data.length > 2 ? \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"150%\\\\\\\\\\\\\\\" }}\\\\\\\\n      ></div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n        {state.data.map((i, index) => {\\\\\\\\n          if (i.blockHeight) {\\\\\\\\n            const item = state.socialComments.find(\\\\\\\\n              (t) => t.blockHeight === i.blockHeight\\\\\\\\n            );\\\\\\\\n            return <Comment commentItem={item} />;\\\\\\\\n          } else {\\\\\\\\n            return <Log timestamp={i.timestamp} key={index} />;\\\\\\\\n          }\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\"}, \"devhub.entity.addon.blogv2.editor.content\": {\"\": \"const { Card } =\\\\\\\\n  VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.Card\\\\\\\\\\\\\\\") ||\\\\\\\\n  (() => <></>);\\\\\\\\nconst { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\") || (() => {});\\\\\\\\n\\\\\\\\nconst {\\\\\\\\n  data,\\\\\\\\n  handle,\\\\\\\\n  onSubmit,\\\\\\\\n  onCancel,\\\\\\\\n  onDelete,\\\\\\\\n  allBlogs: allBlogsOfThisInstance,\\\\\\\\n  communityAddonId,\\\\\\\\n  setSelectedItemChanged,\\\\\\\\n  addonParameters,\\\\\\\\n} = props;\\\\\\\\n\\\\\\\\nconst selectOptions = useMemo(() => {\\\\\\\\n  let ops = (addonParameters.categories || []).map((it) => ({\\\\\\\\n    title: it.category,\\\\\\\\n    description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    value: it.value,\\\\\\\\n  }));\\\\\\\\n  if (addonParameters.categoryRequired === \\\\\\\\\\\\\\\"required\\\\\\\\\\\\\\\") {\\\\\\\\n    return ops;\\\\\\\\n  }\\\\\\\\n  return [{ title: \\\\\\\\\\\\\\\"None\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }, ...ops];\\\\\\\\n}, [addonParameters]);\\\\\\\\n\\\\\\\\nconst Banner = styled.div`\\\\\\\\n  border-radius: var(--bs-border-radius-xl) !important;\\\\\\\\n  height: 100%;\\\\\\\\n\\\\\\\\n  & > div :not(.btn) {\\\\\\\\n    position: absolute;\\\\\\\\n    display: none;\\\\\\\\n    margin: 0 !important;\\\\\\\\n    width: 0 !important;\\\\\\\\n    height: 0 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    padding: 0.5rem 0.75rem !important;\\\\\\\\n    min-height: 32;\\\\\\\\n    line-height: 1;\\\\\\\\n\\\\\\\\n    border: none;\\\\\\\\n    border-radius: 50px;\\\\\\\\n    --bs-btn-color: #ffffff;\\\\\\\\n    --bs-btn-bg: #087990;\\\\\\\\n    --bs-btn-border-color: #087990;\\\\\\\\n    --bs-btn-hover-color: #ffffff;\\\\\\\\n    --bs-btn-hover-bg: #055160;\\\\\\\\n    --bs-btn-hover-border-color: #055160;\\\\\\\\n    --bs-btn-focus-shadow-rgb: 49, 132, 253;\\\\\\\\n    --bs-btn-active-color: #ffffff;\\\\\\\\n    --bs-btn-active-bg: #055160;\\\\\\\\n    --bs-btn-active-border-color: #055160;\\\\\\\\n    --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\\\\\\\\n    opacity: 0.8;\\\\\\\\n\\\\\\\\n    &:hover {\\\\\\\\n      opacity: 1;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst DropdownBtnContainer = styled.div`\\\\\\\\n  font-size: 13px;\\\\\\\\n  min-width: 150px;\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .select-header {\\\\\\\\n    display: flex;\\\\\\\\n    justify-content: space-between;\\\\\\\\n    align-items: center;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    border-radius-top: 5px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    background-color: #fff;\\\\\\\\n    border-radius: 5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .no-border {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .options-card {\\\\\\\\n    position: absolute;\\\\\\\\n    bottom: 100%;\\\\\\\\n    right: 0;\\\\\\\\n    width: 200%;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    background-color: #fff;\\\\\\\\n    padding: 0.5rem;\\\\\\\\n    z-index: 99;\\\\\\\\n    font-size: 13px;\\\\\\\\n    border-radius:0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .left {\\\\\\\\n    right: 0 !important;\\\\\\\\n    left: auto !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .options-card {\\\\\\\\n      right: 0 !important;\\\\\\\\n      left: auto !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option {\\\\\\\\n    margin-block: 5px;\\\\\\\\n    padding: 10px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    border-bottom: 1px solid #f0f0f0;\\\\\\\\n    transition: background-color 0.3s ease;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:hover {\\\\\\\\n    background-color: #f0f0f0; /* Custom hover effect color */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:last-child {\\\\\\\\n    border-bottom: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f4f4f4 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    font-weight: 500;\\\\\\\\n    color: #b3b3b3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 8px;\\\\\\\\n    height: 8px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: rgba(129, 129, 129, 0.5);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green {\\\\\\\\n    background-color: #00ec97;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst allBlogKeys =\\\\\\\\n  Social.keys(`${handle}.community.devhub.near/blog/*`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\") || {};\\\\\\\\n\\\\\\\\nconst initialData = data;\\\\\\\\n\\\\\\\\nconst [initialBlogAmount, setInitialBlogAmount] = useState(\\\\\\\\n  Object.keys(allBlogKeys[`${handle}.community.devhub.near`][\\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\"] || {})\\\\\\\\n    .length || 0\\\\\\\\n);\\\\\\\\n\\\\\\\\n// Parse the date string to create a Date object\\\\\\\\nconst publishedAtDate = new Date(initialData.publishedAt || new Date());\\\\\\\\nconst year = publishedAtDate.getFullYear();\\\\\\\\nconst month = (publishedAtDate.getMonth() + 1).toString().padStart(2, \\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\");\\\\\\\\nconst day = publishedAtDate.getDate().toString().padStart(2, \\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\");\\\\\\\\nconst initialFormattedDate = year + \\\\\\\\\\\\\\\"-\\\\\\\\\\\\\\\" + month + \\\\\\\\\\\\\\\"-\\\\\\\\\\\\\\\" + day;\\\\\\\\n\\\\\\\\nconst [content, setContent] = useState(initialData.content || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [title, setTitle] = useState(initialData.title || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [subtitle, setSubtitle] = useState(initialData.subtitle || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [description, setDescription] = useState(initialData.description || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [author, setAuthor] = useState(initialData.author || context.accountId);\\\\\\\\nconst [previewMode, setPreviewMode] = useState(\\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\"); // \\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\" or \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" // \\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\" or \\\\\\\\\\\\\\\"page\\\\\\\\\\\\\\\"\\\\\\\\nconst [date, setDate] = useState(initialFormattedDate || new Date());\\\\\\\\n\\\\\\\\n// Initial category\\\\\\\\nconst initialCategory =\\\\\\\\n  addonParameters.categoryRequired === \\\\\\\\\\\\\\\"required\\\\\\\\\\\\\\\" ? selectOptions[0].value : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst [category, setCategory] = useState(\\\\\\\\n  initialData.category || initialCategory\\\\\\\\n);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\nconst [selectedStatus, setSelectedStatus] = useState(\\\\\\\\n  initialData.status || \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\nconst [isDeleteModalOpen, setDeleteModal] = useState(false);\\\\\\\\n\\\\\\\\n// Dont ask me again check when deleting\\\\\\\\nconst [submittedBlogDeleted, setSubmittedBlogDeleted] = useState(null);\\\\\\\\nuseEffect(() => {\\\\\\\\n  const checkForDeletedBlogInSocialDB = () => {\\\\\\\\n    const communityAccount = `${handle}.community.devhub.near`;\\\\\\\\n    Near.asyncView(\\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get\\\\\\\\\\\\\\\", {\\\\\\\\n      keys: [`${communityAccount}/blog/**`],\\\\\\\\n      options: {\\\\\\\\n        return_deleted: true,\\\\\\\\n      },\\\\\\\\n    }).then((result) => {\\\\\\\\n      try {\\\\\\\\n        if (!result[communityAccount].blog[submittedBlogDeleted]) {\\\\\\\\n          // Blog is deleted\\\\\\\\n          setSubmittedBlogDeleted(null);\\\\\\\\n        }\\\\\\\\n      } catch (e) {}\\\\\\\\n      setTimeout(() => checkForDeletedBlogInSocialDB(), 500);\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n  if (submittedBlogDeleted) {\\\\\\\\n    checkForDeletedBlogInSocialDB();\\\\\\\\n  }\\\\\\\\n}, [submittedBlogDeleted]);\\\\\\\\n\\\\\\\\n// Dont ask me again check when updating and creating blogs\\\\\\\\nconst [submittedBlogData, setSubmittedBlogData] = useState(null);\\\\\\\\nuseEffect(() => {\\\\\\\\n  const checkForNewOrUpdatedBlogInSocialDB = () => {\\\\\\\\n    const communityAccount = `${handle}.community.devhub.near`;\\\\\\\\n    Near.asyncView(\\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get\\\\\\\\\\\\\\\", {\\\\\\\\n      keys: [`${communityAccount}/blog/**`],\\\\\\\\n    }).then((result) => {\\\\\\\\n      try {\\\\\\\\n        if (initialData.id) {\\\\\\\\n          // Update\\\\\\\\n          const updatedBlog =\\\\\\\\n            result[communityAccount][\\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\"][initialData.id].metadata;\\\\\\\\n          updatedBlog.content =\\\\\\\\n            result[communityAccount][\\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\"][initialData.id][\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"];\\\\\\\\n\\\\\\\\n          let theyMatch = true;\\\\\\\\n          let keys = Object.keys(submittedBlogData);\\\\\\\\n          for (const key of keys) {\\\\\\\\n            // Get the full data of the new blog and compare it to socialDB\\\\\\\\n            if (updatedBlog[key] !== submittedBlogData[key]) {\\\\\\\\n              theyMatch = false;\\\\\\\\n              break;\\\\\\\\n            }\\\\\\\\n          }\\\\\\\\n          if (theyMatch) {\\\\\\\\n            setSubmittedBlogData(null);\\\\\\\\n          }\\\\\\\\n        } else {\\\\\\\\n          // Create\\\\\\\\n          let blogArray = Object.keys(result).map(\\\\\\\\n            (blogKey) => result[communityAccount][\\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\"][blogKey]\\\\\\\\n          );\\\\\\\\n\\\\\\\\n          if (\\\\\\\\n            blogArray.length &&\\\\\\\\n            blogArray.find(\\\\\\\\n              (blog) =>\\\\\\\\n                blog.metadata.title === submittedBlogData.title &&\\\\\\\\n                blog.metadata.description === submittedBlogData.description\\\\\\\\n            )\\\\\\\\n          ) {\\\\\\\\n            setSubmittedBlogData(null);\\\\\\\\n          }\\\\\\\\n        }\\\\\\\\n      } catch (e) {\\\\\\\\n        console.log(\\\\\\\\\\\\\\\"Error in useEffect checkForNewOrUpdatedBlogInSocialDB\\\\\\\\\\\\\\\", e);\\\\\\\\n      }\\\\\\\\n      setTimeout(() => checkForNewOrUpdatedBlogInSocialDB(), 1000);\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n  if (submittedBlogData) {\\\\\\\\n    checkForNewOrUpdatedBlogInSocialDB();\\\\\\\\n  }\\\\\\\\n}, [submittedBlogData]);\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"submit-blog-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SubmitBtn = () => {\\\\\\\\n  const btnOptions = [\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Save Draft\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"The author can still edit the blog before sharing it with the community.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"bg-devhub-green\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Publish\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"The blog will be shared with the community and can be viewed by everyone.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"PUBLISH\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  const handleOptionClick = (option) => {\\\\\\\\n    setDraftBtnOpen(false);\\\\\\\\n    setSelectedStatus(option.value);\\\\\\\\n    setSubmittedBlogData(null);\\\\\\\\n    handleSubmit(option.value);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const toggleDropdown = () => {\\\\\\\\n    setDraftBtnOpen(!isDraftBtnOpen);\\\\\\\\n    setSubmittedBlogData(null);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const handleSubmit = (status) => {\\\\\\\\n    // Set the title for dont ask me again check\\\\\\\\n    setSubmittedBlogData({\\\\\\\\n      title,\\\\\\\\n      subtitle,\\\\\\\\n      description,\\\\\\\\n      author,\\\\\\\\n      date,\\\\\\\\n      content,\\\\\\\\n      category,\\\\\\\\n      community: handle,\\\\\\\\n      publishedAt,\\\\\\\\n      status,\\\\\\\\n    });\\\\\\\\n    handlePublish(status);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <DropdownBtnContainer>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"custom-select shadow-sm\\\\\\\\\\\\\\\"\\\\\\\\n        tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n        onBlur={() => setDraftBtnOpen(false)}\\\\\\\\n      >\\\\\\\\n        <div\\\\\\\\n          data-testid=\\\\\\\\\\\\\\\"parent-submit-blog-button\\\\\\\\\\\\\\\"\\\\\\\\n          className={`select-header d-flex gap-1 align-items-center submit-draft-button ${\\\\\\\\n            shouldBeDisabled() ? \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n          }`}\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            onClick={() =>\\\\\\\\n              !shouldBeDisabled() && handleSubmit(selectedOption.value)\\\\\\\\n            }\\\\\\\\n            className=\\\\\\\\\\\\\\\"py-2.5 px-2 d-flex gap-2 align-items-center \\\\\\\\\\\\\\\"\\\\\\\\n            data-testid=\\\\\\\\\\\\\\\"submit-blog-button\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {submittedBlogData ? (\\\\\\\\n              LoadingButtonSpinner\\\\\\\\n            ) : (\\\\\\\\n              <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + selectedOption.iconColor}></div>\\\\\\\\n            )}\\\\\\\\n            <div className={`selected-option`}>{selectedOption.label}</div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"h-100 py-2.5 px-2\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ borderLeft: \\\\\\\\\\\\\\\"1px solid #ccc\\\\\\\\\\\\\\\" }}\\\\\\\\n            onClick={toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <i\\\\\\\\n              data-testid=\\\\\\\\\\\\\\\"toggle-dropdown\\\\\\\\\\\\\\\"\\\\\\\\n              class={`bi bi-chevron-${isDraftBtnOpen ? \\\\\\\\\\\\\\\"up\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\"}`}\\\\\\\\n            ></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {isDraftBtnOpen && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"options-card\\\\\\\\\\\\\\\">\\\\\\\\n            {btnOptions.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`option ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n                data-testid={\\\\\\\\\\\\\\\"submit-button-option-\\\\\\\\\\\\\\\" + option.value}\\\\\\\\n              >\\\\\\\\n                <div className={`d-flex gap-2 align-items-center`}>\\\\\\\\n                  <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + option.iconColor}></div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">{option.label}</div>\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-muted text-xs\\\\\\\\\\\\\\\">{option.description}</div>\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </DropdownBtnContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  margin: 0 auto;\\\\\\\\n  text-align: left;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst shouldBeDisabled = () => {\\\\\\\\n  return hasEmptyFields() || submittedBlogData;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst hasEmptyFields = () => {\\\\\\\\n  return (\\\\\\\\n    content.trim() === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" ||\\\\\\\\n    title.trim() === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" ||\\\\\\\\n    subtitle.trim() === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" ||\\\\\\\\n    description.trim() === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" ||\\\\\\\\n    author.trim() === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" ||\\\\\\\\n    date === \\\\\\\\\\\\\\\"NaN-NaN-NaN\\\\\\\\\\\\\\\" ||\\\\\\\\n    category.trim() === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst unsavedChanges = () => {\\\\\\\\n  return (\\\\\\\\n    initialData.content !== content ||\\\\\\\\n    initialData.title !== title ||\\\\\\\\n    initialData.subtitle !== subtitle ||\\\\\\\\n    initialData.description !== description ||\\\\\\\\n    initialData.author !== author ||\\\\\\\\n    initialData.category !== category ||\\\\\\\\n    initialData.publishedAt !== date ||\\\\\\\\n    initialData.status !== selectedStatus\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (unsavedChanges()) {\\\\\\\\n    setSelectedItemChanged(true);\\\\\\\\n  } else {\\\\\\\\n    setSelectedItemChanged(false);\\\\\\\\n  }\\\\\\\\n}, [\\\\\\\\n  content,\\\\\\\\n  title,\\\\\\\\n  subtitle,\\\\\\\\n  description,\\\\\\\\n  author,\\\\\\\\n  category,\\\\\\\\n  date,\\\\\\\\n  selectedStatus,\\\\\\\\n]);\\\\\\\\n\\\\\\\\nconst handlePublish = (status) => {\\\\\\\\n  onSubmit &&\\\\\\\\n    onSubmit(\\\\\\\\n      {\\\\\\\\n        id: data.id || undefined,\\\\\\\\n        title,\\\\\\\\n        subtitle,\\\\\\\\n        description,\\\\\\\\n        date,\\\\\\\\n        content,\\\\\\\\n        status,\\\\\\\\n        author,\\\\\\\\n        category,\\\\\\\\n        community: handle,\\\\\\\\n      },\\\\\\\\n      data.id !== undefined\\\\\\\\n    );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction handleDelete() {\\\\\\\\n  setSubmittedBlogDeleted(initialData.id);\\\\\\\\n  onDelete(data.id);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst tabs = [\\\\\\\\n  { name: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\", testId: \\\\\\\\\\\\\\\"edit-blog-toggle\\\\\\\\\\\\\\\" },\\\\\\\\n  { name: \\\\\\\\\\\\\\\"Preview\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\", testId: \\\\\\\\\\\\\\\"preview-page-blog-toggle\\\\\\\\\\\\\\\" },\\\\\\\\n];\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"flex flex-wrap-reverse gap-1 justify-between w-100 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"flex cursor-pointer align-items-center justify-content-center gap-1 px-4\\\\\\\\\\\\\\\"\\\\\\\\n        onClick={onCancel}\\\\\\\\n      >\\\\\\\\n        <i class=\\\\\\\\\\\\\\\"bi bi-arrow-left\\\\\\\\\\\\\\\"></i>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"sm:hidden grow rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-indigo-600\\\\\\\\\\\\\\\">\\\\\\\\n        <label\\\\\\\\n          htmlFor=\\\\\\\\\\\\\\\"tabs\\\\\\\\\\\\\\\"\\\\\\\\n          className=\\\\\\\\\\\\\\\"sr-only block text-xs font-medium text-gray-900\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          Select a tab\\\\\\\\n        </label>\\\\\\\\n        <select\\\\\\\\n          id=\\\\\\\\\\\\\\\"tabs\\\\\\\\\\\\\\\"\\\\\\\\n          name=\\\\\\\\\\\\\\\"tabs\\\\\\\\\\\\\\\"\\\\\\\\n          className=\\\\\\\\\\\\\\\"block w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 h-9 border-gray-300 block w-full border-0 p-0 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\\\\\\\\\\\\\\\"\\\\\\\\n          defaultValue={tabs.find((tab) => tab.value === previewMode).name}\\\\\\\\n        >\\\\\\\\n          {tabs.map((tab) => {\\\\\\\\n            return (\\\\\\\\n              <option key={tab.name} onClick={() => setPreviewMode(tab.value)}>\\\\\\\\n                {tab.name}\\\\\\\\n              </option>\\\\\\\\n            );\\\\\\\\n          })}\\\\\\\\n        </select>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"hidden sm:block\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"-mb-px flex gap-x-3 px-2\\\\\\\\\\\\\\\" aria-label=\\\\\\\\\\\\\\\"Tabs\\\\\\\\\\\\\\\">\\\\\\\\n          {tabs.map((tab) => {\\\\\\\\n            return (\\\\\\\\n              <a\\\\\\\\n                data-testid={tab.testId}\\\\\\\\n                key={tab.name}\\\\\\\\n                onClick={() => setPreviewMode(tab.value)}\\\\\\\\n                className={`${\\\\\\\\n                  tab.value === previewMode ? \\\\\\\\\\\\\\\"hidden\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                } rounded-md px-3.5 py-2.5 text-sm cursor-pointer font-semibold whitespace-nowrap overflow-hidden truncate text-devhub-gray`}\\\\\\\\n              >\\\\\\\\n                {tab.name}\\\\\\\\n              </a>\\\\\\\\n            );\\\\\\\\n          })}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"flex gap-x-3\\\\\\\\\\\\\\\">\\\\\\\\n        <p className=\\\\\\\\\\\\\\\"text-nowrap text-sm text-devhub-gray font-semibold py-2.5 px-1\\\\\\\\\\\\\\\">\\\\\\\\n          Status:{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <span\\\\\\\\n            className={`px-3 py-2 rounded-full font-semibold text-xs ${\\\\\\\\n              initialData.status == \\\\\\\\\\\\\\\"PUBLISH\\\\\\\\\\\\\\\"\\\\\\\\n                ? \\\\\\\\\\\\\\\"text-green-600 bg-green-50\\\\\\\\\\\\\\\"\\\\\\\\n                : \\\\\\\\\\\\\\\"text-blue-600 bg-blue-50\\\\\\\\\\\\\\\"\\\\\\\\n            }`}\\\\\\\\n          >\\\\\\\\n            {initialData.status === \\\\\\\\\\\\\\\"PUBLISH\\\\\\\\\\\\\\\" ? (\\\\\\\\n              <Link\\\\\\\\n                to={href({\\\\\\\\n                  widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                  params: {\\\\\\\\n                    page: \\\\\\\\\\\\\\\"blogv2\\\\\\\\\\\\\\\",\\\\\\\\n                    id: initialData.id,\\\\\\\\n                    community: handle,\\\\\\\\n                  },\\\\\\\\n                })}\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                className=\\\\\\\\\\\\\\\"cursor-pointer underline\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Published\\\\\\\\n              </Link>\\\\\\\\n            ) : (\\\\\\\\n              <>Draft</>\\\\\\\\n            )}\\\\\\\\n          </span>\\\\\\\\n        </p>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n\\\\\\\\n    <div>\\\\\\\\n      {previewMode === \\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\" && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"tab-pane show active p-4\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.editor.form\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              title,\\\\\\\\n              setTitle,\\\\\\\\n              subtitle,\\\\\\\\n              setSubtitle,\\\\\\\\n              options: selectOptions,\\\\\\\\n              category,\\\\\\\\n              setCategory,\\\\\\\\n              description,\\\\\\\\n              setDescription,\\\\\\\\n              author,\\\\\\\\n              setAuthor,\\\\\\\\n              date,\\\\\\\\n              setDate,\\\\\\\\n              content,\\\\\\\\n              setContent,\\\\\\\\n              addonParameters,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          {/* Show delete button */}\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\\\\\\\\"d-flex align-items-center justify-between gap-3 mt-4\\\\\\\\\\\\\\\"}\\\\\\\\n          >\\\\\\\\n            {data.id ? (\\\\\\\\n              <>\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.editor.ConfirmModal\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    isOpen: isDeleteModalOpen,\\\\\\\\n                    onCancelClick: () => setDeleteModal(false),\\\\\\\\n                    onConfirmClick: () => {\\\\\\\\n                      setDeleteModal(false);\\\\\\\\n                      handleDelete();\\\\\\\\n                    },\\\\\\\\n                    title: \\\\\\\\\\\\\\\"Are you sure you want to delete this blog?\\\\\\\\\\\\\\\",\\\\\\\\n                    content: \\\\\\\\\\\\\\\"This will permanently remove your blog.\\\\\\\\\\\\\\\",\\\\\\\\n                    confirmLabel: \\\\\\\\\\\\\\\"Ready to Delete\\\\\\\\\\\\\\\",\\\\\\\\n                    cancelLabel: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                <Widget\\\\\\\\n                  src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    classNames: {\\\\\\\\n                      root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                    },\\\\\\\\n                    label: (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Delete\\\\\\\\n                      </div>\\\\\\\\n                    ),\\\\\\\\n                    testId: \\\\\\\\\\\\\\\"delete-blog-button\\\\\\\\\\\\\\\",\\\\\\\\n                    disabled: submittedBlogDeleted,\\\\\\\\n                    onClick: () => setDeleteModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </>\\\\\\\\n            ) : null}\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"flex gap-x-3 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                props={{\\\\\\\\n                  classNames: {\\\\\\\\n                    root: \\\\\\\\\\\\\\\"d-flex text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                  },\\\\\\\\n                  label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                  onClick: onCancel,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <SubmitBtn />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n      {previewMode === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" && (\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"w-100 h-100 p-4 flex flex-column gap-4\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <Card\\\\\\\\n            data={{\\\\\\\\n              title,\\\\\\\\n              subtitle,\\\\\\\\n              description,\\\\\\\\n              publishedAt: date,\\\\\\\\n              content,\\\\\\\\n              author,\\\\\\\\n              category,\\\\\\\\n              community: handle,\\\\\\\\n            }}\\\\\\\\n            addonParameters={addonParameters}\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.Page\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              data: {\\\\\\\\n                title,\\\\\\\\n                subtitle,\\\\\\\\n                description,\\\\\\\\n                publishedAt: date,\\\\\\\\n                content,\\\\\\\\n                author,\\\\\\\\n                category,\\\\\\\\n                community: handle,\\\\\\\\n                communityAddonId,\\\\\\\\n              },\\\\\\\\n              community: handle,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.0973078143608e+21
    }
  },
  {
    "id": "6562229505",
    "receipt_id": "GRjjGLux3sDUvHGN8VLqnaeyQdb5fakGKTVg6YE3ZSCN",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EJ7syPFka86zz7tZuAd9J5p7Y1q1TrDVMa5nHYKATvBo",
      "block_height": 123144920,
      "block_timestamp": 1720707143698964500
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "FUMKztRbDABuCtz27U6wUKxYbgv5q1r3YTyXhtRuchGy",
    "included_in_block_hash": "8K4ZN9UKLVf5HpnjapQMVguwbbUTyCEu3AjfWTQhTaPa",
    "block_timestamp": "1720707141631189343",
    "block": {
      "block_height": 123144918
    },
    "receipt_conversion_tokens_burnt": "38645358197400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8705746205887655e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.0973078143608e+21
    }
  },
  {
    "id": "6564591124",
    "receipt_id": "CRc1TS34DwEGtBXvQeh8xeH1RH538TKmyYXjih3VWVvM",
    "predecessor_account_id": "charleslavon.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "BAxMDJmMRb8oYQ1mdaGn7bPVko3LPKperYa2frhmv3K6",
      "block_height": 123151031,
      "block_timestamp": 1720714172288257300
    },
    "receipt_outcome": {
      "gas_burnt": 3316440295432,
      "tokens_burnt": 331644029543200000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "DzqXGzVvrHPmQgmTcUYMTet77if2Wkgm8wK31DJBgJKd",
    "included_in_block_hash": "J2tU95nDLJTbM55L944HbHuU1ogsQsZrZe1vr4e6FSEv",
    "block_timestamp": "1720714171117916990",
    "block": {
      "block_height": 123151030
    },
    "receipt_conversion_tokens_burnt": "30820707164400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "create_discussion",
        "deposit": 0,
        "fee": 331644029543200000000,
        "args": "{\"handle\": \"neardevnews\", \"block_height\": 123150936}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 842337270026400000000
    }
  },
  {
    "id": "6564591496",
    "receipt_id": "HveGg3ch6H6QZkARs1zq2NR4bXHXqV2mvimt5T1f4qqH",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "DdSsrz7BM6eJZvmuL1vre6VKRbLNc2r8FEagjE3v8Jrd",
      "block_height": 123151032,
      "block_timestamp": 1720714173329653000
    },
    "receipt_outcome": {
      "gas_burnt": 4798725333188,
      "tokens_burnt": 479872533318800000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "DzqXGzVvrHPmQgmTcUYMTet77if2Wkgm8wK31DJBgJKd",
    "included_in_block_hash": "J2tU95nDLJTbM55L944HbHuU1ogsQsZrZe1vr4e6FSEv",
    "block_timestamp": "1720714171117916990",
    "block": {
      "block_height": 123151030
    },
    "receipt_conversion_tokens_burnt": "30820707164400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 479872533318800000000,
        "args": "{\"data\": {\"discussions.neardevnews.community.devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"charleslavon.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"repost\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"item\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"charleslavon.near/post/main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"blockHeight\\\\\\\\\\\\\\\":123150936}}}\", \"repost\": \"[{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"repost\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"item\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"charleslavon.near/post/main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"blockHeight\\\\\\\\\\\\\\\":123150936}}},{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"charleslavon.near/post/main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"blockHeight\\\\\\\\\\\\\\\":123150936},\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"repost\\\\\\\\\\\\\\\"}}]\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 842337270026400000000
    }
  },
  {
    "id": "6569782562",
    "receipt_id": "GatYjQPzvJgNt83ZNTTyzt3u3aZ2RLQVY7MmtK49wvgw",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3L5QDptyebGDh9Z4Spj1M3yBfXvFKg5oJkvadLPfNc2J",
      "block_height": 123164688,
      "block_timestamp": 1720729759713959700
    },
    "receipt_outcome": {
      "gas_burnt": 2036026872090,
      "tokens_burnt": 203602687209000000000,
      "executor_account_id": "devhub.near",
      "status": false
    },
    "transaction_hash": "C67RdMixuufdaZcadWJ54LavLy6WQGPEeZS576cJ4kDd",
    "included_in_block_hash": "3VhbbFrzLvfwB3kSGwNovoMxNoPRXRMMkUuznaVvMUTH",
    "block_timestamp": "1720729758698215764",
    "block": {
      "block_height": 123164687
    },
    "receipt_conversion_tokens_burnt": "30844408064800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 203602687209000000000,
        "args": "{\"id\": 130, \"timeline\": {\"status\": \"CANCELLED\", \"timeline_version\": \"V1\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": false
    },
    "outcomes_agg": {
      "transaction_fee": 234447095273800000000
    }
  },
  {
    "id": "6569934900",
    "receipt_id": "E5i2BK6BXxxXZsp32V2MCfwVobALqJe9a3rpMF6Di41n",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "CVXnR92UDdmp4NXSR8M1aaJJnM3aZpZdBcBKH2bbcaRB",
      "block_height": 123165169,
      "block_timestamp": 1720730286376443600
    },
    "receipt_outcome": {
      "gas_burnt": 4574093632484,
      "tokens_burnt": 457409363248400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "AmoxbPw2wZZh3tEPZip8PnekyR7yQYDFzaoMJqVcYBAp",
    "included_in_block_hash": "5PNcVVyCt42SKwzp1s9D4DUANRm9Bp9nz2Y3RMQz4Jkm",
    "block_timestamp": "1720730285258033120",
    "block": {
      "block_height": 123165168
    },
    "receipt_conversion_tokens_burnt": "30865202251000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 457409363248400000000,
        "args": "{\"id\": 145, \"timeline\": {\"status\": \"PAYMENT_PROCESSING\", \"kyc_verified\": true, \"timeline_version\": \"V1\", \"test_transaction_sent\": true, \"sponsor_requested_review\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": true}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 840839834891300000000
    }
  },
  {
    "id": "6569935082",
    "receipt_id": "WTpKCZ8roXEYnMBTcYUCadmvvo4ToBQLNG85puhKyp5",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7eCVyrBNpiaB3Es7VyXMJr6aZeCerDRDziHYYfcn4fZF",
      "block_height": 123165170,
      "block_timestamp": 1720730287306994700
    },
    "receipt_outcome": {
      "gas_burnt": 3525652693919,
      "tokens_burnt": 352565269391900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "AmoxbPw2wZZh3tEPZip8PnekyR7yQYDFzaoMJqVcYBAp",
    "included_in_block_hash": "5PNcVVyCt42SKwzp1s9D4DUANRm9Bp9nz2Y3RMQz4Jkm",
    "block_timestamp": "1720730285258033120",
    "block": {
      "block_height": 123165168
    },
    "receipt_conversion_tokens_burnt": "30865202251000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 352565269391900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"djeaunty_fourmule.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":145,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 840839834891300000000
    }
  },
  {
    "id": "6569994190",
    "receipt_id": "FKyu7aPZmNtn6Wi1o7nsoZE4Fimk5XH6Zf6KdNeQVbxx",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "JDSgq1ZvZEkZeH9tNYMgtkLNHiTYzeneiB7yVFHAa6hH",
      "block_height": 123165371,
      "block_timestamp": 1720730507392612900
    },
    "receipt_outcome": {
      "gas_burnt": 7145449008426,
      "tokens_burnt": 714544900842600000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "C8x98BqUtgwxKv9zgKvoZNjEmymF4va3FY4nfJSts4Xv",
    "included_in_block_hash": "GTpdf8E2ZBy4SvRdmCds8d86MB7NPGoLHs8ukn9WZ3mb",
    "block_timestamp": "1720730506251108703",
    "block": {
      "block_height": 123165370
    },
    "receipt_conversion_tokens_burnt": "30865202251000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 714544900842600000000,
        "args": "{\"id\": 142, \"timeline\": {\"status\": \"PAYMENT_PROCESSING\", \"kyc_verified\": true, \"timeline_version\": \"V1\", \"test_transaction_sent\": true, \"sponsor_requested_review\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": true}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.0952368590523e+21
    }
  },
  {
    "id": "6569994444",
    "receipt_id": "6xR1nnC764bgvw3Z43BH7BHdp4VuDbEtw9bYiQgQLwcj",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "JDpG35vPSWibeXxxqnutDL3Nn8SWL14RSo2b4KxX2Xh2",
      "block_height": 123165372,
      "block_timestamp": 1720730508314046200
    },
    "receipt_outcome": {
      "gas_burnt": 3498267559587,
      "tokens_burnt": 349826755958700000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "C8x98BqUtgwxKv9zgKvoZNjEmymF4va3FY4nfJSts4Xv",
    "included_in_block_hash": "GTpdf8E2ZBy4SvRdmCds8d86MB7NPGoLHs8ukn9WZ3mb",
    "block_timestamp": "1720730506251108703",
    "block": {
      "block_height": 123165370
    },
    "receipt_conversion_tokens_burnt": "30865202251000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349826755958700000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"polyprogrammist.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":142,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.0952368590523e+21
    }
  }
]