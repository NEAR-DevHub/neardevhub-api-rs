[
  {
    "id": "2830572844",
    "receipt_id": "9YuCvXrgiGnAErkBSNS5kxooGz2ovfrazKbEqRDuEpsa",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "CuUufXm4FnixEFZyDoC8AgwDFfm7fzPwJDDbZu1A6Tc4",
      "block_height": 113900761,
      "block_timestamp": 1709320938888124200
    },
    "receipt_outcome": {
      "gas_burnt": 60572853422832,
      "tokens_burnt": 6.0572853422832e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "AKs2KHwpthvpG6C7FMWdUWY6QvDamMJyoA7MHmoQvJxB",
    "included_in_block_hash": "GoF1pbqFnu3VBBJkwB7WyAa96XgSatuTgjY2ZfobqiWq",
    "block_timestamp": "1709320937629356789",
    "block": {
      "block_height": 113900760
    },
    "receipt_conversion_tokens_burnt": "278356866204000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 6.0572853422832e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"app\": {\"\": \"/**\\\\\\\\n * This is the main entry point for the DevHub application.\\\\\\\\n * Page route gets passed in through params, along with all other page props.\\\\\\\\n */\\\\\\\\n\\\\\\\\nconst { onDraftStateChange } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.draft\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst { page, ...passProps } = props;\\\\\\\\n\\\\\\\\n// Import our modules\\\\\\\\nconst { AppLayout } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.templates.AppLayout\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!AppLayout) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\n// CSS styles to be used across the app.\\\\\\\\n// Define fonts here, as well as any other global styles.\\\\\\\\nconst Theme = styled.div`\\\\\\\\n  a {\\\\\\\\n    color: inherit;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .attractable {\\\\\\\\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\\\\\\\\n    transition: box-shadow 0.6s;\\\\\\\\n\\\\\\\\n    &:hover {\\\\\\\\n      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (!page) {\\\\\\\\n  // If no page is specified, we default to the feed page TEMP\\\\\\\\n  page = \\\\\\\\\\\\\\\"home\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\n// This is our navigation, rendering the page based on the page parameter\\\\\\\\nfunction Page() {\\\\\\\\n  const routes = page.split(\\\\\\\\\\\\\\\".\\\\\\\\\\\\\\\");\\\\\\\\n  switch (routes[0]) {\\\\\\\\n    case \\\\\\\\\\\\\\\"home\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.home\\\\\\\\\\\\\\\"\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    // ?page=communities\\\\\\\\n    case \\\\\\\\\\\\\\\"communities\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.communities\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // ?page=community\\\\\\\\n    case \\\\\\\\\\\\\\\"community\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        // Considering to consolidate this into a single widget,\\\\\\\\n        // where each level handles its own routing.\\\\\\\\n        // Modularizing a page just like we do with addons\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Provider\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            ...passProps,\\\\\\\\n            Children: (p) => {\\\\\\\\n              // passing props from the Provider into the Children\\\\\\\\n              switch (routes[1]) {\\\\\\\\n                // ?page=community.configuration\\\\\\\\n                case \\\\\\\\\\\\\\\"configuration\\\\\\\\\\\\\\\": {\\\\\\\\n                  return (\\\\\\\\n                    <Widget\\\\\\\\n                      src={\\\\\\\\n                        \\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.community.configuration\\\\\\\\\\\\\\\"\\\\\\\\n                      }\\\\\\\\n                      props={{\\\\\\\\n                        ...passProps,\\\\\\\\n                        ...p,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  );\\\\\\\\n                }\\\\\\\\n                // ?page=community\\\\\\\\n                default: {\\\\\\\\n                  return (\\\\\\\\n                    <Widget\\\\\\\\n                      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.community.index\\\\\\\\\\\\\\\"}\\\\\\\\n                      props={{\\\\\\\\n                        ...passProps,\\\\\\\\n                        ...p,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  );\\\\\\\\n                }\\\\\\\\n              }\\\\\\\\n            },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    // ?page=feed\\\\\\\\n    case \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.feed\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    // ?page=create\\\\\\\\n    case \\\\\\\\\\\\\\\"create\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.PostEditor\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{ ...passProps, isCreatePostPage: true, onDraftStateChange }}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    case \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Editor\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{ ...passProps }}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    case \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.proposals\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Proposal\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    // ?page=about\\\\\\\\n    case \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.about\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"contribute\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.contribute\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.profile\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    // ?page=blog\\\\\\\\n    case \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.blog\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.post\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"admin\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.admin.index\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    default: {\\\\\\\\n      // TODO: 404 page\\\\\\\\n      return <p>404</p>;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Theme>\\\\\\\\n    <AppLayout page={page}>\\\\\\\\n      <Page />\\\\\\\\n    </AppLayout>\\\\\\\\n  </Theme>\\\\\\\\n);\\\\\\\\n\"}, \"core.lib.common\": {\"\": \"// https://docs.rs/near-sdk/latest/near_sdk/env/constant.STORAGE_PRICE_PER_BYTE.html\\\\\\\\nconst STORAGE_PRICE_PER_BYTE = \\\\\\\\\\\\\\\"10000000000000000000\\\\\\\\\\\\\\\";\\\\\\\\n// https://github.com/NearSocial/social-db/blob/d28c647252ce25a06c70c3b7f4930ccdcd217fd9/contract/src/account.rs#L8C5-L8C50\\\\\\\\nconst MIN_STORAGE_BYTES = \\\\\\\\\\\\\\\"2000\\\\\\\\\\\\\\\";\\\\\\\\nconst MIN_STORAGE_COST = Big(STORAGE_PRICE_PER_BYTE).times(MIN_STORAGE_BYTES);\\\\\\\\n\\\\\\\\n// in case the user is new and doesn\\\\\\\\\\\\'t have min storage cost, increasing the deposit\\\\\\\\nfunction getDepositAmountForWriteAccess(userStorageDeposit) {\\\\\\\\n  const depositAmt = Big(userStorageDeposit?.available).gt(MIN_STORAGE_COST)\\\\\\\\n    ? Big(10).pow(22)\\\\\\\\n    : Big(MIN_STORAGE_COST).plus(Big(10).pow(22));\\\\\\\\n\\\\\\\\n  return depositAmt;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction readableDate(timestamp) {\\\\\\\\n  var a = new Date(timestamp);\\\\\\\\n  return (\\\\\\\\n    a.toDateString() +\\\\\\\\n    \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" +\\\\\\\\n    a.toLocaleTimeString([], { hour: \\\\\\\\\\\\\\\"2-digit\\\\\\\\\\\\\\\", minute: \\\\\\\\\\\\\\\"2-digit\\\\\\\\\\\\\\\" })\\\\\\\\n  ).substring(4);\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn { getDepositAmountForWriteAccess, readableDate };\\\\\\\\n\"}, \"devhub.page.proposals\": {\"\": \"return (\\\\\\\\n  <Widget\\\\\\\\n    src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Feed\\\\\\\\\\\\\\\"}\\\\\\\\n    props={{}}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.Feed\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!href) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst FeedItem = ({ proposal }) => {\\\\\\\\n  const { snapshot } = proposal;\\\\\\\\n  const accountId = proposal.author_id;\\\\\\\\n  const profile = Social.get(`${accountId}/profile/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\n  const blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `devhub.near/post/main`,\\\\\\\\n    blockHeight,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n          id: proposal.id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      onClick={(e) => e.stopPropagation()}\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"proposal-card d-flex justify-content-between text-muted cursor-pointer p-3\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-4\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"h6 mb-0 text-black\\\\\\\\\\\\\\\">{snapshot.name}</div>\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CategoryTag\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  category: snapshot.category,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center text-sm\\\\\\\\\\\\\\\">\\\\\\\\n              <div>By {profile.name ?? accountId} \\\\\\\\u{ff65} </div>\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  blockHeight,\\\\\\\\n                  blockTimestamp: snapshot.timestamp,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.LikeButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CommentIcon\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  showOverlay: false,\\\\\\\\n                  onClick: () => {},\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"align-self-center\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              timelineStatus: snapshot.timeline.status,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FeedPage = () => {\\\\\\\\n  const proposals = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposals\\\\\\\\\\\\\\\", {});\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n        <Heading>\\\\\\\\n          DevDAO Proposals{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"> ({proposals.length})</span>\\\\\\\\n        </Heading>\\\\\\\\n        {/* Filters aren\\\\\\\\\\\\'t supported yet */}\\\\\\\\n        {/* <div className=\\\\\\\\\\\\\\\"d-flex gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\n              \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-input\\\\\\\\\\\\\\\"\\\\\\\\n            }\\\\\\\\n            props={{}}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-sort\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{}}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\n              \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-category\\\\\\\\\\\\\\\"\\\\\\\\n            }\\\\\\\\n            props={{}}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\n              \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-stage\\\\\\\\\\\\\\\"\\\\\\\\n            }\\\\\\\\n            props={{}}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\n              \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-author\\\\\\\\\\\\\\\"\\\\\\\\n            }\\\\\\\\n            props={{}}\\\\\\\\n          />\\\\\\\\n        </div> */}\\\\\\\\n        <div>\\\\\\\\n          <Link\\\\\\\\n            to={href({\\\\\\\\n              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\" },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                label: (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                    <div>\\\\\\\\n                      <i class=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                    </div>\\\\\\\\n                    New Proposal\\\\\\\\n                  </div>\\\\\\\\n                ),\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"green-btn\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div style={{ minHeight: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {!Array.isArray(proposals) ? (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Spinner\\\\\\\\\\\\\\\"}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card rounded-0 p-1 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-muted bg-grey text-sm mt-2 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"d-flex gap-4 align-items-center mb-0\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    <i class=\\\\\\\\\\\\\\\"bi bi-info-circle\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                  DevDAO is the primary organization behind DevHub, and we offer\\\\\\\\n                  sponsorships to contributors and projects that align with our\\\\\\\\n                  goal of fostering a self-sufficient community of developers\\\\\\\\n                  for a thriving NEAR ecosystem. Check out our Funding\\\\\\\\n                  Guidelines for more details.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mt-4 border rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                {proposals.map((item, index) => {\\\\\\\\n                  return (\\\\\\\\n                    <div\\\\\\\\n                      key={index}\\\\\\\\n                      className={\\\\\\\\n                        (index !== proposals.length - 1 && \\\\\\\\\\\\\\\"border-bottom \\\\\\\\\\\\\\\") +\\\\\\\\n                        (index === 0 && \\\\\\\\\\\\\\\" rounded-top-2\\\\\\\\\\\\\\\")\\\\\\\\n                      }\\\\\\\\n                    >\\\\\\\\n                      <FeedItem proposal={item} />\\\\\\\\n                    </div>\\\\\\\\n                  );\\\\\\\\n                })}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn FeedPage(props);\\\\\\\\n\"}, \"devhub.entity.proposal.Editor\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\nconst { getDepositAmountForWriteAccess } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.common\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"PROPOSAL_EDIT\\\\\\\\\\\\\\\";\\\\\\\\ngetDepositAmountForWriteAccess || (getDepositAmountForWriteAccess = () => {});\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1kR1YbaQE4mmHcf-BHo7NwO7vmGx4EciHK-QjelCufI8/edit?usp=sharing\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nif (!author) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.LoginScreen\\\\\\\\\\\\\\\"} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nlet editProposalData = null;\\\\\\\\nlet draftProposalData = null;\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editProposalData = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n    proposal_id: parseInt(id),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst tokensOptions = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\" },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"OTHER\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst devdaoAccount = \\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst [category, setCategory] = useState(null);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [linkedProposals, setLinkedProposals] = useState([]);\\\\\\\\nconst [receiverAccount, setReceiverAccount] = useState(context.accountId);\\\\\\\\nconst [requestedSponsor, setRequestedSponsor] = useState(devdaoAccount);\\\\\\\\nconst [requestedSponsorshipAmount, setRequestedSponsorshipAmount] =\\\\\\\\n  useState(null);\\\\\\\\nconst [requestedSponsorshipToken, setRequestedSponsorshipToken] = useState(\\\\\\\\n  tokensOptions[2]\\\\\\\\n);\\\\\\\\nconst [supervisor, setSupervisor] = useState(null);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [proposalsOptions, setProposalsOptions] = useState([]);\\\\\\\\nconst proposalsData = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposals\\\\\\\\\\\\\\\");\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftProposalData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editProposalData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      category: category,\\\\\\\\n      summary: summary,\\\\\\\\n      requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n      requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n      receiver_account: receiverAccount,\\\\\\\\n      supervisor: supervisor,\\\\\\\\n      requested_sponsor: requestedSponsor,\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [\\\\\\\\n    title,\\\\\\\\n    summary,\\\\\\\\n    description,\\\\\\\\n    category,\\\\\\\\n    requestedSponsorshipAmount,\\\\\\\\n    requestedSponsorshipToken,\\\\\\\\n    receiverAccount,\\\\\\\\n    supervisor,\\\\\\\\n    requestedSponsor,\\\\\\\\n  ]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  let data = editProposalData || JSON.parse(draftProposalData);\\\\\\\\n  let snapshot = data.snapshot;\\\\\\\\n  if (allowDraft && data) {\\\\\\\\n    if (timestamp) {\\\\\\\\n      snapshot =\\\\\\\\n        data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n        data.snapshot;\\\\\\\\n    }\\\\\\\\n    if (\\\\\\\\n      draftProposalData &&\\\\\\\\n      editProposalData &&\\\\\\\\n      editProposalData.id === JSON.parse(draftProposalData).id\\\\\\\\n    ) {\\\\\\\\n      snapshot = {\\\\\\\\n        ...editProposalData.snapshot,\\\\\\\\n        ...JSON.parse(draftProposalData).snapshot,\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n    setCategory(snapshot.category);\\\\\\\\n    setTitle(snapshot.name);\\\\\\\\n    setSummary(snapshot.summary);\\\\\\\\n    setDescription(snapshot.description);\\\\\\\\n    setReceiverAccount(snapshot.receiver_account);\\\\\\\\n    setRequestedSponsor(snapshot.requested_sponsor);\\\\\\\\n    setRequestedSponsorshipAmount(snapshot.requested_sponsorship_usd_amount);\\\\\\\\n    setSupervisor(snapshot.supervisor);\\\\\\\\n\\\\\\\\n    const token = tokensOptions.find(\\\\\\\\n      (item) =>\\\\\\\\n        JSON.stringify(item.value) ===\\\\\\\\n        JSON.stringify(snapshot.requested_sponsorship_paid_in_currency)\\\\\\\\n    );\\\\\\\\n    setRequestedSponsorshipToken(token);\\\\\\\\n  }\\\\\\\\n  setLoading(false);\\\\\\\\n}, [editProposalData, draftProposalData]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (draftProposalData) {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n  }\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 3000);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [memoizedDraftData, draftKey, draftProposalData]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    proposalsOptions.length > 0 &&\\\\\\\\n    editProposalData &&\\\\\\\\n    editProposalData?.snapshot?.linked_proposals?.length > 0\\\\\\\\n  ) {\\\\\\\\n    let data = [];\\\\\\\\n    editProposalData.snapshot.linked_proposals.map((item) => {\\\\\\\\n      data.push(proposalsOptions.find((i) => i.value === item));\\\\\\\\n    });\\\\\\\\n    setLinkedProposals(data);\\\\\\\\n  }\\\\\\\\n}, [editProposalData, proposalsOptions]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    proposalsData !== null &&\\\\\\\\n    Array.isArray(proposalsData) &&\\\\\\\\n    !proposalsOptions.length\\\\\\\\n  ) {\\\\\\\\n    const data = [];\\\\\\\\n    for (const prop of proposalsData) {\\\\\\\\n      data.push({\\\\\\\\n        label: \\\\\\\\\\\\\\\"Id \\\\\\\\\\\\\\\" + prop.id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + prop.snapshot.name,\\\\\\\\n        value: prop.id,\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    setProposalsOptions(data);\\\\\\\\n  }\\\\\\\\n}, [proposalsData]);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && <div className=\\\\\\\\\\\\\\\"text-muted text-sm\\\\\\\\\\\\\\\">{description}</div>}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CheckBox = ({ value, isChecked, label, onClick }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"checkbox\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        onChange={(e) => onClick(e.target.checked)}\\\\\\\\n      />\\\\\\\\n      <label class=\\\\\\\\\\\\\\\"form-check-label text-sm\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst DraftBtnContainer = styled.div`\\\\\\\\n  font-size: 14px;\\\\\\\\n  min-width: 150px;\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .select-header {\\\\\\\\n    display: flex;\\\\\\\\n    justify-content: space-between;\\\\\\\\n    align-items: center;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    border-radius-top: 5px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    background-color: #fff;\\\\\\\\n    border-radius: 5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .options-card {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 0;\\\\\\\\n    width: 200%;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    background-color: #fff;\\\\\\\\n    padding: 0.5rem;\\\\\\\\n    z-index: 9999;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option {\\\\\\\\n    margin-block: 5px;\\\\\\\\n    padding: 10px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    border-bottom: 1px solid #f0f0f0;\\\\\\\\n    transition: background-color 0.3s ease;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:hover {\\\\\\\\n    background-color: #f0f0f0; /* Custom hover effect color */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:last-child {\\\\\\\\n    border-bottom: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f8f8f8 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 8px;\\\\\\\\n    height: 8px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green {\\\\\\\\n    background-color: #04a46e;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\nconst [selectedStatus, setSelectedStatus] = useState(\\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\");\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [amountError, setAmountError] = useState(null);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\n\\\\\\\\nconst DraftBtn = () => {\\\\\\\\n  const btnOptions = [\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Submit Draft\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"The author can still edit the proposal and build consensus before sharing it with sponsors.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Ready for Review\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"Start the official review process with sponsors. This will lock the editing function, but comments are still open.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"review\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  const handleOptionClick = (option) => {\\\\\\\\n    setDraftBtnOpen(false);\\\\\\\\n    setSelectedStatus(option.value);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const toggleDropdown = () => {\\\\\\\\n    setDraftBtnOpen(!isDraftBtnOpen);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const handleSubmit = () => {\\\\\\\\n    const isDraft = selectedStatus === \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\";\\\\\\\\n    if (isDraft) {\\\\\\\\n      onSubmit({ isDraft });\\\\\\\\n      cleanDraft();\\\\\\\\n    } else {\\\\\\\\n      setReviewModal(true);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\\\\\\\\n  const disabled =\\\\\\\\n    !title ||\\\\\\\\n    !description ||\\\\\\\\n    !summary ||\\\\\\\\n    !category ||\\\\\\\\n    !requestedSponsorshipAmount ||\\\\\\\\n    !receiverAccount ||\\\\\\\\n    !requestedSponsor ||\\\\\\\\n    !consent.toc ||\\\\\\\\n    !consent.coc;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <DraftBtnContainer>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"custom-select\\\\\\\\\\\\\\\"\\\\\\\\n        tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n        onBlur={() => setDraftBtnOpen(false)}\\\\\\\\n      >\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\n            \\\\\\\\\\\\\\\"select-header d-flex gap-1 align-items-center \\\\\\\\\\\\\\\" +\\\\\\\\n            (disabled && \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\")\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            onClick={() => !disabled && handleSubmit()}\\\\\\\\n            className=\\\\\\\\\\\\\\\"p-2 d-flex gap-2 align-items-center \\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + selectedOption.iconColor}></div>\\\\\\\\n            <div className={`selected-option`}>{selectedOption.label}</div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"h-100 p-2\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ borderLeft: \\\\\\\\\\\\\\\"1px solid #ccc\\\\\\\\\\\\\\\" }}\\\\\\\\n            onClick={!disabled && toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <i class={`bi bi-chevron-${isOpen ? \\\\\\\\\\\\\\\"up\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\"}`}></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {isDraftBtnOpen && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"options-card\\\\\\\\\\\\\\\">\\\\\\\\n            {btnOptions.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`option ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n              >\\\\\\\\n                <div className={`d-flex gap-2 align-items-center`}>\\\\\\\\n                  <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + option.iconColor}></div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">{option.label}</div>\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-muted text-xs\\\\\\\\\\\\\\\">{option.description}</div>\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </DraftBtnContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nlet grantNotify = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"is_write_permission_granted\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    predecessor_id: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n    key: context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\",\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst userStorageDeposit = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"storage_balance_of\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    account_id: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst onSubmit = ({ isDraft, isCancel }) => {\\\\\\\\n  const linkedProposalsIds = linkedProposals.map((item) => item.value) ?? [];\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    category: category,\\\\\\\\n    summary: summary,\\\\\\\\n    linked_proposals: linkedProposalsIds,\\\\\\\\n    requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n    requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n    receiver_account: receiverAccount,\\\\\\\\n    supervisor: supervisor || null,\\\\\\\\n    requested_sponsor: requestedSponsor,\\\\\\\\n    timeline: isCancel\\\\\\\\n      ? { status: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\" }\\\\\\\\n      : isDraft\\\\\\\\n      ? { status: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\" }\\\\\\\\n      : {\\\\\\\\n          status: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        },\\\\\\\\n  };\\\\\\\\n  const args = { labels: [], body: body };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editProposalData.id;\\\\\\\\n  }\\\\\\\\n  const calls = [\\\\\\\\n    {\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n  if (grantNotify === false) {\\\\\\\\n    calls.unshift({\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"grant_write_permission\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        predecessor_id: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n        keys: [context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\"],\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n      deposit: getDepositAmountForWriteAccess(userStorageDeposit),\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n  Near.call(calls);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst WarningImg =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreieq4222tf3hkbccfnbw5kpgedm3bf2zcfgzbnmismxav2phqdwd7q\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst descriptionPlaceholder = `**PROJECT DETAILS**\\\\\\\\nProvide a clear overview of the scope, deliverables, and expected outcomes. What benefits will it provide to the NEAR community? How will you measure success?\\\\\\\\n\\\\\\\\n**TIMELINE**\\\\\\\\nDescribe the timeline of your project and key milestones, specifying if the work was already complete or not. Include your plans for reporting progress to the community.\\\\\\\\n\\\\\\\\nOPTIONAL FIELDS\\\\\\\\n\\\\\\\\n**TEAM**\\\\\\\\nProvide a list of who will be working on the project along with their relevant skillset and experience. You may include links to portfolios or profiles to help the community get to know who the DAO will fund and how their backgrounds will contribute to your project\\\\\\\\u{2019}s success.\\\\\\\\n\\\\\\\\n**BUDGET BREAKDOWN**\\\\\\\\nInclude a detailed breakdown on how you will use the funds and include rate justification. Our community values transparency, so be as specific as possible.\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Spinner\\\\\\\\\\\\\\\"}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n    <Heading>{isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} Proposal</Heading>\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmReviewModal\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          cleanDraft();\\\\\\\\n          onSubmit({ isDraft: false });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmCancelModal\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          onSubmit({ isCancel: true });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card card-body p-4 rounded-0\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-6\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"flex-2\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                accountId: author,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                description={\\\\\\\\n                  <>\\\\\\\\n                    Select the category that best aligns with your contribution\\\\\\\\n                    to the NEAR developer community. Need guidance? See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href={FundingDocs}\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Funding Docs.\\\\\\\\n                    </a>\\\\\\\\n                  </>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CategoryDropdown\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    selectedValue: category,\\\\\\\\n                    onChange: setCategory,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Highlight the essence of your proposal in a few words. This will appear on your proposal\\\\\\\\u{2019}s detail page and the main proposal feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                    value: title,\\\\\\\\n                    onChange: (e) => {\\\\\\\\n                      setTitle(e.target.value);\\\\\\\\n                    },\\\\\\\\n                    skipPaddingGap: true,\\\\\\\\n                    placeholder: \\\\\\\\\\\\\\\"Enter title here.\\\\\\\\\\\\\\\",\\\\\\\\n                    inputProps: {\\\\\\\\n                      max: 80,\\\\\\\\n                      required: true,\\\\\\\\n                    },\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Explain your proposal briefly. This is your chance to make a good first impression on the community. Include what needs or goals your work will address, your solution, and the benefit for the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                    value: summary,\\\\\\\\n                    multiline: true,\\\\\\\\n                    onChange: (e) => {\\\\\\\\n                      setSummary(e.target.value);\\\\\\\\n                    },\\\\\\\\n                    skipPaddingGap: true,\\\\\\\\n                    placeholder: \\\\\\\\\\\\\\\"Enter summary here.\\\\\\\\\\\\\\\",\\\\\\\\n                    inputProps: {\\\\\\\\n                      max: 500,\\\\\\\\n                      required: true,\\\\\\\\n                    },\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Expand on your summary with any relevant details like your contribution timeline, key milestones, team background, and a clear breakdown of how the funds will be used. Proposals should be simple and clear (e.g. 1 month). For more complex projects, treat each milestone as a separate proposal.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Compose\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    data: description,\\\\\\\\n                    onChange: setDescription,\\\\\\\\n                    autocompleteEnabled: true,\\\\\\\\n                    autoFocus: false,\\\\\\\\n                    placeholder: descriptionPlaceholder,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </InputContainer>\\\\\\\\n              <InputContainer\\\\\\\\n                heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\"\\\\\\\\n                description=\\\\\\\\\\\\\\\"Expand on your summary with any relevant details like your contribution timeline, key milestones, team background, and a clear breakdown of how the funds will be used. Proposals should be simple and clear (e.g. 1 month). For more complex projects, treat each milestone as a separate proposal.\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                  <CheckBox\\\\\\\\n                    value={consent.toc}\\\\\\\\n                    label={\\\\\\\\n                      <>\\\\\\\\n                        I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        <a\\\\\\\\n                          href={\\\\\\\\n                            \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1nRGy7LhpLj56SjN9MseV1x-ubH8O_c6B9DOAZ9qTwMU/edit?usp=sharing\\\\\\\\\\\\\\\"\\\\\\\\n                          }\\\\\\\\n                          className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                          rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                        >\\\\\\\\n                          DevHub\\\\\\\\u{2019}s Terms and Conditions\\\\\\\\n                        </a>\\\\\\\\n                        and commit to honoring it\\\\\\\\n                      </>\\\\\\\\n                    }\\\\\\\\n                    isChecked={consent.toc}\\\\\\\\n                    onClick={(value) =>\\\\\\\\n                      setConsent((prevConsent) => ({\\\\\\\\n                        ...prevConsent,\\\\\\\\n                        toc: value,\\\\\\\\n                      }))\\\\\\\\n                    }\\\\\\\\n                  />\\\\\\\\n                  <CheckBox\\\\\\\\n                    value={consent.coc}\\\\\\\\n                    label={\\\\\\\\n                      <>\\\\\\\\n                        I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        <a\\\\\\\\n                          href={\\\\\\\\n                            \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1c6XV8Sj_BRKw8jnTIsjdLPPN6Al5eEStt1ZLYSuqw9U/edit\\\\\\\\\\\\\\\"\\\\\\\\n                          }\\\\\\\\n                          className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                          rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                        >\\\\\\\\n                          DevHub\\\\\\\\u{2019}s Code of Conduct\\\\\\\\n                        </a>\\\\\\\\n                        and commit to honoring it\\\\\\\\n                      </>\\\\\\\\n                    }\\\\\\\\n                    isChecked={consent.coc}\\\\\\\\n                    onClick={(value) =>\\\\\\\\n                      setConsent((prevConsent) => ({\\\\\\\\n                        ...prevConsent,\\\\\\\\n                        coc: value,\\\\\\\\n                      }))\\\\\\\\n                    }\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n              </InputContainer>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                <div>\\\\\\\\n                  {isEditPage && (\\\\\\\\n                    <Widget\\\\\\\\n                      src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                          </div>\\\\\\\\n                        ),\\\\\\\\n                        onClick: () => setCancelModal(true),\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                  <Link\\\\\\\\n                    to={\\\\\\\\n                      isEditPage\\\\\\\\n                        ? href({\\\\\\\\n                            widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                              id: parseInt(id),\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                        : href({\\\\\\\\n                            widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                          })\\\\\\\\n                    }\\\\\\\\n                  >\\\\\\\\n                    <Widget\\\\\\\\n                      src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                      props={{\\\\\\\\n                        classNames: {\\\\\\\\n                          root: \\\\\\\\\\\\\\\"d-flex text-muted fw-bold btn-outline shadow-none border-0\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                        label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                        onClick: cleanDraft,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </Link>\\\\\\\\n                  <DraftBtn />\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"flex-1\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-4\\\\\\\\\\\\\\\">Author Details</div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n            <InputContainer heading=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"mob.near/widget/Profile.ShortInlineBlock\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  accountId: author,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </InputContainer>\\\\\\\\n            <InputContainer\\\\\\\\n              heading={\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">Link Proposals (Optional)</div>\\\\\\\\n              }\\\\\\\\n              description=\\\\\\\\\\\\\\\"Link any relevant proposals (e.g. previous milestones).\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              {linkedProposals.map((proposal) => {\\\\\\\\n                return (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                    <a\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                      href={href({\\\\\\\\n                        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                        params: {\\\\\\\\n                          page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                          id: proposal.value,\\\\\\\\n                        },\\\\\\\\n                      })}\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      {proposal.label}\\\\\\\\n                    </a>\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n                      onClick={() => {\\\\\\\\n                        const updatedLinkedProposals = linkedProposals.filter(\\\\\\\\n                          (item) => item.value !== proposal.value\\\\\\\\n                        );\\\\\\\\n                        setLinkedProposals(updatedLinkedProposals);\\\\\\\\n                      }}\\\\\\\\n                    >\\\\\\\\n                      <i class=\\\\\\\\\\\\\\\"bi bi-trash3-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                );\\\\\\\\n              })}\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDownWithSearch\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  selectedValue: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                  onChange: (v) => {\\\\\\\\n                    if (\\\\\\\\n                      !linkedProposals.some((item) => item.value === v.value)\\\\\\\\n                    ) {\\\\\\\\n                      setLinkedProposals([...linkedProposals, v]);\\\\\\\\n                    }\\\\\\\\n                  },\\\\\\\\n                  options: proposalsOptions,\\\\\\\\n                  showSearch: true,\\\\\\\\n                  searchInputPlaceholder: \\\\\\\\\\\\\\\"Search by Id\\\\\\\\\\\\\\\",\\\\\\\\n                  defaultLabel: \\\\\\\\\\\\\\\"Search proposals\\\\\\\\\\\\\\\",\\\\\\\\n                  searchByValue: true,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </InputContainer>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"h5 mb-0 text-muted\\\\\\\\\\\\\\\">Funding Details</div>\\\\\\\\n            <InputContainer\\\\\\\\n              heading=\\\\\\\\\\\\\\\"Total Amount (USD)\\\\\\\\\\\\\\\"\\\\\\\\n              description={\\\\\\\\n                <>\\\\\\\\n                  Enter the exact amount you are seeking. See\\\\\\\\n                  <a\\\\\\\\n                    href={FundingDocs}\\\\\\\\n                    className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                    target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                    rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    Funding Documentation\\\\\\\\n                  </a>\\\\\\\\n                  for guidelines.\\\\\\\\n                </>\\\\\\\\n              }\\\\\\\\n            >\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                  value: requestedSponsorshipAmount,\\\\\\\\n                  onChange: (e) => {\\\\\\\\n                    const inputValue = e.target.value;\\\\\\\\n                    // Check if the input value is a whole number\\\\\\\\n                    if (!Number.isInteger(Number(inputValue))) {\\\\\\\\n                      setAmountError(\\\\\\\\\\\\\\\"Please enter a whole number.\\\\\\\\\\\\\\\");\\\\\\\\n                    } else {\\\\\\\\n                      setRequestedSponsorshipAmount(e.target.value);\\\\\\\\n                      setAmountError(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n                    }\\\\\\\\n                  },\\\\\\\\n                  skipPaddingGap: true,\\\\\\\\n                  placeholder: \\\\\\\\\\\\\\\"Enter amount\\\\\\\\\\\\\\\",\\\\\\\\n                  inputProps: {\\\\\\\\n                    type: \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\",\\\\\\\\n                    prefix: \\\\\\\\\\\\\\\"$\\\\\\\\\\\\\\\",\\\\\\\\n                  },\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              {amountError && (\\\\\\\\n                <div style={{ color: \\\\\\\\\\\\\\\"red\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">\\\\\\\\n                  {amountError}\\\\\\\\n                </div>\\\\\\\\n              )}\\\\\\\\n            </InputContainer>\\\\\\\\n            <InputContainer\\\\\\\\n              heading=\\\\\\\\\\\\\\\"Currency\\\\\\\\\\\\\\\"\\\\\\\\n              description=\\\\\\\\\\\\\\\"Select your preferred currency for receiving funds. Note: The exchange rate for NEAR tokens will be the closing rate at the day of the invoice.\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  options: tokensOptions,\\\\\\\\n                  selectedValue: requestedSponsorshipToken,\\\\\\\\n                  onUpdate: (v) => {\\\\\\\\n                    setRequestedSponsorshipToken(v);\\\\\\\\n                  },\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </InputContainer>\\\\\\\\n\\\\\\\\n            <InputContainer\\\\\\\\n              heading=\\\\\\\\\\\\\\\"NEAR Wallet Address\\\\\\\\\\\\\\\"\\\\\\\\n              description=\\\\\\\\\\\\\\\"Enter the address that will receive the funds. We\\\\\\\\u{2019}ll need this to send a test transaction once your proposal is approved.\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AccountInput\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  value: receiverAccount,\\\\\\\\n                  placeholder: devdaoAccount,\\\\\\\\n                  onUpdate: setReceiverAccount,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </InputContainer>\\\\\\\\n            <InputContainer heading=\\\\\\\\\\\\\\\"Requested Sponsor\\\\\\\\\\\\\\\" description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AccountInput\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  value: requestedSponsor,\\\\\\\\n                  placeholder: \\\\\\\\\\\\\\\"DevDAO\\\\\\\\\\\\\\\",\\\\\\\\n                  onUpdate: setRequestedSponsor,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </InputContainer>\\\\\\\\n            <InputContainer heading=\\\\\\\\\\\\\\\"Supervisor (Optional)\\\\\\\\\\\\\\\" description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AccountInput\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  value: supervisor,\\\\\\\\n                  placeholder: \\\\\\\\\\\\\\\"Enter Supervisor\\\\\\\\\\\\\\\",\\\\\\\\n                  onUpdate: setSupervisor,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </InputContainer>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.History\": {\"\": \"/*\\\\\\\\n---props---\\\\\\\\nprops.id: number;\\\\\\\\nprops.newTab: boolean;\\\\\\\\nprops.timestamp: number;\\\\\\\\nprops.referral: any;\\\\\\\\n*/\\\\\\\\nconst { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\") || {\\\\\\\\n  href: () => {},\\\\\\\\n};\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.common\\\\\\\\\\\\\\\"\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\nconst proposalId = props.id ?? (props.id ? parseInt(props.id) : 0);\\\\\\\\nconst proposal = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n  proposal_id: proposalId,\\\\\\\\n});\\\\\\\\nif (!proposal || !proposal.snapshot_history) {\\\\\\\\n  return <div class=\\\\\\\\\\\\\\\"bi bi-clock-history px-2\\\\\\\\\\\\\\\"></div>;\\\\\\\\n}\\\\\\\\nconst referral = props.referral;\\\\\\\\n\\\\\\\\nconst currentTimestamp = props.timestamp ?? proposal.snapshot.timestamp;\\\\\\\\nconst snapshot = proposal.snapshot;\\\\\\\\nconst snapshotHistory = proposal.snapshot_history\\\\\\\\n  ? Array.from(proposal.snapshot_history)\\\\\\\\n  : [];\\\\\\\\n\\\\\\\\nsnapshotHistory.push(snapshot);\\\\\\\\nsnapshotHistory.reverse();\\\\\\\\n\\\\\\\\nconst history = (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"btn-group\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"group\\\\\\\\\\\\\\\">\\\\\\\\n    <a\\\\\\\\n      class=\\\\\\\\\\\\\\\"card-link\\\\\\\\\\\\\\\"\\\\\\\\n      role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n      title=\\\\\\\\\\\\\\\"proposal History\\\\\\\\\\\\\\\"\\\\\\\\n      data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n      aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n      type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"bi bi-clock-history px-2\\\\\\\\\\\\\\\"></div>\\\\\\\\n    </a>\\\\\\\\n    <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\">\\\\\\\\n      <a\\\\\\\\n        class=\\\\\\\\\\\\\\\"d-flex text-muted\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ fontSize: \\\\\\\\\\\\\\\"12px\\\\\\\\\\\\\\\", textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\", cursor: \\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\" }}\\\\\\\\n      >\\\\\\\\n        <a\\\\\\\\n          style={{\\\\\\\\n            textAlign: \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\",\\\\\\\\n            minWidth: \\\\\\\\\\\\\\\"290px\\\\\\\\\\\\\\\",\\\\\\\\n            maxWidth: \\\\\\\\\\\\\\\"290px\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        >\\\\\\\\n          Edit History\\\\\\\\n        </a>\\\\\\\\n        <a style={{ marginRight: \\\\\\\\\\\\\\\"8px\\\\\\\\\\\\\\\" }}>Compare</a>\\\\\\\\n      </a>\\\\\\\\n      {snapshotHistory.map((item) => {\\\\\\\\n        if (item === undefined) return;\\\\\\\\n        return (\\\\\\\\n          <li style={{ display: \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <div\\\\\\\\n              style={{\\\\\\\\n                minWidth: \\\\\\\\\\\\\\\"290px\\\\\\\\\\\\\\\",\\\\\\\\n                maxWidth: \\\\\\\\\\\\\\\"290px\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <a\\\\\\\\n                class=\\\\\\\\\\\\\\\"dropdown-item\\\\\\\\\\\\\\\"\\\\\\\\n                href={href({\\\\\\\\n                  widgetSrc:\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Proposal\\\\\\\\\\\\\\\",\\\\\\\\n                  params: {\\\\\\\\n                    id: proposalId,\\\\\\\\n                    timestamp: item.timestamp,\\\\\\\\n                    compareTimestamp: null,\\\\\\\\n                    referral,\\\\\\\\n                  },\\\\\\\\n                })}\\\\\\\\n                target={props.newTab ? \\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\" : undefined}\\\\\\\\n              >\\\\\\\\n                {readableDate(item.timestamp / 1000000)}\\\\\\\\n\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"mob.near/widget/ProfileImage\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: item.editor_id,\\\\\\\\n                    style: {\\\\\\\\n                      width: \\\\\\\\\\\\\\\"1.25em\\\\\\\\\\\\\\\",\\\\\\\\n                      height: \\\\\\\\\\\\\\\"1.25em\\\\\\\\\\\\\\\",\\\\\\\\n                    },\\\\\\\\n                    imageStyle: {\\\\\\\\n                      transform: \\\\\\\\\\\\\\\"translateY(-12.5%)\\\\\\\\\\\\\\\",\\\\\\\\n                    },\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                {proposal.author_id.substring(0, 8)}\\\\\\\\n              </a>\\\\\\\\n            </div>\\\\\\\\n            <a\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item\\\\\\\\\\\\\\\"\\\\\\\\n              href={href({\\\\\\\\n                widgetSrc:\\\\\\\\n                  \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Proposal\\\\\\\\\\\\\\\",\\\\\\\\n                params: {\\\\\\\\n                  id: proposalId,\\\\\\\\n                  timestamp: currentTimestamp,\\\\\\\\n                  compareTimestamp: item.timestamp,\\\\\\\\n                  referral,\\\\\\\\n                },\\\\\\\\n              })}\\\\\\\\n            >\\\\\\\\n              <i class=\\\\\\\\\\\\\\\"bi bi-file-earmark-diff\\\\\\\\\\\\\\\" />\\\\\\\\n            </a>\\\\\\\\n          </li>\\\\\\\\n        );\\\\\\\\n      })}\\\\\\\\n    </ul>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nreturn history;\\\\\\\\n\"}, \"devhub.entity.proposal.Profile\": {\"\": \"const accountId = props.accountId;\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  min-width: 40px;\\\\\\\\n  max-width: 40px;\\\\\\\\n  min-height: 40px;\\\\\\\\n  max-height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nconst profile = Social.get(`${accountId}/profile/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Avatar>\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"mob.near/widget/Image\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        image: profile.image,\\\\\\\\n        alt: profile.name,\\\\\\\\n        fallbackUrl:\\\\\\\\n          \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreibiyqabm3kl24gcb2oegb7pmwdi6wwrpui62iwb44l7uomnn3lhbi\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </Avatar>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.Comments\": {\"\": \"const socialComments = Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", props.item);\\\\\\\\nconst snapshotHistory = props.snapshotHistory;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  .log-line {\\\\\\\\n    position: absolute;\\\\\\\\n    left: 7%;\\\\\\\\n    top: -30px;\\\\\\\\n    bottom: 0;\\\\\\\\n    z-index: 1;\\\\\\\\n    width: 1px;\\\\\\\\n    height: 100%;\\\\\\\\n    background-color: var(--bs-border-color);\\\\\\\\n    z-index: 1;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommentContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Comment = ({ commentItem }) => {\\\\\\\\n  const { accountId, blockHeight } = commentItem;\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n    blockHeight,\\\\\\\\n  };\\\\\\\\n  const content = JSON.parse(Social.get(item.path, blockHeight) ?? \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  const link = `https://near.org/mob.near/widget/MainPage.N.Comment.Page?accountId=${accountId}&blockHeight=${blockHeight}`;\\\\\\\\n  return (\\\\\\\\n    <div style={{ zIndex: 99, background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            accountId: accountId,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        <CommentContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n          <Header className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div>\\\\\\\\n              {accountId} commented\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  blockHeight: blockHeight,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/Posts.Menu\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: accountId,\\\\\\\\n                    blockHeight: blockHeight,\\\\\\\\n                    contentPath: `/post/comment`,\\\\\\\\n                    contentType: \\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </Header>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                text: content.text,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/v1.LikeButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/CopyUrlButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  url: link,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/ShareButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n                  url: link,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </CommentContainer>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (socialComments.length) {\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"log-line\\\\\\\\\\\\\\\"> </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n        {socialComments.map((i) => (\\\\\\\\n          <Comment commentItem={i} />\\\\\\\\n        ))}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\"}, \"devhub.entity.proposal.Proposal\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\") || {\\\\\\\\n  href: () => {},\\\\\\\\n};\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.common\\\\\\\\\\\\\\\"\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst accountId = context.accountId;\\\\\\\\n/*\\\\\\\\n---props---\\\\\\\\nprops.id: number;\\\\\\\\nprops.timestamp: number; optional\\\\\\\\n*/\\\\\\\\n\\\\\\\\nconst TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .draft-info-container {\\\\\\\\n    background-color: #ecf8fb;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .review-info-container {\\\\\\\\n    background-color: #fef6ee;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-3 {\\\\\\\\n    flex: 3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 20px;\\\\\\\\n    height: 20px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 205px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n  .vertical-line-sm {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 80px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:disabled ~ .form-check-label,\\\\\\\\n  .form-check-input[disabled] ~ .form-check-label {\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input {\\\\\\\\n    border-color: black !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-btn {\\\\\\\\n    background-color: #687076;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-vertical {\\\\\\\\n    border-top: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n    border-bottom: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  button.px-0 {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  red-icon i {\\\\\\\\n    color: red;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ProposalContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Text = styled.p`\\\\\\\\n  display: block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 20px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  white-space: nowrap;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 12px;\\\\\\\\n  margin: -6px -6px 6px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst stepsArray = [1, 2, 3, 4, 5];\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\nconst proposal = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n  proposal_id: parseInt(id),\\\\\\\\n});\\\\\\\\n\\\\\\\\nif (!proposal) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Spinner\\\\\\\\\\\\\\\"}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nif (timestamp && proposal) {\\\\\\\\n  proposal.snapshot =\\\\\\\\n    proposal.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n    proposal.snapshot;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { snapshot } = proposal;\\\\\\\\n\\\\\\\\nconst editorAccountId = snapshot.editor_id;\\\\\\\\nconst blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\nconst item = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n  path: `devhub.near/post/main`,\\\\\\\\n  blockHeight,\\\\\\\\n};\\\\\\\\nconst proposalURL = `devhub.near/widget/devhub.entity.proposal.Proposal?id=${proposal.id}&timestamp=${snapshot.timestamp}`;\\\\\\\\n\\\\\\\\nconst KycVerificationStatus = () => {\\\\\\\\n  const isVerified = true;\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      {isVerified ? (\\\\\\\\n        <img\\\\\\\\n          src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreidqveupkcc7e3rko2e67lztsqrfnjzw3ceoajyglqeomvv7xznusm\\\\\\\\\\\\\\\"\\\\\\\\n          height={40}\\\\\\\\n        />\\\\\\\\n      ) : (\\\\\\\\n        \\\\\\\\\\\\\\\"Need icon\\\\\\\\\\\\\\\"\\\\\\\\n      )}\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">KYC Verified</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">Expires on Aug 24, 2024</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst SidePanelItem = ({ title, children, hideBorder }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"d-flex flex-column gap-2 pb-3 \\\\\\\\\\\\\\\" + (!hideBorder && \\\\\\\\\\\\\\\" border-bottom\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{title} </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst proposalStatusOptions = [\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Draft\\\\\\\\\\\\\\\",\\\\\\\\n    value: { status: TIMELINE_STATUS.DRAFT },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Review\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.REVIEW,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.APPROVED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved-Conditionally\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Rejected\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.REJECTED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.CANCELED,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Payment-processing\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n      kyc_verified: false,\\\\\\\\n      test_transaction_sent: false,\\\\\\\\n      request_for_trustees_created: false,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Funded\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.FUNDED,\\\\\\\\n      trustees_released_payment: true,\\\\\\\\n      kyc_verified: true,\\\\\\\\n      test_transaction_sent: true,\\\\\\\\n      request_for_trustees_created: true,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst LinkedProposals = () => {\\\\\\\\n  const linkedProposalsData = [];\\\\\\\\n  snapshot.linked_proposals.map((item) => {\\\\\\\\n    const data = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n      proposal_id: item,\\\\\\\\n    });\\\\\\\\n    if (data !== null) {\\\\\\\\n      linkedProposalsData.push(data);\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      {linkedProposalsData.map((item) => (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              accountId: item.snapshot.editor_id,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\" style={{ maxWidth: 250 }}>\\\\\\\\n            <b className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">{item.snapshot.name}</b>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              created on {readableDate(item.snapshot.timestamp / 1000000)}\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      ))}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CheckBox = ({ value, isChecked, label, disabled, onClick }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"checkbox\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={disabled}\\\\\\\\n        onChange={(e) => onClick(e.target.checked)}\\\\\\\\n      />\\\\\\\\n      <label style={{ width: \\\\\\\\\\\\\\\"90%\\\\\\\\\\\\\\\" }} class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">\\\\\\\\n        {label}\\\\\\\\n      </label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst RadioButton = ({ value, isChecked, label }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={true}\\\\\\\\n      />\\\\\\\\n      <label class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isAllowedToEditProposal = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n  { proposal_id: proposal.id, editor: accountId }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst isModerator = isAllowedToEditProposal && proposal.author_id !== accountId;\\\\\\\\n\\\\\\\\nconst editProposalStatus = ({ timeline }) => {\\\\\\\\n  Near.call({\\\\\\\\n    contractName: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n    methodName: \\\\\\\\\\\\\\\"edit_proposal_timeline\\\\\\\\\\\\\\\",\\\\\\\\n    args: {\\\\\\\\n      id: proposal.id,\\\\\\\\n      timeline: timeline,\\\\\\\\n    },\\\\\\\\n    gas: 270000000000000,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\nconst [showTimelineSetting, setShowTimelineSetting] = useState(false);\\\\\\\\nconst proposalStatus = useCallback(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.find(\\\\\\\\n      (i) => i.value.status === snapshot.timeline.status\\\\\\\\n    ),\\\\\\\\n  [snapshot]\\\\\\\\n);\\\\\\\\nconst [updatedProposalStatus, setUpdatedProposalStatus] = useState({\\\\\\\\n  ...proposalStatus(),\\\\\\\\n  value: { ...proposalStatus().value, ...snapshot.timeline },\\\\\\\\n});\\\\\\\\nconst [paymentHashes, setPaymentHashes] = useState([\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"]);\\\\\\\\n\\\\\\\\nconst selectedStatusIndex = useMemo(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.findIndex((i) => {\\\\\\\\n      return updatedProposalStatus.value.status === i.value.status;\\\\\\\\n    }),\\\\\\\\n  [updatedProposalStatus]\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst TimelineItems = ({ title, children, value, values }) => {\\\\\\\\n  const indexOfCurrentItem = proposalStatusOptions.findIndex((i) =>\\\\\\\\n    Array.isArray(values)\\\\\\\\n      ? values.includes(i.value.status)\\\\\\\\n      : value === i.value.status\\\\\\\\n  );\\\\\\\\n  let color = \\\\\\\\\\\\\\\"transparent\\\\\\\\\\\\\\\";\\\\\\\\n  let statusIndex = selectedStatusIndex;\\\\\\\\n\\\\\\\\n  // index 2,3,4,5  is of decision\\\\\\\\n  if (selectedStatusIndex === 3 || selectedStatusIndex === 2) {\\\\\\\\n    statusIndex = 2;\\\\\\\\n  }\\\\\\\\n  if (statusIndex === indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FEF6EE\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  if (\\\\\\\\n    statusIndex > indexOfCurrentItem ||\\\\\\\\n    updatedProposalStatus.value.status === TIMELINE_STATUS.FUNDED\\\\\\\\n  ) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#EEFEF0\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // reject\\\\\\\\n  if (statusIndex === 4 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FF7F7F\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // cancelled\\\\\\\\n  if (statusIndex === 5 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"p-2 rounded-3\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        backgroundColor: color,\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 text-black\\\\\\\\\\\\\\\"> {title}</div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst extractNotifyAccountId = (item) => {\\\\\\\\n  if (!item || item.type !== \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\" || !item.path) {\\\\\\\\n    return undefined;\\\\\\\\n  }\\\\\\\\n  const accountId = item.path.split(\\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\")[0];\\\\\\\\n  return `${accountId}/post/main` === item.path ? accountId : undefined;\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmReviewModal\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[1].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmCancelModal\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[5].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center h3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>{snapshot.name}</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">#{proposal.id}</div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.History\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            id: proposal.id,\\\\\\\\n            timestamp: snapshot.timestamp,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"near/widget/ShareButton\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            url: proposalURL,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        {((isAllowedToEditProposal &&\\\\\\\\n          snapshot.timeline.status === TIMELINE_STATUS.DRAFT) ||\\\\\\\\n          isModerator) && (\\\\\\\\n          <Link\\\\\\\\n            to={href({\\\\\\\\n              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n              params: {\\\\\\\\n                page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\",\\\\\\\\n                id: proposal.id,\\\\\\\\n                timestamp: timestamp,\\\\\\\\n              },\\\\\\\\n            })}\\\\\\\\n            style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center text-sm pb-3\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          timelineStatus: snapshot.timeline.status,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div>\\\\\\\\n        <b>{proposal.author_id} </b> created on{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n        {readableDate(snapshot.timestamp / 1000000)}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card card-body rounded-0 p-4\\\\\\\\\\\\\\\">\\\\\\\\n      {snapshot.timeline.status === TIMELINE_STATUS.DRAFT &&\\\\\\\\n        isAllowedToEditProposal && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"draft-info-container p-4 d-flex justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div>\\\\\\\\n              <b>\\\\\\\\n                This proposal is in draft mode and open for community comments.\\\\\\\\n              </b>\\\\\\\\n              <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                The author can still refine the proposal and build consensus\\\\\\\\n                before sharing it with sponsors. Click \\\\\\\\u{201c}Ready for review\\\\\\\\u{201d} when\\\\\\\\n                you want to start the official review process. This will lock\\\\\\\\n                the editing function, but comments are still open.\\\\\\\\n              </p>\\\\\\\\n            </div>\\\\\\\\n            <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  label: \\\\\\\\\\\\\\\"Ready for review\\\\\\\\\\\\\\\",\\\\\\\\n                  classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                  onClick: () => setReviewModal(true),\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      {snapshot.timeline.status === TIMELINE_STATUS.REVIEW &&\\\\\\\\n        isAllowedToEditProposal && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"review-info-container p-4 d-flex justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n            <div>\\\\\\\\n              <b>\\\\\\\\n                This proposal is in review mode and still open for community\\\\\\\\n                comments.\\\\\\\\n              </b>\\\\\\\\n              <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                You can\\\\\\\\u{2019}t edit the proposal, but comments are open. Only\\\\\\\\n                moderators can make changes. Click \\\\\\\\u{201c}Cancel Proposal\\\\\\\\u{201d} to cancel\\\\\\\\n                your proposal. This changes the status to Canceled, signaling to\\\\\\\\n                sponsors that it\\\\\\\\u{2019}s no longer active or relevant.\\\\\\\\n              </p>\\\\\\\\n            </div>\\\\\\\\n            <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  label: (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                      <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                    </div>\\\\\\\\n                  ),\\\\\\\\n                  classNames: { root: \\\\\\\\\\\\\\\"btn-outline-danger btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                  onClick: () => setCancelModal(true),\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"my-4\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-6\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"flex-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n              style={{ zIndex: 99, background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\", position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\" }}\\\\\\\\n            >\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  accountId: editorAccountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <ProposalContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n                <Header className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n                  {snapshot.editor_id} \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                  <Widget\\\\\\\\n                    src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n                    props={{\\\\\\\\n                      blockHeight,\\\\\\\\n                      blockTimestamp: snapshot.timestamp,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                  {context.accountId && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src=\\\\\\\\\\\\\\\"near/widget/Posts.Menu\\\\\\\\\\\\\\\"\\\\\\\\n                        props={{\\\\\\\\n                          accountId: editorAccountId,\\\\\\\\n                          blockHeight: blockHeight,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </Header>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                    PROPOSAL CATEGORY\\\\\\\\n                  </div>\\\\\\\\n                  <div>\\\\\\\\n                    <Widget\\\\\\\\n                      src={\\\\\\\\n                        \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CategoryDropdown\\\\\\\\\\\\\\\"\\\\\\\\n                      }\\\\\\\\n                      props={{\\\\\\\\n                        selectedValue: snapshot.category,\\\\\\\\n                        disabled: true,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                    SUMMARY\\\\\\\\n                  </div>\\\\\\\\n                  <div>{snapshot.summary}</div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n                    DESCRIPTION\\\\\\\\n                  </div>\\\\\\\\n                  <Widget\\\\\\\\n                    src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n                    props={{ text: snapshot.description }}\\\\\\\\n                  />\\\\\\\\n\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                    <Widget\\\\\\\\n                      src=\\\\\\\\\\\\\\\"near/widget/v1.LikeButton\\\\\\\\\\\\\\\"\\\\\\\\n                      props={{\\\\\\\\n                        item,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                    <Widget\\\\\\\\n                      src={\\\\\\\\n                        \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CommentIcon\\\\\\\\\\\\\\\"\\\\\\\\n                      }\\\\\\\\n                      props={{\\\\\\\\n                        item,\\\\\\\\n                        showOverlay: false,\\\\\\\\n                        onClick: () => {},\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                    <Widget\\\\\\\\n                      src=\\\\\\\\\\\\\\\"near/widget/CopyUrlButton\\\\\\\\\\\\\\\"\\\\\\\\n                      props={{\\\\\\\\n                        url: proposalURL,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                    <Widget\\\\\\\\n                      src=\\\\\\\\\\\\\\\"near/widget/ShareButton\\\\\\\\\\\\\\\"\\\\\\\\n                      props={{\\\\\\\\n                        postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n                        url: proposalURL,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                </div>\\\\\\\\n              </ProposalContainer>\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"border-bottom pb-4 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Comments\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                  snapshotHistory: [...proposal.snapshot_history, snapshot],\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\n                  \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ComposeComment\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                  notifyAccountId: extractNotifyAccountId(item),\\\\\\\\n                  id: proposal.id,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n            <SidePanelItem title=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  accountId: editorAccountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </SidePanelItem>\\\\\\\\n            <SidePanelItem\\\\\\\\n              title={\\\\\\\\n                \\\\\\\\\\\\\\\"Linked Proposals \\\\\\\\\\\\\\\" + `(${snapshot.linked_proposals.length})`\\\\\\\\n              }\\\\\\\\n            >\\\\\\\\n              <LinkedProposals />\\\\\\\\n            </SidePanelItem>\\\\\\\\n            <SidePanelItem title=\\\\\\\\\\\\\\\"Funding Ask\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"h4 text-black\\\\\\\\\\\\\\\">\\\\\\\\n                {snapshot.requested_sponsorship_usd_amount && (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                    <div>{snapshot.requested_sponsorship_usd_amount} USD</div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                      Requested in{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      {snapshot.requested_sponsorship_paid_in_currency}\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </SidePanelItem>\\\\\\\\n            <SidePanelItem title=\\\\\\\\\\\\\\\"Requested Sponsor\\\\\\\\\\\\\\\">\\\\\\\\n              {snapshot.requested_sponsor && (\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: snapshot.requested_sponsor,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              )}\\\\\\\\n            </SidePanelItem>\\\\\\\\n            <SidePanelItem title=\\\\\\\\\\\\\\\"Supervisor\\\\\\\\\\\\\\\">\\\\\\\\n              {snapshot.supervisor ? (\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: snapshot.supervisor,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              ) : (\\\\\\\\n                \\\\\\\\\\\\\\\"No Supervisor\\\\\\\\\\\\\\\"\\\\\\\\n              )}\\\\\\\\n            </SidePanelItem>\\\\\\\\n            <SidePanelItem\\\\\\\\n              hideBorder={true}\\\\\\\\n              title={\\\\\\\\n                <div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                    Timeline\\\\\\\\n                    {isModerator && (\\\\\\\\n                      <div onClick={() => setShowTimelineSetting(true)}>\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"></i>\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                  {showTimelineSetting && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"mt-2 d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                      <h6 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Proposal Status</h6>\\\\\\\\n                      <Widget\\\\\\\\n                        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n                        props={{\\\\\\\\n                          options: proposalStatusOptions,\\\\\\\\n                          selectedValue: updatedProposalStatus,\\\\\\\\n                          onUpdate: (v) => {\\\\\\\\n                            setUpdatedProposalStatus({\\\\\\\\n                              ...v,\\\\\\\\n                              value: {\\\\\\\\n                                ...updatedProposalStatus.value,\\\\\\\\n                                status: v.value.status,\\\\\\\\n                              },\\\\\\\\n                            });\\\\\\\\n                          },\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              }\\\\\\\\n            >\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex gap-3 mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n                    {stepsArray.map((_, index) => {\\\\\\\\n                      const indexOfCurrentItem = index;\\\\\\\\n                      let color = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n                      let statusIndex = selectedStatusIndex;\\\\\\\\n                      // index 2,3,4 is of decision\\\\\\\\n                      if (\\\\\\\\n                        selectedStatusIndex === 3 ||\\\\\\\\n                        selectedStatusIndex === 2 ||\\\\\\\\n                        selectedStatusIndex === 4 ||\\\\\\\\n                        selectedStatusIndex === 5\\\\\\\\n                      ) {\\\\\\\\n                        statusIndex = 2;\\\\\\\\n                      }\\\\\\\\n                      if (selectedStatusIndex === 6) {\\\\\\\\n                        statusIndex = 3;\\\\\\\\n                      }\\\\\\\\n                      const current = statusIndex === indexOfCurrentItem;\\\\\\\\n                      const completed =\\\\\\\\n                        statusIndex > indexOfCurrentItem ||\\\\\\\\n                        updatedProposalStatus.value.status ===\\\\\\\\n                          TIMELINE_STATUS.FUNDED;\\\\\\\\n                      return (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                          <div\\\\\\\\n                            className={\\\\\\\\n                              \\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" +\\\\\\\\n                              (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                              (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                            }\\\\\\\\n                          >\\\\\\\\n                            {completed && (\\\\\\\\n                              <div\\\\\\\\n                                className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n                                style={{ height: \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" }}\\\\\\\\n                              >\\\\\\\\n                                <i class=\\\\\\\\\\\\\\\"bi bi-check\\\\\\\\\\\\\\\"></i>\\\\\\\\n                              </div>\\\\\\\\n                            )}\\\\\\\\n                          </div>\\\\\\\\n\\\\\\\\n                          {index !== stepsArray.length - 1 && (\\\\\\\\n                            <div\\\\\\\\n                              className={\\\\\\\\n                                \\\\\\\\\\\\\\\"vertical-line\\\\\\\\\\\\\\\" +\\\\\\\\n                                (index === stepsArray.length - 2\\\\\\\\n                                  ? \\\\\\\\\\\\\\\"-sm \\\\\\\\\\\\\\\"\\\\\\\\n                                  : \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\") +\\\\\\\\n                                (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                              }\\\\\\\\n                            ></div>\\\\\\\\n                          )}\\\\\\\\n                        </div>\\\\\\\\n                      );\\\\\\\\n                    })}\\\\\\\\n                  </div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n                    <TimelineItems\\\\\\\\n                      title=\\\\\\\\\\\\\\\"1) Draft\\\\\\\\\\\\\\\"\\\\\\\\n                      value={TIMELINE_STATUS.DRAFT}\\\\\\\\n                    >\\\\\\\\n                      <div>\\\\\\\\n                        Once an author submits a proposal, it is in draft mode\\\\\\\\n                        and open for community comments. The author can still\\\\\\\\n                        make changes to the proposal during this stage and\\\\\\\\n                        submit it for official review when ready.\\\\\\\\n                      </div>\\\\\\\\n                    </TimelineItems>\\\\\\\\n                    <TimelineItems\\\\\\\\n                      title=\\\\\\\\\\\\\\\"2) Review\\\\\\\\\\\\\\\"\\\\\\\\n                      value={TIMELINE_STATUS.REVIEW}\\\\\\\\n                    >\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        Sponsors who agree to consider the proposal may request\\\\\\\\n                        attestations from work groups.\\\\\\\\n                        <CheckBox\\\\\\\\n                          value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                          disabled={selectedStatusIndex !== 1}\\\\\\\\n                          onClick={(value) =>\\\\\\\\n                            setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                              ...prevState,\\\\\\\\n                              value: {\\\\\\\\n                                ...prevState.value,\\\\\\\\n                                sponsor_requested_review: value,\\\\\\\\n                              },\\\\\\\\n                            }))\\\\\\\\n                          }\\\\\\\\n                          label=\\\\\\\\\\\\\\\"Sponsor provides feedback or requests reviews\\\\\\\\\\\\\\\"\\\\\\\\n                          isChecked={\\\\\\\\n                            updatedProposalStatus.value.sponsor_requested_review\\\\\\\\n                          }\\\\\\\\n                        />\\\\\\\\n                        <CheckBox\\\\\\\\n                          value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                          disabled={selectedStatusIndex !== 1}\\\\\\\\n                          label=\\\\\\\\\\\\\\\"Reviewer completes attestations (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={(value) =>\\\\\\\\n                            setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                              ...prevState,\\\\\\\\n                              value: {\\\\\\\\n                                ...prevState.value,\\\\\\\\n                                reviewer_completed_attestation: value,\\\\\\\\n                              },\\\\\\\\n                            }))\\\\\\\\n                          }\\\\\\\\n                          isChecked={\\\\\\\\n                            updatedProposalStatus.value\\\\\\\\n                              .reviewer_completed_attestation\\\\\\\\n                          }\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    </TimelineItems>\\\\\\\\n                    <TimelineItems\\\\\\\\n                      title=\\\\\\\\\\\\\\\"3) Decision\\\\\\\\\\\\\\\"\\\\\\\\n                      values={[\\\\\\\\n                        TIMELINE_STATUS.APPROVED,\\\\\\\\n                        TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n                        TIMELINE_STATUS.REJECTED,\\\\\\\\n                      ]}\\\\\\\\n                    >\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <div>Sponsor makes a final decision:</div>\\\\\\\\n                        <RadioButton\\\\\\\\n                          value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                          label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Approved</div>}\\\\\\\\n                          isChecked={\\\\\\\\n                            updatedProposalStatus.value.status ===\\\\\\\\n                            TIMELINE_STATUS.APPROVED\\\\\\\\n                          }\\\\\\\\n                        />\\\\\\\\n                        <RadioButton\\\\\\\\n                          value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                          label={\\\\\\\\n                            <>\\\\\\\\n                              <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                                Approved - Conditional{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                              </div>\\\\\\\\n                              <span>\\\\\\\\n                                Require follow up from recipient after payment\\\\\\\\n                              </span>\\\\\\\\n                            </>\\\\\\\\n                          }\\\\\\\\n                          isChecked={\\\\\\\\n                            updatedProposalStatus.value.status ===\\\\\\\\n                            TIMELINE_STATUS.APPROVED_CONDITIONALLY\\\\\\\\n                          }\\\\\\\\n                        />\\\\\\\\n                        <RadioButton\\\\\\\\n                          value=\\\\\\\\\\\\\\\"Reject\\\\\\\\\\\\\\\"\\\\\\\\n                          label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Rejected</div>}\\\\\\\\n                          isChecked={\\\\\\\\n                            updatedProposalStatus.value.status ===\\\\\\\\n                            TIMELINE_STATUS.REJECTED\\\\\\\\n                          }\\\\\\\\n                        />\\\\\\\\n                        <RadioButton\\\\\\\\n                          value=\\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\"\\\\\\\\n                          label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Canceled</div>}\\\\\\\\n                          isChecked={\\\\\\\\n                            updatedProposalStatus.value.status ===\\\\\\\\n                            TIMELINE_STATUS.CANCELED\\\\\\\\n                          }\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    </TimelineItems>\\\\\\\\n                    <TimelineItems\\\\\\\\n                      title=\\\\\\\\\\\\\\\"4) Payment Processing\\\\\\\\\\\\\\\"\\\\\\\\n                      value={TIMELINE_STATUS.PAYMENT_PROCESSING}\\\\\\\\n                    >\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <CheckBox\\\\\\\\n                          value={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                          label=\\\\\\\\\\\\\\\"Sponsor verifies KYC/KYB\\\\\\\\\\\\\\\"\\\\\\\\n                          disabled={selectedStatusIndex !== 6}\\\\\\\\n                          onClick={(value) =>\\\\\\\\n                            setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                              ...prevState,\\\\\\\\n                              value: {\\\\\\\\n                                ...prevState.value,\\\\\\\\n                                kyc_verified: value,\\\\\\\\n                              },\\\\\\\\n                            }))\\\\\\\\n                          }\\\\\\\\n                          isChecked={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                        />\\\\\\\\n                        <CheckBox\\\\\\\\n                          value={\\\\\\\\n                            updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                          }\\\\\\\\n                          disabled={selectedStatusIndex !== 6}\\\\\\\\n                          label=\\\\\\\\\\\\\\\"Sponsor confirmed sponsorship and shared funding steps with recipient\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={(value) =>\\\\\\\\n                            setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                              ...prevState,\\\\\\\\n                              value: {\\\\\\\\n                                ...prevState.value,\\\\\\\\n                                test_transaction_sent: value,\\\\\\\\n                              },\\\\\\\\n                            }))\\\\\\\\n                          }\\\\\\\\n                          isChecked={\\\\\\\\n                            updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                          }\\\\\\\\n                        />\\\\\\\\n                        {/* Not needed for Alpha testing */}\\\\\\\\n                        {/* <CheckBox\\\\\\\\n                          value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                          disabled={selectedStatusIndex !== 6}\\\\\\\\n                          label=\\\\\\\\\\\\\\\"Sponsor sends test transaction\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={(value) =>\\\\\\\\n                            setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                              ...prevState,\\\\\\\\n                              value: {\\\\\\\\n                                ...prevState.value,\\\\\\\\n                                test_transaction_sent: value\\\\\\\\n                              }\\\\\\\\n                            }))\\\\\\\\n                          }\\\\\\\\n                          isChecked={\\\\\\\\n                            updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                          }\\\\\\\\n                        />\\\\\\\\n                        <CheckBox\\\\\\\\n                          value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                          disabled={selectedStatusIndex !== 6}\\\\\\\\n                          label=\\\\\\\\\\\\\\\"Sponsor creates funding request from Trustees\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={(value) =>\\\\\\\\n                            setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                              ...prevState,\\\\\\\\n                              value: {\\\\\\\\n                                ...prevState.value,\\\\\\\\n                                request_for_trustees_created: value\\\\\\\\n                              }\\\\\\\\n                            }))\\\\\\\\n                          }\\\\\\\\n                          isChecked={\\\\\\\\n                            updatedProposalStatus.value\\\\\\\\n                              .request_for_trustees_created\\\\\\\\n                          }\\\\\\\\n                        /> */}\\\\\\\\n                      </div>\\\\\\\\n                    </TimelineItems>\\\\\\\\n                    <TimelineItems\\\\\\\\n                      title=\\\\\\\\\\\\\\\"5) Funded\\\\\\\\\\\\\\\"\\\\\\\\n                      value={TIMELINE_STATUS.FUNDED}\\\\\\\\n                    >\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        {paymentHashes?.length && paymentHashes[0] ? (\\\\\\\\n                          paymentHashes.map((link) => (\\\\\\\\n                            <a\\\\\\\\n                              href={link}\\\\\\\\n                              className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                              target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                              rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                            >\\\\\\\\n                              Payment Link\\\\\\\\n                              <i class=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                            </a>\\\\\\\\n                          ))\\\\\\\\n                        ) : updatedProposalStatus.value.payouts.length > 0 ? (\\\\\\\\n                          <div>\\\\\\\\n                            {updatedProposalStatus.value.payouts.map((link) => {\\\\\\\\n                              return (\\\\\\\\n                                <a\\\\\\\\n                                  href={link}\\\\\\\\n                                  className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                  target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                  rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                                >\\\\\\\\n                                  Payment Link\\\\\\\\n                                  <i class=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                </a>\\\\\\\\n                              );\\\\\\\\n                            })}\\\\\\\\n                          </div>\\\\\\\\n                        ) : (\\\\\\\\n                          \\\\\\\\\\\\\\\"No Payouts yet\\\\\\\\\\\\\\\"\\\\\\\\n                        )}\\\\\\\\n                      </div>\\\\\\\\n                    </TimelineItems>\\\\\\\\n                  </div>\\\\\\\\n                </div>\\\\\\\\n                {showTimelineSetting && (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                    {updatedProposalStatus.value.status ===\\\\\\\\n                      TIMELINE_STATUS.FUNDED && (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">Payment Link</label>\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          {paymentHashes.map((item, index) => (\\\\\\\\n                            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-between align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                              <Widget\\\\\\\\n                                src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n                                props={{\\\\\\\\n                                  className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                                  value: item,\\\\\\\\n                                  onChange: (e) => {\\\\\\\\n                                    const updatedHashes = [...paymentHashes];\\\\\\\\n                                    updatedHashes[index] = e.target.value;\\\\\\\\n                                    setPaymentHashes(updatedHashes);\\\\\\\\n                                  },\\\\\\\\n                                  skipPaddingGap: true,\\\\\\\\n                                  placeholder: \\\\\\\\\\\\\\\"Enter URL\\\\\\\\\\\\\\\",\\\\\\\\n                                }}\\\\\\\\n                              />\\\\\\\\n                              <div style={{ minWidth: 20 }}>\\\\\\\\n                                {index !== paymentHashes.length - 1 ? (\\\\\\\\n                                  <Widget\\\\\\\\n                                    src={\\\\\\\\n                                      \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                                    }\\\\\\\\n                                    props={{\\\\\\\\n                                      classNames: {\\\\\\\\n                                        root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                      },\\\\\\\\n                                      label: <i class=\\\\\\\\\\\\\\\"bi bi-trash3 h6\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                      onClick: () => {\\\\\\\\n                                        const updatedHashes = [\\\\\\\\n                                          ...paymentHashes,\\\\\\\\n                                        ];\\\\\\\\n                                        updatedHashes.splice(index, 1);\\\\\\\\n                                        setPaymentHashes(updatedHashes);\\\\\\\\n                                      },\\\\\\\\n                                    }}\\\\\\\\n                                  />\\\\\\\\n                                ) : (\\\\\\\\n                                  <Widget\\\\\\\\n                                    src={\\\\\\\\n                                      \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                                    }\\\\\\\\n                                    props={{\\\\\\\\n                                      classNames: {\\\\\\\\n                                        root: \\\\\\\\\\\\\\\"green-btn shadow-none border-0 w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                      },\\\\\\\\n                                      label: <i class=\\\\\\\\\\\\\\\"bi bi-plus-lg\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                      onClick: () =>\\\\\\\\n                                        setPaymentHashes([\\\\\\\\n                                          ...paymentHashes,\\\\\\\\n                                          \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                                        ]),\\\\\\\\n                                    }}\\\\\\\\n                                  />\\\\\\\\n                                )}\\\\\\\\n                              </div>\\\\\\\\n                            </div>\\\\\\\\n                          ))}\\\\\\\\n                        </div>\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end text-sm\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src={\\\\\\\\n                          \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                        }\\\\\\\\n                        props={{\\\\\\\\n                          label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                          classNames: {\\\\\\\\n                            root: \\\\\\\\\\\\\\\"btn-outline-danger border-0 shadow-none btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                          },\\\\\\\\n                          onClick: () => {\\\\\\\\n                            setShowTimelineSetting(false);\\\\\\\\n                            setUpdatedProposalStatus(proposalStatus);\\\\\\\\n                          },\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={\\\\\\\\n                          \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                        }\\\\\\\\n                        props={{\\\\\\\\n                          label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                          classNames: { root: \\\\\\\\\\\\\\\"green-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                          onClick: () => {\\\\\\\\n                            if (\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              TIMELINE_STATUS.FUNDED\\\\\\\\n                            ) {\\\\\\\\n                              editProposalStatus({\\\\\\\\n                                timeline: {\\\\\\\\n                                  ...updatedProposalStatus.value,\\\\\\\\n                                  payouts: !paymentHashes[0]\\\\\\\\n                                    ? []\\\\\\\\n                                    : paymentHashes,\\\\\\\\n                                },\\\\\\\\n                              });\\\\\\\\n                            } else {\\\\\\\\n                              editProposalStatus({\\\\\\\\n                                timeline: updatedProposalStatus.value,\\\\\\\\n                              });\\\\\\\\n                            }\\\\\\\\n                          },\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </SidePanelItem>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.StatusTag\": {\"\": \"const timelineStatus = props.timelineStatus;\\\\\\\\nconst size = props.size ?? \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst getClassNameByStatus = () => {\\\\\\\\n  switch (timelineStatus) {\\\\\\\\n    case \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"warning\\\\\\\\\\\\\\\";\\\\\\\\n    default:\\\\\\\\n      return \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  font-size: ${({ size }) => {\\\\\\\\n    switch (size) {\\\\\\\\n      case \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\":\\\\\\\\n        return \\\\\\\\\\\\\\\"10px\\\\\\\\\\\\\\\";\\\\\\\\n      case \\\\\\\\\\\\\\\"lg\\\\\\\\\\\\\\\":\\\\\\\\n        return \\\\\\\\\\\\\\\"14px\\\\\\\\\\\\\\\";\\\\\\\\n      default:\\\\\\\\n        return \\\\\\\\\\\\\\\"12px\\\\\\\\\\\\\\\";\\\\\\\\n    }\\\\\\\\n  }};\\\\\\\\n\\\\\\\\n  .warning-tag {\\\\\\\\n    border: 1px solid #f40303 !important;\\\\\\\\n    color: #f40303 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-tag {\\\\\\\\n    border: 1px solid #555555 !important;\\\\\\\\n    color: #555555 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-tag {\\\\\\\\n    border: 1px solid #04a46e !important;\\\\\\\\n    color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container size={size}>\\\\\\\\n    <div className={getClassNameByStatus() + \\\\\\\\\\\\\\\"-tag rounded-2 p-1\\\\\\\\\\\\\\\"}>\\\\\\\\n      {timelineStatus}\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.organism.Navbar\": {\"\": \"const page = props.page;\\\\\\\\n\\\\\\\\nconst [showMenu, setShowMenu] = useState(false);\\\\\\\\n\\\\\\\\nconst { href: linkHref } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst { hasModerator } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst Logo = () => {\\\\\\\\n  const Wrapper = styled.div`\\\\\\\\n    @media screen and (max-width: 768px) {\\\\\\\\n      svg {\\\\\\\\n        width: 90px;\\\\\\\\n        height: 12px;\\\\\\\\n        transform: scale(1.5);\\\\\\\\n        margin-left: 1rem;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <Link\\\\\\\\n        to={linkHref({\\\\\\\\n          widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n          params: { page: \\\\\\\\\\\\\\\"home\\\\\\\\\\\\\\\" },\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <svg\\\\\\\\n          xmlns=\\\\\\\\\\\\\\\"http://www.w3.org/2000/svg\\\\\\\\\\\\\\\"\\\\\\\\n          width=\\\\\\\\\\\\\\\"180\\\\\\\\\\\\\\\"\\\\\\\\n          height=\\\\\\\\\\\\\\\"24\\\\\\\\\\\\\\\"\\\\\\\\n          viewBox=\\\\\\\\\\\\\\\"0 0 180 24\\\\\\\\\\\\\\\"\\\\\\\\n          fill=\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <g clip-path=\\\\\\\\\\\\\\\"url(#clip0_530_29)\\\\\\\\\\\\\\\">\\\\\\\\n            <path\\\\\\\\n              d=\\\\\\\\\\\\\\\"M8.62185 6.09766C11.8428 6.09766 14.5995 7.77588 14.5995 12.7821V20.8888H10.508V13.1803C10.508 10.7057 9.55041 9.39721 7.49016 9.39721C5.37187 9.39721 4.15313 10.8763 4.15313 13.4079V20.8888H0.0616455V6.26832H3.63081L4.00804 8.08877C4.96563 6.95099 6.32945 6.09766 8.62185 6.09766ZM23.911 21.0594C18.9489 21.0594 15.9601 18.1297 15.9601 13.607C15.9601 9.05588 19.007 6.09766 23.6208 6.09766C28.0895 6.09766 31.1073 8.82832 31.1654 13.1234C31.1654 13.5501 31.1364 14.0337 31.0493 14.4888H20.2257V14.6879C20.3128 16.7643 21.6766 18.0159 23.7369 18.0159C25.3909 18.0159 26.5516 17.3048 26.8998 15.9394H30.9332C30.4689 18.7839 27.8864 21.0594 23.911 21.0594ZM20.3128 11.8719H27.0449C26.7547 10.0799 25.5069 9.08432 23.6498 9.08432C21.8797 9.08432 20.5449 10.1368 20.3128 11.8719ZM47.0396 17.5039H47.5039V20.8888H45.4146C43.2963 20.8888 42.6289 19.8932 42.6579 18.4994C41.6133 20.1208 40.1044 21.0594 37.783 21.0594C34.562 21.0594 32.2406 19.5519 32.2406 16.7643C32.2406 13.6639 34.6201 11.9003 39.0888 11.9003H42.0486V11.1892C42.0486 9.88077 41.091 9.02743 39.3789 9.02743C37.783 9.02743 36.7093 9.73854 36.5352 10.8194H32.5888C32.879 7.97499 35.5486 6.09766 39.495 6.09766C43.6736 6.09766 46.082 7.9181 46.082 11.4168V16.5937C46.082 17.3617 46.4012 17.5039 47.0396 17.5039ZM42.0486 14.8585V14.5741H39.0598C37.3477 14.5741 36.3611 15.2568 36.3611 16.4799C36.3611 17.5039 37.2026 18.1581 38.5665 18.1581C40.7138 18.1581 42.0196 16.8497 42.0486 14.8585ZM56.8924 6.26832H57.5889V9.90921H55.9639C53.5264 9.90921 52.5978 11.5021 52.5978 13.7208V20.8888H48.5064V6.26832H52.2206L52.5978 8.45854C53.4103 7.1501 54.571 6.26832 56.8924 6.26832Z\\\\\\\\\\\\\\\"\\\\\\\\n              fill=\\\\\\\\\\\\\\\"#00EC97\\\\\\\\\\\\\\\"\\\\\\\\n            />\\\\\\\\n            <path\\\\\\\\n              d=\\\\\\\\\\\\\\\"M60.7221 23.961H59.2422L67.4542 0.124512H68.9341L60.7221 23.961ZM82.8081 8.08896V0.977843H86.8996V20.889H83.3304L82.9242 18.8694C81.9376 20.121 80.4867 21.0596 78.3394 21.0596C74.335 21.0596 71.4042 18.1867 71.4042 13.5503C71.4042 9.02762 74.335 6.09785 78.3104 6.09785C80.3706 6.09785 81.8505 6.89429 82.8081 8.08896ZM79.239 17.7885C81.4733 17.7885 82.8662 16.0818 82.8662 13.6072C82.8662 11.1041 81.4733 9.36896 79.239 9.36896C77.0046 9.36896 75.5827 11.0756 75.5827 13.5787C75.5827 16.0818 77.0046 17.7885 79.239 17.7885ZM96.2521 21.0596C91.2901 21.0596 88.3013 18.1298 88.3013 13.6072C88.3013 9.05607 91.3482 6.09785 95.962 6.09785C100.431 6.09785 103.449 8.82851 103.507 13.1236C103.507 13.5503 103.478 14.0338 103.39 14.489H92.5669V14.6881C92.6539 16.7645 94.0178 18.0161 96.078 18.0161C97.732 18.0161 98.8927 17.305 99.2409 15.9396H103.274C102.81 18.7841 100.228 21.0596 96.2521 21.0596ZM92.6539 11.8721H99.386C99.0959 10.0801 97.8481 9.08451 95.991 9.08451C94.2209 9.08451 92.8861 10.137 92.6539 11.8721ZM108.081 20.889L102.713 6.26851H107.094L110.692 16.793L114.233 6.26851H118.527L113.159 20.889H108.081ZM120.906 23.961H119.427L127.639 0.124512H129.118L120.906 23.961ZM140.671 6.09785C143.979 6.09785 146.707 7.83296 146.707 12.7823V20.889H142.615V13.1236C142.615 10.7343 141.629 9.3974 139.597 9.3974C137.508 9.3974 136.26 10.8765 136.26 13.3796V20.889H132.169V0.977843H136.26V8.06051C137.218 6.92273 138.553 6.09785 140.671 6.09785ZM158.367 13.5787V6.26851H162.459V20.889H158.832L158.454 19.1254C157.497 20.2632 156.191 21.0596 154.073 21.0596C150.997 21.0596 148.153 19.5521 148.153 14.3752V6.26851H152.245V13.8347C152.245 16.4516 153.115 17.7316 155.146 17.7316C157.178 17.7316 158.367 16.281 158.367 13.5787ZM173.022 6.09785C177.027 6.09785 179.928 8.91385 179.928 13.5503C179.928 18.073 177.027 21.0596 172.993 21.0596C170.846 21.0596 169.366 20.1494 168.408 18.8978L168.002 20.889H164.433V0.977843H168.524V8.1174C169.511 6.95118 170.962 6.09785 173.022 6.09785ZM172.094 17.7885C174.328 17.7885 175.779 16.0818 175.779 13.5787C175.779 11.0756 174.328 9.36896 172.094 9.36896C169.859 9.36896 168.466 11.0756 168.466 13.5503C168.466 16.0534 169.859 17.7885 172.094 17.7885Z\\\\\\\\\\\\\\\"\\\\\\\\n              fill=\\\\\\\\\\\\\\\"#151515\\\\\\\\\\\\\\\"\\\\\\\\n            />\\\\\\\\n          </g>\\\\\\\\n          <defs>\\\\\\\\n            <clipPath id=\\\\\\\\\\\\\\\"clip0_530_29\\\\\\\\\\\\\\\">\\\\\\\\n              <rect width=\\\\\\\\\\\\\\\"180\\\\\\\\\\\\\\\" height=\\\\\\\\\\\\\\\"24\\\\\\\\\\\\\\\" fill=\\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" />\\\\\\\\n            </clipPath>\\\\\\\\n          </defs>\\\\\\\\n        </svg>\\\\\\\\n      </Link>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst ProfileIcon = () => {\\\\\\\\n  const Wrapper = styled.svg`\\\\\\\\n    padding: 0.25rem;\\\\\\\\n    @media screen and (max-width: 768px) {\\\\\\\\n      display: none;\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n  return (\\\\\\\\n    <Link\\\\\\\\n      to={linkHref({\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: { page: \\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\\", accountId: context.accountId },\\\\\\\\n      })}\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.ProfileCard\\\\\\\\\\\\\\\"\\\\\\\\n        props={{ iconOnly: true, accountId: context.accountId || null }}\\\\\\\\n      />\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst MenuIcon = () => (\\\\\\\\n  <svg\\\\\\\\n    xmlns=\\\\\\\\\\\\\\\"http://www.w3.org/2000/svg\\\\\\\\\\\\\\\"\\\\\\\\n    width=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n    height=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n    viewBox=\\\\\\\\\\\\\\\"0 0 16 16\\\\\\\\\\\\\\\"\\\\\\\\n    fill=\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ height: 20, width: 20 }}\\\\\\\\n  >\\\\\\\\n    <path\\\\\\\\n      fill-rule=\\\\\\\\\\\\\\\"evenodd\\\\\\\\\\\\\\\"\\\\\\\\n      clip-rule=\\\\\\\\\\\\\\\"evenodd\\\\\\\\\\\\\\\"\\\\\\\\n      d=\\\\\\\\\\\\\\\"M2 12.2986H14V13.3732H2V12.2986ZM2 9.07471H14V10.1493H2V9.07471ZM2 5.85083H14V6.92546H2V5.85083ZM2 2.62695H14V3.70158H2V2.62695Z\\\\\\\\\\\\\\\"\\\\\\\\n      fill=\\\\\\\\\\\\\\\"#818181\\\\\\\\\\\\\\\"\\\\\\\\n    />\\\\\\\\n  </svg>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Navbar = styled.div`\\\\\\\\n  padding: 1.5rem 0rem;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n\\\\\\\\n  background: #f4f4f4;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1.875rem 1.375rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinksContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 1.5rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: none;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst MobileMenu = styled.button`\\\\\\\\n  all: unset;\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nlet links = [\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"/communities\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"communities\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"/activity feed\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n  // {\\\\\\\\n  //   title: \\\\\\\\\\\\\\\"/proposals\\\\\\\\\\\\\\\",\\\\\\\\n  //   href: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n  //   links: [],\\\\\\\\n  // },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"/about\\\\\\\\\\\\\\\",\\\\\\\\n    links: [\\\\\\\\n      { title: \\\\\\\\\\\\\\\"mission\\\\\\\\\\\\\\\", href: \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\" },\\\\\\\\n      { title: \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\", href: \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\" },\\\\\\\\n      { title: \\\\\\\\\\\\\\\"newsletter\\\\\\\\\\\\\\\", href: \\\\\\\\\\\\\\\"https://newsletter.neardevhub.org\\\\\\\\\\\\\\\" },\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"calendar\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"https://calendar.google.com/calendar/embed?height=600&wkst=2&bgcolor=%23ffffff&ctz=UTC&title&showNav=1&showDate=1&mode=AGENDA&showPrint=0&src=Y19mNTRlZDM3ZmQ5MjMyN2FjZGM3ZTQzNDNmZTQwNzIyYWU1Nzk3YjZjODI5MjliYTkzZTlmM2E4OWM2OTY1N2FiQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20&color=%23616161\\\\\\\\\\\\\\\",\\\\\\\\n      },\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"brand kit\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"https://drive.google.com/drive/folders/1C0GMmGq3MzbVPpxvf9807IU-7kpc2_v5?usp=sharing\\\\\\\\\\\\\\\",\\\\\\\\n      },\\\\\\\\n    ],\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nif (hasModerator) {\\\\\\\\n  const isDevHubModerator = hasModerator({\\\\\\\\n    account_id: context.accountId,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  if (isDevHubModerator) {\\\\\\\\n    links = [\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"/admin\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"admin\\\\\\\\\\\\\\\",\\\\\\\\n        links: [],\\\\\\\\n      },\\\\\\\\n      ...links,\\\\\\\\n    ];\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst MobileNav = styled.div`\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: flex;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  position: absolute;\\\\\\\\n  top: 0;\\\\\\\\n  right: 0;\\\\\\\\n\\\\\\\\n  width: 207px;\\\\\\\\n\\\\\\\\n  padding: 24px 36px 36px 16px;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: flex-end;\\\\\\\\n  gap: 2.5rem;\\\\\\\\n  flex-shrink: 0;\\\\\\\\n\\\\\\\\n  border-radius: 0px 0px 0px 16px;\\\\\\\\n  background: rgba(41, 41, 41, 0.6);\\\\\\\\n  backdrop-filter: blur(5px);\\\\\\\\n\\\\\\\\n  z-index: 50;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst MobileLink = styled.a`\\\\\\\\n  color: #f4f4f4 !important;\\\\\\\\n  font-size: 20px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 20px; /* 100% */\\\\\\\\n  margin-bottom: 1rem;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    color: #00ec97 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n    color: #00ec97 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Navbar className=\\\\\\\\\\\\\\\"position-relative\\\\\\\\\\\\\\\">\\\\\\\\n    <Logo />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <LinksContainer>\\\\\\\\n        {links.map((link) => (\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.NavbarDropdown\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              title: link.title,\\\\\\\\n              href: link.href,\\\\\\\\n              links: link.links,\\\\\\\\n              page: page,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        ))}\\\\\\\\n      </LinksContainer>\\\\\\\\n      {context.accountId && <ProfileIcon />}\\\\\\\\n      <MobileMenu onClick={() => setShowMenu(!showMenu)}>\\\\\\\\n        <MenuIcon />\\\\\\\\n      </MobileMenu>\\\\\\\\n    </div>\\\\\\\\n    {showMenu && (\\\\\\\\n      <MobileNav>\\\\\\\\n        <div\\\\\\\\n          onClick={() => setShowMenu(!showMenu)}\\\\\\\\n          style={{ cursor: \\\\\\\\\\\\\\\"pointer\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-x\\\\\\\\\\\\\\\" style={{ fontSize: 20, color: \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\" }}></i>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n          {links.map((link, idx) =>\\\\\\\\n            link.href ? (\\\\\\\\n              <MobileLink\\\\\\\\n                key={`mobile-link-${idx}`}\\\\\\\\n                className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                href={`/devhub.near/widget/app?page=${link.href}`}\\\\\\\\n              >\\\\\\\\n                {link.title}\\\\\\\\n              </MobileLink>\\\\\\\\n            ) : (\\\\\\\\n              link.links.map((it, idx) =>\\\\\\\\n                it.href.startsWith(\\\\\\\\\\\\\\\"http://\\\\\\\\\\\\\\\") ||\\\\\\\\n                it.href.startsWith(\\\\\\\\\\\\\\\"https://\\\\\\\\\\\\\\\") ? (\\\\\\\\n                  <MobileLink\\\\\\\\n                    key={`nested-link-${idx}`}\\\\\\\\n                    className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                    href={it.href}\\\\\\\\n                    target=\\\\\\\\\\\\\\\"no_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    /{it.title}\\\\\\\\n                  </MobileLink>\\\\\\\\n                ) : (\\\\\\\\n                  <MobileLink\\\\\\\\n                    key={`nested-link-${idx}`}\\\\\\\\n                    className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                    href={`/devhub.near/widget/app?page=${it.href}`}\\\\\\\\n                  >\\\\\\\\n                    /{it.title}\\\\\\\\n                  </MobileLink>\\\\\\\\n                )\\\\\\\\n              )\\\\\\\\n            )\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </MobileNav>\\\\\\\\n    )}\\\\\\\\n  </Navbar>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.LikeButton\": {\"\": \"const item = props.item;\\\\\\\\n\\\\\\\\nif (!item) {\\\\\\\\n  return \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst likes = Social.index(\\\\\\\\\\\\\\\"like\\\\\\\\\\\\\\\", item);\\\\\\\\n\\\\\\\\nconst dataLoading = likes === null;\\\\\\\\n\\\\\\\\nconst likesByUsers = {};\\\\\\\\n\\\\\\\\n(likes || []).forEach((like) => {\\\\\\\\n  if (like.value.type === \\\\\\\\\\\\\\\"like\\\\\\\\\\\\\\\") {\\\\\\\\n    likesByUsers[like.accountId] = like;\\\\\\\\n  } else if (like.value.type === \\\\\\\\\\\\\\\"unlike\\\\\\\\\\\\\\\") {\\\\\\\\n    delete likesByUsers[like.accountId];\\\\\\\\n  }\\\\\\\\n});\\\\\\\\nif (state.hasLike === true) {\\\\\\\\n  likesByUsers[context.accountId] = {\\\\\\\\n    accountId: context.accountId,\\\\\\\\n  };\\\\\\\\n} else if (state.hasLike === false) {\\\\\\\\n  delete likesByUsers[context.accountId];\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst accountsWithLikes = Object.keys(likesByUsers);\\\\\\\\nconst hasLike = context.accountId && !!likesByUsers[context.accountId];\\\\\\\\nconst hasLikeOptimistic =\\\\\\\\n  state.hasLikeOptimistic === undefined ? hasLike : state.hasLikeOptimistic;\\\\\\\\nconst totalLikes =\\\\\\\\n  accountsWithLikes.length +\\\\\\\\n  (hasLike === false && state.hasLikeOptimistic === true ? 1 : 0) -\\\\\\\\n  (hasLike === true && state.hasLikeOptimistic === false ? 1 : 0);\\\\\\\\n\\\\\\\\nconst LikeButton = styled.button`\\\\\\\\n  border: 0;\\\\\\\\n  display: inline-flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 6px;\\\\\\\\n  color: #687076;\\\\\\\\n  font-weight: 400;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 17px;\\\\\\\\n  cursor: pointer;\\\\\\\\n  background: none;\\\\\\\\n  padding: 6px;\\\\\\\\n  transition: color 200ms;\\\\\\\\n\\\\\\\\n  i {\\\\\\\\n    font-size: 16px;\\\\\\\\n    transition: color 200ms;\\\\\\\\n\\\\\\\\n    &.bi-heart-fill {\\\\\\\\n      color: #e5484d !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:hover,\\\\\\\\n  &:focus {\\\\\\\\n    outline: none;\\\\\\\\n    color: #11181c;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst likeClick = (e) => {\\\\\\\\n  e.preventDefault();\\\\\\\\n  e.stopPropagation();\\\\\\\\n  if (state.loading) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  State.update({\\\\\\\\n    loading: true,\\\\\\\\n    hasLikeOptimistic: !hasLike,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  const data = {\\\\\\\\n    index: {\\\\\\\\n      like: JSON.stringify({\\\\\\\\n        key: item,\\\\\\\\n        value: {\\\\\\\\n          type: hasLike ? \\\\\\\\\\\\\\\"unlike\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"like\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  if (\\\\\\\\n    !hasLike &&\\\\\\\\n    props.notifyAccountId &&\\\\\\\\n    props.notifyAccountId !== context.accountId\\\\\\\\n  ) {\\\\\\\\n    data.index.notify = JSON.stringify({\\\\\\\\n      key: props.notifyAccountId,\\\\\\\\n      value: {\\\\\\\\n        type: \\\\\\\\\\\\\\\"like\\\\\\\\\\\\\\\",\\\\\\\\n        item,\\\\\\\\n      },\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n  Social.set(data, {\\\\\\\\n    onCommit: () => State.update({ loading: false, hasLike: !hasLike }),\\\\\\\\n    onCancel: () =>\\\\\\\\n      State.update({\\\\\\\\n        loading: false,\\\\\\\\n        hasLikeOptimistic: !state.hasLikeOptimistic,\\\\\\\\n      }),\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst title = hasLike ? \\\\\\\\\\\\\\\"Unlike\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Like\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <LikeButton\\\\\\\\n    disabled={state.loading || dataLoading || !context.accountId}\\\\\\\\n    title={title}\\\\\\\\n    onClick={likeClick}\\\\\\\\n  >\\\\\\\\n    <i className={`${hasLikeOptimistic ? \\\\\\\\\\\\\\\"bi-heart-fill\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"bi-heart\\\\\\\\\\\\\\\"}`} />\\\\\\\\n    {totalLikes}\\\\\\\\n  </LikeButton>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.molecule.Compose\": {\"\": \"const AutoComplete = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  margin-top: 0.5rem;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst EmbeddCSS = `\\\\\\\\n  .CodeMirror {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  .nav-link {\\\\\\\\n    color: inherit !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card-header {\\\\\\\\n    padding-bottom: 0px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Compose = ({\\\\\\\\n  data,\\\\\\\\n  onChange,\\\\\\\\n  toolbar,\\\\\\\\n  autoFocus,\\\\\\\\n  autocompleteEnabled,\\\\\\\\n  placeholder,\\\\\\\\n  height,\\\\\\\\n  embeddCSS,\\\\\\\\n}) => {\\\\\\\\n  State.init({\\\\\\\\n    data: data,\\\\\\\\n    showAccountAutocomplete: false,\\\\\\\\n    mentionInput: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", // text next to @ tag\\\\\\\\n    mentionsArray: [], // all the mentions in the description\\\\\\\\n    selectedTab: \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\",\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    onChange(state.data);\\\\\\\\n  }, [state.data]);\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    if (data !== state.data) {\\\\\\\\n      State.update({ data: data, handler: \\\\\\\\\\\\\\\"autocompleteSelected\\\\\\\\\\\\\\\" });\\\\\\\\n    }\\\\\\\\n  }, [data]);\\\\\\\\n\\\\\\\\n  function textareaInputHandler(value) {\\\\\\\\n    const words = value.split(/\\\\\\\\\\\\\\\\s+/);\\\\\\\\n    const allMentiones = words\\\\\\\\n      .filter((word) => word.startsWith(\\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\"))\\\\\\\\n      .map((mention) => mention.slice(1));\\\\\\\\n    const newMentiones = allMentiones.filter(\\\\\\\\n      (item) => !state.mentionsArray.includes(item)\\\\\\\\n    );\\\\\\\\n\\\\\\\\n    State.update((lastKnownState) => ({\\\\\\\\n      ...lastKnownState,\\\\\\\\n      data: value,\\\\\\\\n      showAccountAutocomplete: newMentiones?.length > 0,\\\\\\\\n      mentionsArray: allMentiones,\\\\\\\\n      mentionInput: newMentiones?.[0] ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    }));\\\\\\\\n  }\\\\\\\\n  function autoCompleteAccountId(id) {\\\\\\\\n    // to make sure we update the @ at correct index\\\\\\\\n    let currentIndex = 0;\\\\\\\\n    const updatedDescription = state.data.replace(\\\\\\\\n      /(?:^|\\\\\\\\\\\\\\\\s)(@[^\\\\\\\\\\\\\\\\s]*)/g,\\\\\\\\n      (match) => {\\\\\\\\n        if (currentIndex === state.mentionsArray.indexOf(state.mentionInput)) {\\\\\\\\n          currentIndex++;\\\\\\\\n          return ` @${id}`;\\\\\\\\n        } else {\\\\\\\\n          currentIndex++;\\\\\\\\n          return match;\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    );\\\\\\\\n\\\\\\\\n    State.update((lastKnownState) => ({\\\\\\\\n      ...lastKnownState,\\\\\\\\n      handler: \\\\\\\\\\\\\\\"autocompleteSelected\\\\\\\\\\\\\\\",\\\\\\\\n      data: updatedDescription,\\\\\\\\n      showAccountAutocomplete: false,\\\\\\\\n    }));\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"card-header\\\\\\\\\\\\\\\" style={{ position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <div>\\\\\\\\n            <ul class=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\">\\\\\\\\n              <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class={`nav-link ${\\\\\\\\n                    state.selectedTab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  }`}\\\\\\\\n                  onClick={() => State.update({ selectedTab: \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" })}\\\\\\\\n                >\\\\\\\\n                  Write\\\\\\\\n                </button>\\\\\\\\n              </li>\\\\\\\\n              <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class={`nav-link ${\\\\\\\\n                    state.selectedTab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  }`}\\\\\\\\n                  onClick={() => State.update({ selectedTab: \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" })}\\\\\\\\n                >\\\\\\\\n                  Preview\\\\\\\\n                </button>\\\\\\\\n              </li>\\\\\\\\n            </ul>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {state.selectedTab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? (\\\\\\\\n          <>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.SimpleMDE\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                data: { handler: state.handler, content: state.data },\\\\\\\\n                onChange: (content) => {\\\\\\\\n                  State.update({ data: content, handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\" });\\\\\\\\n                  textareaInputHandler(content);\\\\\\\\n                },\\\\\\\\n                toolbar: toolbar || [\\\\\\\\n                  \\\\\\\\\\\\\\\"heading\\\\\\\\\\\\\\\",\\\\\\\\n                  \\\\\\\\\\\\\\\"bold\\\\\\\\\\\\\\\",\\\\\\\\n                  \\\\\\\\\\\\\\\"italic\\\\\\\\\\\\\\\",\\\\\\\\n                  \\\\\\\\\\\\\\\"quote\\\\\\\\\\\\\\\",\\\\\\\\n                  \\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\\",\\\\\\\\n                  \\\\\\\\\\\\\\\"link\\\\\\\\\\\\\\\",\\\\\\\\n                  \\\\\\\\\\\\\\\"unordered-list\\\\\\\\\\\\\\\",\\\\\\\\n                  \\\\\\\\\\\\\\\"ordered-list\\\\\\\\\\\\\\\",\\\\\\\\n                  \\\\\\\\\\\\\\\"checklist\\\\\\\\\\\\\\\",\\\\\\\\n                  \\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\n                ],\\\\\\\\n                statusConfig: [],\\\\\\\\n                spellChecker: false,\\\\\\\\n                autoFocus: autoFocus,\\\\\\\\n                placeholder: placeholder,\\\\\\\\n                height,\\\\\\\\n                embeddCSS: embeddCSS || EmbeddCSS,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            {autocompleteEnabled && state.showAccountAutocomplete && (\\\\\\\\n              <AutoComplete>\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.AccountAutocomplete\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    term: state.mentionInput,\\\\\\\\n                    onSelect: autoCompleteAccountId,\\\\\\\\n                    onClose: () =>\\\\\\\\n                      State.update({ showAccountAutocomplete: false }),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </AutoComplete>\\\\\\\\n            )}\\\\\\\\n          </>\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                text: data,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn Compose(props);\\\\\\\\n\"}, \"devhub.components.molecule.Spinner\": {\"\": \"return (\\\\\\\\n  <img\\\\\\\\n    style={{ height: \\\\\\\\\\\\\\\"auto\\\\\\\\\\\\\\\", width: \\\\\\\\\\\\\\\"50px\\\\\\\\\\\\\\\" }}\\\\\\\\n    src={\\\\\\\\\\\\\\\"https://i.gifer.com/origin/34/34338d26023e5515f6cc8969aa027bca.gif\\\\\\\\\\\\\\\"}\\\\\\\\n    alt=\\\\\\\\\\\\\\\"loader\\\\\\\\\\\\\\\"\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.CategoryTag\": {\"\": \"const category = props.category;\\\\\\\\nconst getClassNameByCategory = () => {\\\\\\\\n  switch (category) {\\\\\\\\n    case \\\\\\\\\\\\\\\"DevDAO Operations\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"purple\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"DevDAO Platform\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"yellow\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"Decentralized DevRel\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"cyan\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"Universities & Bootcamps\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"mustard\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"Engagement & Awareness\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"red\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"Events & Hackathons\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"Tooling & Infrastructure\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"pink\\\\\\\\\\\\\\\";\\\\\\\\n    default:\\\\\\\\n      return \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .tag {\\\\\\\\n    color: white;\\\\\\\\n    padding-inline: 6px;\\\\\\\\n    padding-block: 3px;\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n  .purple-bg {\\\\\\\\n    background-color: #7c66dc;\\\\\\\\n  }\\\\\\\\n  .yellow-bg {\\\\\\\\n    background-color: #f2f0ce;\\\\\\\\n  }\\\\\\\\n  .cyan-bg {\\\\\\\\n    background-color: #0daebb;\\\\\\\\n  }\\\\\\\\n  .pink-bg {\\\\\\\\n    background-color: #d366dc;\\\\\\\\n  }\\\\\\\\n  .grey-bg {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n  .red-bg {\\\\\\\\n    background-color: #dc6666;\\\\\\\\n  }\\\\\\\\n  .green-bg {\\\\\\\\n    background-color: #04a46e;\\\\\\\\n  }\\\\\\\\n  .mustard-bg {\\\\\\\\n    background-color: #dc9866;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <div className={getClassNameByCategory() + \\\\\\\\\\\\\\\"-bg rounded-1 tag\\\\\\\\\\\\\\\"}>\\\\\\\\n      {category}\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.CommentIcon\": {\"\": \"const item = props.item;\\\\\\\\nconst showOverlay = props.showOverlay ?? true;\\\\\\\\n\\\\\\\\nif (!props.hideCount && !item) {\\\\\\\\n  return \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst comments = !props.hideCount && Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", item);\\\\\\\\nconst dataLoading = props.hideCount ? false : comments === null;\\\\\\\\nconst totalComments = comments?.length || 0;\\\\\\\\n\\\\\\\\nconst CommentButton = styled.button`\\\\\\\\n  border: 0;\\\\\\\\n  display: inline-flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 6px;\\\\\\\\n  color: #687076;\\\\\\\\n  font-weight: 400;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 17px;\\\\\\\\n  cursor: pointer;\\\\\\\\n  background: none;\\\\\\\\n  padding: 6px;\\\\\\\\n  transition: color 200ms;\\\\\\\\n\\\\\\\\n  i {\\\\\\\\n    font-size: 16px;\\\\\\\\n    transition: color 200ms;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:hover,\\\\\\\\n  &:focus {\\\\\\\\n    outline: none;\\\\\\\\n    color: #11181c;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <CommentButton\\\\\\\\n    disabled={dataLoading || !context.accountId}\\\\\\\\n    title={showOverlay && \\\\\\\\\\\\\\\"Add Comment\\\\\\\\\\\\\\\"}\\\\\\\\n    onClick={props.onClick}\\\\\\\\n  >\\\\\\\\n    <i className=\\\\\\\\\\\\\\\"bi-chat\\\\\\\\\\\\\\\" />\\\\\\\\n    {!props.hideCount && totalComments}\\\\\\\\n  </CommentButton>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.LoginScreen\": {\"\": \"const Container = styled.div`\\\\\\\\n  height: 60vh;\\\\\\\\n  .card-custom {\\\\\\\\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2);\\\\\\\\n    border-radius: 5px;\\\\\\\\n    background-color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f3f3f2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\">\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"card-custom\\\\\\\\\\\\\\\">\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"card-body p-4 d-flex flex-column gap-2 justify-content-center align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <i class=\\\\\\\\\\\\\\\"bi bi-person-circle h2\\\\\\\\\\\\\\\"></i>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5\\\\\\\\\\\\\\\">Not Logged in</div>\\\\\\\\n        <p className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n          You must log in to create or interact with proposals.\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Link to=\\\\\\\\\\\\\\\"https://near.org/signin\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-outline-secondary\\\\\\\\\\\\\\\" },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Sign In\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n          <Link to=\\\\\\\\\\\\\\\"https://near.org/signup\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"black-btn\\\\\\\\\\\\\\\" },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Create Account\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.molecule.DropDown\": {\"\": \"const options = props.options; // [{label:\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",value:\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\nconst label = props.label;\\\\\\\\nconst onUpdate = props.onUpdate ?? (() => {});\\\\\\\\nconst selectedValue = props.selectedValue;\\\\\\\\nconst [selected, setSelected] = useState(selectedValue);\\\\\\\\n\\\\\\\\nconst StyledDropdown = styled.div`\\\\\\\\n  .drop-btn {\\\\\\\\n    width: 100%;\\\\\\\\n    max-width: 200px;\\\\\\\\n    text-align: left;\\\\\\\\n    padding-inline: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item.active,\\\\\\\\n  .dropdown-item:active {\\\\\\\\n    background-color: #f0f0f0 !important;\\\\\\\\n    color: black;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  onUpdate(selected);\\\\\\\\n}, [selected]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"dropdown w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <StyledDropdown>\\\\\\\\n        <button\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn drop-btn text-truncate dropdown-toggle bg-white border rounded-2\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n          aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          {label} {selected && label && \\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"} {selected.label}\\\\\\\\n        </button>\\\\\\\\n        <ul class=\\\\\\\\\\\\\\\"dropdown-menu dropdown-menu-end dropdown-menu-lg-start px-2 shadow\\\\\\\\\\\\\\\">\\\\\\\\n          {options.map((item) => (\\\\\\\\n            <li\\\\\\\\n              style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n              onClick={() => setSelected(item)}\\\\\\\\n            >\\\\\\\\n              {item.label}\\\\\\\\n            </li>\\\\\\\\n          ))}\\\\\\\\n        </ul>\\\\\\\\n      </StyledDropdown>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.AccountInput\": {\"\": \"const value = props.value;\\\\\\\\nconst placeholder = props.placeholder;\\\\\\\\nconst onUpdate = props.onUpdate;\\\\\\\\n\\\\\\\\nconst [showAccountAutocomplete, setAutoComplete] = useState(false);\\\\\\\\nconst AutoComplete = styled.div`\\\\\\\\n  max-width: 400px;\\\\\\\\n  margin-top: 1rem;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: value,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          onUpdate(e.target.value);\\\\\\\\n          setAutoComplete(true);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        placeholder: placeholder,\\\\\\\\n        inputProps: {\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    {showAccountAutocomplete && (\\\\\\\\n      <AutoComplete>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.AccountAutocomplete\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            term: value,\\\\\\\\n            onSelect: (id) => {\\\\\\\\n              onUpdate(id);\\\\\\\\n              setAutoComplete(false);\\\\\\\\n            },\\\\\\\\n            onClose: () => setAutoComplete(false),\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </AutoComplete>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.molecule.SimpleMDE\": {\"\": \"/**\\\\\\\\n * iframe embedding a SimpleMDE component\\\\\\\\n * https://github.com/sparksuite/simplemde-markdown-editor\\\\\\\\n */\\\\\\\\n\\\\\\\\nfunction defaultOnChange(content) {\\\\\\\\n  console.log(content);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst data = props.data;\\\\\\\\nconst onChange = props.onChange ?? defaultOnChange;\\\\\\\\nconst height = props.height ?? \\\\\\\\\\\\\\\"380\\\\\\\\\\\\\\\";\\\\\\\\nconst className = props.className ?? \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\";\\\\\\\\nconst embeddCSS = props.embeddCSS;\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  iframeHeight: height,\\\\\\\\n  message: { handler: \\\\\\\\\\\\\\\"init\\\\\\\\\\\\\\\", content: props.data },\\\\\\\\n});\\\\\\\\n\\\\\\\\n// SIMPLEMDE CONFIG //\\\\\\\\nconst fontFamily = props.fontFamily ?? \\\\\\\\\\\\\\\"sans-serif\\\\\\\\\\\\\\\";\\\\\\\\nconst alignToolItems = props.alignToolItems ?? \\\\\\\\\\\\\\\"right\\\\\\\\\\\\\\\";\\\\\\\\nconst autoFocus = props.autoFocus ?? true;\\\\\\\\nconst renderingConfig = JSON.stringify(\\\\\\\\n  props.renderingConfig ?? {\\\\\\\\n    singleLineBreaks: false,\\\\\\\\n    codeSyntaxHighlighting: true,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\nconst placeholder = props.placeholder ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst statusConfig = JSON.stringify(\\\\\\\\n  props.statusConfig ?? [\\\\\\\\\\\\\\\"lines\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"words\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"cursor\\\\\\\\\\\\\\\"]\\\\\\\\n);\\\\\\\\nconst spellChecker = props.spellChecker ?? true;\\\\\\\\nconst tabSize = props.tabSize ?? 4;\\\\\\\\n\\\\\\\\n// Add or remove toolbar items\\\\\\\\n// For adding unique items, configure the switch-case within the iframe\\\\\\\\nconst toolbarConfig = JSON.stringify(\\\\\\\\n  props.toolbar ?? [\\\\\\\\n    \\\\\\\\\\\\\\\"heading\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"bold\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"italic\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"|\\\\\\\\\\\\\\\", // adding | creates a divider in the toolbar\\\\\\\\n    \\\\\\\\\\\\\\\"quote\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"link\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"image\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"reference\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"unordered-list\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"ordered-list\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"checklist\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"table\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"horizontal-rule\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"guide\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\",\\\\\\\\n  ]\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst code = `\\\\\\\\n  <style>\\\\\\\\n  body {  \\\\\\\\n      margin: auto;\\\\\\\\n      font-family: ${fontFamily};\\\\\\\\n      overflow: visible;\\\\\\\\n      font-size:14px;\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n  .editor-toolbar {\\\\\\\\n      text-align: ${alignToolItems};\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  ${embeddCSS}\\\\\\\\n\\\\\\\\n  </style>\\\\\\\\n  <script src=\\\\\\\\\\\\\\\"https://unpkg.com/react@18/umd/react.development.js\\\\\\\\\\\\\\\" crossorigin></script>\\\\\\\\n  <script src=\\\\\\\\\\\\\\\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\\\\\\\\\\\\\\\" crossorigin></script>\\\\\\\\n  <link rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css\\\\\\\\\\\\\\\">\\\\\\\\n  <script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js\\\\\\\\\\\\\\\"></script>\\\\\\\\n  <script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/highlight.js/latest/highlight.min.js\\\\\\\\\\\\\\\"></script>\\\\\\\\n  <link rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/highlight.js/latest/styles/github.min.css\\\\\\\\\\\\\\\">\\\\\\\\n  \\\\\\\\n  <div id=\\\\\\\\\\\\\\\"react-root\\\\\\\\\\\\\\\"></div>\\\\\\\\n  \\\\\\\\n  <script>\\\\\\\\n  let codeMirrorInstance;\\\\\\\\n  let isEditorInitialized = false;\\\\\\\\n  \\\\\\\\n  function MarkdownEditor(props) {\\\\\\\\n      const [value, setValue] = React.useState(props.initialText || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n  \\\\\\\\n      React.useEffect(() => {\\\\\\\\n          const generateToolbarItems = () => {\\\\\\\\n              return ${toolbarConfig}.map((item) => {\\\\\\\\n                  switch(item) {\\\\\\\\n                      // CONFIGURE CUSTOM IMPLEMENTATIONS HERE\\\\\\\\n                      case \\\\\\\\\\\\\\\"checklist\\\\\\\\\\\\\\\": {\\\\\\\\n                          function handleChecklist(editor) {\\\\\\\\n                              const cursorPos = editor.codemirror.getCursor();\\\\\\\\n                              const lineText = editor.codemirror.getLine(cursorPos.line);\\\\\\\\n                              if (lineText.trim() === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n                                  editor.codemirror.replaceRange(\\\\\\\\\\\\\\\" - [ ] \\\\\\\\\\\\\\\", cursorPos);\\\\\\\\n                              } else {\\\\\\\\n                                  editor.codemirror.replaceRange(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n - [ ] \\\\\\\\\\\\\\\", cursorPos);\\\\\\\\n                              }\\\\\\\\n                          }\\\\\\\\n                          return {\\\\\\\\n                              name: \\\\\\\\\\\\\\\"checklist\\\\\\\\\\\\\\\",\\\\\\\\n                              action: handleChecklist,\\\\\\\\n                              className: \\\\\\\\\\\\\\\"fa fa-check-square\\\\\\\\\\\\\\\",\\\\\\\\n                              title: \\\\\\\\\\\\\\\"Insert Checklist\\\\\\\\\\\\\\\"\\\\\\\\n                          }\\\\\\\\n                      }\\\\\\\\n                      case \\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\": {\\\\\\\\n                          function handleMention(editor) {\\\\\\\\n                              const cursorPos = editor.codemirror.getCursor();\\\\\\\\n                              editor.codemirror.replaceRange(\\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\", cursorPos);\\\\\\\\n                          }\\\\\\\\n                          return {\\\\\\\\n                              name: \\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\n                              action: handleMention,\\\\\\\\n                              className: \\\\\\\\\\\\\\\"fa fa-at\\\\\\\\\\\\\\\",\\\\\\\\n                              title: \\\\\\\\\\\\\\\"Insert Mention\\\\\\\\\\\\\\\"\\\\\\\\n                          }\\\\\\\\n                      }\\\\\\\\n                      case \\\\\\\\\\\\\\\"reference\\\\\\\\\\\\\\\": {\\\\\\\\n                          function handleReference(editor) {\\\\\\\\n                              const cursorPos = editor.codemirror.getCursor();\\\\\\\\n                              editor.codemirror.replaceRange(\\\\\\\\\\\\\\\"bos://\\\\\\\\\\\\\\\", cursorPos);\\\\\\\\n                          }\\\\\\\\n                          return {\\\\\\\\n                              name: \\\\\\\\\\\\\\\"reference\\\\\\\\\\\\\\\",\\\\\\\\n                              action: handleReference,\\\\\\\\n                              className: \\\\\\\\\\\\\\\"fa fa-external-link-square\\\\\\\\\\\\\\\",\\\\\\\\n                              title: \\\\\\\\\\\\\\\"Reference Thing\\\\\\\\\\\\\\\"\\\\\\\\n                          }\\\\\\\\n                      }\\\\\\\\n                      case \\\\\\\\\\\\\\\"image\\\\\\\\\\\\\\\": {\\\\\\\\n                          // TODO: convert to upload to IPFS\\\\\\\\n                          return {\\\\\\\\n                              name: \\\\\\\\\\\\\\\"image\\\\\\\\\\\\\\\",\\\\\\\\n                              action: SimpleMDE.drawImage,\\\\\\\\n                              className: \\\\\\\\\\\\\\\"fa fa-picture-o\\\\\\\\\\\\\\\",\\\\\\\\n                              title: \\\\\\\\\\\\\\\"Insert Image\\\\\\\\\\\\\\\"\\\\\\\\n                          }\\\\\\\\n                      }\\\\\\\\n                      default: {\\\\\\\\n                          return item;\\\\\\\\n                      }\\\\\\\\n                  }\\\\\\\\n              });\\\\\\\\n          };\\\\\\\\n  \\\\\\\\n          function renderPreview(plainText, preview) {\\\\\\\\n              // TODO: can we place custom preview element? Perhaps install VM into this iframe?\\\\\\\\n              setTimeout(function(){\\\\\\\\n                      preview.innerHTML = \\\\\\\\\\\\\\\"<p>hello</p>\\\\\\\\\\\\\\\";\\\\\\\\n                  }, 250);\\\\\\\\n              return \\\\\\\\\\\\\\\"loading\\\\\\\\\\\\\\\";\\\\\\\\n          }\\\\\\\\n          \\\\\\\\n          // Initializes SimpleMDE element and attaches to text-area\\\\\\\\n          const simplemde = new SimpleMDE({\\\\\\\\n              element: document.getElementById(\\\\\\\\\\\\\\\"markdown-input\\\\\\\\\\\\\\\"),\\\\\\\\n              forceSync: true,\\\\\\\\n              autofocus: ${autoFocus},\\\\\\\\n              renderingConfig: ${renderingConfig},\\\\\\\\n              placeholder: \\\\\\\\\\\\\\\\`${placeholder}\\\\\\\\\\\\\\\\`,\\\\\\\\n              status: ${statusConfig},\\\\\\\\n              spellChecker: ${spellChecker},\\\\\\\\n              tabSize: ${tabSize},\\\\\\\\n              toolbar: generateToolbarItems(),\\\\\\\\n              initialValue: value,\\\\\\\\n              previewRender: renderPreview,\\\\\\\\n              insertTexts: {\\\\\\\\n                image: [\\\\\\\\\\\\\\\"![](https://\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\"],\\\\\\\\n                link: [\\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"](https://)\\\\\\\\\\\\\\\"],\\\\\\\\n              },\\\\\\\\n          });\\\\\\\\n  \\\\\\\\n          codeMirrorInstance = simplemde.codemirror;\\\\\\\\n  \\\\\\\\n          /**\\\\\\\\n           * Sends message to Widget to update content\\\\\\\\n           */\\\\\\\\n          const updateContent = () => {\\\\\\\\n              const content = simplemde.value();\\\\\\\\n              window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\", content }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n          };\\\\\\\\n  \\\\\\\\n          /**\\\\\\\\n           * Sends message to Widget to update iframe height\\\\\\\\n           */\\\\\\\\n          const updateIframeHeight = () => {\\\\\\\\n              const iframeHeight = document.body.scrollHeight;\\\\\\\\n              window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"resize\\\\\\\\\\\\\\\", height: iframeHeight }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n          };\\\\\\\\n  \\\\\\\\n          // On Change\\\\\\\\n          simplemde.codemirror.on(\\\\\\\\\\\\'change\\\\\\\\\\\\', () => {\\\\\\\\n              updateContent();\\\\\\\\n              updateIframeHeight();\\\\\\\\n          });\\\\\\\\n      }, []);\\\\\\\\n  \\\\\\\\n      return React.createElement(\\\\\\\\\\\\'textarea\\\\\\\\\\\\', { id: \\\\\\\\\\\\'markdown-input\\\\\\\\\\\\', value: value, onChange: setValue });\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n  const domContainer = document.querySelector(\\\\\\\\\\\\'#react-root\\\\\\\\\\\\');\\\\\\\\n  const root = ReactDOM.createRoot(domContainer);\\\\\\\\n  \\\\\\\\n  window.addEventListener(\\\\\\\\\\\\\\\"message\\\\\\\\\\\\\\\", (event) => {\\\\\\\\n    if (!isEditorInitialized && event.data !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n      root.render(React.createElement(MarkdownEditor, {\\\\\\\\n          initialText: event.data.content }));\\\\\\\\n          isEditorInitialized = true;\\\\\\\\n    } else {\\\\\\\\n      if (event.data.handler === \\\\\\\\\\\\'autocompleteSelected\\\\\\\\\\\\') {\\\\\\\\n          codeMirrorInstance.getDoc().setValue(event.data.content);\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n  </script>\\\\\\\\n  `;\\\\\\\\nreturn (\\\\\\\\n  <iframe\\\\\\\\n    className={className}\\\\\\\\n    style={{\\\\\\\\n      height: `${state.iframeHeight}px`,\\\\\\\\n    }}\\\\\\\\n    srcDoc={code}\\\\\\\\n    message={data ?? { content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }}\\\\\\\\n    onMessage={(e) => {\\\\\\\\n      switch (e.handler) {\\\\\\\\n        case \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\": {\\\\\\\\n          onChange(e.content);\\\\\\\\n        }\\\\\\\\n        case \\\\\\\\\\\\\\\"resize\\\\\\\\\\\\\\\": {\\\\\\\\n          const offset = 0;\\\\\\\\n          if (statusConfig.length) {\\\\\\\\n            offset = 10;\\\\\\\\n          }\\\\\\\\n          State.update({ iframeHeight: e.height + offset });\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.ComposeComment\": {\"\": \"const proposalId = props.id;\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"COMMENT_DRAFT\\\\\\\\\\\\\\\" + proposalId;\\\\\\\\nconst draftComment = Storage.privateGet(draftKey);\\\\\\\\n\\\\\\\\nconst ComposeEmbeddCSS = `\\\\\\\\n  .CodeMirror {\\\\\\\\n    border: none !important;\\\\\\\\n    min-height: 50px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .CodeMirror-scroll{\\\\\\\\n    min-height: 50px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nconst notifyAccountId = props.notifyAccountId;\\\\\\\\nconst accountId = context.accountId;\\\\\\\\nconst item = props.item;\\\\\\\\nconst [allowGetDraft, setAllowGetDraft] = useState(true);\\\\\\\\nconst [comment, setComment] = useState(null);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (draftComment && allowGetDraft) {\\\\\\\\n    setComment(draftComment);\\\\\\\\n    setAllowGetDraft(false);\\\\\\\\n  }\\\\\\\\n}, [draftComment]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    if (comment !== draftComment) Storage.privateSet(draftKey, comment);\\\\\\\\n  }, 2000);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [comment, draftKey]);\\\\\\\\n\\\\\\\\nif (!accountId) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{\\\\\\\\n        marginLeft: 10,\\\\\\\\n        backgroundColor: \\\\\\\\\\\\\\\"#ECF8FB\\\\\\\\\\\\\\\",\\\\\\\\n        border: \\\\\\\\\\\\\\\"1px solid #E2E6EC\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1 p-4 rounded-2\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Link to=\\\\\\\\\\\\\\\"https://near.org/signup\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"grey-btn\\\\\\\\\\\\\\\" },\\\\\\\\n            label: \\\\\\\\\\\\\\\"Sign up\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </Link>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">to join this conversation.</div>\\\\\\\\n      <div>Already have an account?</div>\\\\\\\\n      <a className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://near.org/signin\\\\\\\\\\\\\\\">\\\\\\\\n        Log in to comment\\\\\\\\n      </a>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractMentions(text) {\\\\\\\\n  const mentionRegex =\\\\\\\\n    /@((?:(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+\\\\\\\\\\\\\\\\.)*(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+)/gi;\\\\\\\\n  mentionRegex.lastIndex = 0;\\\\\\\\n  const accountIds = new Set();\\\\\\\\n  for (const match of text.matchAll(mentionRegex)) {\\\\\\\\n    if (\\\\\\\\n      !/[\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index - 1)) &&\\\\\\\\n      !/[/\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index + match[0].length)) &&\\\\\\\\n      match[1].length >= 2 &&\\\\\\\\n      match[1].length <= 64\\\\\\\\n    ) {\\\\\\\\n      accountIds.add(match[1].toLowerCase());\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return [...accountIds];\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractTagNotifications(text, item) {\\\\\\\\n  return extractMentions(text || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n    .filter((accountId) => accountId !== context.accountId)\\\\\\\\n    .map((accountId) => ({\\\\\\\\n      key: accountId,\\\\\\\\n      value: {\\\\\\\\n        type: \\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\n        item,\\\\\\\\n      },\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction composeData() {\\\\\\\\n  const data = {\\\\\\\\n    post: {\\\\\\\\n      comment: JSON.stringify({\\\\\\\\n        type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n        text: comment,\\\\\\\\n        item,\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n    index: {\\\\\\\\n      comment: JSON.stringify({\\\\\\\\n        key: item,\\\\\\\\n        value: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const notifications = extractTagNotifications(comment, {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  if (notifyAccountId && notifyAccountId !== context.accountId) {\\\\\\\\n    notifications.push({\\\\\\\\n      key: notifyAccountId,\\\\\\\\n      value: {\\\\\\\\n        type: \\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\",\\\\\\\\n        item,\\\\\\\\n      },\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (notifications.length) {\\\\\\\\n    data.index.notify = JSON.stringify(\\\\\\\\n      notifications.length > 1 ? notifications : notifications[0]\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Social.set(data, {\\\\\\\\n    force: true,\\\\\\\\n    onCommit: () => {\\\\\\\\n      setComment(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n    },\\\\\\\\n    onCancel: () => {},\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        accountId: accountId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"mt-1\\\\\\\\\\\\\\\">Add a comment</b>\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Compose\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          data: comment,\\\\\\\\n          onChange: setComment,\\\\\\\\n          autocompleteEnabled: true,\\\\\\\\n          autoFocus: false,\\\\\\\\n          placeholder: \\\\\\\\\\\\\\\"Add your comment here...\\\\\\\\\\\\\\\",\\\\\\\\n          height: \\\\\\\\\\\\\\\"160\\\\\\\\\\\\\\\",\\\\\\\\n          embeddCSS: ComposeEmbeddCSS,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-content-center justify-content-end\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            label: \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"green-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n            onClick: () => {\\\\\\\\n              composeData();\\\\\\\\n            },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.feature.proposal-search.by-sort\": {\"\": \"const options = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Most recent\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Most viewed\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Most commented\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Unanswered\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst [selected, setSelected] = useState(null);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        options: options,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Sort\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelected(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.CategoryDropdown\": {\"\": \"const { selectedValue, onChange, disabled } = props;\\\\\\\\n\\\\\\\\nonChange = onChange || (() => {});\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  {\\\\\\\\n    icon: \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiet5w62oeef6msfsakdskq7zkjk33ngogcerfdmqewnsuj74u376e\\\\\\\\\\\\\\\",\\\\\\\\n    title: \\\\\\\\\\\\\\\"DevDAO Operations\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Provide core operations and leadership for the DAO or infrastructure support.\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"DevDAO Operations\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    icon: \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiengkdru4fczwltjylfqeeypsdf4hb5fdxa6t67l3x2qtqgeo3pzq\\\\\\\\\\\\\\\",\\\\\\\\n    title: \\\\\\\\\\\\\\\"DevDAO Platform\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Build & maintain the interface for DevHub\\\\\\\\u{2019}s community & funding activities.\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"DevDAO Platform\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    icon: \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreicpt3ulwsmptzdbtkhvxodvo7pcajcpyr35tqcbfdnaipzrx5re7e\\\\\\\\\\\\\\\",\\\\\\\\n    title: \\\\\\\\\\\\\\\"Events & Hackathons\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Organize or support events, hackathons, and local meet ups to grow communities.\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"Events & Hackathons\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    icon: \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreibdrwhbouuutvrk4qt2udf4kumbyy5ebjkezobbahxvo7fyxo2ec4\\\\\\\\\\\\\\\",\\\\\\\\n    title: \\\\\\\\\\\\\\\"Engagement & Awareness\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Create content from social posts to real world swag to drive awareness to NEAR.\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"Engagement & Awareness\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    icon: \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiem2vjsp6wu3lkd4zagpm43f32egdjjzchmleky6rr2ydzhlkrxam\\\\\\\\\\\\\\\",\\\\\\\\n    title: \\\\\\\\\\\\\\\"Decentralized DevRel\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Provide support, gather feedback, and maintain docs to drive engagement.\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"Decentralized DevRel\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    icon: \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreic3prsy52hwueugqj5rwualib4imguelezsbvgrxtezw4u33ldxqq\\\\\\\\\\\\\\\",\\\\\\\\n    title: \\\\\\\\\\\\\\\"Universities & Bootcamps\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Engage with students and universities globally to encourage NEAR.\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"Universities & Bootcamps\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    icon: \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreigf7j5isssumbjl24zy4pr27ryfqivan3vuwu2uwsofcujhhkk7cq\\\\\\\\\\\\\\\",\\\\\\\\n    title: \\\\\\\\\\\\\\\"Tooling & Infrastructure\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Contribute code to NEAR tooling or facilitating technical decisions.\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"Tooling & Infrastructure\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    icon: \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreihctatkwnvpmblgqnpw76zggfet3fmpgurqvtj7vbm3cb5r3pp52u\\\\\\\\\\\\\\\",\\\\\\\\n    title: \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\",\\\\\\\\n    description: \\\\\\\\\\\\\\\"Use this category if you are not sure which one to use.\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst [isOpen, setIsOpen] = useState(false);\\\\\\\\nconst [selectedOptionValue, setSelectedValue] = useState(\\\\\\\\n  selectedValue ? selectedValue : options[0].value\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst toggleDropdown = () => {\\\\\\\\n  setIsOpen(!isOpen);\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  onChange(selectedOptionValue);\\\\\\\\n}, [selectedOptionValue]);\\\\\\\\n\\\\\\\\nconst handleOptionClick = (option) => {\\\\\\\\n  setSelectedValue(option.value);\\\\\\\\n  setIsOpen(false);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .drop-btn {\\\\\\\\n    width: 100%;\\\\\\\\n    text-align: left;\\\\\\\\n    padding-inline: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 2%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item.active,\\\\\\\\n  .dropdown-item:active {\\\\\\\\n    background-color: #f0f0f0 !important;\\\\\\\\n    color: black;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f8f8f8 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    border-radius: 5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled.dropdown-toggle::after {\\\\\\\\n    display: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Item = ({ option }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <img src={option.icon} height={30} />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\"> {option.title}</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-sm tetx-muted\\\\\\\\\\\\\\\">{option.description}</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst selectedOption =\\\\\\\\n  options.find((item) => item.value === selectedOptionValue) ?? null;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"custom-select\\\\\\\\\\\\\\\" tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\" onBlur={() => setIsOpen(false)}>\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\n          \\\\\\\\\\\\\\\"dropdown-toggle bg-white border rounded-2 btn drop-btn \\\\\\\\\\\\\\\" +\\\\\\\\n          (disabled ? \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n        onClick={!disabled && toggleDropdown}\\\\\\\\n      >\\\\\\\\n        <div className={`selected-option`}>\\\\\\\\n          <Item option={selectedOption} />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      {isOpen && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"dropdown-menu dropdown-menu-end dropdown-menu-lg-start px-2 shadow show\\\\\\\\\\\\\\\">\\\\\\\\n          <div>\\\\\\\\n            {options.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`dropdown-item cursor-pointer my-1 ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n              >\\\\\\\\n                <Item option={option} />\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.feature.proposal-search.by-input\": {\"\": \"const InputContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  position: relative;\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst [search, setSearch] = useState(props.search);\\\\\\\\nconst onSearch = props.onSearch ?? (() => {});\\\\\\\\nconst onEnter = props.onEnter ?? (() => {});\\\\\\\\n\\\\\\\\nconst updateInput = (value) => setSearch(value);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (search !== props.search) {\\\\\\\\n    onSearch(search);\\\\\\\\n  }\\\\\\\\n}, [search]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Widget\\\\\\\\n    src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n    props={{\\\\\\\\n      className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n      value: search,\\\\\\\\n      onChange: (e) => {\\\\\\\\n        updateInput(e.target.value);\\\\\\\\n      },\\\\\\\\n      skipPaddingGap: true,\\\\\\\\n      placeholder: \\\\\\\\\\\\\\\"Search by content\\\\\\\\\\\\\\\",\\\\\\\\n      inputProps: {\\\\\\\\n        prefix: <i class=\\\\\\\\\\\\\\\"bi bi-search m-auto\\\\\\\\\\\\\\\"></i>,\\\\\\\\n      },\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.feature.proposal-search.by-stage\": {\"\": \"const options = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Draft\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Review\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Approved\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Approved  - Conditional\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Rejected\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Payment Processing\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Funded\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst [selected, setSelected] = useState(null);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        options: options,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Stage\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelected(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.feature.proposal-search.by-author\": {\"\": \"const [authorsOptions, setAuthorsOptions] = useState([]);\\\\\\\\nconst [selectedAuthor, setSelectedAuthor] = useState(null);\\\\\\\\n\\\\\\\\nif (!authorsOptions.length) {\\\\\\\\n  const data = [];\\\\\\\\n  const authors = Near.view(\\\\\\\\n    \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"get_all_proposal_authors\\\\\\\\\\\\\\\",\\\\\\\\n    {}\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  if (Array.isArray(authors)) {\\\\\\\\n    for (const author of authors) {\\\\\\\\n      data.push({ label: author, value: author });\\\\\\\\n    }\\\\\\\\n    setAuthorsOptions(data);\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        options: authorsOptions,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelectedAuthor(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.ConfirmCancelModal\": {\"\": \"const isOpen = props.isOpen;\\\\\\\\nconst onCancelClick = props.onCancelClick;\\\\\\\\nconst onConfirmClick = props.onConfirmClick;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.5);\\\\\\\\n  opacity: 0.4;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 50%;\\\\\\\\n  @media (width < 720px) {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Confirm proposal cancellation</h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n        <ModalContent>\\\\\\\\n          If you cancel this proposal, the status will change to Cancelled and\\\\\\\\n          indicate to sponsors that this proposal is no longer active or\\\\\\\\n          relevant. Comments are still open, but you cannot reopen this proposal\\\\\\\\n          or make additional changes.\\\\\\\\n          <br /> Are you sure you want to proceed?\\\\\\\\n        </ModalContent>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-outline-secondary\\\\\\\\\\\\\\\" },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onCancelClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-danger\\\\\\\\\\\\\\\" },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Ready to Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onConfirmClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.ConfirmReviewModal\": {\"\": \"const isOpen = props.isOpen;\\\\\\\\nconst onCancelClick = props.onCancelClick;\\\\\\\\nconst onReviewClick = props.onReviewClick;\\\\\\\\n\\\\\\\\nconst Modal = styled.div`\\\\\\\\n  display: ${({ hidden }) => (hidden ? \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\")};\\\\\\\\n  position: fixed;\\\\\\\\n  inset: 0;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  opacity: 1;\\\\\\\\n  z-index: 999;\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalBackdrop = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  inset: 0;\\\\\\\\n  background-color: rgba(0, 0, 0, 0.5);\\\\\\\\n  opacity: 0.4;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalDialog = styled.div`\\\\\\\\n  padding: 2em;\\\\\\\\n  z-index: 999;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 85%;\\\\\\\\n  margin-top: 5%;\\\\\\\\n  width: 50%;\\\\\\\\n  @media (width < 720px) {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalHeader = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n  padding-bottom: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalFooter = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: items-center;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CloseButton = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: center;\\\\\\\\n  background-color: white;\\\\\\\\n  padding: 0.5em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  color: #344054;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #d3d3d3;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ConfirmButton = styled.button`\\\\\\\\n  padding: 0.7em;\\\\\\\\n  border-radius: 6px;\\\\\\\\n  border: 0;\\\\\\\\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\\\\\\\\n  background-color: #12b76a;\\\\\\\\n  color: white;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #0e9f5d;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ModalContent = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  font-size: 14px;\\\\\\\\n  margin-top: 4px;\\\\\\\\n  margin-bottom: 4px;\\\\\\\\n  overflow-y: auto;\\\\\\\\n  max-height: 50%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NoButton = styled.button`\\\\\\\\n  background: transparent;\\\\\\\\n  border: none;\\\\\\\\n  padding: 0;\\\\\\\\n  margin: 0;\\\\\\\\n  box-shadow: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Modal hidden={!isOpen}>\\\\\\\\n      <ModalBackdrop />\\\\\\\\n      <ModalDialog className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <ModalHeader>\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Confirm proposal is ready for for review</h5>\\\\\\\\n        </ModalHeader>\\\\\\\\n        <ModalContent>\\\\\\\\n          Once in official review, you can no longer edit the proposal. But\\\\\\\\n          comments are still open. <br />\\\\\\\\n          Are you sure you are ready to proceed?\\\\\\\\n        </ModalContent>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end mt-2\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-outline-secondary\\\\\\\\\\\\\\\" },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onCancelClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"black-btn\\\\\\\\\\\\\\\" },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Ready for review\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onReviewClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </ModalDialog>\\\\\\\\n    </Modal>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.feature.proposal-search.by-category\": {\"\": \"const options = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Awareness & Engagement\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Community Groups / Work Groups\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"DevDAO Operations\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Developer Relations\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Events & Hackathons\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Platform\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Tooling & Infrastructure\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Universities & Bootcamps\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst [selected, setSelected] = useState(null);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        options: options,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelected(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.molecule.DropDownWithSearch\": {\"\": \"const {\\\\\\\\n  selectedValue,\\\\\\\\n  onChange,\\\\\\\\n  options,\\\\\\\\n  defaultLabel,\\\\\\\\n  showSearch,\\\\\\\\n  searchInputPlaceholder,\\\\\\\\n  searchByLabel,\\\\\\\\n  searchByValue,\\\\\\\\n} = props;\\\\\\\\n\\\\\\\\nconst [searchTerm, setSearchTerm] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [filteredOptions, setFilteredOptions] = useState(options);\\\\\\\\nconst [isOpen, setIsOpen] = useState(false);\\\\\\\\nconst [selectedOption, setSelectedOption] = useState({\\\\\\\\n  label:\\\\\\\\n    options?.find((item) => item.value === selectedValue)?.label ??\\\\\\\\n    defaultLabel,\\\\\\\\n  value: defaultLabel,\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (selectedOption.value !== selectedValue) {\\\\\\\\n    setSelectedOption({\\\\\\\\n      label:\\\\\\\\n        options?.find((item) => item.value === selectedValue)?.label ??\\\\\\\\n        defaultLabel,\\\\\\\\n      value: defaultLabel,\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [selectedValue]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  setFilteredOptions(options);\\\\\\\\n}, [options]);\\\\\\\\n\\\\\\\\nconst handleSearch = (event) => {\\\\\\\\n  const term = event.target.value.toLowerCase();\\\\\\\\n  setSearchTerm(term);\\\\\\\\n\\\\\\\\n  const filteredOptions = options.filter((option) => {\\\\\\\\n    if (searchByLabel) {\\\\\\\\n      return option.label.toLowerCase().includes(term);\\\\\\\\n    }\\\\\\\\n    if (searchByValue) {\\\\\\\\n      return option.value.toString().toLowerCase().includes(term);\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  setFilteredOptions(filteredOptions);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst toggleDropdown = () => {\\\\\\\\n  setIsOpen(!isOpen);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleOptionClick = (option) => {\\\\\\\\n  setSelectedOption(option);\\\\\\\\n  setIsOpen(false);\\\\\\\\n  onChange(option);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .drop-btn {\\\\\\\\n    width: 100%;\\\\\\\\n    text-align: left;\\\\\\\\n    padding-inline: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item.active,\\\\\\\\n  .dropdown-item:active {\\\\\\\\n    background-color: #f0f0f0 !important;\\\\\\\\n    color: black;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .scroll-box {\\\\\\\\n    max-height: 200px;\\\\\\\\n    overflow-y: scroll;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  input {\\\\\\\\n    background-color: #f8f9fa;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nlet searchFocused = false;\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"custom-select\\\\\\\\\\\\\\\"\\\\\\\\n      tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n      onBlur={() => {\\\\\\\\n        setTimeout(() => {\\\\\\\\n          setIsOpen(searchFocused || false);\\\\\\\\n        }, 0);\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"dropdown-toggle bg-white border rounded-2 btn drop-btn\\\\\\\\\\\\\\\">\\\\\\\\n        <div\\\\\\\\n          className={`selected-option ${\\\\\\\\n            selectedOption.label === defaultLabel ? \\\\\\\\\\\\\\\"text-grey\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n          }`}\\\\\\\\n          onClick={toggleDropdown}\\\\\\\\n        >\\\\\\\\n          {selectedOption.label}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      {isOpen && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"dropdown-menu dropdown-menu-end dropdown-menu-lg-start px-2 shadow show\\\\\\\\\\\\\\\">\\\\\\\\n          {showSearch && (\\\\\\\\n            <input\\\\\\\\n              type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n              className=\\\\\\\\\\\\\\\"form-control mb-2\\\\\\\\\\\\\\\"\\\\\\\\n              placeholder={searchInputPlaceholder ?? \\\\\\\\\\\\\\\"Search options\\\\\\\\\\\\\\\"}\\\\\\\\n              value={searchTerm}\\\\\\\\n              onChange={handleSearch}\\\\\\\\n              onFocus={() => {\\\\\\\\n                searchFocused = true;\\\\\\\\n              }}\\\\\\\\n              onBlur={() => {\\\\\\\\n                setTimeout(() => {\\\\\\\\n                  searchFocused = false;\\\\\\\\n                }, 0);\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          )}\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"scroll-box\\\\\\\\\\\\\\\">\\\\\\\\n            {filteredOptions.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`dropdown-item cursor-pointer ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n              >\\\\\\\\n                {option.label}\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 6.3356422084872e+21
    }
  },
  {
    "id": "2830573384",
    "receipt_id": "3q5AHmtEGrcTdWThScii96zJXEvpQ1CMkbgYu4mzRGRJ",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "FxvtR7wWjkAH2eQJVU1uAvJN2gCAJC4GrAnGmsEyiAGD",
      "block_height": 113900762,
      "block_timestamp": 1709320940160460500
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "AKs2KHwpthvpG6C7FMWdUWY6QvDamMJyoA7MHmoQvJxB",
    "included_in_block_hash": "GoF1pbqFnu3VBBJkwB7WyAa96XgSatuTgjY2ZfobqiWq",
    "block_timestamp": "1709320937629356789",
    "block": {
      "block_height": 113900760
    },
    "receipt_conversion_tokens_burnt": "278356866204000000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8319460909857922e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 6.3356422084872e+21
    }
  },
  {
    "id": "2842403028",
    "receipt_id": "7ah9o8B3F6ZUdEYuwpNwiwyvvzeg1eCrCovCGQtYQKyp",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3dUagTFjCvFfois9xSWis5s7erBVuZaTENKZEGoTNXan",
      "block_height": 113937421,
      "block_timestamp": 1709368679681061600
    },
    "receipt_outcome": {
      "gas_burnt": 6710423230070,
      "tokens_burnt": 671042323007000000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "hbiTDamooLC8VFqMHvYLZp47pYawRnp59oQ2FwMPwJC",
    "included_in_block_hash": "5E8xH4vXDqJ6ift2iyVENsgBaW9pD3fgMxAjbNfRSciw",
    "block_timestamp": "1709368678335500066",
    "block": {
      "block_height": 113937420
    },
    "receipt_conversion_tokens_burnt": "242987967818400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 671042323007000000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"[DevHub Discussions](/devhub.near/widget/app?page=community&handle=devhub-platform&tab=discussions) are LIVE in production. All the communities received \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Discussions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" tab in addition to (also recently added) \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Announcements\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nWhile Announcements are low-traffic feed that only community admins can post to, Discussions are open to everyone. Subscribe to announcements and/or discussions directly on NEAR Social!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n_Behind the scenes: Announcements and Discussions are basically regular NEAR accounts that leverage NEAR Social Feed: `<handle>.community.devhub.near` is used for announcement posts, and `discussions.<handle>.community.devhub.near` is used for reshares of user posts._\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"devhub-platform\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5087777023176e+21
    }
  },
  {
    "id": "2842403568",
    "receipt_id": "211JropaihDvneazeK9axiFZTzuQhTX4ucDZCCgbR9wg",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "Gs5CiBkY3bJUSxM2vFP3qkMY7s8XQCqzH3AbnRtRXbYh",
      "block_height": 113937422,
      "block_timestamp": 1709368681113778200
    },
    "receipt_outcome": {
      "gas_burnt": 5947474114922,
      "tokens_burnt": 594747411492200000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "hbiTDamooLC8VFqMHvYLZp47pYawRnp59oQ2FwMPwJC",
    "included_in_block_hash": "5E8xH4vXDqJ6ift2iyVENsgBaW9pD3fgMxAjbNfRSciw",
    "block_timestamp": "1709368678335500066",
    "block": {
      "block_height": 113937420
    },
    "receipt_conversion_tokens_burnt": "242987967818400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 594747411492200000000,
        "args": "{\"data\": {\"devhub-platform.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"[DevHub Discussions](/devhub.near/widget/app?page=community&handle=devhub-platform&tab=discussions) are LIVE in production. All the communities received \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Discussions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" tab in addition to (also recently added) \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Announcements\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nWhile Announcements are low-traffic feed that only community admins can post to, Discussions are open to everyone. Subscribe to announcements and/or discussions directly on NEAR Social!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n_Behind the scenes: Announcements and Discussions are basically regular NEAR accounts that leverage NEAR Social Feed: `<handle>.community.devhub.near` is used for announcement posts, and `discussions.<handle>.community.devhub.near` is used for reshares of user posts._\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5087777023176e+21
    }
  },
  {
    "id": "2845399842",
    "receipt_id": "EEQpjWDwoJbvbQowpMFztgAEvvYHwoqh8APDUCLSH3mq",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "Es1K3R6skRwfFiy5KpzeP7Pc1zQoZwKTVpJLLpmn9Kmt",
      "block_height": 113945671,
      "block_timestamp": 1709379952281065200
    },
    "receipt_outcome": {
      "gas_burnt": 6610810049051,
      "tokens_burnt": 661081004905100000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "A6KP6Ku3qh19a4KJp8KpTKxX34F14WtQLz6Cdqu94tMA",
    "included_in_block_hash": "CdHQfiVtmCuamLcbKFYLLUusYDJqiVtiN5KafLH3Eni4",
    "block_timestamp": "1709379950942658204",
    "block": {
      "block_height": 113945670
    },
    "receipt_conversion_tokens_burnt": "242889363129000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "create_community",
        "deposit": 4e+24,
        "fee": 661081004905100000000,
        "args": "{\"inputs\": {\"tag\": \"data\", \"name\": \"Data\", \"handle\": \"data\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreibysr2mkwhb4j36h2t7mqwhynqdy4vzjfygfkfg65kuspd2bawauu\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\", \"description\": \"Chain data & analytics\", \"bio_markdown\": \"This is a sample text about your community.\\\\\\\\nYou can change it on the community configuration page.\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 4e+24
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 6.6001260607407e+21
    }
  },
  {
    "id": "2845403381",
    "receipt_id": "GyCXnV3sxj1wvQyiq5TxQdvHDdyeRTFUw8HHaKcPtZky",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "community.devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7P2vdgEorU2QxL9Pd3bdh2qi4BxZ6RPfDpggahhNvxpf",
      "block_height": 113945680,
      "block_timestamp": 1709379964645829600
    },
    "receipt_outcome": {
      "gas_burnt": 10946549237681,
      "tokens_burnt": 1.0946549237681e+21,
      "executor_account_id": "community.devhub.near",
      "status": true
    },
    "transaction_hash": "A6KP6Ku3qh19a4KJp8KpTKxX34F14WtQLz6Cdqu94tMA",
    "included_in_block_hash": "CdHQfiVtmCuamLcbKFYLLUusYDJqiVtiN5KafLH3Eni4",
    "block_timestamp": "1709379950942658204",
    "block": {
      "block_height": 113945670
    },
    "receipt_conversion_tokens_burnt": "242889363129000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "create_community_account",
        "deposit": 4e+24,
        "fee": 1.0946549237681e+21,
        "args": "{\"community\": \"data\"}"
      }
    ],
    "actions_agg": {
      "deposit": 4e+24
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 6.6001260607407e+21
    }
  },
  {
    "id": "2845495306",
    "receipt_id": "7mpGKkNXgZv5zxnzhViS8GM6rMZPgC42casS22tqhM4e",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6r7CKUEeSbxYWtUBqgjB1mHzKivWhvdq55kQXMPDcfPd",
      "block_height": 113945954,
      "block_timestamp": 1709380335265693200
    },
    "receipt_outcome": {
      "gas_burnt": 6675327930554,
      "tokens_burnt": 667532793055400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "EQYwFT7LXs2Vpxyo82Mq6aeNQWbHQvFAKcV428vifhcG",
    "included_in_block_hash": "FVjzfhXWvCmZWamtdxgbZvQEKCkTVyVk88YLHikQ8DWm",
    "block_timestamp": "1709380334038123211",
    "block": {
      "block_height": 113945953
    },
    "receipt_conversion_tokens_burnt": "242946603039400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "update_community",
        "deposit": 0,
        "fee": 667532793055400000000,
        "args": "{\"handle\": \"data\", \"community\": {\"tag\": \"data\", \"name\": \"Data\", \"addons\": [], \"admins\": [\"frol.near\", \"jinou.near\"], \"handle\": \"data\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreibysr2mkwhb4j36h2t7mqwhynqdy4vzjfygfkfg65kuspd2bawauu\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\", \"description\": \"Chain data & analytics\", \"website_url\": null, \"bio_markdown\": \"We\\\\\\\\u{2019}re passionate about exploring the depths of on-chain data within the NEAR ecosystem. Our mission? To decode patterns, uncover insights, and empower builders, investors, and creators.\", \"github_handle\": \"near\", \"twitter_handle\": \"NEARDevHub\", \"telegram_handle\": \"NEARdata\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5669779306326e+21
    }
  },
  {
    "id": "2845498495",
    "receipt_id": "9oC6oz56i6CpU2HJHPHUDHsPYYzkuBxiwgedvbaVQanc",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5gPVffmxUvAji6DruWQ3JPiDrLDdMsmWUdTyfPcjB2Lq",
      "block_height": 113945961,
      "block_timestamp": 1709380344714719500
    },
    "receipt_outcome": {
      "gas_burnt": 6564985345378,
      "tokens_burnt": 656498534537800000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "EQYwFT7LXs2Vpxyo82Mq6aeNQWbHQvFAKcV428vifhcG",
    "included_in_block_hash": "FVjzfhXWvCmZWamtdxgbZvQEKCkTVyVk88YLHikQ8DWm",
    "block_timestamp": "1709380334038123211",
    "block": {
      "block_height": 113945953
    },
    "receipt_conversion_tokens_burnt": "242946603039400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 656498534537800000000,
        "args": "{\"data\": {\"data.community.devhub.near\": {\"profile\": {\"name\": \"Data\", \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreibysr2mkwhb4j36h2t7mqwhynqdy4vzjfygfkfg65kuspd2bawauu\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5669779306326e+21
    }
  },
  {
    "id": "2845513266",
    "receipt_id": "DZ1qyLUji9iRDTGaFZBL4eq71xMioHJfkuv2XNUjKcqb",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5jyqyGKpUKShNKhHdjTAheA1cQgEuBLK6B1wZ2xf9tT3",
      "block_height": 113946001,
      "block_timestamp": 1709380399044372200
    },
    "receipt_outcome": {
      "gas_burnt": 6699334706729,
      "tokens_burnt": 669933470672900000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "EDddXRrFg1YeYK6zmZpnkBHNRKCxfCfotuJhS8WwQ55Y",
    "included_in_block_hash": "3SxDD9ENsv58mLDi7SjxuHPmXkem1nhWWtko9k8kBhf7",
    "block_timestamp": "1709380397635224399",
    "block": {
      "block_height": 113946000
    },
    "receipt_conversion_tokens_burnt": "242946603039400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "update_community",
        "deposit": 0,
        "fee": 669933470672900000000,
        "args": "{\"handle\": \"data\", \"community\": {\"tag\": \"data\", \"name\": \"Data\", \"addons\": [], \"admins\": [\"frol.near\", \"jinou.near\"], \"handle\": \"data\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreibtrpy6skbdjafjdizdodnzan3g7qyxfxhtd33mcpjydvqpf47oou\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\", \"description\": \"Chain data & analytics\", \"website_url\": null, \"bio_markdown\": \"We\\\\\\\\u{2019}re passionate about exploring the depths of on-chain data within the NEAR ecosystem. Our mission? To decode patterns, uncover insights, and empower builders, investors, and creators.\", \"github_handle\": \"near\", \"twitter_handle\": \"NEARDevHub\", \"telegram_handle\": \"NEARdata\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5021940417339e+21
    }
  },
  {
    "id": "2845517064",
    "receipt_id": "H8HETfQr7w1fFyiW9e7UwfbPbUBWAYsvGakkm2xKvSj4",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8Z7FJUx7RX9aSrB2Duyzmog8gePyzA3a5N7wjRzgabcr",
      "block_height": 113946010,
      "block_timestamp": 1709380411815432400
    },
    "receipt_outcome": {
      "gas_burnt": 5893139680216,
      "tokens_burnt": 589313968021600000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "EDddXRrFg1YeYK6zmZpnkBHNRKCxfCfotuJhS8WwQ55Y",
    "included_in_block_hash": "3SxDD9ENsv58mLDi7SjxuHPmXkem1nhWWtko9k8kBhf7",
    "block_timestamp": "1709380397635224399",
    "block": {
      "block_height": 113946000
    },
    "receipt_conversion_tokens_burnt": "242946603039400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 589313968021600000000,
        "args": "{\"data\": {\"data.community.devhub.near\": {\"profile\": {\"name\": \"Data\", \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreibtrpy6skbdjafjdizdodnzan3g7qyxfxhtd33mcpjydvqpf47oou\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5021940417339e+21
    }
  },
  {
    "id": "2845588151",
    "receipt_id": "59Nxn8URL4QU4McXqLpdrsWKkKtEP1W4L2EVYR2gQUh6",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "DgU6kfUFbDNZtDxVdLojy2XDTFYgkoDVLHrLpkiHd8K2",
      "block_height": 113946198,
      "block_timestamp": 1709380669044808400
    },
    "receipt_outcome": {
      "gas_burnt": 6364267231352,
      "tokens_burnt": 636426723135200000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "Hi9bH1i7yvDygwLqT9YYvFVWDast9HsSkxTb7Mj4qMkN",
    "included_in_block_hash": "DQ2XQUyLK73L31zCXN2TvEsgHvk238Jw6Wuv1xKdS5ZP",
    "block_timestamp": "1709380667815533892",
    "block": {
      "block_height": 113946197
    },
    "receipt_conversion_tokens_burnt": "242880642986400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 636426723135200000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"We are live on DevHub! Join us if you want to discuss data solutions in NEAR ecosystem.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nJoin our [discussions on DevHub](/devhub.near/widget/app?page=community&handle=data&tab=discussions) and [Telegram](https://t.me/NEARdata).\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"data\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.565415434101e+21
    }
  },
  {
    "id": "2845591931",
    "receipt_id": "HJHHuvYEZYavGKb5zrrhUXw9unTAcbBtadatXJLQMHVe",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7yq4RnovyRCeCgW7cTvJztJB24wUi3zCu3iLsBnx8mzt",
      "block_height": 113946207,
      "block_timestamp": 1709380681103339000
    },
    "receipt_outcome": {
      "gas_burnt": 6861080679794,
      "tokens_burnt": 686108067979400000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "Hi9bH1i7yvDygwLqT9YYvFVWDast9HsSkxTb7Mj4qMkN",
    "included_in_block_hash": "DQ2XQUyLK73L31zCXN2TvEsgHvk238Jw6Wuv1xKdS5ZP",
    "block_timestamp": "1709380667815533892",
    "block": {
      "block_height": 113946197
    },
    "receipt_conversion_tokens_burnt": "242880642986400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 686108067979400000000,
        "args": "{\"data\": {\"data.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"We are live on DevHub! Join us if you want to discuss data solutions in NEAR ecosystem.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nJoin our [discussions on DevHub](/devhub.near/widget/app?page=community&handle=data&tab=discussions) and [Telegram](https://t.me/NEARdata).\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.565415434101e+21
    }
  },
  {
    "id": "2845747366",
    "receipt_id": "Dsqv1xhHVqxvvShWc914aNuQ49kyXYKjK1RzpkcT1262",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "77bVpTbL6BdVdXfm3Zhx6L3u6gbkYgF89oCAqT1W9pTu",
      "block_height": 113946630,
      "block_timestamp": 1709381265798914300
    },
    "receipt_outcome": {
      "gas_burnt": 6003946929568,
      "tokens_burnt": 600394692956800000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "GKCYwoBK9DpnSuurUb57t69Lo2KrTs6t2yAdbyHH4brN",
    "included_in_block_hash": "4apuz3U8qrTnsGD7Zkdp1kryUdFGoZikrxWbBh9sHi2y",
    "block_timestamp": "1709381264403019217",
    "block": {
      "block_height": 113946629
    },
    "receipt_conversion_tokens_burnt": "242805292010600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "create_discussion",
        "deposit": 0,
        "fee": 600394692956800000000,
        "args": "{\"handle\": \"data\", \"block_height\": 113946618}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4375125443056e+21
    }
  },
  {
    "id": "2845751061",
    "receipt_id": "3b6WvgaTGSaS4nkbRmSwzLGFRD669whZpsMrn94ZNoED",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3PrdswtRKDK4bX4EBpmQ1JMAk4HQWv9rtr87ibrHFggG",
      "block_height": 113946640,
      "block_timestamp": 1709381280688682000
    },
    "receipt_outcome": {
      "gas_burnt": 5943125593382,
      "tokens_burnt": 594312559338200000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "GKCYwoBK9DpnSuurUb57t69Lo2KrTs6t2yAdbyHH4brN",
    "included_in_block_hash": "4apuz3U8qrTnsGD7Zkdp1kryUdFGoZikrxWbBh9sHi2y",
    "block_timestamp": "1709381264403019217",
    "block": {
      "block_height": 113946629
    },
    "receipt_conversion_tokens_burnt": "242805292010600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 594312559338200000000,
        "args": "{\"data\": {\"discussions.data.community.devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"repost\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"item\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near/post/main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"blockHeight\\\\\\\\\\\\\\\":113946618}}}\", \"repost\": \"[{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"repost\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"item\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near/post/main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"blockHeight\\\\\\\\\\\\\\\":113946618}}},{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near/post/main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"blockHeight\\\\\\\\\\\\\\\":113946618},\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"repost\\\\\\\\\\\\\\\"}}]\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4375125443056e+21
    }
  },
  {
    "id": "2845990499",
    "receipt_id": "EKG7r9an4mgoG1PP7tVJZ9s1D3BD4ngHbHiY2KW4Brw2",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "AvwxGMJDN8uCQZ9pVZaQ6Grm75jrqYQFeSCF3zuCMbCm",
      "block_height": 113947311,
      "block_timestamp": 1709382204617017000
    },
    "receipt_outcome": {
      "gas_burnt": 6704646368509,
      "tokens_burnt": 670464636850900000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "4yhxMi2VYtarpwsihwC5qZdZhyzCcpSoDsG17yAdZ3pX",
    "included_in_block_hash": "EaHGsnVBpgqcb3ZzG1SuPsL29ffdg4AooPNgBAYNTeb5",
    "block_timestamp": "1709382203069759538",
    "block": {
      "block_height": 113947310
    },
    "receipt_conversion_tokens_burnt": "242959124269800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "update_community",
        "deposit": 0,
        "fee": 670464636850900000000,
        "args": "{\"handle\": \"data\", \"community\": {\"tag\": \"data\", \"name\": \"Data\", \"addons\": [], \"admins\": [\"frol.near\", \"jinou.near\"], \"handle\": \"data\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreibtrpy6skbdjafjdizdodnzan3g7qyxfxhtd33mcpjydvqpf47oou\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\", \"description\": \"Chain data & analytics\", \"website_url\": \"near.org/devhub.near/widget/app?page=community&handle=data\", \"bio_markdown\": \"We\\\\\\\\u{2019}re passionate about exploring the depths of on-chain data within the NEAR ecosystem. Our mission? To decode patterns, uncover insights, and empower builders, investors, and creators.\", \"github_handle\": \"near\", \"twitter_handle\": \"NEARDevHub\", \"telegram_handle\": \"NEARdata\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5027377291423e+21
    }
  },
  {
    "id": "2845994546",
    "receipt_id": "9cN64Kwjd4P4eLWyRt2m3Ytmqnm1RcdUbZxtawUok4C8",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "GX2XQUnHkZRGiD2vDgKadKGnW7T6sU74HfqpHLvfeLaf",
      "block_height": 113947321,
      "block_timestamp": 1709382217719079700
    },
    "receipt_outcome": {
      "gas_burnt": 5893139680216,
      "tokens_burnt": 589313968021600000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "4yhxMi2VYtarpwsihwC5qZdZhyzCcpSoDsG17yAdZ3pX",
    "included_in_block_hash": "EaHGsnVBpgqcb3ZzG1SuPsL29ffdg4AooPNgBAYNTeb5",
    "block_timestamp": "1709382203069759538",
    "block": {
      "block_height": 113947310
    },
    "receipt_conversion_tokens_burnt": "242959124269800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 589313968021600000000,
        "args": "{\"data\": {\"data.community.devhub.near\": {\"profile\": {\"name\": \"Data\", \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreibtrpy6skbdjafjdizdodnzan3g7qyxfxhtd33mcpjydvqpf47oou\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5027377291423e+21
    }
  },
  {
    "id": "2846026360",
    "receipt_id": "FLXxYsGEgCZd4XRBJks55CD6ajsu9tYHMQijgJwkf3e2",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "fsZPfrt1DRBghMPwcW9dii8vZvxJGzF28YBLxTM9VFe",
      "block_height": 113947408,
      "block_timestamp": 1709382338939126500
    },
    "receipt_outcome": {
      "gas_burnt": 6685207275343,
      "tokens_burnt": 668520727534300000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "6sRgFoF29b43hdxoPoMQ2g8tBdYZeFXrwRa1ebAaNCjx",
    "included_in_block_hash": "6Hscq8sQWN7Lfuxc7qhE2d4KSPqkP2swhJeraEZPkDts",
    "block_timestamp": "1709382337551313569",
    "block": {
      "block_height": 113947407
    },
    "receipt_conversion_tokens_burnt": "242959124269800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "update_community",
        "deposit": 0,
        "fee": 668520727534300000000,
        "args": "{\"handle\": \"data\", \"community\": {\"tag\": \"data\", \"name\": \"Data\", \"addons\": [], \"admins\": [\"frol.near\", \"jinou.near\"], \"handle\": \"data\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreibtrpy6skbdjafjdizdodnzan3g7qyxfxhtd33mcpjydvqpf47oou\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\", \"description\": \"Chain data & analytics\", \"website_url\": \"near.org/devhub.near/widget/app?page=community&handle=data\", \"bio_markdown\": \"We\\\\\\\\u{2019}re passionate about exploring the depths of on-chain data within the NEAR ecosystem. Our mission? To decode patterns, uncover insights, and empower builders, investors, and creators.\", \"github_handle\": \"near\", \"twitter_handle\": \"NEARDevHub\", \"telegram_handle\": \"NEARdata\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5007938198257e+21
    }
  },
  {
    "id": "2846030405",
    "receipt_id": "BpxoycZ9erTCPriMvLjvZhCyMjbQUYdspL9iZBSFtna2",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2fvwG7uSL948nciR6MVHYGZeMVCUtCmEj4UY3QTeiqhw",
      "block_height": 113947418,
      "block_timestamp": 1709382352417913600
    },
    "receipt_outcome": {
      "gas_burnt": 5893139680216,
      "tokens_burnt": 589313968021600000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "6sRgFoF29b43hdxoPoMQ2g8tBdYZeFXrwRa1ebAaNCjx",
    "included_in_block_hash": "6Hscq8sQWN7Lfuxc7qhE2d4KSPqkP2swhJeraEZPkDts",
    "block_timestamp": "1709382337551313569",
    "block": {
      "block_height": 113947407
    },
    "receipt_conversion_tokens_burnt": "242959124269800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 589313968021600000000,
        "args": "{\"data\": {\"data.community.devhub.near\": {\"profile\": {\"name\": \"Data\", \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreibtrpy6skbdjafjdizdodnzan3g7qyxfxhtd33mcpjydvqpf47oou\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5007938198257e+21
    }
  },
  {
    "id": "2847001801",
    "receipt_id": "EfDwYeSBkR56PZTT7gFHL1Tu4TJ3zvzdisitPnqeAEWd",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "E8SMvZueMTTdtUtxfS8RnLpkcgXPSYYmbrqThFLS17E",
      "block_height": 113950091,
      "block_timestamp": 1709386016005344800
    },
    "receipt_outcome": {
      "gas_burnt": 23147072803301,
      "tokens_burnt": 2.3147072803301e+21,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "8cLz2443kTy8gLa6MVL6QHUZo7jCkieoWWKuAydeAbh6",
    "included_in_block_hash": "E8SMvZueMTTdtUtxfS8RnLpkcgXPSYYmbrqThFLS17E",
    "block_timestamp": "1709386016005344799",
    "block": {
      "block_height": 113950091
    },
    "receipt_conversion_tokens_burnt": "445399694256200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "unsafe_self_upgrade",
        "deposit": 0,
        "fee": 2.3147072803301e+21,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9154701866318e+21
    }
  },
  {
    "id": "2847002112",
    "receipt_id": "6kv7MwPEL9M9FjVRkM8CdwcauvZRevjyvr3khfdX3AW6",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "HBrtA8MVUm77UaJvARxWwbQJEoKpKcYQ6tbBzFFaSzXd",
      "block_height": 113950092,
      "block_timestamp": 1709386017357804800
    },
    "receipt_outcome": {
      "gas_burnt": 58803919559056,
      "tokens_burnt": 5.8803919559056e+21,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "8cLz2443kTy8gLa6MVL6QHUZo7jCkieoWWKuAydeAbh6",
    "included_in_block_hash": "E8SMvZueMTTdtUtxfS8RnLpkcgXPSYYmbrqThFLS17E",
    "block_timestamp": "1709386016005344799",
    "block": {
      "block_height": 113950091
    },
    "receipt_conversion_tokens_burnt": "445399694256200000000",
    "actions": [
      {
        "action": "DEPLOY_CONTRACT",
        "method": null,
        "deposit": 0,
        "fee": 5.8803919559056e+21,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9154701866318e+21
    }
  },
  {
    "id": "2847002116",
    "receipt_id": "HXQBN4st6g6LwQtEwUsGpbx6wxRfarMKHNbJS2baqd64",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "HBrtA8MVUm77UaJvARxWwbQJEoKpKcYQ6tbBzFFaSzXd",
      "block_height": 113950092,
      "block_timestamp": 1709386017357804800
    },
    "receipt_outcome": {
      "gas_burnt": 2749712561399,
      "tokens_burnt": 274971256139900000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "8cLz2443kTy8gLa6MVL6QHUZo7jCkieoWWKuAydeAbh6",
    "included_in_block_hash": "E8SMvZueMTTdtUtxfS8RnLpkcgXPSYYmbrqThFLS17E",
    "block_timestamp": "1709386016005344799",
    "block": {
      "block_height": 113950091
    },
    "receipt_conversion_tokens_burnt": "445399694256200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "unsafe_migrate",
        "deposit": 0,
        "fee": 274971256139900000000,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9154701866318e+21
    }
  },
  {
    "id": "2847002120",
    "receipt_id": "BLFq9b14Xh9hMPji3whgK5ywoc5z5xfqqAjgAGtAk4Wn",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "HBrtA8MVUm77UaJvARxWwbQJEoKpKcYQ6tbBzFFaSzXd",
      "block_height": 113950092,
      "block_timestamp": 1709386017357804800
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "8cLz2443kTy8gLa6MVL6QHUZo7jCkieoWWKuAydeAbh6",
    "included_in_block_hash": "E8SMvZueMTTdtUtxfS8RnLpkcgXPSYYmbrqThFLS17E",
    "block_timestamp": "1709386016005344799",
    "block": {
      "block_height": 113950091
    },
    "receipt_conversion_tokens_burnt": "445399694256200000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.2207489900676192e+22,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9154701866318e+21
    }
  },
  {
    "id": "2847002519",
    "receipt_id": "6QzoXvQzjz5wZZE3ZXHxZCAsvezPkmAbQbBfqMtHoK9f",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "GEEc2cTKSGh3ZuoMNMAQ3VdBWKjkA5ski1qdTWU17Mw9",
      "block_height": 113950093,
      "block_timestamp": 1709386019339202000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "8cLz2443kTy8gLa6MVL6QHUZo7jCkieoWWKuAydeAbh6",
    "included_in_block_hash": "E8SMvZueMTTdtUtxfS8RnLpkcgXPSYYmbrqThFLS17E",
    "block_timestamp": "1709386016005344799",
    "block": {
      "block_height": 113950091
    },
    "receipt_conversion_tokens_burnt": "445399694256200000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.3877130684722233e+22,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9154701866318e+21
    }
  },
  {
    "id": "2847003112",
    "receipt_id": "J5YMuTqSoboUhcYUm7DkNoTszMwMiuRqe6j8uiGBb8Dt",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5DkhuEQhcJbg1mJq5gMUu25CL2RacLwHfeLBKhWoCHhK",
      "block_height": 113950095,
      "block_timestamp": 1709386021551514000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "8cLz2443kTy8gLa6MVL6QHUZo7jCkieoWWKuAydeAbh6",
    "included_in_block_hash": "E8SMvZueMTTdtUtxfS8RnLpkcgXPSYYmbrqThFLS17E",
    "block_timestamp": "1709386016005344799",
    "block": {
      "block_height": 113950091
    },
    "receipt_conversion_tokens_burnt": "445399694256200000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 3.4139785478379707e+22,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 8.9154701866318e+21
    }
  },
  {
    "id": "2847020127",
    "receipt_id": "7GwL64auQbCLhfp2xGbGazCnLqRWXPJySB9yWD9bxu2c",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "37qAQMC3673aN6q6YfdWLw1hV84upGMqf7s3LLbspg74",
      "block_height": 113950155,
      "block_timestamp": 1709386101361483300
    },
    "receipt_outcome": {
      "gas_burnt": 6893137948936,
      "tokens_burnt": 689313794893600000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "47yYXURGwok3vbjRR5pVdFyDHySzCqRppypMEnU6x4Uv",
    "included_in_block_hash": "6fmhBWm3gCv2pdq7cr7p5dmTzo1iN3PxLa4DLxoEb1s9",
    "block_timestamp": "1709386100052036424",
    "block": {
      "block_height": 113950154
    },
    "receipt_conversion_tokens_burnt": "242959124269800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "update_community",
        "deposit": 0,
        "fee": 689313794893600000000,
        "args": "{\"handle\": \"data\", \"community\": {\"tag\": \"data\", \"name\": \"Data\", \"addons\": [], \"admins\": [\"frol.near\", \"jinou.near\"], \"handle\": \"data\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreibtrpy6skbdjafjdizdodnzan3g7qyxfxhtd33mcpjydvqpf47oou\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\", \"description\": \"Chain data & analytics\", \"website_url\": \"near.org/devhub.near/widget/app?page=community&handle=data\", \"bio_markdown\": \"We\\\\\\\\u{2019}re passionate about exploring the depths of on-chain data within the NEAR ecosystem. Our mission? To decode patterns, uncover insights, and empower builders, investors, and creators.\", \"github_handle\": \"near\", \"twitter_handle\": \"NEARDevHub\", \"telegram_handle\": \"NEARdata\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.323105680301e+21
    }
  }
]