[
  {
    "id": "7039825404",
    "receipt_id": "BgsFnT4CQcdtWHc85j6aoW7GyxcPiH9FtYqsBYjihbZU",
    "predecessor_account_id": "gagdiez.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "Y34WY6qDtpAtwfCJ28kParLfmomTSTi6THsfzocBW2o",
      "block_height": 124590476,
      "block_timestamp": 1722324150783589400
    },
    "receipt_outcome": {
      "gas_burnt": 4235290354725,
      "tokens_burnt": 423529035472500000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "7UCAgMVXZS7rEVpN79h8tU5uKrWLT7tThb3B36LTW4L",
    "included_in_block_hash": "6uhkCD1wBdei23QMbRMHBzLxAh7Z8pkQhF5rTjHHF6gq",
    "block_timestamp": "1722324149677937184",
    "block": {
      "block_height": 124590475
    },
    "receipt_conversion_tokens_burnt": "30865649437800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 423529035472500000000,
        "args": "{\"id\": 167, \"timeline\": {\"status\": \"PAYMENT_PROCESSING\", \"kyc_verified\": true, \"timeline_version\": \"V1\", \"test_transaction_sent\": true, \"sponsor_requested_review\": false, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 806954525332600000000
    }
  },
  {
    "id": "7039825624",
    "receipt_id": "9F2JtnTcRHTycxYzZn3yxXyt8Mj1dYJBjfFpmNHBC2q9",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3NkfPiRLZct5Qoeh5hfxfEYhNrM8E96PtbkdNqYkM9bM",
      "block_height": 124590477,
      "block_timestamp": 1722324152032854800
    },
    "receipt_outcome": {
      "gas_burnt": 3525598404223,
      "tokens_burnt": 352559840422300000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "7UCAgMVXZS7rEVpN79h8tU5uKrWLT7tThb3B36LTW4L",
    "included_in_block_hash": "6uhkCD1wBdei23QMbRMHBzLxAh7Z8pkQhF5rTjHHF6gq",
    "block_timestamp": "1722324149677937184",
    "block": {
      "block_height": 124590475
    },
    "receipt_conversion_tokens_burnt": "30865649437800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 352559840422300000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"maguila.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":167,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"gagdiez.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 806954525332600000000
    }
  },
  {
    "id": "7040515008",
    "receipt_id": "2PQCBfyqwsUgFXBX3Zhwme7ERfMtu7L7SS1ZdYeTCnNh",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6DgYbNsyM4K5HLWJ6RP31wNTB6z8KftgqkNzPB5yMst6",
      "block_height": 124592322,
      "block_timestamp": 1722326242455890200
    },
    "receipt_outcome": {
      "gas_burnt": 6407251893017,
      "tokens_burnt": 640725189301700000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "4w7921P4RfuUMgcFszWim1Qxx63EGvW93nomGdAa2z9o",
    "included_in_block_hash": "CmfNjYTfgfUqNZXVeUuaVcrpBfTngzCJbGjzQVog9Dst",
    "block_timestamp": "1722326241637428498",
    "block": {
      "block_height": 124592321
    },
    "receipt_conversion_tokens_burnt": "33745756023200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "update_community",
        "deposit": 0,
        "fee": 640725189301700000000,
        "args": "{\"handle\": \"protocol\", \"community\": {\"tag\": \"protocol\", \"name\": \"Protocol\", \"addons\": [{\"id\": \"announcements\", \"enabled\": true, \"addon_id\": \"announcements\", \"parameters\": \"{}\", \"display_name\": \"Announcements\"}, {\"id\": \"discussions\", \"enabled\": true, \"addon_id\": \"discussions\", \"parameters\": \"{}\", \"display_name\": \"Discussions\"}, {\"id\": \"activity\", \"enabled\": true, \"addon_id\": \"activity\", \"parameters\": \"{}\", \"display_name\": \"Activity\"}, {\"id\": \"des7nb\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"The Protocol Community \\\\\\\\u{1f310}\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"## Who are we\\\\\\\\\\\\\\\\nProtocol refers to the layer 1 blockchain, the foundation of NEAR ([ref](https://nomicon.io/Architecture)); contributors of Protocol mostly work on nearcore Github repository, containing critical implementation powering NEAR protocol blockchain including chain, sharding, network, storage and runtime. Through various researches, investigations, and rigorous discussions, we aim to build secure, reliable, and scalable blockchain infrastructure, where the vision of Blockchain OS and innovative Web3 apps can live on. \\\\\\\\\\\\\\\\nIf you are interested in how NEAR blockchain works and want to make contributions, this is the place for you!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n## Structure\\\\\\\\\\\\\\\\nAs of now, the Protocol community consists of two groups: working group(PWG) and community group.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n### Protocol working group\\\\\\\\\\\\\\\\nThis formal group is a selected committee of subject matter experts who make official decisions on proposals related to the NEAR protocol. They follow a strict process to review proposals, recommend funding to DAO or grant programs, and hold grant takers accountable. They engage with the broader community to understand their needs and encourage ideation. Due to its significance, we pay special attention to the member selection process and make sure that each member can bring unique perspectives and experiences to improve NEAR protocol. With great power comes great responsibility.\\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n#### WG Members\\\\\\\\\\\\\\\\nA protocol working group member will constantly seek a community member with deep expertise on how protocol works. When a qualified candidate is discovered, the committee goes through the nomination and alignment process to send an invitation.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nCurrent committee members are as follows:\\\\\\\\\\\\\\\\n* Bowen Wang ([Pagoda](https://www.pagoda.co/))\\\\\\\\\\\\\\\\n build-preview.mjs deploy_preview_environment.sh dev-gateway.mjs dev.sh migrate_tabs_addons.sh Near social: [@woben.near](https://near.social/#/mob.near/widget/ProfilePage?accountId=woben.near)\\\\\\\\\\\\\\\\n build-preview.mjs deploy_preview_environment.sh dev-gateway.mjs dev.sh migrate_tabs_addons.sh Github: [bowenwang1996](https://github.com/bowenwang1996)\\\\\\\\\\\\\\\\n* Marcelo Fornet\\\\\\\\\\\\\\\\n build-preview.mjs deploy_preview_environment.sh dev-gateway.mjs dev.sh migrate_tabs_addons.sh Near social: [@marcelo.near](https://near.social/#/mob.near/widget/ProfilePage?accountId=marcelo.near)\\\\\\\\\\\\\\\\n build-preview.mjs deploy_preview_environment.sh dev-gateway.mjs dev.sh migrate_tabs_addons.sh Github: [mfornet](https://github.com/mfornet)\\\\\\\\\\\\\\\\n build-preview.mjs deploy_preview_environment.sh dev-gateway.mjs dev.sh migrate_tabs_addons.sh Telegram: mnaeraxr\\\\\\\\\\\\\\\\n* Marcin Michalski ([Matter Labs](https://matter-labs.io/))\\\\\\\\\\\\\\\\n build-preview.mjs deploy_preview_environment.sh dev-gateway.mjs dev.sh migrate_tabs_addons.sh Github: [mm-near](https://github.com/mm-near)\\\\\\\\\\\\\\\\n* Michael Birch (Aurora)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n#### WG Responsibilities\\\\\\\\\\\\\\\\n* Make decisions on Near Enhancement Proposals(A.K.A NEPs)\\\\\\\\\\\\\\\\n* Budget allocation for protocol development initiatives including RFPs, security audits, etc. This includes review of funding requests.\\\\\\\\\\\\\\\\n* Steer the general direction of protocol development\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n#### Communication channels\\\\\\\\\\\\\\\\n* Attend Protocol work group calls \\\\\\\\\\\\\\\\n* Message on Telegram channel: [link](https://t.me/NEAR_Protocol_Community_Group)\\\\\\\\\\\\\\\\n* Post on NEAR.org and tag [Pagoda](https://near.org/near/widget/ProfilePage?accountId=pagodaplatform.near)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n### Protocol community group\\\\\\\\\\\\\\\\nCommunity group is an open group providing a space for anyone interested in changes to the NEAR protocol. Unlike the Protocol working group, the community group does not require any commitment or membership. It focuses on offering a place where members can freely ask questions, seek/offer support, exchange ideas and initiate discussions. All contributors to nearcore repository, including [Pagoda](https://www.pagoda.co/) protocol team members, are implicit members of the community, and actively participate in community discussions.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n* [Protocol Community Group TG Channel](https://t.me/NEAR_Protocol_Community_Group)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n### Communication channels\\\\\\\\\\\\\\\\n* Protocol community group calls (Join our telegram Channel to stay up to date)\\\\\\\\\\\\\\\\n* [Telegram channel](https://t.me/NEAR_Protocol_Community_Group)\\\\\\\\\\\\\\\\n* [Zulip](https://near.zulipchat.com/#narrow/stream/295558-pagoda.2Fcore)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"About Us \\\\\\\\u{2b50}\\\\\\\\u{fe0f}\"}, {\"id\": \"730ru7\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Welcome to the community\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#### The Protocol Community Group organizes various events and programs aimed at enhancing the NEAR blockchain. \\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Community Calls\\\\\\\\\\\\\\\\nThe Protocol Community Group conducts a monthly call to facilitate connection, idea sharing, and staying updated on NEAR protocol developments.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**- How to Join the Call:** Stay updated on upcoming meetings either below or via our [Telegram channel](https://t.me/NEAR_Protocol_Community_Group).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**- Who Can Attend:** The monthly call is open to everyone, whether you\\\\\\\\\\\\'re an individual, organization, or NEAR Protocol expert. Each call is recorded and posted on this page.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**- Format:** The monthly call follows a free-format discussion with basic moderation. Participants can volunteer to lead future calls. Typically, the agenda starts with participant introductions, followed by discussions on various topics prioritized based on participants\\\\\\\\\\\\' interests. Topics may include updates from members, presentations on research, and open discussions.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n## Work Group Calls\\\\\\\\\\\\\\\\nThe Protocol Working Group primarily reviews and discusses NEAR Enhancement Proposals (NEPs) asynchronously within the NEPs\\\\\\\\\\\\' public thread to encourage broad participation and ensure transparency. However, synchronous public formal calls may be hosted if a discussion becomes circular and would benefit from real-time conversation.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n## Monthly Protocol Engineer Virtual Meetup Day\\\\\\\\\\\\\\\\nOnce a month, protocol engineers gather virtually on [Gather Town](https://app.gather.town/app) to simulate an \\\\\\\\\\\\'office working environment\\\\\\\\\\\\' during their work hours. This setup fosters ad hoc discussions and strengthens relationships. Additionally, we host a social hour for fun activities during this day. The schedule for the virtual working day is shared on the [Zulip general stream](https://near.zulipchat.com/#narrow/stream/295302-general/topic/virtual.20meetup.20day).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n## Bug Bounty Program\\\\\\\\\\\\\\\\nThe Bug Bounty Program aims to enhance the security and integrity of the NEAR protocol by leveraging the community\\\\\\\\\\\\'s expertise. If you identify any issues that could pose a threat to our users on the nearcore repository, please report them and claim the bounty! Learn more about the program [here](https://hackenproof.com/near/near-protocol).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n## Funding Proposal\\\\\\\\\\\\\\\\nIf you have ideas to enhance NEAR protocol scalability, reliability, or security, you can submit a proposal to receive funding for your efforts. Currently, NEAR DevDAO manages the funding program in collaboration with the Protocol Working Group. Once a proposal is submitted, DevDAO and the Protocol Working Group review it thoroughly to determine its necessity. Subsequently, DevDAO communicates the final decision to the proposer and collaborates on the next steps. For guidelines on submitting a proposal for funding, visit [here](https://near.social/devhub.near/widget/app?page=community&handle=developer-dao&tab=funding).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n## More ways to participate\\\\\\\\\\\\\\\\nThere are various ways to participate in community activities:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- To share feedback or initiate discussions with developers, use the [Zulip pagoda/core stream](https://near.zulipchat.com/#narrow/stream/295558-pagoda.2Fcore) or the Protocol Community Group discussion board.\\\\\\\\\\\\\\\\n- For questions about the NEAR protocol, ask in the [Zulip pagoda/core/questions topic](https://near.zulipchat.com/#narrow/stream/295558-pagoda.2Fcore/topic/questions), Protocol Telegram, Protocol Community Group discussion board, or Near social.\\\\\\\\\\\\\\\\n- To work on a simple issue and learn about the NEAR protocol, request an onboarding task in the [Zulip pagoda/core stream](https://near.zulipchat.com/#narrow/stream/295558-pagoda.2Fcore) or check out GitHub issues labeled with good-first-issue [here](https://github.com/near/nearcore/labels/C-good-first-issue).\\\\\\\\\\\\\\\\n- To communicate with the Pagoda protocol team, start a conversation in the [Zulip pagoda/core stream](https://near.zulipchat.com/#narrow/stream/295558-pagoda.2Fcore) and tag @ protocol.\\\\\\\\\\\\\\\\n- To learn about proposals on protocol specifications, visit the [Github NEP board](https://github.com/orgs/near/projects/51/views/3) or read through the [Near Enhancement Proposal guideline](https://github.com/near/NEPs/blob/master/neps/nep-0001.md).\\\\\\\\\\\\\\\\n- To request funding for an idea, check the \\\\\\\\\\\\'Event\\\\\\\\\\\\' tab.\\\\\\\\\\\\\\\\n- To claim a reward for finding a bug on NEAR, check the \\\\\\\\\\\\'Event\\\\\\\\\\\\' tab.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"How to contribute \\\\\\\\u{1f468}\\\\\\\\u{200d}\\\\\\\\u{1f4bb}\"}, {\"id\": \"3i6q64\", \"enabled\": true, \"addon_id\": \"blog\", \"parameters\": \"{}\", \"display_name\": \"Community Call Recaps \\\\\\\\u{1f4de}\"}, {\"id\": \"dmqrwf\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Our Docs\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nProtocol community maintains several documents/wikis so community members can stay informative and efficient to find what they are seeking for. Here are major worth noting ones.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n* [Guide to nearcore development](https://near.github.io/nearcore/index.html): Explains how each part of nearcore operates, e.g. how state sync, garbage collection, epoch works, how storage layer interacts with the layers on top, etc.\\\\\\\\\\\\\\\\n* [Nomicon](https://nomicon.io/): Near protocol specification\\\\\\\\\\\\\\\\n* [Near nodes](https://near-nodes.io/): Explains how near node works and how one can become a node operator \\\\\\\\\\\\\\\\n* [Near doc](https://docs.near.org/develop/welcome): Walks you through on how to develop on top of NEAR protocol, e.g. how to build a smart contract on NEAR\\\\\\\\\\\\\\\\n* [Rust](https://www.rust-lang.org/learn): Learn Rust, the programming language NEAR protocol is written in\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"Resources \\\\\\\\u{1f4da}\"}, {\"id\": \"qirhxe\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Ongoing projects\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n* [Protocol roadmap](https://medium.com/nearprotocol/q1-protocol-roadmap-update-progress-and-changes-e2d61626e4a1)\\\\\\\\\\\\\\\\n* Github \\\\\\\\\\\\\\\\n build-preview.mjs deploy_preview_environment.sh dev-gateway.mjs dev.sh migrate_tabs_addons.sh [Major projects](https://github.com/near/nearcore/labels/C-tracking-issue)\\\\\\\\\\\\\\\\n build-preview.mjs deploy_preview_environment.sh dev-gateway.mjs dev.sh migrate_tabs_addons.sh [Discussions](https://github.com/near/nearcore/discussions)\\\\\\\\\\\\\\\\n build-preview.mjs deploy_preview_environment.sh dev-gateway.mjs dev.sh migrate_tabs_addons.sh [PRs](https://github.com/near/nearcore/pulls)\\\\\\\\\\\\\\\\n* [Sponsored projects](https://near.social/#/devgovgigs.near/widget/gigs-board.pages.community.Sponsorship?label=protocol)\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"Projects \\\\\\\\u{1f9f1}\"}], \"admins\": [\"theori.near\", \"62493a10323479dbd12be49ec241f8ce726f44df5f5ffdef5c0b610c63cbe532\", \"72001f7532f5f1d3c3e295d2755507f434cf3610c9315c933607a5d6317a86bf\", \"victorkanu1.near\", \"pivortex.near\"], \"handle\": \"protocol\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreifte47rzqbcsarnu2yixf7wgd7khwzhgdqtzyeippfqj325eurvam\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreib7rk6ptbyvd6z6krlhohfzpefer5tcls4652zxqkf5o5bodwxlfy\", \"description\": \"Supporting the ongoing innovation of the NEAR Protocol.\", \"website_url\": \"https://near.zulipchat.com\", \"bio_markdown\": \"This space brings together individuals, experts, and organizations who are interested in contributing to the ongoing innovation of the NEAR protocol.\", \"github_handle\": \"near\", \"twitter_handle\": \"NEARChainStatus\", \"telegram_handle\": \"NEAR_Protocol_Community_Group\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.4360363909515e+21
    }
  },
  {
    "id": "7040515232",
    "receipt_id": "789GtSyrJUBQNAyKtbgrAMdU524SKRpiGpcZCwqrF9ZD",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "57ZtyCxAFqxRJvPNSQDcSwturRktotU866E2swoii8H9",
      "block_height": 124592323,
      "block_timestamp": 1722326243501585200
    },
    "receipt_outcome": {
      "gas_burnt": 17615654456266,
      "tokens_burnt": 1.7615654456266e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "4w7921P4RfuUMgcFszWim1Qxx63EGvW93nomGdAa2z9o",
    "included_in_block_hash": "CmfNjYTfgfUqNZXVeUuaVcrpBfTngzCJbGjzQVog9Dst",
    "block_timestamp": "1722326241637428498",
    "block": {
      "block_height": 124592321
    },
    "receipt_conversion_tokens_burnt": "33745756023200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.7615654456266e+21,
        "args": "{\"data\": {\"protocol.community.devhub.near\": {\"profile\": {\"name\": \"Protocol\", \"tags\": {\"protocol\": \"\", \"community\": \"\", \"announcements\": \"\"}, \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreifte47rzqbcsarnu2yixf7wgd7khwzhgdqtzyeippfqj325eurvam\"}, \"linktree\": {\"github\": \"near\", \"twitter\": \"NEARChainStatus\", \"website\": \"near.social/devhub.near/widget/app?page=community&handle=protocol\", \"telegram\": \"NEAR_Protocol_Community_Group\"}, \"description\": \"This space brings together individuals, experts, and organizations who are interested in contributing to the ongoing innovation of the NEAR protocol.\\\\\\\\n\\\\\\\\nLearn more about our community [on DevHub](/devhub.near/widget/app?page=community&handle=protocol).\", \"backgroundImage\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreib7rk6ptbyvd6z6krlhohfzpefer5tcls4652zxqkf5o5bodwxlfy\"}}}, \"discussions.protocol.community.devhub.near\": {\"profile\": {\"name\": \"Protocol (Community Discussions)\", \"tags\": {\"protocol\": \"\", \"community\": \"\", \"discussions\": \"\"}, \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreifte47rzqbcsarnu2yixf7wgd7khwzhgdqtzyeippfqj325eurvam\"}, \"linktree\": {\"github\": \"near\", \"twitter\": \"NEARChainStatus\", \"website\": \"near.social/devhub.near/widget/app?page=community&handle=protocol\", \"telegram\": \"NEAR_Protocol_Community_Group\"}, \"description\": \"Supporting the ongoing innovation of the NEAR Protocol.\\\\\\\\n\\\\\\\\nLearn more about our community [on DevHub](/devhub.near/widget/app?page=community&handle=protocol).\", \"backgroundImage\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreib7rk6ptbyvd6z6krlhohfzpefer5tcls4652zxqkf5o5bodwxlfy\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.4360363909515e+21
    }
  },
  {
    "id": "7048600739",
    "receipt_id": "DboWzm4bMwkaoMaNnjJcoZWASVTi8Xy1TzRfLAmB1uzG",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "4MY3BqbEh7fg1MDXDk7jEDGDjcZP2tUURHeir2Y5tTFH",
      "block_height": 124615538,
      "block_timestamp": 1722352258433217300
    },
    "receipt_outcome": {
      "gas_burnt": 1361541938437,
      "tokens_burnt": 136154193843700000000,
      "executor_account_id": "social.near",
      "status": false
    },
    "transaction_hash": "ApdHc4gzPtZNio4YTZwYCpWn14ZmQ8L931FV4ub8Looc",
    "included_in_block_hash": "8bTmHtmQZURSKbYpjDt5bVJhcJvQjr4P6W5Yp5JnBJZ3",
    "block_timestamp": "1722352257251083933",
    "block": {
      "block_height": 124615537
    },
    "receipt_conversion_tokens_burnt": "30833004801400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "grant_write_permission",
        "deposit": 0,
        "fee": 136154193843700000000,
        "args": "{\"keys\": [\"devhub.near/widget\"], \"public_key\": \"ed25519:3eLvVvLmB4gfJaZWYCwNLQXHhkxzJNvrdX5V8YCz1WMV\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": false
    },
    "outcomes_agg": {
      "transaction_fee": 166987198645100000000
    }
  },
  {
    "id": "7048601256",
    "receipt_id": "E5jMoEU8M7Uh2nvkHi9PBSGynRAULujFpaGFsU8VN89z",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "J5rmdjR4rVCFbwBQeiT8KW1UqizvYuKY1qcx3TAKuT98",
      "block_height": 124615539,
      "block_timestamp": 1722352259764872200
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "ApdHc4gzPtZNio4YTZwYCpWn14ZmQ8L931FV4ub8Looc",
    "included_in_block_hash": "8bTmHtmQZURSKbYpjDt5bVJhcJvQjr4P6W5Yp5JnBJZ3",
    "block_timestamp": "1722352257251083933",
    "block": {
      "block_height": 124615537
    },
    "receipt_conversion_tokens_burnt": "30833004801400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8632047163513458e+22,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": false
    },
    "outcomes_agg": {
      "transaction_fee": 166987198645100000000
    }
  },
  {
    "id": "7049893119",
    "receipt_id": "21kachhBpfKvL5S5Jv9vCusgw2msBoaLkkee9dS83kGf",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "CLu5qGzyxAKX67usxyqsxdDsrZTNg7q3xApFTPTkPhrS",
      "block_height": 124619323,
      "block_timestamp": 1722356533309114600
    },
    "receipt_outcome": {
      "gas_burnt": 3610585627573,
      "tokens_burnt": 361058562757300000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "2r5z1FK91iaqNbhzZdk2zfNHH6RN2MUGFt4i1RR1D1un",
    "included_in_block_hash": "Gchy3oZu68rw4NxMhPfUfJJG6L5Mdb6RGXmGXFHXHXrW",
    "block_timestamp": "1722356532379892509",
    "block": {
      "block_height": 124619322
    },
    "receipt_conversion_tokens_burnt": "30833004801400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "grant_write_permission",
        "deposit": 1,
        "fee": 361058562757300000000,
        "args": "{\"keys\": [\"devhub.near/widget\"], \"public_key\": \"ed25519:3eLvVvLmB4gfJaZWYCwNLQXHhkxzJNvrdX5V8YCz1WMV\"}"
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 391891567558700000000
    }
  },
  {
    "id": "7049893525",
    "receipt_id": "7wA2e8wMnBxazkE6LAaDHiKQvNQGzyiXqMT8AL256XUT",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7MvoHhtym8pVHmqxZ59M86JPyYLtc46YqkWWLWHBbPZj",
      "block_height": 124619324,
      "block_timestamp": 1722356534387173000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "2r5z1FK91iaqNbhzZdk2zfNHH6RN2MUGFt4i1RR1D1un",
    "included_in_block_hash": "Gchy3oZu68rw4NxMhPfUfJJG6L5Mdb6RGXmGXFHXHXrW",
    "block_timestamp": "1722356532379892509",
    "block": {
      "block_height": 124619322
    },
    "receipt_conversion_tokens_burnt": "30833004801400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8407142794599858e+22,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 391891567558700000000
    }
  },
  {
    "id": "7049990181",
    "receipt_id": "87zCbBdcubBd4JqpCqK1vrbBtaQPiPeDsNihoX5YAcR1",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "H9tfDpYRaGTRuK8LCTra4sJdo6Ej2RPw5WWrogMpA5in",
      "block_height": 124619603,
      "block_timestamp": 1722356854295353000
    },
    "receipt_outcome": {
      "gas_burnt": 17931538620716,
      "tokens_burnt": 1.7931538620716e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "Cj5rqnTvkVAvYNxoLXkJBZztZSm5BgdbGaQZY6vA1gai",
    "included_in_block_hash": "3apy5rMh1C1jDtLGMQDrdoshR8nVkk58ZEX893PPb65c",
    "block_timestamp": "1722356853250071599",
    "block": {
      "block_height": 124619602
    },
    "receipt_conversion_tokens_burnt": "45880840621400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.7931538620716e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.entity.post.Panel\": {\"\": \"//////////////////////////////////////////////////////////////////////\\\\\\\\n///STOPWORDS//////////////////////////////////////////////////////////\\\\\\\\nconst stopWords = [\\\\\\\\n  \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"above\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"after\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"again\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"against\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"and\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"any\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"are\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"because\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"been\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"before\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"being\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"below\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"between\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"both\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"but\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"can\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"cannot\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"could\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"did\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"does\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"doing\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"during\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"each\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"etc\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"few\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"for\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"from\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"further\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"had\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"has\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"have\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"having\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"her\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"hers\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"herself\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"him\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"himself\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"his\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"how\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"into\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"its\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"itself\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"just\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"more\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"most\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"myself\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"nor\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"not\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"now\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"off\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"once\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"only\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"other\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"our\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"ours\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"ourselves\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"out\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"over\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"own\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"same\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"she\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"should\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"some\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"still\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"such\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"than\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"that\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"the\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"their\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"theirs\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"them\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"themselves\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"then\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"there\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"these\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"they\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"this\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"those\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"through\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"too\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"under\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"until\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"very\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"was\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"were\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"what\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"when\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"where\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"which\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"while\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"who\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"whom\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"why\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"will\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"with\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"you\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"your\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"yours\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"yourself\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"yourselves\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"www\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"http\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"com\\\\\\\\\\\\\\\",\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst stopWordsDictionary = {};\\\\\\\\nfor (let i = 0; i < stopWords.length; i++) {\\\\\\\\n  stopWordsDictionary[stopWords[i]] = true;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isStopWord(word) {\\\\\\\\n  return stopWordsDictionary.hasOwnProperty(word.toLowerCase());\\\\\\\\n}\\\\\\\\n//////////////////////////////////////////////////////////////////////\\\\\\\\n///SYNONYMS///////////////////////////////////////////////////////////\\\\\\\\nconst synonyms = {\\\\\\\\n  ether: \\\\\\\\\\\\\\\"ethereum\\\\\\\\\\\\\\\",\\\\\\\\n  eth: \\\\\\\\\\\\\\\"ethereum\\\\\\\\\\\\\\\",\\\\\\\\n  either: \\\\\\\\\\\\\\\"ethereum\\\\\\\\\\\\\\\",\\\\\\\\n  app: \\\\\\\\\\\\\\\"application\\\\\\\\\\\\\\\",\\\\\\\\n  cryptocyrrency: \\\\\\\\\\\\\\\"crypto\\\\\\\\\\\\\\\",\\\\\\\\n  developerdao: \\\\\\\\\\\\\\\"devdao\\\\\\\\\\\\\\\",\\\\\\\\n  dev: \\\\\\\\\\\\\\\"develop\\\\\\\\\\\\\\\",\\\\\\\\n  doc: \\\\\\\\\\\\\\\"document\\\\\\\\\\\\\\\",\\\\\\\\n  lib: \\\\\\\\\\\\\\\"librari\\\\\\\\\\\\\\\",\\\\\\\\n  saw: \\\\\\\\\\\\\\\"see\\\\\\\\\\\\\\\",\\\\\\\\n  seen: \\\\\\\\\\\\\\\"see\\\\\\\\\\\\\\\",\\\\\\\\n  tweet: \\\\\\\\\\\\\\\"twitter\\\\\\\\\\\\\\\",\\\\\\\\n  paid: \\\\\\\\\\\\\\\"pai\\\\\\\\\\\\\\\",\\\\\\\\n  src: \\\\\\\\\\\\\\\"sourc\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst applySynonym = (word) => {\\\\\\\\n  if (synonyms.hasOwnProperty(word.toLowerCase())) {\\\\\\\\n    return synonyms[word];\\\\\\\\n  }\\\\\\\\n  return word;\\\\\\\\n};\\\\\\\\n//////////////////////////////////////////////////////////////////////\\\\\\\\n///STEMMING///////////////////////////////////////////////////////////\\\\\\\\nconst step2list = {\\\\\\\\n  ational: \\\\\\\\\\\\\\\"ate\\\\\\\\\\\\\\\",\\\\\\\\n  tional: \\\\\\\\\\\\\\\"tion\\\\\\\\\\\\\\\",\\\\\\\\n  enci: \\\\\\\\\\\\\\\"ence\\\\\\\\\\\\\\\",\\\\\\\\n  anci: \\\\\\\\\\\\\\\"ance\\\\\\\\\\\\\\\",\\\\\\\\n  izer: \\\\\\\\\\\\\\\"ize\\\\\\\\\\\\\\\",\\\\\\\\n  bli: \\\\\\\\\\\\\\\"ble\\\\\\\\\\\\\\\",\\\\\\\\n  alli: \\\\\\\\\\\\\\\"al\\\\\\\\\\\\\\\",\\\\\\\\n  entli: \\\\\\\\\\\\\\\"ent\\\\\\\\\\\\\\\",\\\\\\\\n  eli: \\\\\\\\\\\\\\\"e\\\\\\\\\\\\\\\",\\\\\\\\n  ousli: \\\\\\\\\\\\\\\"ous\\\\\\\\\\\\\\\",\\\\\\\\n  ization: \\\\\\\\\\\\\\\"ize\\\\\\\\\\\\\\\",\\\\\\\\n  ation: \\\\\\\\\\\\\\\"ate\\\\\\\\\\\\\\\",\\\\\\\\n  ator: \\\\\\\\\\\\\\\"ate\\\\\\\\\\\\\\\",\\\\\\\\n  alism: \\\\\\\\\\\\\\\"al\\\\\\\\\\\\\\\",\\\\\\\\n  iveness: \\\\\\\\\\\\\\\"ive\\\\\\\\\\\\\\\",\\\\\\\\n  fulness: \\\\\\\\\\\\\\\"ful\\\\\\\\\\\\\\\",\\\\\\\\n  ousness: \\\\\\\\\\\\\\\"ous\\\\\\\\\\\\\\\",\\\\\\\\n  aliti: \\\\\\\\\\\\\\\"al\\\\\\\\\\\\\\\",\\\\\\\\n  iviti: \\\\\\\\\\\\\\\"ive\\\\\\\\\\\\\\\",\\\\\\\\n  biliti: \\\\\\\\\\\\\\\"ble\\\\\\\\\\\\\\\",\\\\\\\\n  logi: \\\\\\\\\\\\\\\"log\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\n/** @type {Record<string, string>} */\\\\\\\\nconst step3list = {\\\\\\\\n  icate: \\\\\\\\\\\\\\\"ic\\\\\\\\\\\\\\\",\\\\\\\\n  ative: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  alize: \\\\\\\\\\\\\\\"al\\\\\\\\\\\\\\\",\\\\\\\\n  iciti: \\\\\\\\\\\\\\\"ic\\\\\\\\\\\\\\\",\\\\\\\\n  ical: \\\\\\\\\\\\\\\"ic\\\\\\\\\\\\\\\",\\\\\\\\n  ful: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  ness: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst gt0 = /^([^aeiou][^aeiouy]*)?([aeiouy][aeiou]*)([^aeiou][^aeiouy]*)/;\\\\\\\\nconst eq1 =\\\\\\\\n  /^([^aeiou][^aeiouy]*)?([aeiouy][aeiou]*)([^aeiou][^aeiouy]*)([aeiouy][aeiou]*)?$/;\\\\\\\\nconst gt1 =\\\\\\\\n  /^([^aeiou][^aeiouy]*)?(([aeiouy][aeiou]*)([^aeiou][^aeiouy]*)){2,}/;\\\\\\\\nconst vowelInStem = /^([^aeiou][^aeiouy]*)?[aeiouy]/;\\\\\\\\nconst consonantLike = /^([^aeiou][^aeiouy]*)[aeiouy][^aeiouwxy]$/;\\\\\\\\n\\\\\\\\n// Exception expressions.\\\\\\\\nconst sfxLl = /ll$/;\\\\\\\\nconst sfxE = /^(.+?)e$/;\\\\\\\\nconst sfxY = /^(.+?)y$/;\\\\\\\\nconst sfxIon = /^(.+?(s|t))(ion)$/;\\\\\\\\nconst sfxEdOrIng = /^(.+?)(ed|ing)$/;\\\\\\\\nconst sfxAtOrBlOrIz = /(at|bl|iz)$/;\\\\\\\\nconst sfxEED = /^(.+?)eed$/;\\\\\\\\nconst sfxS = /^.+?[^s]s$/;\\\\\\\\nconst sfxSsesOrIes = /^.+?(ss|i)es$/;\\\\\\\\nconst sfxMultiConsonantLike = /([^aeiouylsz])\\\\\\\\\\\\\\\\1$/;\\\\\\\\nconst step2 =\\\\\\\\n  /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\\\\\\\\nconst step3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\\\\\\\\nconst step4 =\\\\\\\\n  /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Get the stem from a given value.\\\\\\\\n *\\\\\\\\n * @param {string} value\\\\\\\\n *   Value to stem.\\\\\\\\n * @returns {string}\\\\\\\\n *   Stem for `value`\\\\\\\\n */\\\\\\\\n// eslint-disable-next-line complexity\\\\\\\\nfunction stemmer(value) {\\\\\\\\n  let result = value.toLowerCase();\\\\\\\\n\\\\\\\\n  // Exit early.\\\\\\\\n  if (result.length < 3) {\\\\\\\\n    return result;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /** @type {boolean} */\\\\\\\\n  let firstCharacterWasLowerCaseY = false;\\\\\\\\n\\\\\\\\n  // Detect initial `y`, make sure it never matches.\\\\\\\\n  if (\\\\\\\\n    result.codePointAt(0) === 121 // Lowercase Y\\\\\\\\n  ) {\\\\\\\\n    firstCharacterWasLowerCaseY = true;\\\\\\\\n    result = \\\\\\\\\\\\\\\"Y\\\\\\\\\\\\\\\" + result.slice(1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 1a.\\\\\\\\n  if (sfxSsesOrIes.test(result)) {\\\\\\\\n    // Remove last two characters.\\\\\\\\n    result = result.slice(0, -2);\\\\\\\\n  } else if (sfxS.test(result)) {\\\\\\\\n    // Remove last character.\\\\\\\\n    result = result.slice(0, -1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /** @type {RegExpMatchArray|null} */\\\\\\\\n  let match;\\\\\\\\n\\\\\\\\n  // Step 1b.\\\\\\\\n  if ((match = sfxEED.exec(result))) {\\\\\\\\n    if (gt0.test(match[1])) {\\\\\\\\n      // Remove last character.\\\\\\\\n      result = result.slice(0, -1);\\\\\\\\n    }\\\\\\\\n  } else if ((match = sfxEdOrIng.exec(result)) && vowelInStem.test(match[1])) {\\\\\\\\n    result = match[1];\\\\\\\\n\\\\\\\\n    if (sfxAtOrBlOrIz.test(result)) {\\\\\\\\n      // Append `e`.\\\\\\\\n      result += \\\\\\\\\\\\\\\"e\\\\\\\\\\\\\\\";\\\\\\\\n    } else if (sfxMultiConsonantLike.test(result)) {\\\\\\\\n      // Remove last character.\\\\\\\\n      result = result.slice(0, -1);\\\\\\\\n    } else if (consonantLike.test(result)) {\\\\\\\\n      // Append `e`.\\\\\\\\n      result += \\\\\\\\\\\\\\\"e\\\\\\\\\\\\\\\";\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 1c.\\\\\\\\n  if ((match = sfxY.exec(result)) && vowelInStem.test(match[1])) {\\\\\\\\n    // Remove suffixing `y` and append `i`.\\\\\\\\n    result = match[1] + \\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 2.\\\\\\\\n  if ((match = step2.exec(result)) && gt0.test(match[1])) {\\\\\\\\n    result = match[1] + step2list[match[2]];\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 3.\\\\\\\\n  if ((match = step3.exec(result)) && gt0.test(match[1])) {\\\\\\\\n    result = match[1] + step3list[match[2]];\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 4.\\\\\\\\n  if ((match = step4.exec(result))) {\\\\\\\\n    if (gt1.test(match[1])) {\\\\\\\\n      result = match[1];\\\\\\\\n    }\\\\\\\\n  } else if ((match = sfxIon.exec(result)) && gt1.test(match[1])) {\\\\\\\\n    result = match[1];\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 5.\\\\\\\\n  if (\\\\\\\\n    (match = sfxE.exec(result)) &&\\\\\\\\n    (gt1.test(match[1]) ||\\\\\\\\n      (eq1.test(match[1]) && !consonantLike.test(match[1])))\\\\\\\\n  ) {\\\\\\\\n    result = match[1];\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (sfxLl.test(result) && gt1.test(result)) {\\\\\\\\n    result = result.slice(0, -1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Turn initial `Y` back to `y`.\\\\\\\\n  if (firstCharacterWasLowerCaseY) {\\\\\\\\n    result = \\\\\\\\\\\\\\\"y\\\\\\\\\\\\\\\" + result.slice(1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return result;\\\\\\\\n}\\\\\\\\n\\\\\\\\n//////////////////////////////////////////////////////////////////////\\\\\\\\n///SPELLCHECK/////////////////////////////////////////////////////////\\\\\\\\nfunction levenshteinDistance(s, t, threshold) {\\\\\\\\n  const BIG_NUMBER = 10000;\\\\\\\\n  if (s == null || t == null) {\\\\\\\\n    return BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n  if (threshold < 0) {\\\\\\\\n    return BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n  let n = s.length;\\\\\\\\n  let m = t.length;\\\\\\\\n  if (Math.abs(n - m) >= threshold) {\\\\\\\\n    return BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // if one string is empty, the edit distance is necessarily the length of the other\\\\\\\\n  if (n == 0) {\\\\\\\\n    return m <= threshold ? m : BIG_NUMBER;\\\\\\\\n  } else if (m == 0) {\\\\\\\\n    return n <= threshold ? n : BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (n > m) {\\\\\\\\n    // swap the two strings to consume less memory\\\\\\\\n    let temp = s;\\\\\\\\n    s = t;\\\\\\\\n    t = temp;\\\\\\\\n    let tempSize = n;\\\\\\\\n    n = m;\\\\\\\\n    m = tempSize;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  let p = Array.from({ length: n + 1 }, () => 0); // \\\\\\\\\\\\'previous\\\\\\\\\\\\' cost array, horizontally\\\\\\\\n  let d = Array.from({ length: n + 1 }, () => 0); // cost array, horizontally\\\\\\\\n  let _d; // placeholder to assist in swapping p and d\\\\\\\\n\\\\\\\\n  // fill in starting table values\\\\\\\\n  const boundary = Math.min(n, threshold) + 1;\\\\\\\\n  for (let i = 0; i < boundary; i++) {\\\\\\\\n    p[i] = i;\\\\\\\\n  }\\\\\\\\n  // these fills ensure that the value above the rightmost entry of our\\\\\\\\n  // stripe will be ignored in following loop iterations\\\\\\\\n  for (let i = boundary; i < p.length; i++) {\\\\\\\\n    p[i] = BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n  for (let i = 0; i < d.length; i++) {\\\\\\\\n    d[i] = BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // iterates through t\\\\\\\\n  for (let j = 1; j <= m; j++) {\\\\\\\\n    const t_j = t.charAt(j - 1); // jth character of t\\\\\\\\n    d[0] = j;\\\\\\\\n\\\\\\\\n    // compute stripe indices, constrain to array size\\\\\\\\n    const min = Math.max(1, j - threshold);\\\\\\\\n    const max = j > BIG_NUMBER - threshold ? n : Math.min(n, j + threshold);\\\\\\\\n\\\\\\\\n    // the stripe may lead off of the table if s and t are of different sizes\\\\\\\\n    if (min > max) {\\\\\\\\n      return BIG_NUMBER;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // ignore entry left of leftmost\\\\\\\\n    if (min > 1) {\\\\\\\\n      d[min - 1] = BIG_NUMBER;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // iterates through [min, max] in s\\\\\\\\n    for (let i = min; i <= max; i++) {\\\\\\\\n      if (s.charAt(i - 1) == t_j) {\\\\\\\\n        // diagonally left and up\\\\\\\\n        d[i] = p[i - 1];\\\\\\\\n      } else {\\\\\\\\n        // 1 + minimum of cell to the left, to the top, diagonally left and up\\\\\\\\n        d[i] = 1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // copy current distance counts to \\\\\\\\\\\\'previous row\\\\\\\\\\\\' distance counts\\\\\\\\n    _d = p;\\\\\\\\n    p = d;\\\\\\\\n    d = _d;\\\\\\\\n  }\\\\\\\\n  // we don\\\\\\\\\\\\'t need to check for threshold here because we did it inside the loop\\\\\\\\n  return p[n] <= threshold ? p[n] : BIG_NUMBER;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst spellcheckQueryProcessing = (query, dictionary) => {\\\\\\\\n  // Split text document into words\\\\\\\\n  const words = stemAndFilterQuery(query);\\\\\\\\n  const dictionaryArray = Object.keys(dictionary);\\\\\\\\n  // Iterate over each word in the text\\\\\\\\n  for (let i = 0; i < words.length; i++) {\\\\\\\\n    let word = words[i].toLowerCase().replace(/[^a-z0-9]/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n    // If the word is not in the dictionary, find the closest match\\\\\\\\n    if (!dictionary.hasOwnProperty(word)) {\\\\\\\\n      let closestMatch = undefined;\\\\\\\\n      let closestDistance = word.length;\\\\\\\\n      let allowedDistance = Math.min(word.length - 1, 3);\\\\\\\\n      // Iterate over each word in the dictionary\\\\\\\\n      if (word.length > 1) {\\\\\\\\n        for (let j = 0; j < dictionaryArray.length; j++) {\\\\\\\\n          let dictWord = dictionaryArray[j];\\\\\\\\n          let distance = levenshteinDistance(word, dictWord, allowedDistance);\\\\\\\\n\\\\\\\\n          // If the distance is less than the closest distance, update the closest match\\\\\\\\n          if (distance <= allowedDistance && distance < closestDistance) {\\\\\\\\n            closestMatch = dictWord;\\\\\\\\n            closestDistance = distance;\\\\\\\\n          }\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      // Replace the misspelled word with the closest match\\\\\\\\n      words[i] = closestMatch;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return words.filter((word) => !!word);\\\\\\\\n};\\\\\\\\n\\\\\\\\n//////////////////////////////////////////////////////////////////////\\\\\\\\n///INDEXER&SEARCH/////////////////////////////////////////////////////\\\\\\\\nconst fillDictionaryWith = (dict, text, id) => {\\\\\\\\n  let word = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  for (let i = 0; i < text.length; i++) {\\\\\\\\n    const char = text.charAt(i);\\\\\\\\n    const nextChar = text.charAt(i + 1);\\\\\\\\n    if (/\\\\\\\\\\\\\\\\w/.test(char) || (char === \\\\\\\\\\\\\\\".\\\\\\\\\\\\\\\" && /\\\\\\\\\\\\\\\\w/.test(nextChar))) {\\\\\\\\n      word += char.toLowerCase();\\\\\\\\n    } else if (word.length > 0) {\\\\\\\\n      const processedWord = applySynonym(stemmer(word));\\\\\\\\n      if (processedWord.length > 1 && !isStopWord(processedWord)) {\\\\\\\\n        const oldValue = dict[processedWord] || [];\\\\\\\\n        dict[processedWord] = [...oldValue, id];\\\\\\\\n      }\\\\\\\\n      word = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  const processedWord = applySynonym(stemmer(word));\\\\\\\\n  if (processedWord.length > 1 && !isStopWord(processedWord)) {\\\\\\\\n    const oldValue = dict[stemmer(processedWord)] || [];\\\\\\\\n    dict[stemmer(processedWord)] = [...oldValue, id];\\\\\\\\n  }\\\\\\\\n  return dict;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst buildIndex = (posts) => {\\\\\\\\n  let index = {};\\\\\\\\n\\\\\\\\n  posts.forEach((post) => {\\\\\\\\n    const title = post.snapshot.name;\\\\\\\\n    const labels = post.snapshot.labels.join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n    const text = post.snapshot.description;\\\\\\\\n    const postType = post.snapshot.post_type;\\\\\\\\n    const authorId = post.author_id;\\\\\\\\n    const postText = `${authorId} ${postType} ${title} ${labels} ${text}`;\\\\\\\\n    index = fillDictionaryWith(index, postText, post.id);\\\\\\\\n  });\\\\\\\\n  return index;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst stemAndFilterQuery = (query) => {\\\\\\\\n  return Object.keys(fillDictionaryWith({}, query));\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst sortSearchResult = (searchResult) => {\\\\\\\\n  // create a map to count the frequency of each element\\\\\\\\n  const freq = new Map();\\\\\\\\n  for (const num of searchResult) {\\\\\\\\n    freq.set(num, (freq.get(num) || 0) + 1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // define a custom comparison function to sort the array\\\\\\\\n  function compare(a, b) {\\\\\\\\n    // compare the frequency of the two elements\\\\\\\\n    const freqDiff = freq.get(b) - freq.get(a);\\\\\\\\n    if (freqDiff !== 0) {\\\\\\\\n      return freqDiff; // if they have different frequency, sort by frequency\\\\\\\\n    } else {\\\\\\\\n      return 0; // if they have the same frequency, leave as it is. Will be sorted by search term, by date\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort the array using the custom comparison function\\\\\\\\n  searchResult.sort(compare);\\\\\\\\n  return searchResult.filter(\\\\\\\\n    (elem, index) => searchResult.indexOf(elem) === index\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst search = (processedQueryArray, index) => {\\\\\\\\n  return sortSearchResult(\\\\\\\\n    processedQueryArray.flatMap((queryWord) => {\\\\\\\\n      const termSearchRes = index[queryWord].reverse();\\\\\\\\n      const termSortedSearchRes = sortSearchResult(termSearchRes);\\\\\\\\n      return termSortedSearchRes;\\\\\\\\n    })\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n//////////////////////////////////////////////////////////////////////\\\\\\\\n///UI&UX//////////////////////////////////////////////////////////////\\\\\\\\n//Run search and spelling computation every time the search bar modified\\\\\\\\n//but no more frequent than 1 time per 1.5 seconds\\\\\\\\nconst amountOfResultsToShowFirst = 5;\\\\\\\\n\\\\\\\\nconst buildPostsIndex = () => {\\\\\\\\n  return Near.asyncView(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_posts\\\\\\\\\\\\\\\").then((posts) => {\\\\\\\\n    const index = buildIndex(posts);\\\\\\\\n    const data = posts.reduce((acc, post) => {\\\\\\\\n      acc[post.id] = post;\\\\\\\\n      return acc;\\\\\\\\n    }, {});\\\\\\\\n    return { index, data };\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getProcessedPostsCached = () => {\\\\\\\\n  return useCache(() => buildPostsIndex(), \\\\\\\\\\\\\\\"processedPostsCached\\\\\\\\\\\\\\\");\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (!state.interval) {\\\\\\\\n  let termStorage = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  Storage.privateSet(\\\\\\\\\\\\\\\"term\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n  setInterval(() => {\\\\\\\\n    const currentInput = Storage.privateGet(\\\\\\\\\\\\\\\"term\\\\\\\\\\\\\\\");\\\\\\\\n    if (currentInput !== termStorage) {\\\\\\\\n      termStorage = currentInput;\\\\\\\\n      computeResults(termStorage);\\\\\\\\n    }\\\\\\\\n  }, 1500);\\\\\\\\n  State.update({\\\\\\\\n    interval: true,\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst computeResults = (term) => {\\\\\\\\n  const start = new Date().getTime();\\\\\\\\n  const processedPostsCached = useCache(\\\\\\\\n    () =>\\\\\\\\n      buildPostsIndex().then((processedPosts) => {\\\\\\\\n        // Run query first time posts retrieved\\\\\\\\n        const query = term;\\\\\\\\n        const processedQuery = spellcheckQueryProcessing(\\\\\\\\n          query,\\\\\\\\n          processedPosts.index\\\\\\\\n        );\\\\\\\\n        const searchResult = search(processedQuery, processedPosts.index);\\\\\\\\n        State.update({\\\\\\\\n          searchResult,\\\\\\\\n          shownSearchResults: searchResult.slice(0, amountOfResultsToShowFirst),\\\\\\\\n          processedQuery,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n        return processedPosts;\\\\\\\\n      }),\\\\\\\\n    \\\\\\\\\\\\\\\"processedPostsCached\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n  if (processedPostsCached) {\\\\\\\\n    // Run query every other time after data retrieved and cached\\\\\\\\n    const query = term;\\\\\\\\n    const processedQuery = spellcheckQueryProcessing(\\\\\\\\n      query,\\\\\\\\n      processedPostsCached.index\\\\\\\\n    );\\\\\\\\n    const searchResult = search(processedQuery, processedPostsCached.index);\\\\\\\\n    console.log(processedQuery);\\\\\\\\n    console.log(searchResult);\\\\\\\\n    State.update({\\\\\\\\n      searchResult,\\\\\\\\n      shownSearchResults: searchResult.slice(0, 10),\\\\\\\\n      processedQuery,\\\\\\\\n      loading: false,\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n  const end = new Date().getTime();\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"search time: \\\\\\\\\\\\\\\", end - start);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst updateInput = (term) => {\\\\\\\\n  Storage.privateSet(\\\\\\\\\\\\\\\"term\\\\\\\\\\\\\\\", term);\\\\\\\\n  State.update({\\\\\\\\n    term,\\\\\\\\n    loading: true,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getSearchResultsKeywordsFor = (postId) => {\\\\\\\\n  const index = getProcessedPostsCached().index;\\\\\\\\n  return state.processedQuery.filter((queryWord) => {\\\\\\\\n    return index[queryWord].includes(postId);\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst showMoreSearchResults = () => {\\\\\\\\n  const shownSearchResults = state.shownSearchResults || [];\\\\\\\\n  const newShownSearchResults = state.searchResult.slice(\\\\\\\\n    0,\\\\\\\\n    shownSearchResults.length + amountOfResultsToShowFirst\\\\\\\\n  );\\\\\\\\n  State.update({ shownSearchResults: newShownSearchResults });\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-row gap-4\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-row position-relative w-25\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"position-absolute d-flex ps-3 flex-column h-100 justify-center\\\\\\\\\\\\\\\">\\\\\\\\n          {state.loading ? (\\\\\\\\n            <span\\\\\\\\n              className=\\\\\\\\\\\\\\\"spinner-grow spinner-grow-sm m-auto\\\\\\\\\\\\\\\"\\\\\\\\n              role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n              aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n            />\\\\\\\\n          ) : (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-search m-auto\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n        <input\\\\\\\\n          type=\\\\\\\\\\\\\\\"search\\\\\\\\\\\\\\\"\\\\\\\\n          className=\\\\\\\\\\\\\\\"ps-5 form-control border border-0 bg-light\\\\\\\\\\\\\\\"\\\\\\\\n          value={state.term ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n          onChange={(e) => updateInput(e.target.value)}\\\\\\\\n          placeholder={props.placeholder ?? `Search Posts`}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n        <button\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn btn-light dropdown-toggle\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n          aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          Sort\\\\\\\\n        </button>\\\\\\\\n        <ul class=\\\\\\\\\\\\\\\"dropdown-menu px-2 shadow\\\\\\\\\\\\\\\">\\\\\\\\n          <li>\\\\\\\\n            <a\\\\\\\\n              style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              Latest\\\\\\\\n            </a>\\\\\\\\n          </li>\\\\\\\\n          <li>\\\\\\\\n            <a\\\\\\\\n              style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              Hottest\\\\\\\\n            </a>\\\\\\\\n          </li>\\\\\\\\n          <li>\\\\\\\\n            <a\\\\\\\\n              style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              All replies\\\\\\\\n            </a>\\\\\\\\n          </li>\\\\\\\\n        </ul>\\\\\\\\n      </div>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.post-search.by-author\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            authorQuery: props.authorQuery,\\\\\\\\n            onAuthorSearch: props.onAuthorSearch,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n      <div>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.post-search.by-tag\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            tagQuery: props.tagQuery,\\\\\\\\n            onTagSearch: props.onTagSearch,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-row-reverse flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n        {props.children}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    {state.processedQuery &&\\\\\\\\n      state.processedQuery.length > 0 &&\\\\\\\\n      state.term.toLowerCase().trim() !== state.processedQuery.join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\") && (\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"mb-2\\\\\\\\\\\\\\\" style={{ \\\\\\\\\\\\\\\"font-family\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"monospace\\\\\\\\\\\\\\\" }}>\\\\\\\\n          Looking for\\\\\\\\n          <strong>{state.processedQuery.join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}</strong>:\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    {state.term && state.term.length > 1 && state.searchResult ? (\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.List\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          searchResult: {\\\\\\\\n            postIds: state.searchResult,\\\\\\\\n            keywords: Object.fromEntries(\\\\\\\\n              state.searchResult.map((postId) => {\\\\\\\\n                return [postId, getSearchResultsKeywordsFor(postId)];\\\\\\\\n              })\\\\\\\\n            ),\\\\\\\\n          },\\\\\\\\n          recency: props.recency,\\\\\\\\n          tag: props.tag,\\\\\\\\n          author: props.author,\\\\\\\\n        }}\\\\\\\\n        key={key}\\\\\\\\n      />\\\\\\\\n    ) : (\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.List\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          recency: props.recency,\\\\\\\\n          tag: props.tag,\\\\\\\\n          author: props.author,\\\\\\\\n          transactionHashes: props.transactionHashes,\\\\\\\\n        }}\\\\\\\\n        key={key}\\\\\\\\n      />\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.Editor\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"PROPOSAL_EDIT\\\\\\\\\\\\\\\";\\\\\\\\nhref || (href = () => {});\\\\\\\\nconst { getLinkUsingCurrentGateway } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\"\\\\\\\\n) || { getLinkUsingCurrentGateway: () => {} };\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs = getLinkUsingCurrentGateway(\\\\\\\\n  `devhub.near/widget/app?page=community&handle=developer-dao&tab=funding`\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!author) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.LoginScreen\\\\\\\\\\\\\\\"} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nlet editProposalData = null;\\\\\\\\nlet draftProposalData = null;\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editProposalData = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n    proposal_id: parseInt(id),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  input {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .h6 {\\\\\\\\n      font-size: 14px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .text-sm {\\\\\\\\n      font-size: 11px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst tokensOptions = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\" },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"OTHER\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst devdaoAccount = \\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst [category, setCategory] = useState(null);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [linkedProposals, setLinkedProposals] = useState([]);\\\\\\\\nconst [receiverAccount, setReceiverAccount] = useState(context.accountId);\\\\\\\\nconst [requestedSponsor, setRequestedSponsor] = useState(devdaoAccount);\\\\\\\\nconst [requestedSponsorshipAmount, setRequestedSponsorshipAmount] =\\\\\\\\n  useState(null);\\\\\\\\nconst [requestedSponsorshipToken, setRequestedSponsorshipToken] = useState(\\\\\\\\n  tokensOptions[2]\\\\\\\\n);\\\\\\\\nconst [supervisor, setSupervisor] = useState(null);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\nconst [selectedStatus, setSelectedStatus] = useState(\\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\");\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\n\\\\\\\\nconst [showProposalPage, setShowProposalPage] = useState(false); // when user creates/edit a proposal and confirm the txn, this is true\\\\\\\\nconst [proposalId, setProposalId] = useState(null);\\\\\\\\nconst [proposalIdsArray, setProposalIdsArray] = useState(null);\\\\\\\\nconst [isTxnCreated, setCreateTxn] = useState(false);\\\\\\\\nconst [oldProposalData, setOldProposalData] = useState(null);\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftProposalData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editProposalData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      category: category,\\\\\\\\n      summary: summary,\\\\\\\\n      requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n      requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n      receiver_account: receiverAccount,\\\\\\\\n      supervisor: supervisor,\\\\\\\\n      requested_sponsor: requestedSponsor,\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [\\\\\\\\n    title,\\\\\\\\n    summary,\\\\\\\\n    description,\\\\\\\\n    category,\\\\\\\\n    requestedSponsorshipAmount,\\\\\\\\n    requestedSponsorshipToken,\\\\\\\\n    receiverAccount,\\\\\\\\n    supervisor,\\\\\\\\n    requestedSponsor,\\\\\\\\n  ]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (allowDraft) {\\\\\\\\n    let data = editProposalData || JSON.parse(draftProposalData);\\\\\\\\n    let snapshot = data.snapshot;\\\\\\\\n    if (data) {\\\\\\\\n      if (timestamp) {\\\\\\\\n        snapshot =\\\\\\\\n          data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n          data.snapshot;\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        draftProposalData &&\\\\\\\\n        editProposalData &&\\\\\\\\n        editProposalData.id === JSON.parse(draftProposalData).id\\\\\\\\n      ) {\\\\\\\\n        snapshot = {\\\\\\\\n          ...editProposalData.snapshot,\\\\\\\\n          ...JSON.parse(draftProposalData).snapshot,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n      setCategory(snapshot.category);\\\\\\\\n      setTitle(snapshot.name);\\\\\\\\n      setSummary(snapshot.summary);\\\\\\\\n      setDescription(snapshot.description);\\\\\\\\n      setReceiverAccount(snapshot.receiver_account);\\\\\\\\n      setRequestedSponsor(snapshot.requested_sponsor);\\\\\\\\n      setRequestedSponsorshipAmount(snapshot.requested_sponsorship_usd_amount);\\\\\\\\n      setSupervisor(snapshot.supervisor);\\\\\\\\n\\\\\\\\n      const token = tokensOptions.find(\\\\\\\\n        (item) => item.value === snapshot.requested_sponsorship_paid_in_currency\\\\\\\\n      );\\\\\\\\n      setRequestedSponsorshipToken(token ?? tokensOptions[2]);\\\\\\\\n      if (isEditPage) {\\\\\\\\n        setConsent({ toc: true, coc: true });\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    setLoading(false);\\\\\\\\n  }\\\\\\\\n}, [editProposalData, draftProposalData, allowDraft]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (draftProposalData) {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n  }\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (showProposalPage) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  setDisabledSubmitBtn(\\\\\\\\n    isTxnCreated ||\\\\\\\\n      !title ||\\\\\\\\n      !description ||\\\\\\\\n      !summary ||\\\\\\\\n      !category ||\\\\\\\\n      !requestedSponsorshipAmount ||\\\\\\\\n      !receiverAccount ||\\\\\\\\n      !requestedSponsor ||\\\\\\\\n      !consent.toc ||\\\\\\\\n      !consent.coc\\\\\\\\n  );\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 10000);\\\\\\\\n\\\\\\\\n  return () => clearTimeout(handler);\\\\\\\\n}, [\\\\\\\\n  memoizedDraftData,\\\\\\\\n  draftKey,\\\\\\\\n  draftProposalData,\\\\\\\\n  consent,\\\\\\\\n  isTxnCreated,\\\\\\\\n  showProposalPage,\\\\\\\\n]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    editProposalData &&\\\\\\\\n    editProposalData?.snapshot?.linked_proposals?.length > 0\\\\\\\\n  ) {\\\\\\\\n    editProposalData.snapshot.linked_proposals.map((item) => {\\\\\\\\n      useCache(\\\\\\\\n        () =>\\\\\\\\n          Near.asyncView(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n            proposal_id: parseInt(item),\\\\\\\\n          }).then((proposal) => {\\\\\\\\n            setLinkedProposals([\\\\\\\\n              ...linkedProposals,\\\\\\\\n              {\\\\\\\\n                label: \\\\\\\\\\\\\\\"# \\\\\\\\\\\\\\\" + proposal.id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + proposal.snapshot.name,\\\\\\\\n                value: proposal.id,\\\\\\\\n              },\\\\\\\\n            ]);\\\\\\\\n          }),\\\\\\\\n        item + \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\",\\\\\\\\n        { subscribe: false }\\\\\\\\n      );\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n}, [editProposalData]);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n// show proposal created after txn approval for popup wallet\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isTxnCreated) {\\\\\\\\n    if (editProposalData) {\\\\\\\\n      setOldProposalData(editProposalData);\\\\\\\\n      if (\\\\\\\\n        editProposalData &&\\\\\\\\n        typeof editProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        oldProposalData &&\\\\\\\\n        typeof oldProposalData === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        JSON.stringify(editProposalData) !== JSON.stringify(oldProposalData)\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(editProposalData.id);\\\\\\\\n        setShowProposalPage(true);\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      const proposalIds = Near.view(\\\\\\\\n        \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n        \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      if (Array.isArray(proposalIds) && !proposalIdsArray) {\\\\\\\\n        setProposalIdsArray(proposalIds);\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        Array.isArray(proposalIds) &&\\\\\\\\n        Array.isArray(proposalIdsArray) &&\\\\\\\\n        proposalIds.length !== proposalIdsArray.length\\\\\\\\n      ) {\\\\\\\\n        setCreateTxn(false);\\\\\\\\n        setProposalId(proposalIds[proposalIds.length - 1]);\\\\\\\\n        setShowProposalPage(true);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes) {\\\\\\\\n    setLoading(true);\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(\\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\", {\\\\\\\\n          method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n          headers: {\\\\\\\\n            \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          body: JSON.stringify({\\\\\\\\n            jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n            id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n            method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n            params: [props.transactionHashes, context.accountId],\\\\\\\\n          }),\\\\\\\\n        }).then((transaction) => {\\\\\\\\n          const transaction_method_name =\\\\\\\\n            transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n              .method_name;\\\\\\\\n\\\\\\\\n          const is_edit_or_add_post_transaction =\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\" ||\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n          if (is_edit_or_add_post_transaction) {\\\\\\\\n            setShowProposalPage(true);\\\\\\\\n            Storage.privateSet(draftKey, null);\\\\\\\\n          }\\\\\\\\n          // show the latest created proposal to user\\\\\\\\n          if (transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\") {\\\\\\\\n            useCache(\\\\\\\\n              () =>\\\\\\\\n                Near.asyncView(\\\\\\\\n                  \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n                  \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n                ).then((proposalIdsArray) => {\\\\\\\\n                  setProposalId(\\\\\\\\n                    proposalIdsArray?.[proposalIdsArray?.length - 1]\\\\\\\\n                  );\\\\\\\\n                }),\\\\\\\\n              props.transactionHashes + \\\\\\\\\\\\\\\"proposalIds\\\\\\\\\\\\\\\",\\\\\\\\n              { subscribe: false }\\\\\\\\n            );\\\\\\\\n          } else {\\\\\\\\n            setProposalId(id);\\\\\\\\n          }\\\\\\\\n          setLoading(false);\\\\\\\\n        }),\\\\\\\\n      props.transactionHashes + context.accountId,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  } else {\\\\\\\\n    if (showProposalPage) {\\\\\\\\n      setShowProposalPage(false);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst DropdowntBtnContainer = styled.div`\\\\\\\\n  font-size: 13px;\\\\\\\\n  min-width: 150px;\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .select-header {\\\\\\\\n    display: flex;\\\\\\\\n    justify-content: space-between;\\\\\\\\n    align-items: center;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    border-radius-top: 5px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    background-color: #fff;\\\\\\\\n    border-radius: 5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .no-border {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .options-card {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 0;\\\\\\\\n    width: 200%;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    background-color: #fff;\\\\\\\\n    padding: 0.5rem;\\\\\\\\n    z-index: 99;\\\\\\\\n    font-size: 13px;\\\\\\\\n    border-radius:0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .left {\\\\\\\\n    right: 0 !important;\\\\\\\\n    left: auto !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .options-card {\\\\\\\\n      right: 0 !important;\\\\\\\\n      left: auto !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option {\\\\\\\\n    margin-block: 5px;\\\\\\\\n    padding: 10px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    border-bottom: 1px solid #f0f0f0;\\\\\\\\n    transition: background-color 0.3s ease;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:hover {\\\\\\\\n    background-color: #f0f0f0; /* Custom hover effect color */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:last-child {\\\\\\\\n    border-bottom: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f4f4f4 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    font-weight: 500;\\\\\\\\n    color: #b3b3b3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 8px;\\\\\\\\n    height: 8px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green {\\\\\\\\n    background-color: #04a46e;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"submit-proposal-draft-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SubmitBtn = () => {\\\\\\\\n  const btnOptions = [\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Submit Draft\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"The author can still edit the proposal and build consensus before sharing it with sponsors.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Ready for Review\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"Start the official review process with sponsors. This will lock the editing function, but comments are still open.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"review\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  const handleOptionClick = (option) => {\\\\\\\\n    setDraftBtnOpen(false);\\\\\\\\n    setSelectedStatus(option.value);\\\\\\\\n    handleSubmit(option.value);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const toggleDropdown = () => {\\\\\\\\n    setDraftBtnOpen(!isDraftBtnOpen);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const handleSubmit = (status) => {\\\\\\\\n    const isDraft = status === \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\";\\\\\\\\n    if (isDraft) {\\\\\\\\n      onSubmit({ isDraft });\\\\\\\\n      cleanDraft();\\\\\\\\n    } else {\\\\\\\\n      setReviewModal(true);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <DropdowntBtnContainer>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"custom-select\\\\\\\\\\\\\\\"\\\\\\\\n        tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n        onBlur={() => setDraftBtnOpen(false)}\\\\\\\\n      >\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\n            \\\\\\\\\\\\\\\"select-header d-flex gap-1 align-items-center submit-draft-button \\\\\\\\\\\\\\\" +\\\\\\\\n            (disabledSubmitBtn && \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\")\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            onClick={() => !disabledSubmitBtn && handleSubmit(selectedStatus)}\\\\\\\\n            className=\\\\\\\\\\\\\\\"p-2 d-flex gap-2 align-items-center \\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {isTxnCreated ? (\\\\\\\\n              LoadingButtonSpinner\\\\\\\\n            ) : (\\\\\\\\n              <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + selectedOption.iconColor}></div>\\\\\\\\n            )}\\\\\\\\n            <div className={`selected-option`}>{selectedOption.label}</div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"h-100 p-2\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ borderLeft: \\\\\\\\\\\\\\\"1px solid #ccc\\\\\\\\\\\\\\\" }}\\\\\\\\n            onClick={!disabledSubmitBtn && toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <i class={`bi bi-chevron-${isDraftBtnOpen ? \\\\\\\\\\\\\\\"up\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\"}`}></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {isDraftBtnOpen && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"options-card\\\\\\\\\\\\\\\">\\\\\\\\n            {btnOptions.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`option ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n              >\\\\\\\\n                <div className={`d-flex gap-2 align-items-center`}>\\\\\\\\n                  <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + option.iconColor}></div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">{option.label}</div>\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-muted text-xs\\\\\\\\\\\\\\\">{option.description}</div>\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </DropdowntBtnContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst onSubmit = ({ isDraft, isCancel }) => {\\\\\\\\n  setCreateTxn(true);\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"submitting transaction\\\\\\\\\\\\\\\");\\\\\\\\n  const linkedProposalsIds = linkedProposals.map((item) => item.value) ?? [];\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    category: category,\\\\\\\\n    summary: summary,\\\\\\\\n    linked_proposals: linkedProposalsIds,\\\\\\\\n    requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n    requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n    receiver_account: receiverAccount,\\\\\\\\n    supervisor: supervisor || null,\\\\\\\\n    requested_sponsor: requestedSponsor,\\\\\\\\n    timeline: isCancel\\\\\\\\n      ? {\\\\\\\\n          status: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n          kyc_verified: false,\\\\\\\\n        }\\\\\\\\n      : isDraft\\\\\\\\n      ? { status: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\" }\\\\\\\\n      : isEditPage\\\\\\\\n      ? editProposalData.snapshot.timeline\\\\\\\\n      : {\\\\\\\\n          status: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        },\\\\\\\\n  };\\\\\\\\n  const args = {\\\\\\\\n    labels: [],\\\\\\\\n    body: body,\\\\\\\\n  };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editProposalData.id;\\\\\\\\n  } else {\\\\\\\\n    args[\\\\\\\\\\\\\\\"accepted_terms_and_conditions_version\\\\\\\\\\\\\\\"] = parseInt(\\\\\\\\n      Near.block().header.height\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Spinner\\\\\\\\\\\\\\\"}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [collapseState, setCollapseState] = useState({});\\\\\\\\n\\\\\\\\nconst CollapsibleContainer = ({ title, children, noPaddingTop }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"border-bottom py-4 \\\\\\\\\\\\\\\" +\\\\\\\\n        (noPaddingTop && \\\\\\\\\\\\\\\"pt-0 \\\\\\\\\\\\\\\") +\\\\\\\\n        (collapseState[title] && \\\\\\\\\\\\\\\" pb-0\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className={\\\\\\\\\\\\\\\"d-flex justify-content-between \\\\\\\\\\\\\\\"}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-2 mb-sm-3\\\\\\\\\\\\\\\">{title}</div>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex d-sm-none cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() =>\\\\\\\\n            setCollapseState((prevState) => ({\\\\\\\\n              ...prevState,\\\\\\\\n              [title]: !prevState[title],\\\\\\\\n            }))\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          {!collapseState[title] ? (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-up h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          ) : (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-down h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className={!collapseState[title] ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"}>{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategoryDropdown = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CategoryDropdown\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        selectedValue: category,\\\\\\\\n        onChange: setCategory,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setTitle(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 80,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst SummaryComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: summary,\\\\\\\\n        multiline: true,\\\\\\\\n        onBlur: (e) => {\\\\\\\\n          setSummary(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 500,\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst DescriptionComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Compose\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        data: description,\\\\\\\\n        onChange: setDescription,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        autoFocus: false,\\\\\\\\n        showProposalIdAutoComplete: true,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ConsentComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Checkbox\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"toc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\n                  \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AcceptedTerms\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                props={{ proposalId: proposalId, portal: \\\\\\\\\\\\\\\"DevHub\\\\\\\\\\\\\\\" }}\\\\\\\\n              />\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.toc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              toc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Checkbox\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          value: \\\\\\\\\\\\\\\"coc\\\\\\\\\\\\\\\",\\\\\\\\n          label: (\\\\\\\\n            <>\\\\\\\\n              I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <a\\\\\\\\n                href={\\\\\\\\n                  \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1c6XV8Sj_BRKw8jnTIsjdLPPN6Al5eEStt1ZLYSuqw9U/edit\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                DevHub\\\\\\\\u{2019}s Code of Conduct\\\\\\\\n              </a>\\\\\\\\n              and commit to honoring it\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          isChecked: consent.coc,\\\\\\\\n          onClick: (value) =>\\\\\\\\n            setConsent((prevConsent) => ({\\\\\\\\n              ...prevConsent,\\\\\\\\n              coc: value,\\\\\\\\n            })),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ProfileComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"mob.near/widget/Profile.ShortInlineBlock\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        accountId: author,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst LinkedProposalsComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">\\\\\\\\n        Link any relevant proposals (e.g. previous milestones).\\\\\\\\n      </div>\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.LinkedProposalsDropdown\\\\\\\\\\\\\\\"\\\\\\\\n        props={{\\\\\\\\n          onChange: setLinkedProposals,\\\\\\\\n          linkedProposals: linkedProposals,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst ReceiverAccountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AccountInput\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        value: receiverAccount,\\\\\\\\n        placeholder: devdaoAccount,\\\\\\\\n        onUpdate: setReceiverAccount,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst AmountComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: requestedSponsorshipAmount,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          setRequestedSponsorshipAmount(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\",\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"$\\\\\\\\\\\\\\\",\\\\\\\\n          inputmode: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\",\\\\\\\\n          pattern: \\\\\\\\\\\\\\\"[0-9]*\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst CurrencyComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        options: tokensOptions,\\\\\\\\n        selectedValue: requestedSponsorshipToken,\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setRequestedSponsorshipToken(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst SponsorComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AccountInput\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        value: requestedSponsor,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"NEARDevDAO\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: setRequestedSponsor,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nconst SupervisorComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AccountInput\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        value: supervisor,\\\\\\\\n        onUpdate: setSupervisor,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nif (showProposalPage) {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Proposal\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{ id: proposalId, ...props }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n} else\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-0 px-sm-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <Heading className=\\\\\\\\\\\\\\\"px-2 px-sm-0\\\\\\\\\\\\\\\">\\\\\\\\n        {isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} Proposal\\\\\\\\n      </Heading>\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmReviewModal\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          isOpen: isReviewModalOpen,\\\\\\\\n          onCancelClick: () => setReviewModal(false),\\\\\\\\n          onReviewClick: () => {\\\\\\\\n            setReviewModal(false);\\\\\\\\n            cleanDraft();\\\\\\\\n            onSubmit({ isDraft: false });\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmCancelModal\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          isOpen: isCancelModalOpen,\\\\\\\\n          onCancelClick: () => setCancelModal(false),\\\\\\\\n          onConfirmClick: () => {\\\\\\\\n            setCancelModal(false);\\\\\\\\n            onSubmit({ isCancel: true });\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 px-2 p-lg-0 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"container-xl py-4 d-flex flex-wrap gap-6 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <div\\\\\\\\n            style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n            className=\\\\\\\\\\\\\\\"flex-2 w-100 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: author,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    <>\\\\\\\\n                      Select the category that best aligns with your\\\\\\\\n                      contribution to the NEAR developer community. Need\\\\\\\\n                      guidance? See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <a\\\\\\\\n                        href={FundingDocs}\\\\\\\\n                        className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        Funding Docs\\\\\\\\n                      </a>\\\\\\\\n                      .\\\\\\\\n                    </>\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {CategoryDropdown}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Highlight the essence of your proposal in a few words. This will appear on your proposal\\\\\\\\u{2019}s detail page and the main proposal feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {TitleComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Explain your proposal briefly. This is your chance to make a good first impression on the community. Include what needs or goals your work will address, your solution, and the benefit for the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {SummaryComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    <>\\\\\\\\n                      Expand on your summary with any relevant details like your\\\\\\\\n                      contribution timeline, key milestones, team background,\\\\\\\\n                      and a clear breakdown of how the funds will be used.\\\\\\\\n                      Proposals should be simple and clear (e.g. 1 month). For\\\\\\\\n                      more complex projects, treat each milestone as a separate\\\\\\\\n                      proposal. Need more guidance?\\\\\\\\n                      <a\\\\\\\\n                        href={FundingDocs}\\\\\\\\n                        className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        See Funding Docs\\\\\\\\n                      </a>\\\\\\\\n                      .\\\\\\\\n                    </>\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  {DescriptionComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\">\\\\\\\\n                  {ConsentComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    {isEditPage && (\\\\\\\\n                      <Widget\\\\\\\\n                        src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                        props={{\\\\\\\\n                          classNames: {\\\\\\\\n                            root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                          },\\\\\\\\n                          label: (\\\\\\\\n                            <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                              <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                            </div>\\\\\\\\n                          ),\\\\\\\\n                          onClick: () => setCancelModal(true),\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Link\\\\\\\\n                      to={\\\\\\\\n                        isEditPage\\\\\\\\n                          ? href({\\\\\\\\n                              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                              params: {\\\\\\\\n                                page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                                id: parseInt(id),\\\\\\\\n                              },\\\\\\\\n                            })\\\\\\\\n                          : href({\\\\\\\\n                              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                              params: {\\\\\\\\n                                page: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n                              },\\\\\\\\n                            })\\\\\\\\n                      }\\\\\\\\n                    >\\\\\\\\n                      <Widget\\\\\\\\n                        src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                        props={{\\\\\\\\n                          classNames: {\\\\\\\\n                            root: \\\\\\\\\\\\\\\"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                          },\\\\\\\\n                          label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                          onClick: cleanDraft,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </Link>\\\\\\\\n                    <SubmitBtn />\\\\\\\\n                  </div>\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n            className=\\\\\\\\\\\\\\\"flex-1 w-100 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            <CollapsibleContainer noPaddingTop={true} title=\\\\\\\\\\\\\\\"Author Details\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer heading=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                  {ProfileComponent}\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n              <CollapsibleContainer title=\\\\\\\\\\\\\\\"Link Proposals (Optional)\\\\\\\\\\\\\\\">\\\\\\\\n                {LinkedProposalsComponent}\\\\\\\\n              </CollapsibleContainer>\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n              <CollapsibleContainer title=\\\\\\\\\\\\\\\"Funding Details\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n                  <InputContainer\\\\\\\\n                    heading=\\\\\\\\\\\\\\\"Recipient NEAR Wallet Address\\\\\\\\\\\\\\\"\\\\\\\\n                    description=\\\\\\\\\\\\\\\"Enter the address that will receive the funds. We\\\\\\\\u{2019}ll need this to send a test transaction once your proposal is approved.\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    {ReceiverAccountComponent}\\\\\\\\n                  </InputContainer>\\\\\\\\n                  <InputContainer\\\\\\\\n                    heading={\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                        Recipient Verification Status\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"custom-tooltip\\\\\\\\\\\\\\\">\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-info-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                          <span class=\\\\\\\\\\\\\\\"tooltiptext\\\\\\\\\\\\\\\">\\\\\\\\n                            To get approved and receive payments on our\\\\\\\\n                            platform, you must complete KYC/KYB verification\\\\\\\\n                            using Fractal, a trusted identity verification\\\\\\\\n                            solution. This helps others trust transactions with\\\\\\\\n                            your account. Click \\\\\\\\\\\\\\\"Get Verified\\\\\\\\\\\\\\\" to start. <br />\\\\\\\\n                            <br />\\\\\\\\n                            Once verified, your profile will display a badge,\\\\\\\\n                            which is valid for 365 days from the date of your\\\\\\\\n                            verification. You must renew your verification upon\\\\\\\\n                            expiration OR if any of your personal information\\\\\\\\n                            changes.\\\\\\\\n                          </span>\\\\\\\\n                        </div>\\\\\\\\n                      </div>\\\\\\\\n                    }\\\\\\\\n                    description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"border border-1 p-3 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.VerificationStatus\\\\\\\\\\\\\\\"\\\\\\\\n                        props={{\\\\\\\\n                          receiverAccount: receiverAccount,\\\\\\\\n                          showGetVerifiedBtn: true,\\\\\\\\n                          imageSize: 30,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </InputContainer>\\\\\\\\n                  <InputContainer\\\\\\\\n                    heading=\\\\\\\\\\\\\\\"Total Amount (USD)\\\\\\\\\\\\\\\"\\\\\\\\n                    description={\\\\\\\\n                      <>\\\\\\\\n                        Enter the exact amount you are seeking. See\\\\\\\\n                        <a\\\\\\\\n                          href={FundingDocs}\\\\\\\\n                          className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                          rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                        >\\\\\\\\n                          Funding Documentation\\\\\\\\n                        </a>\\\\\\\\n                        for guidelines.\\\\\\\\n                      </>\\\\\\\\n                    }\\\\\\\\n                  >\\\\\\\\n                    {AmountComponent}\\\\\\\\n                  </InputContainer>\\\\\\\\n                  <InputContainer\\\\\\\\n                    heading=\\\\\\\\\\\\\\\"Currency\\\\\\\\\\\\\\\"\\\\\\\\n                    description=\\\\\\\\\\\\\\\"Select your preferred currency for receiving funds. Note: The exchange rate for NEAR tokens will be the closing rate at the day of the invoice.\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    {CurrencyComponent}\\\\\\\\n                  </InputContainer>\\\\\\\\n                  <InputContainer heading=\\\\\\\\\\\\\\\"Requested Sponsor\\\\\\\\\\\\\\\" description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\">\\\\\\\\n                    {SponsorComponent}\\\\\\\\n                  </InputContainer>\\\\\\\\n                  <InputContainer\\\\\\\\n                    heading=\\\\\\\\\\\\\\\"Supervisor (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                    description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    {SupervisorComponent}\\\\\\\\n                  </InputContainer>\\\\\\\\n                </div>\\\\\\\\n              </CollapsibleContainer>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n\"}, \"devhub.entity.proposal.AccountInput\": {\"\": \"const value = props.value;\\\\\\\\nconst placeholder = props.placeholder;\\\\\\\\nconst onUpdate = props.onUpdate;\\\\\\\\n\\\\\\\\nconst [account, setAccount] = useState(value);\\\\\\\\nconst [showAccountAutocomplete, setAutoComplete] = useState(false);\\\\\\\\nconst [isValidAccount, setValidAccount] = useState(true);\\\\\\\\nconst maxWidth = props.maxWidth;\\\\\\\\nconst AutoComplete = styled.div`\\\\\\\\n  max-width: ${maxWidth ?? \\\\\\\\\\\\\\\"400px\\\\\\\\\\\\\\\"};\\\\\\\\n  margin-top: 1rem;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (value !== account) {\\\\\\\\n    setAccount(value);\\\\\\\\n  }\\\\\\\\n}, [value]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (value !== account) {\\\\\\\\n    onUpdate(account);\\\\\\\\n  }\\\\\\\\n}, [account]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    const valid =\\\\\\\\n      account.length === 64 ||\\\\\\\\n      (account ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").includes(\\\\\\\\\\\\\\\".near\\\\\\\\\\\\\\\") ||\\\\\\\\n      (account ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").includes(\\\\\\\\\\\\\\\".tg\\\\\\\\\\\\\\\");\\\\\\\\n    setValidAccount(valid);\\\\\\\\n    setAutoComplete(!valid);\\\\\\\\n  }, 100);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [account]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: account,\\\\\\\\n        onChange: (e) => {\\\\\\\\n          setAccount(e.target.value);\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        placeholder: placeholder,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 64,\\\\\\\\n          prefix: \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    {account && !isValidAccount && (\\\\\\\\n      <div style={{ color: \\\\\\\\\\\\\\\"red\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"text-sm mt-1\\\\\\\\\\\\\\\">\\\\\\\\n        Please enter valid account ID\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n    {showAccountAutocomplete && (\\\\\\\\n      <AutoComplete>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.AccountAutocomplete\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            term: account,\\\\\\\\n            onSelect: (id) => {\\\\\\\\n              setAccount(id);\\\\\\\\n              setAutoComplete(false);\\\\\\\\n            },\\\\\\\\n            onClose: () => setAutoComplete(false),\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </AutoComplete>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.VerificationStatus\": {\"\": \"const receiverAccount = props.receiverAccount;\\\\\\\\nconst showGetVerifiedBtn = props.showGetVerifiedBtn;\\\\\\\\nconst [verificationStatus, setVerificationStatus] = useState(null);\\\\\\\\nconst imageSize = props.imageSize ?? 40;\\\\\\\\n\\\\\\\\nconst WarningImg =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreieq4222tf3hkbccfnbw5kpgedm3bf2zcfgzbnmismxav2phqdwd7q\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst SuccessImg =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreidqveupkcc7e3rko2e67lztsqrfnjzw3ceoajyglqeomvv7xznusm\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    receiverAccount.length === 64 ||\\\\\\\\n    (receiverAccount ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").includes(\\\\\\\\\\\\\\\".near\\\\\\\\\\\\\\\") ||\\\\\\\\n    (receiverAccount ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").includes(\\\\\\\\\\\\\\\".tg\\\\\\\\\\\\\\\")\\\\\\\\n  ) {\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(\\\\\\\\n          `https://neardevhub-kyc-proxy.shuttleapp.rs/kyc/${receiverAccount}`\\\\\\\\n        ).then((res) => {\\\\\\\\n          let displayableText = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n          switch (res.body.kyc_status) {\\\\\\\\n            case \\\\\\\\\\\\\\\"Approved\\\\\\\\\\\\\\\":\\\\\\\\n              displayableText = \\\\\\\\\\\\\\\"Verified\\\\\\\\\\\\\\\";\\\\\\\\n              break;\\\\\\\\n            case \\\\\\\\\\\\\\\"Pending\\\\\\\\\\\\\\\":\\\\\\\\n              displayableText = \\\\\\\\\\\\\\\"Pending\\\\\\\\\\\\\\\";\\\\\\\\n              break;\\\\\\\\n            case \\\\\\\\\\\\\\\"NotSubmitted\\\\\\\\\\\\\\\":\\\\\\\\n            case \\\\\\\\\\\\\\\"Rejected\\\\\\\\\\\\\\\":\\\\\\\\n              displayableText = \\\\\\\\\\\\\\\"Not Verfied\\\\\\\\\\\\\\\";\\\\\\\\n              break;\\\\\\\\n            default:\\\\\\\\n              displayableText = \\\\\\\\\\\\\\\"Failed to get status\\\\\\\\\\\\\\\";\\\\\\\\n              break;\\\\\\\\n          }\\\\\\\\n          setVerificationStatus(displayableText);\\\\\\\\n        }),\\\\\\\\n      \\\\\\\\\\\\\\\"ky-check-proposal\\\\\\\\\\\\\\\" + receiverAccount,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n}, [receiverAccount]);\\\\\\\\n\\\\\\\\nconst DropdowntBtnContainer = styled.div`\\\\\\\\n  font-size: 13px;\\\\\\\\n  min-width: 150px;\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .select-header {\\\\\\\\n    display: flex;\\\\\\\\n    justify-content: space-between;\\\\\\\\n    align-items: center;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    border-radius-top: 5px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    background-color: #fff;\\\\\\\\n    border-radius: 5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .no-border {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .options-card {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 0;\\\\\\\\n    width: 200%;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    background-color: #fff;\\\\\\\\n    padding: 0.5rem;\\\\\\\\n    z-index: 99;\\\\\\\\n    font-size: 13px;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .left {\\\\\\\\n    right: 0 !important;\\\\\\\\n    left: auto !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .options-card {\\\\\\\\n      right: 0 !important;\\\\\\\\n      left: auto !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option {\\\\\\\\n    margin-block: 2px;\\\\\\\\n    padding: 5px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    border-bottom: 1px solid #f0f0f0;\\\\\\\\n    transition: background-color 0.3s ease;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:hover {\\\\\\\\n    background-color: #f0f0f0; /* Custom hover effect color */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:last-child {\\\\\\\\n    border-bottom: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f4f4f4 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    font-weight: 500;\\\\\\\\n    color: #b3b3b3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 8px;\\\\\\\\n    height: 8px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green {\\\\\\\\n    background-color: #04a46e;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst [kycOptionsOpen, setKycOptions] = useState(false);\\\\\\\\n\\\\\\\\nconst VerificationBtn = () => {\\\\\\\\n  const btnOptions = [\\\\\\\\n    {\\\\\\\\n      src: \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreidqveupkcc7e3rko2e67lztsqrfnjzw3ceoajyglqeomvv7xznusm\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"KYC\\\\\\\\\\\\\\\",\\\\\\\\n      description: \\\\\\\\\\\\\\\"Choose this if you are an individual.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"KYC\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      src: \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreic5ksax6b45pelvxm6a2v2j465jgbitpzrxtzpmn6zehl23gocwxm\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"KYB\\\\\\\\\\\\\\\",\\\\\\\\n      description: \\\\\\\\\\\\\\\"Choose this if you are a business or corporate entity..\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"KYB\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  const toggleDropdown = () => {\\\\\\\\n    setKycOptions(!kycOptionsOpen);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <DropdowntBtnContainer>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"custom-select\\\\\\\\\\\\\\\"\\\\\\\\n        tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n        id=\\\\\\\\\\\\\\\"getVerifiedButton\\\\\\\\\\\\\\\"\\\\\\\\n        onClick={toggleDropdown}\\\\\\\\n        onBlur={() => {\\\\\\\\n          setTimeout(() => {\\\\\\\\n            setKycOptions(false);\\\\\\\\n          }, 100);\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\n            \\\\\\\\\\\\\\\"select-header no-border black-btn btn d-inline-flex align-items-center gap-2\\\\\\\\\\\\\\\"\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n            Get Verified\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-box-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {kycOptionsOpen && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"options-card left\\\\\\\\\\\\\\\">\\\\\\\\n            {btnOptions.map((option) => (\\\\\\\\n              <a\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                href={\\\\\\\\n                  option.value === \\\\\\\\\\\\\\\"KYC\\\\\\\\\\\\\\\"\\\\\\\\n                    ? \\\\\\\\\\\\\\\"https://go.fractal.id/near-social-kyc\\\\\\\\\\\\\\\"\\\\\\\\n                    : \\\\\\\\\\\\\\\"https://go.fractal.id/near-social-kyb\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <div\\\\\\\\n                  key={option.value}\\\\\\\\n                  className={`option ${\\\\\\\\n                    selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  }`}\\\\\\\\n                >\\\\\\\\n                  <div className={`d-flex gap-2 align-items-center`}>\\\\\\\\n                    <img src={option.src} height={30} />\\\\\\\\n                    <div>\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">{option.label}</div>\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"text-muted text-xs\\\\\\\\\\\\\\\">\\\\\\\\n                        {option.description}\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                </div>\\\\\\\\n              </a>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </DropdowntBtnContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex text-black justify-content-between align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex\\\\\\\\\\\\\\\" style={{ gap: \\\\\\\\\\\\\\\"12px\\\\\\\\\\\\\\\" }}>\\\\\\\\n        <img\\\\\\\\n          className=\\\\\\\\\\\\\\\"align-self-center object-fit-cover\\\\\\\\\\\\\\\"\\\\\\\\n          src={verificationStatus === \\\\\\\\\\\\\\\"Verified\\\\\\\\\\\\\\\" ? SuccessImg : WarningImg}\\\\\\\\n          height={imageSize}\\\\\\\\n        />\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column justify-content-center\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">Fractal</div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">{verificationStatus}</div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      {verificationStatus !== \\\\\\\\\\\\\\\"Verified\\\\\\\\\\\\\\\" && showGetVerifiedBtn && (\\\\\\\\n        <VerificationBtn />\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.839034702693e+21
    }
  },
  {
    "id": "7049990568",
    "receipt_id": "7p3AEUtsfSHZPHGnqakZokzuyhfHViELrSJ6x2oM77EB",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3Te3KWfxdjKCwEMKxLjDh9TjRBjYk4fsbgGdaTcNRRyQ",
      "block_height": 124619604,
      "block_timestamp": 1722356855251024100
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "Cj5rqnTvkVAvYNxoLXkJBZztZSm5BgdbGaQZY6vA1gai",
    "included_in_block_hash": "3apy5rMh1C1jDtLGMQDrdoshR8nVkk58ZEX893PPb65c",
    "block_timestamp": "1722356853250071599",
    "block": {
      "block_height": 124619602
    },
    "receipt_conversion_tokens_burnt": "45880840621400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8636819532490107e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.839034702693e+21
    }
  },
  {
    "id": "7094892303",
    "receipt_id": "2YuJ24GM4TR3NGfRW3i46uLT8mS85qPRBtVTVs26Ummw",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "86ewWZnhLZgRETSVAfDmByEkmB4dWPHLmUGCAj1G8CSJ",
      "block_height": 124767888,
      "block_timestamp": 1722522728180086000
    },
    "receipt_outcome": {
      "gas_burnt": 17719568054069,
      "tokens_burnt": 1.7719568054069e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "71xXKJDE8fW5sfKo9HhEgBZdtSm2JAY4KTozpMQQYRV5",
    "included_in_block_hash": "BqWLy6HpuNmDc9C2aRG81yns8tyPgBiuhnmjSHCX17Es",
    "block_timestamp": "1722522727007691359",
    "block": {
      "block_height": 124767887
    },
    "receipt_conversion_tokens_burnt": "42184841719400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.7719568054069e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.page.addon\": {\"\": \"const Container = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  height: 100%;\\\\\\\\n  width: 100%;\\\\\\\\n  position: relative;\\\\\\\\n  padding: 0 1rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    padding: 0 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Content = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  padding: 20px;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst SettingsButton = styled.button`\\\\\\\\n  position: absolute;\\\\\\\\n  top: -100px;\\\\\\\\n  right: 10px;\\\\\\\\n\\\\\\\\n  background-color: #fff;\\\\\\\\n  display: flex;\\\\\\\\n  padding: 14px 16px;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 16px;\\\\\\\\n  width: 50px;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  border-radius: 4px;\\\\\\\\n  border: 1px solid #00ec97;\\\\\\\\n\\\\\\\\n  z-index: 10;\\\\\\\\n\\\\\\\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    transform: translateY(2px);\\\\\\\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:active {\\\\\\\\n    transform: translateY(0);\\\\\\\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CenteredMessage = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n  height: ${(p) => p.height ?? \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\"};\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst { addon, permissions, handle, addonView, setAddonView } = props;\\\\\\\\n\\\\\\\\nconst { getAllAddons, setCommunityAddon } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!getAllAddons || !setCommunityAddon) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst availableAddons = getAllAddons();\\\\\\\\n\\\\\\\\nlet addonMatch = null; // If availableAddons is not an array, set addonMatch to null\\\\\\\\nif (\\\\\\\\n  Array.isArray(availableAddons) &&\\\\\\\\n  availableAddons !== null &&\\\\\\\\n  availableAddons !== undefined\\\\\\\\n) {\\\\\\\\n  addonMatch = availableAddons.find((it) => it.id === addon.addon_id);\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (!addonMatch) {\\\\\\\\n  return (\\\\\\\\n    <CenteredMessage height={\\\\\\\\\\\\\\\"384px\\\\\\\\\\\\\\\"}>\\\\\\\\n      <h2>Addon with id: \\\\\\\\\\\\\\\"{addon.addon_id}\\\\\\\\\\\\\\\" not found.</h2>\\\\\\\\n    </CenteredMessage>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst config = JSON.parse(addon.parameters || \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst ButtonRow = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  justify-content: space-between;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst BannerWrapper = styled.div`\\\\\\\\n  background-color: #ffd2d2;\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\" !== \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\") {\\\\\\\\n  addonMatch.configurator_widget = addonMatch.configurator_widget.replace(\\\\\\\\n    \\\\\\\\\\\\\\\"devhub.near/\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"devhub.near/\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n  addonMatch.view_widget = addonMatch.view_widget.replace(\\\\\\\\n    \\\\\\\\\\\\\\\"devhub.near/\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"devhub.near/\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    {permissions.can_configure && addonMatch.configurator_widget !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" && (\\\\\\\\n      <SettingsButton\\\\\\\\n        onClick={() =>\\\\\\\\n          setAddonView(addonView === \\\\\\\\\\\\\\\"configure\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"viewer\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"configure\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n        aria-label={\\\\\\\\n          addonView === \\\\\\\\\\\\\\\"configure\\\\\\\\\\\\\\\"\\\\\\\\n            ? \\\\\\\\\\\\\\\"Close configuration\\\\\\\\\\\\\\\"\\\\\\\\n            : \\\\\\\\\\\\\\\"Open configuration\\\\\\\\\\\\\\\"\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        {addonView === \\\\\\\\\\\\\\\"configure\\\\\\\\\\\\\\\" ? (\\\\\\\\n          <span\\\\\\\\n            className=\\\\\\\\\\\\\\\"bi bi-x\\\\\\\\\\\\\\\"\\\\\\\\n            data-testid=\\\\\\\\\\\\\\\"configure-addon-button-x\\\\\\\\\\\\\\\"\\\\\\\\n          ></span>\\\\\\\\n        ) : (\\\\\\\\n          <span\\\\\\\\n            className=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"\\\\\\\\n            data-testid=\\\\\\\\\\\\\\\"configure-addon-button\\\\\\\\\\\\\\\"\\\\\\\\n          ></span>\\\\\\\\n        )}\\\\\\\\n      </SettingsButton>\\\\\\\\n    )}\\\\\\\\n    {permissions.can_configure && config === null ? (\\\\\\\\n      <BannerWrapper className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center mb-4 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>\\\\\\\\n          <i class=\\\\\\\\\\\\\\\"bi bi-exclamation-triangle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n        </div>\\\\\\\\n        <div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Addon Misconfiguration</div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">\\\\\\\\n            It appears that this addon is missing some required parameters.\\\\\\\\n            Please contact a DevHub administrator for assistance.\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </BannerWrapper>\\\\\\\\n    ) : null}\\\\\\\\n    <Content>\\\\\\\\n      {addonView === \\\\\\\\\\\\\\\"configure\\\\\\\\\\\\\\\" ? (\\\\\\\\n        <Widget\\\\\\\\n          src={addonMatch.configurator_widget}\\\\\\\\n          props={{\\\\\\\\n            ...config,\\\\\\\\n            data: config,\\\\\\\\n            onSubmit: (data) => {\\\\\\\\n              setCommunityAddon({\\\\\\\\n                handle,\\\\\\\\n                addon: {\\\\\\\\n                  ...addon,\\\\\\\\n                  parameters: JSON.stringify(data),\\\\\\\\n                },\\\\\\\\n              });\\\\\\\\n            },\\\\\\\\n            handle, // this is temporary prop drilling until kanban and github are migrated\\\\\\\\n            permissions,\\\\\\\\n            communityAddonId: addon.id,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      ) : (\\\\\\\\n        <Widget\\\\\\\\n          src={addonMatch.view_widget}\\\\\\\\n          props={{\\\\\\\\n            ...config,\\\\\\\\n            data: config,\\\\\\\\n            handle,\\\\\\\\n            highlight: props.highlight,\\\\\\\\n            permissions,\\\\\\\\n            transactionHashes: props.transactionHashes,\\\\\\\\n            communityAddonId: addon.id,\\\\\\\\n            setAddonView,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      )}\\\\\\\\n    </Content>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.page.community.index\": {\"\": \"const { normalize } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.stringUtils\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nnormalize || (normalize = () => {});\\\\\\\\n\\\\\\\\nconst Button = styled.button`\\\\\\\\n  height: 40px;\\\\\\\\n  font-size: 14px;\\\\\\\\n  border-color: #e3e3e0;\\\\\\\\n  background-color: #ffffff;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Banner = styled.div`\\\\\\\\n  max-width: 100%;\\\\\\\\n  min-height: 240px;\\\\\\\\n  height: 240px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CenteredMessage = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n  height: ${(p) => p.height ?? \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\"};\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NavUnderline = styled.ul`\\\\\\\\n  cursor: pointer;\\\\\\\\n  a {\\\\\\\\n    color: #151515;\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.active {\\\\\\\\n    font-weight: bold;\\\\\\\\n    border-bottom: 4px solid #00ec97;\\\\\\\\n  }\\\\\\\\n  border-bottom: 1px solid #cccccc;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst { tab, permissions, community } = props;\\\\\\\\n\\\\\\\\nconst { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!href) {\\\\\\\\n  return <></>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (!tab) {\\\\\\\\n  tab = \\\\\\\\\\\\\\\"Announcements\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\ntab = normalize(tab);\\\\\\\\n\\\\\\\\nconst [isLinkCopied, setLinkCopied] = useState(false);\\\\\\\\n\\\\\\\\nconst [addonView, setAddonView] = useState(\\\\\\\\\\\\\\\"viewer\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst tabs = [];\\\\\\\\n\\\\\\\\n(community.addons || []).map((addon) => {\\\\\\\\n  addon.enabled &&\\\\\\\\n    tabs.push({\\\\\\\\n      title: addon.display_name,\\\\\\\\n      params: {\\\\\\\\n        addon,\\\\\\\\n        handle: community.handle,\\\\\\\\n        transactionHashes: props.transactionHashes,\\\\\\\\n      },\\\\\\\\n    });\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst onShareClick = () =>\\\\\\\\n  clipboard\\\\\\\\n    .writeText(`https://devhub.near.page/community/${community.handle}`)\\\\\\\\n    .then(setLinkCopied(true));\\\\\\\\n\\\\\\\\nlet currentTab = tabs.find((it) => normalize(it.title) === tab);\\\\\\\\n\\\\\\\\nconst CommunityName = styled.span`\\\\\\\\n  color: #151515;\\\\\\\\n  font-size: 2.25rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 100%; /* 48px */\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 1.5rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommunityDetails = styled.span`\\\\\\\\n  color: #818181;\\\\\\\\n  font-size: 1rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n`;\\\\\\\\n\\\\\\\\nfunction trimHttps(url) {\\\\\\\\n  if (url.startsWith(\\\\\\\\\\\\\\\"https://\\\\\\\\\\\\\\\")) {\\\\\\\\n    return url.substring(8);\\\\\\\\n  }\\\\\\\\n  return url;\\\\\\\\n}\\\\\\\\n\\\\\\\\n// some communities have url as handle (eg: devhub platform) while others has correct handle\\\\\\\\nfunction checkTelegramHandle(tg) {\\\\\\\\n  const pattern = /https:\\\\\\\\\\\\\\\\/\\\\\\\\\\\\\\\\/t.me\\\\\\\\\\\\\\\\/(.*)/;\\\\\\\\n  const includesHttp = tg.match(pattern);\\\\\\\\n  const handle = includesHttp ? includesHttp[1] : tg;\\\\\\\\n  return { handle, url: \\\\\\\\\\\\\\\"https://t.me/\\\\\\\\\\\\\\\" + handle };\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst socialLinks = [\\\\\\\\n  ...((community.website_url?.length ?? 0) > 0\\\\\\\\n    ? [\\\\\\\\n        {\\\\\\\\n          href: `https://${trimHttps(community.website_url)}`,\\\\\\\\n          iconClass: \\\\\\\\\\\\\\\"bi bi-globe\\\\\\\\\\\\\\\",\\\\\\\\n          name: trimHttps(community.website_url),\\\\\\\\n        },\\\\\\\\n      ]\\\\\\\\n    : []),\\\\\\\\n\\\\\\\\n  ...((community.github_handle?.length ?? 0) > 0\\\\\\\\n    ? [\\\\\\\\n        {\\\\\\\\n          href: `https://github.com/${community.github_handle}`,\\\\\\\\n          iconClass: \\\\\\\\\\\\\\\"bi bi-github\\\\\\\\\\\\\\\",\\\\\\\\n          name: community.github_handle,\\\\\\\\n        },\\\\\\\\n      ]\\\\\\\\n    : []),\\\\\\\\n\\\\\\\\n  ...((community.twitter_handle?.length ?? 0) > 0\\\\\\\\n    ? [\\\\\\\\n        {\\\\\\\\n          href: `https://twitter.com/${community.twitter_handle}`,\\\\\\\\n          iconClass: \\\\\\\\\\\\\\\"bi bi-twitter\\\\\\\\\\\\\\\",\\\\\\\\n          name: community.twitter_handle,\\\\\\\\n        },\\\\\\\\n      ]\\\\\\\\n    : []),\\\\\\\\n\\\\\\\\n  ...(community.telegram_handle?.length > 0\\\\\\\\n    ? [\\\\\\\\n        {\\\\\\\\n          href: checkTelegramHandle(community.telegram_handle).url,\\\\\\\\n          iconClass: \\\\\\\\\\\\\\\"bi bi-telegram\\\\\\\\\\\\\\\",\\\\\\\\n          name: checkTelegramHandle(community.telegram_handle).handle,\\\\\\\\n        },\\\\\\\\n      ]\\\\\\\\n    : []),\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst NavlinksContainer = styled.div`\\\\\\\\n  //background: white;\\\\\\\\n  padding: 0 3rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    padding: 0 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div\\\\\\\\n    className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 w-100\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ background: \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\" }}\\\\\\\\n  >\\\\\\\\n    <Banner\\\\\\\\n      className=\\\\\\\\\\\\\\\"object-fit-cover\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        background: `center / cover no-repeat url(${community.banner_url})`,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"container d-flex flex-wrap justify-content-between align-items-center align-items-md-start gap-4\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column ms-3\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"position-relative\\\\\\\\\\\\\\\">\\\\\\\\n          <div style={{ width: 150, height: 45 }}>\\\\\\\\n            <img\\\\\\\\n              alt=\\\\\\\\\\\\\\\"Loading logo...\\\\\\\\\\\\\\\"\\\\\\\\n              className=\\\\\\\\\\\\\\\"rounded-circle position-absolute\\\\\\\\\\\\\\\"\\\\\\\\n              width=\\\\\\\\\\\\\\\"160\\\\\\\\\\\\\\\"\\\\\\\\n              height=\\\\\\\\\\\\\\\"160\\\\\\\\\\\\\\\"\\\\\\\\n              src={community.logo_url}\\\\\\\\n              style={{ top: -124 }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 ps-md-3 pt-md-3 pb-md-2\\\\\\\\\\\\\\\">\\\\\\\\n          <CommunityName className=\\\\\\\\\\\\\\\"text-nowrap\\\\\\\\\\\\\\\">\\\\\\\\n            {community.name}\\\\\\\\n          </CommunityName>\\\\\\\\n          <CommunityDetails>{community.description}</CommunityDetails>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"mt-3 ps-3 d-flex gap-3 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          {socialLinks.map((link, index) => (\\\\\\\\n            <a\\\\\\\\n              href={link.href}\\\\\\\\n              style={{\\\\\\\\n                marginLeft: index !== 0 ? \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\",\\\\\\\\n                color: \\\\\\\\\\\\\\\"#818181\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n              key={link.href}\\\\\\\\n              target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <i className={link.iconClass}></i>\\\\\\\\n            </a>\\\\\\\\n          ))}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex align-items-end gap-3 ms-auto mb-md-5 me-4\\\\\\\\\\\\\\\">\\\\\\\\n        {permissions.can_configure && (\\\\\\\\n          <Link\\\\\\\\n            to={`/devhub.near/widget/app?page=community.configuration&handle=${community.handle}`}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-outline-light text-dark shadow-none\\\\\\\\\\\\\\\" },\\\\\\\\n                notRounded: true,\\\\\\\\n                style: {\\\\\\\\n                  display: \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\",\\\\\\\\n                  padding: \\\\\\\\\\\\\\\"0.75rem 1rem\\\\\\\\\\\\\\\",\\\\\\\\n                  alignItems: \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\",\\\\\\\\n                  gap: \\\\\\\\\\\\\\\"16px\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n                  borderRadius: \\\\\\\\\\\\\\\"4px\\\\\\\\\\\\\\\",\\\\\\\\n                  border: \\\\\\\\\\\\\\\"1px solid #00EC97\\\\\\\\\\\\\\\",\\\\\\\\n                  background: \\\\\\\\\\\\\\\"rgba(129, 129, 129, 0.00)\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                icon: {\\\\\\\\n                  type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                  variant: \\\\\\\\\\\\\\\"bi-gear-wide-connected\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Configure community\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"btn-outline-light text-dark shadow-none\\\\\\\\\\\\\\\" },\\\\\\\\n            notRounded: true,\\\\\\\\n            style: {\\\\\\\\n              display: \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\",\\\\\\\\n              padding: \\\\\\\\\\\\\\\"0.75rem 1rem\\\\\\\\\\\\\\\",\\\\\\\\n              alignItems: \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\",\\\\\\\\n              gap: \\\\\\\\\\\\\\\"16px\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n              borderRadius: \\\\\\\\\\\\\\\"4px\\\\\\\\\\\\\\\",\\\\\\\\n              border: \\\\\\\\\\\\\\\"1px solid #00EC97\\\\\\\\\\\\\\\",\\\\\\\\n              background: \\\\\\\\\\\\\\\"rgba(129, 129, 129, 0.00)\\\\\\\\\\\\\\\",\\\\\\\\n            },\\\\\\\\n            label: \\\\\\\\\\\\\\\"Share \\\\\\\\u{2197}\\\\\\\\\\\\\\\",\\\\\\\\n            onClick: onShareClick,\\\\\\\\n            onMouseLeave: () => setLinkCopied(false),\\\\\\\\n            title: \\\\\\\\\\\\\\\"Copy link to clipboard\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <NavlinksContainer>\\\\\\\\n      <NavUnderline className=\\\\\\\\\\\\\\\"nav gap-4 my-4\\\\\\\\\\\\\\\">\\\\\\\\n        {tabs.map(\\\\\\\\n          ({ title }) =>\\\\\\\\n            title && (\\\\\\\\n              <li\\\\\\\\n                className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\"\\\\\\\\n                key={title}\\\\\\\\n                onClick={() => setAddonView(\\\\\\\\\\\\\\\"viewer\\\\\\\\\\\\\\\")}\\\\\\\\n              >\\\\\\\\n                <Link\\\\\\\\n                  to={href({\\\\\\\\n                    widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                    params: {\\\\\\\\n                      page: \\\\\\\\\\\\\\\"community\\\\\\\\\\\\\\\",\\\\\\\\n                      handle: community.handle,\\\\\\\\n                      tab: normalize(title),\\\\\\\\n                    },\\\\\\\\n                  })}\\\\\\\\n                  aria-current={tab === normalize(title) && \\\\\\\\\\\\\\\"page\\\\\\\\\\\\\\\"}\\\\\\\\n                  className={[\\\\\\\\n                    \\\\\\\\\\\\\\\"d-inline-flex gap-2\\\\\\\\\\\\\\\",\\\\\\\\n                    tab === normalize(title) ? \\\\\\\\\\\\\\\"nav-link active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"nav-link\\\\\\\\\\\\\\\",\\\\\\\\n                  ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n                >\\\\\\\\n                  <span>{title}</span>\\\\\\\\n                </Link>\\\\\\\\n              </li>\\\\\\\\n            )\\\\\\\\n        )}\\\\\\\\n      </NavUnderline>\\\\\\\\n      {currentTab.title === \\\\\\\\\\\\\\\"Activity\\\\\\\\\\\\\\\" && (\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"my-4 d-flex align-items-center justify-content-between\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ gap: \\\\\\\\\\\\\\\"2.5rem\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n            <small class=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <span>Required tags:</span>\\\\\\\\n              <Link\\\\\\\\n                to={href({\\\\\\\\n                  widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                  params: { page: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\", tag: community.tag },\\\\\\\\n                })}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Tag\\\\\\\\\\\\\\\"}\\\\\\\\n                  props={{\\\\\\\\n                    tag: community.tag,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </Link>\\\\\\\\n            </small>\\\\\\\\n          </div>\\\\\\\\n          {context.accountId && (\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.PostControls\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                title: \\\\\\\\\\\\\\\"Post\\\\\\\\\\\\\\\",\\\\\\\\n                href: href({\\\\\\\\n                  widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                  params: {\\\\\\\\n                    page: \\\\\\\\\\\\\\\"create\\\\\\\\\\\\\\\",\\\\\\\\n                    labels: [community.tag],\\\\\\\\n                  },\\\\\\\\n                }),\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </NavlinksContainer>\\\\\\\\n    {currentTab && (\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex w-100 h-100\\\\\\\\\\\\\\\" key={currentTab.title}>\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.addon\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            ...currentTab.params,\\\\\\\\n            addonView,\\\\\\\\n            setAddonView,\\\\\\\\n            // below is temporary prop drilling until kanban and github are migrated\\\\\\\\n            permissions,\\\\\\\\n            handle: community.handle,\\\\\\\\n            highlight: {\\\\\\\\n              accountId: props.accountId,\\\\\\\\n              blockHeight: props.blockHeight,\\\\\\\\n            },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.organism.Feed\": {\"\": \"const { Feed } = VM.require(\\\\\\\\\\\\\\\"devs.near/widget/Feed\\\\\\\\\\\\\\\");\\\\\\\\nFeed = Feed || (() => <></>);\\\\\\\\nconst setPostExists = props.setPostExists ?? (() => {});\\\\\\\\nconst showFlagAccountFeature = props.showFlagAccountFeature ?? false;\\\\\\\\n\\\\\\\\nconst filteredAccountIds = props.filteredAccountIds ?? [];\\\\\\\\n\\\\\\\\nconst GRAPHQL_ENDPOINT =\\\\\\\\n  props.GRAPHQL_ENDPOINT ?? \\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nlet lastPostSocialApi = Social.index(\\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\", {\\\\\\\\n  limit: 1,\\\\\\\\n  order: props.sort ? props.sort : \\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\\",\\\\\\\\n});\\\\\\\\n\\\\\\\\nif (lastPostSocialApi == null) {\\\\\\\\n  return \\\\\\\\\\\\\\\"Loading...\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  // If QueryAPI Feed is lagging behind Social API, fallback to old widget.\\\\\\\\n  shouldFallback: false,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(`${GRAPHQL_ENDPOINT}/v1/graphql`, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"dataplatform_near\\\\\\\\\\\\\\\" },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst lastPostQuery = `\\\\\\\\nquery IndexerQuery {\\\\\\\\n  dataplatform_near_social_feed_posts( limit: 1, order_by: { block_height: desc }) {\\\\\\\\n      block_height\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nfetchGraphQL(lastPostQuery, \\\\\\\\\\\\\\\"IndexerQuery\\\\\\\\\\\\\\\", {})\\\\\\\\n  .then((feedIndexerResponse) => {\\\\\\\\n    if (\\\\\\\\n      feedIndexerResponse &&\\\\\\\\n      feedIndexerResponse.body.data.dataplatform_near_social_feed_posts.length >\\\\\\\\n        0\\\\\\\\n    ) {\\\\\\\\n      const nearSocialBlockHeight = lastPostSocialApi[0].blockHeight;\\\\\\\\n      const feedIndexerBlockHeight =\\\\\\\\n        feedIndexerResponse.body.data.dataplatform_near_social_feed_posts[0]\\\\\\\\n          .block_height;\\\\\\\\n\\\\\\\\n      const lag = nearSocialBlockHeight - feedIndexerBlockHeight;\\\\\\\\n      let shouldFallback = lag > 2 || !feedIndexerBlockHeight;\\\\\\\\n      if (shouldFallback === true) {\\\\\\\\n        console.log(\\\\\\\\n          \\\\\\\\\\\\\\\"Falling back to Social index feed. Block difference is: \\\\\\\\\\\\\\\",\\\\\\\\n          nearSocialBlockHeight - feedIndexerBlockHeight\\\\\\\\n        );\\\\\\\\n        State.update({ shouldFallback });\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      console.log(\\\\\\\\n        \\\\\\\\\\\\\\\"Falling back to Social index feed. No QueryApi data received.\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      State.update({ shouldFallback: true });\\\\\\\\n    }\\\\\\\\n  })\\\\\\\\n  .catch((error) => {\\\\\\\\n    console.log(\\\\\\\\n      \\\\\\\\\\\\\\\"Error while fetching QueryApi feed (falling back to index feed): \\\\\\\\\\\\\\\",\\\\\\\\n      error\\\\\\\\n    );\\\\\\\\n    State.update({ shouldFallback: true });\\\\\\\\n  });\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    {state.shouldFallback ? (\\\\\\\\n      <Feed\\\\\\\\n        index={[\\\\\\\\n          {\\\\\\\\n            action: props.action ? props.action : \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            key: \\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\n            options: {\\\\\\\\n              limit: 10,\\\\\\\\n              subscribe: props.onNewUnseenPosts ? true : false,\\\\\\\\n              order: props.sort ? props.sort : \\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\\",\\\\\\\\n              accountId: filteredAccountIds,\\\\\\\\n            },\\\\\\\\n            cacheOptions: {\\\\\\\\n              ignoreCache: true,\\\\\\\\n            },\\\\\\\\n          },\\\\\\\\n        ]}\\\\\\\\n        Item={(item) => {\\\\\\\\n          setPostExists(true);\\\\\\\\n\\\\\\\\n          return (\\\\\\\\n            <Widget\\\\\\\\n              src={`devhub.near/widget/devhub.components.organism.Feed.Posts.Post`}\\\\\\\\n              loading={<div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\" style={{ height: \\\\\\\\\\\\\\\"200px\\\\\\\\\\\\\\\" }} />}\\\\\\\\n              props={{\\\\\\\\n                accountId: item.accountId,\\\\\\\\n                blockHeight: item.blockHeight,\\\\\\\\n                filteredAccountIds: filteredAccountIds,\\\\\\\\n                page: props.page,\\\\\\\\n                handle: props.handle,\\\\\\\\n                tab: props.tab,\\\\\\\\n                highlight: props.highlight,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          );\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    ) : (\\\\\\\\n      <Widget\\\\\\\\n        src={`devhub.near/widget/devhub.components.organism.Feed.NearQueryApi`}\\\\\\\\n        props={{\\\\\\\\n          GRAPHQL_ENDPOINT,\\\\\\\\n          page: props.page,\\\\\\\\n          handle: props.handle,\\\\\\\\n          tab: props.tab,\\\\\\\\n          highlight: props.highlight,\\\\\\\\n          filteredAccountIds: filteredAccountIds,\\\\\\\\n          showFlagAccountFeature: showFlagAccountFeature,\\\\\\\\n          onNewUnseenPosts: props.onNewUnseenPosts,\\\\\\\\n          setPostExists: setPostExists,\\\\\\\\n          sort: props.sort,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.community.Announcements\": {\"\": \"const { handle } = props;\\\\\\\\nconst { getCommunity, setCommunitySocialDB } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\ngetCommunity = getCommunity || (() => <></>);\\\\\\\\nsetCommunitySocialDB = setCommunitySocialDB || (() => <></>);\\\\\\\\n\\\\\\\\nconst communityData = getCommunity({ handle });\\\\\\\\nconst [postsExists, setPostExists] = useState(false);\\\\\\\\nconst [newUnseenPosts, setNewUnseenPosts] = useState([]);\\\\\\\\nconst [lastQueryRequestTimestamp, setLastQueryRequestTimestamp] = useState(\\\\\\\\n  new Date().getTime()\\\\\\\\n);\\\\\\\\nconst [submittedAnnouncementData, setSubmittedAnnouncementData] =\\\\\\\\n  useState(null);\\\\\\\\nconst communityAccountId = `${handle}.community.devhub.near`;\\\\\\\\n\\\\\\\\nlet checkIndexerInterval;\\\\\\\\nconst onNewUnseenPosts = (newUnseenPosts) => {\\\\\\\\n  if (newUnseenPosts.length > 0) {\\\\\\\\n    clearInterval(checkIndexerInterval);\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (submittedAnnouncementData) {\\\\\\\\n    const checkForAnnouncementInSocialDB = () => {\\\\\\\\n      Near.asyncView(\\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get\\\\\\\\\\\\\\\", {\\\\\\\\n        keys: [`${communityAccountId}/post/**`],\\\\\\\\n      }).then((result) => {\\\\\\\\n        try {\\\\\\\\n          const submittedAnnouncementText = JSON.parse(\\\\\\\\n            submittedAnnouncementData.post.main\\\\\\\\n          ).text;\\\\\\\\n          const lastAnnouncementTextFromSocialDB = JSON.parse(\\\\\\\\n            result[communityAccountId].post.main\\\\\\\\n          ).text;\\\\\\\\n          if (submittedAnnouncementText === lastAnnouncementTextFromSocialDB) {\\\\\\\\n            setSubmittedAnnouncementData(null);\\\\\\\\n            checkIndexerInterval = setInterval(() => {\\\\\\\\n              setLastQueryRequestTimestamp(new Date().getTime());\\\\\\\\n            }, 500);\\\\\\\\n            return;\\\\\\\\n          }\\\\\\\\n        } catch (e) {}\\\\\\\\n        setTimeout(() => checkForAnnouncementInSocialDB(), 1000);\\\\\\\\n      });\\\\\\\\n    };\\\\\\\\n    checkForAnnouncementInSocialDB();\\\\\\\\n  }\\\\\\\\n}, [submittedAnnouncementData]);\\\\\\\\n\\\\\\\\nconst MainContent = styled.div`\\\\\\\\n  padding-left: 2rem;\\\\\\\\n  flex: 3;\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    padding-left: 0rem;\\\\\\\\n  }\\\\\\\\n  .post:hover {\\\\\\\\n    background-color: inherit !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst SidebarContainer = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 19px;\\\\\\\\n  font-weight: 600;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst SubHeading = styled.div`\\\\\\\\n  font-size: 15px;\\\\\\\\n  font-weight: 600;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  flex-wrap: no-wrap;\\\\\\\\n  max-width: 100%;\\\\\\\\n\\\\\\\\n  .max-width-100 {\\\\\\\\n    max-width: 100%;\\\\\\\\n  }\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card {\\\\\\\\n    border-radius: 1rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .display-none {\\\\\\\\n    display: none;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Tag = styled.div`\\\\\\\\n  border-top-right-radius: 50px;\\\\\\\\n  border-bottom-right-radius: 50px;\\\\\\\\n  border-top-left-radius: 50px;\\\\\\\\n  border-bottom-left-radius: 50px;\\\\\\\\n  padding-inline: 0.8rem;\\\\\\\\n  padding-block: 0.3rem;\\\\\\\\n  display: flex;\\\\\\\\n  gap: 0.5rem;\\\\\\\\n  border-width: 1px;\\\\\\\\n  border-style: solid;\\\\\\\\n  font-size: 14px;\\\\\\\\n  color: rgba(0, 236, 151, 1);\\\\\\\\n  font-weight: 800;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst [sort, setSort] = useState(\\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\" style={{ maxWidth: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\" }}>\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"d-flex gap-3 m-3 pl-2\\\\\\\\\\\\\\\">\\\\\\\\n      <MainContent className=\\\\\\\\\\\\\\\"max-width-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n          {context.accountId &&\\\\\\\\n            (communityData?.admins ?? []).includes(context.accountId) && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"card p-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Compose\\\\\\\\\\\\\\\"}\\\\\\\\n                  props={{\\\\\\\\n                    onSubmit: (v) => {\\\\\\\\n                      setSubmittedAnnouncementData(v);\\\\\\\\n                      setCommunitySocialDB({ handle, data: v });\\\\\\\\n                    },\\\\\\\\n                    profileAccountId: `${handle}.community.devhub.near`,\\\\\\\\n                    isFinished: () => submittedAnnouncementData === null,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n            <Heading>Announcements</Heading>\\\\\\\\n            <div\\\\\\\\n              className={\\\\\\\\n                postsExists\\\\\\\\n                  ? \\\\\\\\\\\\\\\"d-flex align-items-center gap-2\\\\\\\\\\\\\\\"\\\\\\\\n                  : \\\\\\\\\\\\\\\" display-none\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n            >\\\\\\\\n              <select\\\\\\\\n                name=\\\\\\\\\\\\\\\"sort\\\\\\\\\\\\\\\"\\\\\\\\n                id=\\\\\\\\\\\\\\\"sort\\\\\\\\\\\\\\\"\\\\\\\\n                class=\\\\\\\\\\\\\\\"form-select\\\\\\\\\\\\\\\"\\\\\\\\n                value={sort}\\\\\\\\n                onChange={(e) => {\\\\\\\\n                  setSort(e.target.value);\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <option selected value=\\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\\">\\\\\\\\n                  Latest\\\\\\\\n                </option>\\\\\\\\n                <option value=\\\\\\\\\\\\\\\"recentcommentdesc\\\\\\\\\\\\\\\">Last Commented</option>\\\\\\\\n              </select>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          {!postsExists && (\\\\\\\\n            <div>\\\\\\\\n              <h6>No announcements exists.</h6>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n          <div className={postsExists && \\\\\\\\\\\\\\\"card p-4\\\\\\\\\\\\\\\"}>\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.organism.Feed\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                handle: props.handle,\\\\\\\\n                tab: \\\\\\\\\\\\\\\"announcements\\\\\\\\\\\\\\\",\\\\\\\\n                page: \\\\\\\\\\\\\\\"community\\\\\\\\\\\\\\\",\\\\\\\\n                highlight: props.highlight,\\\\\\\\n                filteredAccountIds: [communityAccountId],\\\\\\\\n                sort: sort,\\\\\\\\n                setPostExists: setPostExists,\\\\\\\\n                showFlagAccountFeature: true,\\\\\\\\n                lastQueryRequestTimestamp,\\\\\\\\n                onNewUnseenPosts,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </MainContent>\\\\\\\\n      <SidebarContainer>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card p-4\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"mb-2\\\\\\\\\\\\\\\">{communityData?.description}</div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-wrap\\\\\\\\\\\\\\\">\\\\\\\\n              <Tag>{communityData?.tag} </Tag>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card p-4 d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <SubHeading>Community Admins</SubHeading>\\\\\\\\n            {(communityData?.admins ?? []).map((accountId) => (\\\\\\\\n              <div\\\\\\\\n                key={accountId}\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex\\\\\\\\\\\\\\\"\\\\\\\\n                style={{ fontWeight: 500 }}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.ProfileCard\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{ accountId }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </SidebarContainer>\\\\\\\\n    </Container>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.organism.Feed.Posts.Feed\": {\"\": \"const GRAPHQL_ENDPOINT =\\\\\\\\n  props.GRAPHQL_ENDPOINT || \\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co\\\\\\\\\\\\\\\";\\\\\\\\nconst loadMorePosts = props.loadMorePosts;\\\\\\\\nconst hasMore = props.hasMore || false;\\\\\\\\nconst posts = props.posts || [];\\\\\\\\n\\\\\\\\nconst Post = styled.div`\\\\\\\\n  border-bottom: 1px solid #eceef0;\\\\\\\\n  padding: 24px 0 12px;\\\\\\\\n  @media (max-width: 1024px) {\\\\\\\\n    padding: 12px 0 0;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst TextLink = styled(\\\\\\\\\\\\\\\"Link\\\\\\\\\\\\\\\")`\\\\\\\\n  font-weight: 600;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst renderItem = (item) => {\\\\\\\\n  if (item.accounts_liked.length !== 0) {\\\\\\\\n    item.accounts_liked = JSON.parse(item.accounts_liked);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (item.content.includes(\\\\\\\\\\\\\\\"repost\\\\\\\\\\\\\\\")) {\\\\\\\\n    const repostData = JSON.parse(item.content);\\\\\\\\n    const fullPath = repostData[0].value.item.path.split(\\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\");\\\\\\\\n    item.repostData = {\\\\\\\\n      reposted_by: item.account_id,\\\\\\\\n      reposted_content: JSON.parse(item.content),\\\\\\\\n      original_post_accountId: fullPath[0],\\\\\\\\n      original_post_blockHeight: repostData[0].value.item.blockHeight,\\\\\\\\n    };\\\\\\\\n  }\\\\\\\\n  return (\\\\\\\\n    <Post className=\\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\" key={item.block_height + \\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\" + item.account_id}>\\\\\\\\n      <Widget\\\\\\\\n        src={`devhub.near/widget/devhub.components.organism.Feed.Posts.Post`}\\\\\\\\n        props={{\\\\\\\\n          page: props.page,\\\\\\\\n          handle: props.handle,\\\\\\\\n          tab: props.tab,\\\\\\\\n          accountId: item.account_id,\\\\\\\\n          blockHeight: item.block_height,\\\\\\\\n          blockTimestamp: item.block_timestamp,\\\\\\\\n          content: item.content,\\\\\\\\n          comments: item.comments,\\\\\\\\n          likes: item.accounts_liked,\\\\\\\\n          GRAPHQL_ENDPOINT,\\\\\\\\n          verifications: item.verifications,\\\\\\\\n          showFlagAccountFeature: props.showFlagAccountFeature ?? false,\\\\\\\\n          profile: item.profile,\\\\\\\\n          isRespost: item.isRespost,\\\\\\\\n          repostData: item.repostData,\\\\\\\\n          highlight: props.highlight,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </Post>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (posts.length === 0 && !props.isLoading) {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"alert alert-info mx-3\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n      Build your feed by finding\\\\\\\\n      <TextLink className=\\\\\\\\\\\\\\\"alert-link\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"near/widget/PeoplePage\\\\\\\\\\\\\\\">\\\\\\\\n        people to follow\\\\\\\\n      </TextLink>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst renderedItems = posts.map(renderItem);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <InfiniteScroll\\\\\\\\n    pageStart={0}\\\\\\\\n    loadMore={loadMorePosts}\\\\\\\\n    hasMore={hasMore}\\\\\\\\n    initialLoad={false}\\\\\\\\n    loader={\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"loader\\\\\\\\\\\\\\\">\\\\\\\\n        <span\\\\\\\\n          className=\\\\\\\\\\\\\\\"spinner-grow spinner-grow-sm me-1\\\\\\\\\\\\\\\"\\\\\\\\n          role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n          aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n        />\\\\\\\\n        Loading ...\\\\\\\\n      </div>\\\\\\\\n    }\\\\\\\\n  >\\\\\\\\n    {renderedItems}\\\\\\\\n  </InfiniteScroll>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.organism.Feed.Posts.Post\": {\"\": \"const GRAPHQL_ENDPOINT =\\\\\\\\n  props.GRAPHQL_ENDPOINT || \\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co\\\\\\\\\\\\\\\";\\\\\\\\nlet accountId = props.accountId;\\\\\\\\nlet blockHeight =\\\\\\\\n  props.blockHeight === \\\\\\\\\\\\\\\"now\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"now\\\\\\\\\\\\\\\" : parseInt(props.blockHeight);\\\\\\\\nconst verifications = props.verifications;\\\\\\\\nconst blockTimestamp = props.blockTimestamp;\\\\\\\\nconst notifyAccountId = accountId;\\\\\\\\nlet postUrl;\\\\\\\\n\\\\\\\\nif (props.page) {\\\\\\\\n  postUrl = `https://devhub.near.page/${props.page}${\\\\\\\\n    props.handle ? `/${props.handle}${props.tab ? `/${props.tab}` : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}` : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n  }`;\\\\\\\\n} else {\\\\\\\\n  postUrl = `https://${REPL_DEVHUB}.page/devhub.near/widget/devhub.components.organism.Feed.Posts.Post`;\\\\\\\\n}\\\\\\\\npostUrl += `?accountId=${accountId}&blockHeight=${blockHeight}`;\\\\\\\\n\\\\\\\\nconst showFlagAccountFeature = props.showFlagAccountFeature;\\\\\\\\nconst profile = props.profile;\\\\\\\\nlet repostedByProfile = null;\\\\\\\\nlet repostedByProfileUrl = null;\\\\\\\\nconst parsedContent = props.content\\\\\\\\n  ? typeof props.content === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\"\\\\\\\\n    ? JSON.parse(props.content)\\\\\\\\n    : props.content\\\\\\\\n  : undefined;\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  hasBeenFlaggedOptimistic: false,\\\\\\\\n  hasBeenFlagged: false,\\\\\\\\n  showToast: false,\\\\\\\\n  flaggedMessage: { header: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", detail: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  postExists: true,\\\\\\\\n  comments: props.comments ?? undefined,\\\\\\\\n  content: parsedContent,\\\\\\\\n  likes: props.likes ?? undefined,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst repostData = props.repostData || null;\\\\\\\\n\\\\\\\\nif (repostData || props.isRepost) {\\\\\\\\n  accountId = repostData.original_post_accountId || props.accountId;\\\\\\\\n  blockHeight = repostData.original_post_blockHeight || props.blockHeight;\\\\\\\\n  repostedByProfile = Social.get(\\\\\\\\n    `${repostData.reposted_by || props.repostedBy}/profile/**`,\\\\\\\\n    \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n  repostedByProfileUrl = `/near/widget/ProfilePage?accountId=${\\\\\\\\n    repostData.reposted_by || props.repostedBy\\\\\\\\n  }`;\\\\\\\\n  postUrl = `https://near.org/s/rp?a=${accountId}&b=${blockHeight}&rb=${\\\\\\\\n    repostData.reposted_by || props.repostedBy\\\\\\\\n  }`;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst edits = []; // Social.index(\\\\\\\\\\\\'edit\\\\\\\\\\\\', { accountId, blockHeight }, { limit: 1, order: \\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\\", accountId })\\\\\\\\n\\\\\\\\nconst item = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n  path: `${accountId}/post/main`,\\\\\\\\n  blockHeight,\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst toggleEdit = () => {\\\\\\\\n  State.update({ editPost: !state.editPost });\\\\\\\\n};\\\\\\\\n\\\\\\\\n// Load post if contents and comments are not passed in\\\\\\\\nif (!state.content || !state.comments || !state.likes) {\\\\\\\\n  const postsQuery = `\\\\\\\\nquery IndexerQuery {\\\\\\\\n  dataplatform_near_social_feed_posts(\\\\\\\\n    order_by: {block_height: desc}\\\\\\\\n    where: {_and: {block_height: {_eq: ${blockHeight}}, account_id: {_eq: \\\\\\\\\\\\\\\"${accountId}\\\\\\\\\\\\\\\"}}}\\\\\\\\n  ) {\\\\\\\\n    account_id\\\\\\\\n    block_height\\\\\\\\n    block_timestamp\\\\\\\\n    content\\\\\\\\n    receipt_id\\\\\\\\n    accounts_liked\\\\\\\\n    comments(order_by: {block_height: asc}) {\\\\\\\\n      account_id\\\\\\\\n      block_height\\\\\\\\n      block_timestamp\\\\\\\\n      content\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\n  function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n    return asyncFetch(`${GRAPHQL_ENDPOINT}/v1/graphql`, {\\\\\\\\n      method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n      headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"dataplatform_near\\\\\\\\\\\\\\\" },\\\\\\\\n      body: JSON.stringify({\\\\\\\\n        query: operationsDoc,\\\\\\\\n        variables: variables,\\\\\\\\n        operationName: operationName,\\\\\\\\n      }),\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  fetchGraphQL(postsQuery, \\\\\\\\\\\\\\\"IndexerQuery\\\\\\\\\\\\\\\", {}).then((result) => {\\\\\\\\n    if (result.status === 200) {\\\\\\\\n      if (result.body.data) {\\\\\\\\n        const posts = result.body.data.dataplatform_near_social_feed_posts;\\\\\\\\n        if (posts.length > 0) {\\\\\\\\n          const post = posts[0];\\\\\\\\n          let content = JSON.parse(post.content);\\\\\\\\n          if (post.accounts_liked.length !== 0) {\\\\\\\\n            if (typeof post.accounts_liked === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n              post.accounts_liked = JSON.parse(post.accounts_liked);\\\\\\\\n            }\\\\\\\\n          }\\\\\\\\n          const comments = post.comments;\\\\\\\\n          State.update({\\\\\\\\n            content: content,\\\\\\\\n            comments: comments,\\\\\\\\n            likes: post.accounts_liked,\\\\\\\\n          });\\\\\\\\n        } else {\\\\\\\\n          State.update({\\\\\\\\n            postExists: false,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  if (state.postExists == false) {\\\\\\\\n    return \\\\\\\\\\\\\\\"Post does not exist\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  return \\\\\\\\\\\\\\\"loading...\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Post = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  &::before {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    display: block;\\\\\\\\n    position: absolute;\\\\\\\\n    left: 19px;\\\\\\\\n    top: 52px;\\\\\\\\n    bottom: 12px;\\\\\\\\n    width: 2px;\\\\\\\\n    background: #eceef0;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  margin-bottom: 0;\\\\\\\\n  display: inline-flex;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Body = styled.div`\\\\\\\\n  padding-left: 52px;\\\\\\\\n  padding-bottom: 1px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Content = styled.div`\\\\\\\\n  img {\\\\\\\\n    display: block;\\\\\\\\n    max-width: 100%;\\\\\\\\n    max-height: 80vh;\\\\\\\\n    margin: 0 0 12px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Text = styled.p`\\\\\\\\n  display: block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 20px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  white-space: nowrap;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 12px;\\\\\\\\n  margin: -6px -6px 6px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Comments = styled.div`\\\\\\\\n  > div > div:first-child {\\\\\\\\n    padding-top: 12px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nconst CommentWrapper = styled.div`\\\\\\\\n  > div:first-child {\\\\\\\\n    > a:first-child {\\\\\\\\n      display: inline-flex;\\\\\\\\n      margin-bottom: 24px;\\\\\\\\n      font-size: 14px;\\\\\\\\n      line-height: 20px;\\\\\\\\n      color: #687076;\\\\\\\\n      outline: none;\\\\\\\\n      font-weight: 600;\\\\\\\\n\\\\\\\\n      &:hover,\\\\\\\\n      &:focus {\\\\\\\\n        color: #687076;\\\\\\\\n        text-decoration: underline;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst TextLink = styled(\\\\\\\\\\\\\\\"Link\\\\\\\\\\\\\\\")`\\\\\\\\n  display: inline block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 18px;\\\\\\\\n  color: ${(p) => (p.$bold ? \\\\\\\\\\\\\\\"#11181C !important\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"#687076 !important\\\\\\\\\\\\\\\")};\\\\\\\\n  font-weight: ${(p) => (p.$bold ? \\\\\\\\\\\\\\\"600\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"400\\\\\\\\\\\\\\\")};\\\\\\\\n  font-size: ${(p) => (p.$small ? \\\\\\\\\\\\\\\"12px\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"14px\\\\\\\\\\\\\\\")};\\\\\\\\n  overflow: ${(p) => (p.$ellipsis ? \\\\\\\\\\\\\\\"hidden\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\")};\\\\\\\\n  text-overflow: ${(p) => (p.$ellipsis ? \\\\\\\\\\\\\\\"ellipsis\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"unset\\\\\\\\\\\\\\\")};\\\\\\\\n  white-space: nowrap;\\\\\\\\n  outline: none;\\\\\\\\n\\\\\\\\n  &:focus,\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: underline;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst TagsWrapper = styled.div`\\\\\\\\n  padding-top: 4px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst optimisticallyHideItem = (message) => {\\\\\\\\n  State.update({\\\\\\\\n    hasBeenFlaggedOptimistic: true,\\\\\\\\n    showToast: true,\\\\\\\\n    flaggedMessage: message,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\nconst resolveHideItem = (message) => {\\\\\\\\n  State.update({\\\\\\\\n    hasBeenFlagged: true,\\\\\\\\n    showToast: true,\\\\\\\\n    flaggedMessage: message,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\nconst cancelHideItem = () => {\\\\\\\\n  State.update({\\\\\\\\n    hasBeenFlaggedOptimistic: false,\\\\\\\\n    showToast: false,\\\\\\\\n    flaggedMessage: { header: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", detail: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst renderComment = (a) => {\\\\\\\\n  return (\\\\\\\\n    <div key={JSON.stringify(a)}>\\\\\\\\n      <Widget\\\\\\\\n        src={`near/widget/Comments.Comment`}\\\\\\\\n        props={{\\\\\\\\n          accountId: a.account_id,\\\\\\\\n          blockHeight: a.block_height,\\\\\\\\n          content: a.content,\\\\\\\\n          highlight:\\\\\\\\n            a.account_id === props.highlightComment?.accountId &&\\\\\\\\n            a.block_height === props.highlightComment?.blockHeight,\\\\\\\\n          GRAPHQL_ENDPOINT,\\\\\\\\n          notifyAccountId,\\\\\\\\n          item,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst renderedComments = state.comments.map(renderComment);\\\\\\\\n\\\\\\\\nconst addNewCommentFn = (newComment) => {\\\\\\\\n  State.update(state.comments.push(newComment));\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst highlight =\\\\\\\\n  props.highlight?.accountId === accountId &&\\\\\\\\n  props.highlight?.blockHeight === `${blockHeight}`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {state.showToast && (\\\\\\\\n      <Widget\\\\\\\\n        src={`near/widget/DIG.Toast`}\\\\\\\\n        props={{\\\\\\\\n          type: \\\\\\\\\\\\\\\"info\\\\\\\\\\\\\\\",\\\\\\\\n          title: state.flaggedMessage.header,\\\\\\\\n          description: state.flaggedMessage.detail,\\\\\\\\n          open: state.showToast,\\\\\\\\n          onOpenChange: () => {\\\\\\\\n            State.update({ showToast: false });\\\\\\\\n          },\\\\\\\\n          duration: 5000,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    )}\\\\\\\\n    {!state.hasBeenFlagged && (\\\\\\\\n      <Post\\\\\\\\n        id={`${accountId.replace(/[^a-z0-9]/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")}${blockHeight}`}\\\\\\\\n        style={{ border: highlight ? \\\\\\\\\\\\\\\"2px solid black\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }}\\\\\\\\n      >\\\\\\\\n        <>\\\\\\\\n          {repostData || isRepost ? (\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"near/widget/AccountProfileOverlay\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                accountId,\\\\\\\\n                profile,\\\\\\\\n                children: (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"col-auto \\\\\\\\\\\\\\\">\\\\\\\\n                      <i className=\\\\\\\\\\\\\\\"bi bi-repeat\\\\\\\\\\\\\\\" /> reposted by{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <TextLink href={repostedByProfileUrl} $ellipsis>\\\\\\\\n                        @{repostData.reposted_by}\\\\\\\\n                      </TextLink>\\\\\\\\n                      {tags.length > 0 && (\\\\\\\\n                        <TagsWrapper>\\\\\\\\n                          <Widget\\\\\\\\n                            src=\\\\\\\\\\\\\\\"near/widget/Tags\\\\\\\\\\\\\\\"\\\\\\\\n                            props={{ tags, scroll: true }}\\\\\\\\n                          />\\\\\\\\n                        </TagsWrapper>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                ),\\\\\\\\n                placement: props.overlayPlacement,\\\\\\\\n                verifications,\\\\\\\\n                showFlagAccountFeature,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          ) : null}\\\\\\\\n        </>\\\\\\\\n        <Header>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"col-auto\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  profile: repostData ? null : profile,\\\\\\\\n                  verifications,\\\\\\\\n                  accountId: repostData\\\\\\\\n                    ? repostData.original_post_accountId\\\\\\\\n                    : accountId,\\\\\\\\n                  hideAccountId: true,\\\\\\\\n                  inlineContent: (\\\\\\\\n                    <>\\\\\\\\n                      <Text as=\\\\\\\\\\\\\\\"span\\\\\\\\\\\\\\\">\\\\\\\\u{ff65}</Text>\\\\\\\\n                      <Text>\\\\\\\\n                        <Widget\\\\\\\\n                          src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n                          props={{ blockHeight, blockTimestamp }}\\\\\\\\n                        />\\\\\\\\n                      </Text>\\\\\\\\n                      {false && edits.length > 0 && (\\\\\\\\n                        <Text as=\\\\\\\\\\\\\\\"span\\\\\\\\\\\\\\\">\\\\\\\\u{ff65} Edited</Text>\\\\\\\\n                      )}\\\\\\\\n                    </>\\\\\\\\n                  ),\\\\\\\\n                  showFlagAccountFeature,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"col-1\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ position: \\\\\\\\\\\\\\\"absolute\\\\\\\\\\\\\\\", right: 0, top: \\\\\\\\\\\\\\\"2px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/Posts.Menu\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    item,\\\\\\\\n                    accountId: repostData.original_post_accountId || accountId,\\\\\\\\n                    blockHeight:\\\\\\\\n                      repostData.original_post_blockHeight || blockHeight,\\\\\\\\n                    parentFunctions: {\\\\\\\\n                      toggleEdit,\\\\\\\\n                      optimisticallyHideItem,\\\\\\\\n                      resolveHideItem,\\\\\\\\n                      cancelHideItem,\\\\\\\\n                    },\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </Header>\\\\\\\\n\\\\\\\\n        {!state.hasBeenFlaggedOptimistic && (\\\\\\\\n          <Body>\\\\\\\\n            {state.content && (\\\\\\\\n              <Content>\\\\\\\\n                {state.content.text && !state.editPost && (\\\\\\\\n                  <Widget\\\\\\\\n                    src=\\\\\\\\\\\\\\\"near/widget/SocialMarkdown\\\\\\\\\\\\\\\"\\\\\\\\n                    props={{ text: state.content.text }}\\\\\\\\n                  />\\\\\\\\n                )}\\\\\\\\n\\\\\\\\n                {state.editPost && (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"mb-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Widget\\\\\\\\n                      src=\\\\\\\\\\\\\\\"near/widget/Posts.Edit\\\\\\\\\\\\\\\"\\\\\\\\n                      props={{\\\\\\\\n                        item: { accountId, blockHeight },\\\\\\\\n                        content: state.content,\\\\\\\\n                        onEdit: toggleEdit,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n\\\\\\\\n                {state.content.image && (\\\\\\\\n                  <Widget\\\\\\\\n                    src=\\\\\\\\\\\\\\\"mob.near/widget/Image\\\\\\\\\\\\\\\"\\\\\\\\n                    props={{\\\\\\\\n                      image: state.content.image,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                )}\\\\\\\\n              </Content>\\\\\\\\n            )}\\\\\\\\n\\\\\\\\n            {blockHeight !== \\\\\\\\\\\\\\\"now\\\\\\\\\\\\\\\" && (\\\\\\\\n              <Actions>\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/v1.LikeButton\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    item,\\\\\\\\n                    notifyAccountId,\\\\\\\\n                    likes: state.likes,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/CommentButton\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    item,\\\\\\\\n                    onClick: () =>\\\\\\\\n                      State.update({ showReply: !state.showReply }),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/Posts.RepostButton\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    item,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/CopyUrlButton\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    url: postUrl,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/ShareButton\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n                    url: postUrl,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </Actions>\\\\\\\\n            )}\\\\\\\\n            {state.showReply && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mb-2\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/Comments.Compose\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    notifyAccountId,\\\\\\\\n                    item,\\\\\\\\n                    onComment: () => State.update({ showReply: false }),\\\\\\\\n                    newAddedComment: addNewCommentFn,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n            {renderedComments && (\\\\\\\\n              <Comments>\\\\\\\\n                <CommentWrapper>{renderedComments}</CommentWrapper>\\\\\\\\n              </Comments>\\\\\\\\n            )}\\\\\\\\n          </Body>\\\\\\\\n        )}\\\\\\\\n      </Post>\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.organism.Feed.NearQueryApi\": {\"\": \"const LIMIT = 10;\\\\\\\\nconst filteredAccountIds = props.filteredAccountIds;\\\\\\\\nconst setPostExists = props.setPostExists ?? (() => {});\\\\\\\\nconst GRAPHQL_ENDPOINT =\\\\\\\\n  props.GRAPHQL_ENDPOINT ?? \\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst sort = props.sort || \\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n// get the full list of posts that the current user has flagged so\\\\\\\\n// they can be hidden\\\\\\\\nconst selfFlaggedPosts = context.accountId\\\\\\\\n  ? Social.index(\\\\\\\\\\\\\\\"flag\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\", {\\\\\\\\n      accountId: context.accountId,\\\\\\\\n    }) ?? []\\\\\\\\n  : [];\\\\\\\\n\\\\\\\\n// V2 self moderation data, structure is like:\\\\\\\\n// { moderate: {\\\\\\\\n//     \\\\\\\\\\\\\\\"account1.near\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"report\\\\\\\\\\\\\\\",\\\\\\\\n//     \\\\\\\\\\\\\\\"account2.near\\\\\\\\\\\\\\\": {\\\\\\\\n//         \\\\\\\\\\\\\\\".post.main\\\\\\\\\\\\\\\": { // slashes are not allowed in keys\\\\\\\\n//           \\\\\\\\\\\\\\\"100000123\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"spam\\\\\\\\\\\\\\\", // post ids are account/blockHeight\\\\\\\\n//         }\\\\\\\\n//     },\\\\\\\\n//   }\\\\\\\\n// }\\\\\\\\nconst selfModeration = context.accountId\\\\\\\\n  ? Social.getr(`${context.accountId}/moderate`, \\\\\\\\\\\\\\\"optimistic\\\\\\\\\\\\\\\") ?? []\\\\\\\\n  : [];\\\\\\\\nconst postsModerationKey = \\\\\\\\\\\\\\\".post.main\\\\\\\\\\\\\\\";\\\\\\\\nconst commentsModerationKey = \\\\\\\\\\\\\\\".post.comment\\\\\\\\\\\\\\\";\\\\\\\\nconst matchesModeration = (moderated, socialDBObjectType, item) => {\\\\\\\\n  if (!moderated) return false;\\\\\\\\n  const accountFound = moderated[item.account_id];\\\\\\\\n  if (typeof accountFound === \\\\\\\\\\\\\\\"undefined\\\\\\\\\\\\\\\") {\\\\\\\\n    return false;\\\\\\\\n  }\\\\\\\\n  if (typeof accountFound === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" || accountFound[\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"]) {\\\\\\\\n    return true;\\\\\\\\n  }\\\\\\\\n  const moderatedItemsOfType = accountFound[socialDBObjectType];\\\\\\\\n  return (\\\\\\\\n    moderatedItemsOfType &&\\\\\\\\n    typeof moderatedItemsOfType[item.block_height] !== \\\\\\\\\\\\\\\"undefined\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst shouldFilter = (item, socialDBObjectType) => {\\\\\\\\n  return (\\\\\\\\n    selfFlaggedPosts.find((flagged) => {\\\\\\\\n      return (\\\\\\\\n        flagged?.value?.blockHeight === item.block_height &&\\\\\\\\n        flagged?.value?.path.includes(item.account_id)\\\\\\\\n      );\\\\\\\\n    }) || matchesModeration(selfModeration, socialDBObjectType, item)\\\\\\\\n  );\\\\\\\\n};\\\\\\\\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(`${GRAPHQL_ENDPOINT}/v1/graphql`, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"dataplatform_near\\\\\\\\\\\\\\\" },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst createQuery = (type, isUpdate) => {\\\\\\\\n  let querySortOption = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  switch (sort) {\\\\\\\\n    case \\\\\\\\\\\\\\\"recentcommentdesc\\\\\\\\\\\\\\\":\\\\\\\\n      querySortOption = `{ last_comment_timestamp: desc_nulls_last },`;\\\\\\\\n      break;\\\\\\\\n    default:\\\\\\\\n      querySortOption = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  let queryFilter = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  let timeOperation = \\\\\\\\\\\\\\\"_lte\\\\\\\\\\\\\\\";\\\\\\\\n  if (isUpdate) {\\\\\\\\n    timeOperation = \\\\\\\\\\\\\\\"_gt\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const queryTime = initialQueryTime ? initialQueryTime : Date.now() * 1000000;\\\\\\\\n\\\\\\\\n  if (filteredAccountIds) {\\\\\\\\n    queryFilter = `where: {\\\\\\\\n          _and: [\\\\\\\\n            {account_id: {_in: \\\\\\\\\\\\\\\"${filteredAccountIds}\\\\\\\\\\\\\\\"}},\\\\\\\\n            {block_timestamp: {${timeOperation}: ${queryTime}}}\\\\\\\\n          ]\\\\\\\\n        }, `;\\\\\\\\n  } else {\\\\\\\\n    queryFilter = `where: {\\\\\\\\n          _and: [\\\\\\\\n            {block_timestamp: {${timeOperation}: ${queryTime}}}\\\\\\\\n          ]\\\\\\\\n        }, `;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return `\\\\\\\\nquery FeedQuery($offset: Int, $limit: Int) {\\\\\\\\n  dataplatform_near_social_feed_moderated_posts(${queryFilter} order_by: [${querySortOption} { block_height: desc }], offset: $offset, limit: $limit) {\\\\\\\\n    account_id\\\\\\\\n    block_height\\\\\\\\n    block_timestamp\\\\\\\\n    content\\\\\\\\n    receipt_id\\\\\\\\n    accounts_liked\\\\\\\\n    last_comment_timestamp\\\\\\\\n    comments(order_by: {block_height: asc}) {\\\\\\\\n      account_id\\\\\\\\n      block_height\\\\\\\\n      block_timestamp\\\\\\\\n      content\\\\\\\\n    }\\\\\\\\n    verifications {\\\\\\\\n      human_provider\\\\\\\\n      human_valid_until\\\\\\\\n      human_verification_level\\\\\\\\n    }\\\\\\\\n\\\\\\\\n  }\\\\\\\\n  dataplatform_near_social_feed_moderated_posts_aggregate(${queryFilter} order_by: {id: asc}) {\\\\\\\\n    aggregate {\\\\\\\\n      count\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst loadMorePosts = (isUpdate) => {\\\\\\\\n  const queryName = \\\\\\\\\\\\\\\"FeedQuery\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n  if (!isUpdate) {\\\\\\\\n    setIsLoading(true);\\\\\\\\n  }\\\\\\\\n  const offset = isUpdate ? 0 : postsData.posts.length;\\\\\\\\n  const limit = isUpdate ? 100 : LIMIT;\\\\\\\\n  const query = createQuery(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", isUpdate);\\\\\\\\n  fetchGraphQL(query, queryName, {\\\\\\\\n    offset: offset,\\\\\\\\n    limit: limit,\\\\\\\\n  }).then((result) => {\\\\\\\\n    if (result.status === 200 && result.body) {\\\\\\\\n      if (result.body.errors) {\\\\\\\\n        console.log(\\\\\\\\\\\\\\\"error:\\\\\\\\\\\\\\\", result.body.errors);\\\\\\\\n        return;\\\\\\\\n      }\\\\\\\\n      let data = result.body.data;\\\\\\\\n      if (data) {\\\\\\\\n        const newPosts = data.dataplatform_near_social_feed_moderated_posts;\\\\\\\\n        const postsCountLeft =\\\\\\\\n          data.dataplatform_near_social_feed_moderated_posts_aggregate.aggregate\\\\\\\\n            .count;\\\\\\\\n        if (newPosts.length > 0) {\\\\\\\\n          let filteredPosts = newPosts.filter(\\\\\\\\n            (i) => !shouldFilter(i, postsModerationKey)\\\\\\\\n          );\\\\\\\\n          filteredPosts = filteredPosts.map((post) => {\\\\\\\\n            const prevComments = post.comments;\\\\\\\\n            const filteredComments = prevComments.filter(\\\\\\\\n              (comment) => !shouldFilter(comment, commentsModerationKey)\\\\\\\\n            );\\\\\\\\n            post.comments = filteredComments;\\\\\\\\n            return post;\\\\\\\\n          });\\\\\\\\n\\\\\\\\n          if (isUpdate) {\\\\\\\\n            setNewUnseenPosts(filteredPosts);\\\\\\\\n          } else {\\\\\\\\n            setPostsData({\\\\\\\\n              posts: [...postsData.posts, ...filteredPosts],\\\\\\\\n              postsCountLeft,\\\\\\\\n            });\\\\\\\\n            setIsLoading(false);\\\\\\\\n          }\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    if (!isUpdate && initialQueryTime === null) {\\\\\\\\n      const newTime =\\\\\\\\n        postsData.posts && postsData.posts[0]\\\\\\\\n          ? postsData.posts[0].block_timestamp\\\\\\\\n          : Date.now() * 1000000;\\\\\\\\n      setInitialQueryTime(newTime + 1000);\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst startFeedUpdates = () => {\\\\\\\\n  if (initialQueryTime === null) return;\\\\\\\\n\\\\\\\\n  clearInterval(feedInterval);\\\\\\\\n  const newFeedInterval = setInterval(() => {\\\\\\\\n    loadMorePosts(true);\\\\\\\\n  }, 5000);\\\\\\\\n  setFeedInterval(newFeedInterval);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst stopFeedUpdates = () => {\\\\\\\\n  clearInterval(feedInterval);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [initialized, setInitialized] = useState(false);\\\\\\\\nconst [initialQueryTime, setInitialQueryTime] = useState(null);\\\\\\\\nconst [feedInterval, setFeedInterval] = useState(null);\\\\\\\\nconst [newUnseenPosts, setNewUnseenPosts] = useState([]);\\\\\\\\nconst [postsData, setPostsData] = useState({ posts: [], postsCountLeft: 0 });\\\\\\\\nconst [isLoading, setIsLoading] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  loadMorePosts(false);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (postsData.posts.length > 0) {\\\\\\\\n    setPostExists(true);\\\\\\\\n  }\\\\\\\\n}, [postsData]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (initialQueryTime === null) {\\\\\\\\n    clearInterval(feedInterval);\\\\\\\\n  } else {\\\\\\\\n    startFeedUpdates();\\\\\\\\n  }\\\\\\\\n}, [initialQueryTime]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (newUnseenPosts && newUnseenPosts.length > 0) {\\\\\\\\n    stopFeedUpdates();\\\\\\\\n    const initialQueryTime = newUnseenPosts[0].block_timestamp + 1000; // timestamp is getting rounded by 3 digits\\\\\\\\n    const newTotalCount = postsData.postsCountLeft + newUnseenPosts.length;\\\\\\\\n    setPostsData({\\\\\\\\n      posts: [...newUnseenPosts, ...postsData.posts],\\\\\\\\n      postsCountLeft: newTotalCount,\\\\\\\\n    });\\\\\\\\n    if (props.onNewUnseenPosts) {\\\\\\\\n      props.onNewUnseenPosts(newUnseenPosts);\\\\\\\\n    }\\\\\\\\n    setNewUnseenPosts([]);\\\\\\\\n    setInitialQueryTime(initialQueryTime);\\\\\\\\n  }\\\\\\\\n}, [newUnseenPosts]);\\\\\\\\n\\\\\\\\nconst hasMore =\\\\\\\\n  postsData.postsCountLeft !== postsData.posts.length &&\\\\\\\\n  postsData.posts.length > 0;\\\\\\\\n\\\\\\\\nif (!initialized && sort) {\\\\\\\\n  setInitialized(true);\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Widget\\\\\\\\n      src={`devhub.near/widget/devhub.components.organism.Feed.Posts.Feed`}\\\\\\\\n      props={{\\\\\\\\n        page: props.page,\\\\\\\\n        handle: props.handle,\\\\\\\\n        tab: props.tab,\\\\\\\\n        highlight: props.highlight,\\\\\\\\n        hasMore,\\\\\\\\n        isLoading,\\\\\\\\n        loadMorePosts: () => {\\\\\\\\n          if (!isLoading) {\\\\\\\\n            loadMorePosts(false);\\\\\\\\n          }\\\\\\\\n        },\\\\\\\\n        posts: postsData.posts,\\\\\\\\n        showFlagAccountFeature: props.showFlagAccountFeature,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.8141416471263e+21
    }
  },
  {
    "id": "7094892755",
    "receipt_id": "5e8QvLdSy3TrCFsY5E2hAwBThrPw9TCaGVXXFJVip9Mu",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8GGepHQJC2bavGLM98cNwayXxNPBbKkg7fETWxzMmxVb",
      "block_height": 124767889,
      "block_timestamp": 1722522729310013400
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "71xXKJDE8fW5sfKo9HhEgBZdtSm2JAY4KTozpMQQYRV5",
    "included_in_block_hash": "BqWLy6HpuNmDc9C2aRG81yns8tyPgBiuhnmjSHCX17Es",
    "block_timestamp": "1722522727007691359",
    "block": {
      "block_height": 124767887
    },
    "receipt_conversion_tokens_burnt": "42184841719400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8636629090359767e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.8141416471263e+21
    }
  },
  {
    "id": "7097992832",
    "receipt_id": "VuEK7TZ39z4LbgqWC5bcKHSpudAcu8d4K4CDDbtoLTh",
    "predecessor_account_id": "yurtur.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "CPY5yqECy9y74MxGQyp4DKTHbzMxnYSNdBX458qMmubS",
      "block_height": 124777692,
      "block_timestamp": 1722533587875477500
    },
    "receipt_outcome": {
      "gas_burnt": 5328568681271,
      "tokens_burnt": 532856868127100000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "8KALXNAbd6C2wNadRRbmsE3uLCPkASGcr55Zk3K49mgE",
    "included_in_block_hash": "9Hx4cv3ZRHZQ6667e2UZsbLnsW1mdVS4kdu8EqZC3UJ7",
    "block_timestamp": "1722533586622401996",
    "block": {
      "block_height": 124777691
    },
    "receipt_conversion_tokens_burnt": "31535758857600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_proposal",
        "deposit": 0,
        "fee": 532856868127100000000,
        "args": "{\"body\": {\"name\": \"DevHub Developer Contributor report by Yurtur for 06/01/2024 \\\\\\\\u{2013} 06/30/2024\", \"summary\": \"Developed small high-level NEAR API Rust library, small prs to finish 0.23 rollout.\", \"category\": \"Tooling & Infrastructure\", \"timeline\": {\"status\": \"DRAFT\"}, \"supervisor\": \"frol.near\", \"description\": \"Total Hours: 76\\\\\\\\nHourly rate: $75/h\\\\\\\\nTotal: 5700 USD\\\\\\\\n\\\\\\\\n##### Various small PRs - 8 hours in total\\\\\\\\n* [bos-cli-rs](https://github.com/bos-cli-rs/bos-cli-rs/pull/96) - Updated deps to 0.23. Had to work-out type resolution. 4 hours\\\\\\\\n* [near-workspaces](https://github.com/near/near-workspaces-rs/pull/363) - Upgraded deps to 0.23. 3 hours\\\\\\\\n* [near-sdk-rs](https://github.com/near/near-sdk-rs/pull/1217) - bumped up near-workspaces 0.5 hour\\\\\\\\n* [cargo-near](https://github.com/near/cargo-near/pull/176) - bumped up near-workspaces 0.5 hour\\\\\\\\n\\\\\\\\n\\\\\\\\n##### NEAR-api \\\\\\\\nVlad and I have discussed and thought it would be a good idea to develop a high-level NEAR API library for Rust to simplify development and interaction with the chain.\\\\\\\\nAs near-cli-rs has already been implemented and has received love and support from the community, we have decided to take inspiration for API from the near-cli-rs user journey.\\\\\\\\n\\\\\\\\nAfter a few syncs and iterations, we have a good PoC candidate that supports contract interaction, contract querying, sending NEAR/FT/NFT, retrieving user information,\\\\\\\\ninteraction with contract storage deposits and staking pools with several ways to sign the transaction.\\\\\\\\n\\\\\\\\nThe library highly utilizes builder patterns. That way we support and help users through the flow, avoiding mistakes. In the API we tried to minimize risks to provide incorrect data.\\\\\\\\n\\\\\\\\nNEAR-API link - https://github.com/akorchyn/near-api\\\\\\\\n\\\\\\\\n###### Work timeline - 60 Hours\\\\\\\\n* July 4 -  4 hours Initial work and setup contract querying and user querying. \\\\\\\\n* July 5 -  4 hours Various small improvements.\\\\\\\\n* July 8 -  8 hours Transaction construction, signing general/meta transactions. Sending them \\\\\\\\n* July 9 -  4 hours Improvements as per discussion with Vlad \\\\\\\\n* July 11 - 6 hours Retries and timeout is configurable, added ability to create new account\\\\\\\\n* July 12 - 4 hours Added ability to create multi query, added storage management, added loading balance\\\\\\\\n* July 15 - 8 hours Implemented keystore, refactored querying to support various rpc call, staking methods and contract methods\\\\\\\\n* July 17 - 4 hours Restructured, created two examples\\\\\\\\n* July 18 - 4 hours Simplified the postprocessor builder, and reused the secret builder in Account.add_key, added initial examples\\\\\\\\n* July 25 - 6 hours Improved ft workflow, changed storage deposit api and ft balance api, nft example, added clone debug where possible\\\\\\\\n* July 26 - 8 hours Initial integration tests, removed completely anyhow in favor to thiserror. Added readme, discussed FTBalance with Vlad and added from_float_str \\\\\\\\n\\\\\\\\n##### Non direct time consumption - 8 hours\\\\\\\\n* Discussion and syncing, near-api discussions, code review\\\\\\\\n\", \"linked_proposals\": [], \"receiver_account\": \"yurtur.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"5700\", \"requested_sponsorship_paid_in_currency\": \"USDT\"}, \"labels\": [], \"accepted_terms_and_conditions_version\": 124777523}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7103229505596e+21
    }
  },
  {
    "id": "7097993101",
    "receipt_id": "DrVarvMmni5oPRXYPNicDfc7bFzgBoHCaRp5Jx8J1aWe",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2vxERKcZqFafgZHzbdiXbDXw8JQ7RETDTbHiwe7aUk8D",
      "block_height": 124777693,
      "block_timestamp": 1722533589046180600
    },
    "receipt_outcome": {
      "gas_burnt": 4495162565254,
      "tokens_burnt": 449516256525400000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "8KALXNAbd6C2wNadRRbmsE3uLCPkASGcr55Zk3K49mgE",
    "included_in_block_hash": "9Hx4cv3ZRHZQ6667e2UZsbLnsW1mdVS4kdu8EqZC3UJ7",
    "block_timestamp": "1722533586622401996",
    "block": {
      "block_height": 124777691
    },
    "receipt_conversion_tokens_burnt": "31535758857600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 449516256525400000000,
        "args": "{\"data\": {\"devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"We have just received a new *Tooling & Infrastructure* proposal.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**By**: @yurtur.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Title**: \\\\\\\\u{201c}DevHub Developer Contributor report by Yurtur for 06/01/2024 \\\\\\\\u{2013} 06/30/2024\\\\\\\\u{201c}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Summary**:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nDeveloped small high-level NEAR API Rust library, small prs to finish 0.23 rollout.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nRead the full proposal and share your feedback on [DevHub](/devhub.near/widget/app?page=proposal&id=169)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7103229505596e+21
    }
  },
  {
    "id": "7097993107",
    "receipt_id": "5pL3f1dbuTLqQ2dWcVkjaBTT99npK66Bc8xcsxDTBsrU",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2vxERKcZqFafgZHzbdiXbDXw8JQ7RETDTbHiwe7aUk8D",
      "block_height": 124777693,
      "block_timestamp": 1722533589046180600
    },
    "receipt_outcome": {
      "gas_burnt": 3435081565426,
      "tokens_burnt": 343508156542600000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "8KALXNAbd6C2wNadRRbmsE3uLCPkASGcr55Zk3K49mgE",
    "included_in_block_hash": "9Hx4cv3ZRHZQ6667e2UZsbLnsW1mdVS4kdu8EqZC3UJ7",
    "block_timestamp": "1722533586622401996",
    "block": {
      "block_height": 124777691
    },
    "receipt_conversion_tokens_burnt": "31535758857600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_block_height_callback",
        "deposit": 0,
        "fee": 343508156542600000000,
        "args": "{\"proposal\": {\"id\": 169, \"snapshot\": {\"name\": \"DevHub Developer Contributor report by Yurtur for 06/01/2024 \\\\\\\\u{2013} 06/30/2024\", \"labels\": [], \"summary\": \"Developed small high-level NEAR API Rust library, small prs to finish 0.23 rollout.\", \"category\": \"Tooling & Infrastructure\", \"timeline\": {\"status\": \"DRAFT\"}, \"editor_id\": \"yurtur.near\", \"timestamp\": \"1722533587875477471\", \"supervisor\": \"frol.near\", \"description\": \"Total Hours: 76\\\\\\\\nHourly rate: $75/h\\\\\\\\nTotal: 5700 USD\\\\\\\\n\\\\\\\\n##### Various small PRs - 8 hours in total\\\\\\\\n* [bos-cli-rs](https://github.com/bos-cli-rs/bos-cli-rs/pull/96) - Updated deps to 0.23. Had to work-out type resolution. 4 hours\\\\\\\\n* [near-workspaces](https://github.com/near/near-workspaces-rs/pull/363) - Upgraded deps to 0.23. 3 hours\\\\\\\\n* [near-sdk-rs](https://github.com/near/near-sdk-rs/pull/1217) - bumped up near-workspaces 0.5 hour\\\\\\\\n* [cargo-near](https://github.com/near/cargo-near/pull/176) - bumped up near-workspaces 0.5 hour\\\\\\\\n\\\\\\\\n\\\\\\\\n##### NEAR-api \\\\\\\\nVlad and I have discussed and thought it would be a good idea to develop a high-level NEAR API library for Rust to simplify development and interaction with the chain.\\\\\\\\nAs near-cli-rs has already been implemented and has received love and support from the community, we have decided to take inspiration for API from the near-cli-rs user journey.\\\\\\\\n\\\\\\\\nAfter a few syncs and iterations, we have a good PoC candidate that supports contract interaction, contract querying, sending NEAR/FT/NFT, retrieving user information,\\\\\\\\ninteraction with contract storage deposits and staking pools with several ways to sign the transaction.\\\\\\\\n\\\\\\\\nThe library highly utilizes builder patterns. That way we support and help users through the flow, avoiding mistakes. In the API we tried to minimize risks to provide incorrect data.\\\\\\\\n\\\\\\\\nNEAR-API link - https://github.com/akorchyn/near-api\\\\\\\\n\\\\\\\\n###### Work timeline - 60 Hours\\\\\\\\n* July 4 -  4 hours Initial work and setup contract querying and user querying. \\\\\\\\n* July 5 -  4 hours Various small improvements.\\\\\\\\n* July 8 -  8 hours Transaction construction, signing general/meta transactions. Sending them \\\\\\\\n* July 9 -  4 hours Improvements as per discussion with Vlad \\\\\\\\n* July 11 - 6 hours Retries and timeout is configurable, added ability to create new account\\\\\\\\n* July 12 - 4 hours Added ability to create multi query, added storage management, added loading balance\\\\\\\\n* July 15 - 8 hours Implemented keystore, refactored querying to support various rpc call, staking methods and contract methods\\\\\\\\n* July 17 - 4 hours Restructured, created two examples\\\\\\\\n* July 18 - 4 hours Simplified the postprocessor builder, and reused the secret builder in Account.add_key, added initial examples\\\\\\\\n* July 25 - 6 hours Improved ft workflow, changed storage deposit api and ft balance api, nft example, added clone debug where possible\\\\\\\\n* July 26 - 8 hours Initial integration tests, removed completely anyhow in favor to thiserror. Added readme, discussed FTBalance with Vlad and added from_float_str \\\\\\\\n\\\\\\\\n##### Non direct time consumption - 8 hours\\\\\\\\n* Discussion and syncing, near-api discussions, code review\\\\\\\\n\", \"linked_proposals\": [], \"receiver_account\": \"yurtur.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"5700\", \"requested_sponsorship_paid_in_currency\": \"USDT\"}, \"author_id\": \"yurtur.near\", \"snapshot_history\": [], \"social_db_post_block_height\": \"0\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7103229505596e+21
    }
  },
  {
    "id": "7097993112",
    "receipt_id": "3zm87PSZiZvfGvEttFReMuoJHSonnXGwLkZmBArA6E2n",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2vxERKcZqFafgZHzbdiXbDXw8JQ7RETDTbHiwe7aUk8D",
      "block_height": 124777693,
      "block_timestamp": 1722533589046180600
    },
    "receipt_outcome": {
      "gas_burnt": 3529059105069,
      "tokens_burnt": 352905910506900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "8KALXNAbd6C2wNadRRbmsE3uLCPkASGcr55Zk3K49mgE",
    "included_in_block_hash": "9Hx4cv3ZRHZQ6667e2UZsbLnsW1mdVS4kdu8EqZC3UJ7",
    "block_timestamp": "1722533586622401996",
    "block": {
      "block_height": 124777691
    },
    "receipt_conversion_tokens_burnt": "31535758857600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 352905910506900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"[{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":169,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yurtur.near\\\\\\\\\\\\\\\"}},{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":169,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yurtur.near\\\\\\\\\\\\\\\"}}]\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7103229505596e+21
    }
  },
  {
    "id": "7098108517",
    "receipt_id": "8d9YrU8roUGFVtX9kNQBz9W8AhHypUfGZTaP2ipY3QBq",
    "predecessor_account_id": "yurtur.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "DbuZSRaHegddJutPyDtqN87RveHvZjNpZdZByuCN5sG3",
      "block_height": 124778020,
      "block_timestamp": 1722533960315525000
    },
    "receipt_outcome": {
      "gas_burnt": 4600217978129,
      "tokens_burnt": 460021797812900000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "D4WFikvWvR99BaToQacFpcfL5zQMa8r5XfEZHGxRcMSs",
    "included_in_block_hash": "irzLKQubiF6D5SVbAgHvhWxqKC2ofKhLG3CN1ZMSBjx",
    "block_timestamp": "1722533958976242553",
    "block": {
      "block_height": 124778019
    },
    "receipt_conversion_tokens_burnt": "30848432746000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 460021797812900000000,
        "args": "{\"id\": 169, \"timeline\": {\"status\": \"REVIEW\", \"kyc_verified\": false, \"timeline_version\": \"V1\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 842908928665400000000
    }
  },
  {
    "id": "7098110218",
    "receipt_id": "Aqw4w2jf8DT7vB8RsqnniWEPQTpkGTh3UdtSPJezSvRR",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EHfAofoFywqefKfxkiWieVara5tkbJxNcRypXsxnfQiW",
      "block_height": 124778022,
      "block_timestamp": 1722533962569072400
    },
    "receipt_outcome": {
      "gas_burnt": 3520386981065,
      "tokens_burnt": 352038698106500000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "D4WFikvWvR99BaToQacFpcfL5zQMa8r5XfEZHGxRcMSs",
    "included_in_block_hash": "irzLKQubiF6D5SVbAgHvhWxqKC2ofKhLG3CN1ZMSBjx",
    "block_timestamp": "1722533958976242553",
    "block": {
      "block_height": 124778019
    },
    "receipt_conversion_tokens_burnt": "30848432746000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 352038698106500000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yurtur.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":169,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yurtur.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 842908928665400000000
    }
  },
  {
    "id": "7099345010",
    "receipt_id": "5CmsmsPKPVTj55V63U1QUahrvjXTeHR77mFwvQJJWa8b",
    "predecessor_account_id": "denbite.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "AfaFR15umgaqiDdNEXrk43DRuH7sHVR3WM3LGQBe6q4K",
      "block_height": 124781934,
      "block_timestamp": 1722538343655359200
    },
    "receipt_outcome": {
      "gas_burnt": 5466016030443,
      "tokens_burnt": 546601603044300000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "G8BBxw4yJ4ZhSBsKf1faF9mj1mqwTiTqN35UQ983XUzq",
    "included_in_block_hash": "9aNYvAxwEeDkTT5cU4GigkyCowR8C6wyZ3wEkj9W6mFB",
    "block_timestamp": "1722538342638316450",
    "block": {
      "block_height": 124781933
    },
    "receipt_conversion_tokens_burnt": "31405627498800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_proposal",
        "deposit": 0,
        "fee": 546601603044300000000,
        "args": "{\"body\": {\"name\": \"DevHub & DevRel (01 - 31 July) Contributor Report\", \"summary\": \"Monthly paid developer relations contributor report. The aim of these activities is to onboard more developers to the ecosystem, and assist existing developers with problems or enrich their experience in the ecosystem. Activities for the last month can be seen below.\", \"category\": \"Decentralized DevRel\", \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"supervisor\": \"frol.near\", \"description\": \"##### 1. DevRel Contribution (supervised by @gagdiez.near)\\\\\\\\n* Internal Meetings - weekly stand-up, 1-1 with team members (5h)\\\\\\\\n* Contribute to Near JavaScript SDK examples (7h) - [1](https://github.com/near-examples/hello-near-examples/pull/16), [2](https://github.com/near-examples/counters/pull/11), [3](https://github.com/near-examples/guest-book-examples/pull/15), [4](https://github.com/near-examples/donation-examples/pull/14), [5](https://github.com/near-examples/coin-flip-examples/pull/26)\\\\\\\\n* Building [Abstract DAO project](https://github.com/orgs/nearuaguild/repositories) with Chain Signatures (24h 30m)\\\\\\\\n\\\\\\\\n**Timeline**\\\\\\\\nStart Date: 7/01/2024\\\\\\\\nEnd Date: 7/31/2024\\\\\\\\n\\\\\\\\n**Funding**\\\\\\\\nTotal hours: 36h 30m\\\\\\\\nRate: $50/hour\\\\\\\\nAmount: $1.825 USD\\\\\\\\n\\\\\\\\n##### 2. DevHub Contribution (supervised by @frol.near)\\\\\\\\n\\\\\\\\n**Community Support (7 hours)**\\\\\\\\n* Responding to questions on StackOverflow and Telegram (3h)\\\\\\\\n* Mentorship\\\\\\\\n  * 1-on-1 Meetings (2h)\\\\\\\\n  * Code Review (2h)\\\\\\\\n\\\\\\\\n**Educational Content (19 hours)**\\\\\\\\n* Weekly live streams with the community (7h) - [1](https://t.me/nearprotocoluachannel/1039), [2](https://t.me/nearprotocoluachannel/1046), [3](https://t.me/nearprotocoluachannel/1051), [4](https://t.me/nearprotocoluachannel/1057)\\\\\\\\n* YouTube video production (6h) - [1](https://www.youtube.com/watch?v=jLeGssEGt8A), [2](https://www.youtube.com/watch?v=A7BdcTgbWNk), [3](https://www.youtube.com/watch?v=WmhNNkfcjzw)\\\\\\\\n* Livestream preparation, environment set up, promotion (6h)\\\\\\\\n\\\\\\\\n**Other (7 hours)**\\\\\\\\n* Internal Meetings - 1-on-1 with team members (2h)\\\\\\\\n* Plan the content for an upcoming series of YouTube videos that explain advanced concepts and techniques for building on the Near platform (5h)\\\\\\\\n\\\\\\\\n**Timeline**\\\\\\\\nStart Date: 7/01/2024\\\\\\\\nEnd Date: 7/31/2024\\\\\\\\n\\\\\\\\n**Funding**\\\\\\\\nTotal hours: 33\\\\\\\\nRate: $50/hour\\\\\\\\nTotal amount: $1.650 USD\\\\\\\\n\\\\\\\\nTotal funding\\\\\\\\n$3.475 USD\", \"linked_proposals\": [], \"receiver_account\": \"denbite.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"3475\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"labels\": [], \"accepted_terms_and_conditions_version\": 124781812}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7243088730326e+21
    }
  },
  {
    "id": "7099345178",
    "receipt_id": "7hG4ZgF4yGViheAxwq16iKkod8brupF79TSLWJyu6kWm",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EyUw9MJLfnnw9M1rD551duC65PRLXJCLZwXE6AnRbCPE",
      "block_height": 124781935,
      "block_timestamp": 1722538344843125800
    },
    "receipt_outcome": {
      "gas_burnt": 4509769902042,
      "tokens_burnt": 450976990204200000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "G8BBxw4yJ4ZhSBsKf1faF9mj1mqwTiTqN35UQ983XUzq",
    "included_in_block_hash": "9aNYvAxwEeDkTT5cU4GigkyCowR8C6wyZ3wEkj9W6mFB",
    "block_timestamp": "1722538342638316450",
    "block": {
      "block_height": 124781933
    },
    "receipt_conversion_tokens_burnt": "31405627498800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 450976990204200000000,
        "args": "{\"data\": {\"devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"We have just received a new *Decentralized DevRel* proposal.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**By**: @denbite.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Title**: \\\\\\\\u{201c}DevHub & DevRel (01 - 31 July) Contributor Report\\\\\\\\u{201c}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Summary**:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nMonthly paid developer relations contributor report. The aim of these activities is to onboard more developers to the ecosystem, and assist existing developers with problems or enrich their experience in the ecosystem. Activities for the last month can be seen below.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nRead the full proposal and share your feedback on [DevHub](/devhub.near/widget/app?page=proposal&id=170)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7243088730326e+21
    }
  },
  {
    "id": "7099345180",
    "receipt_id": "DvErztEmRkabwqNzrrxnSPcJDr1LSvMS2zNoiJSaCpWD",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EyUw9MJLfnnw9M1rD551duC65PRLXJCLZwXE6AnRbCPE",
      "block_height": 124781935,
      "block_timestamp": 1722538344843125800
    },
    "receipt_outcome": {
      "gas_burnt": 3376993357890,
      "tokens_burnt": 337699335789000000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "G8BBxw4yJ4ZhSBsKf1faF9mj1mqwTiTqN35UQ983XUzq",
    "included_in_block_hash": "9aNYvAxwEeDkTT5cU4GigkyCowR8C6wyZ3wEkj9W6mFB",
    "block_timestamp": "1722538342638316450",
    "block": {
      "block_height": 124781933
    },
    "receipt_conversion_tokens_burnt": "31405627498800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_block_height_callback",
        "deposit": 0,
        "fee": 337699335789000000000,
        "args": "{\"proposal\": {\"id\": 170, \"snapshot\": {\"name\": \"DevHub & DevRel (01 - 31 July) Contributor Report\", \"labels\": [], \"summary\": \"Monthly paid developer relations contributor report. The aim of these activities is to onboard more developers to the ecosystem, and assist existing developers with problems or enrich their experience in the ecosystem. Activities for the last month can be seen below.\", \"category\": \"Decentralized DevRel\", \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"editor_id\": \"denbite.near\", \"timestamp\": \"1722538343655359294\", \"supervisor\": \"frol.near\", \"description\": \"##### 1. DevRel Contribution (supervised by @gagdiez.near)\\\\\\\\n* Internal Meetings - weekly stand-up, 1-1 with team members (5h)\\\\\\\\n* Contribute to Near JavaScript SDK examples (7h) - [1](https://github.com/near-examples/hello-near-examples/pull/16), [2](https://github.com/near-examples/counters/pull/11), [3](https://github.com/near-examples/guest-book-examples/pull/15), [4](https://github.com/near-examples/donation-examples/pull/14), [5](https://github.com/near-examples/coin-flip-examples/pull/26)\\\\\\\\n* Building [Abstract DAO project](https://github.com/orgs/nearuaguild/repositories) with Chain Signatures (24h 30m)\\\\\\\\n\\\\\\\\n**Timeline**\\\\\\\\nStart Date: 7/01/2024\\\\\\\\nEnd Date: 7/31/2024\\\\\\\\n\\\\\\\\n**Funding**\\\\\\\\nTotal hours: 36h 30m\\\\\\\\nRate: $50/hour\\\\\\\\nAmount: $1.825 USD\\\\\\\\n\\\\\\\\n##### 2. DevHub Contribution (supervised by @frol.near)\\\\\\\\n\\\\\\\\n**Community Support (7 hours)**\\\\\\\\n* Responding to questions on StackOverflow and Telegram (3h)\\\\\\\\n* Mentorship\\\\\\\\n  * 1-on-1 Meetings (2h)\\\\\\\\n  * Code Review (2h)\\\\\\\\n\\\\\\\\n**Educational Content (19 hours)**\\\\\\\\n* Weekly live streams with the community (7h) - [1](https://t.me/nearprotocoluachannel/1039), [2](https://t.me/nearprotocoluachannel/1046), [3](https://t.me/nearprotocoluachannel/1051), [4](https://t.me/nearprotocoluachannel/1057)\\\\\\\\n* YouTube video production (6h) - [1](https://www.youtube.com/watch?v=jLeGssEGt8A), [2](https://www.youtube.com/watch?v=A7BdcTgbWNk), [3](https://www.youtube.com/watch?v=WmhNNkfcjzw)\\\\\\\\n* Livestream preparation, environment set up, promotion (6h)\\\\\\\\n\\\\\\\\n**Other (7 hours)**\\\\\\\\n* Internal Meetings - 1-on-1 with team members (2h)\\\\\\\\n* Plan the content for an upcoming series of YouTube videos that explain advanced concepts and techniques for building on the Near platform (5h)\\\\\\\\n\\\\\\\\n**Timeline**\\\\\\\\nStart Date: 7/01/2024\\\\\\\\nEnd Date: 7/31/2024\\\\\\\\n\\\\\\\\n**Funding**\\\\\\\\nTotal hours: 33\\\\\\\\nRate: $50/hour\\\\\\\\nTotal amount: $1.650 USD\\\\\\\\n\\\\\\\\nTotal funding\\\\\\\\n$3.475 USD\", \"linked_proposals\": [], \"receiver_account\": \"denbite.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"3475\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"author_id\": \"denbite.near\", \"snapshot_history\": [], \"social_db_post_block_height\": \"0\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7243088730326e+21
    }
  },
  {
    "id": "7099345182",
    "receipt_id": "8E7yLqxmvGQ84WAvChSSpVBtax3gfTWCsdQo9HMZ7GMg",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EyUw9MJLfnnw9M1rD551duC65PRLXJCLZwXE6AnRbCPE",
      "block_height": 124781935,
      "block_timestamp": 1722538344843125800
    },
    "receipt_outcome": {
      "gas_burnt": 3576253164963,
      "tokens_burnt": 357625316496300000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "G8BBxw4yJ4ZhSBsKf1faF9mj1mqwTiTqN35UQ983XUzq",
    "included_in_block_hash": "9aNYvAxwEeDkTT5cU4GigkyCowR8C6wyZ3wEkj9W6mFB",
    "block_timestamp": "1722538342638316450",
    "block": {
      "block_height": 124781933
    },
    "receipt_conversion_tokens_burnt": "31405627498800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 357625316496300000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"[{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"gagdiez.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":170,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"denbite.near\\\\\\\\\\\\\\\"}},{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":170,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"denbite.near\\\\\\\\\\\\\\\"}},{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":170,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"denbite.near\\\\\\\\\\\\\\\"}},{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":170,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"denbite.near\\\\\\\\\\\\\\\"}}]\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7243088730326e+21
    }
  },
  {
    "id": "7100129664",
    "receipt_id": "ByNYn5ppmYQVx9Ecs2cFCVU8cUiZVX6MkAxUU1kdZbgF",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5FDmnwA6N6fJ1T7TwFw84difsFVG12CyDtT35g4qsuQK",
      "block_height": 124784653,
      "block_timestamp": 1722541374177827300
    },
    "receipt_outcome": {
      "gas_burnt": 5158059647073,
      "tokens_burnt": 515805964707300000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "BuD5srfTztxEhiRpaFyY6yEfLX1xajuoAhHmxPGmamLF",
    "included_in_block_hash": "Dcrz5YfkZUBSkSeS9KfB8dui6DpqruCpiPRWqpvNuQGM",
    "block_timestamp": "1722541373239003962",
    "block": {
      "block_height": 124784652
    },
    "receipt_conversion_tokens_burnt": "30865202251000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_versioned_timeline",
        "deposit": 0,
        "fee": 515805964707300000000,
        "args": "{\"id\": 169, \"timeline\": {\"status\": \"PAYMENT_PROCESSING\", \"kyc_verified\": true, \"timeline_version\": \"V1\", \"test_transaction_sent\": true, \"sponsor_requested_review\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": true}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 901902511246600000000
    }
  },
  {
    "id": "7100129856",
    "receipt_id": "6NdSXLPE5Vc4zddRfgkkz3zghKDzk5HTPq7BmfXg4Zq1",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6QdV6DjT941xTN3AfhjqCdyFcmVHiTSbLoTbu99YoWMp",
      "block_height": 124784654,
      "block_timestamp": 1722541375189537000
    },
    "receipt_outcome": {
      "gas_burnt": 3552313442883,
      "tokens_burnt": 355231344288300000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "BuD5srfTztxEhiRpaFyY6yEfLX1xajuoAhHmxPGmamLF",
    "included_in_block_hash": "Dcrz5YfkZUBSkSeS9KfB8dui6DpqruCpiPRWqpvNuQGM",
    "block_timestamp": "1722541373239003962",
    "block": {
      "block_height": 124784652
    },
    "receipt_conversion_tokens_burnt": "30865202251000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 355231344288300000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yurtur.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":169,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 901902511246600000000
    }
  },
  {
    "id": "7115165183",
    "receipt_id": "F5WqsNJNRLSmCusfHgobVzGmRbrKXtT5xnnNK4vbmnho",
    "predecessor_account_id": "pivortex.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9MeUDBf9gp5i6BWskyVuLTmnfvCRh7UwRu9TGsPKvspD",
      "block_height": 124832868,
      "block_timestamp": 1722598275823921400
    },
    "receipt_outcome": {
      "gas_burnt": 3858126177833,
      "tokens_burnt": 385812617783300000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "2cYk7jKPaxcLbu3zMZQ5QCHXH9cp1aa2HJz14cfWH1Db",
    "included_in_block_hash": "9nzrQhnqSbF6naPcan1DAZwpwkfkwUiVEPEkTxKi1n3j",
    "block_timestamp": "1722598274612147704",
    "block": {
      "block_height": 124832867
    },
    "receipt_conversion_tokens_burnt": "30943236347600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 385812617783300000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"image\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"ipfs_cid\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bafkreidsqtdxc3lsf54lhklixaze24fshifnoendv7k6x4ehqhk36jwtzu\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Get ready for the third Chain Abstraction Community Call \\\\\\\\u{1f973}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThe initial agenda includes:\\\\\\\\\\\\\\\\n- An introduction to Defuse: Integrating CEX and DEX for a Unified DeFi Future.\\\\\\\\\\\\\\\\n- Using Chain Signatures to control NEAR accounts.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{1f4c6} Friday, Aug 9th, at 3 PM UTC\\\\\\\\\\\\\\\\n[Add to your calendar](https://bit.ly/chainabstraction3)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nSee you there!\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"chain-abstraction\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 886391970986300000000
    }
  }
]