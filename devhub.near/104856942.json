[
  {
    "id": "1336526776",
    "receipt_id": "GrFdbibSkLLzRaYFRi5CnYZW9x5v141qr2QD7vw1nsU",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "DEctm8M5DXt3zT2ZdcvUtD4vtjR1Jg6TresC2WMecU4y",
      "block_height": 104857481,
      "block_timestamp": 1699034838669793000
    },
    "receipt_outcome": {
      "gas_burnt": 29541054498115,
      "tokens_burnt": 2.9541054498115e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "8eKQynFdEKkA1m9PWHRquaPvSmqy8L1jQgHnQoCnh1Zn",
    "included_in_block_hash": "9ketZ3hz6BnrxGKQEoBawH1zWFWFJqX25otqr5oQb9Ev",
    "block_timestamp": "1699034837488554125",
    "block": {
      "block_height": 104857480
    },
    "receipt_conversion_tokens_burnt": "263621390363800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 1,
        "fee": 2.9541054498115e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.entity.post.Post\": {\"\": \"// Ideally, this would be a page\\\\\\\\n\\\\\\\\nconst { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst ButtonWithHover = styled.button`\\\\\\\\n  background-color: #fff;\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #e9ecef;\\\\\\\\n    color: #000;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst postId = props.post.id ?? (props.id ? parseInt(props.id) : 0);\\\\\\\\nconst post =\\\\\\\\n  props.post ??\\\\\\\\n  Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_post\\\\\\\\\\\\\\\", { post_id: postId });\\\\\\\\nif (!post) {\\\\\\\\n  return <div>Loading ...</div>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst referral = props.referral;\\\\\\\\nconst currentTimestamp = props.timestamp ?? post.snapshot.timestamp;\\\\\\\\nconst compareTimestamp = props.compareTimestamp ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst swapTimestamps = currentTimestamp < compareTimestamp;\\\\\\\\n\\\\\\\\nconst snapshotHistory = post.snapshot_history;\\\\\\\\nconst snapshot =\\\\\\\\n  currentTimestamp === post.snapshot.timestamp\\\\\\\\n    ? post.snapshot\\\\\\\\n    : (snapshotHistory &&\\\\\\\\n        snapshotHistory.find((s) => s.timestamp === currentTimestamp)) ??\\\\\\\\n      null;\\\\\\\\nconst compareSnapshot =\\\\\\\\n  compareTimestamp === post.snapshot.timestamp\\\\\\\\n    ? post.snapshot\\\\\\\\n    : (snapshotHistory &&\\\\\\\\n        snapshotHistory.find((s) => s.timestamp === compareTimestamp)) ??\\\\\\\\n      null;\\\\\\\\n\\\\\\\\n// If this post is displayed under another post. Used to limit the size.\\\\\\\\nconst isUnderPost = props.isUnderPost ? true : false;\\\\\\\\nconst parentId = Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_parent_id\\\\\\\\\\\\\\\", {\\\\\\\\n  post_id: postId,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst childPostIdsUnordered =\\\\\\\\n  Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_children_ids\\\\\\\\\\\\\\\", {\\\\\\\\n    post_id: postId,\\\\\\\\n  }) ?? [];\\\\\\\\n\\\\\\\\nconst childPostIds = props.isPreview ? [] : childPostIdsUnordered.reverse();\\\\\\\\nconst expandable = props.isPreview ? false : props.expandable ?? false;\\\\\\\\nconst defaultExpanded = expandable ? props.defaultExpanded : true;\\\\\\\\n\\\\\\\\nconst draftState = props.draftState;\\\\\\\\n\\\\\\\\nfunction readableDate(timestamp) {\\\\\\\\n  var a = new Date(timestamp);\\\\\\\\n  return a.toDateString() + \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" + a.toLocaleTimeString();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst timestamp = readableDate(\\\\\\\\n  snapshot.timestamp ? snapshot.timestamp / 1000000 : Date.now()\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst postSearchKeywords = props.searchKeywords ? (\\\\\\\\n  <div style={{ \\\\\\\\\\\\\\\"font-family\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"monospace\\\\\\\\\\\\\\\" }} key=\\\\\\\\\\\\\\\"post-search-keywords\\\\\\\\\\\\\\\">\\\\\\\\n    <span>Found keywords: </span>\\\\\\\\n    {props.searchKeywords.map((tag) => (\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Tag\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{ linkTo: \\\\\\\\\\\\\\\"Feed\\\\\\\\\\\\\\\", tag }}\\\\\\\\n      />\\\\\\\\n    ))}\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"post-search-keywords\\\\\\\\\\\\\\\"></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst searchKeywords = props.searchKeywords ? (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"mb-4\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"search-keywords\\\\\\\\\\\\\\\">\\\\\\\\n    <small class=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{postSearchKeywords}</small>\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"search-keywords\\\\\\\\\\\\\\\"></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst allowedToEdit =\\\\\\\\n  !props.isPreview &&\\\\\\\\n  Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"is_allowed_to_edit\\\\\\\\\\\\\\\", {\\\\\\\\n    post_id: postId,\\\\\\\\n    editor: context.accountId,\\\\\\\\n  });\\\\\\\\n\\\\\\\\nconst btnEditorWidget = (postType, name) => {\\\\\\\\n  return (\\\\\\\\n    <li>\\\\\\\\n      <a\\\\\\\\n        class=\\\\\\\\\\\\\\\"dropdown-item\\\\\\\\\\\\\\\"\\\\\\\\n        role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n        onClick={() =>\\\\\\\\n          State.update({ postType, editorType: \\\\\\\\\\\\\\\"EDIT\\\\\\\\\\\\\\\", showEditor: true })\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        {name}\\\\\\\\n      </a>\\\\\\\\n    </li>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst editControl = allowedToEdit ? (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"btn-group\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"group\\\\\\\\\\\\\\\">\\\\\\\\n    <a\\\\\\\\n      class=\\\\\\\\\\\\\\\"card-link px-2\\\\\\\\\\\\\\\"\\\\\\\\n      role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n      title=\\\\\\\\\\\\\\\"Edit post\\\\\\\\\\\\\\\"\\\\\\\\n      data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n      aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n      type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"bi bi-pencil-square\\\\\\\\\\\\\\\"></div>\\\\\\\\n    </a>\\\\\\\\n    <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\">\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as an idea\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as a solution\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Attestation\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as an attestation\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as a sponsorship\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as a comment\\\\\\\\\\\\\\\")}\\\\\\\\n    </ul>\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst shareButton = props.isPreview ? (\\\\\\\\n  <div></div>\\\\\\\\n) : (\\\\\\\\n  <Link\\\\\\\\n    class=\\\\\\\\\\\\\\\"card-link text-dark\\\\\\\\\\\\\\\"\\\\\\\\n    to={href({\\\\\\\\n      gateway: \\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\",\\\\\\\\n      widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n      params: { page: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\", id: postId },\\\\\\\\n    })}\\\\\\\\n    role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n    target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n    title=\\\\\\\\\\\\\\\"Open in new tab\\\\\\\\\\\\\\\"\\\\\\\\n  >\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"bi bi-share\\\\\\\\\\\\\\\"></div>\\\\\\\\n  </Link>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst ProfileCardContainer = styled.div`\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// card-header\\\\\\\\nconst header = (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"header\\\\\\\\\\\\\\\">\\\\\\\\n    <small class=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"row justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"d-flex align-items-center flex-wrap\\\\\\\\\\\\\\\">\\\\\\\\n          <ProfileCardContainer>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.ProfileCard\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                accountId: post.author_id,\\\\\\\\n                nearDevGovGigsWidgetsAccountId: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </ProfileCardContainer>\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"d-flex ms-auto\\\\\\\\\\\\\\\">\\\\\\\\n            {editControl}\\\\\\\\n            {timestamp}\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.History\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                post,\\\\\\\\n                timestamp: currentTimestamp,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            {shareButton}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </small>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\n// const emptyIcons = {\\\\\\\\n//   Idea: \\\\\\\\\\\\\\\"bi-lightbulb\\\\\\\\\\\\\\\",\\\\\\\\n//   Comment: \\\\\\\\\\\\\\\"bi-chat\\\\\\\\\\\\\\\",\\\\\\\\n//   Solution: \\\\\\\\\\\\\\\"bi-rocket\\\\\\\\\\\\\\\",\\\\\\\\n//   Attestation: \\\\\\\\\\\\\\\"bi-check-circle\\\\\\\\\\\\\\\",\\\\\\\\n//   Sponsorship: \\\\\\\\\\\\\\\"bi-cash-coin\\\\\\\\\\\\\\\",\\\\\\\\n//   Github: \\\\\\\\\\\\\\\"bi-github\\\\\\\\\\\\\\\",\\\\\\\\n//   Like: \\\\\\\\\\\\\\\"bi-heart\\\\\\\\\\\\\\\",\\\\\\\\n//   Reply: \\\\\\\\\\\\\\\"bi-reply\\\\\\\\\\\\\\\",\\\\\\\\n// };\\\\\\\\n\\\\\\\\nconst emptyIcons = {\\\\\\\\n  Idea: \\\\\\\\\\\\\\\"\\\\\\\\u{1f4a1}\\\\\\\\\\\\\\\",\\\\\\\\n  Comment: \\\\\\\\\\\\\\\"bi-chat\\\\\\\\\\\\\\\",\\\\\\\\n  Solution: \\\\\\\\\\\\\\\"\\\\\\\\u{1f680}\\\\\\\\\\\\\\\",\\\\\\\\n  Attestation: \\\\\\\\\\\\\\\"\\\\\\\\u{2705}\\\\\\\\\\\\\\\",\\\\\\\\n  Sponsorship: \\\\\\\\\\\\\\\"\\\\\\\\u{1fa99}\\\\\\\\\\\\\\\",\\\\\\\\n  Github: \\\\\\\\\\\\\\\"bi-github\\\\\\\\\\\\\\\",\\\\\\\\n  Like: \\\\\\\\\\\\\\\"bi-heart\\\\\\\\\\\\\\\",\\\\\\\\n  Reply: \\\\\\\\\\\\\\\"bi-reply\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst fillIcons = {\\\\\\\\n  Idea: \\\\\\\\\\\\\\\"\\\\\\\\u{1f4a1}\\\\\\\\\\\\\\\",\\\\\\\\n  Comment: \\\\\\\\\\\\\\\"bi-chat-fill\\\\\\\\\\\\\\\",\\\\\\\\n  Solution: \\\\\\\\\\\\\\\"\\\\\\\\u{1f680}\\\\\\\\\\\\\\\",\\\\\\\\n  Attestation: \\\\\\\\\\\\\\\"\\\\\\\\u{2705}\\\\\\\\\\\\\\\",\\\\\\\\n  Sponsorship: \\\\\\\\\\\\\\\"\\\\\\\\u{1fa99}\\\\\\\\\\\\\\\",\\\\\\\\n  Github: \\\\\\\\\\\\\\\"bi-github\\\\\\\\\\\\\\\",\\\\\\\\n  Like: \\\\\\\\\\\\\\\"bi-heart-fill\\\\\\\\\\\\\\\",\\\\\\\\n  Reply: \\\\\\\\\\\\\\\"bi-reply-fill\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\n// Trigger saving this widget.\\\\\\\\n\\\\\\\\nconst borders = {\\\\\\\\n  Idea: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Comment: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Solution: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Attestation: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Sponsorship: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Github: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst containsLike = props.isPreview\\\\\\\\n  ? false\\\\\\\\n  : post.likes.find((l) => l.author_id == context.accountId);\\\\\\\\nconst likeBtnClass = containsLike ? fillIcons.Like : emptyIcons.Like;\\\\\\\\n// This must be outside onLike, because Near.view returns null at first, and when the view call finished, it returns true/false.\\\\\\\\n// If checking this inside onLike, it will give `null` and we cannot tell the result is true or false.\\\\\\\\nlet grantNotify = Near.view(\\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"is_write_permission_granted\\\\\\\\\\\\\\\", {\\\\\\\\n  predecessor_id: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n  key: context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\",\\\\\\\\n});\\\\\\\\nif (grantNotify === null) {\\\\\\\\n  return;\\\\\\\\n}\\\\\\\\nconst onLike = () => {\\\\\\\\n  if (!context.accountId) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  let likeTxn = [\\\\\\\\n    {\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"add_like\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        post_id: postId,\\\\\\\\n      },\\\\\\\\n      deposit: Big(10).pow(21).mul(2),\\\\\\\\n      gas: Big(10).pow(12).mul(100),\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  if (grantNotify === false) {\\\\\\\\n    likeTxn.unshift({\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"grant_write_permission\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        predecessor_id: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n        keys: [context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\"],\\\\\\\\n      },\\\\\\\\n      deposit: Big(10).pow(23),\\\\\\\\n      gas: Big(10).pow(12).mul(30),\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n  Near.call(likeTxn);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst btnCreatorWidget = (postType, icon, name, desc) => {\\\\\\\\n  return (\\\\\\\\n    <li class=\\\\\\\\\\\\\\\"py-1\\\\\\\\\\\\\\\">\\\\\\\\n      <a\\\\\\\\n        class=\\\\\\\\\\\\\\\"dropdown-item text-decoration-none d-flex align-items-center lh-sm\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ color: \\\\\\\\\\\\\\\"rgb(55,109,137)\\\\\\\\\\\\\\\" }}\\\\\\\\n        role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n        onClick={() =>\\\\\\\\n          State.update({ postType, editorType: \\\\\\\\\\\\\\\"CREATE\\\\\\\\\\\\\\\", showEditor: true })\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <i class={`bi ${icon}`} style={{ fontSize: \\\\\\\\\\\\\\\"1.5rem\\\\\\\\\\\\\\\" }}>\\\\\\\\n          {\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n        </i>\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"ps-2 text-wrap\\\\\\\\\\\\\\\" style={{ width: \\\\\\\\\\\\\\\"18rem\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <div>{name}</div>\\\\\\\\n          <small class=\\\\\\\\\\\\\\\"fw-light text-secondary\\\\\\\\\\\\\\\">{desc}</small>\\\\\\\\n        </div>\\\\\\\\n      </a>\\\\\\\\n    </li>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FooterButtonsContianer = styled.div`\\\\\\\\n  width: 66.66666667%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst buttonsFooter = props.isPreview ? null : (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"buttons-footer\\\\\\\\\\\\\\\">\\\\\\\\n    <FooterButtonsContianer>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"btn-group\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"group\\\\\\\\\\\\\\\" aria-label=\\\\\\\\\\\\\\\"Basic outlined example\\\\\\\\\\\\\\\">\\\\\\\\n        <ButtonWithHover\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn d-flex align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n          onClick={onLike}\\\\\\\\n        >\\\\\\\\n          <i class={`bi ${likeBtnClass}`}> </i>\\\\\\\\n          {post.likes.length == 0 ? (\\\\\\\\n            \\\\\\\\\\\\\\\"Like\\\\\\\\\\\\\\\"\\\\\\\\n          ) : (\\\\\\\\n            <Widget\\\\\\\\n              // TODO: LEGACY.\\\\\\\\n              src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.layout.LikeButton.Faces\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                likesByUsers: Object.fromEntries(\\\\\\\\n                  post.likes.map(({ author_id }) => [author_id, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"])\\\\\\\\n                ),\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          )}\\\\\\\\n        </ButtonWithHover>\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"btn-group\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"group\\\\\\\\\\\\\\\">\\\\\\\\n          <ButtonWithHover\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            class=\\\\\\\\\\\\\\\"btn\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n            aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            \\\\\\\\u{21aa} Reply\\\\\\\\n          </ButtonWithHover>\\\\\\\\n          <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\">\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Idea,\\\\\\\\n              \\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Get feedback from the community about a problem, opportunity, or need.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Solution,\\\\\\\\n              \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Provide a specific proposal or implementation to an idea, optionally requesting funding.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Attestation\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Attestation,\\\\\\\\n              \\\\\\\\\\\\\\\"Attestation\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Formally review or validate a solution as a recognized expert.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Sponsorship,\\\\\\\\n              \\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Offer to fund projects, events, or proposals that match your needs.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            <li>\\\\\\\\n              <hr class=\\\\\\\\\\\\\\\"dropdown-divider\\\\\\\\\\\\\\\" />\\\\\\\\n            </li>\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Comment,\\\\\\\\n              \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Ask a question, provide information, or share a resource that is relevant to the thread.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n          </ul>\\\\\\\\n        </div>\\\\\\\\n        <ButtonWithHover\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"collapse\\\\\\\\\\\\\\\"\\\\\\\\n          href={`#collapseChildPosts${postId}`}\\\\\\\\n          aria-expanded={defaultExpanded}\\\\\\\\n          aria-controls={`collapseChildPosts${postId}`}\\\\\\\\n        >\\\\\\\\n          <i class=\\\\\\\\\\\\\\\"bi bi-chevron-down\\\\\\\\\\\\\\\"> </i>{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          {`Expand Replies (${childPostIds.length})`}\\\\\\\\n        </ButtonWithHover>\\\\\\\\n\\\\\\\\n        {isUnderPost || !parentId ? (\\\\\\\\n          <div key=\\\\\\\\\\\\\\\"link-to-parent\\\\\\\\\\\\\\\"></div>\\\\\\\\n        ) : (\\\\\\\\n          <Link\\\\\\\\n            to={href({\\\\\\\\n              gateway: \\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\",\\\\\\\\n              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\", id: parentId },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <ButtonWithHover\\\\\\\\n              type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n              style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"btn\\\\\\\\\\\\\\\"\\\\\\\\n              key=\\\\\\\\\\\\\\\"link-to-parent\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <i class=\\\\\\\\\\\\\\\"bi bi-arrow-90deg-up\\\\\\\\\\\\\\\"></i>Go to parent\\\\\\\\n            </ButtonWithHover>\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </FooterButtonsContianer>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst CreatorWidget = (postType) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      class={`collapse ${\\\\\\\\n        draftState?.parent_post_id == postId && draftState?.postType == postType\\\\\\\\n          ? \\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n      }`}\\\\\\\\n      id={`collapse${postType}Creator${postId}`}\\\\\\\\n      data-bs-parent={`#accordion${postId}`}\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.PostEditor\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          postType,\\\\\\\\n          onDraftStateChange: props.onDraftStateChange,\\\\\\\\n          draftState:\\\\\\\\n            draftState?.parent_post_id == postId ? draftState : undefined,\\\\\\\\n          parentId: postId,\\\\\\\\n          mode: \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst tokenMapping = {\\\\\\\\n  NEAR: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\",\\\\\\\\n  USDT: {\\\\\\\\n    NEP141: {\\\\\\\\n      address: \\\\\\\\\\\\\\\"usdt.tether-token.near\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  USDC: {\\\\\\\\n    NEP141: {\\\\\\\\n      address:\\\\\\\\n        \\\\\\\\\\\\\\\"17208628f84f5d6ad33f0da3bbbeb27ffcb398eac501a31bd6ad2011e36133a1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  // Add more tokens here as needed\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst reverseTokenMapping = Object.keys(tokenMapping).reduce(\\\\\\\\n  (reverseMap, key) => {\\\\\\\\n    const value = tokenMapping[key];\\\\\\\\n    if (typeof value === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n      reverseMap[JSON.stringify(value)] = key;\\\\\\\\n    }\\\\\\\\n    return reverseMap;\\\\\\\\n  },\\\\\\\\n  {}\\\\\\\\n);\\\\\\\\n\\\\\\\\nfunction tokenResolver(token) {\\\\\\\\n  if (typeof token === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    return token;\\\\\\\\n  } else if (typeof token === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n    const tokenString = reverseTokenMapping[JSON.stringify(token)];\\\\\\\\n    return tokenString || null;\\\\\\\\n  } else {\\\\\\\\n    return null; // Invalid input\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst EditorWidget = (postType) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      class={`collapse ${\\\\\\\\n        draftState?.edit_post_id == postId && draftState?.postType == postType\\\\\\\\n          ? \\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n      }`}\\\\\\\\n      id={`collapse${postType}Editor${postId}`}\\\\\\\\n      data-bs-parent={`#accordion${postId}`}\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.PostEditor\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          postType,\\\\\\\\n          postId,\\\\\\\\n          mode: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n          author_id: post.author_id,\\\\\\\\n          labels: post.snapshot.labels,\\\\\\\\n          name: post.snapshot.name,\\\\\\\\n          description: post.snapshot.description,\\\\\\\\n          amount: post.snapshot.amount,\\\\\\\\n          token: tokenResolver(post.snapshot.sponsorship_token),\\\\\\\\n          supervisor: post.snapshot.supervisor,\\\\\\\\n          githubLink: post.snapshot.github_link,\\\\\\\\n          onDraftStateChange: props.onDraftStateChange,\\\\\\\\n          draftState:\\\\\\\\n            draftState?.edit_post_id == postId ? draftState : undefined,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isDraft =\\\\\\\\n  (draftState?.parent_post_id === postId &&\\\\\\\\n    draftState?.postType === state.postType) ||\\\\\\\\n  (draftState?.edit_post_id === postId &&\\\\\\\\n    draftState?.postType === state.postType);\\\\\\\\n\\\\\\\\nfunction Editor() {\\\\\\\\n  return (\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\" id={`accordion${postId}`} key=\\\\\\\\\\\\\\\"editors-footer\\\\\\\\\\\\\\\">\\\\\\\\n      <div\\\\\\\\n        key={`${state.postType}${state.editorType}${postId}`}\\\\\\\\n        className={\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\"}\\\\\\\\n      >\\\\\\\\n        {state.editorType === \\\\\\\\\\\\\\\"CREATE\\\\\\\\\\\\\\\" ? (\\\\\\\\n          <>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.PostEditor\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                postType: state.postType,\\\\\\\\n                onDraftStateChange: props.onDraftStateChange,\\\\\\\\n                draftState:\\\\\\\\n                  draftState?.parent_post_id == postId ? draftState : undefined,\\\\\\\\n                parentId: postId,\\\\\\\\n                mode: \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        ) : (\\\\\\\\n          <>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.PostEditor\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                postType: state.postType,\\\\\\\\n                postId,\\\\\\\\n                mode: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                author_id: post.author_id,\\\\\\\\n                labels: post.snapshot.labels,\\\\\\\\n                name: post.snapshot.name,\\\\\\\\n                description: post.snapshot.description,\\\\\\\\n                amount: post.snapshot.amount,\\\\\\\\n                token: tokenResolver(post.snapshot.sponsorship_token),\\\\\\\\n                supervisor: post.snapshot.supervisor,\\\\\\\\n                githubLink: post.snapshot.github_link,\\\\\\\\n                onDraftStateChange: props.onDraftStateChange,\\\\\\\\n                draftState:\\\\\\\\n                  draftState?.edit_post_id == postId ? draftState : undefined,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst renamedPostType =\\\\\\\\n  snapshot.post_type == \\\\\\\\\\\\\\\"Submission\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\" : snapshot.post_type;\\\\\\\\n\\\\\\\\nconst tags = post.snapshot.labels ? (\\\\\\\\n  <div\\\\\\\\n    class=\\\\\\\\\\\\\\\"card-title d-flex flex-wrap align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ margin: \\\\\\\\\\\\\\\"20px 0\\\\\\\\\\\\\\\" }}\\\\\\\\n    key=\\\\\\\\\\\\\\\"post-labels\\\\\\\\\\\\\\\"\\\\\\\\n  >\\\\\\\\n    {post.snapshot.labels.map((tag, idx) => (\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center my-3 me-3\\\\\\\\\\\\\\\">\\\\\\\\n        <Link\\\\\\\\n          to={href({\\\\\\\\n            widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n            params: { page: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\", tag: tag },\\\\\\\\n          })}\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ cursor: \\\\\\\\\\\\\\\"pointer\\\\\\\\\\\\\\\", textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Tag\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                tag,\\\\\\\\n                black: true,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </Link>\\\\\\\\n        {idx !== post.snapshot.labels.length - 1 && (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"ms-3\\\\\\\\\\\\\\\">\\\\\\\\u{2022}</span>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    ))}\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"post-labels\\\\\\\\\\\\\\\"></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Title = styled.h5`\\\\\\\\n  margin: 1rem 0;\\\\\\\\n\\\\\\\\n  color: #151515;\\\\\\\\n  font-size: 1.15rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 1.625rem; /* 55.556% */\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst postTitle =\\\\\\\\n  snapshot.post_type == \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\" ? (\\\\\\\\n    <div key=\\\\\\\\\\\\\\\"post-title\\\\\\\\\\\\\\\"></div>\\\\\\\\n  ) : (\\\\\\\\n    <Title key=\\\\\\\\\\\\\\\"post-title\\\\\\\\\\\\\\\">\\\\\\\\n      {emptyIcons[snapshot.post_type]} {renamedPostType}: {snapshot.name}\\\\\\\\n    </Title>\\\\\\\\n  );\\\\\\\\n\\\\\\\\nconst postExtra =\\\\\\\\n  snapshot.post_type == \\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\" ? (\\\\\\\\n    <div key=\\\\\\\\\\\\\\\"post-extra\\\\\\\\\\\\\\\">\\\\\\\\n      <h6 class=\\\\\\\\\\\\\\\"card-subtitle mb-2 text-muted\\\\\\\\\\\\\\\">\\\\\\\\n        Maximum amount: {snapshot.amount}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n        {tokenResolver(snapshot.sponsorship_token)}\\\\\\\\n      </h6>\\\\\\\\n      <h6 class=\\\\\\\\\\\\\\\"card-subtitle mb-2 text-muted\\\\\\\\\\\\\\\">\\\\\\\\n        Supervisor:{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"neardevgov.near/widget/ProfileLine\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{ accountId: snapshot.supervisor }}\\\\\\\\n        />\\\\\\\\n      </h6>\\\\\\\\n    </div>\\\\\\\\n  ) : (\\\\\\\\n    <div></div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\nconst childPostHasDraft = childPostIds.find(\\\\\\\\n  (childId) =>\\\\\\\\n    childId == draftState?.edit_post_id || childId == draftState?.parent_post_id\\\\\\\\n);\\\\\\\\nif (\\\\\\\\n  (childPostHasDraft || state.childrenOfChildPostsHasDraft) &&\\\\\\\\n  props.expandParent\\\\\\\\n) {\\\\\\\\n  props.expandParent();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst postsList =\\\\\\\\n  props.isPreview || childPostIds.length == 0 ? (\\\\\\\\n    <div key=\\\\\\\\\\\\\\\"posts-list\\\\\\\\\\\\\\\"></div>\\\\\\\\n  ) : (\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"posts-list\\\\\\\\\\\\\\\">\\\\\\\\n      <div\\\\\\\\n        class={`collapse mt-3 ${\\\\\\\\n          defaultExpanded ||\\\\\\\\n          childPostHasDraft ||\\\\\\\\n          state.childrenOfChildPostsHasDraft\\\\\\\\n            ? \\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\"\\\\\\\\n            : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n        }`}\\\\\\\\n        id={`collapseChildPosts${postId}`}\\\\\\\\n      >\\\\\\\\n        {childPostIds.map((childId) => (\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Post\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              id: childId,\\\\\\\\n              isUnderPost: true,\\\\\\\\n              onDraftStateChange: props.onDraftStateChange,\\\\\\\\n              draftState,\\\\\\\\n              expandParent: () =>\\\\\\\\n                State.update({ childrenOfChildPostsHasDraft: true }),\\\\\\\\n              referral: `subpost${childId}of${postId}`,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        ))}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\nconst LimitedMarkdown = styled.div`\\\\\\\\n  max-height: 20em;\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// Determine if located in the post page.\\\\\\\\nconst isInList = props.isInList;\\\\\\\\nconst contentArray = snapshot.description.split(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\");\\\\\\\\nconst needClamp = isInList && contentArray.length > 5;\\\\\\\\n\\\\\\\\ninitState({\\\\\\\\n  clamp: needClamp,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst clampedContent = needClamp\\\\\\\\n  ? contentArray.slice(0, 3).join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\")\\\\\\\\n  : snapshot.description;\\\\\\\\n\\\\\\\\n// Should make sure the posts under the currently top viewed post are limited in size.\\\\\\\\nconst descriptionArea = isUnderPost ? (\\\\\\\\n  <LimitedMarkdown className=\\\\\\\\\\\\\\\"overflow-auto\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"description-area\\\\\\\\\\\\\\\">\\\\\\\\n    {/* {widget(\\\\\\\\\\\\\\\"components.molecule.markdown-viewer\\\\\\\\\\\\\\\", {\\\\\\\\n      text: snapshot.description,\\\\\\\\n    })} */}\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        text: snapshot.description,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </LimitedMarkdown>\\\\\\\\n) : (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100 overflow-auto\\\\\\\\\\\\\\\">\\\\\\\\n    <div class={state.clamp ? \\\\\\\\\\\\\\\"clamp\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}>\\\\\\\\n      {/* {widget(\\\\\\\\\\\\\\\"components.molecule.markdown-viewer\\\\\\\\\\\\\\\", {\\\\\\\\n        text: state.clamp ? clampedContent : snapshot.description,\\\\\\\\n      })} */}\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          text: state.clamp ? clampedContent : snapshot.description,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n    {state.clamp ? (\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"d-flex justify-content-start\\\\\\\\\\\\\\\">\\\\\\\\n        <a\\\\\\\\n          style={{ cursor: \\\\\\\\\\\\\\\"pointer\\\\\\\\\\\\\\\", color: \\\\\\\\\\\\\\\"#00ec97\\\\\\\\\\\\\\\" }}\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn-link text-dark fw-bold text-decoration-none\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() => State.update({ clamp: false })}\\\\\\\\n        >\\\\\\\\n          See more\\\\\\\\n        </a>\\\\\\\\n      </div>\\\\\\\\n    ) : (\\\\\\\\n      <></>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst timestampElement = (_snapshot) => {\\\\\\\\n  return (\\\\\\\\n    <Link\\\\\\\\n      class=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n      href={href({\\\\\\\\n        gateway: \\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\",\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n          id: postId,\\\\\\\\n          timestamp: _snapshot.timestamp,\\\\\\\\n          compareTimestamp: null,\\\\\\\\n          referral,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n    >\\\\\\\\n      {readableDate(_snapshot.timestamp / 1000000).substring(4)}\\\\\\\\n\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"mob.near/widget/ProfileImage\\\\\\\\\\\\\\\"\\\\\\\\n        props={{\\\\\\\\n          accountId: _snapshot.editor_id,\\\\\\\\n          style: {\\\\\\\\n            width: \\\\\\\\\\\\\\\"1.25em\\\\\\\\\\\\\\\",\\\\\\\\n            height: \\\\\\\\\\\\\\\"1.25em\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          imageStyle: {\\\\\\\\n            transform: \\\\\\\\\\\\\\\"translateY(-12.5%)\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      {_snapshot.editor_id.substring(0, 8)}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction combineText(_snapshot) {\\\\\\\\n  return (\\\\\\\\n    \\\\\\\\\\\\\\\"## \\\\\\\\\\\\\\\" +\\\\\\\\n    _snapshot.post_type +\\\\\\\\n    \\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\" +\\\\\\\\n    _snapshot.name +\\\\\\\\n    \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\" +\\\\\\\\n    _snapshot.description\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CardContainer = styled.div`\\\\\\\\n  padding: 1.5rem 3rem !important;\\\\\\\\n  border-radius: 16px !important;\\\\\\\\n  border: 1px solid rgba(129, 129, 129, 0.3) !important;\\\\\\\\n  background: #fffefe !important;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    padding: 1rem !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <CardContainer className={`card ${borders[snapshot.post_type]} attractable`}>\\\\\\\\n    {header}\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\" style={{ padding: 0 }}>\\\\\\\\n      {searchKeywords}\\\\\\\\n      {compareSnapshot ? (\\\\\\\\n        <div\\\\\\\\n          class=\\\\\\\\\\\\\\\"border rounded\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ marginTop: \\\\\\\\\\\\\\\"16px\\\\\\\\\\\\\\\", marginBottom: \\\\\\\\\\\\\\\"16px\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"d-flex justify-content-end\\\\\\\\\\\\\\\" style={{ fontSize: \\\\\\\\\\\\\\\"12px\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <div class=\\\\\\\\\\\\\\\"d-flex w-50 justify-content-end mt-1 me-2\\\\\\\\\\\\\\\">\\\\\\\\n              {timestampElement(snapshot)}\\\\\\\\n              {snapshot !== compareSnapshot && (\\\\\\\\n                <>\\\\\\\\n                  <div class=\\\\\\\\\\\\\\\"mx-1 align-self-center\\\\\\\\\\\\\\\">\\\\\\\\n                    <i class=\\\\\\\\\\\\\\\"bi bi-file-earmark-diff\\\\\\\\\\\\\\\" />\\\\\\\\n                  </div>\\\\\\\\n                  {timestampElement(compareSnapshot)}\\\\\\\\n                </>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"w-100 overflow-auto\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"markeljan.near/widget/MarkdownDiff\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                post: post,\\\\\\\\n                currentCode: combineText(\\\\\\\\n                  swapTimestamps ? compareSnapshot : snapshot\\\\\\\\n                ),\\\\\\\\n                prevCode: combineText(\\\\\\\\n                  swapTimestamps ? snapshot : compareSnapshot\\\\\\\\n                ),\\\\\\\\n                showLineNumber: true,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      ) : (\\\\\\\\n        <>\\\\\\\\n          {postTitle}\\\\\\\\n          {postExtra}\\\\\\\\n          {descriptionArea}\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n      {tags}\\\\\\\\n      {buttonsFooter}\\\\\\\\n      {!props.isPreview && (isDraft || state.showEditor) && <Editor />}\\\\\\\\n      {postsList}\\\\\\\\n    </div>\\\\\\\\n  </CardContainer>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.post.Panel\": {\"\": \"//////////////////////////////////////////////////////////////////////\\\\\\\\n///STOPWORDS//////////////////////////////////////////////////////////\\\\\\\\nconst stopWords = [\\\\\\\\n  \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"above\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"after\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"again\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"against\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"and\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"any\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"are\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"because\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"been\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"before\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"being\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"below\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"between\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"both\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"but\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"can\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"cannot\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"could\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"did\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"does\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"doing\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"during\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"each\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"etc\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"few\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"for\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"from\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"further\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"had\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"has\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"have\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"having\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"her\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"hers\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"herself\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"him\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"himself\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"his\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"how\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"into\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"its\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"itself\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"just\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"more\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"most\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"myself\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"nor\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"not\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"now\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"off\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"once\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"only\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"other\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"our\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"ours\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"ourselves\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"out\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"over\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"own\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"same\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"she\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"should\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"some\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"still\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"such\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"than\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"that\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"the\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"their\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"theirs\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"them\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"themselves\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"then\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"there\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"these\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"they\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"this\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"those\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"through\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"too\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"under\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"until\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"very\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"was\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"were\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"what\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"when\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"where\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"which\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"while\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"who\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"whom\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"why\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"will\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"with\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"you\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"your\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"yours\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"yourself\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"yourselves\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"www\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"http\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"com\\\\\\\\\\\\\\\",\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst stopWordsDictionary = {};\\\\\\\\nfor (let i = 0; i < stopWords.length; i++) {\\\\\\\\n  stopWordsDictionary[stopWords[i]] = true;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isStopWord(word) {\\\\\\\\n  return stopWordsDictionary.hasOwnProperty(word.toLowerCase());\\\\\\\\n}\\\\\\\\n//////////////////////////////////////////////////////////////////////\\\\\\\\n///SYNONYMS///////////////////////////////////////////////////////////\\\\\\\\nconst synonyms = {\\\\\\\\n  ether: \\\\\\\\\\\\\\\"ethereum\\\\\\\\\\\\\\\",\\\\\\\\n  eth: \\\\\\\\\\\\\\\"ethereum\\\\\\\\\\\\\\\",\\\\\\\\n  either: \\\\\\\\\\\\\\\"ethereum\\\\\\\\\\\\\\\",\\\\\\\\n  app: \\\\\\\\\\\\\\\"application\\\\\\\\\\\\\\\",\\\\\\\\n  cryptocyrrency: \\\\\\\\\\\\\\\"crypto\\\\\\\\\\\\\\\",\\\\\\\\n  developerdao: \\\\\\\\\\\\\\\"devdao\\\\\\\\\\\\\\\",\\\\\\\\n  dev: \\\\\\\\\\\\\\\"develop\\\\\\\\\\\\\\\",\\\\\\\\n  doc: \\\\\\\\\\\\\\\"document\\\\\\\\\\\\\\\",\\\\\\\\n  lib: \\\\\\\\\\\\\\\"librari\\\\\\\\\\\\\\\",\\\\\\\\n  saw: \\\\\\\\\\\\\\\"see\\\\\\\\\\\\\\\",\\\\\\\\n  seen: \\\\\\\\\\\\\\\"see\\\\\\\\\\\\\\\",\\\\\\\\n  tweet: \\\\\\\\\\\\\\\"twitter\\\\\\\\\\\\\\\",\\\\\\\\n  paid: \\\\\\\\\\\\\\\"pai\\\\\\\\\\\\\\\",\\\\\\\\n  src: \\\\\\\\\\\\\\\"sourc\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst applySynonym = (word) => {\\\\\\\\n  if (synonyms.hasOwnProperty(word.toLowerCase())) {\\\\\\\\n    return synonyms[word];\\\\\\\\n  }\\\\\\\\n  return word;\\\\\\\\n};\\\\\\\\n//////////////////////////////////////////////////////////////////////\\\\\\\\n///STEMMING///////////////////////////////////////////////////////////\\\\\\\\nconst step2list = {\\\\\\\\n  ational: \\\\\\\\\\\\\\\"ate\\\\\\\\\\\\\\\",\\\\\\\\n  tional: \\\\\\\\\\\\\\\"tion\\\\\\\\\\\\\\\",\\\\\\\\n  enci: \\\\\\\\\\\\\\\"ence\\\\\\\\\\\\\\\",\\\\\\\\n  anci: \\\\\\\\\\\\\\\"ance\\\\\\\\\\\\\\\",\\\\\\\\n  izer: \\\\\\\\\\\\\\\"ize\\\\\\\\\\\\\\\",\\\\\\\\n  bli: \\\\\\\\\\\\\\\"ble\\\\\\\\\\\\\\\",\\\\\\\\n  alli: \\\\\\\\\\\\\\\"al\\\\\\\\\\\\\\\",\\\\\\\\n  entli: \\\\\\\\\\\\\\\"ent\\\\\\\\\\\\\\\",\\\\\\\\n  eli: \\\\\\\\\\\\\\\"e\\\\\\\\\\\\\\\",\\\\\\\\n  ousli: \\\\\\\\\\\\\\\"ous\\\\\\\\\\\\\\\",\\\\\\\\n  ization: \\\\\\\\\\\\\\\"ize\\\\\\\\\\\\\\\",\\\\\\\\n  ation: \\\\\\\\\\\\\\\"ate\\\\\\\\\\\\\\\",\\\\\\\\n  ator: \\\\\\\\\\\\\\\"ate\\\\\\\\\\\\\\\",\\\\\\\\n  alism: \\\\\\\\\\\\\\\"al\\\\\\\\\\\\\\\",\\\\\\\\n  iveness: \\\\\\\\\\\\\\\"ive\\\\\\\\\\\\\\\",\\\\\\\\n  fulness: \\\\\\\\\\\\\\\"ful\\\\\\\\\\\\\\\",\\\\\\\\n  ousness: \\\\\\\\\\\\\\\"ous\\\\\\\\\\\\\\\",\\\\\\\\n  aliti: \\\\\\\\\\\\\\\"al\\\\\\\\\\\\\\\",\\\\\\\\n  iviti: \\\\\\\\\\\\\\\"ive\\\\\\\\\\\\\\\",\\\\\\\\n  biliti: \\\\\\\\\\\\\\\"ble\\\\\\\\\\\\\\\",\\\\\\\\n  logi: \\\\\\\\\\\\\\\"log\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\n/** @type {Record<string, string>} */\\\\\\\\nconst step3list = {\\\\\\\\n  icate: \\\\\\\\\\\\\\\"ic\\\\\\\\\\\\\\\",\\\\\\\\n  ative: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  alize: \\\\\\\\\\\\\\\"al\\\\\\\\\\\\\\\",\\\\\\\\n  iciti: \\\\\\\\\\\\\\\"ic\\\\\\\\\\\\\\\",\\\\\\\\n  ical: \\\\\\\\\\\\\\\"ic\\\\\\\\\\\\\\\",\\\\\\\\n  ful: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  ness: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst gt0 = /^([^aeiou][^aeiouy]*)?([aeiouy][aeiou]*)([^aeiou][^aeiouy]*)/;\\\\\\\\nconst eq1 =\\\\\\\\n  /^([^aeiou][^aeiouy]*)?([aeiouy][aeiou]*)([^aeiou][^aeiouy]*)([aeiouy][aeiou]*)?$/;\\\\\\\\nconst gt1 =\\\\\\\\n  /^([^aeiou][^aeiouy]*)?(([aeiouy][aeiou]*)([^aeiou][^aeiouy]*)){2,}/;\\\\\\\\nconst vowelInStem = /^([^aeiou][^aeiouy]*)?[aeiouy]/;\\\\\\\\nconst consonantLike = /^([^aeiou][^aeiouy]*)[aeiouy][^aeiouwxy]$/;\\\\\\\\n\\\\\\\\n// Exception expressions.\\\\\\\\nconst sfxLl = /ll$/;\\\\\\\\nconst sfxE = /^(.+?)e$/;\\\\\\\\nconst sfxY = /^(.+?)y$/;\\\\\\\\nconst sfxIon = /^(.+?(s|t))(ion)$/;\\\\\\\\nconst sfxEdOrIng = /^(.+?)(ed|ing)$/;\\\\\\\\nconst sfxAtOrBlOrIz = /(at|bl|iz)$/;\\\\\\\\nconst sfxEED = /^(.+?)eed$/;\\\\\\\\nconst sfxS = /^.+?[^s]s$/;\\\\\\\\nconst sfxSsesOrIes = /^.+?(ss|i)es$/;\\\\\\\\nconst sfxMultiConsonantLike = /([^aeiouylsz])\\\\\\\\\\\\\\\\1$/;\\\\\\\\nconst step2 =\\\\\\\\n  /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\\\\\\\\nconst step3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\\\\\\\\nconst step4 =\\\\\\\\n  /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Get the stem from a given value.\\\\\\\\n *\\\\\\\\n * @param {string} value\\\\\\\\n *   Value to stem.\\\\\\\\n * @returns {string}\\\\\\\\n *   Stem for `value`\\\\\\\\n */\\\\\\\\n// eslint-disable-next-line complexity\\\\\\\\nfunction stemmer(value) {\\\\\\\\n  let result = value.toLowerCase();\\\\\\\\n\\\\\\\\n  // Exit early.\\\\\\\\n  if (result.length < 3) {\\\\\\\\n    return result;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /** @type {boolean} */\\\\\\\\n  let firstCharacterWasLowerCaseY = false;\\\\\\\\n\\\\\\\\n  // Detect initial `y`, make sure it never matches.\\\\\\\\n  if (\\\\\\\\n    result.codePointAt(0) === 121 // Lowercase Y\\\\\\\\n  ) {\\\\\\\\n    firstCharacterWasLowerCaseY = true;\\\\\\\\n    result = \\\\\\\\\\\\\\\"Y\\\\\\\\\\\\\\\" + result.slice(1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 1a.\\\\\\\\n  if (sfxSsesOrIes.test(result)) {\\\\\\\\n    // Remove last two characters.\\\\\\\\n    result = result.slice(0, -2);\\\\\\\\n  } else if (sfxS.test(result)) {\\\\\\\\n    // Remove last character.\\\\\\\\n    result = result.slice(0, -1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /** @type {RegExpMatchArray|null} */\\\\\\\\n  let match;\\\\\\\\n\\\\\\\\n  // Step 1b.\\\\\\\\n  if ((match = sfxEED.exec(result))) {\\\\\\\\n    if (gt0.test(match[1])) {\\\\\\\\n      // Remove last character.\\\\\\\\n      result = result.slice(0, -1);\\\\\\\\n    }\\\\\\\\n  } else if ((match = sfxEdOrIng.exec(result)) && vowelInStem.test(match[1])) {\\\\\\\\n    result = match[1];\\\\\\\\n\\\\\\\\n    if (sfxAtOrBlOrIz.test(result)) {\\\\\\\\n      // Append `e`.\\\\\\\\n      result += \\\\\\\\\\\\\\\"e\\\\\\\\\\\\\\\";\\\\\\\\n    } else if (sfxMultiConsonantLike.test(result)) {\\\\\\\\n      // Remove last character.\\\\\\\\n      result = result.slice(0, -1);\\\\\\\\n    } else if (consonantLike.test(result)) {\\\\\\\\n      // Append `e`.\\\\\\\\n      result += \\\\\\\\\\\\\\\"e\\\\\\\\\\\\\\\";\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 1c.\\\\\\\\n  if ((match = sfxY.exec(result)) && vowelInStem.test(match[1])) {\\\\\\\\n    // Remove suffixing `y` and append `i`.\\\\\\\\n    result = match[1] + \\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 2.\\\\\\\\n  if ((match = step2.exec(result)) && gt0.test(match[1])) {\\\\\\\\n    result = match[1] + step2list[match[2]];\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 3.\\\\\\\\n  if ((match = step3.exec(result)) && gt0.test(match[1])) {\\\\\\\\n    result = match[1] + step3list[match[2]];\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 4.\\\\\\\\n  if ((match = step4.exec(result))) {\\\\\\\\n    if (gt1.test(match[1])) {\\\\\\\\n      result = match[1];\\\\\\\\n    }\\\\\\\\n  } else if ((match = sfxIon.exec(result)) && gt1.test(match[1])) {\\\\\\\\n    result = match[1];\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 5.\\\\\\\\n  if (\\\\\\\\n    (match = sfxE.exec(result)) &&\\\\\\\\n    (gt1.test(match[1]) ||\\\\\\\\n      (eq1.test(match[1]) && !consonantLike.test(match[1])))\\\\\\\\n  ) {\\\\\\\\n    result = match[1];\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (sfxLl.test(result) && gt1.test(result)) {\\\\\\\\n    result = result.slice(0, -1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Turn initial `Y` back to `y`.\\\\\\\\n  if (firstCharacterWasLowerCaseY) {\\\\\\\\n    result = \\\\\\\\\\\\\\\"y\\\\\\\\\\\\\\\" + result.slice(1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return result;\\\\\\\\n}\\\\\\\\n\\\\\\\\n//////////////////////////////////////////////////////////////////////\\\\\\\\n///SPELLCHECK/////////////////////////////////////////////////////////\\\\\\\\nfunction levenshteinDistance(s, t, threshold) {\\\\\\\\n  const BIG_NUMBER = 10000;\\\\\\\\n  if (s == null || t == null) {\\\\\\\\n    return BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n  if (threshold < 0) {\\\\\\\\n    return BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n  let n = s.length;\\\\\\\\n  let m = t.length;\\\\\\\\n  if (Math.abs(n - m) >= threshold) {\\\\\\\\n    return BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // if one string is empty, the edit distance is necessarily the length of the other\\\\\\\\n  if (n == 0) {\\\\\\\\n    return m <= threshold ? m : BIG_NUMBER;\\\\\\\\n  } else if (m == 0) {\\\\\\\\n    return n <= threshold ? n : BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (n > m) {\\\\\\\\n    // swap the two strings to consume less memory\\\\\\\\n    let temp = s;\\\\\\\\n    s = t;\\\\\\\\n    t = temp;\\\\\\\\n    let tempSize = n;\\\\\\\\n    n = m;\\\\\\\\n    m = tempSize;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  let p = Array.from({ length: n + 1 }, () => 0); // \\\\\\\\\\\\'previous\\\\\\\\\\\\' cost array, horizontally\\\\\\\\n  let d = Array.from({ length: n + 1 }, () => 0); // cost array, horizontally\\\\\\\\n  let _d; // placeholder to assist in swapping p and d\\\\\\\\n\\\\\\\\n  // fill in starting table values\\\\\\\\n  const boundary = Math.min(n, threshold) + 1;\\\\\\\\n  for (let i = 0; i < boundary; i++) {\\\\\\\\n    p[i] = i;\\\\\\\\n  }\\\\\\\\n  // these fills ensure that the value above the rightmost entry of our\\\\\\\\n  // stripe will be ignored in following loop iterations\\\\\\\\n  for (let i = boundary; i < p.length; i++) {\\\\\\\\n    p[i] = BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n  for (let i = 0; i < d.length; i++) {\\\\\\\\n    d[i] = BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // iterates through t\\\\\\\\n  for (let j = 1; j <= m; j++) {\\\\\\\\n    const t_j = t.charAt(j - 1); // jth character of t\\\\\\\\n    d[0] = j;\\\\\\\\n\\\\\\\\n    // compute stripe indices, constrain to array size\\\\\\\\n    const min = Math.max(1, j - threshold);\\\\\\\\n    const max = j > BIG_NUMBER - threshold ? n : Math.min(n, j + threshold);\\\\\\\\n\\\\\\\\n    // the stripe may lead off of the table if s and t are of different sizes\\\\\\\\n    if (min > max) {\\\\\\\\n      return BIG_NUMBER;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // ignore entry left of leftmost\\\\\\\\n    if (min > 1) {\\\\\\\\n      d[min - 1] = BIG_NUMBER;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // iterates through [min, max] in s\\\\\\\\n    for (let i = min; i <= max; i++) {\\\\\\\\n      if (s.charAt(i - 1) == t_j) {\\\\\\\\n        // diagonally left and up\\\\\\\\n        d[i] = p[i - 1];\\\\\\\\n      } else {\\\\\\\\n        // 1 + minimum of cell to the left, to the top, diagonally left and up\\\\\\\\n        d[i] = 1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // copy current distance counts to \\\\\\\\\\\\'previous row\\\\\\\\\\\\' distance counts\\\\\\\\n    _d = p;\\\\\\\\n    p = d;\\\\\\\\n    d = _d;\\\\\\\\n  }\\\\\\\\n  // we don\\\\\\\\\\\\'t need to check for threshold here because we did it inside the loop\\\\\\\\n  return p[n] <= threshold ? p[n] : BIG_NUMBER;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst spellcheckQueryProcessing = (query, dictionary) => {\\\\\\\\n  // Split text document into words\\\\\\\\n  const words = stemAndFilterQuery(query);\\\\\\\\n  const dictionaryArray = Object.keys(dictionary);\\\\\\\\n  // Iterate over each word in the text\\\\\\\\n  for (let i = 0; i < words.length; i++) {\\\\\\\\n    let word = words[i].toLowerCase().replace(/[^a-z0-9]/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n    // If the word is not in the dictionary, find the closest match\\\\\\\\n    if (!dictionary.hasOwnProperty(word)) {\\\\\\\\n      let closestMatch = undefined;\\\\\\\\n      let closestDistance = word.length;\\\\\\\\n      let allowedDistance = Math.min(word.length - 1, 3);\\\\\\\\n      // Iterate over each word in the dictionary\\\\\\\\n      if (word.length > 1) {\\\\\\\\n        for (let j = 0; j < dictionaryArray.length; j++) {\\\\\\\\n          let dictWord = dictionaryArray[j];\\\\\\\\n          let distance = levenshteinDistance(word, dictWord, allowedDistance);\\\\\\\\n\\\\\\\\n          // If the distance is less than the closest distance, update the closest match\\\\\\\\n          if (distance <= allowedDistance && distance < closestDistance) {\\\\\\\\n            closestMatch = dictWord;\\\\\\\\n            closestDistance = distance;\\\\\\\\n          }\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      // Replace the misspelled word with the closest match\\\\\\\\n      words[i] = closestMatch;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return words.filter((word) => !!word);\\\\\\\\n};\\\\\\\\n\\\\\\\\n//////////////////////////////////////////////////////////////////////\\\\\\\\n///INDEXER&SEARCH/////////////////////////////////////////////////////\\\\\\\\nconst fillDictionaryWith = (dict, text, id) => {\\\\\\\\n  let word = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  for (let i = 0; i < text.length; i++) {\\\\\\\\n    const char = text.charAt(i);\\\\\\\\n    const nextChar = text.charAt(i + 1);\\\\\\\\n    if (/\\\\\\\\\\\\\\\\w/.test(char) || (char === \\\\\\\\\\\\\\\".\\\\\\\\\\\\\\\" && /\\\\\\\\\\\\\\\\w/.test(nextChar))) {\\\\\\\\n      word += char.toLowerCase();\\\\\\\\n    } else if (word.length > 0) {\\\\\\\\n      const processedWord = applySynonym(stemmer(word));\\\\\\\\n      if (processedWord.length > 1 && !isStopWord(processedWord)) {\\\\\\\\n        const oldValue = dict[processedWord] || [];\\\\\\\\n        dict[processedWord] = [...oldValue, id];\\\\\\\\n      }\\\\\\\\n      word = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  const processedWord = applySynonym(stemmer(word));\\\\\\\\n  if (processedWord.length > 1 && !isStopWord(processedWord)) {\\\\\\\\n    const oldValue = dict[stemmer(processedWord)] || [];\\\\\\\\n    dict[stemmer(processedWord)] = [...oldValue, id];\\\\\\\\n  }\\\\\\\\n  return dict;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst buildIndex = (posts) => {\\\\\\\\n  let index = {};\\\\\\\\n\\\\\\\\n  posts.forEach((post) => {\\\\\\\\n    const title = post.snapshot.name;\\\\\\\\n    const labels = post.snapshot.labels.join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n    const text = post.snapshot.description;\\\\\\\\n    const postType = post.snapshot.post_type;\\\\\\\\n    const authorId = post.author_id;\\\\\\\\n    const postText = `${authorId} ${postType} ${title} ${labels} ${text}`;\\\\\\\\n    index = fillDictionaryWith(index, postText, post.id);\\\\\\\\n  });\\\\\\\\n  return index;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst stemAndFilterQuery = (query) => {\\\\\\\\n  return Object.keys(fillDictionaryWith({}, query));\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst sortSearchResult = (searchResult) => {\\\\\\\\n  // create a map to count the frequency of each element\\\\\\\\n  const freq = new Map();\\\\\\\\n  for (const num of searchResult) {\\\\\\\\n    freq.set(num, (freq.get(num) || 0) + 1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // define a custom comparison function to sort the array\\\\\\\\n  function compare(a, b) {\\\\\\\\n    // compare the frequency of the two elements\\\\\\\\n    const freqDiff = freq.get(b) - freq.get(a);\\\\\\\\n    if (freqDiff !== 0) {\\\\\\\\n      return freqDiff; // if they have different frequency, sort by frequency\\\\\\\\n    } else {\\\\\\\\n      return 0; // if they have the same frequency, leave as it is. Will be sorted by search term, by date\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort the array using the custom comparison function\\\\\\\\n  searchResult.sort(compare);\\\\\\\\n  return searchResult.filter(\\\\\\\\n    (elem, index) => searchResult.indexOf(elem) === index\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst search = (processedQueryArray, index) => {\\\\\\\\n  return sortSearchResult(\\\\\\\\n    processedQueryArray.flatMap((queryWord) => {\\\\\\\\n      const termSearchRes = index[queryWord].reverse();\\\\\\\\n      const termSortedSearchRes = sortSearchResult(termSearchRes);\\\\\\\\n      return termSortedSearchRes;\\\\\\\\n    })\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n//////////////////////////////////////////////////////////////////////\\\\\\\\n///UI&UX//////////////////////////////////////////////////////////////\\\\\\\\n//Run search and spelling computation every time the search bar modified\\\\\\\\n//but no more frequent than 1 time per 1.5 seconds\\\\\\\\nconst amountOfResultsToShowFirst = 5;\\\\\\\\n\\\\\\\\nconst buildPostsIndex = () => {\\\\\\\\n  return Near.asyncView(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_posts\\\\\\\\\\\\\\\").then(\\\\\\\\n    (posts) => {\\\\\\\\n      const index = buildIndex(posts);\\\\\\\\n      const data = posts.reduce((acc, post) => {\\\\\\\\n        acc[post.id] = post;\\\\\\\\n        return acc;\\\\\\\\n      }, {});\\\\\\\\n      return { index, data };\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getProcessedPostsCached = () => {\\\\\\\\n  return useCache(() => buildPostsIndex(), \\\\\\\\\\\\\\\"processedPostsCached\\\\\\\\\\\\\\\");\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (!state.interval) {\\\\\\\\n  let termStorage = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  Storage.privateSet(\\\\\\\\\\\\\\\"term\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n  setInterval(() => {\\\\\\\\n    const currentInput = Storage.privateGet(\\\\\\\\\\\\\\\"term\\\\\\\\\\\\\\\");\\\\\\\\n    if (currentInput !== termStorage) {\\\\\\\\n      termStorage = currentInput;\\\\\\\\n      computeResults(termStorage);\\\\\\\\n    }\\\\\\\\n  }, 1500);\\\\\\\\n  State.update({\\\\\\\\n    interval: true,\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst computeResults = (term) => {\\\\\\\\n  const start = new Date().getTime();\\\\\\\\n  const processedPostsCached = useCache(\\\\\\\\n    () =>\\\\\\\\n      buildPostsIndex().then((processedPosts) => {\\\\\\\\n        // Run query first time posts retrieved\\\\\\\\n        const query = term;\\\\\\\\n        const processedQuery = spellcheckQueryProcessing(\\\\\\\\n          query,\\\\\\\\n          processedPosts.index\\\\\\\\n        );\\\\\\\\n        const searchResult = search(processedQuery, processedPosts.index);\\\\\\\\n        console.log(processedQuery);\\\\\\\\n        console.log(searchResult);\\\\\\\\n        State.update({\\\\\\\\n          searchResult,\\\\\\\\n          shownSearchResults: searchResult.slice(0, amountOfResultsToShowFirst),\\\\\\\\n          processedQuery,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n        return processedPosts;\\\\\\\\n      }),\\\\\\\\n    \\\\\\\\\\\\\\\"processedPostsCached\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n  if (processedPostsCached) {\\\\\\\\n    // Run query every other time after data retrieved and cached\\\\\\\\n    const query = term;\\\\\\\\n    const processedQuery = spellcheckQueryProcessing(\\\\\\\\n      query,\\\\\\\\n      processedPostsCached.index\\\\\\\\n    );\\\\\\\\n    const searchResult = search(processedQuery, processedPostsCached.index);\\\\\\\\n    console.log(processedQuery);\\\\\\\\n    console.log(searchResult);\\\\\\\\n    State.update({\\\\\\\\n      searchResult,\\\\\\\\n      shownSearchResults: searchResult.slice(0, 10),\\\\\\\\n      processedQuery,\\\\\\\\n      loading: false,\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n  const end = new Date().getTime();\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"search time: \\\\\\\\\\\\\\\", end - start);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst updateInput = (term) => {\\\\\\\\n  Storage.privateSet(\\\\\\\\\\\\\\\"term\\\\\\\\\\\\\\\", term);\\\\\\\\n  State.update({\\\\\\\\n    term,\\\\\\\\n    loading: true,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getSearchResultsKeywordsFor = (postId) => {\\\\\\\\n  const index = getProcessedPostsCached().index;\\\\\\\\n  return state.processedQuery.filter((queryWord) => {\\\\\\\\n    return index[queryWord].includes(postId);\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst showMoreSearchResults = () => {\\\\\\\\n  const shownSearchResults = state.shownSearchResults || [];\\\\\\\\n  const newShownSearchResults = state.searchResult.slice(\\\\\\\\n    0,\\\\\\\\n    shownSearchResults.length + amountOfResultsToShowFirst\\\\\\\\n  );\\\\\\\\n  State.update({ shownSearchResults: newShownSearchResults });\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-row gap-4\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-row position-relative w-25\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"position-absolute d-flex ps-3 flex-column h-100 justify-center\\\\\\\\\\\\\\\">\\\\\\\\n          {state.loading ? (\\\\\\\\n            <span\\\\\\\\n              className=\\\\\\\\\\\\\\\"spinner-grow spinner-grow-sm m-auto\\\\\\\\\\\\\\\"\\\\\\\\n              role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n              aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n            />\\\\\\\\n          ) : (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-search m-auto\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n        <input\\\\\\\\n          type=\\\\\\\\\\\\\\\"search\\\\\\\\\\\\\\\"\\\\\\\\n          className=\\\\\\\\\\\\\\\"ps-5 form-control border border-0 bg-light\\\\\\\\\\\\\\\"\\\\\\\\n          value={state.term ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n          onChange={(e) => updateInput(e.target.value)}\\\\\\\\n          placeholder={props.placeholder ?? `Search Posts`}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n        <button\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn btn-light dropdown-toggle\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n          aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          Sort\\\\\\\\n        </button>\\\\\\\\n        <ul class=\\\\\\\\\\\\\\\"dropdown-menu px-2 shadow\\\\\\\\\\\\\\\">\\\\\\\\n          <li>\\\\\\\\n            <a\\\\\\\\n              style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              Latest\\\\\\\\n            </a>\\\\\\\\n          </li>\\\\\\\\n          <li>\\\\\\\\n            <a\\\\\\\\n              style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              Hottest\\\\\\\\n            </a>\\\\\\\\n          </li>\\\\\\\\n          <li>\\\\\\\\n            <a\\\\\\\\n              style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              All replies\\\\\\\\n            </a>\\\\\\\\n          </li>\\\\\\\\n        </ul>\\\\\\\\n      </div>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          // TODO: LEGACY.\\\\\\\\n          src={\\\\\\\\n            \\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.feature.post-search.by-author\\\\\\\\\\\\\\\"\\\\\\\\n          }\\\\\\\\n          props={{\\\\\\\\n            authorQuery: props.authorQuery,\\\\\\\\n            onAuthorSearch: props.onAuthorSearch,\\\\\\\\n            nearDevGovGigsWidgetsAccountId: nearDevGovGigsWidgetsAccountId,\\\\\\\\n            nearDevGovGigsContractAccountId: nearDevGovGigsContractAccountId,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n      <div>\\\\\\\\n        <Widget\\\\\\\\n          // TODO: LEGACY.\\\\\\\\n          src={\\\\\\\\n            \\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.feature.post-search.by-tag\\\\\\\\\\\\\\\"\\\\\\\\n          }\\\\\\\\n          props={{\\\\\\\\n            tagQuery: props.tagQuery,\\\\\\\\n            onTagSearch: props.onTagSearch,\\\\\\\\n            nearDevGovGigsWidgetsAccountId: nearDevGovGigsWidgetsAccountId,\\\\\\\\n            nearDevGovGigsContractAccountId: nearDevGovGigsContractAccountId,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-row-reverse flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n        {props.children}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    {state.processedQuery &&\\\\\\\\n      state.processedQuery.length > 0 &&\\\\\\\\n      state.term.toLowerCase().trim() !== state.processedQuery.join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\") && (\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"mb-2\\\\\\\\\\\\\\\" style={{ \\\\\\\\\\\\\\\"font-family\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"monospace\\\\\\\\\\\\\\\" }}>\\\\\\\\n          Looking for\\\\\\\\n          <strong>{state.processedQuery.join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}</strong>:\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    {state.term && state.term.length > 1 && state.searchResult ? (\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.List\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          searchResult: {\\\\\\\\n            postIds: state.searchResult,\\\\\\\\n            keywords: Object.fromEntries(\\\\\\\\n              state.searchResult.map((postId) => {\\\\\\\\n                return [postId, getSearchResultsKeywordsFor(postId)];\\\\\\\\n              })\\\\\\\\n            ),\\\\\\\\n          },\\\\\\\\n          recency: props.recency,\\\\\\\\n          tag: props.tag,\\\\\\\\n          author: props.author,\\\\\\\\n        }}\\\\\\\\n        key={key}\\\\\\\\n      />\\\\\\\\n    ) : (\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.List\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          recency: props.recency,\\\\\\\\n          tag: props.tag,\\\\\\\\n          author: props.author,\\\\\\\\n          transactionHashes: props.transactionHashes,\\\\\\\\n        }}\\\\\\\\n        key={key}\\\\\\\\n      />\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.community.Sidebar\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!href) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { community } = props;\\\\\\\\n\\\\\\\\nconst CommunitySummary = () => {\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          text: community.bio_markdown,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <small class=\\\\\\\\\\\\\\\"text-muted mb-3\\\\\\\\\\\\\\\">\\\\\\\\n        <Link\\\\\\\\n          to={href({\\\\\\\\n            widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n            params: { page: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\", tag: community.tag },\\\\\\\\n          })}\\\\\\\\n        >\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Tag\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{ tag: community.tag }}\\\\\\\\n          />\\\\\\\\n        </Link>\\\\\\\\n      </small>\\\\\\\\n    </>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn community === null ? (\\\\\\\\n  <div>Loading...</div>\\\\\\\\n) : (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"d-flex flex-column align-items-end\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Tile\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        fullWidth: true,\\\\\\\\n        minHeight: 0,\\\\\\\\n        noBorder: true,\\\\\\\\n        children: <CommunitySummary />,\\\\\\\\n        style: { marginTop: \\\\\\\\\\\\\\\"0.5rem\\\\\\\\\\\\\\\" },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n\\\\\\\\n    <Widget\\\\\\\\n      // TODO: LEGACY.\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Tile\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        heading: \\\\\\\\\\\\\\\"Admins\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n        children: (community?.admins ?? []).map((accountId) => (\\\\\\\\n          <div key={accountId} className=\\\\\\\\\\\\\\\"d-flex\\\\\\\\\\\\\\\" style={{ fontWeight: 500 }}>\\\\\\\\n            <Widget\\\\\\\\n              // TODO: LEGACY.\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.profile-card\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{ accountId }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )),\\\\\\\\n\\\\\\\\n        fullWidth: true,\\\\\\\\n        minHeight: 0,\\\\\\\\n        noBorder: true,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.community.Spawner\": {\"\": \"const { typeMatch } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.struct\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!typeMatch) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { data, onSubmit, onCancel } = props;\\\\\\\\n\\\\\\\\nconst CommunityInputsPartialSchema = {\\\\\\\\n  handle: {\\\\\\\\n    inputProps: {\\\\\\\\n      min: 2,\\\\\\\\n      max: 40,\\\\\\\\n\\\\\\\\n      placeholder:\\\\\\\\n        \\\\\\\\\\\\\\\"Choose unique URL handle for your community. Example: zero-knowledge.\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n      required: true,\\\\\\\\n    },\\\\\\\\n\\\\\\\\n    label: \\\\\\\\\\\\\\\"URL handle\\\\\\\\\\\\\\\",\\\\\\\\n    order: 3,\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  name: {\\\\\\\\n    inputProps: {\\\\\\\\n      min: 2,\\\\\\\\n      max: 30,\\\\\\\\n      placeholder: \\\\\\\\\\\\\\\"Community name.\\\\\\\\\\\\\\\",\\\\\\\\n      required: true,\\\\\\\\n    },\\\\\\\\n\\\\\\\\n    label: \\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\",\\\\\\\\n    order: 1,\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  tag: {\\\\\\\\n    inputProps: {\\\\\\\\n      min: 2,\\\\\\\\n      max: 30,\\\\\\\\n\\\\\\\\n      placeholder:\\\\\\\\n        \\\\\\\\\\\\\\\"Any posts with this tag will show up in your community feed.\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n      required: true,\\\\\\\\n    },\\\\\\\\n\\\\\\\\n    label: \\\\\\\\\\\\\\\"Tag\\\\\\\\\\\\\\\",\\\\\\\\n    order: 4,\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  description: {\\\\\\\\n    inputProps: {\\\\\\\\n      min: 2,\\\\\\\\n      max: 60,\\\\\\\\n\\\\\\\\n      placeholder:\\\\\\\\n        \\\\\\\\\\\\\\\"Describe your community in one short sentence that will appear in the communities discovery page.\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n      required: true,\\\\\\\\n    },\\\\\\\\n\\\\\\\\n    label: \\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\",\\\\\\\\n    order: 2,\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst communityInputsValidator = (formValues) =>\\\\\\\\n  typeMatch(formValues) &&\\\\\\\\n  Object.values(formValues).every(\\\\\\\\n    (value) => typeof value === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" && value.length > 0\\\\\\\\n  );\\\\\\\\n\\\\\\\\nconst CommunityInputsDefaults = {\\\\\\\\n  handle: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  name: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  tag: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Widget\\\\\\\\n    src={\\\\\\\\n      \\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.organism.configurator\\\\\\\\\\\\\\\"\\\\\\\\n    }\\\\\\\\n    props={{\\\\\\\\n      heading: \\\\\\\\\\\\\\\"Community information\\\\\\\\\\\\\\\",\\\\\\\\n      externalState: CommunityInputsDefaults,\\\\\\\\n      fullWidth: true,\\\\\\\\n      isActive: true,\\\\\\\\n      isUnlocked: true,\\\\\\\\n      isValid: communityInputsValidator,\\\\\\\\n      onSubmit: onSubmit,\\\\\\\\n      schema: CommunityInputsPartialSchema,\\\\\\\\n      submitIcon: {\\\\\\\\n        type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n        variant: \\\\\\\\\\\\\\\"bi-rocket-takeoff-fill\\\\\\\\\\\\\\\",\\\\\\\\n      },\\\\\\\\n      submitLabel: \\\\\\\\\\\\\\\"Launch\\\\\\\\\\\\\\\",\\\\\\\\n      onCancel: onCancel,\\\\\\\\n      nearDevGovGigsWidgetsAccountId: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.github.Viewer\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { kanbanBoards, handle, permissions } = props;\\\\\\\\n// TODO: Convert this viewer to display the provided data via kanbanBoards\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Widget\\\\\\\\n    // TODO: LEGACY.\\\\\\\\n    src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.entity.workspace.view.github.configurator\\\\\\\\\\\\\\\"\\\\\\\\n    props={{\\\\\\\\n      communityHandle: handle, // rather than fetching again via the handle\\\\\\\\n      link: href({\\\\\\\\n        // do we need a link?\\\\\\\\n        gateway: \\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\",\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: { page: \\\\\\\\\\\\\\\"community\\\\\\\\\\\\\\\", handle },\\\\\\\\n      }),\\\\\\\\n      permissions,\\\\\\\\n      // TODO: REMOVE AFTER MIGRATION.\\\\\\\\n      nearDevGovGigsWidgetsAccountId: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n      nearDevGovGigsWidgetsAccountId: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.kanban.Viewer\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { metadata, payload, handle, permissions } = props;\\\\\\\\n// TODO: Convert this viewer to display the provided data via metadata, payload\\\\\\\\n\\\\\\\\nconst CommunityBoardPage = ({ handle, permissions }) => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      // TODO: LEGACY.\\\\\\\\n      src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.entity.workspace.view.kanban.configurator\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        communityHandle: handle, // rather than fetching again via the handle\\\\\\\\n        link: href({\\\\\\\\n          // do we need a link?\\\\\\\\n          gateway: \\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\",\\\\\\\\n          widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n          params: { page: \\\\\\\\\\\\\\\"community\\\\\\\\\\\\\\\", handle },\\\\\\\\n        }),\\\\\\\\n        permissions,\\\\\\\\n        // TODO: REMOVE AFTER MIGRATION.\\\\\\\\n        nearDevGovGigsWidgetsAccountId: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n        nearDevGovGigsWidgetsAccountId: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn CommunityBoardPage(props);\\\\\\\\n\"}, \"devhub.entity.addon.wiki.Configurator\": {\"\": \"const { data, onSubmit } = props;\\\\\\\\n\\\\\\\\nconst initialData = data;\\\\\\\\nconst [content, setContent] = useState(data.content || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [title, setTitle] = useState(data.title || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [subtitle, setSubtitle] = useState(data.subtitle || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst [textAlign, setTextAlign] = useState(data.textAlign || \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  margin: 0 auto;\\\\\\\\n  padding: 20px;\\\\\\\\n  text-align: left;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst FormContainer = styled.div`\\\\\\\\n  padding-top: 1rem;\\\\\\\\n\\\\\\\\n  & > *:not(:last-child) {\\\\\\\\n    margin-bottom: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst hasDataChanged = () => {\\\\\\\\n  return (\\\\\\\\n    content !== initialData.content ||\\\\\\\\n    title !== initialData.title ||\\\\\\\\n    subtitle !== initialData.subtitle ||\\\\\\\\n    textAlign !== initialData.textAlign\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleSubmit = () => {\\\\\\\\n  if (title) onSubmit({ title, subtitle, content, textAlign });\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <ul className=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"editPreviewTabs\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"tablist\\\\\\\\\\\\\\\">\\\\\\\\n      <li className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"nav-link active\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"edit-tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-target=\\\\\\\\\\\\\\\"#edit\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          aria-controls=\\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\"\\\\\\\\n          aria-selected=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          Edit\\\\\\\\n        </button>\\\\\\\\n      </li>\\\\\\\\n      <li className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"nav-link\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"preview-tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-target=\\\\\\\\\\\\\\\"#preview\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          aria-controls=\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\"\\\\\\\\n          aria-selected=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          Preview\\\\\\\\n        </button>\\\\\\\\n      </li>\\\\\\\\n    </ul>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"tab-content\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"editPreviewTabsContent\\\\\\\\\\\\\\\">\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"tab-pane show active p-4\\\\\\\\\\\\\\\"\\\\\\\\n        id=\\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\"\\\\\\\\n        role=\\\\\\\\\\\\\\\"tabpanel\\\\\\\\\\\\\\\"\\\\\\\\n        aria-labelledby=\\\\\\\\\\\\\\\"edit-tab\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\" }}\\\\\\\\n      >\\\\\\\\n        <div style={{ position: \\\\\\\\\\\\\\\"absolute\\\\\\\\\\\\\\\", top: 10, right: 0 }}>\\\\\\\\n          <Widget\\\\\\\\n            // LEGACY\\\\\\\\n            src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.button-switch\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              currentValue: textAlign,\\\\\\\\n              key: \\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\",\\\\\\\\n              onChange: (e) => setTextAlign(e.target.value),\\\\\\\\n              options: [\\\\\\\\n                { label: \\\\\\\\\\\\\\\"Left\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\" },\\\\\\\\n                { label: \\\\\\\\\\\\\\\"Center\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" },\\\\\\\\n                { label: \\\\\\\\\\\\\\\"Right\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"right\\\\\\\\\\\\\\\" },\\\\\\\\n              ],\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <FormContainer>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\",\\\\\\\\n                className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                onChange: (e) => setTitle(e.target.value),\\\\\\\\n                value: title,\\\\\\\\n                inputProps: {\\\\\\\\n                  min: 2,\\\\\\\\n                  max: 60,\\\\\\\\n                  required: true,\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Subtitle\\\\\\\\\\\\\\\",\\\\\\\\n                className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                onChange: (e) => setSubtitle(e.target.value),\\\\\\\\n                value: subtitle,\\\\\\\\n                inputProps: {\\\\\\\\n                  min: 2,\\\\\\\\n                  max: 250,\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownEditor\\\\\\\\\\\\\\\"\\\\\\\\n            props={{ data: { content }, onChange: setContent }}\\\\\\\\n          />\\\\\\\\n        </FormContainer>\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-end gap-3 mt-4\\\\\\\\\\\\\\\"}\\\\\\\\n        >\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n              disabled: !hasDataChanged() || !title || !content,\\\\\\\\n              icon: {\\\\\\\\n                type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                variant: \\\\\\\\\\\\\\\"bi-check-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n              },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Publish\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: handleSubmit,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"tab-pane\\\\\\\\\\\\\\\"\\\\\\\\n        id=\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\"\\\\\\\\n        role=\\\\\\\\\\\\\\\"tabpanel\\\\\\\\\\\\\\\"\\\\\\\\n        aria-labelledby=\\\\\\\\\\\\\\\"preview-tab\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"w-100 h-100 p-4\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.wiki.Viewer\\\\\\\\\\\\\\\"\\\\\\\\n            props={{ title, subtitle, content, textAlign }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.organism.Configurator\": {\"\": \"const Struct = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.struct\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!Struct) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"core/lib/gui/form\\\\\\\\\\\\\\\" */\\\\\\\\nconst defaultFieldUpdate = ({\\\\\\\\n  input,\\\\\\\\n  lastKnownValue,\\\\\\\\n  params: { arrayDelimiter },\\\\\\\\n}) => {\\\\\\\\n  switch (typeof input) {\\\\\\\\n    case \\\\\\\\\\\\\\\"boolean\\\\\\\\\\\\\\\":\\\\\\\\n      return input;\\\\\\\\n\\\\\\\\n    case \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\": {\\\\\\\\n      if (Array.isArray(input) && typeof lastKnownValue === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n        return input.join(arrayDelimiter ?? \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\");\\\\\\\\n      } else {\\\\\\\\n        return Array.isArray(lastKnownValue)\\\\\\\\n          ? [...lastKnownValue, ...input]\\\\\\\\n          : { ...lastKnownValue, ...input };\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    case \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\":\\\\\\\\n      return Array.isArray(lastKnownValue)\\\\\\\\n        ? input.split(arrayDelimiter ?? \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\").map((string) => string.trim())\\\\\\\\n        : input;\\\\\\\\n\\\\\\\\n    default: {\\\\\\\\n      if ((input ?? null) === null) {\\\\\\\\n        switch (typeof lastKnownValue) {\\\\\\\\n          case \\\\\\\\\\\\\\\"boolean\\\\\\\\\\\\\\\":\\\\\\\\n            return !lastKnownValue;\\\\\\\\n\\\\\\\\n          default:\\\\\\\\n            return lastKnownValue;\\\\\\\\n        }\\\\\\\\n      } else return input;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst useForm = ({ initialValues, onUpdate, stateKey, uninitialized }) => {\\\\\\\\n  const initialFormState = {\\\\\\\\n    hasUnsubmittedChanges: false,\\\\\\\\n    values: initialValues ?? {},\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const formState = state[stateKey] ?? null,\\\\\\\\n    isSynced = Struct.isEqual(formState?.values ?? {}, initialFormState.values);\\\\\\\\n\\\\\\\\n  const formReset = () =>\\\\\\\\n    State.update((lastKnownComponentState) => ({\\\\\\\\n      ...lastKnownComponentState,\\\\\\\\n      [stateKey]: initialFormState,\\\\\\\\n      hasUnsubmittedChanges: false,\\\\\\\\n    }));\\\\\\\\n\\\\\\\\n  const formUpdate =\\\\\\\\n    ({ path, via: customFieldUpdate, ...params }) =>\\\\\\\\n    (fieldInput) => {\\\\\\\\n      const updatedValues = Struct.deepFieldUpdate(\\\\\\\\n        formState?.values ?? {},\\\\\\\\n\\\\\\\\n        {\\\\\\\\n          input: fieldInput?.target?.value ?? fieldInput,\\\\\\\\n          params,\\\\\\\\n          path,\\\\\\\\n\\\\\\\\n          via:\\\\\\\\n            typeof customFieldUpdate === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\"\\\\\\\\n              ? customFieldUpdate\\\\\\\\n              : defaultFieldUpdate,\\\\\\\\n        }\\\\\\\\n      );\\\\\\\\n\\\\\\\\n      State.update((lastKnownComponentState) => ({\\\\\\\\n        ...lastKnownComponentState,\\\\\\\\n\\\\\\\\n        [stateKey]: {\\\\\\\\n          hasUnsubmittedChanges: !Struct.isEqual(\\\\\\\\n            updatedValues,\\\\\\\\n            initialFormState.values\\\\\\\\n          ),\\\\\\\\n\\\\\\\\n          values: updatedValues,\\\\\\\\n        },\\\\\\\\n      }));\\\\\\\\n\\\\\\\\n      if (\\\\\\\\n        typeof onUpdate === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\" &&\\\\\\\\n        !Struct.isEqual(updatedValues, initialFormState.values)\\\\\\\\n      ) {\\\\\\\\n        onUpdate(updatedValues);\\\\\\\\n      }\\\\\\\\n    };\\\\\\\\n\\\\\\\\n  if (\\\\\\\\n    !uninitialized &&\\\\\\\\n    (formState === null || (!formState.hasUnsubmittedChanges && !isSynced))\\\\\\\\n  ) {\\\\\\\\n    formReset();\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return {\\\\\\\\n    ...(formState ?? initialFormState),\\\\\\\\n    isSynced,\\\\\\\\n    reset: formReset,\\\\\\\\n    stateKey,\\\\\\\\n    update: formUpdate,\\\\\\\\n  };\\\\\\\\n};\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"core/lib/gui/form\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst ValueView = styled.div`\\\\\\\\n  & > p {\\\\\\\\n    margin: 0;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst fieldParamsByType = {\\\\\\\\n  array: {\\\\\\\\n    name: \\\\\\\\\\\\\\\"components.molecule.text-input\\\\\\\\\\\\\\\",\\\\\\\\n    inputProps: { type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\" },\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  boolean: {\\\\\\\\n    name: \\\\\\\\\\\\\\\"components.atom.toggle\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  string: {\\\\\\\\n    name: \\\\\\\\\\\\\\\"components.molecule.text-input\\\\\\\\\\\\\\\",\\\\\\\\n    inputProps: { type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\" },\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst defaultFieldsRender = ({ schema, form, isEditable }) => (\\\\\\\\n  <>\\\\\\\\n    {Object.entries(schema).map(\\\\\\\\n      (\\\\\\\\n        [key, { format, inputProps, noop, label, order, style, ...fieldProps }],\\\\\\\\n        idx\\\\\\\\n      ) => {\\\\\\\\n        const fieldKey = `${idx}-${key}`,\\\\\\\\n          fieldValue = form.values[key];\\\\\\\\n\\\\\\\\n        const fieldType = Array.isArray(fieldValue)\\\\\\\\n          ? \\\\\\\\\\\\\\\"array\\\\\\\\\\\\\\\"\\\\\\\\n          : typeof (fieldValue ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        const isDisabled = noop ?? inputProps.disabled ?? false;\\\\\\\\n\\\\\\\\n        const viewClassName = [\\\\\\\\n          (fieldValue?.length ?? 0) > 0 ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\",\\\\\\\\n          \\\\\\\\\\\\\\\"m-0\\\\\\\\\\\\\\\",\\\\\\\\n        ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        return (\\\\\\\\n          <>\\\\\\\\n            <div\\\\\\\\n              className={[\\\\\\\\n                \\\\\\\\\\\\\\\"d-flex gap-3\\\\\\\\\\\\\\\",\\\\\\\\n                isEditable || noop ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n              ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n              key={fieldKey}\\\\\\\\n              style={{ order }}\\\\\\\\n            >\\\\\\\\n              <label className=\\\\\\\\\\\\\\\"fw-bold w-25\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n\\\\\\\\n              <ValueView className={[viewClassName, \\\\\\\\\\\\\\\"w-75\\\\\\\\\\\\\\\"].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}>\\\\\\\\n                {format !== \\\\\\\\\\\\\\\"markdown\\\\\\\\\\\\\\\" ? (\\\\\\\\n                  <span>\\\\\\\\n                    {(fieldType === \\\\\\\\\\\\\\\"array\\\\\\\\\\\\\\\" && format === \\\\\\\\\\\\\\\"comma-separated\\\\\\\\\\\\\\\"\\\\\\\\n                      ? fieldValue\\\\\\\\n                          .filter((string) => string.length > 0)\\\\\\\\n                          .join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")\\\\\\\\n                      : fieldValue\\\\\\\\n                    )?.toString?.() || \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"}\\\\\\\\n                  </span>\\\\\\\\n                ) : (fieldValue?.length ?? 0) > 0 ? (\\\\\\\\n                  <Widget\\\\\\\\n                    // TODO: LEGACY.\\\\\\\\n                    src={\\\\\\\\n                      \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n                    }\\\\\\\\n                    props={{\\\\\\\\n                      text: fieldValue,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                ) : (\\\\\\\\n                  <span>none</span>\\\\\\\\n                )}\\\\\\\\n              </ValueView>\\\\\\\\n            </div>\\\\\\\\n            <Widget\\\\\\\\n              // TODO: LEGACY.\\\\\\\\n              src={`devgovgigs.near/widget/gigs-board.${fieldParamsByType[fieldType].name}`}\\\\\\\\n              props={{\\\\\\\\n                ...fieldProps,\\\\\\\\n\\\\\\\\n                className: [\\\\\\\\n                  \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\",\\\\\\\\n                  fieldProps.className ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                  isEditable && !noop ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\",\\\\\\\\n                ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"),\\\\\\\\n\\\\\\\\n                disabled: isDisabled,\\\\\\\\n                format,\\\\\\\\n                key: `${fieldKey}--editable`,\\\\\\\\n                label,\\\\\\\\n                onChange: form.update({ path: [key] }),\\\\\\\\n                style: { ...style, order },\\\\\\\\n\\\\\\\\n                value:\\\\\\\\n                  fieldType === \\\\\\\\\\\\\\\"array\\\\\\\\\\\\\\\" && format === \\\\\\\\\\\\\\\"comma-separated\\\\\\\\\\\\\\\"\\\\\\\\n                    ? fieldValue.join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")\\\\\\\\n                    : fieldValue,\\\\\\\\n\\\\\\\\n                inputProps: {\\\\\\\\n                  ...(inputProps ?? {}),\\\\\\\\n                  disabled: isDisabled,\\\\\\\\n\\\\\\\\n                  title:\\\\\\\\n                    noop ?? false\\\\\\\\n                      ? \\\\\\\\\\\\\\\"Temporarily disabled due to technical reasons.\\\\\\\\\\\\\\\"\\\\\\\\n                      : inputProps.title,\\\\\\\\n\\\\\\\\n                  ...(fieldParamsByType[fieldType].inputProps ?? {}),\\\\\\\\n                  tabIndex: order,\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        );\\\\\\\\n      }\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Configurator = ({\\\\\\\\n  actionsAdditional,\\\\\\\\n  cancelLabel,\\\\\\\\n  classNames,\\\\\\\\n  externalState,\\\\\\\\n  fieldsRender: customFieldsRender,\\\\\\\\n  formatter: toFormatted,\\\\\\\\n  isValid,\\\\\\\\n  isActive,\\\\\\\\n  onCancel,\\\\\\\\n  onChange,\\\\\\\\n  onSubmit,\\\\\\\\n  schema,\\\\\\\\n  submitIcon,\\\\\\\\n  submitLabel,\\\\\\\\n}) => {\\\\\\\\n  const fieldsRender = customFieldsRender || defaultFieldsRender;\\\\\\\\n\\\\\\\\n  const initialValues = Struct.typeMatch(schema)\\\\\\\\n    ? Struct.pick(externalState ?? {}, Object.keys(schema))\\\\\\\\n    : {};\\\\\\\\n\\\\\\\\n  const form = useForm({ initialValues, onUpdate: onChange, stateKey: \\\\\\\\\\\\\\\"form\\\\\\\\\\\\\\\" });\\\\\\\\n\\\\\\\\n  const formFormattedValues = toFormatted\\\\\\\\n    ? toFormatted(form.values)\\\\\\\\n    : form.values;\\\\\\\\n\\\\\\\\n  const isFormValid = isValid ? isValid(formFormattedValues) : true;\\\\\\\\n\\\\\\\\n  const onCancelClick = () => {\\\\\\\\n    form.reset();\\\\\\\\n    if (onCancel) onCancel();\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const onSubmitClick = () => {\\\\\\\\n    if (onSubmit && isFormValid) {\\\\\\\\n      onSubmit(formFormattedValues);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"flex-grow-1 d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n      <div className={`d-flex flex-column gap-${isActive ? 1 : 4}`}>\\\\\\\\n        {fieldsRender({\\\\\\\\n          form,\\\\\\\\n          isEditable: isActive,\\\\\\\\n          schema,\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n      {isActive && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-end gap-3 mt-auto\\\\\\\\\\\\\\\">\\\\\\\\n          {actionsAdditional ? (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"me-auto\\\\\\\\\\\\\\\">{actionsAdditional}</div>\\\\\\\\n          ) : null}\\\\\\\\n\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0\\\\\\\\\\\\\\\" },\\\\\\\\n              label: cancelLabel || \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onCancelClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: classNames.submit || \\\\\\\\\\\\\\\"btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n              disabled: !form.hasUnsubmittedChanges || !isFormValid,\\\\\\\\n              icon: submitIcon || {\\\\\\\\n                type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                variant: \\\\\\\\\\\\\\\"bi-check-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n              },\\\\\\\\n              label: submitLabel || \\\\\\\\\\\\\\\"Submit\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onSubmitClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn Configurator(props);\\\\\\\\n\"}, \"devhub.entity.addon.blog.editor.content\": {\"\": \"const { Card } =\\\\\\\\n  VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blog.Card\\\\\\\\\\\\\\\") ||\\\\\\\\n  (() => <></>);\\\\\\\\nconst { Page } =\\\\\\\\n  VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blog.Page\\\\\\\\\\\\\\\") ||\\\\\\\\n  (() => <></>);\\\\\\\\n\\\\\\\\nconst categories = [\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Guide\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"guide\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"News\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"news\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"reference\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst selectOptions = useMemo(\\\\\\\\n  () =>\\\\\\\\n    categories.map((it) => ({\\\\\\\\n      label: it.label,\\\\\\\\n      value: it.value,\\\\\\\\n    })),\\\\\\\\n  [categories]\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Banner = styled.div`\\\\\\\\n  border-radius: var(--bs-border-radius-xl) !important;\\\\\\\\n  height: 100%;\\\\\\\\n\\\\\\\\n  & > div :not(.btn) {\\\\\\\\n    position: absolute;\\\\\\\\n    display: none;\\\\\\\\n    margin: 0 !important;\\\\\\\\n    width: 0 !important;\\\\\\\\n    height: 0 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    padding: 0.5rem 0.75rem !important;\\\\\\\\n    min-height: 32;\\\\\\\\n    line-height: 1;\\\\\\\\n\\\\\\\\n    border: none;\\\\\\\\n    border-radius: 50px;\\\\\\\\n    --bs-btn-color: #ffffff;\\\\\\\\n    --bs-btn-bg: #087990;\\\\\\\\n    --bs-btn-border-color: #087990;\\\\\\\\n    --bs-btn-hover-color: #ffffff;\\\\\\\\n    --bs-btn-hover-bg: #055160;\\\\\\\\n    --bs-btn-hover-border-color: #055160;\\\\\\\\n    --bs-btn-focus-shadow-rgb: 49, 132, 253;\\\\\\\\n    --bs-btn-active-color: #ffffff;\\\\\\\\n    --bs-btn-active-bg: #055160;\\\\\\\\n    --bs-btn-active-border-color: #055160;\\\\\\\\n    --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\\\\\\\\n    opacity: 0.8;\\\\\\\\n\\\\\\\\n    &:hover {\\\\\\\\n      opacity: 1;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst { data, handle, onSubmit } = props;\\\\\\\\n\\\\\\\\nconst initialData = data;\\\\\\\\n\\\\\\\\nconst [content, setContent] = useState(initialData.content || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [title, setTitle] = useState(initialData.title || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [subtitle, setSubtitle] = useState(initialData.subtitle || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [description, setDescription] = useState(initialData.description || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [author, setAuthor] = useState(initialData.author || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [previewMode, setPreviewMode] = useState(\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\"); // \\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\" or \\\\\\\\\\\\\\\"page\\\\\\\\\\\\\\\"\\\\\\\\nconst [date, setDate] = useState(initialData.date || new Date());\\\\\\\\nconst [category, setCategory] = useState(\\\\\\\\\\\\\\\"guide\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  margin: 0 auto;\\\\\\\\n  padding: 20px;\\\\\\\\n  text-align: left;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst hasDataChanged = () => {\\\\\\\\n  return (\\\\\\\\n    content !== initialData.content ||\\\\\\\\n    title !== initialData.title ||\\\\\\\\n    author !== initialData.author ||\\\\\\\\n    subtitle !== initialData.subtitle ||\\\\\\\\n    description !== initialData.description ||\\\\\\\\n    date !== initialData.date ||\\\\\\\\n    category !== initialData.category\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handlePublish = () => {\\\\\\\\n  onSubmit &&\\\\\\\\n    onSubmit(\\\\\\\\n      {\\\\\\\\n        id: data.id || undefined,\\\\\\\\n        title,\\\\\\\\n        subtitle,\\\\\\\\n        description,\\\\\\\\n        date,\\\\\\\\n        content,\\\\\\\\n        author,\\\\\\\\n        category,\\\\\\\\n        community: handle,\\\\\\\\n      },\\\\\\\\n      data.id !== undefined\\\\\\\\n    );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction Preview() {\\\\\\\\n  switch (previewMode) {\\\\\\\\n    case \\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Card\\\\\\\\n          data={{\\\\\\\\n            title,\\\\\\\\n            subtitle,\\\\\\\\n            description,\\\\\\\\n            date,\\\\\\\\n            content,\\\\\\\\n            author,\\\\\\\\n            category,\\\\\\\\n            community: handle,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"page\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Page\\\\\\\\n          data={{\\\\\\\\n            title,\\\\\\\\n            subtitle,\\\\\\\\n            description,\\\\\\\\n            date,\\\\\\\\n            content,\\\\\\\\n            author,\\\\\\\\n            category,\\\\\\\\n            community: handle,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <ul className=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"editPreviewTabs\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"tablist\\\\\\\\\\\\\\\">\\\\\\\\n      <li className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"nav-link active\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"edit-tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-target=\\\\\\\\\\\\\\\"#edit\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          aria-controls=\\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\"\\\\\\\\n          aria-selected=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          Edit\\\\\\\\n        </button>\\\\\\\\n      </li>\\\\\\\\n      <li className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"nav-link\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"preview-tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-target=\\\\\\\\\\\\\\\"#preview\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n          aria-controls=\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\"\\\\\\\\n          aria-selected=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          Preview\\\\\\\\n        </button>\\\\\\\\n      </li>\\\\\\\\n    </ul>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"tab-content\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"editPreviewTabsContent\\\\\\\\\\\\\\\">\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"tab-pane show active p-4\\\\\\\\\\\\\\\"\\\\\\\\n        id=\\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\"\\\\\\\\n        role=\\\\\\\\\\\\\\\"tabpanel\\\\\\\\\\\\\\\"\\\\\\\\n        aria-labelledby=\\\\\\\\\\\\\\\"edit-tab\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blog.editor.form\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            title,\\\\\\\\n            setTitle,\\\\\\\\n            subtitle,\\\\\\\\n            setSubtitle,\\\\\\\\n            options: selectOptions,\\\\\\\\n            category,\\\\\\\\n            setCategory,\\\\\\\\n            description,\\\\\\\\n            setDescription,\\\\\\\\n            author,\\\\\\\\n            setAuthor,\\\\\\\\n            date,\\\\\\\\n            setDate,\\\\\\\\n            content,\\\\\\\\n            setContent,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-end gap-3 mt-4\\\\\\\\\\\\\\\"}\\\\\\\\n        >\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n              disabled: !hasDataChanged(),\\\\\\\\n              icon: {\\\\\\\\n                type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                variant: \\\\\\\\\\\\\\\"bi-check-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n              },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Publish\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: handlePublish,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"tab-pane\\\\\\\\\\\\\\\"\\\\\\\\n        id=\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\"\\\\\\\\n        role=\\\\\\\\\\\\\\\"tabpanel\\\\\\\\\\\\\\\"\\\\\\\\n        aria-labelledby=\\\\\\\\\\\\\\\"preview-tab\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\" }}\\\\\\\\n      >\\\\\\\\n        <div style={{ position: \\\\\\\\\\\\\\\"absolute\\\\\\\\\\\\\\\", top: 10, right: 0 }}>\\\\\\\\n          <Widget\\\\\\\\n            // LEGACY\\\\\\\\n            src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.button-switch\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              currentValue: previewMode,\\\\\\\\n              key: \\\\\\\\\\\\\\\"previewMode\\\\\\\\\\\\\\\",\\\\\\\\n              onChange: (e) => setPreviewMode(e.target.value),\\\\\\\\n              options: [\\\\\\\\n                { label: \\\\\\\\\\\\\\\"Card\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\" },\\\\\\\\n                { label: \\\\\\\\\\\\\\\"Page\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"page\\\\\\\\\\\\\\\" },\\\\\\\\n              ],\\\\\\\\n\\\\\\\\n              title: \\\\\\\\\\\\\\\"Preview mode selection\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"w-100 h-100 p-4\\\\\\\\\\\\\\\">\\\\\\\\n          <Preview />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.github.Configurator\": {\"\": \"// THIS IS A WORK IN PROGRESS.\\\\\\\\n// The code for the configurator and viewer is very intertwined\\\\\\\\n// and there is constant \\\\\\\\\\\\\\\"negative affirmative\\\\\\\\\\\\\\\" prop drilling happening, making it hard to follow\\\\\\\\nconst { data, onSubmit, permissions } = props;\\\\\\\\n\\\\\\\\nconst Struct = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.struct\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!Struct) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst defaultFieldUpdate = ({\\\\\\\\n  input,\\\\\\\\n  lastKnownValue,\\\\\\\\n  params: { arrayDelimiter },\\\\\\\\n}) => {\\\\\\\\n  switch (typeof input) {\\\\\\\\n    case \\\\\\\\\\\\\\\"boolean\\\\\\\\\\\\\\\":\\\\\\\\n      return input;\\\\\\\\n\\\\\\\\n    case \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\": {\\\\\\\\n      if (Array.isArray(input) && typeof lastKnownValue === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n        return input.join(arrayDelimiter ?? \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\");\\\\\\\\n      } else {\\\\\\\\n        return Array.isArray(lastKnownValue)\\\\\\\\n          ? [...lastKnownValue, ...input]\\\\\\\\n          : { ...lastKnownValue, ...input };\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    case \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\":\\\\\\\\n      return Array.isArray(lastKnownValue)\\\\\\\\n        ? input.split(arrayDelimiter ?? \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\").map((string) => string.trim())\\\\\\\\n        : input;\\\\\\\\n\\\\\\\\n    default: {\\\\\\\\n      if ((input ?? null) === null) {\\\\\\\\n        switch (typeof lastKnownValue) {\\\\\\\\n          case \\\\\\\\\\\\\\\"boolean\\\\\\\\\\\\\\\":\\\\\\\\n            return !lastKnownValue;\\\\\\\\n\\\\\\\\n          default:\\\\\\\\n            return lastKnownValue;\\\\\\\\n        }\\\\\\\\n      } else return input;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst useForm = ({ initialValues, onUpdate, stateKey, uninitialized }) => {\\\\\\\\n  const initialFormState = {\\\\\\\\n    hasUnsubmittedChanges: false,\\\\\\\\n    values: initialValues ?? {},\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const formState = state[stateKey] ?? null,\\\\\\\\n    isSynced = Struct.isEqual(formState?.values ?? {}, initialFormState.values);\\\\\\\\n\\\\\\\\n  const formReset = () =>\\\\\\\\n    State.update((lastKnownComponentState) => ({\\\\\\\\n      ...lastKnownComponentState,\\\\\\\\n      [stateKey]: initialFormState,\\\\\\\\n      hasUnsubmittedChanges: false,\\\\\\\\n    }));\\\\\\\\n\\\\\\\\n  const formUpdate =\\\\\\\\n    ({ path, via: customFieldUpdate, ...params }) =>\\\\\\\\n    (fieldInput) => {\\\\\\\\n      const updatedValues = Struct.deepFieldUpdate(\\\\\\\\n        formState?.values ?? {},\\\\\\\\n        path, // Pass the path directly\\\\\\\\n        (node) => {\\\\\\\\n          return {\\\\\\\\n            ...node,\\\\\\\\n            // Update the last key in the path\\\\\\\\n            [path[path.length - 1]]:\\\\\\\\n              typeof customFieldUpdate === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\"\\\\\\\\n                ? customFieldUpdate(\\\\\\\\n                    fieldInput?.target?.value ?? fieldInput,\\\\\\\\n                    node[path[path.length - 1]],\\\\\\\\n                    params\\\\\\\\n                  )\\\\\\\\n                : defaultFieldUpdate(\\\\\\\\n                    fieldInput?.target?.value ?? fieldInput,\\\\\\\\n                    node[path[path.length - 1]],\\\\\\\\n                    params\\\\\\\\n                  ),\\\\\\\\n          };\\\\\\\\n        }\\\\\\\\n      );\\\\\\\\n\\\\\\\\n      State.update((lastKnownComponentState) => ({\\\\\\\\n        ...lastKnownComponentState,\\\\\\\\n\\\\\\\\n        [stateKey]: {\\\\\\\\n          hasUnsubmittedChanges: !Struct.isEqual(\\\\\\\\n            updatedValues,\\\\\\\\n            initialFormState.values\\\\\\\\n          ),\\\\\\\\n\\\\\\\\n          values: updatedValues,\\\\\\\\n        },\\\\\\\\n      }));\\\\\\\\n\\\\\\\\n      if (\\\\\\\\n        typeof onUpdate === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\" &&\\\\\\\\n        !Struct.isEqual(updatedValues, initialFormState.values)\\\\\\\\n      ) {\\\\\\\\n        onUpdate(updatedValues);\\\\\\\\n      }\\\\\\\\n    };\\\\\\\\n\\\\\\\\n  if (\\\\\\\\n    !uninitialized &&\\\\\\\\n    (formState === null || (!formState.hasUnsubmittedChanges && !isSynced))\\\\\\\\n  ) {\\\\\\\\n    formReset();\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return {\\\\\\\\n    ...(formState ?? initialFormState),\\\\\\\\n    isSynced,\\\\\\\\n    reset: formReset,\\\\\\\\n    stateKey,\\\\\\\\n    update: formUpdate,\\\\\\\\n  };\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst uuid = () =>\\\\\\\\n  [Date.now().toString(16)]\\\\\\\\n    .concat(\\\\\\\\n      Array.from(\\\\\\\\n        { length: 4 },\\\\\\\\n        () => Math.floor(Math.random() * 0xffffffff) & 0xffffffff\\\\\\\\n      ).map((value) => value.toString(16))\\\\\\\\n    )\\\\\\\\n    .join(\\\\\\\\\\\\\\\"-\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst withUUIDIndex = (data) => {\\\\\\\\n  const id = uuid();\\\\\\\\n\\\\\\\\n  return Object.fromEntries([[id, { ...data, id }]]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst settings = {\\\\\\\\n  maxColumnsNumber: 20,\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst GithubKanbanBoardTicketFeaturesSchema = {\\\\\\\\n  id: { label: \\\\\\\\\\\\\\\"GitHub ID\\\\\\\\\\\\\\\" },\\\\\\\\n  author: { label: \\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\" },\\\\\\\\n  labels: { label: \\\\\\\\\\\\\\\"Labels\\\\\\\\\\\\\\\" },\\\\\\\\n  type: { label: \\\\\\\\\\\\\\\"Type\\\\\\\\\\\\\\\" },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst GithubKanbanBoardTicketTypesSchema = {\\\\\\\\n  Issue: { label: \\\\\\\\\\\\\\\"Issue\\\\\\\\\\\\\\\" },\\\\\\\\n  PullRequest: { label: \\\\\\\\\\\\\\\"Pull Request\\\\\\\\\\\\\\\" },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst GithubKanbanBoardDefaults = {\\\\\\\\n  columns: {},\\\\\\\\n  dataTypesIncluded: { Issue: false, PullRequest: true },\\\\\\\\n  description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  repoURL: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  ticketState: \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\",\\\\\\\\n  title: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n  metadata: {\\\\\\\\n    id: uuid(),\\\\\\\\n    type: \\\\\\\\\\\\\\\"github.kanban_board\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n    ticket: {\\\\\\\\n      type: \\\\\\\\\\\\\\\"github.kanban_ticket\\\\\\\\\\\\\\\",\\\\\\\\n      features: { id: true, author: true, labels: true, type: true },\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst toMigrated = ({ metadata, id, ...restParams }) => ({\\\\\\\\n  metadata: {\\\\\\\\n    ...GithubKanbanBoardDefaults.metadata,\\\\\\\\n    ...metadata,\\\\\\\\n    id: id ?? metadata.id,\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  ...restParams,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst [editingMode, setEditingMode] = useState(\\\\\\\\\\\\\\\"form\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n// This is a workaround because of how the data was decided to be saved.\\\\\\\\nconst dynamicKey = Object.keys(data).find((key) => key !== \\\\\\\\\\\\\\\"metadata\\\\\\\\\\\\\\\");\\\\\\\\ndata = data[dynamicKey];\\\\\\\\n\\\\\\\\nconst form = useForm({\\\\\\\\n  initialValues: Struct.typeMatch(data) ? toMigrated(data) : {},\\\\\\\\n  stateKey: \\\\\\\\\\\\\\\"view\\\\\\\\\\\\\\\",\\\\\\\\n  uninitialized: !Struct.typeMatch(data),\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst newViewInit = () =>\\\\\\\\n  State.update((lastKnownState) => ({\\\\\\\\n    ...lastKnownState,\\\\\\\\n\\\\\\\\n    board: {\\\\\\\\n      hasUnsubmittedChanges: false,\\\\\\\\n      values: GithubKanbanBoardDefaults,\\\\\\\\n    },\\\\\\\\n  }));\\\\\\\\n\\\\\\\\nconst columnsCreateNew = ({ lastKnownValue }) =>\\\\\\\\n  Object.keys(lastKnownValue || {}).length < settings.maxColumnsNumber\\\\\\\\n    ? {\\\\\\\\n        ...(lastKnownValue ?? {}),\\\\\\\\n\\\\\\\\n        ...withUUIDIndex({\\\\\\\\n          description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n          labelSearchTerms: [],\\\\\\\\n          title: \\\\\\\\\\\\\\\"New column\\\\\\\\\\\\\\\",\\\\\\\\n        }),\\\\\\\\n      }\\\\\\\\n    : lastKnownValue;\\\\\\\\n\\\\\\\\nconst columnsDeleteById =\\\\\\\\n  (id) =>\\\\\\\\n  ({ lastKnownValue }) =>\\\\\\\\n    Object.fromEntries(\\\\\\\\n      Object.entries(lastKnownValue).filter(([columnId]) => columnId !== id)\\\\\\\\n    );\\\\\\\\n\\\\\\\\nconst onCancel = () => {\\\\\\\\n  form.reset();\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst onSave = () =>\\\\\\\\n  onSubmit({\\\\\\\\n    kanbanBoards: { [form.values.metadata.id]: form.values },\\\\\\\\n  });\\\\\\\\n\\\\\\\\nfunction Form() {\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-1 flex-column flex-xl-row\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.text-input\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\",\\\\\\\\n              key: `${form.values.metadata.id}-repoURL`,\\\\\\\\n              label: \\\\\\\\\\\\\\\"Repository URL\\\\\\\\\\\\\\\",\\\\\\\\n              onChange: form.update({ path: [\\\\\\\\\\\\\\\"repoURL\\\\\\\\\\\\\\\"] }),\\\\\\\\n              placeholder: \\\\\\\\\\\\\\\"https://github.com/example-org/example-repo\\\\\\\\\\\\\\\",\\\\\\\\n              value: form.values.repoURL,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.text-input\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\",\\\\\\\\n              key: `${form.values.metadata.id}-title`,\\\\\\\\n              label: \\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\",\\\\\\\\n              onChange: form.update({ path: [\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\"] }),\\\\\\\\n              placeholder: \\\\\\\\\\\\\\\"NEAR Protocol NEPs\\\\\\\\\\\\\\\",\\\\\\\\n              value: form.values.title,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.text-input\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            className: \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\",\\\\\\\\n            key: `${form.values.metadata.id}-description`,\\\\\\\\n            label: \\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\",\\\\\\\\n            onChange: form.update({ path: [\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"] }),\\\\\\\\n            placeholder: \\\\\\\\\\\\\\\"Latest NEAR Enhancement Proposals by status.\\\\\\\\\\\\\\\",\\\\\\\\n            value: form.values.description,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-4 flex-row flex-wrap justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.text-input\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            heading: \\\\\\\\\\\\\\\"Ticket types\\\\\\\\\\\\\\\",\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"col-12 col-md-4 h-auto\\\\\\\\\\\\\\\" },\\\\\\\\n            externalState: form.values.dataTypesIncluded,\\\\\\\\n            isActive: true,\\\\\\\\n            isEmbedded: true,\\\\\\\\n            isUnlocked: permissions.can_configure,\\\\\\\\n            onChange: form.update({ path: [\\\\\\\\\\\\\\\"dataTypesIncluded\\\\\\\\\\\\\\\"] }),\\\\\\\\n            schema: GithubKanbanBoardTicketTypesSchema,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n\\\\\\\\n        <div\\\\\\\\n          className={[\\\\\\\\n            \\\\\\\\\\\\\\\"col-12 col-md-3\\\\\\\\\\\\\\\",\\\\\\\\n            \\\\\\\\\\\\\\\"d-flex gap-3 flex-column justify-content-center p-4\\\\\\\\\\\\\\\",\\\\\\\\n          ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n        >\\\\\\\\n          <span\\\\\\\\n            className=\\\\\\\\\\\\\\\"d-inline-flex gap-2\\\\\\\\\\\\\\\"\\\\\\\\n            id={`${form.values.metadata.id}-ticketState`}\\\\\\\\n          >\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-cone-striped\\\\\\\\\\\\\\\" />\\\\\\\\n            <span>Ticket state</span>\\\\\\\\n          </span>\\\\\\\\n\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.button-switch\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              currentValue: form.values.ticketState,\\\\\\\\n              key: \\\\\\\\\\\\\\\"ticketState\\\\\\\\\\\\\\\",\\\\\\\\n              onChange: form.update({ path: [\\\\\\\\\\\\\\\"ticketState\\\\\\\\\\\\\\\"] }),\\\\\\\\n\\\\\\\\n              options: [\\\\\\\\n                { label: \\\\\\\\\\\\\\\"All\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\" },\\\\\\\\n                { label: \\\\\\\\\\\\\\\"Open\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"open\\\\\\\\\\\\\\\" },\\\\\\\\n                { label: \\\\\\\\\\\\\\\"Closed\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"closed\\\\\\\\\\\\\\\" },\\\\\\\\n              ],\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.organism.configurator\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            heading: \\\\\\\\\\\\\\\"Card fields\\\\\\\\\\\\\\\",\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"col-12 col-md-4 h-auto\\\\\\\\\\\\\\\" },\\\\\\\\n            externalState: form.values.metadata.ticket.features,\\\\\\\\n            isActive: true,\\\\\\\\n            isEmbedded: true,\\\\\\\\n            isUnlocked: permissions.can_configure,\\\\\\\\n            onChange: form.update({ path: [\\\\\\\\\\\\\\\"metadata\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"ticket\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"features\\\\\\\\\\\\\\\"] }),\\\\\\\\n            schema: GithubKanbanBoardTicketFeaturesSchema,\\\\\\\\n            nearDevGovGigsWidgetsAccountId: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n            nearDevGovGigsContractAccountId: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"d-inline-flex gap-2 m-0\\\\\\\\\\\\\\\">\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-list-task\\\\\\\\\\\\\\\" />\\\\\\\\n          <span>{`Columns ( max. ${settings.maxColumnsNumber} )`}</span>\\\\\\\\n        </span>\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n        {Object.values(form.values.columns ?? {}).map(\\\\\\\\n          ({ id, description, labelSearchTerms, title }) => (\\\\\\\\n            <div\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex gap-3 rounded-4 border p-3 w-100 attractable\\\\\\\\\\\\\\\"\\\\\\\\n              key={`column-${id}-configurator`}\\\\\\\\n            >\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 w-100\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.text-input\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                    key: `${form.values.metadata.id}-column-${id}-title`,\\\\\\\\n                    label: \\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\",\\\\\\\\n                    onChange: form.update({ path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\", id, \\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\"] }),\\\\\\\\n                    placeholder: \\\\\\\\\\\\\\\"\\\\\\\\u{1f440} Review\\\\\\\\\\\\\\\",\\\\\\\\n                    value: title,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.text-input\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    format: \\\\\\\\\\\\\\\"comma-separated\\\\\\\\\\\\\\\",\\\\\\\\n                    key: `${form.values.metadata.id}-column-${title}-labelSearchTerms`,\\\\\\\\n\\\\\\\\n                    label: `Search terms for all the labels\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tMUST be presented in included tickets`,\\\\\\\\n\\\\\\\\n                    onChange: form.update({\\\\\\\\n                      path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\", id, \\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\"],\\\\\\\\n                    }),\\\\\\\\n\\\\\\\\n                    placeholder: \\\\\\\\\\\\\\\"WG-, draft, review, proposal, ...\\\\\\\\\\\\\\\",\\\\\\\\n                    value: labelSearchTerms.join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.text-input\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                    key: `${form.values.metadata.id}-column-${id}-description`,\\\\\\\\n                    label: \\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n                    onChange: form.update({\\\\\\\\n                      path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\", id, \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n                    }),\\\\\\\\n\\\\\\\\n                    placeholder:\\\\\\\\n                      \\\\\\\\\\\\\\\"NEPs that need a review by Subject Matter Experts.\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n                    value: description,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 border-start p-3 pe-0\\\\\\\\\\\\\\\"\\\\\\\\n                style={{ marginTop: -16, marginBottom: -16 }}\\\\\\\\n              >\\\\\\\\n                <button\\\\\\\\n                  className=\\\\\\\\\\\\\\\"btn btn-outline-danger\\\\\\\\\\\\\\\"\\\\\\\\n                  onClick={form.update({\\\\\\\\n                    path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\"],\\\\\\\\n                    via: columnsDeleteById(id),\\\\\\\\n                  })}\\\\\\\\n                  title=\\\\\\\\\\\\\\\"Delete column\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  <i className=\\\\\\\\\\\\\\\"bi bi-trash-fill\\\\\\\\\\\\\\\" />\\\\\\\\n                </button>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )\\\\\\\\n        )}\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-3 justify-content-end w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.button\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              classNames: {\\\\\\\\n                root: \\\\\\\\\\\\\\\"d-flex btn btn-outline-danger shadow-none border-0\\\\\\\\\\\\\\\",\\\\\\\\n              },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onCancel,\\\\\\\\n              nearDevGovGigsWidgetsAccountId: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.button\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n              disabled: form.isSynced,\\\\\\\\n\\\\\\\\n              icon: {\\\\\\\\n                type: \\\\\\\\\\\\\\\"svg_icon\\\\\\\\\\\\\\\",\\\\\\\\n                variant: \\\\\\\\\\\\\\\"floppy_drive\\\\\\\\\\\\\\\",\\\\\\\\n                width: 14,\\\\\\\\n                height: 14,\\\\\\\\n              },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onSave,\\\\\\\\n              nearDevGovGigsWidgetsAccountId: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div\\\\\\\\n    className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ maxWidth: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\", marginTop: \\\\\\\\\\\\\\\"40px\\\\\\\\\\\\\\\" }}\\\\\\\\n  >\\\\\\\\n    <div className={\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\"}>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-between gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n        <h5 className=\\\\\\\\\\\\\\\"h5 d-inline-flex gap-2 m-0\\\\\\\\\\\\\\\">\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-gear-wide-connected\\\\\\\\\\\\\\\" />\\\\\\\\n          <span>GitHub board configuration</span>\\\\\\\\n        </h5>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.button-switch\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            currentValue: editingMode,\\\\\\\\n            key: \\\\\\\\\\\\\\\"editingMode\\\\\\\\\\\\\\\",\\\\\\\\n            onChange: (e) => setEditingMode(e.target.value),\\\\\\\\n\\\\\\\\n            options: [\\\\\\\\n              { label: \\\\\\\\\\\\\\\"Form\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"form\\\\\\\\\\\\\\\" },\\\\\\\\n              { label: \\\\\\\\\\\\\\\"JSON\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"JSON\\\\\\\\\\\\\\\" },\\\\\\\\n            ],\\\\\\\\n\\\\\\\\n            title: \\\\\\\\\\\\\\\"Editing mode selection\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n      {editingMode === \\\\\\\\\\\\\\\"JSON\\\\\\\\\\\\\\\" ? (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-grow-1 border-0 bg-transparent w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <textarea\\\\\\\\n            className=\\\\\\\\\\\\\\\"form-control\\\\\\\\\\\\\\\"\\\\\\\\n            rows=\\\\\\\\\\\\\\\"12\\\\\\\\\\\\\\\"\\\\\\\\n            type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n            value={JSON.stringify(form.values ?? {}, null, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\")}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      ) : (\\\\\\\\n        <Form />\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n    {form.values ? (\\\\\\\\n      <Widget\\\\\\\\n        src={`devgovgigs.near/widget/gigs-board.entity.workspace.view.${form.values.metadata.type}`}\\\\\\\\n        props={{\\\\\\\\n          ...form.values,\\\\\\\\n\\\\\\\\n          configurationControls: [\\\\\\\\n            {\\\\\\\\n              label: \\\\\\\\\\\\\\\"New column\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n              disabled:\\\\\\\\n                Object.keys(form.values.columns || {}).length >=\\\\\\\\n                settings.maxColumnsNumber,\\\\\\\\n\\\\\\\\n              icon: { type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\", variant: \\\\\\\\\\\\\\\"bi-plus-lg\\\\\\\\\\\\\\\" },\\\\\\\\n\\\\\\\\n              onClick: form.update({\\\\\\\\n                path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\"],\\\\\\\\n                via: columnsCreateNew,\\\\\\\\n              }),\\\\\\\\n            },\\\\\\\\n          ],\\\\\\\\n\\\\\\\\n          isSynced: form.isSynced,\\\\\\\\n          link,\\\\\\\\n          permissions,\\\\\\\\n          nearDevGovGigsWidgetsAccountId: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n          nearDevGovGigsContractAccountId: \\\\\\\\\\\\\\\"${REPL_DEVHUB_CONTRACT\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    ) : (\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center justify-content-center gap-4\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ height: 384 }}\\\\\\\\n      >\\\\\\\\n        <h5 className=\\\\\\\\\\\\\\\"h5 d-inline-flex gap-2 m-0\\\\\\\\\\\\\\\">\\\\\\\\n          This community doesn\\\\\\\\\\\\'t have a GitHub board\\\\\\\\n        </h5>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.button\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            icon: { type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\", variant: \\\\\\\\\\\\\\\"bi-github\\\\\\\\\\\\\\\" },\\\\\\\\n            isHidden: !permissions.can_configure,\\\\\\\\n            label: \\\\\\\\\\\\\\\"Create GitHub board\\\\\\\\\\\\\\\",\\\\\\\\n            onClick: newViewInit,\\\\\\\\n            nearDevGovGigsWidgetsAccountId: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.telegram.Configurator\": {\"\": \"const { Tile } =\\\\\\\\n  VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Tile\\\\\\\\\\\\\\\") ||\\\\\\\\n  (() => <></>);\\\\\\\\n\\\\\\\\nconst { data, onSubmit } = props;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Item = styled.div`\\\\\\\\n  padding: 10px;\\\\\\\\n  margin: 5px;\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  flex-direction: row;\\\\\\\\n  gap: 10px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst EditableField = styled.input`\\\\\\\\n  flex: 1;\\\\\\\\n`;\\\\\\\\nconst initialData = data.handles;\\\\\\\\nconst [handles, setHandles] = useState(initialData || []);\\\\\\\\nconst [newItem, setNewItem] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst handleAddItem = () => {\\\\\\\\n  if (newItem) {\\\\\\\\n    setHandles([...handles, newItem]);\\\\\\\\n    setNewItem(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleDeleteItem = (index) => {\\\\\\\\n  const updatedData = [...handles];\\\\\\\\n  updatedData.splice(index, 1);\\\\\\\\n  setHandles(updatedData);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleSubmit = () => {\\\\\\\\n  onSubmit({ handles: handles.map((handle) => handle.trim()) });\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Tile className=\\\\\\\\\\\\\\\"p-3\\\\\\\\\\\\\\\">\\\\\\\\n    <Container>\\\\\\\\n      {handles.map((item, index) => (\\\\\\\\n        <Item key={index}>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              // TODO: LEGACY.\\\\\\\\n              src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.text-input\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                value: item,\\\\\\\\n                placeholder: \\\\\\\\\\\\\\\"Telegram Handle\\\\\\\\\\\\\\\",\\\\\\\\n                inputProps: {\\\\\\\\n                  prefix: \\\\\\\\\\\\\\\"https://t.me/\\\\\\\\\\\\\\\",\\\\\\\\n                  disabled: true,\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n          <button\\\\\\\\n            className=\\\\\\\\\\\\\\\"btn btn-outline-danger\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => handleDeleteItem(index)}\\\\\\\\n          >\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-trash-fill\\\\\\\\\\\\\\\" />\\\\\\\\n          </button>\\\\\\\\n        </Item>\\\\\\\\n      ))}\\\\\\\\n      <Item>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            // TODO: LEGACY.\\\\\\\\n            src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.molecule.text-input\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n              onChange: (e) => setNewItem(e.target.value),\\\\\\\\n              value: newItem,\\\\\\\\n              placeholder: \\\\\\\\\\\\\\\"Telegram Handle\\\\\\\\\\\\\\\",\\\\\\\\n              inputProps: {\\\\\\\\n                prefix: \\\\\\\\\\\\\\\"https://t.me/\\\\\\\\\\\\\\\",\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <button\\\\\\\\n          className=\\\\\\\\\\\\\\\"btn btn-success\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={handleAddItem}\\\\\\\\n          disabled={newItem === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-plus\\\\\\\\\\\\\\\" />\\\\\\\\n        </button>\\\\\\\\n      </Item>\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-end gap-3 mt-4\\\\\\\\\\\\\\\"}\\\\\\\\n      >\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n            disabled: initialData === handles,\\\\\\\\n            icon: {\\\\\\\\n              type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n              variant: \\\\\\\\\\\\\\\"bi-check-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n            },\\\\\\\\n            label: \\\\\\\\\\\\\\\"Submit\\\\\\\\\\\\\\\",\\\\\\\\n            onClick: handleSubmit,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  </Tile>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.2177268401753e+21
    }
  },
  {
    "id": "1336526885",
    "receipt_id": "9TC2uzwnr1AK1rFo7EvgmFQdcGvygGG8YnmeoksvhbSw",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9zFBk5w5GDNoTDdfQMXjAKcm6NA6fzihL4Z18cP6g4kS",
      "block_height": 104857482,
      "block_timestamp": 1699034839797309400
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "8eKQynFdEKkA1m9PWHRquaPvSmqy8L1jQgHnQoCnh1Zn",
    "included_in_block_hash": "9ketZ3hz6BnrxGKQEoBawH1zWFWFJqX25otqr5oQb9Ev",
    "block_timestamp": "1699034837488554125",
    "block": {
      "block_height": 104857480
    },
    "receipt_conversion_tokens_burnt": "263621390363800000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8620568634721963e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.2177268401753e+21
    }
  },
  {
    "id": "1336544651",
    "receipt_id": "XHmEB14UWsAkzz7HqydRqEZwGcxzCGPo8bNicuUPt5e",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "CbDHoycDYykJ58m2wu6g2majnTBoJvPUt9F8oPgtGDAT",
      "block_height": 104858173,
      "block_timestamp": 1699035599451242800
    },
    "receipt_outcome": {
      "gas_burnt": 5543923222325,
      "tokens_burnt": 554392322232500000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "9dvxN31NpDfSqSTEje7YxfFWM719rWXSjBJxvepb2Jja",
    "included_in_block_hash": "7DCK827doY4UfF2ZUanqUfbno8H5nsBjw8mqJSiJM9ce",
    "block_timestamp": "1699035598374143244",
    "block": {
      "block_height": 104858172
    },
    "receipt_conversion_tokens_burnt": "243288924534800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 1,
        "fee": 554392322232500000000,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.entity.community.Spawner\": {\"\": \"const { typeMatch } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.struct\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!typeMatch) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { data, onSubmit, onCancel } = props;\\\\\\\\n\\\\\\\\nconst CommunityInputsPartialSchema = {\\\\\\\\n  handle: {\\\\\\\\n    inputProps: {\\\\\\\\n      min: 2,\\\\\\\\n      max: 40,\\\\\\\\n\\\\\\\\n      placeholder:\\\\\\\\n        \\\\\\\\\\\\\\\"Choose unique URL handle for your community. Example: zero-knowledge.\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n      required: true,\\\\\\\\n    },\\\\\\\\n\\\\\\\\n    label: \\\\\\\\\\\\\\\"URL handle\\\\\\\\\\\\\\\",\\\\\\\\n    order: 3,\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  name: {\\\\\\\\n    inputProps: {\\\\\\\\n      min: 2,\\\\\\\\n      max: 30,\\\\\\\\n      placeholder: \\\\\\\\\\\\\\\"Community name.\\\\\\\\\\\\\\\",\\\\\\\\n      required: true,\\\\\\\\n    },\\\\\\\\n\\\\\\\\n    label: \\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\",\\\\\\\\n    order: 1,\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  tag: {\\\\\\\\n    inputProps: {\\\\\\\\n      min: 2,\\\\\\\\n      max: 30,\\\\\\\\n\\\\\\\\n      placeholder:\\\\\\\\n        \\\\\\\\\\\\\\\"Any posts with this tag will show up in your community feed.\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n      required: true,\\\\\\\\n    },\\\\\\\\n\\\\\\\\n    label: \\\\\\\\\\\\\\\"Tag\\\\\\\\\\\\\\\",\\\\\\\\n    order: 4,\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  description: {\\\\\\\\n    inputProps: {\\\\\\\\n      min: 2,\\\\\\\\n      max: 60,\\\\\\\\n\\\\\\\\n      placeholder:\\\\\\\\n        \\\\\\\\\\\\\\\"Describe your community in one short sentence that will appear in the communities discovery page.\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n      required: true,\\\\\\\\n    },\\\\\\\\n\\\\\\\\n    label: \\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\",\\\\\\\\n    order: 2,\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst communityInputsValidator = (formValues) =>\\\\\\\\n  typeMatch(formValues) &&\\\\\\\\n  Object.values(formValues).every(\\\\\\\\n    (value) => typeof value === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" && value.length > 0\\\\\\\\n  );\\\\\\\\n\\\\\\\\nconst CommunityInputsDefaults = {\\\\\\\\n  handle: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  name: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  tag: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Widget\\\\\\\\n    src={\\\\\\\\n      \\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.organism.configurator\\\\\\\\\\\\\\\"\\\\\\\\n    }\\\\\\\\n    props={{\\\\\\\\n      heading: \\\\\\\\\\\\\\\"Community information\\\\\\\\\\\\\\\",\\\\\\\\n      externalState: CommunityInputsDefaults,\\\\\\\\n      fullWidth: true,\\\\\\\\n      isActive: true,\\\\\\\\n      isUnlocked: true,\\\\\\\\n      isValid: communityInputsValidator,\\\\\\\\n      onSubmit: onSubmit,\\\\\\\\n      schema: CommunityInputsPartialSchema,\\\\\\\\n      submitIcon: {\\\\\\\\n        type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n        variant: \\\\\\\\\\\\\\\"bi-rocket-takeoff-fill\\\\\\\\\\\\\\\",\\\\\\\\n      },\\\\\\\\n      submitLabel: \\\\\\\\\\\\\\\"Launch\\\\\\\\\\\\\\\",\\\\\\\\n      onCancel: onCancel,\\\\\\\\n      nearDevGovGigsWidgetsAccountId: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 797681246767300000000
    }
  },
  {
    "id": "1336544674",
    "receipt_id": "975ukUW3SRvUDJBwAoXCtTGZYL1vrndTVypTMJxzJgWE",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "AVDA9jLt7ZEsJmA72HZokNpgLjEH7PJouBGXvH1xuzUi",
      "block_height": 104858174,
      "block_timestamp": 1699035600159478300
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "9dvxN31NpDfSqSTEje7YxfFWM719rWXSjBJxvepb2Jja",
    "included_in_block_hash": "7DCK827doY4UfF2ZUanqUfbno8H5nsBjw8mqJSiJM9ce",
    "block_timestamp": "1699035598374143244",
    "block": {
      "block_height": 104858172
    },
    "receipt_conversion_tokens_burnt": "243288924534800000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8847831339500256e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 797681246767300000000
    }
  },
  {
    "id": "1336566635",
    "receipt_id": "FAHFzNpbj6atuwMrkndnCn6HJyNMVDCEN4V9UH3Sz5BZ",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "Beqd2rifGKNiuGKFh9cYuhFSFXJxo7MDpys5cd2GDavP",
      "block_height": 104859027,
      "block_timestamp": 1699036536331049500
    },
    "receipt_outcome": {
      "gas_burnt": 13870038170314,
      "tokens_burnt": 1.3870038170314e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "F2y56VgePXARLXo4DasnXsjFiGXVAaV2H4J2137vpov6",
    "included_in_block_hash": "J9LiofEz1PGRzTW7fmC3VbvTXArJmHhSJrTa2cJLiw6",
    "block_timestamp": "1699036535293247831",
    "block": {
      "block_height": 104859026
    },
    "receipt_conversion_tokens_burnt": "245229938840200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 1,
        "fee": 1.3870038170314e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"app\": {\"\": \"/**\\\\\\\\n * This is the main entry point for the DevHub application.\\\\\\\\n * Page route gets passed in through params, along with all other page props.\\\\\\\\n */\\\\\\\\n\\\\\\\\nconst { page, ...passProps } = props;\\\\\\\\n\\\\\\\\n// Import our modules\\\\\\\\nconst { AppLayout } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.templates.AppLayout\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!AppLayout) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\n// CSS styles to be used across the app.\\\\\\\\n// Define fonts here, as well as any other global styles.\\\\\\\\nconst Theme = styled.div`\\\\\\\\n  a {\\\\\\\\n    color: inherit;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .attractable {\\\\\\\\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\\\\\\\\n    transition: box-shadow 0.6s;\\\\\\\\n\\\\\\\\n    &:hover {\\\\\\\\n      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (!page) {\\\\\\\\n  // If no page is specified, we default to the feed page TEMP\\\\\\\\n  page = \\\\\\\\\\\\\\\"home\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\n// This is our navigation, rendering the page based on the page parameter\\\\\\\\nfunction Page() {\\\\\\\\n  const routes = page.split(\\\\\\\\\\\\\\\".\\\\\\\\\\\\\\\");\\\\\\\\n  switch (routes[0]) {\\\\\\\\n    case \\\\\\\\\\\\\\\"home\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.home\\\\\\\\\\\\\\\"\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    // ?page=communities\\\\\\\\n    case \\\\\\\\\\\\\\\"communities\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.communities\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    // ?page=community\\\\\\\\n    case \\\\\\\\\\\\\\\"community\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        // Considering to consolsidate this into a single widget,\\\\\\\\n        // where each level handles its own routing.\\\\\\\\n        // Modularizing a page just like we do with addons\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Provider\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            ...passProps,\\\\\\\\n            Children: (p) => {\\\\\\\\n              // passing props from the Provider into the Children\\\\\\\\n              switch (routes[1]) {\\\\\\\\n                // ?page=community.configuration\\\\\\\\n                case \\\\\\\\\\\\\\\"configuration\\\\\\\\\\\\\\\": {\\\\\\\\n                  return (\\\\\\\\n                    <Widget\\\\\\\\n                      src={\\\\\\\\n                        \\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.community.configuration\\\\\\\\\\\\\\\"\\\\\\\\n                      }\\\\\\\\n                      props={{\\\\\\\\n                        ...passProps,\\\\\\\\n                        ...p,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  );\\\\\\\\n                }\\\\\\\\n                // ?page=community\\\\\\\\n                default: {\\\\\\\\n                  return (\\\\\\\\n                    <Widget\\\\\\\\n                      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.community.index\\\\\\\\\\\\\\\"}\\\\\\\\n                      props={{\\\\\\\\n                        ...passProps,\\\\\\\\n                        ...p,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  );\\\\\\\\n                }\\\\\\\\n              }\\\\\\\\n            },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    // ?page=feed\\\\\\\\n    case \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.feed\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    // ?page=create\\\\\\\\n    case \\\\\\\\\\\\\\\"create\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.create\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    // ?page=about\\\\\\\\n    case \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.about\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"contribute\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.contribute\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.profile\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    // ?page=blog\\\\\\\\n    case \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.blog\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n    case \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\": {\\\\\\\\n      return (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.post\\\\\\\\\\\\\\\"}\\\\\\\\n          props={passProps}\\\\\\\\n        />\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    default: {\\\\\\\\n      // TODO: 404 page\\\\\\\\n      return <p>404</p>;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Theme>\\\\\\\\n    <AppLayout page={page}>\\\\\\\\n      <Page />\\\\\\\\n    </AppLayout>\\\\\\\\n  </Theme>\\\\\\\\n);\\\\\\\\n\", \"metadata\": {\"name\": \"DevHub\", \"tags\": {\"app\": \"\", \"devhub\": \"\", \"communities\": \"\", \"developer-governance\": \"\"}, \"image\": {\"ipfs_cid\": \"bafkreido4srg4aj7l7yg2tz22nbu3ytdidjczdvottfr5ek6gqorwg6v74\"}, \"description\": \"DevHub brings together individuals, projects, and organizations to build a decentralized NEAR developer ecosystem. We provide social structure and tools to fuel innovation, collaboration, and community within the NEAR ecosystem. Whether you\\\\\\\\u{2019}re a blockchain developer or advocate for the open web, DevHub is your gateway to making a meaningful impact on NEAR and beyond.\"}}, \"devhub.page.about\": {\"\": \"const PageHeader = styled.h2`\\\\\\\\n  color: #04a46e;\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.24px;\\\\\\\\n\\\\\\\\n  width: 100%;\\\\\\\\n  padding: 1rem 3.125rem;\\\\\\\\n  margin-left: auto;\\\\\\\\n  //background: #fff;\\\\\\\\n\\\\\\\\n  margin-top: 1.5rem;\\\\\\\\n  margin-bottom: 1.5rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 786px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Section = styled.div`\\\\\\\\n  padding: 1.5rem 8rem;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n\\\\\\\\n  gap: 2rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 786px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  h2 {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 2rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 2rem; /* 55.556% */\\\\\\\\n\\\\\\\\n    margin: 1rem;\\\\\\\\n    margin-left: 0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.25rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 120%; /* 28.8px */\\\\\\\\n    margin-bottom: 1rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  h3 {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.5rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 120%;\\\\\\\\n\\\\\\\\n    margin-top: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Widget\\\\\\\\n      src={`devhub.near/widget/devhub.components.island.banner`}\\\\\\\\n      props={{\\\\\\\\n        title: (\\\\\\\\n          <>\\\\\\\\n            We are building <br />\\\\\\\\n            <span style={{ color: \\\\\\\\\\\\\\\"#151515\\\\\\\\\\\\\\\" }}>\\\\\\\\n              a decentralized community\\\\\\\\n            </span>{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <br />\\\\\\\\n            for NEAR Developers.\\\\\\\\n          </>\\\\\\\\n        ),\\\\\\\\n        imageLink:\\\\\\\\n          \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreigtpjmgt3aphd3plbcremtvazeo7qsjvguw44m74zthyxbhj4toqe\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <PageHeader>About /dev/hub</PageHeader>\\\\\\\\n    <Section>\\\\\\\\n      <h2>\\\\\\\\n        What is <span style={{ color: \\\\\\\\\\\\\\\"#00EC97\\\\\\\\\\\\\\\" }}>near</span>/dev/hub?\\\\\\\\n      </h2>\\\\\\\\n\\\\\\\\n      <div>\\\\\\\\n        <p>\\\\\\\\n          DevHub brings together individuals, projects, and organizations to\\\\\\\\n          build a decentralized NEAR developer ecosystem. We provide social\\\\\\\\n          structure and tools to fuel innovation, collaboration, and community\\\\\\\\n          within the NEAR ecosystem. Whether you\\\\\\\\u{2019}re a blockchain developer or\\\\\\\\n          advocate for the open web, DevHub is your gateway to making a\\\\\\\\n          meaningful impact on NEAR and beyond.\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Mission</h3>\\\\\\\\n        <p>\\\\\\\\n          Build a self-sufficient developer community to enable a thriving NEAR\\\\\\\\n          ecosystem.\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Values</h3>\\\\\\\\n        <p>\\\\\\\\n          <ul>\\\\\\\\n            <li>\\\\\\\\n              <b>Decentralized</b>: We are building together.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Transparent</b>: All decision making and communication is open.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Self-sufficient</b>: We do not critically depend on any single\\\\\\\\n              entity.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Robust</b>: Any role or team can be duplicated or replaced.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>High-velocity</b>: We need to move faster than classic OSS.\\\\\\\\n            </li>\\\\\\\\n          </ul>\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Scope</h3>\\\\\\\\n        <p>\\\\\\\\n          DevHub covers a wide range of areas to support the NEAR developer\\\\\\\\n          ecosystem, including:\\\\\\\\n          <ul>\\\\\\\\n            <li>\\\\\\\\n              <b>Developer Tooling</b>: Contributing code to the NEAR Platform\\\\\\\\n              (blockchain and devtools) and facilitating technical decisions\\\\\\\\n              with recognized experts based on the needs of the community and\\\\\\\\n              ecosystem.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Developer Relations</b>: Engaging with the community across\\\\\\\\n              various social channels, gathering feedback, and improving\\\\\\\\n              documentation.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Deep-Tech Awareness</b>: Working with marketing partners to\\\\\\\\n              create awareness on interesting projects and technology areas.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Events and Hackathons</b>: Organizing events and empowering\\\\\\\\n              community leaders with resources to grow their local communities.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Education</b>: Partnering with universities across the globe to\\\\\\\\n              support students and scholars in exploring Web3 technologies\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Platform</b>: Developing DevHub platform as a product to enable\\\\\\\\n              communities to collaborate and support each other.\\\\\\\\n            </li>\\\\\\\\n          </ul>\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Our Contributors</h3>\\\\\\\\n        <p>\\\\\\\\n          DevHub operates through DevDAO, which provides social structures to\\\\\\\\n          support developers. Within DevDAO, we have a dedicated core team of\\\\\\\\n          moderators and community contributors who work across the key areas\\\\\\\\n          above. We welcome contributions from any community members who want to\\\\\\\\n          join us in building our ecosystem and their own skills!\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Our Platform</h3>\\\\\\\\n        <p>\\\\\\\\n          Our main tool for interfacing is the DevHub Platform, where you can\\\\\\\\n          connect with others, share ideas and solutions, and access resources\\\\\\\\n          and support. You can also find communities working on a variety of\\\\\\\\n          areas, from protocol development to tooling and documentation.\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Join Us in Shaping NEAR\\\\\\\\u{2019}s Future</h3>\\\\\\\\n        <p>\\\\\\\\n          Regardless of your background or where you are on your developer\\\\\\\\n          journey, we\\\\\\\\u{2019}re happy you\\\\\\\\u{2019}re here! We hope you\\\\\\\\u{2019}ll explore, find your\\\\\\\\n          people, and discover paths to contribute that are most gratifying for\\\\\\\\n          you.\\\\\\\\n          <br />\\\\\\\\n          Let\\\\\\\\u{2019}s build the open web together.\\\\\\\\n        </p>\\\\\\\\n      </div>\\\\\\\\n    </Section>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6322337558716e+21
    }
  },
  {
    "id": "1336566685",
    "receipt_id": "ERxXfLyhdhrQ6819CKkdk3hVx1kaTFNUNNpkRDJSG2cq",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3pg4WrP2D6D9kxQnQFyBUFMbhF27XjmhBif6GCVVSmb7",
      "block_height": 104859028,
      "block_timestamp": 1699036537624301800
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "F2y56VgePXARLXo4DasnXsjFiGXVAaV2H4J2137vpov6",
    "included_in_block_hash": "J9LiofEz1PGRzTW7fmC3VbvTXArJmHhSJrTa2cJLiw6",
    "block_timestamp": "1699036535293247831",
    "block": {
      "block_height": 104859026
    },
    "receipt_conversion_tokens_burnt": "245229938840200000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8765783401939548e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6322337558716e+21
    }
  },
  {
    "id": "1336584507",
    "receipt_id": "HvmfSnF5dif5vrc6isdeaxogd8Wv2zTJVCbuQYw75suN",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "AiGoiKErkNQcdJD54gVTkCAxHy6t5D26AR8HcoYTFjhS",
      "block_height": 104859699,
      "block_timestamp": 1699037263734371600
    },
    "receipt_outcome": {
      "gas_burnt": 210284826324,
      "tokens_burnt": 21028482632400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "FZHpeAyxGz3dTVV1BGY19uMF2hMoUjph5nmrMcGcuzUJ",
    "included_in_block_hash": "AiGoiKErkNQcdJD54gVTkCAxHy6t5D26AR8HcoYTFjhS",
    "block_timestamp": "1699037263734371577",
    "block": {
      "block_height": 104859699
    },
    "receipt_conversion_tokens_burnt": "21028482632400000000",
    "actions": [
      {
        "action": "ADD_KEY",
        "method": null,
        "deposit": 0,
        "fee": 21028482632400000000,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 42056965264800000000
    }
  },
  {
    "id": "1336593262",
    "receipt_id": "C38EamBuMGZf5cdUJvaoXtRQBbzubZTeqjA4pcEy3Vi6",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "D9pH42gu38jm1VDVKqxBuGoa7GZHq2akUPJLPJ2m6eKs",
      "block_height": 104860052,
      "block_timestamp": 1699037649046954500
    },
    "receipt_outcome": {
      "gas_burnt": 6691701231741,
      "tokens_burnt": 669170123174100000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "AimrVPJXhxUwQjhv3GbLwdjw2oGpL4tj1aCABqnXHxCf",
    "included_in_block_hash": "3SjN846kxNQpTW3XEyATuHomgNiQL7CZK82d9vkMMDGN",
    "block_timestamp": "1699037647945265215",
    "block": {
      "block_height": 104860051
    },
    "receipt_conversion_tokens_burnt": "244805782160400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 1,
        "fee": 669170123174100000000,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.components.organism.Configurator\": {\"\": \"const Struct = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.struct\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!Struct) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst defaultFieldUpdate = ({\\\\\\\\n  input,\\\\\\\\n  lastKnownValue,\\\\\\\\n  params: { arrayDelimiter },\\\\\\\\n}) => {\\\\\\\\n  switch (typeof input) {\\\\\\\\n    case \\\\\\\\\\\\\\\"boolean\\\\\\\\\\\\\\\":\\\\\\\\n      return input;\\\\\\\\n\\\\\\\\n    case \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\": {\\\\\\\\n      if (Array.isArray(input) && typeof lastKnownValue === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n        return input.join(arrayDelimiter ?? \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\");\\\\\\\\n      } else {\\\\\\\\n        return Array.isArray(lastKnownValue)\\\\\\\\n          ? [...lastKnownValue, ...input]\\\\\\\\n          : { ...lastKnownValue, ...input };\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    case \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\":\\\\\\\\n      return Array.isArray(lastKnownValue)\\\\\\\\n        ? input.split(arrayDelimiter ?? \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\").map((string) => string.trim())\\\\\\\\n        : input;\\\\\\\\n\\\\\\\\n    default: {\\\\\\\\n      if ((input ?? null) === null) {\\\\\\\\n        switch (typeof lastKnownValue) {\\\\\\\\n          case \\\\\\\\\\\\\\\"boolean\\\\\\\\\\\\\\\":\\\\\\\\n            return !lastKnownValue;\\\\\\\\n\\\\\\\\n          default:\\\\\\\\n            return lastKnownValue;\\\\\\\\n        }\\\\\\\\n      } else return input;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst useForm = ({ initialValues, onUpdate, stateKey }) => {\\\\\\\\n  const initialFormState = {\\\\\\\\n    hasUnsubmittedChanges: false,\\\\\\\\n    values: initialValues ?? {},\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const formState = state[stateKey] ?? null;\\\\\\\\n\\\\\\\\n  const formReset = () =>\\\\\\\\n    State.update((lastKnownComponentState) => ({\\\\\\\\n      ...lastKnownComponentState,\\\\\\\\n      [stateKey]: initialFormState,\\\\\\\\n      hasUnsubmittedChanges: false,\\\\\\\\n    }));\\\\\\\\n\\\\\\\\n  const formUpdate =\\\\\\\\n    ({ path, via: customFieldUpdate, ...params }) =>\\\\\\\\n    (fieldInput) => {\\\\\\\\n      const transformFn = (node) => {\\\\\\\\n        if (typeof customFieldUpdate === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\") {\\\\\\\\n          return customFieldUpdate({\\\\\\\\n            input: fieldInput?.target?.value ?? fieldInput,\\\\\\\\n            lastKnownValue: node,\\\\\\\\n            params,\\\\\\\\n          });\\\\\\\\n        } else {\\\\\\\\n          return defaultFieldUpdate({\\\\\\\\n            input: fieldInput?.target?.value ?? fieldInput,\\\\\\\\n            lastKnownValue: node,\\\\\\\\n            params,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n      };\\\\\\\\n      const updatedValues = Struct.deepFieldUpdate(\\\\\\\\n        formState?.values ?? {},\\\\\\\\n        path,\\\\\\\\n        (node) => transformFn(node)\\\\\\\\n      );\\\\\\\\n      State.update((lastKnownComponentState) => ({\\\\\\\\n        ...lastKnownComponentState,\\\\\\\\n        [stateKey]: {\\\\\\\\n          hasUnsubmittedChanges: !Struct.isEqual(\\\\\\\\n            updatedValues,\\\\\\\\n            initialFormState.values\\\\\\\\n          ),\\\\\\\\n          values: updatedValues,\\\\\\\\n        },\\\\\\\\n      }));\\\\\\\\n\\\\\\\\n      if (typeof onUpdate === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\") {\\\\\\\\n        onUpdate(updatedValues);\\\\\\\\n      }\\\\\\\\n    };\\\\\\\\n\\\\\\\\n  return {\\\\\\\\n    hasUnsubmittedChanges: formState?.hasUnsubmittedChanges ?? false,\\\\\\\\n    values: {\\\\\\\\n      ...(initialValues ?? {}),\\\\\\\\n      ...(formState?.values ?? {}),\\\\\\\\n    },\\\\\\\\n    reset: formReset,\\\\\\\\n    stateKey,\\\\\\\\n    update: formUpdate,\\\\\\\\n  };\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst ValueView = styled.div`\\\\\\\\n  & > p {\\\\\\\\n    margin: 0;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst fieldParamsByType = {\\\\\\\\n  array: {\\\\\\\\n    name: \\\\\\\\\\\\\\\"components.molecule.text-input\\\\\\\\\\\\\\\",\\\\\\\\n    inputProps: { type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\" },\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  boolean: {\\\\\\\\n    name: \\\\\\\\\\\\\\\"components.atom.toggle\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  string: {\\\\\\\\n    name: \\\\\\\\\\\\\\\"components.molecule.text-input\\\\\\\\\\\\\\\",\\\\\\\\n    inputProps: { type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\" },\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst defaultFieldsRender = ({ schema, form, isEditable }) => (\\\\\\\\n  <>\\\\\\\\n    {Object.entries(schema).map(\\\\\\\\n      (\\\\\\\\n        [key, { format, inputProps, noop, label, order, style, ...fieldProps }],\\\\\\\\n        idx\\\\\\\\n      ) => {\\\\\\\\n        const fieldKey = `${idx}-${key}`,\\\\\\\\n          fieldValue = form.values[key];\\\\\\\\n\\\\\\\\n        const fieldType = Array.isArray(fieldValue)\\\\\\\\n          ? \\\\\\\\\\\\\\\"array\\\\\\\\\\\\\\\"\\\\\\\\n          : typeof (fieldValue ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        const isDisabled = noop ?? inputProps.disabled ?? false;\\\\\\\\n\\\\\\\\n        const viewClassName = [\\\\\\\\n          (fieldValue?.length ?? 0) > 0 ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\",\\\\\\\\n          \\\\\\\\\\\\\\\"m-0\\\\\\\\\\\\\\\",\\\\\\\\n        ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        return (\\\\\\\\n          <>\\\\\\\\n            <div\\\\\\\\n              className={[\\\\\\\\n                \\\\\\\\\\\\\\\"d-flex gap-3\\\\\\\\\\\\\\\",\\\\\\\\n                isEditable || noop ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n              ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n              key={fieldKey}\\\\\\\\n              style={{ order }}\\\\\\\\n            >\\\\\\\\n              <label className=\\\\\\\\\\\\\\\"fw-bold w-25\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n\\\\\\\\n              <ValueView className={[viewClassName, \\\\\\\\\\\\\\\"w-75\\\\\\\\\\\\\\\"].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}>\\\\\\\\n                {format !== \\\\\\\\\\\\\\\"markdown\\\\\\\\\\\\\\\" ? (\\\\\\\\n                  <span>\\\\\\\\n                    {(fieldType === \\\\\\\\\\\\\\\"array\\\\\\\\\\\\\\\" && format === \\\\\\\\\\\\\\\"comma-separated\\\\\\\\\\\\\\\"\\\\\\\\n                      ? fieldValue\\\\\\\\n                          .filter((string) => string.length > 0)\\\\\\\\n                          .join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")\\\\\\\\n                      : fieldValue\\\\\\\\n                    )?.toString?.() || \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"}\\\\\\\\n                  </span>\\\\\\\\n                ) : (fieldValue?.length ?? 0) > 0 ? (\\\\\\\\n                  <Widget\\\\\\\\n                    // TODO: LEGACY.\\\\\\\\n                    src={\\\\\\\\n                      \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n                    }\\\\\\\\n                    props={{\\\\\\\\n                      text: fieldValue,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                ) : (\\\\\\\\n                  <span>none</span>\\\\\\\\n                )}\\\\\\\\n              </ValueView>\\\\\\\\n            </div>\\\\\\\\n            <Widget\\\\\\\\n              // TODO: LEGACY.\\\\\\\\n              src={`devgovgigs.near/widget/gigs-board.${fieldParamsByType[fieldType].name}`}\\\\\\\\n              props={{\\\\\\\\n                ...fieldProps,\\\\\\\\n\\\\\\\\n                className: [\\\\\\\\n                  \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\",\\\\\\\\n                  fieldProps.className ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                  isEditable && !noop ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\",\\\\\\\\n                ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"),\\\\\\\\n\\\\\\\\n                disabled: isDisabled,\\\\\\\\n                format,\\\\\\\\n                key: `${fieldKey}--editable`,\\\\\\\\n                label,\\\\\\\\n                onChange: form.update({ path: [key] }),\\\\\\\\n                style: { ...style, order },\\\\\\\\n\\\\\\\\n                value:\\\\\\\\n                  fieldType === \\\\\\\\\\\\\\\"array\\\\\\\\\\\\\\\" && format === \\\\\\\\\\\\\\\"comma-separated\\\\\\\\\\\\\\\"\\\\\\\\n                    ? fieldValue.join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")\\\\\\\\n                    : fieldValue,\\\\\\\\n\\\\\\\\n                inputProps: {\\\\\\\\n                  ...(inputProps ?? {}),\\\\\\\\n                  disabled: isDisabled,\\\\\\\\n\\\\\\\\n                  title:\\\\\\\\n                    noop ?? false\\\\\\\\n                      ? \\\\\\\\\\\\\\\"Temporarily disabled due to technical reasons.\\\\\\\\\\\\\\\"\\\\\\\\n                      : inputProps.title,\\\\\\\\n\\\\\\\\n                  ...(fieldParamsByType[fieldType].inputProps ?? {}),\\\\\\\\n                  tabIndex: order,\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        );\\\\\\\\n      }\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Configurator = ({\\\\\\\\n  actionsAdditional,\\\\\\\\n  cancelLabel,\\\\\\\\n  classNames,\\\\\\\\n  externalState,\\\\\\\\n  fieldsRender: customFieldsRender,\\\\\\\\n  formatter: toFormatted,\\\\\\\\n  isValid,\\\\\\\\n  isActive,\\\\\\\\n  onCancel,\\\\\\\\n  onChange,\\\\\\\\n  onSubmit,\\\\\\\\n  schema,\\\\\\\\n  submitIcon,\\\\\\\\n  submitLabel,\\\\\\\\n}) => {\\\\\\\\n  const fieldsRender = customFieldsRender || defaultFieldsRender;\\\\\\\\n\\\\\\\\n  const initialValues = Struct.typeMatch(schema)\\\\\\\\n    ? Struct.pick(externalState ?? {}, Object.keys(schema))\\\\\\\\n    : {};\\\\\\\\n\\\\\\\\n  const form = useForm({ initialValues, onUpdate: onChange, stateKey: \\\\\\\\\\\\\\\"form\\\\\\\\\\\\\\\" });\\\\\\\\n\\\\\\\\n  const formFormattedValues = toFormatted\\\\\\\\n    ? toFormatted(form.values)\\\\\\\\n    : form.values;\\\\\\\\n\\\\\\\\n  const isFormValid = isValid ? isValid(formFormattedValues) : true;\\\\\\\\n\\\\\\\\n  const onCancelClick = () => {\\\\\\\\n    form.reset();\\\\\\\\n    if (onCancel) onCancel();\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const onSubmitClick = () => {\\\\\\\\n    if (onSubmit && isFormValid) {\\\\\\\\n      onSubmit(formFormattedValues);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"flex-grow-1 d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n      <div className={`d-flex flex-column gap-${isActive ? 1 : 4}`}>\\\\\\\\n        {fieldsRender({\\\\\\\\n          form,\\\\\\\\n          isEditable: isActive,\\\\\\\\n          schema,\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n      {isActive && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-end gap-3 mt-auto\\\\\\\\\\\\\\\">\\\\\\\\n          {actionsAdditional ? (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"me-auto\\\\\\\\\\\\\\\">{actionsAdditional}</div>\\\\\\\\n          ) : null}\\\\\\\\n\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0\\\\\\\\\\\\\\\" },\\\\\\\\n              label: cancelLabel || \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onCancelClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: classNames.submit || \\\\\\\\\\\\\\\"btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n              disabled: !form.hasUnsubmittedChanges || !isFormValid,\\\\\\\\n              icon: submitIcon || {\\\\\\\\n                type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                variant: \\\\\\\\\\\\\\\"bi-check-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n              },\\\\\\\\n              label: submitLabel || \\\\\\\\\\\\\\\"Submit\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onSubmitClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn Configurator(props);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 913975905334500000000
    }
  },
  {
    "id": "1336593288",
    "receipt_id": "9KN4P2iXsDG4bUjBJz3sTNT9XqiHG2GD2spD9XN15BHT",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2hH6JJT2r1iq464DYuKNsrZHh4oC1pWgyL9nowNEeQrq",
      "block_height": 104860053,
      "block_timestamp": 1699037650083143200
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "AimrVPJXhxUwQjhv3GbLwdjw2oGpL4tj1aCABqnXHxCf",
    "included_in_block_hash": "3SjN846kxNQpTW3XEyATuHomgNiQL7CZK82d9vkMMDGN",
    "block_timestamp": "1699037647945265215",
    "block": {
      "block_height": 104860051
    },
    "receipt_conversion_tokens_burnt": "244805782160400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.883730165636033e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 913975905334500000000
    }
  },
  {
    "id": "1336603919",
    "receipt_id": "GdFEnsPfDvdEqStuME3WNqLEHxzoXUtVANCEMz2GL4Bo",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8dCGU5L8PFoWp6pUSYxXzgKZUKG5mJDQuoXZtWRkwrfq",
      "block_height": 104860421,
      "block_timestamp": 1699038048333378300
    },
    "receipt_outcome": {
      "gas_burnt": 6118833401989,
      "tokens_burnt": 611883340198900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "GddwmQaTsMkQnwag8dD66c9ArWBBpBWxTGsCtsPbVHpD",
    "included_in_block_hash": "7ZuHsw214HSiJ1XEcrjwZ7fGszMj9p9UgYSjmdn29tHc",
    "block_timestamp": "1699038047123064524",
    "block": {
      "block_height": 104860420
    },
    "receipt_conversion_tokens_burnt": "244122480730000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 1,
        "fee": 611883340198900000000,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.page.about\": {\"\": \"const PageHeader = styled.h2`\\\\\\\\n  color: #04a46e;\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.24px;\\\\\\\\n\\\\\\\\n  width: 100%;\\\\\\\\n  padding: 1rem 3.125rem;\\\\\\\\n  margin-left: auto;\\\\\\\\n  //background: #fff;\\\\\\\\n\\\\\\\\n  margin-top: 1.5rem;\\\\\\\\n  margin-bottom: 1.5rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 786px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Section = styled.div`\\\\\\\\n  padding: 1.5rem 8rem;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n\\\\\\\\n  gap: 2rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 786px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  h2 {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 2rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 2rem; /* 55.556% */\\\\\\\\n\\\\\\\\n    margin: 1rem;\\\\\\\\n    margin-left: 0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.25rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 150%;\\\\\\\\n    margin-bottom: 1rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  h3 {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.5rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 120%;\\\\\\\\n\\\\\\\\n    margin-top: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Widget\\\\\\\\n      src={`devhub.near/widget/devhub.components.island.banner`}\\\\\\\\n      props={{\\\\\\\\n        title: (\\\\\\\\n          <>\\\\\\\\n            We are building <br />\\\\\\\\n            <span style={{ color: \\\\\\\\\\\\\\\"#151515\\\\\\\\\\\\\\\" }}>\\\\\\\\n              a decentralized community\\\\\\\\n            </span>{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <br />\\\\\\\\n            for NEAR Developers.\\\\\\\\n          </>\\\\\\\\n        ),\\\\\\\\n        imageLink:\\\\\\\\n          \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreigtpjmgt3aphd3plbcremtvazeo7qsjvguw44m74zthyxbhj4toqe\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <PageHeader>About /dev/hub</PageHeader>\\\\\\\\n    <Section>\\\\\\\\n      <h2>\\\\\\\\n        What is <span style={{ color: \\\\\\\\\\\\\\\"#00EC97\\\\\\\\\\\\\\\" }}>near</span>/dev/hub?\\\\\\\\n      </h2>\\\\\\\\n\\\\\\\\n      <div>\\\\\\\\n        <p>\\\\\\\\n          DevHub brings together individuals, projects, and organizations to\\\\\\\\n          build a decentralized NEAR developer ecosystem. We provide social\\\\\\\\n          structure and tools to fuel innovation, collaboration, and community\\\\\\\\n          within the NEAR ecosystem. Whether you\\\\\\\\u{2019}re a blockchain developer or\\\\\\\\n          advocate for the open web, DevHub is your gateway to making a\\\\\\\\n          meaningful impact on NEAR and beyond.\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Mission</h3>\\\\\\\\n        <p>\\\\\\\\n          Build a self-sufficient developer community to enable a thriving NEAR\\\\\\\\n          ecosystem.\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Values</h3>\\\\\\\\n        <p>\\\\\\\\n          <ul>\\\\\\\\n            <li>\\\\\\\\n              <b>Decentralized</b>: We are building together.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Transparent</b>: All decision making and communication is open.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Self-sufficient</b>: We do not critically depend on any single\\\\\\\\n              entity.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Robust</b>: Any role or team can be duplicated or replaced.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>High-velocity</b>: We need to move faster than classic OSS.\\\\\\\\n            </li>\\\\\\\\n          </ul>\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Scope</h3>\\\\\\\\n        <p>\\\\\\\\n          DevHub covers a wide range of areas to support the NEAR developer\\\\\\\\n          ecosystem, including:\\\\\\\\n          <ul>\\\\\\\\n            <li>\\\\\\\\n              <b>Developer Tooling</b>: Contributing code to the NEAR Platform\\\\\\\\n              (blockchain and devtools) and facilitating technical decisions\\\\\\\\n              with recognized experts based on the needs of the community and\\\\\\\\n              ecosystem.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Developer Relations</b>: Engaging with the community across\\\\\\\\n              various social channels, gathering feedback, and improving\\\\\\\\n              documentation.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Deep-Tech Awareness</b>: Working with marketing partners to\\\\\\\\n              create awareness on interesting projects and technology areas.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Events and Hackathons</b>: Organizing events and empowering\\\\\\\\n              community leaders with resources to grow their local communities.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Education</b>: Partnering with universities across the globe to\\\\\\\\n              support students and scholars in exploring Web3 technologies\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Platform</b>: Developing DevHub platform as a product to enable\\\\\\\\n              communities to collaborate and support each other.\\\\\\\\n            </li>\\\\\\\\n          </ul>\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Our Contributors</h3>\\\\\\\\n        <p>\\\\\\\\n          DevHub operates through DevDAO, which provides social structures to\\\\\\\\n          support developers. Within DevDAO, we have a dedicated core team of\\\\\\\\n          moderators and community contributors who work across the key areas\\\\\\\\n          above. We welcome contributions from any community members who want to\\\\\\\\n          join us in building our ecosystem and their own skills!\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Our Platform</h3>\\\\\\\\n        <p>\\\\\\\\n          Our main tool for interfacing is the DevHub Platform, where you can\\\\\\\\n          connect with others, share ideas and solutions, and access resources\\\\\\\\n          and support. You can also find communities working on a variety of\\\\\\\\n          areas, from protocol development to tooling and documentation.\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Join Us in Shaping NEAR\\\\\\\\u{2019}s Future</h3>\\\\\\\\n        <p>\\\\\\\\n          Regardless of your background or where you are on your developer\\\\\\\\n          journey, we\\\\\\\\u{2019}re happy you\\\\\\\\u{2019}re here! We hope you\\\\\\\\u{2019}ll explore, find your\\\\\\\\n          people, and discover paths to contribute that are most gratifying for\\\\\\\\n          you.\\\\\\\\n          <br />\\\\\\\\n          Let\\\\\\\\u{2019}s build the open web together.\\\\\\\\n        </p>\\\\\\\\n      </div>\\\\\\\\n    </Section>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 856005820928900000000
    }
  },
  {
    "id": "1336604098",
    "receipt_id": "2ih7rXd6SWMY4Bc7E8bACGZasBd9eEVfv6B9dbBTNT9Z",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "ANq4pu1bcnHZR8aDfgbiwMLQaQ7jKk2ux1b8ASh7LoDG",
      "block_height": 104860422,
      "block_timestamp": 1699038049400908300
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "GddwmQaTsMkQnwag8dD66c9ArWBBpBWxTGsCtsPbVHpD",
    "included_in_block_hash": "7ZuHsw214HSiJ1XEcrjwZ7fGszMj9p9UgYSjmdn29tHc",
    "block_timestamp": "1699038047123064524",
    "block": {
      "block_height": 104860420
    },
    "receipt_conversion_tokens_burnt": "244122480730000000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.88426032438129e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 856005820928900000000
    }
  },
  {
    "id": "1336640073",
    "receipt_id": "ABoCcNJLcon98vkSG8UdtvJG2A3ru2jJN9B9ACQrgRDW",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8SVzVtZjtKxA8RLBRsr1vknxeBekgBVpDNvoFUd2xyA",
      "block_height": 104861457,
      "block_timestamp": 1699039196140663000
    },
    "receipt_outcome": {
      "gas_burnt": 13529892881050,
      "tokens_burnt": 1.352989288105e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "DdkHKXzUxoXgmnAcPQKeiU8uMLkVzfd9shYSdDQqx2ci",
    "included_in_block_hash": "5UWf69yCwZyAisXenKKasLtnP2Z63vM1pWMrG1cCx7bB",
    "block_timestamp": "1699039195061467622",
    "block": {
      "block_height": 104861456
    },
    "receipt_conversion_tokens_burnt": "247836590697400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 1,
        "fee": 1.352989288105e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.page.blog\": {\"\": \"const { id } = props;\\\\\\\\n\\\\\\\\nconst { Page } =\\\\\\\\n  VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blog.Page\\\\\\\\\\\\\\\") ||\\\\\\\\n  (() => <></>);\\\\\\\\n\\\\\\\\nif (id) {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Postv2\\\\\\\\\\\\\\\"\\\\\\\\n      props={{ postKey: id, template: (p) => <Page {...(p || {})} /> }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst HeaderContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  width: 100%;\\\\\\\\n  height: 60px;\\\\\\\\n  padding: 1rem 3rem;\\\\\\\\n  align-items: center;\\\\\\\\n  flex-shrink: 0;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.h2`\\\\\\\\n  color: #04a46e;\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.24px;\\\\\\\\n  margin: 0;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst BlogContainer = styled.div`\\\\\\\\n  padding: 1rem 3rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// I like that this reduces duplicate code with the Viewer, but I don\\\\\\\\\\\\'t like\\\\\\\\n// that \\\\\\\\\\\\\\\"Latest Blog Posts\\\\\\\\\\\\\\\" carries over... // TOOD: create a common blog\\\\\\\\n// feed... I think the addon.blog.Feed naming is confusing, as this should be a\\\\\\\\n// generic feed component.\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget src={`devhub.near/widget/devhub.components.island.banner`} />\\\\\\\\n    <HeaderContainer>\\\\\\\\n      <Header>/blog</Header>\\\\\\\\n    </HeaderContainer>\\\\\\\\n    <BlogContainer>\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blog.Viewer\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          handle: \\\\\\\\\\\\\\\"developer-dao\\\\\\\\\\\\\\\",\\\\\\\\n          hideTitle: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </BlogContainer>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.page.feed\": {\"\": \"const { author, recency, tag } = props;\\\\\\\\n\\\\\\\\nconst { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!href) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Gradient = styled.div`\\\\\\\\n  height: 250px;\\\\\\\\n  text-align: center;\\\\\\\\n  background: radial-gradient(\\\\\\\\n    circle,\\\\\\\\n    rgba(29, 55, 57, 1) 30%,\\\\\\\\n    rgba(24, 24, 24, 1) 80%\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  font-family: Arial, sans-serif;\\\\\\\\n\\\\\\\\n  .text-primary-gradient {\\\\\\\\n    color: #53fdca;\\\\\\\\n    -webkit-text-fill-color: transparent;\\\\\\\\n    background-image: linear-gradient(#8e76ba, #1ed2f0);\\\\\\\\n    -webkit-background-clip: text;\\\\\\\\n    background-clip: text;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .subtitle-above {\\\\\\\\n    font-size: 18px;\\\\\\\\n    letter-spacing: 1px;\\\\\\\\n    font-family: Courier, monospace;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .subtitle-below {\\\\\\\\n    font-size: 16px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .slogan {\\\\\\\\n    font-weight: 600;\\\\\\\\n    font-size: 60px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst FeedPage = ({ recency, tag }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget src={`devhub.near/widget/devhub.components.island.banner`} />\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.post-search.panel\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          hideHeader: false,\\\\\\\\n          children: (\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.PostControls\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                title: \\\\\\\\\\\\\\\"Post\\\\\\\\\\\\\\\",\\\\\\\\n                href: href({\\\\\\\\n                  widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                  params: { page: \\\\\\\\\\\\\\\"create\\\\\\\\\\\\\\\" },\\\\\\\\n                }),\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          ),\\\\\\\\n          recency,\\\\\\\\n          tag,\\\\\\\\n          transactionHashes: props.transactionHashes,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn FeedPage(props);\\\\\\\\n\"}, \"devhub.page.about\": {\"\": \"const PageHeader = styled.h2`\\\\\\\\n  color: #04a46e;\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.24px;\\\\\\\\n\\\\\\\\n  width: 100%;\\\\\\\\n  padding: 1rem 3.125rem;\\\\\\\\n  margin-left: auto;\\\\\\\\n  //background: #fff;\\\\\\\\n\\\\\\\\n  margin-top: 1.5rem;\\\\\\\\n  margin-bottom: 1.5rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 786px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Section = styled.div`\\\\\\\\n  padding: 1.5rem 8rem;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n\\\\\\\\n  gap: 2rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 786px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  h2 {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 2rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 2rem; /* 55.556% */\\\\\\\\n\\\\\\\\n    margin: 1rem;\\\\\\\\n    margin-left: 0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.25rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 150%;\\\\\\\\n    margin-bottom: 1rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  h3 {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.5rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 120%;\\\\\\\\n\\\\\\\\n    margin-top: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Widget src={`devhub.near/widget/devhub.components.island.banner`} />\\\\\\\\n    <Section>\\\\\\\\n      <h2>\\\\\\\\n        What is <span style={{ color: \\\\\\\\\\\\\\\"#00EC97\\\\\\\\\\\\\\\" }}>near</span>/dev/hub?\\\\\\\\n      </h2>\\\\\\\\n\\\\\\\\n      <div>\\\\\\\\n        <p>\\\\\\\\n          DevHub brings together individuals, projects, and organizations to\\\\\\\\n          build a decentralized NEAR developer ecosystem. We provide social\\\\\\\\n          structure and tools to fuel innovation, collaboration, and community\\\\\\\\n          within the NEAR ecosystem. Whether you\\\\\\\\u{2019}re a blockchain developer or\\\\\\\\n          advocate for the open web, DevHub is your gateway to making a\\\\\\\\n          meaningful impact on NEAR and beyond.\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Mission</h3>\\\\\\\\n        <p>\\\\\\\\n          Build a self-sufficient developer community to enable a thriving NEAR\\\\\\\\n          ecosystem.\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Values</h3>\\\\\\\\n        <p>\\\\\\\\n          <ul>\\\\\\\\n            <li>\\\\\\\\n              <b>Decentralized</b>: We are building together.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Transparent</b>: All decision making and communication is open.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Self-sufficient</b>: We do not critically depend on any single\\\\\\\\n              entity.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Robust</b>: Any role or team can be duplicated or replaced.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>High-velocity</b>: We need to move faster than classic OSS.\\\\\\\\n            </li>\\\\\\\\n          </ul>\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Scope</h3>\\\\\\\\n        <p>\\\\\\\\n          DevHub covers a wide range of areas to support the NEAR developer\\\\\\\\n          ecosystem, including:\\\\\\\\n          <ul>\\\\\\\\n            <li>\\\\\\\\n              <b>Developer Tooling</b>: Contributing code to the NEAR Platform\\\\\\\\n              (blockchain and devtools) and facilitating technical decisions\\\\\\\\n              with recognized experts based on the needs of the community and\\\\\\\\n              ecosystem.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Developer Relations</b>: Engaging with the community across\\\\\\\\n              various social channels, gathering feedback, and improving\\\\\\\\n              documentation.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Deep-Tech Awareness</b>: Working with marketing partners to\\\\\\\\n              create awareness on interesting projects and technology areas.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Events and Hackathons</b>: Organizing events and empowering\\\\\\\\n              community leaders with resources to grow their local communities.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Education</b>: Partnering with universities across the globe to\\\\\\\\n              support students and scholars in exploring Web3 technologies\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Platform</b>: Developing DevHub platform as a product to enable\\\\\\\\n              communities to collaborate and support each other.\\\\\\\\n            </li>\\\\\\\\n          </ul>\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Our Contributors</h3>\\\\\\\\n        <p>\\\\\\\\n          DevHub operates through DevDAO, which provides social structures to\\\\\\\\n          support developers. Within DevDAO, we have a dedicated core team of\\\\\\\\n          moderators and community contributors who work across the key areas\\\\\\\\n          above. We welcome contributions from any community members who want to\\\\\\\\n          join us in building our ecosystem and their own skills!\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Our Platform</h3>\\\\\\\\n        <p>\\\\\\\\n          Our main tool for interfacing is the DevHub Platform, where you can\\\\\\\\n          connect with others, share ideas and solutions, and access resources\\\\\\\\n          and support. You can also find communities working on a variety of\\\\\\\\n          areas, from protocol development to tooling and documentation.\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Join Us in Shaping NEAR\\\\\\\\u{2019}s Future</h3>\\\\\\\\n        <p>\\\\\\\\n          Regardless of your background or where you are on your developer\\\\\\\\n          journey, we\\\\\\\\u{2019}re happy you\\\\\\\\u{2019}re here! We hope you\\\\\\\\u{2019}ll explore, find your\\\\\\\\n          people, and discover paths to contribute that are most gratifying for\\\\\\\\n          you.\\\\\\\\n          <br />\\\\\\\\n          Let\\\\\\\\u{2019}s build the open web together.\\\\\\\\n        </p>\\\\\\\\n      </div>\\\\\\\\n    </Section>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.page.contribute\": {\"\": \"const Header = styled.div`\\\\\\\\n  //background: white;\\\\\\\\n  padding: 1rem 3.125rem;\\\\\\\\n  width: 100%;\\\\\\\\n  margin: 24px;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 1rem 0;\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst PageHeader = styled.h2`\\\\\\\\n  color: #00ec97;\\\\\\\\n  font-size: 1.5rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.24px;\\\\\\\\n  margin: 0;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Lead = styled.h5`\\\\\\\\n  color: #151515;\\\\\\\\n  font-size: 2.5rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 120%; /* 48px */\\\\\\\\n  margin: 2.25rem 8rem;\\\\\\\\n  margin-top: 0;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 1.75rem;\\\\\\\\n    margin: 1rem;\\\\\\\\n    margin-top: 0;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  padding: 2.25rem 8rem;\\\\\\\\n  width: 100%;\\\\\\\\n  //background-color: white;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst actions = [\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Ideate on Devhub\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"The first step in any NEAR ecosystem project is ideation. It is crucial to have a way to find people to share and explore ideas with, partly because it can save a lot of time based on prior discussions. But also because it can you gauge support from a diversity of stakeholders.\\\\\\\\\\\\\\\",\\\\\\\\n    ctaAction: \\\\\\\\\\\\\\\"Learn More \\\\\\\\u{2192}\\\\\\\\\\\\\\\",\\\\\\\\n    ctaLink: \\\\\\\\\\\\\\\"https://www.neardevgov.org/blog/how-to-ideate-on-dev-hub\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Post a Proposal\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"If you have already nurtured and refined your idea, you\\\\\\\\\\\\'re ready to draft and post your funding proposal.This guide is here to help you craft a compelling, convincing, and concise proposal that will capture the interest of potential funders.\\\\\\\\\\\\\\\",\\\\\\\\n    ctaAction: \\\\\\\\\\\\\\\"Learn More \\\\\\\\u{2192}\\\\\\\\\\\\\\\",\\\\\\\\n    ctaLink: \\\\\\\\\\\\\\\"https://www.neardevgov.org/blog/how-to-post-proposals-on-devhub\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Host an Event\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"We are always on the lookout for events that align with our mission and provide value to the NEAR ecosystem. If you are organizing such an event, we would love to hear from you! Below is a guide on how to submit a sponsorship proposal to us.\\\\\\\\\\\\\\\",\\\\\\\\n    ctaAction: \\\\\\\\\\\\\\\"Learn More \\\\\\\\u{2192}\\\\\\\\\\\\\\\",\\\\\\\\n    ctaLink:\\\\\\\\n      \\\\\\\\\\\\\\\"https://near.social/devgovgigs.near/widget/app?page=community&handle=hacks&tab=Wiki%202\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Improve NEAR Docs\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"NEAR documentation is an open source repository that anyone can fork, extend and contribute to by creating pull requests. To get started, head over to our github repository and checkout how you can make your first contribution. \\\\\\\\\\\\\\\",\\\\\\\\n    ctaAction: \\\\\\\\\\\\\\\"Learn More \\\\\\\\u{2192}\\\\\\\\\\\\\\\",\\\\\\\\n    ctaLink: \\\\\\\\\\\\\\\"https://github.com/near/docs\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Join the Fellowship\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"As the NEAR ecosystem grows rapidly, there is an increasing need to improve developer productivity. The DevDAO NEAR Platform Fellowship Program aims to solve this issue by providing guidance to new contributors from experienced developers.\\\\\\\\\\\\\\\",\\\\\\\\n    ctaAction: \\\\\\\\\\\\\\\"Learn More \\\\\\\\u{2192}\\\\\\\\\\\\\\\",\\\\\\\\n    ctaLink:\\\\\\\\n      \\\\\\\\\\\\\\\"https://near.social/devgovgigs.near/widget/app?page=community&handle=fellowship&tab=Wiki 1\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Join NEAR Campus\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"DevHub\\\\\\\\u{2019}s NEAR Campus supports existing student clubs, researchers, and faculties in blockchain technologies, enhancing both curricular and extracurricular activities. We aim to merge blockchain education with mainstream academics.\\\\\\\\\\\\\\\",\\\\\\\\n    ctaAction: \\\\\\\\\\\\\\\"Learn More \\\\\\\\u{2192}\\\\\\\\\\\\\\\",\\\\\\\\n    ctaLink:\\\\\\\\n      \\\\\\\\\\\\\\\"https://near.social/devgovgigs.near/widget/app?page=community&handle=near-campus\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Dive into Hackbox\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Hackbox is a revolutionary plug-and-play solution designed to empower local leads and community stewards in hosting hackathons easily and efficiently.\\\\\\\\\\\\\\\",\\\\\\\\n    ctaAction: \\\\\\\\\\\\\\\"Learn More \\\\\\\\u{2192}\\\\\\\\\\\\\\\",\\\\\\\\n    ctaLink: \\\\\\\\\\\\\\\"https://near.social/hackbox.near/widget/home\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst Card = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  gap: 0.5rem;\\\\\\\\n\\\\\\\\n  h5 {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.75rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 120%; /* 43.2px */\\\\\\\\n\\\\\\\\n    display: flex;\\\\\\\\n    align-items: center;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    color: #000;\\\\\\\\n    font-size: 1rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 120%; /* 28.8px */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a {\\\\\\\\n    color: #f4f4f4;\\\\\\\\n    font-size: 1rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 120%; /* 28.8px */\\\\\\\\n    letter-spacing: -0.48px;\\\\\\\\n\\\\\\\\n    display: flex;\\\\\\\\n    padding: 0.5rem 1rem;\\\\\\\\n    align-items: center;\\\\\\\\n    gap: 8px;\\\\\\\\n\\\\\\\\n    border-radius: 0.5rem;\\\\\\\\n    background: #00ec97;\\\\\\\\n\\\\\\\\n    width: max-content;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nconst ActionCard = ({ action, index }) => {\\\\\\\\n  return (\\\\\\\\n    <Card>\\\\\\\\n      <h5>\\\\\\\\n        <span\\\\\\\\n          style={{\\\\\\\\n            color: \\\\\\\\\\\\\\\"#151515\\\\\\\\\\\\\\\",\\\\\\\\n            border: \\\\\\\\\\\\\\\"2px #151515 solid\\\\\\\\\\\\\\\",\\\\\\\\n            fontSize: 12,\\\\\\\\n            padding: 4,\\\\\\\\n            width: 22,\\\\\\\\n            height: 22,\\\\\\\\n          }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"rounded-circle d-flex align-items-center justify-content-center me-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          {index + 1}\\\\\\\\n        </span>\\\\\\\\n        {action.title}\\\\\\\\n      </h5>\\\\\\\\n      <p>{action.description}</p>\\\\\\\\n      <a href={action.ctaLink} target=\\\\\\\\\\\\\\\"no_blank\\\\\\\\\\\\\\\">\\\\\\\\n        {action.ctaAction}\\\\\\\\n      </a>\\\\\\\\n    </Card>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst ActionContainer = styled.div`\\\\\\\\n  display: grid;\\\\\\\\n  grid-template-columns: repeat(2, 1fr);\\\\\\\\n  justify-content: center;\\\\\\\\n  column-gap: 1rem;\\\\\\\\n  row-gap: 2rem;\\\\\\\\n\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: flex;\\\\\\\\n    flex-direction: column;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Widget src={`devhub.near/widget/devhub.components.island.banner`} />\\\\\\\\n    <Header>\\\\\\\\n      <PageHeader>/contribute</PageHeader>\\\\\\\\n    </Header>\\\\\\\\n    <Lead>\\\\\\\\n      There are many ways to start your contribution journey. You can:\\\\\\\\n    </Lead>\\\\\\\\n    <Container>\\\\\\\\n      <ActionContainer>\\\\\\\\n        {actions.map((action, index) => (\\\\\\\\n          <ActionCard action={action} index={index} />\\\\\\\\n        ))}\\\\\\\\n      </ActionContainer>\\\\\\\\n    </Container>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.page.communities\": {\"\": \"const { getAllCommunitiesMetadata, createCommunity } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!getAllCommunitiesMetadata || !createCommunity) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst onCommunitySubmit = (inputs) =>\\\\\\\\n  createCommunity({\\\\\\\\n    inputs: {\\\\\\\\n      ...inputs,\\\\\\\\n\\\\\\\\n      bio_markdown: [\\\\\\\\n        \\\\\\\\\\\\\\\"This is a sample text about your community.\\\\\\\\\\\\\\\",\\\\\\\\n        \\\\\\\\\\\\\\\"You can change it on the community configuration page.\\\\\\\\\\\\\\\",\\\\\\\\n      ].join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"),\\\\\\\\n\\\\\\\\n      logo_url:\\\\\\\\n        \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreibysr2mkwhb4j36h2t7mqwhynqdy4vzjfygfkfg65kuspd2bawauu\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n      banner_url:\\\\\\\\n        \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  });\\\\\\\\n\\\\\\\\nconst [showSpawner, setShowSpawner] = useState(false);\\\\\\\\n\\\\\\\\nconst [searchKey, setSearchKey] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [sort, setSort] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst communitiesMetadata = getAllCommunitiesMetadata();\\\\\\\\n\\\\\\\\nif (!communitiesMetadata) {\\\\\\\\n  return <p>Loading...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst SortedAndFiltered = (searchKey, sortBy) => {\\\\\\\\n  let communities = (communitiesMetadata ?? []).reverse();\\\\\\\\n\\\\\\\\n  let filtered = [...communities];\\\\\\\\n  if (searchKey !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n    filtered = communities.filter((community) =>\\\\\\\\n      community.name.toLowerCase().includes(searchKey.toLowerCase())\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  let sortedCommunities = [...filtered];\\\\\\\\n  if (sortBy !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n    sortedCommunities.sort((a, b) => {\\\\\\\\n      let nameA = a.name.toLowerCase();\\\\\\\\n      let nameB = b.name.toLowerCase();\\\\\\\\n\\\\\\\\n      if (nameA < nameB) {\\\\\\\\n        return -1;\\\\\\\\n      }\\\\\\\\n      if (nameA > nameB) {\\\\\\\\n        return 1;\\\\\\\\n      }\\\\\\\\n      return 0;\\\\\\\\n    });\\\\\\\\n\\\\\\\\n    if (sortBy === \\\\\\\\\\\\\\\"z-a\\\\\\\\\\\\\\\") {\\\\\\\\n      sortedCommunities.reverse();\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return sortedCommunities;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CTA = styled.button`\\\\\\\\n  all: unset;\\\\\\\\n\\\\\\\\n  color: #f4f4f4;\\\\\\\\n\\\\\\\\n  font-size: 16px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 20px; /* 125% */\\\\\\\\n\\\\\\\\n  border-radius: 4px;\\\\\\\\n  background: #00ec97;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  padding: 14px 16px;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 8px;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background: #04a46e;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CardGrid = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  height: 100%;\\\\\\\\n\\\\\\\\n  display: grid;\\\\\\\\n  grid-template-columns: repeat(2, 1fr);\\\\\\\\n  gap: 3rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 1000px) {\\\\\\\\n    display: flex;\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n    gap: 2rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget src={`devhub.near/widget/devhub.components.island.banner`} />\\\\\\\\n    <div style={{ background: \\\\\\\\\\\\\\\"#f4f4f4\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"d-flex justify-content-between p-4\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ backgroundColor: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }}\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <h1\\\\\\\\n            className=\\\\\\\\\\\\\\\"m-0 fs-4\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ color: \\\\\\\\\\\\\\\"#04a46e\\\\\\\\\\\\\\\", fontSize: \\\\\\\\\\\\\\\"1.5rem\\\\\\\\\\\\\\\" }}\\\\\\\\n          >\\\\\\\\n            Communities\\\\\\\\n          </h1>\\\\\\\\n\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column-reverse flex-lg-row gap-3 justify-content-between align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-lg-row col-12 col-md-6 mt-3 mt-lg-0 align-items-center gap-4 col-lg-6\\\\\\\\\\\\\\\">\\\\\\\\n              <input\\\\\\\\n                type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n                placeholder=\\\\\\\\\\\\\\\"\\\\\\\\u{1f50d} Search Communities\\\\\\\\\\\\\\\"\\\\\\\\n                className=\\\\\\\\\\\\\\\"form-control w-100\\\\\\\\\\\\\\\"\\\\\\\\n                value={searchKey}\\\\\\\\n                onChange={(e) => setSearchKey(e.target.value)}\\\\\\\\n              />\\\\\\\\n              <select\\\\\\\\n                class=\\\\\\\\\\\\\\\"form-select\\\\\\\\\\\\\\\"\\\\\\\\n                onChange={(e) => setSort(e.target.value)}\\\\\\\\n              >\\\\\\\\n                <option selected value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\">\\\\\\\\n                  Sort\\\\\\\\n                </option>\\\\\\\\n                <option value=\\\\\\\\\\\\\\\"a-z\\\\\\\\\\\\\\\">A-Z</option>\\\\\\\\n                <option value=\\\\\\\\\\\\\\\"z-a\\\\\\\\\\\\\\\">Z-A</option>\\\\\\\\n              </select>\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column justify-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                <CTA onClick={() => setShowSpawner(!showSpawner)}>\\\\\\\\n                  <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill me-1\\\\\\\\\\\\\\\"></i> Create\\\\\\\\n                  Community\\\\\\\\n                </CTA>\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap align-content-start gap-4 p-4 w-100 h-100\\\\\\\\\\\\\\\">\\\\\\\\n        {showSpawner && (\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Spawner\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              data: null,\\\\\\\\n              onSubmit: onCommunitySubmit,\\\\\\\\n              onCancel: () => setShowSpawner(false),\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n        <CardGrid>\\\\\\\\n          {searchKey === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" && sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n            ? (communitiesMetadata ?? []).reverse().map((communityMetadata) => (\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Card\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    format: \\\\\\\\\\\\\\\"small\\\\\\\\\\\\\\\",\\\\\\\\n                    isBannerEnabled: false,\\\\\\\\n                    metadata: communityMetadata,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              ))\\\\\\\\n            : SortedAndFiltered(searchKey, sort).map((communityMetadata) => (\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Card\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    format: \\\\\\\\\\\\\\\"small\\\\\\\\\\\\\\\",\\\\\\\\n                    isBannerEnabled: false,\\\\\\\\n                    metadata: communityMetadata,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              ))}\\\\\\\\n        </CardGrid>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.island.banner\": {\"\": \"const imageLink =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafybeiap2mzwsly4apaldxguiunx4rjwqyadksj5yxuzwrww3kue3ao5qe\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst HeroSection = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  height: auto;\\\\\\\\n  z-index: 3;\\\\\\\\n  width: 70%;\\\\\\\\n  background: #00ec97;\\\\\\\\n  clip-path: polygon(0 0, 100% 0%, 75% 100%, 0% 100%);\\\\\\\\n\\\\\\\\n  padding-top: 2rem;\\\\\\\\n  padding-bottom: 2rem;\\\\\\\\n  padding-left: 3.375rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    width: 100%;\\\\\\\\n    padding: 1rem 1.5rem;\\\\\\\\n    clip-path: none;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Title = styled.h1`\\\\\\\\n  color: #f4f4f4;\\\\\\\\n  font-size: 4rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 100%; /* 88px */\\\\\\\\n  letter-spacing: -1.76px;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 2.25rem;\\\\\\\\n    letter-spacing: -0.72px;\\\\\\\\n    margin: 0;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  width: 100%;\\\\\\\\n  height: max-content;\\\\\\\\n  overflow: hidden;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    background: #f4f4f4;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ImageContainer = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  height: 100%;\\\\\\\\n  position: absolute;\\\\\\\\n  top: 0;\\\\\\\\n  right: 0;\\\\\\\\n  z-index: 1;\\\\\\\\n  background: transparent;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: none;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Image = styled.img`\\\\\\\\n  margin-left: 15.625rem;\\\\\\\\n  height: 100%;\\\\\\\\n  width: 100%;\\\\\\\\n  filter: grayscale(100%);\\\\\\\\n  object-fit: cover;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst MobileImage = styled.img`\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  width: 100%;\\\\\\\\n  height: 196px;\\\\\\\\n\\\\\\\\n  width: 100%;\\\\\\\\n  object-fit: cover;\\\\\\\\n  filter: grayscale(1);\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <HeroSection>\\\\\\\\n      <Title>\\\\\\\\n        The decentralized <br />\\\\\\\\n        <span style={{ color: \\\\\\\\\\\\\\\"#101820\\\\\\\\\\\\\\\" }}>home base</span> <br />\\\\\\\\n        for NEAR builders\\\\\\\\n      </Title>\\\\\\\\n    </HeroSection>\\\\\\\\n    <MobileImage src={imageLink} />\\\\\\\\n    <ImageContainer>\\\\\\\\n      <Image src={imageLink} />\\\\\\\\n    </ImageContainer>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6008258788024e+21
    }
  },
  {
    "id": "1336640102",
    "receipt_id": "BSCvo4AE58QtuVzTKa3E5fnrUxYiqT15PZ7rWHzuZch9",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "39Bqa9wBB1tAGQxKdgfuiDaThiTokNjrpHKWdHnyeLMR",
      "block_height": 104861458,
      "block_timestamp": 1699039197184771000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "DdkHKXzUxoXgmnAcPQKeiU8uMLkVzfd9shYSdDQqx2ci",
    "included_in_block_hash": "5UWf69yCwZyAisXenKKasLtnP2Z63vM1pWMrG1cCx7bB",
    "block_timestamp": "1699039195061467622",
    "block": {
      "block_height": 104861456
    },
    "receipt_conversion_tokens_burnt": "247836590697400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.877081411696257e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6008258788024e+21
    }
  },
  {
    "id": "1336648228",
    "receipt_id": "Dpk4Wh3hhiUTiciwmMaQtxzVysafc6ADaJuMRuugKw4J",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EFFzhYTqvG5SQtyZ1oZhTsH2BpVH6QbLG6KsfUaQWwQx",
      "block_height": 104861730,
      "block_timestamp": 1699039492070829600
    },
    "receipt_outcome": {
      "gas_burnt": 20537592724362,
      "tokens_burnt": 2.0537592724362e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "25m4tjFvxr5bVhmQUGsUM3ewvFL44WPHZn7i1B7wGWd6",
    "included_in_block_hash": "9cCDEP1KDMgtmMUv7YqrWN6fFdVHXZnEFJjFD6joKnco",
    "block_timestamp": "1699039490919072795",
    "block": {
      "block_height": 104861729
    },
    "receipt_conversion_tokens_burnt": "252492923252400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 1,
        "fee": 2.0537592724362e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.page.blog\": {\"\": \"const { id } = props;\\\\\\\\n\\\\\\\\nconst { Page } =\\\\\\\\n  VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blog.Page\\\\\\\\\\\\\\\") ||\\\\\\\\n  (() => <></>);\\\\\\\\n\\\\\\\\nif (id) {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Postv2\\\\\\\\\\\\\\\"\\\\\\\\n      props={{ postKey: id, template: (p) => <Page {...(p || {})} /> }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst HeaderContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  width: 100%;\\\\\\\\n  height: 60px;\\\\\\\\n  padding: 1rem 3rem;\\\\\\\\n  align-items: center;\\\\\\\\n  flex-shrink: 0;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.h2`\\\\\\\\n  color: #555555;\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.24px;\\\\\\\\n  margin: 0;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst BlogContainer = styled.div`\\\\\\\\n  padding: 1rem 3rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// I like that this reduces duplicate code with the Viewer, but I don\\\\\\\\\\\\'t like\\\\\\\\n// that \\\\\\\\\\\\\\\"Latest Blog Posts\\\\\\\\\\\\\\\" carries over... // TOOD: create a common blog\\\\\\\\n// feed... I think the addon.blog.Feed naming is confusing, as this should be a\\\\\\\\n// generic feed component.\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget src={`devhub.near/widget/devhub.components.island.banner`} />\\\\\\\\n    <HeaderContainer>\\\\\\\\n      <Header>/blog</Header>\\\\\\\\n    </HeaderContainer>\\\\\\\\n    <BlogContainer>\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blog.Viewer\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          handle: \\\\\\\\\\\\\\\"developer-dao\\\\\\\\\\\\\\\",\\\\\\\\n          hideTitle: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </BlogContainer>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.page.about\": {\"\": \"const PageHeader = styled.h2`\\\\\\\\n  color: #555555;\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.24px;\\\\\\\\n\\\\\\\\n  width: 100%;\\\\\\\\n  padding: 1rem 3.125rem;\\\\\\\\n  margin-left: auto;\\\\\\\\n  //background: #fff;\\\\\\\\n\\\\\\\\n  margin-top: 1.5rem;\\\\\\\\n  margin-bottom: 1.5rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 786px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Section = styled.div`\\\\\\\\n  padding: 1.5rem 8rem;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n\\\\\\\\n  gap: 2rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 786px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  h2 {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 2rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 2rem; /* 55.556% */\\\\\\\\n\\\\\\\\n    margin: 1rem;\\\\\\\\n    margin-left: 0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.25rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 150%;\\\\\\\\n    margin-bottom: 1rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  h3 {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.5rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 120%;\\\\\\\\n\\\\\\\\n    margin-top: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Widget src={`devhub.near/widget/devhub.components.island.banner`} />\\\\\\\\n    <Section>\\\\\\\\n      <h2>\\\\\\\\n        What is <span style={{ color: \\\\\\\\\\\\\\\"#00EC97\\\\\\\\\\\\\\\" }}>near</span>/dev/hub?\\\\\\\\n      </h2>\\\\\\\\n\\\\\\\\n      <div>\\\\\\\\n        <p>\\\\\\\\n          DevHub brings together individuals, projects, and organizations to\\\\\\\\n          build a decentralized NEAR developer ecosystem. We provide social\\\\\\\\n          structure and tools to fuel innovation, collaboration, and community\\\\\\\\n          within the NEAR ecosystem. Whether you\\\\\\\\u{2019}re a blockchain developer or\\\\\\\\n          advocate for the open web, DevHub is your gateway to making a\\\\\\\\n          meaningful impact on NEAR and beyond.\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Mission</h3>\\\\\\\\n        <p>\\\\\\\\n          Build a self-sufficient developer community to enable a thriving NEAR\\\\\\\\n          ecosystem.\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Values</h3>\\\\\\\\n        <p>\\\\\\\\n          <ul>\\\\\\\\n            <li>\\\\\\\\n              <b>Decentralized</b>: We are building together.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Transparent</b>: All decision making and communication is open.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Self-sufficient</b>: We do not critically depend on any single\\\\\\\\n              entity.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Robust</b>: Any role or team can be duplicated or replaced.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>High-velocity</b>: We need to move faster than classic OSS.\\\\\\\\n            </li>\\\\\\\\n          </ul>\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Scope</h3>\\\\\\\\n        <p>\\\\\\\\n          DevHub covers a wide range of areas to support the NEAR developer\\\\\\\\n          ecosystem, including:\\\\\\\\n          <ul>\\\\\\\\n            <li>\\\\\\\\n              <b>Developer Tooling</b>: Contributing code to the NEAR Platform\\\\\\\\n              (blockchain and devtools) and facilitating technical decisions\\\\\\\\n              with recognized experts based on the needs of the community and\\\\\\\\n              ecosystem.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Developer Relations</b>: Engaging with the community across\\\\\\\\n              various social channels, gathering feedback, and improving\\\\\\\\n              documentation.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Deep-Tech Awareness</b>: Working with marketing partners to\\\\\\\\n              create awareness on interesting projects and technology areas.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Events and Hackathons</b>: Organizing events and empowering\\\\\\\\n              community leaders with resources to grow their local communities.\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Education</b>: Partnering with universities across the globe to\\\\\\\\n              support students and scholars in exploring Web3 technologies\\\\\\\\n            </li>\\\\\\\\n            <li>\\\\\\\\n              <b>Platform</b>: Developing DevHub platform as a product to enable\\\\\\\\n              communities to collaborate and support each other.\\\\\\\\n            </li>\\\\\\\\n          </ul>\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Our Contributors</h3>\\\\\\\\n        <p>\\\\\\\\n          DevHub operates through DevDAO, which provides social structures to\\\\\\\\n          support developers. Within DevDAO, we have a dedicated core team of\\\\\\\\n          moderators and community contributors who work across the key areas\\\\\\\\n          above. We welcome contributions from any community members who want to\\\\\\\\n          join us in building our ecosystem and their own skills!\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Our Platform</h3>\\\\\\\\n        <p>\\\\\\\\n          Our main tool for interfacing is the DevHub Platform, where you can\\\\\\\\n          connect with others, share ideas and solutions, and access resources\\\\\\\\n          and support. You can also find communities working on a variety of\\\\\\\\n          areas, from protocol development to tooling and documentation.\\\\\\\\n        </p>\\\\\\\\n\\\\\\\\n        <h3>Join Us in Shaping NEAR\\\\\\\\u{2019}s Future</h3>\\\\\\\\n        <p>\\\\\\\\n          Regardless of your background or where you are on your developer\\\\\\\\n          journey, we\\\\\\\\u{2019}re happy you\\\\\\\\u{2019}re here! We hope you\\\\\\\\u{2019}ll explore, find your\\\\\\\\n          people, and discover paths to contribute that are most gratifying for\\\\\\\\n          you.\\\\\\\\n          <br />\\\\\\\\n          Let\\\\\\\\u{2019}s build the open web together.\\\\\\\\n        </p>\\\\\\\\n      </div>\\\\\\\\n    </Section>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.page.communities\": {\"\": \"const { getAllCommunitiesMetadata, createCommunity } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!getAllCommunitiesMetadata || !createCommunity) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst onCommunitySubmit = (inputs) =>\\\\\\\\n  createCommunity({\\\\\\\\n    inputs: {\\\\\\\\n      ...inputs,\\\\\\\\n\\\\\\\\n      bio_markdown: [\\\\\\\\n        \\\\\\\\\\\\\\\"This is a sample text about your community.\\\\\\\\\\\\\\\",\\\\\\\\n        \\\\\\\\\\\\\\\"You can change it on the community configuration page.\\\\\\\\\\\\\\\",\\\\\\\\n      ].join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"),\\\\\\\\n\\\\\\\\n      logo_url:\\\\\\\\n        \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreibysr2mkwhb4j36h2t7mqwhynqdy4vzjfygfkfg65kuspd2bawauu\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n      banner_url:\\\\\\\\n        \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  });\\\\\\\\n\\\\\\\\nconst [showSpawner, setShowSpawner] = useState(false);\\\\\\\\n\\\\\\\\nconst [searchKey, setSearchKey] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [sort, setSort] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst communitiesMetadata = getAllCommunitiesMetadata();\\\\\\\\n\\\\\\\\nif (!communitiesMetadata) {\\\\\\\\n  return <p>Loading...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst SortedAndFiltered = (searchKey, sortBy) => {\\\\\\\\n  let communities = (communitiesMetadata ?? []).reverse();\\\\\\\\n\\\\\\\\n  let filtered = [...communities];\\\\\\\\n  if (searchKey !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n    filtered = communities.filter((community) =>\\\\\\\\n      community.name.toLowerCase().includes(searchKey.toLowerCase())\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  let sortedCommunities = [...filtered];\\\\\\\\n  if (sortBy !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n    sortedCommunities.sort((a, b) => {\\\\\\\\n      let nameA = a.name.toLowerCase();\\\\\\\\n      let nameB = b.name.toLowerCase();\\\\\\\\n\\\\\\\\n      if (nameA < nameB) {\\\\\\\\n        return -1;\\\\\\\\n      }\\\\\\\\n      if (nameA > nameB) {\\\\\\\\n        return 1;\\\\\\\\n      }\\\\\\\\n      return 0;\\\\\\\\n    });\\\\\\\\n\\\\\\\\n    if (sortBy === \\\\\\\\\\\\\\\"z-a\\\\\\\\\\\\\\\") {\\\\\\\\n      sortedCommunities.reverse();\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return sortedCommunities;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CTA = styled.button`\\\\\\\\n  all: unset;\\\\\\\\n\\\\\\\\n  color: #f4f4f4;\\\\\\\\n\\\\\\\\n  font-size: 16px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 20px; /* 125% */\\\\\\\\n\\\\\\\\n  border-radius: 4px;\\\\\\\\n  background: #00ec97;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  padding: 14px 16px;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 8px;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background: #555555;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CardGrid = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  height: 100%;\\\\\\\\n\\\\\\\\n  display: grid;\\\\\\\\n  grid-template-columns: repeat(2, 1fr);\\\\\\\\n  gap: 3rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 1000px) {\\\\\\\\n    display: flex;\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n    gap: 2rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget src={`devhub.near/widget/devhub.components.island.banner`} />\\\\\\\\n    <div style={{ background: \\\\\\\\\\\\\\\"#f4f4f4\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"d-flex justify-content-between p-4\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ backgroundColor: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }}\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <h1\\\\\\\\n            className=\\\\\\\\\\\\\\\"m-0 fs-4\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ color: \\\\\\\\\\\\\\\"#555555\\\\\\\\\\\\\\\", fontSize: \\\\\\\\\\\\\\\"1.5rem\\\\\\\\\\\\\\\" }}\\\\\\\\n          >\\\\\\\\n            Communities\\\\\\\\n          </h1>\\\\\\\\n\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column-reverse flex-lg-row gap-3 justify-content-between align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-lg-row col-12 col-md-6 mt-3 mt-lg-0 align-items-center gap-4 col-lg-6\\\\\\\\\\\\\\\">\\\\\\\\n              <input\\\\\\\\n                type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n                placeholder=\\\\\\\\\\\\\\\"\\\\\\\\u{1f50d} Search Communities\\\\\\\\\\\\\\\"\\\\\\\\n                className=\\\\\\\\\\\\\\\"form-control w-100\\\\\\\\\\\\\\\"\\\\\\\\n                value={searchKey}\\\\\\\\n                onChange={(e) => setSearchKey(e.target.value)}\\\\\\\\n              />\\\\\\\\n              <select\\\\\\\\n                class=\\\\\\\\\\\\\\\"form-select\\\\\\\\\\\\\\\"\\\\\\\\n                onChange={(e) => setSort(e.target.value)}\\\\\\\\n              >\\\\\\\\n                <option selected value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\">\\\\\\\\n                  Sort\\\\\\\\n                </option>\\\\\\\\n                <option value=\\\\\\\\\\\\\\\"a-z\\\\\\\\\\\\\\\">A-Z</option>\\\\\\\\n                <option value=\\\\\\\\\\\\\\\"z-a\\\\\\\\\\\\\\\">Z-A</option>\\\\\\\\n              </select>\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column justify-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                <CTA onClick={() => setShowSpawner(!showSpawner)}>\\\\\\\\n                  <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill me-1\\\\\\\\\\\\\\\"></i> Create\\\\\\\\n                  Community\\\\\\\\n                </CTA>\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap align-content-start gap-4 p-4 w-100 h-100\\\\\\\\\\\\\\\">\\\\\\\\n        {showSpawner && (\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Spawner\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              data: null,\\\\\\\\n              onSubmit: onCommunitySubmit,\\\\\\\\n              onCancel: () => setShowSpawner(false),\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n        <CardGrid>\\\\\\\\n          {searchKey === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" && sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n            ? (communitiesMetadata ?? []).reverse().map((communityMetadata) => (\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Card\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    format: \\\\\\\\\\\\\\\"small\\\\\\\\\\\\\\\",\\\\\\\\n                    isBannerEnabled: false,\\\\\\\\n                    metadata: communityMetadata,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              ))\\\\\\\\n            : SortedAndFiltered(searchKey, sort).map((communityMetadata) => (\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Card\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    format: \\\\\\\\\\\\\\\"small\\\\\\\\\\\\\\\",\\\\\\\\n                    isBannerEnabled: false,\\\\\\\\n                    metadata: communityMetadata,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              ))}\\\\\\\\n        </CardGrid>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.island.explore\": {\"\": \"const Card = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  max-width: 20rem;\\\\\\\\n  max-height: 17.5rem;\\\\\\\\n  padding: 1.5rem;\\\\\\\\n  flex-direction: column;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n\\\\\\\\n  background: #fff;\\\\\\\\n  border-radius: 1rem;\\\\\\\\n\\\\\\\\n  h3 {\\\\\\\\n    color: #555555; //#00ec97;\\\\\\\\n    text-align: center;\\\\\\\\n    font-size: 1.5rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 120%; /* 28.8px */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    color: #555;\\\\\\\\n    text-align: center;\\\\\\\\n    font-size: 1rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 120%; /* 24px */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a {\\\\\\\\n    color: #555555; //#00ec97;\\\\\\\\n    text-align: center;\\\\\\\\n    font-size: 1.25rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 120%; /* 24px */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    h3 {\\\\\\\\n      font-size: 1.5rem;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    p,\\\\\\\\n    a {\\\\\\\\n      font-size: 1rem;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst SectionCard = ({ title, description, href }) => {\\\\\\\\n  return (\\\\\\\\n    <Card>\\\\\\\\n      <h3>{title}</h3>\\\\\\\\n      <p>{description}</p>\\\\\\\\n      <a href={href}>Learn more \\\\\\\\u{2192}</a>\\\\\\\\n    </Card>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Cards = [\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"217 Validators\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"to ensure security, liveness, and fault tolerance of the network\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"https://nearscope.net/\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"<1s, <1\\\\\\\\u{a2}\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Fast and cost-efficient transactions. 1s to update values with minimal fees\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"https://nearblocks.io/\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Awesome DevEx\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"NEAR lets developers innovate with familiar tools: TypeScript, Rust, Solidity\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"https://docs.near.org/\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Horizontal Scaling\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Nightshade ensures maximum performance thanks to its sharded design\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"https://docs.near.org/concepts/advanced/papers\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst CTA = styled.a`\\\\\\\\n  display: flex;\\\\\\\\n  padding: 0.875rem 1rem;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 0.5rem;\\\\\\\\n\\\\\\\\n  border-radius: 1rem;\\\\\\\\n  background: #00ec97;\\\\\\\\n\\\\\\\\n  color: #f4f4f4 !important;\\\\\\\\n  font-size: 1.5rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.03rem;\\\\\\\\n\\\\\\\\n  width: max-content;\\\\\\\\n  text-decoration: none;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n    background: #555555;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    color: #f4f4f4 !important;\\\\\\\\n    font-size: 1.125rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 120%; /* 24px */\\\\\\\\n    letter-spacing: -0.4px;\\\\\\\\n\\\\\\\\n    margin-left: auto;\\\\\\\\n    margin-right: auto;\\\\\\\\n\\\\\\\\n    display: flex;\\\\\\\\n    padding: 14px 16px;\\\\\\\\n    flex-direction: column;\\\\\\\\n    justify-content: center;\\\\\\\\n    align-items: flex-start;\\\\\\\\n    gap: 8px;\\\\\\\\n\\\\\\\\n    border-radius: 16px;\\\\\\\\n    background: #00ec97;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  gap: 3rem;\\\\\\\\n\\\\\\\\n  padding: 3rem;\\\\\\\\n  padding-top: 0;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1.5rem;\\\\\\\\n    padding-top: 0;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CardsContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  gap: 1.5rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: grid;\\\\\\\\n    grid-template-columns: 1fr 1fr;\\\\\\\\n    /* gap: 2.25rem; */\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Content = (\\\\\\\\n  <Container>\\\\\\\\n    <CardsContainer>\\\\\\\\n      {Cards.map((card) => (\\\\\\\\n        <SectionCard\\\\\\\\n          title={card.title}\\\\\\\\n          description={card.description}\\\\\\\\n          href={card.href}\\\\\\\\n          key={Math.random()}\\\\\\\\n        />\\\\\\\\n      ))}\\\\\\\\n    </CardsContainer>\\\\\\\\n    <CTA href=\\\\\\\\\\\\\\\"https://near.org/ecosystem\\\\\\\\\\\\\\\" target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\">\\\\\\\\n      Explore the Open Web on NEAR \\\\\\\\u{2192}\\\\\\\\n    </CTA>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Widget\\\\\\\\n    src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.island.home-section\\\\\\\\\\\\\\\"\\\\\\\\n    props={{\\\\\\\\n      title: \\\\\\\\\\\\\\\"/explore\\\\\\\\\\\\\\\",\\\\\\\\n      titleColor: \\\\\\\\\\\\\\\"#555555\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"NEAR Protocol is your fast, low-cost and reliable gateway to the Open Web\\\\\\\\\\\\\\\",\\\\\\\\n      children: Content,\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.island.support\": {\"\": \"const Items = [\\\\\\\\n  {\\\\\\\\n    heading: (\\\\\\\\n      <>\\\\\\\\n        Developer\\\\\\\\n        <br />\\\\\\\\n        Resources\\\\\\\\n      </>\\\\\\\\n    ),\\\\\\\\n    description: \\\\\\\\\\\\\\\"Learn the fundamentals of NEAR and build with confidence\\\\\\\\\\\\\\\",\\\\\\\\n    cta: {\\\\\\\\n      href: \\\\\\\\\\\\\\\"https://docs.near.org\\\\\\\\\\\\\\\",\\\\\\\\n      title: \\\\\\\\\\\\\\\"Read \\\\\\\\u{2197}\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    heading: <>Office Hours</>,\\\\\\\\n    description: (\\\\\\\\n      <>\\\\\\\\n        Need some help?\\\\\\\\n        <br /> DevRel contributors are available to answer your technical\\\\\\\\n        questions\\\\\\\\n      </>\\\\\\\\n    ),\\\\\\\\n    cta: {\\\\\\\\n      href: \\\\\\\\\\\\\\\"https://bit.ly/DevHubOfficeHrs\\\\\\\\\\\\\\\",\\\\\\\\n      title: \\\\\\\\\\\\\\\"Book a meeting \\\\\\\\u{2197}\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    heading: <>Get Funding</>,\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Explore funding opportunities from DevHub to fuel your vision\\\\\\\\\\\\\\\",\\\\\\\\n    cta: {\\\\\\\\n      href: \\\\\\\\\\\\\\\"https://near.social/devgovgigs.near/widget/app?page=community&handle=developer-dao&tab=Funding\\\\\\\\\\\\\\\",\\\\\\\\n      title: \\\\\\\\\\\\\\\"Learn more \\\\\\\\u{2197}\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst Circle = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  width: 18.75rem;\\\\\\\\n  height: 18.75rem;\\\\\\\\n  padding: 2.25rem;\\\\\\\\n  flex-direction: column;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 1rem;\\\\\\\\n  flex-shrink: 0;\\\\\\\\n\\\\\\\\n  border-radius: 22.5rem;\\\\\\\\n  border: 1px solid #00ec97;\\\\\\\\n  background: #f4f4f4;\\\\\\\\n\\\\\\\\n  h3 {\\\\\\\\n    color: #101820;\\\\\\\\n    text-align: center;\\\\\\\\n    font-size: 1.75rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 100%; /* 36px */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    color: #101820;\\\\\\\\n    text-align: center;\\\\\\\\n    font-size: 1.125rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 120%; /* 28.8px */\\\\\\\\n    letter-spacing: -0.72px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a {\\\\\\\\n    color: #555555;\\\\\\\\n    font-size: 1.125rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 120%; /* 28.8px */\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  padding: 3rem;\\\\\\\\n  padding-top: 0;\\\\\\\\n  margin-top: 1.5rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 786px) {\\\\\\\\n    padding: 1.5rem;\\\\\\\\n    padding-top: 0;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ItemsContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  flex-wrap: wrap;\\\\\\\\n  gap: 3rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    flex-direction: column;\\\\\\\\n    gap: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Content = (\\\\\\\\n  <Container>\\\\\\\\n    <ItemsContainer>\\\\\\\\n      {Items.map((it) => (\\\\\\\\n        <Circle key={Math.random()}>\\\\\\\\n          <h3>{it.heading}</h3>\\\\\\\\n          <p>{it.description}</p>\\\\\\\\n          <a href={it.cta.href}>{it.cta.title}</a>\\\\\\\\n        </Circle>\\\\\\\\n      ))}\\\\\\\\n    </ItemsContainer>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Widget\\\\\\\\n    src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.island.home-section\\\\\\\\\\\\\\\"\\\\\\\\n    props={{\\\\\\\\n      title: \\\\\\\\\\\\\\\"/get support\\\\\\\\\\\\\\\",\\\\\\\\n      children: Content,\\\\\\\\n      background: true,\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.feature.post-search.panel\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  tag: props.tag,\\\\\\\\n  term: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst updateInput = (term) => {\\\\\\\\n  State.update({\\\\\\\\n    term: term,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst buttonStyle = {\\\\\\\\n  backgroundColor: \\\\\\\\\\\\\\\"#0C7283\\\\\\\\\\\\\\\",\\\\\\\\n  color: \\\\\\\\\\\\\\\"#f3f3f3\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PageTitle = styled.h5`\\\\\\\\n  color: #555555;\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.24px;\\\\\\\\n\\\\\\\\n  margin: 0;\\\\\\\\n  margin-bottom: 1rem;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  padding: 24px;\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst PostContainer = styled.div`\\\\\\\\n  margin: 0 1rem;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst InputContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  position: relative;\\\\\\\\n  width: 25%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {!props.hideHeader && (\\\\\\\\n      <Container>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <PageTitle>Activity Feed</PageTitle>\\\\\\\\n          <div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-lg-row gap-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"position-absolute d-flex ps-3 flex-column h-100 justify-center\\\\\\\\\\\\\\\">\\\\\\\\n                  <i class=\\\\\\\\\\\\\\\"bi bi-search m-auto\\\\\\\\\\\\\\\"></i>\\\\\\\\n                </div>\\\\\\\\n                <input\\\\\\\\n                  type=\\\\\\\\\\\\\\\"search\\\\\\\\\\\\\\\"\\\\\\\\n                  className=\\\\\\\\\\\\\\\"ps-5 form-control border border-0\\\\\\\\\\\\\\\"\\\\\\\\n                  value={state.term ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n                  onChange={(e) => updateInput(e.target.value)}\\\\\\\\n                  onKeyDown={(e) => e.key == \\\\\\\\\\\\\\\"Enter\\\\\\\\\\\\\\\" && search()}\\\\\\\\n                  placeholder={props.placeholder ?? `Search by content`}\\\\\\\\n                />\\\\\\\\n              </InputContainer>\\\\\\\\n              <div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class=\\\\\\\\\\\\\\\"btn dropdown-toggle bg-white\\\\\\\\\\\\\\\"\\\\\\\\n                  type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n                  data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n                  aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  Sort{props.recency === \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\": All replies\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\": Latest\\\\\\\\\\\\\\\"}\\\\\\\\n                </button>\\\\\\\\n                <ul class=\\\\\\\\\\\\\\\"dropdown-menu px-2 shadow\\\\\\\\\\\\\\\">\\\\\\\\n                  <li>\\\\\\\\n                    <a\\\\\\\\n                      style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n                      class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n                      href={href({\\\\\\\\n                        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                        params: { page: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\" },\\\\\\\\n                      })}\\\\\\\\n                    >\\\\\\\\n                      Latest\\\\\\\\n                    </a>\\\\\\\\n                  </li>\\\\\\\\n                  <li>\\\\\\\\n                    <a\\\\\\\\n                      style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n                      class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n                      href={href({\\\\\\\\n                        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                        params: { page: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\", recency: \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\" },\\\\\\\\n                      })}\\\\\\\\n                    >\\\\\\\\n                      All replies\\\\\\\\n                    </a>\\\\\\\\n                  </li>\\\\\\\\n                </ul>\\\\\\\\n              </div>\\\\\\\\n              <div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.post-search.by-author\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    author: state.author,\\\\\\\\n                    onAuthorSearch: (author) => {\\\\\\\\n                      State.update({ author });\\\\\\\\n                    },\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div>\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.post-search.by-tag\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    tag: state.tag,\\\\\\\\n                    onTagSearch: (tag) => {\\\\\\\\n                      State.update({ tag });\\\\\\\\n                    },\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-row-reverse flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n                {props.children}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </Container>\\\\\\\\n    )}\\\\\\\\n    <PostContainer>\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.List\\\\\\\\\\\\\\\"\\\\\\\\n        props={{\\\\\\\\n          author: state.author,\\\\\\\\n          tag: state.tag,\\\\\\\\n          term: state.term,\\\\\\\\n          recency: props.recency,\\\\\\\\n          transactionHashes: props.transactionHashes,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </PostContainer>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.organism.Navbar\": {\"\": \"const page = props.page;\\\\\\\\n\\\\\\\\nconst [showMenu, setShowMenu] = useState(false);\\\\\\\\n\\\\\\\\nconst { href: linkHref } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst Logo = () => {\\\\\\\\n  const Wrapper = styled.div`\\\\\\\\n    @media screen and (max-width: 768px) {\\\\\\\\n      svg {\\\\\\\\n        width: 90px;\\\\\\\\n        height: 12px;\\\\\\\\n        transform: scale(1.5);\\\\\\\\n        margin-left: 1rem;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <Link\\\\\\\\n        to={linkHref({\\\\\\\\n          widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n          params: { page: \\\\\\\\\\\\\\\"home\\\\\\\\\\\\\\\" },\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <svg\\\\\\\\n          xmlns=\\\\\\\\\\\\\\\"http://www.w3.org/2000/svg\\\\\\\\\\\\\\\"\\\\\\\\n          width=\\\\\\\\\\\\\\\"180\\\\\\\\\\\\\\\"\\\\\\\\n          height=\\\\\\\\\\\\\\\"24\\\\\\\\\\\\\\\"\\\\\\\\n          viewBox=\\\\\\\\\\\\\\\"0 0 180 24\\\\\\\\\\\\\\\"\\\\\\\\n          fill=\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <g clip-path=\\\\\\\\\\\\\\\"url(#clip0_530_29)\\\\\\\\\\\\\\\">\\\\\\\\n            <path\\\\\\\\n              d=\\\\\\\\\\\\\\\"M8.62185 6.09766C11.8428 6.09766 14.5995 7.77588 14.5995 12.7821V20.8888H10.508V13.1803C10.508 10.7057 9.55041 9.39721 7.49016 9.39721C5.37187 9.39721 4.15313 10.8763 4.15313 13.4079V20.8888H0.0616455V6.26832H3.63081L4.00804 8.08877C4.96563 6.95099 6.32945 6.09766 8.62185 6.09766ZM23.911 21.0594C18.9489 21.0594 15.9601 18.1297 15.9601 13.607C15.9601 9.05588 19.007 6.09766 23.6208 6.09766C28.0895 6.09766 31.1073 8.82832 31.1654 13.1234C31.1654 13.5501 31.1364 14.0337 31.0493 14.4888H20.2257V14.6879C20.3128 16.7643 21.6766 18.0159 23.7369 18.0159C25.3909 18.0159 26.5516 17.3048 26.8998 15.9394H30.9332C30.4689 18.7839 27.8864 21.0594 23.911 21.0594ZM20.3128 11.8719H27.0449C26.7547 10.0799 25.5069 9.08432 23.6498 9.08432C21.8797 9.08432 20.5449 10.1368 20.3128 11.8719ZM47.0396 17.5039H47.5039V20.8888H45.4146C43.2963 20.8888 42.6289 19.8932 42.6579 18.4994C41.6133 20.1208 40.1044 21.0594 37.783 21.0594C34.562 21.0594 32.2406 19.5519 32.2406 16.7643C32.2406 13.6639 34.6201 11.9003 39.0888 11.9003H42.0486V11.1892C42.0486 9.88077 41.091 9.02743 39.3789 9.02743C37.783 9.02743 36.7093 9.73854 36.5352 10.8194H32.5888C32.879 7.97499 35.5486 6.09766 39.495 6.09766C43.6736 6.09766 46.082 7.9181 46.082 11.4168V16.5937C46.082 17.3617 46.4012 17.5039 47.0396 17.5039ZM42.0486 14.8585V14.5741H39.0598C37.3477 14.5741 36.3611 15.2568 36.3611 16.4799C36.3611 17.5039 37.2026 18.1581 38.5665 18.1581C40.7138 18.1581 42.0196 16.8497 42.0486 14.8585ZM56.8924 6.26832H57.5889V9.90921H55.9639C53.5264 9.90921 52.5978 11.5021 52.5978 13.7208V20.8888H48.5064V6.26832H52.2206L52.5978 8.45854C53.4103 7.1501 54.571 6.26832 56.8924 6.26832Z\\\\\\\\\\\\\\\"\\\\\\\\n              fill=\\\\\\\\\\\\\\\"#00EC97\\\\\\\\\\\\\\\"\\\\\\\\n            />\\\\\\\\n            <path\\\\\\\\n              d=\\\\\\\\\\\\\\\"M60.7221 23.961H59.2422L67.4542 0.124512H68.9341L60.7221 23.961ZM82.8081 8.08896V0.977843H86.8996V20.889H83.3304L82.9242 18.8694C81.9376 20.121 80.4867 21.0596 78.3394 21.0596C74.335 21.0596 71.4042 18.1867 71.4042 13.5503C71.4042 9.02762 74.335 6.09785 78.3104 6.09785C80.3706 6.09785 81.8505 6.89429 82.8081 8.08896ZM79.239 17.7885C81.4733 17.7885 82.8662 16.0818 82.8662 13.6072C82.8662 11.1041 81.4733 9.36896 79.239 9.36896C77.0046 9.36896 75.5827 11.0756 75.5827 13.5787C75.5827 16.0818 77.0046 17.7885 79.239 17.7885ZM96.2521 21.0596C91.2901 21.0596 88.3013 18.1298 88.3013 13.6072C88.3013 9.05607 91.3482 6.09785 95.962 6.09785C100.431 6.09785 103.449 8.82851 103.507 13.1236C103.507 13.5503 103.478 14.0338 103.39 14.489H92.5669V14.6881C92.6539 16.7645 94.0178 18.0161 96.078 18.0161C97.732 18.0161 98.8927 17.305 99.2409 15.9396H103.274C102.81 18.7841 100.228 21.0596 96.2521 21.0596ZM92.6539 11.8721H99.386C99.0959 10.0801 97.8481 9.08451 95.991 9.08451C94.2209 9.08451 92.8861 10.137 92.6539 11.8721ZM108.081 20.889L102.713 6.26851H107.094L110.692 16.793L114.233 6.26851H118.527L113.159 20.889H108.081ZM120.906 23.961H119.427L127.639 0.124512H129.118L120.906 23.961ZM140.671 6.09785C143.979 6.09785 146.707 7.83296 146.707 12.7823V20.889H142.615V13.1236C142.615 10.7343 141.629 9.3974 139.597 9.3974C137.508 9.3974 136.26 10.8765 136.26 13.3796V20.889H132.169V0.977843H136.26V8.06051C137.218 6.92273 138.553 6.09785 140.671 6.09785ZM158.367 13.5787V6.26851H162.459V20.889H158.832L158.454 19.1254C157.497 20.2632 156.191 21.0596 154.073 21.0596C150.997 21.0596 148.153 19.5521 148.153 14.3752V6.26851H152.245V13.8347C152.245 16.4516 153.115 17.7316 155.146 17.7316C157.178 17.7316 158.367 16.281 158.367 13.5787ZM173.022 6.09785C177.027 6.09785 179.928 8.91385 179.928 13.5503C179.928 18.073 177.027 21.0596 172.993 21.0596C170.846 21.0596 169.366 20.1494 168.408 18.8978L168.002 20.889H164.433V0.977843H168.524V8.1174C169.511 6.95118 170.962 6.09785 173.022 6.09785ZM172.094 17.7885C174.328 17.7885 175.779 16.0818 175.779 13.5787C175.779 11.0756 174.328 9.36896 172.094 9.36896C169.859 9.36896 168.466 11.0756 168.466 13.5503C168.466 16.0534 169.859 17.7885 172.094 17.7885Z\\\\\\\\\\\\\\\"\\\\\\\\n              fill=\\\\\\\\\\\\\\\"#151515\\\\\\\\\\\\\\\"\\\\\\\\n            />\\\\\\\\n          </g>\\\\\\\\n          <defs>\\\\\\\\n            <clipPath id=\\\\\\\\\\\\\\\"clip0_530_29\\\\\\\\\\\\\\\">\\\\\\\\n              <rect width=\\\\\\\\\\\\\\\"180\\\\\\\\\\\\\\\" height=\\\\\\\\\\\\\\\"24\\\\\\\\\\\\\\\" fill=\\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" />\\\\\\\\n            </clipPath>\\\\\\\\n          </defs>\\\\\\\\n        </svg>\\\\\\\\n      </Link>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst ProfileIcon = () => {\\\\\\\\n  const Wrapper = styled.svg`\\\\\\\\n    padding: 0.25rem;\\\\\\\\n    @media screen and (max-width: 768px) {\\\\\\\\n      display: none;\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n  return (\\\\\\\\n    <Link\\\\\\\\n      to={linkHref({\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: { page: \\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\\", accountId: context.accountId },\\\\\\\\n      })}\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.ProfileCard\\\\\\\\\\\\\\\"\\\\\\\\n        props={{ iconOnly: true, accountId: context.accountId || null }}\\\\\\\\n      />\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst MenuIcon = () => (\\\\\\\\n  <svg\\\\\\\\n    xmlns=\\\\\\\\\\\\\\\"http://www.w3.org/2000/svg\\\\\\\\\\\\\\\"\\\\\\\\n    width=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n    height=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n    viewBox=\\\\\\\\\\\\\\\"0 0 16 16\\\\\\\\\\\\\\\"\\\\\\\\n    fill=\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ height: 20, width: 20 }}\\\\\\\\n  >\\\\\\\\n    <path\\\\\\\\n      fill-rule=\\\\\\\\\\\\\\\"evenodd\\\\\\\\\\\\\\\"\\\\\\\\n      clip-rule=\\\\\\\\\\\\\\\"evenodd\\\\\\\\\\\\\\\"\\\\\\\\n      d=\\\\\\\\\\\\\\\"M2 12.2986H14V13.3732H2V12.2986ZM2 9.07471H14V10.1493H2V9.07471ZM2 5.85083H14V6.92546H2V5.85083ZM2 2.62695H14V3.70158H2V2.62695Z\\\\\\\\\\\\\\\"\\\\\\\\n      fill=\\\\\\\\\\\\\\\"#818181\\\\\\\\\\\\\\\"\\\\\\\\n    />\\\\\\\\n  </svg>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Navbar = styled.div`\\\\\\\\n  padding: 1.5rem 3rem;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n\\\\\\\\n  background: #f4f4f4;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1.875rem 1.375rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinksContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 1.5rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: none;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst MobileMenu = styled.button`\\\\\\\\n  all: unset;\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst links = [\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"/communities\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"communities\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"/activity feed\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"/about\\\\\\\\\\\\\\\",\\\\\\\\n    links: [\\\\\\\\n      { title: \\\\\\\\\\\\\\\"mission\\\\\\\\\\\\\\\", href: \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\" },\\\\\\\\n      { title: \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\", href: \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\" },\\\\\\\\n      { title: \\\\\\\\\\\\\\\"newsletter\\\\\\\\\\\\\\\", href: \\\\\\\\\\\\\\\"https://newsletter.neardevhub.org\\\\\\\\\\\\\\\" },\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"calendar\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"https://calendar.google.com/calendar/embed?height=600&wkst=2&bgcolor=%23ffffff&ctz=UTC&title&showNav=1&showDate=1&mode=AGENDA&showPrint=0&src=Y19mNTRlZDM3ZmQ5MjMyN2FjZGM3ZTQzNDNmZTQwNzIyYWU1Nzk3YjZjODI5MjliYTkzZTlmM2E4OWM2OTY1N2FiQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20&color=%23616161\\\\\\\\\\\\\\\",\\\\\\\\n      },\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"brand kit\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"https://drive.google.com/drive/folders/1C0GMmGq3MzbVPpxvf9807IU-7kpc2_v5?usp=sharing\\\\\\\\\\\\\\\",\\\\\\\\n      },\\\\\\\\n    ],\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst MobileNav = styled.div`\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: flex;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  position: absolute;\\\\\\\\n  top: 0;\\\\\\\\n  right: 0;\\\\\\\\n\\\\\\\\n  width: 207px;\\\\\\\\n\\\\\\\\n  padding: 24px 36px 36px 16px;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: flex-end;\\\\\\\\n  gap: 2.5rem;\\\\\\\\n  flex-shrink: 0;\\\\\\\\n\\\\\\\\n  border-radius: 0px 0px 0px 16px;\\\\\\\\n  background: rgba(41, 41, 41, 0.6);\\\\\\\\n  backdrop-filter: blur(5px);\\\\\\\\n\\\\\\\\n  z-index: 50;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst MobileLink = styled.a`\\\\\\\\n  color: #f4f4f4 !important;\\\\\\\\n  font-size: 20px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 20px; /* 100% */\\\\\\\\n  margin-bottom: 1rem;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    color: #555555 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n    color: #096d50 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Navbar className=\\\\\\\\\\\\\\\"position-relative\\\\\\\\\\\\\\\">\\\\\\\\n    <Logo />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <LinksContainer>\\\\\\\\n        {links.map((link) => (\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.NavbarDropdown\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              title: link.title,\\\\\\\\n              href: link.href,\\\\\\\\n              links: link.links,\\\\\\\\n              page: page,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        ))}\\\\\\\\n      </LinksContainer>\\\\\\\\n      {context.accountId && <ProfileIcon />}\\\\\\\\n      <MobileMenu onClick={() => setShowMenu(!showMenu)}>\\\\\\\\n        <MenuIcon />\\\\\\\\n      </MobileMenu>\\\\\\\\n    </div>\\\\\\\\n    {showMenu && (\\\\\\\\n      <MobileNav>\\\\\\\\n        <div\\\\\\\\n          onClick={() => setShowMenu(!showMenu)}\\\\\\\\n          style={{ cursor: \\\\\\\\\\\\\\\"pointer\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-x\\\\\\\\\\\\\\\" style={{ fontSize: 20, color: \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\" }}></i>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n          {links.map((link, idx) =>\\\\\\\\n            link.href ? (\\\\\\\\n              <MobileLink\\\\\\\\n                key={`mobile-link-${idx}`}\\\\\\\\n                className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                href={`/devhub.near/widget/app?page=${link.href}`}\\\\\\\\n              >\\\\\\\\n                {link.title}\\\\\\\\n              </MobileLink>\\\\\\\\n            ) : (\\\\\\\\n              link.links.map((it, idx) => (\\\\\\\\n                <MobileLink\\\\\\\\n                  key={`nested-link-${idx}`}\\\\\\\\n                  className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                  href={`/devhub.near/widget/app?page=${it.href}`}\\\\\\\\n                >\\\\\\\\n                  {it.title}\\\\\\\\n                </MobileLink>\\\\\\\\n              ))\\\\\\\\n            )\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </MobileNav>\\\\\\\\n    )}\\\\\\\\n  </Navbar>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.island.participate\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  margin-top: 2.25rem;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    flex-direction: column;\\\\\\\\n    margin-top: 0;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinkItem = styled.a`\\\\\\\\n  color: #00ec97;\\\\\\\\n  font-size: 1.25rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n    color: #096d50;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Links = [\\\\\\\\n  {\\\\\\\\n    links: [\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"Ideate on Devhub\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"https://www.neardevgov.org/blog/how-to-ideate-on-dev-hub\\\\\\\\\\\\\\\",\\\\\\\\n        count: 1,\\\\\\\\n      },\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"Post a Proposal\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"https://www.neardevgov.org/blog/how-to-post-proposals-on-devhub\\\\\\\\\\\\\\\",\\\\\\\\n        count: 4,\\\\\\\\n      },\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"Host an Event\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"https://near.social/devgovgigs.near/widget/app?page=community&handle=hacks&tab=Wiki%202\\\\\\\\\\\\\\\",\\\\\\\\n        count: 7,\\\\\\\\n      },\\\\\\\\n    ],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    links: [\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"Improve NEAR Docs\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"https://github.com/near/docs\\\\\\\\\\\\\\\",\\\\\\\\n        count: 2,\\\\\\\\n      },\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"Join the Fellowship\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"https://near.social/devgovgigs.near/widget/app?page=community&handle=fellowship&tab=Wiki%201\\\\\\\\\\\\\\\",\\\\\\\\n        count: 5,\\\\\\\\n      },\\\\\\\\n    ],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    links: [\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"Join NEAR Campus\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"https://near.social/devgovgigs.near/widget/app?page=community&handle=near-campus\\\\\\\\\\\\\\\",\\\\\\\\n        count: 3,\\\\\\\\n      },\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"Dive into Hackbox\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"https://near.social/hackbox.near/widget/home\\\\\\\\\\\\\\\",\\\\\\\\n        count: 6,\\\\\\\\n      },\\\\\\\\n    ],\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst CTA = styled.a`\\\\\\\\n  display: flex;\\\\\\\\n  padding: 0.875rem 1rem;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 0.5rem;\\\\\\\\n\\\\\\\\n  border-radius: 1rem;\\\\\\\\n  background: #00ec97;\\\\\\\\n\\\\\\\\n  color: #f4f4f4 !important;\\\\\\\\n  font-size: 1.5rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.03rem;\\\\\\\\n\\\\\\\\n  width: max-content;\\\\\\\\n  margin-top: 1.5rem;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background: #555555;\\\\\\\\n    text-decoration: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    color: #f4f4f4 !important;\\\\\\\\n    font-size: 20px;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 120%; /* 24px */\\\\\\\\n\\\\\\\\n    display: flex;\\\\\\\\n    padding: 14px 16px;\\\\\\\\n    align-items: center;\\\\\\\\n    gap: 8px;\\\\\\\\n\\\\\\\\n    border-radius: 16px;\\\\\\\\n    background: #555555;\\\\\\\\n\\\\\\\\n    &:hover {\\\\\\\\n      //background: #555555;\\\\\\\\n      text-decoration: none;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst SectionPadding = styled.div`\\\\\\\\n  padding: 3rem;\\\\\\\\n  padding-top: 0;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n    padding-top: 0;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinksContainer = styled.div`\\\\\\\\n  width: 30%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    width: 100%;\\\\\\\\n    margin-bottom: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Content = (\\\\\\\\n  <SectionPadding>\\\\\\\\n    <Container>\\\\\\\\n      {Links.map((it) => (\\\\\\\\n        <LinksContainer key={Math.random()}>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-md-2\\\\\\\\\\\\\\\">\\\\\\\\n            {it.links.map((link) => (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-row\\\\\\\\\\\\\\\">\\\\\\\\n                <span\\\\\\\\n                  style={{\\\\\\\\n                    color: \\\\\\\\\\\\\\\"#555555\\\\\\\\\\\\\\\",\\\\\\\\n                    border: \\\\\\\\\\\\\\\"2px #555555 solid\\\\\\\\\\\\\\\",\\\\\\\\n                    fontSize: 12,\\\\\\\\n                    padding: 4,\\\\\\\\n                    width: 22,\\\\\\\\n                    height: 22,\\\\\\\\n                  }}\\\\\\\\n                  className=\\\\\\\\\\\\\\\"rounded-circle d-flex align-items-center justify-content-center me-1\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {link.count}\\\\\\\\n                </span>{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                <LinkItem href={link.href} target=\\\\\\\\\\\\\\\"no_blank\\\\\\\\\\\\\\\">\\\\\\\\n                  {link.title}\\\\\\\\n                </LinkItem>\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        </LinksContainer>\\\\\\\\n      ))}\\\\\\\\n    </Container>\\\\\\\\n\\\\\\\\n    <Link\\\\\\\\n      to={href({\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: { page: \\\\\\\\\\\\\\\"contribute\\\\\\\\\\\\\\\" },\\\\\\\\n      })}\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <CTA>Learn more \\\\\\\\u{2192}</CTA>\\\\\\\\n    </Link>\\\\\\\\n  </SectionPadding>\\\\\\\\n);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Widget\\\\\\\\n    src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.island.home-section\\\\\\\\\\\\\\\"\\\\\\\\n    props={{\\\\\\\\n      title: \\\\\\\\\\\\\\\"/participate\\\\\\\\\\\\\\\",\\\\\\\\n      titleColor: \\\\\\\\\\\\\\\"#555555\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"There are many ways to start your contribution journey. You can:\\\\\\\\\\\\\\\",\\\\\\\\n      children: Content,\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.molecule.PostControls\": {\"\": \"const { className, title, icon, href, onClick } = props;\\\\\\\\n\\\\\\\\nconst Button = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 8px;\\\\\\\\n\\\\\\\\n  border-radius: 4px;\\\\\\\\n  background: #00ec97;\\\\\\\\n\\\\\\\\n  color: #f4f4f4;\\\\\\\\n  font-size: 16px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 20px; /* 125% */\\\\\\\\n\\\\\\\\n  padding: 0.5rem 1rem;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background: #555555;\\\\\\\\n    text-decoration: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  outline: none;\\\\\\\\n  border: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className={`d-flex flex-row-reverse ${props.className}`}>\\\\\\\\n    {props.href ? (\\\\\\\\n      <Link to={props.href} style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n        <Button>\\\\\\\\n          <i className={props.icon ? props.icon : \\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"}></i>\\\\\\\\n          {props.title}\\\\\\\\n        </Button>\\\\\\\\n      </Link>\\\\\\\\n    ) : (\\\\\\\\n      <Button onClick={props.onClick}>\\\\\\\\n        <i className={props.icon ? props.icon : \\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"}></i>\\\\\\\\n        {props.title || \\\\\\\\\\\\\\\"Post\\\\\\\\\\\\\\\"}\\\\\\\\n      </Button>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.molecule.NavbarDropdown\": {\"\": \"const title = props.title;\\\\\\\\nconst links = props.links;\\\\\\\\nconst href = props.href;\\\\\\\\n\\\\\\\\nconst [showMenu, setShowMenu] = useState(false);\\\\\\\\n\\\\\\\\nconst { href: linkHref } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst Dropdown = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: center;\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    &.active {\\\\\\\\n      color: #fff;\\\\\\\\n\\\\\\\\n      &:hover {\\\\\\\\n        text-decoration: none;\\\\\\\\n        color: #096d50 !important;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst DropdownMenu = styled.div`\\\\\\\\n  z-index: 50;\\\\\\\\n  position: absolute;\\\\\\\\n  top: 2.25rem;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    padding: 0.5rem 1rem;\\\\\\\\n    padding-top: 1rem;\\\\\\\\n    border-radius: 1rem;\\\\\\\\n    background: rgba(217, 217, 217, 0.7);\\\\\\\\n    backdrop-filter: blur(5px);\\\\\\\\n    width: max-content;\\\\\\\\n    animation: slide-down 300ms ease;\\\\\\\\n    transform-origin: top center;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @keyframes slide-down {\\\\\\\\n    0% {\\\\\\\\n      transform: scaleY(0);\\\\\\\\n    }\\\\\\\\n    100% {\\\\\\\\n      transform: scaleY(1);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst DropdownLink = styled.div`\\\\\\\\n  color: inherit;\\\\\\\\n  text-decoration: none;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    color: #555555;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n    color: #096d50 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Dropdown\\\\\\\\n    onMouseEnter={() => setShowMenu(true)}\\\\\\\\n    onMouseLeave={() => setShowMenu(false)}\\\\\\\\n  >\\\\\\\\n    {href ? (\\\\\\\\n      <DropdownLink className={href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"} href={href}>\\\\\\\\n        <Link\\\\\\\\n          style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n          to={linkHref({\\\\\\\\n            widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n            params: { page: href },\\\\\\\\n          })}\\\\\\\\n        >\\\\\\\\n          {title}\\\\\\\\n        </Link>\\\\\\\\n      </DropdownLink>\\\\\\\\n    ) : (\\\\\\\\n      <p className={`m-0 py-2 nav-dropdown`} style={{ cursor: \\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {title} \\\\\\\\u{2193}\\\\\\\\n      </p>\\\\\\\\n    )}\\\\\\\\n    {showMenu && links.length !== 0 && (\\\\\\\\n      <DropdownMenu className={`${showMenu && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}`}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n          {links.map((link) => (\\\\\\\\n            // Check if the link is external\\\\\\\\n            <DropdownLink\\\\\\\\n              className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n              key={`${link.title}-${link.href}`}\\\\\\\\n            >\\\\\\\\n              {link.href.startsWith(\\\\\\\\\\\\\\\"http://\\\\\\\\\\\\\\\") ||\\\\\\\\n              link.href.startsWith(\\\\\\\\\\\\\\\"https://\\\\\\\\\\\\\\\") ? (\\\\\\\\n                // External link: Render an <a> tag\\\\\\\\n                <a\\\\\\\\n                  href={link.href}\\\\\\\\n                  style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n                  target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {link.title}\\\\\\\\n                </a>\\\\\\\\n              ) : (\\\\\\\\n                // Internal link: Render the <Link> component\\\\\\\\n                <Link\\\\\\\\n                  style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n                  to={linkHref({\\\\\\\\n                    widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                    params: { page: link.href },\\\\\\\\n                  })}\\\\\\\\n                >\\\\\\\\n                  {link.title}\\\\\\\\n                </Link>\\\\\\\\n              )}\\\\\\\\n            </DropdownLink>\\\\\\\\n          ))}\\\\\\\\n        </div>\\\\\\\\n      </DropdownMenu>\\\\\\\\n    )}\\\\\\\\n  </Dropdown>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.3062521956886e+21
    }
  },
  {
    "id": "1336648261",
    "receipt_id": "AAGztK9ctiMC3rW5Md3QCqbmv4QoAfS7fvqVdnWd4RR9",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9QYoPEwpfFnmFeYZ5iVWhfW5s9Uotdp54W5fE68cq1Ux",
      "block_height": 104861731,
      "block_timestamp": 1699039493041574000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "25m4tjFvxr5bVhmQUGsUM3ewvFL44WPHZn7i1B7wGWd6",
    "included_in_block_hash": "9cCDEP1KDMgtmMUv7YqrWN6fFdVHXZnEFJjFD6joKnco",
    "block_timestamp": "1699039490919072795",
    "block": {
      "block_height": 104861729
    },
    "receipt_conversion_tokens_burnt": "252492923252400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.870364751343983e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.3062521956886e+21
    }
  },
  {
    "id": "1336669169",
    "receipt_id": "dnw46nQ9ktZXZ1kG9htqygMxfMk2BZzNo9fyeDJcmHN",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "HRaXAVvfnwouXdir2v7gncxL1qrAUyL5DaNqgTijoBHU",
      "block_height": 104862499,
      "block_timestamp": 1699040327331707600
    },
    "receipt_outcome": {
      "gas_burnt": 3625291495678,
      "tokens_burnt": 362529149567800000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "32tqKvKEfkmBWV49DodQjFsG5jsfyqMHoFx4khPrg6K1",
    "included_in_block_hash": "4bqVwzR8r7zxD7HVAhgT2H7LVr6r1cMYrzrE9jBCQ3ZH",
    "block_timestamp": "1699040326000365147",
    "block": {
      "block_height": 104862498
    },
    "receipt_conversion_tokens_burnt": "242801714516200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "storage_deposit",
        "deposit": 2e+24,
        "fee": 362529149567800000000,
        "args": "{\"account_id\": \"devhub.near\"}"
      }
    ],
    "actions_agg": {
      "deposit": 2e+24
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 605330864084000000000
    }
  },
  {
    "id": "1336669201",
    "receipt_id": "5bspU5LWJVVdk7J3h4emqXAbnJocL5AZChVwbZo5ajHm",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "28Lqo33iC4VAUcGM6eTkPScq1FKwn4ZosauWZ7aRZG9A",
      "block_height": 104862500,
      "block_timestamp": 1699040328627389000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "32tqKvKEfkmBWV49DodQjFsG5jsfyqMHoFx4khPrg6K1",
    "included_in_block_hash": "4bqVwzR8r7zxD7HVAhgT2H7LVr6r1cMYrzrE9jBCQ3ZH",
    "block_timestamp": "1699040326000365147",
    "block": {
      "block_height": 104862498
    },
    "receipt_conversion_tokens_burnt": "242801714516200000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 6.894734609787612e+21,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 2e+24
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 605330864084000000000
    }
  },
  {
    "id": "1336694601",
    "receipt_id": "D2XLsZ6akrqfoayTWWcBagcoQQhxfy6DykAAZjDqgScE",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "BCBkEhNFFyHyavdLmT4Cr346CRTK1CdmQXW29AM5SeDm",
      "block_height": 104863483,
      "block_timestamp": 1699041391296983600
    },
    "receipt_outcome": {
      "gas_burnt": 210284826324,
      "tokens_burnt": 21028482632400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "Gx5y87jjrEFsZZfNimqYtVLfSW8zsvtJgFnfjEaZNqKy",
    "included_in_block_hash": "BCBkEhNFFyHyavdLmT4Cr346CRTK1CdmQXW29AM5SeDm",
    "block_timestamp": "1699041391296983507",
    "block": {
      "block_height": 104863483
    },
    "receipt_conversion_tokens_burnt": "21028482632400000000",
    "actions": [
      {
        "action": "ADD_KEY",
        "method": null,
        "deposit": 0,
        "fee": 21028482632400000000,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 42056965264800000000
    }
  },
  {
    "id": "1336729819",
    "receipt_id": "EGsGESVaX3X5hCa6zF35TuS5FNfW1H9vYJLsQ9pJhw25",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "98y1onZEqqPNCyLWEDudCHsKouoL2LSdqDhpzQSBtpiG",
      "block_height": 104864432,
      "block_timestamp": 1699042435485485300
    },
    "receipt_outcome": {
      "gas_burnt": 22473139517992,
      "tokens_burnt": 2.2473139517992e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "GAsWKEtJ5rxpCde5MrVypZY11bGGvhn7WLG9fSv52cqk",
    "included_in_block_hash": "HMcKtXtDGCQAD3Zw6K457KAQ49seETLnVb84Xtg8yTqf",
    "block_timestamp": "1699042434561720637",
    "block": {
      "block_height": 104864431
    },
    "receipt_conversion_tokens_burnt": "252726578355400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 1,
        "fee": 2.2473139517992e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.page.blog\": {\"\": \"const { id } = props;\\\\\\\\n\\\\\\\\nconst { Page } =\\\\\\\\n  VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blog.Page\\\\\\\\\\\\\\\") ||\\\\\\\\n  (() => <></>);\\\\\\\\n\\\\\\\\nif (id) {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Postv2\\\\\\\\\\\\\\\"\\\\\\\\n      props={{ postKey: id, template: (p) => <Page {...(p || {})} /> }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst HeaderContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  width: 100%;\\\\\\\\n  height: 60px;\\\\\\\\n  padding: 1rem 3rem;\\\\\\\\n  align-items: center;\\\\\\\\n  flex-shrink: 0;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.h1`\\\\\\\\n  color: #555555;\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 500;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.24px;\\\\\\\\n  margin: 0;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst BlogContainer = styled.div`\\\\\\\\n  padding: 1rem 3rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// I like that this reduces duplicate code with the Viewer, but I don\\\\\\\\\\\\'t like\\\\\\\\n// that \\\\\\\\\\\\\\\"Latest Blog Posts\\\\\\\\\\\\\\\" carries over... // TOOD: create a common blog\\\\\\\\n// feed... I think the addon.blog.Feed naming is confusing, as this should be a\\\\\\\\n// generic feed component.\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget src={`devhub.near/widget/devhub.components.island.banner`} />\\\\\\\\n    <HeaderContainer>\\\\\\\\n      <Header>Blog</Header>\\\\\\\\n    </HeaderContainer>\\\\\\\\n    <BlogContainer>\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blog.Viewer\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          handle: \\\\\\\\\\\\\\\"developer-dao\\\\\\\\\\\\\\\",\\\\\\\\n          hideTitle: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </BlogContainer>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.page.contribute\": {\"\": \"const Header = styled.div`\\\\\\\\n  //background: white;\\\\\\\\n  padding: 1rem 3.125rem;\\\\\\\\n  width: 100%;\\\\\\\\n  margin: 24px;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin: 1rem 0;\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst PageHeader = styled.h1`\\\\\\\\n  color: #555555;\\\\\\\\n  font-size: 1.5rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 500;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.24px;\\\\\\\\n  margin: 0;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Lead = styled.h5`\\\\\\\\n  color: #151515;\\\\\\\\n  font-size: 2.5rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 120%; /* 48px */\\\\\\\\n  margin: 2.25rem 8rem;\\\\\\\\n  margin-top: 0;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 1.75rem;\\\\\\\\n    margin: 1rem;\\\\\\\\n    margin-top: 0;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  padding: 2.25rem 8rem;\\\\\\\\n  width: 100%;\\\\\\\\n  //background-color: white;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst actions = [\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Ideate on Devhub\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"The first step in any NEAR ecosystem project is ideation. It is crucial to have a way to find people to share and explore ideas with, partly because it can save a lot of time based on prior discussions. But also because it can you gauge support from a diversity of stakeholders.\\\\\\\\\\\\\\\",\\\\\\\\n    ctaAction: \\\\\\\\\\\\\\\"Learn More \\\\\\\\u{2192}\\\\\\\\\\\\\\\",\\\\\\\\n    ctaLink: \\\\\\\\\\\\\\\"/devhub.near/widget/app?page=blog&id=2029\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Post a Proposal\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"If you have already nurtured and refined your idea, you\\\\\\\\\\\\'re ready to draft and post your funding proposal.This guide is here to help you craft a compelling, convincing, and concise proposal that will capture the interest of potential funders.\\\\\\\\\\\\\\\",\\\\\\\\n    ctaAction: \\\\\\\\\\\\\\\"Learn More \\\\\\\\u{2192}\\\\\\\\\\\\\\\",\\\\\\\\n    ctaLink: \\\\\\\\\\\\\\\"/devhub.near/widget/app?page=blog&id=2035\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Host an Event\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"We are always on the lookout for events that align with our mission and provide value to the NEAR ecosystem. If you are organizing such an event, we would love to hear from you! Below is a guide on how to submit a sponsorship proposal to us.\\\\\\\\\\\\\\\",\\\\\\\\n    ctaAction: \\\\\\\\\\\\\\\"Learn More \\\\\\\\u{2192}\\\\\\\\\\\\\\\",\\\\\\\\n    ctaLink: \\\\\\\\\\\\\\\"/devhub.near/widget/app?page=community&handle=hacks&tab=Wiki%202\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Improve NEAR Docs\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"NEAR documentation is an open source repository that anyone can fork, extend and contribute to by creating pull requests. To get started, head over to our github repository and checkout how you can make your first contribution. \\\\\\\\\\\\\\\",\\\\\\\\n    ctaAction: \\\\\\\\\\\\\\\"Learn More \\\\\\\\u{2192}\\\\\\\\\\\\\\\",\\\\\\\\n    ctaLink: \\\\\\\\\\\\\\\"https://github.com/near/docs\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Join the Fellowship\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"As the NEAR ecosystem grows rapidly, there is an increasing need to improve developer productivity. The DevDAO NEAR Platform Fellowship Program aims to solve this issue by providing guidance to new contributors from experienced developers.\\\\\\\\\\\\\\\",\\\\\\\\n    ctaAction: \\\\\\\\\\\\\\\"Learn More \\\\\\\\u{2192}\\\\\\\\\\\\\\\",\\\\\\\\n    ctaLink:\\\\\\\\n      \\\\\\\\\\\\\\\"/devhub.near/widget/app?page=community&handle=fellowship&tab=Wiki 1\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Join NEAR Campus\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"DevHub\\\\\\\\u{2019}s NEAR Campus supports existing student clubs, researchers, and faculties in blockchain technologies, enhancing both curricular and extracurricular activities. We aim to merge blockchain education with mainstream academics.\\\\\\\\\\\\\\\",\\\\\\\\n    ctaAction: \\\\\\\\\\\\\\\"Learn More \\\\\\\\u{2192}\\\\\\\\\\\\\\\",\\\\\\\\n    ctaLink: \\\\\\\\\\\\\\\"/devhub.near/widget/app?page=community&handle=near-campus\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Dive into Hackbox\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Hackbox is a revolutionary plug-and-play solution designed to empower local leads and community stewards in hosting hackathons easily and efficiently.\\\\\\\\\\\\\\\",\\\\\\\\n    ctaAction: \\\\\\\\\\\\\\\"Learn More \\\\\\\\u{2192}\\\\\\\\\\\\\\\",\\\\\\\\n    ctaLink: \\\\\\\\\\\\\\\"/hackbox.near/widget/home\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst Card = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  gap: 0.5rem;\\\\\\\\n\\\\\\\\n  h5 {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 1.75rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 120%; /* 43.2px */\\\\\\\\n\\\\\\\\n    display: flex;\\\\\\\\n    align-items: center;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    color: #000;\\\\\\\\n    font-size: 1rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 120%; /* 28.8px */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a {\\\\\\\\n    color: #f4f4f4;\\\\\\\\n    font-size: 1rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 120%; /* 28.8px */\\\\\\\\n    letter-spacing: -0.48px;\\\\\\\\n\\\\\\\\n    display: flex;\\\\\\\\n    padding: 0.5rem 1rem;\\\\\\\\n    align-items: center;\\\\\\\\n    gap: 8px;\\\\\\\\n\\\\\\\\n    border-radius: 0.5rem;\\\\\\\\n    background: #00ec97;\\\\\\\\n\\\\\\\\n    width: max-content;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nconst ActionCard = ({ action, index }) => {\\\\\\\\n  return (\\\\\\\\n    <Card>\\\\\\\\n      <h5>\\\\\\\\n        <span\\\\\\\\n          style={{\\\\\\\\n            color: \\\\\\\\\\\\\\\"#151515\\\\\\\\\\\\\\\",\\\\\\\\n            border: \\\\\\\\\\\\\\\"2px #151515 solid\\\\\\\\\\\\\\\",\\\\\\\\n            fontSize: 12,\\\\\\\\n            padding: 4,\\\\\\\\n            width: 22,\\\\\\\\n            height: 22,\\\\\\\\n          }}\\\\\\\\n          className=\\\\\\\\\\\\\\\"rounded-circle d-flex align-items-center justify-content-center me-1\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          {index + 1}\\\\\\\\n        </span>\\\\\\\\n        {action.title}\\\\\\\\n      </h5>\\\\\\\\n      <p>{action.description}</p>\\\\\\\\n      <a href={action.ctaLink} target=\\\\\\\\\\\\\\\"no_blank\\\\\\\\\\\\\\\">\\\\\\\\n        {action.ctaAction}\\\\\\\\n      </a>\\\\\\\\n    </Card>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst ActionContainer = styled.div`\\\\\\\\n  display: grid;\\\\\\\\n  grid-template-columns: repeat(2, 1fr);\\\\\\\\n  justify-content: center;\\\\\\\\n  column-gap: 1rem;\\\\\\\\n  row-gap: 2rem;\\\\\\\\n\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: flex;\\\\\\\\n    flex-direction: column;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Widget src={`devhub.near/widget/devhub.components.island.banner`} />\\\\\\\\n    <Header>\\\\\\\\n      <PageHeader>Contribute</PageHeader>\\\\\\\\n    </Header>\\\\\\\\n    <Lead>\\\\\\\\n      There are many ways to start your contribution journey. You can:\\\\\\\\n    </Lead>\\\\\\\\n    <Container>\\\\\\\\n      <ActionContainer>\\\\\\\\n        {actions.map((action, index) => (\\\\\\\\n          <ActionCard action={action} index={index} />\\\\\\\\n        ))}\\\\\\\\n      </ActionContainer>\\\\\\\\n    </Container>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.page.communities\": {\"\": \"const { getAllCommunitiesMetadata, createCommunity } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!getAllCommunitiesMetadata || !createCommunity) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst onCommunitySubmit = (inputs) =>\\\\\\\\n  createCommunity({\\\\\\\\n    inputs: {\\\\\\\\n      ...inputs,\\\\\\\\n\\\\\\\\n      bio_markdown: [\\\\\\\\n        \\\\\\\\\\\\\\\"This is a sample text about your community.\\\\\\\\\\\\\\\",\\\\\\\\n        \\\\\\\\\\\\\\\"You can change it on the community configuration page.\\\\\\\\\\\\\\\",\\\\\\\\n      ].join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"),\\\\\\\\n\\\\\\\\n      logo_url:\\\\\\\\n        \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreibysr2mkwhb4j36h2t7mqwhynqdy4vzjfygfkfg65kuspd2bawauu\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n      banner_url:\\\\\\\\n        \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  });\\\\\\\\n\\\\\\\\nconst [showSpawner, setShowSpawner] = useState(false);\\\\\\\\n\\\\\\\\nconst [searchKey, setSearchKey] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [sort, setSort] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst communitiesMetadata = getAllCommunitiesMetadata();\\\\\\\\n\\\\\\\\nif (!communitiesMetadata) {\\\\\\\\n  return <p>Loading...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst SortedAndFiltered = (searchKey, sortBy) => {\\\\\\\\n  let communities = (communitiesMetadata ?? []).reverse();\\\\\\\\n\\\\\\\\n  let filtered = [...communities];\\\\\\\\n  if (searchKey !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n    filtered = communities.filter((community) =>\\\\\\\\n      community.name.toLowerCase().includes(searchKey.toLowerCase())\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  let sortedCommunities = [...filtered];\\\\\\\\n  if (sortBy !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n    sortedCommunities.sort((a, b) => {\\\\\\\\n      let nameA = a.name.toLowerCase();\\\\\\\\n      let nameB = b.name.toLowerCase();\\\\\\\\n\\\\\\\\n      if (nameA < nameB) {\\\\\\\\n        return -1;\\\\\\\\n      }\\\\\\\\n      if (nameA > nameB) {\\\\\\\\n        return 1;\\\\\\\\n      }\\\\\\\\n      return 0;\\\\\\\\n    });\\\\\\\\n\\\\\\\\n    if (sortBy === \\\\\\\\\\\\\\\"z-a\\\\\\\\\\\\\\\") {\\\\\\\\n      sortedCommunities.reverse();\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return sortedCommunities;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CTA = styled.button`\\\\\\\\n  all: unset;\\\\\\\\n\\\\\\\\n  color: #f4f4f4;\\\\\\\\n\\\\\\\\n  font-size: 16px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 20px; /* 125% */\\\\\\\\n\\\\\\\\n  border-radius: 4px;\\\\\\\\n  background: #04a46e;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  padding: 14px 16px;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 8px;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background: #555555;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CardGrid = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  height: 100%;\\\\\\\\n\\\\\\\\n  display: grid;\\\\\\\\n  grid-template-columns: repeat(2, 1fr);\\\\\\\\n  gap: 3rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 1000px) {\\\\\\\\n    display: flex;\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n    gap: 2rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget src={`devhub.near/widget/devhub.components.island.banner`} />\\\\\\\\n    <div style={{ background: \\\\\\\\\\\\\\\"#f4f4f4\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"d-flex justify-content-between p-4\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ backgroundColor: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }}\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <h1\\\\\\\\n            className=\\\\\\\\\\\\\\\"m-0 fs-4\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ color: \\\\\\\\\\\\\\\"#555555\\\\\\\\\\\\\\\", fontSize: \\\\\\\\\\\\\\\"1.5rem\\\\\\\\\\\\\\\" }}\\\\\\\\n          >\\\\\\\\n            Communities\\\\\\\\n          </h1>\\\\\\\\n\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column-reverse flex-lg-row gap-3 justify-content-between align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-lg-row col-12 col-md-6 mt-3 mt-lg-0 align-items-center gap-4 col-lg-6\\\\\\\\\\\\\\\">\\\\\\\\n              <input\\\\\\\\n                type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n                placeholder=\\\\\\\\\\\\\\\"\\\\\\\\u{1f50d} Search Communities\\\\\\\\\\\\\\\"\\\\\\\\n                className=\\\\\\\\\\\\\\\"form-control w-100\\\\\\\\\\\\\\\"\\\\\\\\n                value={searchKey}\\\\\\\\n                onChange={(e) => setSearchKey(e.target.value)}\\\\\\\\n              />\\\\\\\\n              <select\\\\\\\\n                class=\\\\\\\\\\\\\\\"form-select\\\\\\\\\\\\\\\"\\\\\\\\n                onChange={(e) => setSort(e.target.value)}\\\\\\\\n              >\\\\\\\\n                <option selected value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\">\\\\\\\\n                  Sort\\\\\\\\n                </option>\\\\\\\\n                <option value=\\\\\\\\\\\\\\\"a-z\\\\\\\\\\\\\\\">A-Z</option>\\\\\\\\n                <option value=\\\\\\\\\\\\\\\"z-a\\\\\\\\\\\\\\\">Z-A</option>\\\\\\\\n              </select>\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column justify-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                <CTA onClick={() => setShowSpawner(!showSpawner)}>\\\\\\\\n                  <i className=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill me-1\\\\\\\\\\\\\\\"></i> Create\\\\\\\\n                  Community\\\\\\\\n                </CTA>\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap align-content-start gap-4 p-4 w-100 h-100\\\\\\\\\\\\\\\">\\\\\\\\n        {showSpawner && (\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Spawner\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              data: null,\\\\\\\\n              onSubmit: onCommunitySubmit,\\\\\\\\n              onCancel: () => setShowSpawner(false),\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n        <CardGrid>\\\\\\\\n          {searchKey === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" && sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n            ? (communitiesMetadata ?? []).reverse().map((communityMetadata) => (\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Card\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    format: \\\\\\\\\\\\\\\"small\\\\\\\\\\\\\\\",\\\\\\\\n                    isBannerEnabled: false,\\\\\\\\n                    metadata: communityMetadata,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              ))\\\\\\\\n            : SortedAndFiltered(searchKey, sort).map((communityMetadata) => (\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Card\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    format: \\\\\\\\\\\\\\\"small\\\\\\\\\\\\\\\",\\\\\\\\n                    isBannerEnabled: false,\\\\\\\\n                    metadata: communityMetadata,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              ))}\\\\\\\\n        </CardGrid>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.blog.Card\": {\"\": \"function Card({ data }) {\\\\\\\\n  const { category, title, subtitle, date } = data;\\\\\\\\n\\\\\\\\n  const Container = styled.div`\\\\\\\\n    min-height: 12.5rem;\\\\\\\\n    height: 100%;\\\\\\\\n    display: flex;\\\\\\\\n    padding: 1rem;\\\\\\\\n    flex-direction: column;\\\\\\\\n    align-items: flex-start;\\\\\\\\n    gap: 1rem;\\\\\\\\n    flex-shrink: 0;\\\\\\\\n\\\\\\\\n    border-radius: 1rem;\\\\\\\\n    border: 1px solid rgba(129, 129, 129, 0.3);\\\\\\\\n    background: #fffefe;\\\\\\\\n\\\\\\\\n    h5 {\\\\\\\\n      margin: 0;\\\\\\\\n      color: #151515;\\\\\\\\n      font-size: 1.5rem;\\\\\\\\n      font-style: normal;\\\\\\\\n      font-weight: 700;\\\\\\\\n      line-height: 110%; /* 39.6px */\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    ${category &&\\\\\\\\n    `\\\\\\\\n    span.category {\\\\\\\\n      color: ${\\\\\\\\n        category.toLowerCase() === \\\\\\\\\\\\\\\"news\\\\\\\\\\\\\\\"\\\\\\\\n          ? \\\\\\\\\\\\\\\"#F40303\\\\\\\\\\\\\\\"\\\\\\\\n          : category.toLowerCase() === \\\\\\\\\\\\\\\"guide\\\\\\\\\\\\\\\"\\\\\\\\n          ? \\\\\\\\\\\\\\\"#004BE1\\\\\\\\\\\\\\\"\\\\\\\\n          : category.toLowerCase() === \\\\\\\\\\\\\\\"reference\\\\\\\\\\\\\\\" && \\\\\\\\\\\\\\\"#FF7A00\\\\\\\\\\\\\\\"\\\\\\\\n      };\\\\\\\\n      font-size: 1rem;\\\\\\\\n      font-style: normal;\\\\\\\\n      font-weight: 700;\\\\\\\\n      line-height: 20px; /* 125% */\\\\\\\\n      text-transform: uppercase;\\\\\\\\n    }\\\\\\\\n    `}\\\\\\\\n\\\\\\\\n    span.date {\\\\\\\\n      color: #818181;\\\\\\\\n      font-size: 16px;\\\\\\\\n      font-style: normal;\\\\\\\\n      font-weight: 400;\\\\\\\\n      line-height: 20px; /* 125% */\\\\\\\\n      margin-top: auto;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    p {\\\\\\\\n      margin: 0;\\\\\\\\n      color: #151515;\\\\\\\\n      font-size: 1rem;\\\\\\\\n      font-style: normal;\\\\\\\\n      font-weight: 400;\\\\\\\\n      line-height: 120%; /* 28.8px */\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n\\\\\\\\n  const options = { year: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\", month: \\\\\\\\\\\\\\\"short\\\\\\\\\\\\\\\", day: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\" };\\\\\\\\n  const formattedDate = new Date(date).toLocaleString(\\\\\\\\\\\\\\\"en-US\\\\\\\\\\\\\\\", options);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container id={`blog-card-${title}`}>\\\\\\\\n      {category && <span className=\\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\">{category}</span>}\\\\\\\\n      <h5>{title}</h5>\\\\\\\\n      <p>{subtitle}</p>\\\\\\\\n      <span className=\\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\\">{formattedDate}</span>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn { Card };\\\\\\\\n\"}, \"devhub.entity.addon.blog.Page\": {\"\": \"const imagelink =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiajzvmy7574k7mp3if6u53mdukfr3hoc2kjkhjadt6x56vqhd5swy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nfunction Page({ data }) {\\\\\\\\n  const { category, title, description, subtitle, date, content } = data;\\\\\\\\n  const Container = styled.div`\\\\\\\\n    display: flex;\\\\\\\\n    flex-direction: column;\\\\\\\\n    width: 100%;\\\\\\\\n\\\\\\\\n    padding: 0 3rem;\\\\\\\\n    margin-bottom: 2rem;\\\\\\\\n\\\\\\\\n    ${category &&\\\\\\\\n    `\\\\\\\\n    span.category {\\\\\\\\n      color: ${\\\\\\\\n        category.toLowerCase() === \\\\\\\\\\\\\\\"news\\\\\\\\\\\\\\\"\\\\\\\\n          ? \\\\\\\\\\\\\\\"#F40303\\\\\\\\\\\\\\\"\\\\\\\\n          : category.toLowerCase() === \\\\\\\\\\\\\\\"guide\\\\\\\\\\\\\\\"\\\\\\\\n          ? \\\\\\\\\\\\\\\"#004BE1\\\\\\\\\\\\\\\"\\\\\\\\n          : category.toLowerCase() === \\\\\\\\\\\\\\\"reference\\\\\\\\\\\\\\\" && \\\\\\\\\\\\\\\"#FF7A00\\\\\\\\\\\\\\\"\\\\\\\\n      };\\\\\\\\n      font-size: 1.5rem;\\\\\\\\n      font-style: normal;\\\\\\\\n      font-weight: 700;\\\\\\\\n      line-height: 20px; /* 125% */\\\\\\\\n      text-transform: uppercase;\\\\\\\\n    }\\\\\\\\n    `}\\\\\\\\n\\\\\\\\n    span.date {\\\\\\\\n      color: #818181;\\\\\\\\n      font-size: 1rem;\\\\\\\\n      font-style: normal;\\\\\\\\n      font-weight: 400;\\\\\\\\n      line-height: 20px; /* 125% */\\\\\\\\n      margin: 1.5rem 0;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    h1 {\\\\\\\\n      color: #151515;\\\\\\\\n      font-size: 3.5rem;\\\\\\\\n      font-style: normal;\\\\\\\\n      font-weight: 700;\\\\\\\\n      line-height: 100%; /* 88px */\\\\\\\\n      margin: 1.5rem 0;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    p.subtitle {\\\\\\\\n      color: #555;\\\\\\\\n      font-size: 1.5rem;\\\\\\\\n      font-style: normal;\\\\\\\\n      font-weight: 400;\\\\\\\\n      line-height: 110%; /* 35.2px */\\\\\\\\n      margin: 0;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    @media screen and (max-width: 768px) {\\\\\\\\n      padding: 0 1rem;\\\\\\\\n\\\\\\\\n      span.category {\\\\\\\\n        font-size: 0.75rem;\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      h1 {\\\\\\\\n        font-size: 2rem;\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      p.subtitle {\\\\\\\\n        font-size: 1rem;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n\\\\\\\\n  const BackgroundImage = styled.img`\\\\\\\\n    width: 100%;\\\\\\\\n    height: auto;\\\\\\\\n    object-fit: cover;\\\\\\\\n    margin-bottom: 1rem;\\\\\\\\n  `;\\\\\\\\n\\\\\\\\n  const options = { year: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\", month: \\\\\\\\\\\\\\\"short\\\\\\\\\\\\\\\", day: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\" };\\\\\\\\n  const formattedDate = new Date(date).toLocaleString(\\\\\\\\\\\\\\\"en-US\\\\\\\\\\\\\\\", options);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n      <BackgroundImage src={imagelink} />\\\\\\\\n      <Container>\\\\\\\\n        {category && <span className=\\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\">{category}</span>}\\\\\\\\n        <h1>{title}</h1>\\\\\\\\n        <p className=\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\">{subtitle}</p>\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\\">{formattedDate}</span>\\\\\\\\n        <p>{description}</p>\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\n            \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n          }\\\\\\\\n          props={{ text: content }}\\\\\\\\n        />\\\\\\\\n      </Container>\\\\\\\\n    </>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn { Page };\\\\\\\\n\"}, \"devhub.entity.addon.blog.Viewer\": {\"\": \"const { Card } =\\\\\\\\n  VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blog.Card\\\\\\\\\\\\\\\") ||\\\\\\\\n  (() => <></>);\\\\\\\\n\\\\\\\\nconst { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\") || (() => {});\\\\\\\\n\\\\\\\\nconst { includeLabels, excludeLabels, layout, handle, hideTitle } = props;\\\\\\\\n\\\\\\\\nconst Grid = styled.div`\\\\\\\\n  display: grid;\\\\\\\\n  grid-template-columns: repeat(3, minmax(0, 1fr));\\\\\\\\n  gap: 1rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: flex;\\\\\\\\n    flex-direction: column;\\\\\\\\n    gap: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.h3`\\\\\\\\n  color: #151515;\\\\\\\\n  font-size: 2rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 120%; /* 48px */\\\\\\\\n  margin-bottom: 2rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 1.5rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CardContainer = styled.div`\\\\\\\\n  transition: all 300ms;\\\\\\\\n  border-radius: 1rem;\\\\\\\\n  height: 100%;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1),\\\\\\\\n      0 4px 6px -4px rgb(0 0 0 / 0.1);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nfunction BlogCard(postId) {\\\\\\\\n  return (\\\\\\\\n    <Link\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n      to={href({\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: { page: \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\", id: postId },\\\\\\\\n      })}\\\\\\\\n    >\\\\\\\\n      <CardContainer>\\\\\\\\n        <Widget // We need this so the individual posts can make the necessary call for more data\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Postv2\\\\\\\\\\\\\\\"\\\\\\\\n          props={{ postKey: postId, template: (p) => <Card {...(p || {})} /> }} // I wonder if this could take list of types, their templates, normalizer functions, etc... and have this all as a module\\\\\\\\n        />\\\\\\\\n        {/* // so then you could swap between devhub contract or social contract sources, it doesn\\\\\\\\\\\\'t matter. */}\\\\\\\\n      </CardContainer>\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n    {!hideTitle && <Heading>Latest Blog Posts</Heading>}\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blog.Feed\\\\\\\\\\\\\\\"}\\\\\\\\n      // TODO: This needs to filter by more labels\\\\\\\\n      props={{\\\\\\\\n        includeLabels: [\\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\", handle, ...(includeLabels || [])], // make sure this has the community handle\\\\\\\\n        excludeLabels: excludeLabels || [],\\\\\\\\n        renderItem: BlogCard,\\\\\\\\n        Layout: ({ children }) => <Grid>{children}</Grid>,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.island.support\": {\"\": \"const Items = [\\\\\\\\n  {\\\\\\\\n    heading: (\\\\\\\\n      <>\\\\\\\\n        Developer\\\\\\\\n        <br />\\\\\\\\n        Resources\\\\\\\\n      </>\\\\\\\\n    ),\\\\\\\\n    description: \\\\\\\\\\\\\\\"Learn the fundamentals of NEAR and build with confidence\\\\\\\\\\\\\\\",\\\\\\\\n    cta: {\\\\\\\\n      href: \\\\\\\\\\\\\\\"https://docs.near.org\\\\\\\\\\\\\\\",\\\\\\\\n      title: \\\\\\\\\\\\\\\"Read \\\\\\\\u{2197}\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    heading: <>Office Hours</>,\\\\\\\\n    description: (\\\\\\\\n      <>\\\\\\\\n        Need some help?\\\\\\\\n        <br /> DevRel contributors are available to answer your technical\\\\\\\\n        questions\\\\\\\\n      </>\\\\\\\\n    ),\\\\\\\\n    cta: {\\\\\\\\n      href: \\\\\\\\\\\\\\\"/devhub.near/widget/app?page=community&handle=education&tab=Wiki%202\\\\\\\\\\\\\\\",\\\\\\\\n      title: \\\\\\\\\\\\\\\"Book a meeting \\\\\\\\u{2197}\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    heading: <>Get Funding</>,\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Explore funding opportunities from DevHub to fuel your vision\\\\\\\\\\\\\\\",\\\\\\\\n    cta: {\\\\\\\\n      href: \\\\\\\\\\\\\\\"/devhub.near/widget/app?page=community&handle=developer-dao&tab=Funding\\\\\\\\\\\\\\\",\\\\\\\\n      title: \\\\\\\\\\\\\\\"Learn more \\\\\\\\u{2197}\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst Circle = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  width: 18.75rem;\\\\\\\\n  height: 18.75rem;\\\\\\\\n  padding: 2.25rem;\\\\\\\\n  flex-direction: column;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 1rem;\\\\\\\\n  flex-shrink: 0;\\\\\\\\n\\\\\\\\n  border-radius: 22.5rem;\\\\\\\\n  border: 1px solid #00ec97;\\\\\\\\n  background: #f4f4f4;\\\\\\\\n\\\\\\\\n  h3 {\\\\\\\\n    color: #101820;\\\\\\\\n    text-align: center;\\\\\\\\n    font-size: 1.75rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 100%; /* 36px */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    color: #101820;\\\\\\\\n    text-align: center;\\\\\\\\n    font-size: 1.125rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 120%; /* 28.8px */\\\\\\\\n    letter-spacing: -0.72px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a {\\\\\\\\n    color: #555555;\\\\\\\\n    font-size: 1.125rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 120%; /* 28.8px */\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  padding: 3rem;\\\\\\\\n  padding-top: 0;\\\\\\\\n  margin-top: 1.5rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 786px) {\\\\\\\\n    padding: 1.5rem;\\\\\\\\n    padding-top: 0;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ItemsContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  flex-wrap: wrap;\\\\\\\\n  gap: 3rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    flex-direction: column;\\\\\\\\n    gap: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Content = (\\\\\\\\n  <Container>\\\\\\\\n    <ItemsContainer>\\\\\\\\n      {Items.map((it) => (\\\\\\\\n        <Circle key={Math.random()}>\\\\\\\\n          <h3>{it.heading}</h3>\\\\\\\\n          <p>{it.description}</p>\\\\\\\\n          <a href={it.cta.href}>{it.cta.title}</a>\\\\\\\\n        </Circle>\\\\\\\\n      ))}\\\\\\\\n    </ItemsContainer>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Widget\\\\\\\\n    src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.island.home-section\\\\\\\\\\\\\\\"\\\\\\\\n    props={{\\\\\\\\n      title: \\\\\\\\\\\\\\\"/get support\\\\\\\\\\\\\\\",\\\\\\\\n      children: Content,\\\\\\\\n      background: true,\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.feature.post-search.panel\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  tag: props.tag,\\\\\\\\n  term: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst updateInput = (term) => {\\\\\\\\n  State.update({\\\\\\\\n    term: term,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst buttonStyle = {\\\\\\\\n  backgroundColor: \\\\\\\\\\\\\\\"#0C7283\\\\\\\\\\\\\\\",\\\\\\\\n  color: \\\\\\\\\\\\\\\"#f3f3f3\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PageTitle = styled.h1`\\\\\\\\n  color: #555555;\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 500;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.24px;\\\\\\\\n\\\\\\\\n  margin: 0;\\\\\\\\n  margin-bottom: 1rem;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  padding: 24px;\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst PostContainer = styled.div`\\\\\\\\n  margin: 0 1rem;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst InputContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  position: relative;\\\\\\\\n  width: 25%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {!props.hideHeader && (\\\\\\\\n      <Container>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <PageTitle>Activity Feed</PageTitle>\\\\\\\\n          <div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-lg-row gap-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"position-absolute d-flex ps-3 flex-column h-100 justify-center\\\\\\\\\\\\\\\">\\\\\\\\n                  <i class=\\\\\\\\\\\\\\\"bi bi-search m-auto\\\\\\\\\\\\\\\"></i>\\\\\\\\n                </div>\\\\\\\\n                <input\\\\\\\\n                  type=\\\\\\\\\\\\\\\"search\\\\\\\\\\\\\\\"\\\\\\\\n                  className=\\\\\\\\\\\\\\\"ps-5 form-control border border-0\\\\\\\\\\\\\\\"\\\\\\\\n                  value={state.term ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n                  onChange={(e) => updateInput(e.target.value)}\\\\\\\\n                  onKeyDown={(e) => e.key == \\\\\\\\\\\\\\\"Enter\\\\\\\\\\\\\\\" && search()}\\\\\\\\n                  placeholder={props.placeholder ?? `Search by content`}\\\\\\\\n                />\\\\\\\\n              </InputContainer>\\\\\\\\n              <div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class=\\\\\\\\\\\\\\\"btn dropdown-toggle bg-white\\\\\\\\\\\\\\\"\\\\\\\\n                  type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n                  data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n                  aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  Sort{props.recency === \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\": All replies\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\": Latest\\\\\\\\\\\\\\\"}\\\\\\\\n                </button>\\\\\\\\n                <ul class=\\\\\\\\\\\\\\\"dropdown-menu px-2 shadow\\\\\\\\\\\\\\\">\\\\\\\\n                  <li>\\\\\\\\n                    <a\\\\\\\\n                      style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n                      class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n                      href={href({\\\\\\\\n                        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                        params: { page: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\" },\\\\\\\\n                      })}\\\\\\\\n                    >\\\\\\\\n                      Latest\\\\\\\\n                    </a>\\\\\\\\n                  </li>\\\\\\\\n                  <li>\\\\\\\\n                    <a\\\\\\\\n                      style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n                      class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n                      href={href({\\\\\\\\n                        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                        params: { page: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\", recency: \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\" },\\\\\\\\n                      })}\\\\\\\\n                    >\\\\\\\\n                      All replies\\\\\\\\n                    </a>\\\\\\\\n                  </li>\\\\\\\\n                </ul>\\\\\\\\n              </div>\\\\\\\\n              <div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.post-search.by-author\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    author: state.author,\\\\\\\\n                    onAuthorSearch: (author) => {\\\\\\\\n                      State.update({ author });\\\\\\\\n                    },\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div>\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.post-search.by-tag\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    tag: state.tag,\\\\\\\\n                    onTagSearch: (tag) => {\\\\\\\\n                      State.update({ tag });\\\\\\\\n                    },\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-row-reverse flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n                {props.children}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </Container>\\\\\\\\n    )}\\\\\\\\n    <PostContainer>\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.List\\\\\\\\\\\\\\\"\\\\\\\\n        props={{\\\\\\\\n          author: state.author,\\\\\\\\n          tag: state.tag,\\\\\\\\n          term: state.term,\\\\\\\\n          recency: props.recency,\\\\\\\\n          transactionHashes: props.transactionHashes,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </PostContainer>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.organism.Navbar\": {\"\": \"const page = props.page;\\\\\\\\n\\\\\\\\nconst [showMenu, setShowMenu] = useState(false);\\\\\\\\n\\\\\\\\nconst { href: linkHref } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nlinkHref || (linkHref = () => {});\\\\\\\\n\\\\\\\\nconst Logo = () => {\\\\\\\\n  const Wrapper = styled.div`\\\\\\\\n    @media screen and (max-width: 768px) {\\\\\\\\n      svg {\\\\\\\\n        width: 90px;\\\\\\\\n        height: 12px;\\\\\\\\n        transform: scale(1.5);\\\\\\\\n        margin-left: 1rem;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <Link\\\\\\\\n        to={linkHref({\\\\\\\\n          widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n          params: { page: \\\\\\\\\\\\\\\"home\\\\\\\\\\\\\\\" },\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <svg\\\\\\\\n          xmlns=\\\\\\\\\\\\\\\"http://www.w3.org/2000/svg\\\\\\\\\\\\\\\"\\\\\\\\n          width=\\\\\\\\\\\\\\\"180\\\\\\\\\\\\\\\"\\\\\\\\n          height=\\\\\\\\\\\\\\\"24\\\\\\\\\\\\\\\"\\\\\\\\n          viewBox=\\\\\\\\\\\\\\\"0 0 180 24\\\\\\\\\\\\\\\"\\\\\\\\n          fill=\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <g clip-path=\\\\\\\\\\\\\\\"url(#clip0_530_29)\\\\\\\\\\\\\\\">\\\\\\\\n            <path\\\\\\\\n              d=\\\\\\\\\\\\\\\"M8.62185 6.09766C11.8428 6.09766 14.5995 7.77588 14.5995 12.7821V20.8888H10.508V13.1803C10.508 10.7057 9.55041 9.39721 7.49016 9.39721C5.37187 9.39721 4.15313 10.8763 4.15313 13.4079V20.8888H0.0616455V6.26832H3.63081L4.00804 8.08877C4.96563 6.95099 6.32945 6.09766 8.62185 6.09766ZM23.911 21.0594C18.9489 21.0594 15.9601 18.1297 15.9601 13.607C15.9601 9.05588 19.007 6.09766 23.6208 6.09766C28.0895 6.09766 31.1073 8.82832 31.1654 13.1234C31.1654 13.5501 31.1364 14.0337 31.0493 14.4888H20.2257V14.6879C20.3128 16.7643 21.6766 18.0159 23.7369 18.0159C25.3909 18.0159 26.5516 17.3048 26.8998 15.9394H30.9332C30.4689 18.7839 27.8864 21.0594 23.911 21.0594ZM20.3128 11.8719H27.0449C26.7547 10.0799 25.5069 9.08432 23.6498 9.08432C21.8797 9.08432 20.5449 10.1368 20.3128 11.8719ZM47.0396 17.5039H47.5039V20.8888H45.4146C43.2963 20.8888 42.6289 19.8932 42.6579 18.4994C41.6133 20.1208 40.1044 21.0594 37.783 21.0594C34.562 21.0594 32.2406 19.5519 32.2406 16.7643C32.2406 13.6639 34.6201 11.9003 39.0888 11.9003H42.0486V11.1892C42.0486 9.88077 41.091 9.02743 39.3789 9.02743C37.783 9.02743 36.7093 9.73854 36.5352 10.8194H32.5888C32.879 7.97499 35.5486 6.09766 39.495 6.09766C43.6736 6.09766 46.082 7.9181 46.082 11.4168V16.5937C46.082 17.3617 46.4012 17.5039 47.0396 17.5039ZM42.0486 14.8585V14.5741H39.0598C37.3477 14.5741 36.3611 15.2568 36.3611 16.4799C36.3611 17.5039 37.2026 18.1581 38.5665 18.1581C40.7138 18.1581 42.0196 16.8497 42.0486 14.8585ZM56.8924 6.26832H57.5889V9.90921H55.9639C53.5264 9.90921 52.5978 11.5021 52.5978 13.7208V20.8888H48.5064V6.26832H52.2206L52.5978 8.45854C53.4103 7.1501 54.571 6.26832 56.8924 6.26832Z\\\\\\\\\\\\\\\"\\\\\\\\n              fill=\\\\\\\\\\\\\\\"#00EC97\\\\\\\\\\\\\\\"\\\\\\\\n            />\\\\\\\\n            <path\\\\\\\\n              d=\\\\\\\\\\\\\\\"M60.7221 23.961H59.2422L67.4542 0.124512H68.9341L60.7221 23.961ZM82.8081 8.08896V0.977843H86.8996V20.889H83.3304L82.9242 18.8694C81.9376 20.121 80.4867 21.0596 78.3394 21.0596C74.335 21.0596 71.4042 18.1867 71.4042 13.5503C71.4042 9.02762 74.335 6.09785 78.3104 6.09785C80.3706 6.09785 81.8505 6.89429 82.8081 8.08896ZM79.239 17.7885C81.4733 17.7885 82.8662 16.0818 82.8662 13.6072C82.8662 11.1041 81.4733 9.36896 79.239 9.36896C77.0046 9.36896 75.5827 11.0756 75.5827 13.5787C75.5827 16.0818 77.0046 17.7885 79.239 17.7885ZM96.2521 21.0596C91.2901 21.0596 88.3013 18.1298 88.3013 13.6072C88.3013 9.05607 91.3482 6.09785 95.962 6.09785C100.431 6.09785 103.449 8.82851 103.507 13.1236C103.507 13.5503 103.478 14.0338 103.39 14.489H92.5669V14.6881C92.6539 16.7645 94.0178 18.0161 96.078 18.0161C97.732 18.0161 98.8927 17.305 99.2409 15.9396H103.274C102.81 18.7841 100.228 21.0596 96.2521 21.0596ZM92.6539 11.8721H99.386C99.0959 10.0801 97.8481 9.08451 95.991 9.08451C94.2209 9.08451 92.8861 10.137 92.6539 11.8721ZM108.081 20.889L102.713 6.26851H107.094L110.692 16.793L114.233 6.26851H118.527L113.159 20.889H108.081ZM120.906 23.961H119.427L127.639 0.124512H129.118L120.906 23.961ZM140.671 6.09785C143.979 6.09785 146.707 7.83296 146.707 12.7823V20.889H142.615V13.1236C142.615 10.7343 141.629 9.3974 139.597 9.3974C137.508 9.3974 136.26 10.8765 136.26 13.3796V20.889H132.169V0.977843H136.26V8.06051C137.218 6.92273 138.553 6.09785 140.671 6.09785ZM158.367 13.5787V6.26851H162.459V20.889H158.832L158.454 19.1254C157.497 20.2632 156.191 21.0596 154.073 21.0596C150.997 21.0596 148.153 19.5521 148.153 14.3752V6.26851H152.245V13.8347C152.245 16.4516 153.115 17.7316 155.146 17.7316C157.178 17.7316 158.367 16.281 158.367 13.5787ZM173.022 6.09785C177.027 6.09785 179.928 8.91385 179.928 13.5503C179.928 18.073 177.027 21.0596 172.993 21.0596C170.846 21.0596 169.366 20.1494 168.408 18.8978L168.002 20.889H164.433V0.977843H168.524V8.1174C169.511 6.95118 170.962 6.09785 173.022 6.09785ZM172.094 17.7885C174.328 17.7885 175.779 16.0818 175.779 13.5787C175.779 11.0756 174.328 9.36896 172.094 9.36896C169.859 9.36896 168.466 11.0756 168.466 13.5503C168.466 16.0534 169.859 17.7885 172.094 17.7885Z\\\\\\\\\\\\\\\"\\\\\\\\n              fill=\\\\\\\\\\\\\\\"#151515\\\\\\\\\\\\\\\"\\\\\\\\n            />\\\\\\\\n          </g>\\\\\\\\n          <defs>\\\\\\\\n            <clipPath id=\\\\\\\\\\\\\\\"clip0_530_29\\\\\\\\\\\\\\\">\\\\\\\\n              <rect width=\\\\\\\\\\\\\\\"180\\\\\\\\\\\\\\\" height=\\\\\\\\\\\\\\\"24\\\\\\\\\\\\\\\" fill=\\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" />\\\\\\\\n            </clipPath>\\\\\\\\n          </defs>\\\\\\\\n        </svg>\\\\\\\\n      </Link>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst ProfileIcon = () => {\\\\\\\\n  const Wrapper = styled.svg`\\\\\\\\n    padding: 0.25rem;\\\\\\\\n    @media screen and (max-width: 768px) {\\\\\\\\n      display: none;\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n  return (\\\\\\\\n    <Link\\\\\\\\n      to={linkHref({\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: { page: \\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\\", accountId: context.accountId },\\\\\\\\n      })}\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.ProfileCard\\\\\\\\\\\\\\\"\\\\\\\\n        props={{ iconOnly: true, accountId: context.accountId || null }}\\\\\\\\n      />\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst MenuIcon = () => (\\\\\\\\n  <svg\\\\\\\\n    xmlns=\\\\\\\\\\\\\\\"http://www.w3.org/2000/svg\\\\\\\\\\\\\\\"\\\\\\\\n    width=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n    height=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n    viewBox=\\\\\\\\\\\\\\\"0 0 16 16\\\\\\\\\\\\\\\"\\\\\\\\n    fill=\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ height: 20, width: 20 }}\\\\\\\\n  >\\\\\\\\n    <path\\\\\\\\n      fill-rule=\\\\\\\\\\\\\\\"evenodd\\\\\\\\\\\\\\\"\\\\\\\\n      clip-rule=\\\\\\\\\\\\\\\"evenodd\\\\\\\\\\\\\\\"\\\\\\\\n      d=\\\\\\\\\\\\\\\"M2 12.2986H14V13.3732H2V12.2986ZM2 9.07471H14V10.1493H2V9.07471ZM2 5.85083H14V6.92546H2V5.85083ZM2 2.62695H14V3.70158H2V2.62695Z\\\\\\\\\\\\\\\"\\\\\\\\n      fill=\\\\\\\\\\\\\\\"#818181\\\\\\\\\\\\\\\"\\\\\\\\n    />\\\\\\\\n  </svg>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Navbar = styled.div`\\\\\\\\n  padding: 1.5rem 3rem;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  align-items: center;\\\\\\\\n\\\\\\\\n  background: #f4f4f4;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1.875rem 1.375rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinksContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 1.5rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: none;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst MobileMenu = styled.button`\\\\\\\\n  all: unset;\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst links = [\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"/communities\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"communities\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"/activity feed\\\\\\\\\\\\\\\",\\\\\\\\n    href: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\",\\\\\\\\n    links: [],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"/about\\\\\\\\\\\\\\\",\\\\\\\\n    links: [\\\\\\\\n      { title: \\\\\\\\\\\\\\\"mission\\\\\\\\\\\\\\\", href: \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\" },\\\\\\\\n      { title: \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\", href: \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\" },\\\\\\\\n      { title: \\\\\\\\\\\\\\\"newsletter\\\\\\\\\\\\\\\", href: \\\\\\\\\\\\\\\"https://newsletter.neardevhub.org\\\\\\\\\\\\\\\" },\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"calendar\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"https://calendar.google.com/calendar/embed?height=600&wkst=2&bgcolor=%23ffffff&ctz=UTC&title&showNav=1&showDate=1&mode=AGENDA&showPrint=0&src=Y19mNTRlZDM3ZmQ5MjMyN2FjZGM3ZTQzNDNmZTQwNzIyYWU1Nzk3YjZjODI5MjliYTkzZTlmM2E4OWM2OTY1N2FiQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20&color=%23616161\\\\\\\\\\\\\\\",\\\\\\\\n      },\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"brand kit\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"https://drive.google.com/drive/folders/1C0GMmGq3MzbVPpxvf9807IU-7kpc2_v5?usp=sharing\\\\\\\\\\\\\\\",\\\\\\\\n      },\\\\\\\\n    ],\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst MobileNav = styled.div`\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: flex;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  position: absolute;\\\\\\\\n  top: 0;\\\\\\\\n  right: 0;\\\\\\\\n\\\\\\\\n  width: 207px;\\\\\\\\n\\\\\\\\n  padding: 24px 36px 36px 16px;\\\\\\\\n  flex-direction: column;\\\\\\\\n  align-items: flex-end;\\\\\\\\n  gap: 2.5rem;\\\\\\\\n  flex-shrink: 0;\\\\\\\\n\\\\\\\\n  border-radius: 0px 0px 0px 16px;\\\\\\\\n  background: rgba(41, 41, 41, 0.6);\\\\\\\\n  backdrop-filter: blur(5px);\\\\\\\\n\\\\\\\\n  z-index: 50;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst MobileLink = styled.a`\\\\\\\\n  color: #f4f4f4 !important;\\\\\\\\n  font-size: 20px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 20px; /* 100% */\\\\\\\\n  margin-bottom: 1rem;\\\\\\\\n\\\\\\\\n  &.active {\\\\\\\\n    color: #00ec97 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n    color: #00ec97 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Navbar className=\\\\\\\\\\\\\\\"position-relative\\\\\\\\\\\\\\\">\\\\\\\\n    <Logo />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <LinksContainer>\\\\\\\\n        {links.map((link) => (\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.NavbarDropdown\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              title: link.title,\\\\\\\\n              href: link.href,\\\\\\\\n              links: link.links,\\\\\\\\n              page: page,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        ))}\\\\\\\\n      </LinksContainer>\\\\\\\\n      {context.accountId && <ProfileIcon />}\\\\\\\\n      <MobileMenu onClick={() => setShowMenu(!showMenu)}>\\\\\\\\n        <MenuIcon />\\\\\\\\n      </MobileMenu>\\\\\\\\n    </div>\\\\\\\\n    {showMenu && (\\\\\\\\n      <MobileNav>\\\\\\\\n        <div\\\\\\\\n          onClick={() => setShowMenu(!showMenu)}\\\\\\\\n          style={{ cursor: \\\\\\\\\\\\\\\"pointer\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-x\\\\\\\\\\\\\\\" style={{ fontSize: 20, color: \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\" }}></i>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n          {links.map((link, idx) =>\\\\\\\\n            link.href ? (\\\\\\\\n              <MobileLink\\\\\\\\n                key={`mobile-link-${idx}`}\\\\\\\\n                className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                href={`/devhub.near/widget/app?page=${link.href}`}\\\\\\\\n              >\\\\\\\\n                {link.title}\\\\\\\\n              </MobileLink>\\\\\\\\n            ) : (\\\\\\\\n              link.links.map((it, idx) => (\\\\\\\\n                <MobileLink\\\\\\\\n                  key={`nested-link-${idx}`}\\\\\\\\n                  className={link.href === props.page && \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\"}\\\\\\\\n                  href={`/devhub.near/widget/app?page=${it.href}`}\\\\\\\\n                >\\\\\\\\n                  {it.title}\\\\\\\\n                </MobileLink>\\\\\\\\n              ))\\\\\\\\n            )\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </MobileNav>\\\\\\\\n    )}\\\\\\\\n  </Navbar>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.island.participate\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  margin-top: 2.25rem;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  justify-content: space-between;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    flex-direction: column;\\\\\\\\n    margin-top: 0;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinkItem = styled.a`\\\\\\\\n  color: #00ec97;\\\\\\\\n  font-size: 1.25rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n    color: #096d50;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Links = [\\\\\\\\n  {\\\\\\\\n    links: [\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"Ideate on Devhub\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"/devhub.near/widget/app?page=blog&id=2029\\\\\\\\\\\\\\\",\\\\\\\\n        count: 1,\\\\\\\\n      },\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"Post a Proposal\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"/devhub.near/widget/app?page=blog&id=2035\\\\\\\\\\\\\\\",\\\\\\\\n        count: 4,\\\\\\\\n      },\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"Host an Event\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"/devhub.near/widget/app?page=community&handle=hacks&tab=Wiki%202\\\\\\\\\\\\\\\",\\\\\\\\n        count: 7,\\\\\\\\n      },\\\\\\\\n    ],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    links: [\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"Improve NEAR Docs\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"https://github.com/near/docs\\\\\\\\\\\\\\\",\\\\\\\\n        count: 2,\\\\\\\\n      },\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"Join the Fellowship\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"/devhub.near/widget/app?page=community&handle=fellowship&tab=Wiki%201\\\\\\\\\\\\\\\",\\\\\\\\n        count: 5,\\\\\\\\n      },\\\\\\\\n    ],\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    links: [\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"Join NEAR Campus\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"/devhub.near/widget/app?page=community&handle=near-campus\\\\\\\\\\\\\\\",\\\\\\\\n        count: 3,\\\\\\\\n      },\\\\\\\\n      {\\\\\\\\n        title: \\\\\\\\\\\\\\\"Dive into Hackbox\\\\\\\\\\\\\\\",\\\\\\\\n        href: \\\\\\\\\\\\\\\"/hackbox.near/widget/home\\\\\\\\\\\\\\\",\\\\\\\\n        count: 6,\\\\\\\\n      },\\\\\\\\n    ],\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst CTA = styled.a`\\\\\\\\n  display: flex;\\\\\\\\n  padding: 0.875rem 1rem;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 0.5rem;\\\\\\\\n\\\\\\\\n  border-radius: 1rem;\\\\\\\\n  background: #00ec97;\\\\\\\\n\\\\\\\\n  color: #f4f4f4 !important;\\\\\\\\n  font-size: 1.5rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.03rem;\\\\\\\\n\\\\\\\\n  width: max-content;\\\\\\\\n  margin-top: 1.5rem;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background: #555555;\\\\\\\\n    text-decoration: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    color: #f4f4f4 !important;\\\\\\\\n    font-size: 20px;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 120%; /* 24px */\\\\\\\\n\\\\\\\\n    display: flex;\\\\\\\\n    padding: 14px 16px;\\\\\\\\n    align-items: center;\\\\\\\\n    gap: 8px;\\\\\\\\n\\\\\\\\n    border-radius: 16px;\\\\\\\\n    background: #555555;\\\\\\\\n\\\\\\\\n    &:hover {\\\\\\\\n      //background: #555555;\\\\\\\\n      text-decoration: none;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst SectionPadding = styled.div`\\\\\\\\n  padding: 3rem;\\\\\\\\n  padding-top: 0;\\\\\\\\n\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n    padding-top: 0;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinksContainer = styled.div`\\\\\\\\n  width: 30%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    width: 100%;\\\\\\\\n    margin-bottom: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Content = (\\\\\\\\n  <SectionPadding>\\\\\\\\n    <Container>\\\\\\\\n      {Links.map((it) => (\\\\\\\\n        <LinksContainer key={Math.random()}>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-md-2\\\\\\\\\\\\\\\">\\\\\\\\n            {it.links.map((link) => (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-row\\\\\\\\\\\\\\\">\\\\\\\\n                <span\\\\\\\\n                  style={{\\\\\\\\n                    color: \\\\\\\\\\\\\\\"#555555\\\\\\\\\\\\\\\",\\\\\\\\n                    border: \\\\\\\\\\\\\\\"2px #555555 solid\\\\\\\\\\\\\\\",\\\\\\\\n                    fontSize: 12,\\\\\\\\n                    padding: 4,\\\\\\\\n                    width: 22,\\\\\\\\n                    height: 22,\\\\\\\\n                  }}\\\\\\\\n                  className=\\\\\\\\\\\\\\\"rounded-circle d-flex align-items-center justify-content-center me-1\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  {link.count}\\\\\\\\n                </span>{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                <LinkItem href={link.href} target=\\\\\\\\\\\\\\\"no_blank\\\\\\\\\\\\\\\">\\\\\\\\n                  {link.title}\\\\\\\\n                </LinkItem>\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        </LinksContainer>\\\\\\\\n      ))}\\\\\\\\n    </Container>\\\\\\\\n\\\\\\\\n    <Link\\\\\\\\n      to={href({\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: { page: \\\\\\\\\\\\\\\"contribute\\\\\\\\\\\\\\\" },\\\\\\\\n      })}\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <CTA>Learn more \\\\\\\\u{2192}</CTA>\\\\\\\\n    </Link>\\\\\\\\n  </SectionPadding>\\\\\\\\n);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Widget\\\\\\\\n    src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.island.home-section\\\\\\\\\\\\\\\"\\\\\\\\n    props={{\\\\\\\\n      title: \\\\\\\\\\\\\\\"/participate\\\\\\\\\\\\\\\",\\\\\\\\n      titleColor: \\\\\\\\\\\\\\\"#555555\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"There are many ways to start your contribution journey. You can:\\\\\\\\\\\\\\\",\\\\\\\\n      children: Content,\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.molecule.PostControls\": {\"\": \"const { className, title, icon, href, onClick } = props;\\\\\\\\n\\\\\\\\nconst Button = styled.button`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 8px;\\\\\\\\n\\\\\\\\n  border-radius: 4px;\\\\\\\\n  background: #04a46e;\\\\\\\\n\\\\\\\\n  color: #f4f4f4;\\\\\\\\n  font-size: 16px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 20px; /* 125% */\\\\\\\\n\\\\\\\\n  padding: 0.5rem 1rem;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background: #555555;\\\\\\\\n    text-decoration: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  outline: none;\\\\\\\\n  border: none;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className={`d-flex flex-row-reverse ${props.className}`}>\\\\\\\\n    {props.href ? (\\\\\\\\n      <Link to={props.href} style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n        <Button>\\\\\\\\n          <i className={props.icon ? props.icon : \\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"}></i>\\\\\\\\n          {props.title}\\\\\\\\n        </Button>\\\\\\\\n      </Link>\\\\\\\\n    ) : (\\\\\\\\n      <Button onClick={props.onClick}>\\\\\\\\n        <i className={props.icon ? props.icon : \\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"}></i>\\\\\\\\n        {props.title || \\\\\\\\\\\\\\\"Post\\\\\\\\\\\\\\\"}\\\\\\\\n      </Button>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.molecule.MarkdownViewer\": {\"\": \"const Wrapper = styled.div`\\\\\\\\n  p {\\\\\\\\n    white-space: pre-line; // This ensures text breaks to new line\\\\\\\\n\\\\\\\\n    span {\\\\\\\\n      white-space: normal; // and this ensures profile links look normal\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  blockquote {\\\\\\\\n    margin: 1em 0;\\\\\\\\n    padding-left: 1.5em;\\\\\\\\n    border-left: 4px solid #ccc;\\\\\\\\n    color: #666;\\\\\\\\n    font-style: italic;\\\\\\\\n    font-size: inherit;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  pre {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n    border: 1px solid #ddd;\\\\\\\\n    border-radius: 4px;\\\\\\\\n    padding: 1em;\\\\\\\\n    overflow-x: auto;\\\\\\\\n    font-family: \\\\\\\\\\\\\\\"Courier New\\\\\\\\\\\\\\\", Courier, monospace;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a {\\\\\\\\n    color: #04a46e;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Embedded = styled.span`\\\\\\\\n  white-space: normal;\\\\\\\\n\\\\\\\\n  p {\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst renderMention =\\\\\\\\n  props.renderMention ??\\\\\\\\n  ((accountId) => (\\\\\\\\n    <span key={accountId} className=\\\\\\\\\\\\\\\"d-inline-flex\\\\\\\\\\\\\\\" style={{ fontWeight: 500 }}>\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"neardevgov.near/widget/ProfileLine\\\\\\\\\\\\\\\"\\\\\\\\n        props={{\\\\\\\\n          accountId: accountId.toLowerCase(),\\\\\\\\n          hideAccountId: true,\\\\\\\\n          tooltip: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </span>\\\\\\\\n  ));\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Wrapper>\\\\\\\\n    <Markdown text={props.text} onMention={renderMention} />\\\\\\\\n  </Wrapper>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.5000405301546e+21
    }
  },
  {
    "id": "1336729851",
    "receipt_id": "AFhtdBKa84bbC33qd17GC4GetmpQeB8MXDBroinaiXjV",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6Ume4cXfZFhtq4YWMffXRvKnZ2a5tTJR5XbSeBrBFemE",
      "block_height": 104864433,
      "block_timestamp": 1699042436404735500
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "GAsWKEtJ5rxpCde5MrVypZY11bGGvhn7WLG9fSv52cqk",
    "included_in_block_hash": "HMcKtXtDGCQAD3Zw6K457KAQ49seETLnVb84Xtg8yTqf",
    "block_timestamp": "1699042434561720637",
    "block": {
      "block_height": 104864431
    },
    "receipt_conversion_tokens_burnt": "252726578355400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8684438089329766e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.5000405301546e+21
    }
  },
  {
    "id": "1336743439",
    "receipt_id": "4rJUdvR9oxDcF5tgbqythzG7uTxz7mee7eQ7EJwaDBDp",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "GYs8aGSGENCeVC3Qx2nkSqiafA9fHAPd7LTqqJkmBDZg",
      "block_height": 104864888,
      "block_timestamp": 1699042927418224400
    },
    "receipt_outcome": {
      "gas_burnt": 9315644742221,
      "tokens_burnt": 931564474222100000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "461RGSCsJyRynP3xZmUwNyyZqC9EeRrRmzEJjQbKnjWN",
    "included_in_block_hash": "D3GhNHp38bKmhNizsSTgjiomUvaKF1YuUvxwCoDmfcTH",
    "block_timestamp": "1699042926613007556",
    "block": {
      "block_height": 104864887
    },
    "receipt_conversion_tokens_burnt": "248370755330000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 1,
        "fee": 931564474222100000000,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.entity.post.Post\": {\"\": \"// Ideally, this would be a page\\\\\\\\n\\\\\\\\nconst { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst ButtonWithHover = styled.button`\\\\\\\\n  background-color: #fff;\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #e9ecef;\\\\\\\\n    color: #000;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst postId = props.post.id ?? (props.id ? parseInt(props.id) : 0);\\\\\\\\nconst post =\\\\\\\\n  props.post ??\\\\\\\\n  Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_post\\\\\\\\\\\\\\\", { post_id: postId });\\\\\\\\nif (!post) {\\\\\\\\n  return <div>Loading ...</div>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst referral = props.referral;\\\\\\\\nconst currentTimestamp = props.timestamp ?? post.snapshot.timestamp;\\\\\\\\nconst compareTimestamp = props.compareTimestamp ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst swapTimestamps = currentTimestamp < compareTimestamp;\\\\\\\\n\\\\\\\\nconst snapshotHistory = post.snapshot_history;\\\\\\\\nconst snapshot =\\\\\\\\n  currentTimestamp === post.snapshot.timestamp\\\\\\\\n    ? post.snapshot\\\\\\\\n    : (snapshotHistory &&\\\\\\\\n        snapshotHistory.find((s) => s.timestamp === currentTimestamp)) ??\\\\\\\\n      null;\\\\\\\\nconst compareSnapshot =\\\\\\\\n  compareTimestamp === post.snapshot.timestamp\\\\\\\\n    ? post.snapshot\\\\\\\\n    : (snapshotHistory &&\\\\\\\\n        snapshotHistory.find((s) => s.timestamp === compareTimestamp)) ??\\\\\\\\n      null;\\\\\\\\n\\\\\\\\n// If this post is displayed under another post. Used to limit the size.\\\\\\\\nconst isUnderPost = props.isUnderPost ? true : false;\\\\\\\\nconst parentId = Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_parent_id\\\\\\\\\\\\\\\", {\\\\\\\\n  post_id: postId,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst childPostIdsUnordered =\\\\\\\\n  Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_children_ids\\\\\\\\\\\\\\\", {\\\\\\\\n    post_id: postId,\\\\\\\\n  }) ?? [];\\\\\\\\n\\\\\\\\nconst childPostIds = props.isPreview ? [] : childPostIdsUnordered.reverse();\\\\\\\\nconst expandable = props.isPreview ? false : props.expandable ?? false;\\\\\\\\nconst defaultExpanded = expandable ? props.defaultExpanded : true;\\\\\\\\n\\\\\\\\nconst draftState = props.draftState;\\\\\\\\n\\\\\\\\nfunction readableDate(timestamp) {\\\\\\\\n  var a = new Date(timestamp);\\\\\\\\n  return a.toDateString() + \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" + a.toLocaleTimeString();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst timestamp = readableDate(\\\\\\\\n  snapshot.timestamp ? snapshot.timestamp / 1000000 : Date.now()\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst postSearchKeywords = props.searchKeywords ? (\\\\\\\\n  <div style={{ \\\\\\\\\\\\\\\"font-family\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"monospace\\\\\\\\\\\\\\\" }} key=\\\\\\\\\\\\\\\"post-search-keywords\\\\\\\\\\\\\\\">\\\\\\\\n    <span>Found keywords: </span>\\\\\\\\n    {props.searchKeywords.map((tag) => (\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Tag\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{ linkTo: \\\\\\\\\\\\\\\"Feed\\\\\\\\\\\\\\\", tag }}\\\\\\\\n      />\\\\\\\\n    ))}\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"post-search-keywords\\\\\\\\\\\\\\\"></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst searchKeywords = props.searchKeywords ? (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"mb-4\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"search-keywords\\\\\\\\\\\\\\\">\\\\\\\\n    <small class=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{postSearchKeywords}</small>\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"search-keywords\\\\\\\\\\\\\\\"></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst allowedToEdit =\\\\\\\\n  !props.isPreview &&\\\\\\\\n  Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"is_allowed_to_edit\\\\\\\\\\\\\\\", {\\\\\\\\n    post_id: postId,\\\\\\\\n    editor: context.accountId,\\\\\\\\n  });\\\\\\\\n\\\\\\\\nconst btnEditorWidget = (postType, name) => {\\\\\\\\n  return (\\\\\\\\n    <li>\\\\\\\\n      <a\\\\\\\\n        class=\\\\\\\\\\\\\\\"dropdown-item\\\\\\\\\\\\\\\"\\\\\\\\n        role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n        onClick={() =>\\\\\\\\n          State.update({ postType, editorType: \\\\\\\\\\\\\\\"EDIT\\\\\\\\\\\\\\\", showEditor: true })\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        {name}\\\\\\\\n      </a>\\\\\\\\n    </li>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst editControl = allowedToEdit ? (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"btn-group\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"group\\\\\\\\\\\\\\\">\\\\\\\\n    <a\\\\\\\\n      class=\\\\\\\\\\\\\\\"card-link px-2\\\\\\\\\\\\\\\"\\\\\\\\n      role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n      title=\\\\\\\\\\\\\\\"Edit post\\\\\\\\\\\\\\\"\\\\\\\\n      data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n      aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n      type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"bi bi-pencil-square\\\\\\\\\\\\\\\"></div>\\\\\\\\n    </a>\\\\\\\\n    <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\">\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as an idea\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as a solution\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Attestation\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as an attestation\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as a sponsorship\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as a comment\\\\\\\\\\\\\\\")}\\\\\\\\n    </ul>\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst shareButton = props.isPreview ? (\\\\\\\\n  <div></div>\\\\\\\\n) : (\\\\\\\\n  <Link\\\\\\\\n    class=\\\\\\\\\\\\\\\"card-link text-dark\\\\\\\\\\\\\\\"\\\\\\\\n    to={href({\\\\\\\\n      widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n      params: { page: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\", id: postId },\\\\\\\\n    })}\\\\\\\\n    role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n    target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n    title=\\\\\\\\\\\\\\\"Open in new tab\\\\\\\\\\\\\\\"\\\\\\\\n  >\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"bi bi-share\\\\\\\\\\\\\\\"></div>\\\\\\\\n  </Link>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst ProfileCardContainer = styled.div`\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// card-header\\\\\\\\nconst header = (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"header\\\\\\\\\\\\\\\">\\\\\\\\n    <small class=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"row justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"d-flex align-items-center flex-wrap\\\\\\\\\\\\\\\">\\\\\\\\n          <ProfileCardContainer>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.ProfileCard\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                accountId: post.author_id,\\\\\\\\n                nearDevGovGigsWidgetsAccountId: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </ProfileCardContainer>\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"d-flex ms-auto\\\\\\\\\\\\\\\">\\\\\\\\n            {editControl}\\\\\\\\n            {timestamp}\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.History\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                post,\\\\\\\\n                timestamp: currentTimestamp,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            {shareButton}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </small>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\n// const emptyIcons = {\\\\\\\\n//   Idea: \\\\\\\\\\\\\\\"bi-lightbulb\\\\\\\\\\\\\\\",\\\\\\\\n//   Comment: \\\\\\\\\\\\\\\"bi-chat\\\\\\\\\\\\\\\",\\\\\\\\n//   Solution: \\\\\\\\\\\\\\\"bi-rocket\\\\\\\\\\\\\\\",\\\\\\\\n//   Attestation: \\\\\\\\\\\\\\\"bi-check-circle\\\\\\\\\\\\\\\",\\\\\\\\n//   Sponsorship: \\\\\\\\\\\\\\\"bi-cash-coin\\\\\\\\\\\\\\\",\\\\\\\\n//   Github: \\\\\\\\\\\\\\\"bi-github\\\\\\\\\\\\\\\",\\\\\\\\n//   Like: \\\\\\\\\\\\\\\"bi-heart\\\\\\\\\\\\\\\",\\\\\\\\n//   Reply: \\\\\\\\\\\\\\\"bi-reply\\\\\\\\\\\\\\\",\\\\\\\\n// };\\\\\\\\n\\\\\\\\nconst emptyIcons = {\\\\\\\\n  Idea: \\\\\\\\\\\\\\\"\\\\\\\\u{1f4a1}\\\\\\\\\\\\\\\",\\\\\\\\n  Comment: \\\\\\\\\\\\\\\"bi-chat\\\\\\\\\\\\\\\",\\\\\\\\n  Solution: \\\\\\\\\\\\\\\"\\\\\\\\u{1f680}\\\\\\\\\\\\\\\",\\\\\\\\n  Attestation: \\\\\\\\\\\\\\\"\\\\\\\\u{2705}\\\\\\\\\\\\\\\",\\\\\\\\n  Sponsorship: \\\\\\\\\\\\\\\"\\\\\\\\u{1fa99}\\\\\\\\\\\\\\\",\\\\\\\\n  Github: \\\\\\\\\\\\\\\"bi-github\\\\\\\\\\\\\\\",\\\\\\\\n  Like: \\\\\\\\\\\\\\\"bi-heart\\\\\\\\\\\\\\\",\\\\\\\\n  Reply: \\\\\\\\\\\\\\\"bi-reply\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst fillIcons = {\\\\\\\\n  Idea: \\\\\\\\\\\\\\\"\\\\\\\\u{1f4a1}\\\\\\\\\\\\\\\",\\\\\\\\n  Comment: \\\\\\\\\\\\\\\"bi-chat-fill\\\\\\\\\\\\\\\",\\\\\\\\n  Solution: \\\\\\\\\\\\\\\"\\\\\\\\u{1f680}\\\\\\\\\\\\\\\",\\\\\\\\n  Attestation: \\\\\\\\\\\\\\\"\\\\\\\\u{2705}\\\\\\\\\\\\\\\",\\\\\\\\n  Sponsorship: \\\\\\\\\\\\\\\"\\\\\\\\u{1fa99}\\\\\\\\\\\\\\\",\\\\\\\\n  Github: \\\\\\\\\\\\\\\"bi-github\\\\\\\\\\\\\\\",\\\\\\\\n  Like: \\\\\\\\\\\\\\\"bi-heart-fill\\\\\\\\\\\\\\\",\\\\\\\\n  Reply: \\\\\\\\\\\\\\\"bi-reply-fill\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\n// Trigger saving this widget.\\\\\\\\n\\\\\\\\nconst borders = {\\\\\\\\n  Idea: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Comment: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Solution: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Attestation: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Sponsorship: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Github: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst containsLike = props.isPreview\\\\\\\\n  ? false\\\\\\\\n  : post.likes.find((l) => l.author_id == context.accountId);\\\\\\\\nconst likeBtnClass = containsLike ? fillIcons.Like : emptyIcons.Like;\\\\\\\\n// This must be outside onLike, because Near.view returns null at first, and when the view call finished, it returns true/false.\\\\\\\\n// If checking this inside onLike, it will give `null` and we cannot tell the result is true or false.\\\\\\\\nlet grantNotify = Near.view(\\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"is_write_permission_granted\\\\\\\\\\\\\\\", {\\\\\\\\n  predecessor_id: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n  key: context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\",\\\\\\\\n});\\\\\\\\nif (grantNotify === null) {\\\\\\\\n  return;\\\\\\\\n}\\\\\\\\nconst onLike = () => {\\\\\\\\n  if (!context.accountId) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  let likeTxn = [\\\\\\\\n    {\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"add_like\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        post_id: postId,\\\\\\\\n      },\\\\\\\\n      deposit: Big(10).pow(21).mul(2),\\\\\\\\n      gas: Big(10).pow(12).mul(100),\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  if (grantNotify === false) {\\\\\\\\n    likeTxn.unshift({\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"grant_write_permission\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        predecessor_id: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n        keys: [context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\"],\\\\\\\\n      },\\\\\\\\n      deposit: Big(10).pow(23),\\\\\\\\n      gas: Big(10).pow(12).mul(30),\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n  Near.call(likeTxn);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst btnCreatorWidget = (postType, icon, name, desc) => {\\\\\\\\n  return (\\\\\\\\n    <li class=\\\\\\\\\\\\\\\"py-1\\\\\\\\\\\\\\\">\\\\\\\\n      <a\\\\\\\\n        class=\\\\\\\\\\\\\\\"dropdown-item text-decoration-none d-flex align-items-center lh-sm\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ color: \\\\\\\\\\\\\\\"rgb(55,109,137)\\\\\\\\\\\\\\\" }}\\\\\\\\n        role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n        onClick={() =>\\\\\\\\n          State.update({ postType, editorType: \\\\\\\\\\\\\\\"CREATE\\\\\\\\\\\\\\\", showEditor: true })\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <i class={`bi ${icon}`} style={{ fontSize: \\\\\\\\\\\\\\\"1.5rem\\\\\\\\\\\\\\\" }}>\\\\\\\\n          {\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n        </i>\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"ps-2 text-wrap\\\\\\\\\\\\\\\" style={{ width: \\\\\\\\\\\\\\\"18rem\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <div>{name}</div>\\\\\\\\n          <small class=\\\\\\\\\\\\\\\"fw-light text-secondary\\\\\\\\\\\\\\\">{desc}</small>\\\\\\\\n        </div>\\\\\\\\n      </a>\\\\\\\\n    </li>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FooterButtonsContianer = styled.div`\\\\\\\\n  width: 66.66666667%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst buttonsFooter = props.isPreview ? null : (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"buttons-footer\\\\\\\\\\\\\\\">\\\\\\\\n    <FooterButtonsContianer>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"btn-group\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"group\\\\\\\\\\\\\\\" aria-label=\\\\\\\\\\\\\\\"Basic outlined example\\\\\\\\\\\\\\\">\\\\\\\\n        <ButtonWithHover\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn d-flex align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n          onClick={onLike}\\\\\\\\n        >\\\\\\\\n          <i class={`bi ${likeBtnClass}`}> </i>\\\\\\\\n          {post.likes.length == 0 ? (\\\\\\\\n            \\\\\\\\\\\\\\\"Like\\\\\\\\\\\\\\\"\\\\\\\\n          ) : (\\\\\\\\n            <Widget\\\\\\\\n              // TODO: LEGACY.\\\\\\\\n              src=\\\\\\\\\\\\\\\"devgovgigs.near/widget/gigs-board.components.layout.LikeButton.Faces\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                likesByUsers: Object.fromEntries(\\\\\\\\n                  post.likes.map(({ author_id }) => [author_id, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"])\\\\\\\\n                ),\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          )}\\\\\\\\n        </ButtonWithHover>\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"btn-group\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"group\\\\\\\\\\\\\\\">\\\\\\\\n          <ButtonWithHover\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            class=\\\\\\\\\\\\\\\"btn\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n            aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            \\\\\\\\u{21aa} Reply\\\\\\\\n          </ButtonWithHover>\\\\\\\\n          <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\">\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Idea,\\\\\\\\n              \\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Get feedback from the community about a problem, opportunity, or need.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Solution,\\\\\\\\n              \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Provide a specific proposal or implementation to an idea, optionally requesting funding.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Attestation\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Attestation,\\\\\\\\n              \\\\\\\\\\\\\\\"Attestation\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Formally review or validate a solution as a recognized expert.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Sponsorship,\\\\\\\\n              \\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Offer to fund projects, events, or proposals that match your needs.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            <li>\\\\\\\\n              <hr class=\\\\\\\\\\\\\\\"dropdown-divider\\\\\\\\\\\\\\\" />\\\\\\\\n            </li>\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Comment,\\\\\\\\n              \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Ask a question, provide information, or share a resource that is relevant to the thread.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n          </ul>\\\\\\\\n        </div>\\\\\\\\n        <ButtonWithHover\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"collapse\\\\\\\\\\\\\\\"\\\\\\\\n          href={`#collapseChildPosts${postId}`}\\\\\\\\n          aria-expanded={defaultExpanded}\\\\\\\\n          aria-controls={`collapseChildPosts${postId}`}\\\\\\\\n        >\\\\\\\\n          <i class=\\\\\\\\\\\\\\\"bi bi-chevron-down\\\\\\\\\\\\\\\"> </i>{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          {`Expand Replies (${childPostIds.length})`}\\\\\\\\n        </ButtonWithHover>\\\\\\\\n\\\\\\\\n        {isUnderPost || !parentId ? (\\\\\\\\n          <div key=\\\\\\\\\\\\\\\"link-to-parent\\\\\\\\\\\\\\\"></div>\\\\\\\\n        ) : (\\\\\\\\n          <Link\\\\\\\\n            to={href({\\\\\\\\n              gateway: \\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\",\\\\\\\\n              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\", id: parentId },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <ButtonWithHover\\\\\\\\n              type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n              style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"btn\\\\\\\\\\\\\\\"\\\\\\\\n              key=\\\\\\\\\\\\\\\"link-to-parent\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <i class=\\\\\\\\\\\\\\\"bi bi-arrow-90deg-up\\\\\\\\\\\\\\\"></i>Go to parent\\\\\\\\n            </ButtonWithHover>\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </FooterButtonsContianer>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst CreatorWidget = (postType) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      class={`collapse ${\\\\\\\\n        draftState?.parent_post_id == postId && draftState?.postType == postType\\\\\\\\n          ? \\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n      }`}\\\\\\\\n      id={`collapse${postType}Creator${postId}`}\\\\\\\\n      data-bs-parent={`#accordion${postId}`}\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.PostEditor\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          postType,\\\\\\\\n          onDraftStateChange: props.onDraftStateChange,\\\\\\\\n          draftState:\\\\\\\\n            draftState?.parent_post_id == postId ? draftState : undefined,\\\\\\\\n          parentId: postId,\\\\\\\\n          mode: \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst tokenMapping = {\\\\\\\\n  NEAR: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\",\\\\\\\\n  USDT: {\\\\\\\\n    NEP141: {\\\\\\\\n      address: \\\\\\\\\\\\\\\"usdt.tether-token.near\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  USDC: {\\\\\\\\n    NEP141: {\\\\\\\\n      address:\\\\\\\\n        \\\\\\\\\\\\\\\"17208628f84f5d6ad33f0da3bbbeb27ffcb398eac501a31bd6ad2011e36133a1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  // Add more tokens here as needed\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst reverseTokenMapping = Object.keys(tokenMapping).reduce(\\\\\\\\n  (reverseMap, key) => {\\\\\\\\n    const value = tokenMapping[key];\\\\\\\\n    if (typeof value === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n      reverseMap[JSON.stringify(value)] = key;\\\\\\\\n    }\\\\\\\\n    return reverseMap;\\\\\\\\n  },\\\\\\\\n  {}\\\\\\\\n);\\\\\\\\n\\\\\\\\nfunction tokenResolver(token) {\\\\\\\\n  if (typeof token === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    return token;\\\\\\\\n  } else if (typeof token === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n    const tokenString = reverseTokenMapping[JSON.stringify(token)];\\\\\\\\n    return tokenString || null;\\\\\\\\n  } else {\\\\\\\\n    return null; // Invalid input\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst EditorWidget = (postType) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      class={`collapse ${\\\\\\\\n        draftState?.edit_post_id == postId && draftState?.postType == postType\\\\\\\\n          ? \\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n      }`}\\\\\\\\n      id={`collapse${postType}Editor${postId}`}\\\\\\\\n      data-bs-parent={`#accordion${postId}`}\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.PostEditor\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          postType,\\\\\\\\n          postId,\\\\\\\\n          mode: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n          author_id: post.author_id,\\\\\\\\n          labels: post.snapshot.labels,\\\\\\\\n          name: post.snapshot.name,\\\\\\\\n          description: post.snapshot.description,\\\\\\\\n          amount: post.snapshot.amount,\\\\\\\\n          token: tokenResolver(post.snapshot.sponsorship_token),\\\\\\\\n          supervisor: post.snapshot.supervisor,\\\\\\\\n          githubLink: post.snapshot.github_link,\\\\\\\\n          onDraftStateChange: props.onDraftStateChange,\\\\\\\\n          draftState:\\\\\\\\n            draftState?.edit_post_id == postId ? draftState : undefined,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isDraft =\\\\\\\\n  (draftState?.parent_post_id === postId &&\\\\\\\\n    draftState?.postType === state.postType) ||\\\\\\\\n  (draftState?.edit_post_id === postId &&\\\\\\\\n    draftState?.postType === state.postType);\\\\\\\\n\\\\\\\\nfunction Editor() {\\\\\\\\n  return (\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\" id={`accordion${postId}`} key=\\\\\\\\\\\\\\\"editors-footer\\\\\\\\\\\\\\\">\\\\\\\\n      <div\\\\\\\\n        key={`${state.postType}${state.editorType}${postId}`}\\\\\\\\n        className={\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\"}\\\\\\\\n      >\\\\\\\\n        {state.editorType === \\\\\\\\\\\\\\\"CREATE\\\\\\\\\\\\\\\" ? (\\\\\\\\n          <>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.PostEditor\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                postType: state.postType,\\\\\\\\n                onDraftStateChange: props.onDraftStateChange,\\\\\\\\n                draftState:\\\\\\\\n                  draftState?.parent_post_id == postId ? draftState : undefined,\\\\\\\\n                parentId: postId,\\\\\\\\n                mode: \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        ) : (\\\\\\\\n          <>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.PostEditor\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                postType: state.postType,\\\\\\\\n                postId,\\\\\\\\n                mode: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                author_id: post.author_id,\\\\\\\\n                labels: post.snapshot.labels,\\\\\\\\n                name: post.snapshot.name,\\\\\\\\n                description: post.snapshot.description,\\\\\\\\n                amount: post.snapshot.amount,\\\\\\\\n                token: tokenResolver(post.snapshot.sponsorship_token),\\\\\\\\n                supervisor: post.snapshot.supervisor,\\\\\\\\n                githubLink: post.snapshot.github_link,\\\\\\\\n                onDraftStateChange: props.onDraftStateChange,\\\\\\\\n                draftState:\\\\\\\\n                  draftState?.edit_post_id == postId ? draftState : undefined,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst renamedPostType =\\\\\\\\n  snapshot.post_type == \\\\\\\\\\\\\\\"Submission\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\" : snapshot.post_type;\\\\\\\\n\\\\\\\\nconst tags = post.snapshot.labels ? (\\\\\\\\n  <div\\\\\\\\n    class=\\\\\\\\\\\\\\\"card-title d-flex flex-wrap align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ margin: \\\\\\\\\\\\\\\"20px 0\\\\\\\\\\\\\\\" }}\\\\\\\\n    key=\\\\\\\\\\\\\\\"post-labels\\\\\\\\\\\\\\\"\\\\\\\\n  >\\\\\\\\n    {post.snapshot.labels.map((tag, idx) => (\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center my-3 me-3\\\\\\\\\\\\\\\">\\\\\\\\n        <Link\\\\\\\\n          to={href({\\\\\\\\n            widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n            params: { page: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\", tag: tag },\\\\\\\\n          })}\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ cursor: \\\\\\\\\\\\\\\"pointer\\\\\\\\\\\\\\\", textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Tag\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                tag,\\\\\\\\n                black: true,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </Link>\\\\\\\\n        {idx !== post.snapshot.labels.length - 1 && (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"ms-3\\\\\\\\\\\\\\\">\\\\\\\\u{2022}</span>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    ))}\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"post-labels\\\\\\\\\\\\\\\"></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Title = styled.h5`\\\\\\\\n  margin: 1rem 0;\\\\\\\\n\\\\\\\\n  color: #151515;\\\\\\\\n  font-size: 1.15rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 1.625rem; /* 55.556% */\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst postTitle =\\\\\\\\n  snapshot.post_type == \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\" ? (\\\\\\\\n    <div key=\\\\\\\\\\\\\\\"post-title\\\\\\\\\\\\\\\"></div>\\\\\\\\n  ) : (\\\\\\\\n    <Title key=\\\\\\\\\\\\\\\"post-title\\\\\\\\\\\\\\\">\\\\\\\\n      {emptyIcons[snapshot.post_type]} {renamedPostType}: {snapshot.name}\\\\\\\\n    </Title>\\\\\\\\n  );\\\\\\\\n\\\\\\\\nconst postExtra =\\\\\\\\n  snapshot.post_type == \\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\" ? (\\\\\\\\n    <div key=\\\\\\\\\\\\\\\"post-extra\\\\\\\\\\\\\\\">\\\\\\\\n      <h6 class=\\\\\\\\\\\\\\\"card-subtitle mb-2 text-muted\\\\\\\\\\\\\\\">\\\\\\\\n        Maximum amount: {snapshot.amount}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n        {tokenResolver(snapshot.sponsorship_token)}\\\\\\\\n      </h6>\\\\\\\\n      <h6 class=\\\\\\\\\\\\\\\"card-subtitle mb-2 text-muted\\\\\\\\\\\\\\\">\\\\\\\\n        Supervisor:{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"neardevgov.near/widget/ProfileLine\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{ accountId: snapshot.supervisor }}\\\\\\\\n        />\\\\\\\\n      </h6>\\\\\\\\n    </div>\\\\\\\\n  ) : (\\\\\\\\n    <div></div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\nconst childPostHasDraft = childPostIds.find(\\\\\\\\n  (childId) =>\\\\\\\\n    childId == draftState?.edit_post_id || childId == draftState?.parent_post_id\\\\\\\\n);\\\\\\\\nif (\\\\\\\\n  (childPostHasDraft || state.childrenOfChildPostsHasDraft) &&\\\\\\\\n  props.expandParent\\\\\\\\n) {\\\\\\\\n  props.expandParent();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst postsList =\\\\\\\\n  props.isPreview || childPostIds.length == 0 ? (\\\\\\\\n    <div key=\\\\\\\\\\\\\\\"posts-list\\\\\\\\\\\\\\\"></div>\\\\\\\\n  ) : (\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"posts-list\\\\\\\\\\\\\\\">\\\\\\\\n      <div\\\\\\\\n        class={`collapse mt-3 ${\\\\\\\\n          defaultExpanded ||\\\\\\\\n          childPostHasDraft ||\\\\\\\\n          state.childrenOfChildPostsHasDraft\\\\\\\\n            ? \\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\"\\\\\\\\n            : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n        }`}\\\\\\\\n        id={`collapseChildPosts${postId}`}\\\\\\\\n      >\\\\\\\\n        {childPostIds.map((childId) => (\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Post\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              id: childId,\\\\\\\\n              isUnderPost: true,\\\\\\\\n              onDraftStateChange: props.onDraftStateChange,\\\\\\\\n              draftState,\\\\\\\\n              expandParent: () =>\\\\\\\\n                State.update({ childrenOfChildPostsHasDraft: true }),\\\\\\\\n              referral: `subpost${childId}of${postId}`,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        ))}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\nconst LimitedMarkdown = styled.div`\\\\\\\\n  max-height: 20em;\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// Determine if located in the post page.\\\\\\\\nconst isInList = props.isInList;\\\\\\\\nconst contentArray = snapshot.description.split(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\");\\\\\\\\nconst needClamp = isInList && contentArray.length > 5;\\\\\\\\n\\\\\\\\ninitState({\\\\\\\\n  clamp: needClamp,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst clampedContent = needClamp\\\\\\\\n  ? contentArray.slice(0, 3).join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\")\\\\\\\\n  : snapshot.description;\\\\\\\\n\\\\\\\\n// Should make sure the posts under the currently top viewed post are limited in size.\\\\\\\\nconst descriptionArea = isUnderPost ? (\\\\\\\\n  <LimitedMarkdown className=\\\\\\\\\\\\\\\"overflow-auto\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"description-area\\\\\\\\\\\\\\\">\\\\\\\\n    {/* {widget(\\\\\\\\\\\\\\\"components.molecule.markdown-viewer\\\\\\\\\\\\\\\", {\\\\\\\\n      text: snapshot.description,\\\\\\\\n    })} */}\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        text: snapshot.description,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </LimitedMarkdown>\\\\\\\\n) : (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100 overflow-auto\\\\\\\\\\\\\\\">\\\\\\\\n    <div class={state.clamp ? \\\\\\\\\\\\\\\"clamp\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}>\\\\\\\\n      {/* {widget(\\\\\\\\\\\\\\\"components.molecule.markdown-viewer\\\\\\\\\\\\\\\", {\\\\\\\\n        text: state.clamp ? clampedContent : snapshot.description,\\\\\\\\n      })} */}\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          text: state.clamp ? clampedContent : snapshot.description,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n    {state.clamp ? (\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"d-flex justify-content-start\\\\\\\\\\\\\\\">\\\\\\\\n        <a\\\\\\\\n          style={{ cursor: \\\\\\\\\\\\\\\"pointer\\\\\\\\\\\\\\\", color: \\\\\\\\\\\\\\\"#00ec97\\\\\\\\\\\\\\\" }}\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn-link text-dark fw-bold text-decoration-none\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() => State.update({ clamp: false })}\\\\\\\\n        >\\\\\\\\n          See more\\\\\\\\n        </a>\\\\\\\\n      </div>\\\\\\\\n    ) : (\\\\\\\\n      <></>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst timestampElement = (_snapshot) => {\\\\\\\\n  return (\\\\\\\\n    <Link\\\\\\\\n      class=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n      href={href({\\\\\\\\n        gateway: \\\\\\\\\\\\\\\"near.org\\\\\\\\\\\\\\\",\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n          id: postId,\\\\\\\\n          timestamp: _snapshot.timestamp,\\\\\\\\n          compareTimestamp: null,\\\\\\\\n          referral,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n    >\\\\\\\\n      {readableDate(_snapshot.timestamp / 1000000).substring(4)}\\\\\\\\n\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"mob.near/widget/ProfileImage\\\\\\\\\\\\\\\"\\\\\\\\n        props={{\\\\\\\\n          accountId: _snapshot.editor_id,\\\\\\\\n          style: {\\\\\\\\n            width: \\\\\\\\\\\\\\\"1.25em\\\\\\\\\\\\\\\",\\\\\\\\n            height: \\\\\\\\\\\\\\\"1.25em\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          imageStyle: {\\\\\\\\n            transform: \\\\\\\\\\\\\\\"translateY(-12.5%)\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      {_snapshot.editor_id.substring(0, 8)}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction combineText(_snapshot) {\\\\\\\\n  return (\\\\\\\\n    \\\\\\\\\\\\\\\"## \\\\\\\\\\\\\\\" +\\\\\\\\n    _snapshot.post_type +\\\\\\\\n    \\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\" +\\\\\\\\n    _snapshot.name +\\\\\\\\n    \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\" +\\\\\\\\n    _snapshot.description\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CardContainer = styled.div`\\\\\\\\n  padding: 1.5rem 3rem !important;\\\\\\\\n  border-radius: 16px !important;\\\\\\\\n  border: 1px solid rgba(129, 129, 129, 0.3) !important;\\\\\\\\n  background: #fffefe !important;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    padding: 1rem !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <CardContainer className={`card ${borders[snapshot.post_type]} attractable`}>\\\\\\\\n    {header}\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\" style={{ padding: 0 }}>\\\\\\\\n      {searchKeywords}\\\\\\\\n      {compareSnapshot ? (\\\\\\\\n        <div\\\\\\\\n          class=\\\\\\\\\\\\\\\"border rounded\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ marginTop: \\\\\\\\\\\\\\\"16px\\\\\\\\\\\\\\\", marginBottom: \\\\\\\\\\\\\\\"16px\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"d-flex justify-content-end\\\\\\\\\\\\\\\" style={{ fontSize: \\\\\\\\\\\\\\\"12px\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <div class=\\\\\\\\\\\\\\\"d-flex w-50 justify-content-end mt-1 me-2\\\\\\\\\\\\\\\">\\\\\\\\n              {timestampElement(snapshot)}\\\\\\\\n              {snapshot !== compareSnapshot && (\\\\\\\\n                <>\\\\\\\\n                  <div class=\\\\\\\\\\\\\\\"mx-1 align-self-center\\\\\\\\\\\\\\\">\\\\\\\\n                    <i class=\\\\\\\\\\\\\\\"bi bi-file-earmark-diff\\\\\\\\\\\\\\\" />\\\\\\\\n                  </div>\\\\\\\\n                  {timestampElement(compareSnapshot)}\\\\\\\\n                </>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"w-100 overflow-auto\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"markeljan.near/widget/MarkdownDiff\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                post: post,\\\\\\\\n                currentCode: combineText(\\\\\\\\n                  swapTimestamps ? compareSnapshot : snapshot\\\\\\\\n                ),\\\\\\\\n                prevCode: combineText(\\\\\\\\n                  swapTimestamps ? snapshot : compareSnapshot\\\\\\\\n                ),\\\\\\\\n                showLineNumber: true,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      ) : (\\\\\\\\n        <>\\\\\\\\n          {postTitle}\\\\\\\\n          {postExtra}\\\\\\\\n          {descriptionArea}\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n      {tags}\\\\\\\\n      {buttonsFooter}\\\\\\\\n      {!props.isPreview && (isDraft || state.showEditor) && <Editor />}\\\\\\\\n      {postsList}\\\\\\\\n    </div>\\\\\\\\n  </CardContainer>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.1799352295521e+21
    }
  },
  {
    "id": "1336743541",
    "receipt_id": "7hU7JisuD8c7v7vVvNNRMHuuve4oUhrk2UVhKJy7Wcbd",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "ADWsWK46mdCeRTKfgpZsTmg6u5LyEKvpekhueXwH2VRF",
      "block_height": 104864889,
      "block_timestamp": 1699042928517527000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "461RGSCsJyRynP3xZmUwNyyZqC9EeRrRmzEJjQbKnjWN",
    "included_in_block_hash": "D3GhNHp38bKmhNizsSTgjiomUvaKF1YuUvxwCoDmfcTH",
    "block_timestamp": "1699042926613007556",
    "block": {
      "block_height": 104864887
    },
    "receipt_conversion_tokens_burnt": "248370755330000000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8813290472705763e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.1799352295521e+21
    }
  },
  {
    "id": "1336757441",
    "receipt_id": "3EgNZ2u3FQj4qn39zjTv3CVrBeQwqvvbDSvTry86EKfW",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "DXsn7rpq5LU58qcLxbtWr9iTbSJs6ds2myftt8wwhDYV",
      "block_height": 104865429,
      "block_timestamp": 1699043522411456000
    },
    "receipt_outcome": {
      "gas_burnt": 2621540611377,
      "tokens_burnt": 262154061137700000000,
      "executor_account_id": "social.near",
      "status": false
    },
    "transaction_hash": "AdE8DHKKQj7jFeVf1MFVv8bKHQJZzR1N6MkGqTVzUqpT",
    "included_in_block_hash": "8LHb857D8TpiN9qjYyVFWmGRSiSsp7YMzxPeui6z5s8h",
    "block_timestamp": "1699043521177572208",
    "block": {
      "block_height": 104865428
    },
    "receipt_conversion_tokens_burnt": "242818931208000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "grant_write_permission",
        "deposit": 0,
        "fee": 262154061137700000000,
        "args": "{\"keys\": [\"devhub.near/widget\"], \"public_key\": \"ed25519:gZABev7VE5GhZcyRk8reN3kJ3RdXdTXmsChRPFhEGgg\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": false
    },
    "outcomes_agg": {
      "transaction_fee": 504972992345700000000
    }
  },
  {
    "id": "1336757785",
    "receipt_id": "5P5LrYwsutbnPezuLunXrBVGSNcbkoyQo1wsQG86Dr8H",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "68Nw9mvRySt8RPRNqRZSvpCz9r43EfB4iLX1FaNh6GG",
      "block_height": 104865430,
      "block_timestamp": 1699043523548365000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "AdE8DHKKQj7jFeVf1MFVv8bKHQJZzR1N6MkGqTVzUqpT",
    "included_in_block_hash": "8LHb857D8TpiN9qjYyVFWmGRSiSsp7YMzxPeui6z5s8h",
    "block_timestamp": "1699043521177572208",
    "block": {
      "block_height": 104865428
    },
    "receipt_conversion_tokens_burnt": "242818931208000000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8792506480509936e+22,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": false
    },
    "outcomes_agg": {
      "transaction_fee": 504972992345700000000
    }
  },
  {
    "id": "1336760034",
    "receipt_id": "CD1GJeLyPsmapret43LUN2ezjcgDfYXDQrbxEFaNDj2D",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7EdWWFJdUDpc7DSvcEKZENBaRZLEQiMcnAp9Zue8PKUx",
      "block_height": 104865473,
      "block_timestamp": 1699043568701815600
    },
    "receipt_outcome": {
      "gas_burnt": 4813300388661,
      "tokens_burnt": 481330038866100000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "BZvukTPZvVycvB5nLj4op1xLn7Nz9AmaFjAkKLXUiMbv",
    "included_in_block_hash": "96kKTKH7JpDs9mmkm2CdbzcnbKEjU7NYWQvDGYRHwCoH",
    "block_timestamp": "1699043567774435990",
    "block": {
      "block_height": 104865472
    },
    "receipt_conversion_tokens_burnt": "242818931208000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "grant_write_permission",
        "deposit": 1,
        "fee": 481330038866100000000,
        "args": "{\"keys\": [\"devhub.near/widget\"], \"public_key\": \"ed25519:gZABev7VE5GhZcyRk8reN3kJ3RdXdTXmsChRPFhEGgg\"}"
      }
    ],
    "actions_agg": {
      "deposit": 1
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 724148970074100000000
    }
  }
]