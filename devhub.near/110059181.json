[
  {
    "id": "2070583175",
    "receipt_id": "71d5ndjvCgYYxeftyBCLwjoZCttALUNWZeQm11fckDeB",
    "predecessor_account_id": "bo.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "28sJtyDdcR71jy4MSX1rWYMwC2BG3nJ3CUQDidVRBasZ",
      "block_height": 110059196,
      "block_timestamp": 1704886310786322400
    },
    "receipt_outcome": {
      "gas_burnt": 6626201348324,
      "tokens_burnt": 662620134832400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "C2uaaB9kBUrpR8gU7NsUZewfA3S5m9HUjg5ytSEkYiuk",
    "included_in_block_hash": "5j8vw5J6BP6YBpg7d48o2MhtN5z1rE8Hrg8rA8DucioU",
    "block_timestamp": "1704886309634054964",
    "block": {
      "block_height": 110059195
    },
    "receipt_conversion_tokens_burnt": "242989309378800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "update_community",
        "deposit": 0,
        "fee": 662620134832400000000,
        "args": "{\"handle\": \"webassemblymusic\", \"community\": {\"tag\": \"webassemblymusic\", \"name\": \"WebAssembly Music\", \"addons\": [], \"admins\": [\"petersalomonsen.near\"], \"handle\": \"webassemblymusic\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreibysr2mkwhb4j36h2t7mqwhynqdy4vzjfygfkfg65kuspd2bawauu\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\", \"description\": \"Music stored forever in the NEAR blockchain\", \"website_url\": \"webassemblymusic.near.page\", \"bio_markdown\": \"Music written in Javascript / AssemblyScript and stored in tiny WebAssembly binaries. See the introduction here: https://youtu.be/C8j_ieOm4vE?si=I2Cq534eynlhasg5\", \"github_handle\": \"petersalomonsen/javascriptmusic\", \"twitter_handle\": \"salomonsen_p\", \"telegram_handle\": null}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5728367489556e+21
    }
  },
  {
    "id": "2070583847",
    "receipt_id": "J1t8UpeFQDVW7cJLzC5F6rWnJmNN2sjYpehwMwYPiGup",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "Hd54PqdLreogJPL1yK6uY3zD377ZSTSP3YwHQ9u6GpWd",
      "block_height": 110059197,
      "block_timestamp": 1704886311830933800
    },
    "receipt_outcome": {
      "gas_burnt": 6672273047444,
      "tokens_burnt": 667227304744400000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "C2uaaB9kBUrpR8gU7NsUZewfA3S5m9HUjg5ytSEkYiuk",
    "included_in_block_hash": "5j8vw5J6BP6YBpg7d48o2MhtN5z1rE8Hrg8rA8DucioU",
    "block_timestamp": "1704886309634054964",
    "block": {
      "block_height": 110059195
    },
    "receipt_conversion_tokens_burnt": "242989309378800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 667227304744400000000,
        "args": "{\"data\": {\"webassemblymusic.community.devhub.near\": {\"profile\": {\"name\": \"WebAssembly Music\", \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreibysr2mkwhb4j36h2t7mqwhynqdy4vzjfygfkfg65kuspd2bawauu\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5728367489556e+21
    }
  },
  {
    "id": "2143291088",
    "receipt_id": "GPebrhEDRHusWU1EDicMWHRE1CjGuitKHa7VF4Pp2fqw",
    "predecessor_account_id": "megha19.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5n37Bcup7icnmiQp939cV4S9NrjaKqSEyhpNdYD36Jp2",
      "block_height": 110534350,
      "block_timestamp": 1705394915894586600
    },
    "receipt_outcome": {
      "gas_burnt": 7627622757320,
      "tokens_burnt": 762762275732000000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "9SBnUWTr6Te4M7JZNfkg9e5eWoa7xzX7HFpRDEHgd1DD",
    "included_in_block_hash": "HDFBjt63ektHHZkd1uqbhbhuu9owYfSJKG5THUBgyXXM",
    "block_timestamp": "1705394914882423446",
    "block": {
      "block_height": 110534349
    },
    "receipt_conversion_tokens_burnt": "244050483655200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "update_community",
        "deposit": 0,
        "fee": 762762275732000000000,
        "args": "{\"handle\": \"devhub-test\", \"community\": {\"tag\": \"devhub-test\", \"name\": \"DevHub Test Area\", \"addons\": [{\"id\": \"g3f86c\", \"enabled\": true, \"addon_id\": \"telegram\", \"parameters\": \"{\\\\\\\\\\\\\\\"handles\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"NEAR_Tools_Community_Group\\\\\\\\\\\\\\\"]}\", \"display_name\": \"Telegram\"}, {\"id\": \"h5571b\", \"enabled\": true, \"addon_id\": \"github\", \"parameters\": \"{\\\\\\\\\\\\\\\"kanbanBoards\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"188c61da228--3e692fec--f183358-2f9b5409--353480a7\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"metadata\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c61da228--3e692fec--f183358-2f9b5409--353480a7\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"github.kanban_board\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ticket\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"github.kanban_ticket\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"features\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"author\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":true}}},\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"188c6222856--1dccd5a2-67865a7e-2a528517-6e0d3f3a\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPs that need a moderator review or author revision\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-protocol\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"S-draft\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEW\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c6222856--1dccd5a2-67865a7e-2a528517-6e0d3f3a\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"1890d1c390f-481c2ad2--5c4133a8--57c1c17a--1219b635\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPS that need a review by Subject Matter Experts\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-protocol\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"S-review\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"1890d1c390f-481c2ad2--5c4133a8--57c1c17a--1219b635\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"1890d1d0d1f--64e8a5b6-2b2971b--24f4037c-2fff41ec\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPS in the final review stage that need the work group voting indications\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-protocol\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"S-voting\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"VOTING\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"1890d1d0d1f--64e8a5b6-2b2971b--24f4037c-2fff41ec\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"1890d1d73d9-17f53408--6140ba2c--4f09e18e-785b6aab\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPS that were reviewed and approved by a work group\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-protocol\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"S-approved\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"1890d1d73d9-17f53408--6140ba2c--4f09e18e-785b6aab\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"1890d1e444f-35d79874--108dd3c1--379d71dc--6bd6029b\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPs that were reviewed and rejected by a work group\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-protocol\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"S-rejected\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"1890d1e444f-35d79874--108dd3c1--379d71dc--6bd6029b\\\\\\\\\\\\\\\"}},\\\\\\\\\\\\\\\"dataTypesIncluded\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"Issue\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"PullRequest\\\\\\\\\\\\\\\":true},\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Current status of NEARCORE repo where majority of protocol developments are happening\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"repoURL\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"https://github.com/near/NEPs\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ticketState\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEAR Protocol NEPs ( test )\\\\\\\\\\\\\\\"}}}\", \"display_name\": \"Github\"}, {\"id\": \"wudhf3\", \"enabled\": true, \"addon_id\": \"kanban\", \"parameters\": \"{\\\\\\\\\\\\\\\"metadata\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"18b883f1cd2--5805b101--6532b2e4--614f4cba-4d876c93\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"kanban.post_board\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"test\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"test\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ticket\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"kanban.post_ticket\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"features\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"author\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"like_count\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"approved_sponsorship_value\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"sponsorship_supervisor\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"tags\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"reply_count\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"sponsorship_request_indicator\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"requested_sponsorship_value\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"requested_sponsor\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"requested_grant_value\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"approved_grant_value\\\\\\\\\\\\\\\":true},\\\\\\\\\\\\\\\"sortBy\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"}},\\\\\\\\\\\\\\\"payload\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"18b884d18b0--1041f75b--7dd1bcf1-48add84a--4d010910\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"tag\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub-test\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Devhub-test\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"18b884d18b0--1041f75b--7dd1bcf1-48add84a--4d010910\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"18c90fbd51f-362f0dd1--14d4fad1--5eeaad09-354b32fe\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"tag\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"funding\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Funding\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"18c90fbd51f-362f0dd1--14d4fad1--5eeaad09-354b32fe\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"18cd8db5607-5f8b193b-794264c9-46a14ec0-6b4394a8\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"tag\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\" hackathon\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Hackathon\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"18cd8db5607-5f8b193b-794264c9-46a14ec0-6b4394a8\\\\\\\\\\\\\\\"}},\\\\\\\\\\\\\\\"tags\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"excluded\\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\\"required\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"devhub-test\\\\\\\\\\\\\\\"]}}}\", \"display_name\": \"Board\"}, {\"id\": \"wqo9tb\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"test\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"this is a test subtitle\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"...\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"Sample Wiki\"}, {\"id\": \"12qj0b\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"lorem ipsum\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tes\\\\\\\\\\\\\\\"}\", \"display_name\": \"Wiki 2\"}, {\"id\": \"uhil3x\", \"enabled\": true, \"addon_id\": \"blog\", \"parameters\": \"{\\\\\\\\\\\\\\\"includeLabels\\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\\"excludeLabels\\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\\"layout\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\"}\", \"display_name\": \"Blog\"}, {\"id\": \"b77tco\", \"enabled\": true, \"addon_id\": \"kanban\", \"parameters\": \"{\\\\\\\\\\\\\\\"metadata\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"18c8705abaf-2daac325--3c0c48e0-b97a9cb-269a1ddd\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"kanban.post_board\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ticket\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"kanban.post_ticket\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"features\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"author\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"like_count\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"reply_count\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"sponsorship_request_indicator\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"requested_sponsorship_value\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"requested_sponsor\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"approved_sponsorship_value\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"sponsorship_supervisor\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"tags\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":true}}},\\\\\\\\\\\\\\\"payload\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"18c8705e641--4d15f553--188a081a--7d813451-37c7f6a5\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"tag\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Column 1\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"description 1\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"18c8705e641--4d15f553--188a081a--7d813451-37c7f6a5\\\\\\\\\\\\\\\"}},\\\\\\\\\\\\\\\"tags\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"excluded\\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\\"required\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub-test\\\\\\\\\\\\\\\"}}}\", \"display_name\": \"Funding\"}], \"admins\": [\"frol.near\", \"bo.near\", \"thomasguntenaar.near\", \"efiz.near\", \"petersalomonsen.near\", \"neardevgov.near\", \"megha19.near\", \"theori.near\"], \"handle\": \"devhub-test\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreigvmbqq6xldovx26hgdtizapacmbf4dbms67a54zftaw4qsiob3ga\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreie5ujbzvtyk2ujvefog23ugot4q2l7g3tdjzb34lkgno3dlv5j66y\", \"description\": \"Testing on mainnet since NaN\", \"website_url\": null, \"bio_markdown\": \"New to building on NEAR? This community is your first stop. We\\\\\\\\u{2019}re here to help you build, whether you\\\\\\\\u{2019}re new to NEAR, new to web3, or someone experienced who needs help trying something different.\", \"github_handle\": null, \"twitter_handle\": null, \"telegram_handle\": \"NEAR_Tools_Community_Group\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6013283078616e+21
    }
  },
  {
    "id": "2143291102",
    "receipt_id": "EqQmqzBByMmkbs7yzpQgWX9pmozigb6ctjf4F3jkuySd",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8oWTsuUNemdPJUcgBkrgYRBdMDdhBmAYQaeuoK8m7syg",
      "block_height": 110534351,
      "block_timestamp": 1705394916919940600
    },
    "receipt_outcome": {
      "gas_burnt": 5945155484744,
      "tokens_burnt": 594515548474400000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "9SBnUWTr6Te4M7JZNfkg9e5eWoa7xzX7HFpRDEHgd1DD",
    "included_in_block_hash": "HDFBjt63ektHHZkd1uqbhbhuu9owYfSJKG5THUBgyXXM",
    "block_timestamp": "1705394914882423446",
    "block": {
      "block_height": 110534349
    },
    "receipt_conversion_tokens_burnt": "244050483655200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 594515548474400000000,
        "args": "{\"data\": {\"devhub-test.community.devhub.near\": {\"profile\": {\"name\": \"DevHub Test Area\", \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreigvmbqq6xldovx26hgdtizapacmbf4dbms67a54zftaw4qsiob3ga\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6013283078616e+21
    }
  },
  {
    "id": "2145188277",
    "receipt_id": "VFoKvovGRmpTJs7Sivs2TVvDWgukA7Xx4t2kq8izRZL",
    "predecessor_account_id": "megha19.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5VD7YLPvSD4fQcFkSTjPxrznJ2KrYrhMUJjnPuSNRi6a",
      "block_height": 110548392,
      "block_timestamp": 1705409549158428200
    },
    "receipt_outcome": {
      "gas_burnt": 6485010311773,
      "tokens_burnt": 648501031177300000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "HcvT8fENDMDSdx4U7pBbUvGsHGCni6raa57FC2kKjEwP",
    "included_in_block_hash": "HQ41H2ubRQKkahrXY2jcMst4nSQqoor7Rh47FPRHSHdr",
    "block_timestamp": "1705409547994159846",
    "block": {
      "block_height": 110548391
    },
    "receipt_conversion_tokens_burnt": "242835253526200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 648501031177300000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Announcements is live!\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"devhub-test\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5748853658977e+21
    }
  },
  {
    "id": "2145188877",
    "receipt_id": "4BVJJuU6jwBu5TDEF44NwhCifed5xF76uKkJqUpCGrnU",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7JojqCXhDezagAB4forP59pu9PjbiuZZdv6UpfDJZgVT",
      "block_height": 110548393,
      "block_timestamp": 1705409550272480000
    },
    "receipt_outcome": {
      "gas_burnt": 6835490811942,
      "tokens_burnt": 683549081194200000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "HcvT8fENDMDSdx4U7pBbUvGsHGCni6raa57FC2kKjEwP",
    "included_in_block_hash": "HQ41H2ubRQKkahrXY2jcMst4nSQqoor7Rh47FPRHSHdr",
    "block_timestamp": "1705409547994159846",
    "block": {
      "block_height": 110548391
    },
    "receipt_conversion_tokens_burnt": "242835253526200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 683549081194200000000,
        "args": "{\"data\": {\"devhub-test.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Announcements is live!\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5748853658977e+21
    }
  },
  {
    "id": "2148370484",
    "receipt_id": "6rUp523Njwbi5xqAZkYr5dBXzCt7fzeWL7pW1cPxGwfe",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "DdDn87rgex6LXHQ9ifjuZajLDmJjmi1x8s2wCfE6v8Zn",
      "block_height": 110569824,
      "block_timestamp": 1705432375233937200
    },
    "receipt_outcome": {
      "gas_burnt": 16544543426036,
      "tokens_burnt": 1.6544543426036e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "G8vVocuR6L5aLT2NFV3gsrmSXda9imVEULDc4wGH23Pc",
    "included_in_block_hash": "76TRBetAQVHGb7fwp4yoLuqukGpS4X15wvR8wmDHTr7D",
    "block_timestamp": "1705432374356869056",
    "block": {
      "block_height": 110569823
    },
    "receipt_conversion_tokens_burnt": "254997392925800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.6544543426036e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"core.lib.common\": {\"\": \"// https://docs.rs/near-sdk/latest/near_sdk/env/constant.STORAGE_PRICE_PER_BYTE.html\\\\\\\\nconst STORAGE_PRICE_PER_BYTE = \\\\\\\\\\\\\\\"10000000000000000000\\\\\\\\\\\\\\\";\\\\\\\\n// https://github.com/NearSocial/social-db/blob/d28c647252ce25a06c70c3b7f4930ccdcd217fd9/contract/src/account.rs#L8C5-L8C50\\\\\\\\nconst MIN_STORAGE_BYTES = \\\\\\\\\\\\\\\"2000\\\\\\\\\\\\\\\";\\\\\\\\nconst MIN_STORAGE_COST = Big(STORAGE_PRICE_PER_BYTE).times(MIN_STORAGE_BYTES);\\\\\\\\n\\\\\\\\n// in case the user is new and doesn\\\\\\\\\\\\'t have min storage cost, increasing the deposit\\\\\\\\nfunction getDepositAmountForWriteAccess(userStorageDeposit) {\\\\\\\\n  const depositAmt = Big(userStorageDeposit?.available).gt(MIN_STORAGE_COST)\\\\\\\\n    ? Big(10).pow(22)\\\\\\\\n    : Big(MIN_STORAGE_COST).plus(Big(10).pow(22));\\\\\\\\n\\\\\\\\n  return depositAmt;\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn { getDepositAmountForWriteAccess };\\\\\\\\n\"}, \"devhub.entity.post.Post\": {\"\": \"// Ideally, this would be a page\\\\\\\\n\\\\\\\\nconst { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\nconst { getDepositAmountForWriteAccess } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.common\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\ngetDepositAmountForWriteAccess || (getDepositAmountForWriteAccess = () => {});\\\\\\\\nconst { draftState, onDraftStateChange } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.draft\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!href) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ButtonWithHover = styled.button`\\\\\\\\n  background-color: #fff;\\\\\\\\n  transition: all 300ms;\\\\\\\\n  border-radius: 0.5rem;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background-color: #e9ecef;\\\\\\\\n    color: #000;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:disabled {\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #b7b7b7;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst postId = props.post.id ?? (props.id ? parseInt(props.id) : 0);\\\\\\\\n\\\\\\\\nconst post =\\\\\\\\n  props.post ??\\\\\\\\n  Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_post\\\\\\\\\\\\\\\", { post_id: postId });\\\\\\\\n\\\\\\\\nif (!post) {\\\\\\\\n  return <div>Loading ...</div>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst referral = props.referral;\\\\\\\\nconst currentTimestamp = props.timestamp ?? post.snapshot.timestamp;\\\\\\\\nconst compareTimestamp = props.compareTimestamp ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst swapTimestamps = currentTimestamp < compareTimestamp;\\\\\\\\n\\\\\\\\nconst snapshotHistory = post.snapshot_history;\\\\\\\\n\\\\\\\\nconst snapshot =\\\\\\\\n  currentTimestamp === post.snapshot.timestamp\\\\\\\\n    ? post.snapshot\\\\\\\\n    : (snapshotHistory &&\\\\\\\\n        snapshotHistory.find((s) => s.timestamp === currentTimestamp)) ??\\\\\\\\n      null;\\\\\\\\n\\\\\\\\nconst compareSnapshot =\\\\\\\\n  compareTimestamp === post.snapshot.timestamp\\\\\\\\n    ? post.snapshot\\\\\\\\n    : (snapshotHistory &&\\\\\\\\n        snapshotHistory.find((s) => s.timestamp === compareTimestamp)) ??\\\\\\\\n      null;\\\\\\\\n\\\\\\\\n// If this post is displayed under another post. Used to limit the size.\\\\\\\\nconst isUnderPost = props.isUnderPost ? true : false;\\\\\\\\n\\\\\\\\nconst parentId = Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_parent_id\\\\\\\\\\\\\\\", {\\\\\\\\n  post_id: postId,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst childPostIdsUnordered =\\\\\\\\n  Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_children_ids\\\\\\\\\\\\\\\", {\\\\\\\\n    post_id: postId,\\\\\\\\n  }) ?? [];\\\\\\\\n\\\\\\\\nconst childPostIds = props.isPreview ? [] : childPostIdsUnordered.reverse();\\\\\\\\nconst expandable = props.isPreview ? false : props.expandable ?? false;\\\\\\\\nconst defaultExpanded = expandable ? props.defaultExpanded : true;\\\\\\\\n\\\\\\\\nfunction readableDate(timestamp) {\\\\\\\\n  var a = new Date(timestamp);\\\\\\\\n  return a.toDateString() + \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" + a.toLocaleTimeString();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst timestamp = readableDate(\\\\\\\\n  snapshot.timestamp ? snapshot.timestamp / 1000000 : Date.now()\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst postSearchKeywords = props.searchKeywords ? (\\\\\\\\n  <div style={{ \\\\\\\\\\\\\\\"font-family\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"monospace\\\\\\\\\\\\\\\" }} key=\\\\\\\\\\\\\\\"post-search-keywords\\\\\\\\\\\\\\\">\\\\\\\\n    <span>Found keywords: </span>\\\\\\\\n\\\\\\\\n    {props.searchKeywords.map((tag) => (\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Tag\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{ linkTo: \\\\\\\\\\\\\\\"Feed\\\\\\\\\\\\\\\", tag }}\\\\\\\\n      />\\\\\\\\n    ))}\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"post-search-keywords\\\\\\\\\\\\\\\"></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst searchKeywords = props.searchKeywords ? (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"mb-4\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"search-keywords\\\\\\\\\\\\\\\">\\\\\\\\n    <small class=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{postSearchKeywords}</small>\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"search-keywords\\\\\\\\\\\\\\\"></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst allowedToEdit =\\\\\\\\n  !props.isPreview &&\\\\\\\\n  Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"is_allowed_to_edit\\\\\\\\\\\\\\\", {\\\\\\\\n    post_id: postId,\\\\\\\\n    editor: context.accountId,\\\\\\\\n  });\\\\\\\\n\\\\\\\\nconst btnEditorWidget = (postType, name) => {\\\\\\\\n  return (\\\\\\\\n    <li>\\\\\\\\n      <a\\\\\\\\n        class=\\\\\\\\\\\\\\\"dropdown-item\\\\\\\\\\\\\\\"\\\\\\\\n        role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n        onClick={() =>\\\\\\\\n          State.update({ postType, editorType: \\\\\\\\\\\\\\\"EDIT\\\\\\\\\\\\\\\", showEditor: true })\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        {name}\\\\\\\\n      </a>\\\\\\\\n    </li>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst editControl = allowedToEdit ? (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"btn-group\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"group\\\\\\\\\\\\\\\">\\\\\\\\n    <a\\\\\\\\n      class=\\\\\\\\\\\\\\\"card-link px-2\\\\\\\\\\\\\\\"\\\\\\\\n      role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n      title=\\\\\\\\\\\\\\\"Edit post\\\\\\\\\\\\\\\"\\\\\\\\n      data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n      aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n      type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"bi bi-pencil-square\\\\\\\\\\\\\\\"></div>\\\\\\\\n    </a>\\\\\\\\n\\\\\\\\n    <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\">\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as an idea\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as a solution\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Attestation\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as an attestation\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as a sponsorship\\\\\\\\\\\\\\\")}\\\\\\\\n      {btnEditorWidget(\\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Edit as a comment\\\\\\\\\\\\\\\")}\\\\\\\\n    </ul>\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst shareButton = props.isPreview ? (\\\\\\\\n  <div></div>\\\\\\\\n) : (\\\\\\\\n  <Link\\\\\\\\n    class=\\\\\\\\\\\\\\\"card-link text-dark\\\\\\\\\\\\\\\"\\\\\\\\n    to={href({\\\\\\\\n      widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n      params: { page: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\", id: postId },\\\\\\\\n    })}\\\\\\\\n    role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n    target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n    title=\\\\\\\\\\\\\\\"Open in new tab\\\\\\\\\\\\\\\"\\\\\\\\n  >\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"bi bi-share\\\\\\\\\\\\\\\"></div>\\\\\\\\n  </Link>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst ProfileCardContainer = styled.div`\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// card-header\\\\\\\\nconst header = (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"header\\\\\\\\\\\\\\\">\\\\\\\\n    <small class=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"row justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"d-flex align-items-center flex-wrap\\\\\\\\\\\\\\\">\\\\\\\\n          <ProfileCardContainer>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.ProfileCard\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                accountId: post.author_id,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </ProfileCardContainer>\\\\\\\\n\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"d-flex ms-auto\\\\\\\\\\\\\\\">\\\\\\\\n            {editControl}\\\\\\\\n            {timestamp}\\\\\\\\n\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.History\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                post,\\\\\\\\n                timestamp: currentTimestamp,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            {shareButton}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </small>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\n// const emptyIcons = {\\\\\\\\n//   Idea: \\\\\\\\\\\\\\\"bi-lightbulb\\\\\\\\\\\\\\\",\\\\\\\\n//   Comment: \\\\\\\\\\\\\\\"bi-chat\\\\\\\\\\\\\\\",\\\\\\\\n//   Solution: \\\\\\\\\\\\\\\"bi-rocket\\\\\\\\\\\\\\\",\\\\\\\\n//   Attestation: \\\\\\\\\\\\\\\"bi-check-circle\\\\\\\\\\\\\\\",\\\\\\\\n//   Sponsorship: \\\\\\\\\\\\\\\"bi-cash-coin\\\\\\\\\\\\\\\",\\\\\\\\n//   Github: \\\\\\\\\\\\\\\"bi-github\\\\\\\\\\\\\\\",\\\\\\\\n//   Like: \\\\\\\\\\\\\\\"bi-heart\\\\\\\\\\\\\\\",\\\\\\\\n//   Reply: \\\\\\\\\\\\\\\"bi-reply\\\\\\\\\\\\\\\",\\\\\\\\n// };\\\\\\\\n\\\\\\\\nconst emptyIcons = {\\\\\\\\n  Idea: \\\\\\\\\\\\\\\"\\\\\\\\u{1f4a1}\\\\\\\\\\\\\\\",\\\\\\\\n  Comment: \\\\\\\\\\\\\\\"bi-chat\\\\\\\\\\\\\\\",\\\\\\\\n  Solution: \\\\\\\\\\\\\\\"\\\\\\\\u{1f680}\\\\\\\\\\\\\\\",\\\\\\\\n  Attestation: \\\\\\\\\\\\\\\"\\\\\\\\u{2705}\\\\\\\\\\\\\\\",\\\\\\\\n  Sponsorship: \\\\\\\\\\\\\\\"\\\\\\\\u{1fa99}\\\\\\\\\\\\\\\",\\\\\\\\n  Github: \\\\\\\\\\\\\\\"bi-github\\\\\\\\\\\\\\\",\\\\\\\\n  Like: \\\\\\\\\\\\\\\"bi-heart\\\\\\\\\\\\\\\",\\\\\\\\n  Reply: \\\\\\\\\\\\\\\"bi-reply\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst fillIcons = {\\\\\\\\n  Idea: \\\\\\\\\\\\\\\"\\\\\\\\u{1f4a1}\\\\\\\\\\\\\\\",\\\\\\\\n  Comment: \\\\\\\\\\\\\\\"bi-chat-fill\\\\\\\\\\\\\\\",\\\\\\\\n  Solution: \\\\\\\\\\\\\\\"\\\\\\\\u{1f680}\\\\\\\\\\\\\\\",\\\\\\\\n  Attestation: \\\\\\\\\\\\\\\"\\\\\\\\u{2705}\\\\\\\\\\\\\\\",\\\\\\\\n  Sponsorship: \\\\\\\\\\\\\\\"\\\\\\\\u{1fa99}\\\\\\\\\\\\\\\",\\\\\\\\n  Github: \\\\\\\\\\\\\\\"bi-github\\\\\\\\\\\\\\\",\\\\\\\\n  Like: \\\\\\\\\\\\\\\"bi-heart-fill\\\\\\\\\\\\\\\",\\\\\\\\n  Reply: \\\\\\\\\\\\\\\"bi-reply-fill\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\n// Trigger saving this widget.\\\\\\\\n\\\\\\\\nconst borders = {\\\\\\\\n  Idea: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Comment: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Solution: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Attestation: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Sponsorship: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n  Github: \\\\\\\\\\\\\\\"border-light\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst containsLike = props.isPreview\\\\\\\\n  ? false\\\\\\\\n  : post.likes.find((l) => l.author_id == context.accountId);\\\\\\\\nconst likeBtnClass = containsLike ? fillIcons.Like : emptyIcons.Like;\\\\\\\\n// This must be outside onLike, because Near.view returns null at first, and when the view call finished, it returns true/false.\\\\\\\\n// If checking this inside onLike, it will give `null` and we cannot tell the result is true or false.\\\\\\\\nlet grantNotify = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"is_write_permission_granted\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    predecessor_id: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n    key: context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\",\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst userStorageDeposit = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"storage_balance_of\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    account_id: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (grantNotify === null || userStorageDeposit === null) {\\\\\\\\n  return;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst onLike = () => {\\\\\\\\n  if (!context.accountId) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  let likeTxn = [\\\\\\\\n    {\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"add_like\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        post_id: postId,\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  if (grantNotify === false) {\\\\\\\\n    likeTxn.unshift({\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"grant_write_permission\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        predecessor_id: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n        keys: [context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\"],\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n      deposit: getDepositAmountForWriteAccess(userStorageDeposit),\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call(likeTxn);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst btnCreatorWidget = (postType, icon, name, desc) => {\\\\\\\\n  return (\\\\\\\\n    <li class=\\\\\\\\\\\\\\\"py-1\\\\\\\\\\\\\\\">\\\\\\\\n      <a\\\\\\\\n        class=\\\\\\\\\\\\\\\"dropdown-item text-decoration-none d-flex align-items-center lh-sm\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ color: \\\\\\\\\\\\\\\"rgb(55,109,137)\\\\\\\\\\\\\\\" }}\\\\\\\\n        role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n        onClick={() =>\\\\\\\\n          State.update({ postType, editorType: \\\\\\\\\\\\\\\"CREATE\\\\\\\\\\\\\\\", showEditor: true })\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <i class={`bi ${icon}`} style={{ fontSize: \\\\\\\\\\\\\\\"1.5rem\\\\\\\\\\\\\\\" }}>\\\\\\\\n          {\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n        </i>\\\\\\\\n\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"ps-2 text-wrap\\\\\\\\\\\\\\\" style={{ width: \\\\\\\\\\\\\\\"18rem\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <div>{name}</div>\\\\\\\\n          <small class=\\\\\\\\\\\\\\\"fw-light text-secondary\\\\\\\\\\\\\\\">{desc}</small>\\\\\\\\n        </div>\\\\\\\\n      </a>\\\\\\\\n    </li>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FooterButtonsContianer = styled.div`\\\\\\\\n  width: 66.66666667%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst buttonsFooter = props.isPreview ? null : (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"buttons-footer\\\\\\\\\\\\\\\">\\\\\\\\n    <FooterButtonsContianer>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"btn-group\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"group\\\\\\\\\\\\\\\" aria-label=\\\\\\\\\\\\\\\"Basic outlined example\\\\\\\\\\\\\\\">\\\\\\\\n        <ButtonWithHover\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn d-flex align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n          onClick={onLike}\\\\\\\\n        >\\\\\\\\n          <i class={`bi ${likeBtnClass}`}> </i>\\\\\\\\n          {post.likes.length == 0 ? (\\\\\\\\n            \\\\\\\\\\\\\\\"Like\\\\\\\\\\\\\\\"\\\\\\\\n          ) : (\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.layout.LikeButton.Faces\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                likesByUsers: Object.fromEntries(\\\\\\\\n                  post.likes.map(({ author_id }) => [author_id, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"])\\\\\\\\n                ),\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          )}\\\\\\\\n        </ButtonWithHover>\\\\\\\\n\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"btn-group\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"group\\\\\\\\\\\\\\\">\\\\\\\\n          <ButtonWithHover\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            class=\\\\\\\\\\\\\\\"btn\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n            aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            \\\\\\\\u{21aa} Reply\\\\\\\\n          </ButtonWithHover>\\\\\\\\n          <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\">\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Idea,\\\\\\\\n              \\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Get feedback from the community about a problem, opportunity, or need.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Solution,\\\\\\\\n              \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Provide a specific proposal or implementation to an idea, optionally requesting funding.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Attestation\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Attestation,\\\\\\\\n              \\\\\\\\\\\\\\\"Attestation\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Formally review or validate a solution as a recognized expert.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Sponsorship,\\\\\\\\n              \\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Offer to fund projects, events, or proposals that match your needs.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n            <li>\\\\\\\\n              <hr class=\\\\\\\\\\\\\\\"dropdown-divider\\\\\\\\\\\\\\\" />\\\\\\\\n            </li>\\\\\\\\n            {btnCreatorWidget(\\\\\\\\n              \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n              emptyIcons.Comment,\\\\\\\\n              \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"Ask a question, provide information, or share a resource that is relevant to the thread.\\\\\\\\\\\\\\\"\\\\\\\\n            )}\\\\\\\\n          </ul>\\\\\\\\n        </div>\\\\\\\\n        {childPostIds.length > 0 && (\\\\\\\\n          <ButtonWithHover\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            class=\\\\\\\\\\\\\\\"btn\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"collapse\\\\\\\\\\\\\\\"\\\\\\\\n            href={`#collapseChildPosts${postId}`}\\\\\\\\n            aria-expanded={defaultExpanded}\\\\\\\\n            aria-controls={`collapseChildPosts${postId}`}\\\\\\\\n            onClick={() =>\\\\\\\\n              State.update({ expandReplies: !state.expandReplies })\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <i\\\\\\\\n              class={`bi bi-chevron-${state.expandReplies ? \\\\\\\\\\\\\\\"up\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\"}`}\\\\\\\\n            ></i>{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            {`${state.expandReplies ? \\\\\\\\\\\\\\\"Collapse\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Expand\\\\\\\\\\\\\\\"} Replies (${\\\\\\\\n              childPostIds.length\\\\\\\\n            })`}\\\\\\\\n          </ButtonWithHover>\\\\\\\\n        )}\\\\\\\\n\\\\\\\\n        {isUnderPost || !parentId ? (\\\\\\\\n          <div key=\\\\\\\\\\\\\\\"link-to-parent\\\\\\\\\\\\\\\"></div>\\\\\\\\n        ) : (\\\\\\\\n          <Link\\\\\\\\n            to={href({\\\\\\\\n              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\", id: parentId },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <ButtonWithHover\\\\\\\\n              type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n              style={{ border: \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"btn\\\\\\\\\\\\\\\"\\\\\\\\n              key=\\\\\\\\\\\\\\\"link-to-parent\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <i class=\\\\\\\\\\\\\\\"bi bi-arrow-90deg-up\\\\\\\\\\\\\\\"></i>Go to parent\\\\\\\\n            </ButtonWithHover>\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </FooterButtonsContianer>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst tokenMapping = {\\\\\\\\n  NEAR: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\",\\\\\\\\n  USDT: {\\\\\\\\n    NEP141: {\\\\\\\\n      address: \\\\\\\\\\\\\\\"usdt.tether-token.near\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  USDC: {\\\\\\\\n    NEP141: {\\\\\\\\n      address:\\\\\\\\n        \\\\\\\\\\\\\\\"17208628f84f5d6ad33f0da3bbbeb27ffcb398eac501a31bd6ad2011e36133a1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  // Add more tokens here as needed\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst reverseTokenMapping = Object.keys(tokenMapping).reduce(\\\\\\\\n  (reverseMap, key) => {\\\\\\\\n    const value = tokenMapping[key];\\\\\\\\n    if (typeof value === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n      reverseMap[JSON.stringify(value)] = key;\\\\\\\\n    }\\\\\\\\n    return reverseMap;\\\\\\\\n  },\\\\\\\\n  {}\\\\\\\\n);\\\\\\\\n\\\\\\\\nfunction tokenResolver(token) {\\\\\\\\n  if (typeof token === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    return token;\\\\\\\\n  } else if (typeof token === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n    const tokenString = reverseTokenMapping[JSON.stringify(token)];\\\\\\\\n    return tokenString || null;\\\\\\\\n  } else {\\\\\\\\n    return null; // Invalid input\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst isDraft =\\\\\\\\n  (draftState?.parent_post_id === postId &&\\\\\\\\n    draftState?.postType === state.postType) ||\\\\\\\\n  (draftState?.edit_post_id === postId &&\\\\\\\\n    draftState?.postType === state.postType);\\\\\\\\n\\\\\\\\nconst setExpandReplies = (value) => {\\\\\\\\n  State.update({ expandReplies: value });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst setEditorState = (value) => {\\\\\\\\n  if (draftState && !value) {\\\\\\\\n    // clear the draft state since user initiated cancel\\\\\\\\n    onDraftStateChange(null);\\\\\\\\n  }\\\\\\\\n  State.update({ showEditor: value });\\\\\\\\n};\\\\\\\\n\\\\\\\\nlet amount = null;\\\\\\\\nlet token = null;\\\\\\\\nlet supervisor = null;\\\\\\\\n\\\\\\\\nif (state.postType === \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\") {\\\\\\\\n  const amountMatch = post.snapshot.description.match(\\\\\\\\n    /Requested amount: (\\\\\\\\\\\\\\\\d+(\\\\\\\\\\\\\\\\.\\\\\\\\\\\\\\\\d+)?) (\\\\\\\\\\\\\\\\w+)/\\\\\\\\n  );\\\\\\\\n  amount = amountMatch ? parseFloat(amountMatch[1]) : null;\\\\\\\\n  token = amountMatch ? amountMatch[3] : null;\\\\\\\\n\\\\\\\\n  const sponsorMatch = post.snapshot.description.match(\\\\\\\\n    /Requested sponsor: @([^\\\\\\\\\\\\\\\\s]+)/\\\\\\\\n  );\\\\\\\\n  supervisor = sponsorMatch ? sponsorMatch[1] : null;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst seekingFunding = amount !== null || token !== null || supervisor !== null;\\\\\\\\n\\\\\\\\nfunction Editor() {\\\\\\\\n  return (\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"row mt-2\\\\\\\\\\\\\\\" id={`accordion${postId}`} key=\\\\\\\\\\\\\\\"editors-footer\\\\\\\\\\\\\\\">\\\\\\\\n      <div\\\\\\\\n        key={`${state.postType}${state.editorType}${postId}`}\\\\\\\\n        className={\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\"}\\\\\\\\n      >\\\\\\\\n        {state.editorType === \\\\\\\\\\\\\\\"CREATE\\\\\\\\\\\\\\\" ? (\\\\\\\\n          <>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.PostEditor\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                postType: state.postType,\\\\\\\\n                onDraftStateChange,\\\\\\\\n                draftState:\\\\\\\\n                  draftState?.parent_post_id == postId ? draftState : undefined,\\\\\\\\n                parentId: postId,\\\\\\\\n                mode: \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\",\\\\\\\\n                transactionHashes: props.transactionHashes,\\\\\\\\n                setExpandReplies,\\\\\\\\n                setEditorState: setEditorState,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        ) : (\\\\\\\\n          <>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.PostEditor\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                postType: state.postType,\\\\\\\\n                postId,\\\\\\\\n                mode: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                author_id: post.author_id,\\\\\\\\n                labels: post.snapshot.labels,\\\\\\\\n                name: post.snapshot.name,\\\\\\\\n                description: post.snapshot.description,\\\\\\\\n                amount: post.snapshot.amount || amount,\\\\\\\\n                token: tokenResolver(post.snapshot.sponsorship_token || token),\\\\\\\\n                supervisor:\\\\\\\\n                  post.snapshot.post.snapshot.supervisor || supervisor,\\\\\\\\n                seekingFunding: seekingFunding,\\\\\\\\n                githubLink: post.snapshot.github_link,\\\\\\\\n                onDraftStateChange,\\\\\\\\n                draftState:\\\\\\\\n                  draftState?.edit_post_id == postId ? draftState : undefined,\\\\\\\\n                setEditorState: setEditorState,\\\\\\\\n                transactionHashes: props.transactionHashes,\\\\\\\\n                setExpandReplies,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst renamedPostType =\\\\\\\\n  snapshot.post_type == \\\\\\\\\\\\\\\"Submission\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\" : snapshot.post_type;\\\\\\\\n\\\\\\\\nconst tags = post.snapshot.labels ? (\\\\\\\\n  <div\\\\\\\\n    class=\\\\\\\\\\\\\\\"card-title d-flex flex-wrap align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ margin: \\\\\\\\\\\\\\\"20px 0\\\\\\\\\\\\\\\" }}\\\\\\\\n    key=\\\\\\\\\\\\\\\"post-labels\\\\\\\\\\\\\\\"\\\\\\\\n  >\\\\\\\\n    {post.snapshot.labels.map((tag, idx) => (\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center my-3 me-3\\\\\\\\\\\\\\\">\\\\\\\\n        <Link\\\\\\\\n          to={href({\\\\\\\\n            widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n            params: { page: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\", tag: tag },\\\\\\\\n          })}\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              if (typeof props.updateTagInParent === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\") {\\\\\\\\n                props.updateTagInParent(tag);\\\\\\\\n              }\\\\\\\\n            }}\\\\\\\\n            className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ cursor: \\\\\\\\\\\\\\\"pointer\\\\\\\\\\\\\\\", textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Tag\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                tag,\\\\\\\\n                black: true,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </Link>\\\\\\\\n        {idx !== post.snapshot.labels.length - 1 && (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"ms-3\\\\\\\\\\\\\\\">\\\\\\\\u{2022}</span>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    ))}\\\\\\\\n  </div>\\\\\\\\n) : (\\\\\\\\n  <div key=\\\\\\\\\\\\\\\"post-labels\\\\\\\\\\\\\\\"></div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Title = styled.h5`\\\\\\\\n  margin: 1rem 0;\\\\\\\\n\\\\\\\\n  color: #151515;\\\\\\\\n  font-size: 1.15rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 1.625rem; /* 55.556% */\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst postTitle =\\\\\\\\n  snapshot.post_type == \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\" ? (\\\\\\\\n    <div key=\\\\\\\\\\\\\\\"post-title\\\\\\\\\\\\\\\"></div>\\\\\\\\n  ) : (\\\\\\\\n    <Title key=\\\\\\\\\\\\\\\"post-title\\\\\\\\\\\\\\\">\\\\\\\\n      {emptyIcons[snapshot.post_type]} {renamedPostType}: {snapshot.name}\\\\\\\\n    </Title>\\\\\\\\n  );\\\\\\\\n\\\\\\\\nconst postExtra =\\\\\\\\n  snapshot.post_type == \\\\\\\\\\\\\\\"Sponsorship\\\\\\\\\\\\\\\" ? (\\\\\\\\n    <div key=\\\\\\\\\\\\\\\"post-extra\\\\\\\\\\\\\\\">\\\\\\\\n      <h6 class=\\\\\\\\\\\\\\\"card-subtitle mb-2 text-muted\\\\\\\\\\\\\\\">\\\\\\\\n        Maximum amount: {snapshot.amount}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n        {tokenResolver(snapshot.sponsorship_token)}\\\\\\\\n      </h6>\\\\\\\\n      <h6 class=\\\\\\\\\\\\\\\"card-subtitle mb-2 text-muted\\\\\\\\\\\\\\\">\\\\\\\\n        Supervisor:{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.ProfileLine\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{ accountId: snapshot.supervisor }}\\\\\\\\n        />\\\\\\\\n      </h6>\\\\\\\\n    </div>\\\\\\\\n  ) : (\\\\\\\\n    <div></div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\nconst childPostHasDraft = childPostIds.find(\\\\\\\\n  (childId) =>\\\\\\\\n    childId == draftState?.edit_post_id || childId == draftState?.parent_post_id\\\\\\\\n);\\\\\\\\nif (\\\\\\\\n  (childPostHasDraft || state.childrenOfChildPostsHasDraft) &&\\\\\\\\n  props.expandParent\\\\\\\\n) {\\\\\\\\n  props.expandParent();\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst postsList =\\\\\\\\n  props.isPreview || childPostIds.length == 0 ? (\\\\\\\\n    <div key=\\\\\\\\\\\\\\\"posts-list\\\\\\\\\\\\\\\"></div>\\\\\\\\n  ) : (\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"posts-list\\\\\\\\\\\\\\\">\\\\\\\\n      <div\\\\\\\\n        class={`collapse mt-3 ${\\\\\\\\n          defaultExpanded ||\\\\\\\\n          childPostHasDraft ||\\\\\\\\n          state.childrenOfChildPostsHasDraft ||\\\\\\\\n          state.expandReplies\\\\\\\\n            ? \\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\"\\\\\\\\n            : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n        }`}\\\\\\\\n        id={`collapseChildPosts${postId}`}\\\\\\\\n      >\\\\\\\\n        {childPostIds.map((childId) => (\\\\\\\\n          <div key={childId} style={{ marginBottom: \\\\\\\\\\\\\\\"0.5rem\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Post\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                id: childId,\\\\\\\\n                isUnderPost: true,\\\\\\\\n                onDraftStateChange,\\\\\\\\n                draftState,\\\\\\\\n                expandParent: () =>\\\\\\\\n                  State.update({ childrenOfChildPostsHasDraft: true }),\\\\\\\\n                referral: `subpost${childId}of${postId}`,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        ))}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\nconst LimitedMarkdown = styled.div`\\\\\\\\n  max-height: 20em;\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// Determine if located in the post page.\\\\\\\\nconst isInList = props.isInList;\\\\\\\\nconst contentArray = snapshot.description.split(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\");\\\\\\\\nconst needClamp = isInList && contentArray.length > 5;\\\\\\\\n\\\\\\\\ninitState({\\\\\\\\n  clamp: needClamp,\\\\\\\\n  expandReplies: defaultExpanded,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst clampedContent = needClamp\\\\\\\\n  ? contentArray.slice(0, 3).join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\")\\\\\\\\n  : snapshot.description;\\\\\\\\n\\\\\\\\nconst SeeMore = styled.a`\\\\\\\\n  cursor: pointer;\\\\\\\\n  color: #00b774 !important;\\\\\\\\n  font-weight: bold;\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// Should make sure the posts under the currently top viewed post are limited in size.\\\\\\\\nconst descriptionArea = isUnderPost ? (\\\\\\\\n  <LimitedMarkdown className=\\\\\\\\\\\\\\\"overflow-auto\\\\\\\\\\\\\\\" key=\\\\\\\\\\\\\\\"description-area\\\\\\\\\\\\\\\">\\\\\\\\n    {/* {widget(\\\\\\\\\\\\\\\"components.molecule.markdown-viewer\\\\\\\\\\\\\\\", {\\\\\\\\n      text: snapshot.description,\\\\\\\\n    })} */}\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        text: snapshot.description,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </LimitedMarkdown>\\\\\\\\n) : (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100 overflow-auto\\\\\\\\\\\\\\\">\\\\\\\\n    <div class={state.clamp ? \\\\\\\\\\\\\\\"clamp\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}>\\\\\\\\n      {/* {widget(\\\\\\\\\\\\\\\"components.molecule.markdown-viewer\\\\\\\\\\\\\\\", {\\\\\\\\n        text: state.clamp ? clampedContent : snapshot.description,\\\\\\\\n      })} */}\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          text: state.clamp ? clampedContent : snapshot.description,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n    {state.clamp ? (\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"d-flex justify-content-start\\\\\\\\\\\\\\\">\\\\\\\\n        <SeeMore onClick={() => State.update({ clamp: false })}>\\\\\\\\n          See more\\\\\\\\n        </SeeMore>\\\\\\\\n      </div>\\\\\\\\n    ) : (\\\\\\\\n      <></>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst timestampElement = (_snapshot) => {\\\\\\\\n  return (\\\\\\\\n    <Link\\\\\\\\n      class=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n          id: postId,\\\\\\\\n          timestamp: _snapshot.timestamp,\\\\\\\\n          compareTimestamp: null,\\\\\\\\n          referral,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n    >\\\\\\\\n      {readableDate(_snapshot.timestamp / 1000000).substring(4)}\\\\\\\\n\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"mob.near/widget/ProfileImage\\\\\\\\\\\\\\\"\\\\\\\\n        props={{\\\\\\\\n          accountId: _snapshot.editor_id,\\\\\\\\n          style: {\\\\\\\\n            width: \\\\\\\\\\\\\\\"1.25em\\\\\\\\\\\\\\\",\\\\\\\\n            height: \\\\\\\\\\\\\\\"1.25em\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          imageStyle: {\\\\\\\\n            transform: \\\\\\\\\\\\\\\"translateY(-12.5%)\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      {_snapshot.editor_id.substring(0, 8)}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction combineText(_snapshot) {\\\\\\\\n  return (\\\\\\\\n    \\\\\\\\\\\\\\\"## \\\\\\\\\\\\\\\" +\\\\\\\\n    _snapshot.post_type +\\\\\\\\n    \\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\" +\\\\\\\\n    _snapshot.name +\\\\\\\\n    \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\" +\\\\\\\\n    _snapshot.description\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst CardContainer = styled.div`\\\\\\\\n  padding: 1.5rem 3rem !important;\\\\\\\\n  border-radius: 16px !important;\\\\\\\\n  border: 1px solid rgba(129, 129, 129, 0.3) !important;\\\\\\\\n  background: #fffefe !important;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    padding: 1rem !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <CardContainer className={`card ${borders[snapshot.post_type]} attractable`}>\\\\\\\\n    {header}\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\" style={{ padding: 0 }}>\\\\\\\\n      {searchKeywords}\\\\\\\\n      {compareSnapshot ? (\\\\\\\\n        <div\\\\\\\\n          class=\\\\\\\\\\\\\\\"border rounded\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ marginTop: \\\\\\\\\\\\\\\"16px\\\\\\\\\\\\\\\", marginBottom: \\\\\\\\\\\\\\\"16px\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"d-flex justify-content-end\\\\\\\\\\\\\\\" style={{ fontSize: \\\\\\\\\\\\\\\"12px\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <div class=\\\\\\\\\\\\\\\"d-flex w-50 justify-content-end mt-1 me-2\\\\\\\\\\\\\\\">\\\\\\\\n              {timestampElement(snapshot)}\\\\\\\\n              {snapshot !== compareSnapshot && (\\\\\\\\n                <>\\\\\\\\n                  <div class=\\\\\\\\\\\\\\\"mx-1 align-self-center\\\\\\\\\\\\\\\">\\\\\\\\n                    <i class=\\\\\\\\\\\\\\\"bi bi-file-earmark-diff\\\\\\\\\\\\\\\" />\\\\\\\\n                  </div>\\\\\\\\n                  {timestampElement(compareSnapshot)}\\\\\\\\n                </>\\\\\\\\n              )}\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"w-100 overflow-auto\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"markeljan.near/widget/MarkdownDiff\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                post: post,\\\\\\\\n                currentCode: combineText(\\\\\\\\n                  swapTimestamps ? compareSnapshot : snapshot\\\\\\\\n                ),\\\\\\\\n                prevCode: combineText(\\\\\\\\n                  swapTimestamps ? snapshot : compareSnapshot\\\\\\\\n                ),\\\\\\\\n                showLineNumber: true,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      ) : (\\\\\\\\n        <>\\\\\\\\n          {postTitle}\\\\\\\\n          {postExtra}\\\\\\\\n          {descriptionArea}\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n      {tags}\\\\\\\\n      {buttonsFooter}\\\\\\\\n      {!props.isPreview && (isDraft || state.showEditor) && <Editor />}\\\\\\\\n      {postsList}\\\\\\\\n    </div>\\\\\\\\n  </CardContainer>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.post.PostEditor\": {\"\": \"const { normalize } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.stringUtils\\\\\\\\\\\\\\\");\\\\\\\\nconst { getDepositAmountForWriteAccess } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.common\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\ngetDepositAmountForWriteAccess || (getDepositAmountForWriteAccess = () => {});\\\\\\\\nnormalize || (normalize = () => {});\\\\\\\\n\\\\\\\\nconst CenteredMessage = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n  height: 384px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nfunction initLabels() {\\\\\\\\n  const labels = [];\\\\\\\\n  if (typeof props.labels === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\") {\\\\\\\\n    labels.push(...props.labels.split(\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"));\\\\\\\\n  }\\\\\\\\n  if (Array.isArray(props.labels)) {\\\\\\\\n    labels.push(...props.labels);\\\\\\\\n  }\\\\\\\\n  if (props.referral) {\\\\\\\\n    labels.push(`referral:${props.referral}`);\\\\\\\\n  }\\\\\\\\n  return labels;\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (!context.accountId) {\\\\\\\\n  return (\\\\\\\\n    <CenteredMessage height={\\\\\\\\\\\\\\\"384px\\\\\\\\\\\\\\\"}>\\\\\\\\n      <h2>Please sign in to create a post.</h2>\\\\\\\\n    </CenteredMessage>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst userStorageDeposit = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"storage_balance_of\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    account_id: context.accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst cleanDescription = (description) => {\\\\\\\\n  return description\\\\\\\\n    ? description.replace(\\\\\\\\n        /###### Requested amount: .+?\\\\\\\\\\\\\\\\n###### Requested sponsor: @[^\\\\\\\\\\\\\\\\s]+\\\\\\\\\\\\\\\\n/g,\\\\\\\\n        \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n      )\\\\\\\\n    : description;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst postTypeOptions = {\\\\\\\\n  Idea: {\\\\\\\\n    name: \\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\",\\\\\\\\n    icon: \\\\\\\\\\\\\\\"bi-lightbulb\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Get feedback from the community about a problem, opportunity, or need.\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  Solution: {\\\\\\\\n    name: \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\",\\\\\\\\n    icon: \\\\\\\\\\\\\\\"bi-rocket\\\\\\\\\\\\\\\",\\\\\\\\n    description:\\\\\\\\n      \\\\\\\\\\\\\\\"Provide a specific proposal or implementation to an idea, optionally requesting funding. If your solution relates to an existing idea, please reply to the original post with a solution.\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nlet fields = {\\\\\\\\n  Comment: [\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n  Idea: [\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n  Solution: [\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"fund_raising\\\\\\\\\\\\\\\"],\\\\\\\\n  Attestation: [\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n  Sponsorship: [\\\\\\\\n    \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"amount\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"sponsorship_token\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"supervisor\\\\\\\\\\\\\\\",\\\\\\\\n  ],\\\\\\\\n  Github: [\\\\\\\\\\\\\\\"githubLink\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isCreatePostPage = props.isCreatePostPage ?? false;\\\\\\\\nconst postType = props.postType ?? \\\\\\\\\\\\\\\"Idea\\\\\\\\\\\\\\\";\\\\\\\\nconst parentId = props.parentId ?? null;\\\\\\\\nconst mode = props.mode ?? \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\";\\\\\\\\nconst labelStrings = initLabels();\\\\\\\\nconst [postIdList, setPostIdList] = useState(null); // to show updated post after approve txn\\\\\\\\nconst [showPostPage, setShowPostPage] = useState(false); // show newly created post\\\\\\\\nconst [postId, setPostId] = useState(props.postId ?? null);\\\\\\\\nconst [postData, setPostData] = useState(null); // for capturing edit post change\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (mode == \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\") {\\\\\\\\n    const data = Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_post\\\\\\\\\\\\\\\", {\\\\\\\\n      post_id: postId,\\\\\\\\n    });\\\\\\\\n    if (!postData) {\\\\\\\\n      setPostData(data);\\\\\\\\n    }\\\\\\\\n    if (postData && data && JSON.stringify(postData) !== JSON.stringify(data)) {\\\\\\\\n      props.setEditorState(false);\\\\\\\\n      props.setExpandReplies(true);\\\\\\\\n      setPostData(data);\\\\\\\\n    }\\\\\\\\n  } else {\\\\\\\\n    const postIds = Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_all_post_ids\\\\\\\\\\\\\\\");\\\\\\\\n    if (!postIdList) {\\\\\\\\n      setPostIdList(postIds);\\\\\\\\n    }\\\\\\\\n    if (\\\\\\\\n      postIdList?.length > 0 &&\\\\\\\\n      postIds.length > 0 &&\\\\\\\\n      postIdList.length !== postIds.length\\\\\\\\n    ) {\\\\\\\\n      props.onDraftStateChange(null);\\\\\\\\n      if (isCreatePostPage) {\\\\\\\\n        setShowPostPage(true);\\\\\\\\n        setPostId(postIds[postIds?.length - 1]);\\\\\\\\n      } else {\\\\\\\\n        // close editor and expand replies\\\\\\\\n        props.setEditorState(false);\\\\\\\\n        props.setExpandReplies(true);\\\\\\\\n      }\\\\\\\\n      setPostIdList(postIds);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst labels = labelStrings.map((s) => {\\\\\\\\n  return { name: s };\\\\\\\\n});\\\\\\\\n\\\\\\\\ninitState({\\\\\\\\n  seekingFunding: props.seekingFunding ?? false,\\\\\\\\n  author_id: context.accountId,\\\\\\\\n  // Should be a list of objects with field \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\".\\\\\\\\n  labels,\\\\\\\\n  // Should be a list of labels as strings.\\\\\\\\n  // Both of the label structures should be modified together.\\\\\\\\n  labelStrings: [],\\\\\\\\n  postType,\\\\\\\\n  name: props.name ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  description:\\\\\\\\n    (props.postType === \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\"\\\\\\\\n      ? cleanDescription(props.description)\\\\\\\\n      : props.description) ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  amount: props.amount ?? \\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\",\\\\\\\\n  token: props.token ?? \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\",\\\\\\\\n  supervisor: props.supervisor ?? \\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\",\\\\\\\\n  githubLink: props.githubLink ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  warning: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  draftStateApplied: false,\\\\\\\\n  mentionInput: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", // text next to @ tag\\\\\\\\n  mentionsArray: [], // all the mentions in the description\\\\\\\\n  displayFields: fields[postType],\\\\\\\\n});\\\\\\\\n\\\\\\\\n/* INCLUDE: \\\\\\\\\\\\\\\"core/lib/autocomplete\\\\\\\\\\\\\\\" */\\\\\\\\nconst autocompleteEnabled = true;\\\\\\\\n\\\\\\\\nconst AutoComplete = styled.div`\\\\\\\\n  z-index: 5;\\\\\\\\n\\\\\\\\n  > div > div {\\\\\\\\n    padding: calc(var(--padding) / 2);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (props.transactionHashes) {\\\\\\\\n  const transaction = useCache(\\\\\\\\n    () =>\\\\\\\\n      asyncFetch(\\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\", {\\\\\\\\n        method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n        headers: {\\\\\\\\n          \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n        body: JSON.stringify({\\\\\\\\n          jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n          id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n          method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n          params: [props.transactionHashes, context.accountId],\\\\\\\\n        }),\\\\\\\\n      }).then((res) => res),\\\\\\\\n    props.transactionHashes + context.accountId,\\\\\\\\n    { subscribe: false }\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  if (transaction !== null) {\\\\\\\\n    const transaction_method_name =\\\\\\\\n      transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n        .method_name;\\\\\\\\n\\\\\\\\n    const is_edit_or_add_post_transaction =\\\\\\\\n      transaction_method_name == \\\\\\\\\\\\\\\"add_post\\\\\\\\\\\\\\\" ||\\\\\\\\n      transaction_method_name == \\\\\\\\\\\\\\\"edit_post\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n    if (is_edit_or_add_post_transaction) {\\\\\\\\n      props.onDraftStateChange(null);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // show the latest created post to user\\\\\\\\n    if (transaction_method_name == \\\\\\\\\\\\\\\"add_post\\\\\\\\\\\\\\\" && isCreatePostPage) {\\\\\\\\n      setShowPostPage(true);\\\\\\\\n      setPostId(postIdList?.[postIdList?.length - 1]);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction textareaInputHandler(value) {\\\\\\\\n  const words = value.split(/\\\\\\\\\\\\\\\\s+/);\\\\\\\\n  const allMentiones = words\\\\\\\\n    .filter((word) => word.startsWith(\\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\"))\\\\\\\\n    .map((mention) => mention.slice(1));\\\\\\\\n  const newMentiones = allMentiones.filter(\\\\\\\\n    (item) => !state.mentionsArray.includes(item)\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  State.update((lastKnownState) => ({\\\\\\\\n    ...lastKnownState,\\\\\\\\n    text: value,\\\\\\\\n    showAccountAutocomplete: newMentiones?.length > 0,\\\\\\\\n    mentionsArray: allMentiones,\\\\\\\\n    mentionInput: newMentiones?.[0] ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction autoCompleteAccountId(id) {\\\\\\\\n  // to make sure we update the @ at correct index\\\\\\\\n  let currentIndex = 0;\\\\\\\\n  const updatedDescription = state.description.replace(\\\\\\\\n    /(?:^|\\\\\\\\\\\\\\\\s)(@[^\\\\\\\\\\\\\\\\s]*)/g,\\\\\\\\n    (match) => {\\\\\\\\n      if (currentIndex === state.mentionsArray.indexOf(state.mentionInput)) {\\\\\\\\n        currentIndex++;\\\\\\\\n        return ` @${id}`;\\\\\\\\n      } else {\\\\\\\\n        currentIndex++;\\\\\\\\n        return match;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n  State.update((lastKnownState) => ({\\\\\\\\n    ...lastKnownState,\\\\\\\\n    handler: \\\\\\\\\\\\\\\"autocompleteSelected\\\\\\\\\\\\\\\",\\\\\\\\n    description: updatedDescription,\\\\\\\\n    showAccountAutocomplete: false,\\\\\\\\n  }));\\\\\\\\n}\\\\\\\\n\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"core/lib/autocomplete\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nif (!state.draftStateApplied && props.draftState) {\\\\\\\\n  State.update({ ...props.draftState, draftStateApplied: true });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst typeSwitch = (optionName) => {\\\\\\\\n  State.update({\\\\\\\\n    postType: optionName,\\\\\\\\n    displayFields: fields[optionName],\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\n// This must be outside onClick, because Near.view returns null at first, and when the view call finished, it returns true/false.\\\\\\\\n// If checking this inside onClick, it will give `null` and we cannot tell the result is true or false.\\\\\\\\nlet grantNotify = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"is_write_permission_granted\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    predecessor_id: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n    key: context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\",\\\\\\\\n  }\\\\\\\\n);\\\\\\\\nif (grantNotify === null || userStorageDeposit === null) {\\\\\\\\n  return;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst tokenMapping = {\\\\\\\\n  NEAR: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\",\\\\\\\\n  USDT: {\\\\\\\\n    NEP141: {\\\\\\\\n      address: \\\\\\\\\\\\\\\"usdt.tether-token.near\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  USDC: {\\\\\\\\n    NEP141: {\\\\\\\\n      address:\\\\\\\\n        \\\\\\\\\\\\\\\"17208628f84f5d6ad33f0da3bbbeb27ffcb398eac501a31bd6ad2011e36133a1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst onSubmit = () => {\\\\\\\\n  let labels = state.labelStrings;\\\\\\\\n  var body = {\\\\\\\\n    Comment: { description: state.description, comment_version: \\\\\\\\\\\\\\\"V2\\\\\\\\\\\\\\\" },\\\\\\\\n    Idea: {\\\\\\\\n      name: state.name,\\\\\\\\n      description: state.description,\\\\\\\\n      idea_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    Solution: {\\\\\\\\n      name: state.name,\\\\\\\\n      description: generateDescription(\\\\\\\\n        state.description,\\\\\\\\n        state.amount,\\\\\\\\n        state.token,\\\\\\\\n        state.supervisor,\\\\\\\\n        state.seekingFunding\\\\\\\\n      ),\\\\\\\\n      solution_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    Attestation: {\\\\\\\\n      name: state.name,\\\\\\\\n      description: state.description,\\\\\\\\n      attestation_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    Sponsorship: {\\\\\\\\n      name: state.name,\\\\\\\\n      description: state.description,\\\\\\\\n      amount: state.amount,\\\\\\\\n      sponsorship_token: tokenMapping[state.token],\\\\\\\\n      supervisor: state.supervisor,\\\\\\\\n      sponsorship_version: \\\\\\\\\\\\\\\"V1\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    Github: {\\\\\\\\n      name: state.name,\\\\\\\\n      description: state.description,\\\\\\\\n      github_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n      github_link: state.githubLink,\\\\\\\\n    },\\\\\\\\n  }[state.postType];\\\\\\\\n  body[\\\\\\\\\\\\\\\"post_type\\\\\\\\\\\\\\\"] = state.postType;\\\\\\\\n  if (!context.accountId) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  let txn = [];\\\\\\\\n  if (mode == \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\") {\\\\\\\\n    props.onDraftStateChange(\\\\\\\\n      Object.assign({}, state, { parent_post_id: parentId })\\\\\\\\n    );\\\\\\\\n    txn.push({\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"add_post\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        parent_id: parentId,\\\\\\\\n        labels,\\\\\\\\n        body,\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    });\\\\\\\\n  } else if (mode == \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\") {\\\\\\\\n    props.onDraftStateChange(\\\\\\\\n      Object.assign({}, state, { edit_post_id: postId })\\\\\\\\n    );\\\\\\\\n    txn.push({\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_post\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: postId,\\\\\\\\n        labels,\\\\\\\\n        body,\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n  if (mode == \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\" || mode == \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\") {\\\\\\\\n    if (grantNotify === false) {\\\\\\\\n      txn.unshift({\\\\\\\\n        contractName: \\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\",\\\\\\\\n        methodName: \\\\\\\\\\\\\\\"grant_write_permission\\\\\\\\\\\\\\\",\\\\\\\\n        args: {\\\\\\\\n          predecessor_id: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n          keys: [context.accountId + \\\\\\\\\\\\\\\"/index/notify\\\\\\\\\\\\\\\"],\\\\\\\\n        },\\\\\\\\n        gas: Big(10).pow(14),\\\\\\\\n        deposit: getDepositAmountForWriteAccess(userStorageDeposit),\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    Near.call(txn);\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst checkLabel = (label) => {\\\\\\\\n  Near.asyncView(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"is_allowed_to_use_labels\\\\\\\\\\\\\\\", {\\\\\\\\n    editor: context.accountId,\\\\\\\\n    labels: [label],\\\\\\\\n  }).then((allowed) => {\\\\\\\\n    if (allowed) {\\\\\\\\n      State.update({ warning: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" });\\\\\\\\n    } else {\\\\\\\\n      State.update({\\\\\\\\n        warning:\\\\\\\\n          \\\\\\\\\\\\'The label \\\\\\\\\\\\\\\"\\\\\\\\\\\\' +\\\\\\\\n          label +\\\\\\\\n          \\\\\\\\\\\\'\\\\\\\\\\\\\\\" is protected and can only be added by moderators\\\\\\\\\\\\',\\\\\\\\n      });\\\\\\\\n      return;\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst setLabels = (labels) => {\\\\\\\\n  labels = labels.map((o) => {\\\\\\\\n    o.name = normalize(o.name);\\\\\\\\n    return o;\\\\\\\\n  });\\\\\\\\n  if (labels.length < state.labels.length) {\\\\\\\\n    let oldLabels = new Set(state.labels.map((label) => label.name));\\\\\\\\n    for (let label of labels) {\\\\\\\\n      oldLabels.delete(label.name);\\\\\\\\n    }\\\\\\\\n    let removed = oldLabels.values().next().value;\\\\\\\\n    Near.asyncView(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"is_allowed_to_use_labels\\\\\\\\\\\\\\\", {\\\\\\\\n      editor: context.accountId,\\\\\\\\n      labels: [removed],\\\\\\\\n    }).then((allowed) => {\\\\\\\\n      if (allowed) {\\\\\\\\n        let labelStrings = labels.map(({ name }) => name);\\\\\\\\n        State.update({ labels, labelStrings });\\\\\\\\n      } else {\\\\\\\\n        State.update({\\\\\\\\n          warning:\\\\\\\\n            \\\\\\\\\\\\'The label \\\\\\\\\\\\\\\"\\\\\\\\\\\\' +\\\\\\\\n            removed +\\\\\\\\n            \\\\\\\\\\\\'\\\\\\\\\\\\\\\" is protected and can only be updated by moderators\\\\\\\\\\\\',\\\\\\\\n        });\\\\\\\\n        return;\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  } else {\\\\\\\\n    let labelStrings = labels.map((o) => {\\\\\\\\n      return o.name;\\\\\\\\n    });\\\\\\\\n    State.update({ labels, labelStrings });\\\\\\\\n  }\\\\\\\\n};\\\\\\\\nconst existingLabelStrings =\\\\\\\\n  Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_all_allowed_labels\\\\\\\\\\\\\\\", {\\\\\\\\n    editor: context.accountId,\\\\\\\\n  }) ?? [];\\\\\\\\nconst existingLabelSet = new Set(existingLabelStrings);\\\\\\\\nconst existingLabels = existingLabelStrings\\\\\\\\n  .filter((it) => it !== \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\") // remove blog label so users cannot publish blogs from feed\\\\\\\\n  .map((s) => {\\\\\\\\n    return { name: s };\\\\\\\\n  });\\\\\\\\n\\\\\\\\nconst labelEditor = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-12  mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    <label htmlFor=\\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\" className=\\\\\\\\\\\\\\\"fs-6 fw-bold mb-1\\\\\\\\\\\\\\\">\\\\\\\\n      Labels\\\\\\\\n    </label>\\\\\\\\n    <Typeahead\\\\\\\\n      multiple\\\\\\\\n      labelKey=\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\"\\\\\\\\n      onInputChange={checkLabel}\\\\\\\\n      onChange={setLabels}\\\\\\\\n      options={existingLabels}\\\\\\\\n      placeholder=\\\\\\\\\\\\\\\"near.social, widget, NEP, standard, protocol, tool\\\\\\\\\\\\\\\"\\\\\\\\n      selected={state.labels}\\\\\\\\n      positionFixed\\\\\\\\n      allowNew={(results, props) => {\\\\\\\\n        return (\\\\\\\\n          !existingLabelSet.has(props.text) &&\\\\\\\\n          props.text.toLowerCase() !== \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\" && // dont allow adding \\\\\\\\\\\\\\\"Blog\\\\\\\\\\\\\\\"\\\\\\\\n          props.selected.filter((selected) => selected.name === props.text)\\\\\\\\n            .length == 0 &&\\\\\\\\n          Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"is_allowed_to_use_labels\\\\\\\\\\\\\\\", {\\\\\\\\n            editor: context.accountId,\\\\\\\\n            labels: [props.text],\\\\\\\\n          })\\\\\\\\n        );\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst githubLinkDiv = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-12  mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    Github Issue URL:\\\\\\\\n    <input\\\\\\\\n      type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n      value={state.githubLink}\\\\\\\\n      onChange={(event) => State.update({ githubLink: event.target.value })}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst nameDiv = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-12  mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    <label htmlFor=\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\" className=\\\\\\\\\\\\\\\"fs-6 fw-bold mb-1\\\\\\\\\\\\\\\">\\\\\\\\n      Title\\\\\\\\n    </label>\\\\\\\\n    <input\\\\\\\\n      name=\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\"\\\\\\\\n      id=\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\"\\\\\\\\n      data-testid=\\\\\\\\\\\\\\\"name-editor\\\\\\\\\\\\\\\"\\\\\\\\n      type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n      value={state.name}\\\\\\\\n      onChange={(event) => State.update({ name: event.target.value })}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst amountDiv = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-6  mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    Amount:\\\\\\\\n    <input\\\\\\\\n      type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n      value={state.amount}\\\\\\\\n      onChange={(event) => State.update({ amount: event.target.value })}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst tokenDiv = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    Currency\\\\\\\\n    <select\\\\\\\\n      onChange={(event) => State.update({ token: event.target.value })}\\\\\\\\n      class=\\\\\\\\\\\\\\\"form-select\\\\\\\\\\\\\\\"\\\\\\\\n      aria-label=\\\\\\\\\\\\\\\"Select currency\\\\\\\\\\\\\\\"\\\\\\\\n      value={state.token}\\\\\\\\n    >\\\\\\\\n      <option value=\\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\">USDT</option>\\\\\\\\n      <option value=\\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\">NEAR</option>\\\\\\\\n      <option value=\\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\">USDC</option>\\\\\\\\n    </select>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst supervisorDiv = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    Supervisor:\\\\\\\\n    <input\\\\\\\\n      type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n      value={state.supervisor}\\\\\\\\n      onChange={(event) => State.update({ supervisor: event.target.value })}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst callDescriptionDiv = () => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"col-lg-12  mb-2\\\\\\\\\\\\\\\">\\\\\\\\n      <label htmlFor=\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\" className=\\\\\\\\\\\\\\\"fs-6 fw-bold mb-1\\\\\\\\\\\\\\\">\\\\\\\\n        Description\\\\\\\\n      </label>\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownEditor\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          data: { handler: state.handler, content: state.description },\\\\\\\\n          onChange: (content) => {\\\\\\\\n            State.update({ description: content, handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\" });\\\\\\\\n            textareaInputHandler(content);\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      {autocompleteEnabled && state.showAccountAutocomplete && (\\\\\\\\n        <AutoComplete>\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.AccountAutocomplete\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              term: state.mentionInput,\\\\\\\\n              onSelect: autoCompleteAccountId,\\\\\\\\n              onClose: () => State.update({ showAccountAutocomplete: false }),\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </AutoComplete>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst disclaimer = (\\\\\\\\n  <p>\\\\\\\\n    <i>\\\\\\\\n      * Note, all projects that were granted sponsorships are required to pass\\\\\\\\n      KYC to receive the funding.\\\\\\\\n    </i>\\\\\\\\n  </p>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst isFundraisingDiv = (\\\\\\\\n  // This is jank with just btns and not radios. But the radios were glitchy af\\\\\\\\n  <>\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"mb-2\\\\\\\\\\\\\\\">\\\\\\\\n      <p class=\\\\\\\\\\\\\\\"fs-6 fw-bold mb-1\\\\\\\\\\\\\\\">\\\\\\\\n        Are you seeking funding for your solution?\\\\\\\\n        <span class=\\\\\\\\\\\\\\\"text-muted fw-normal\\\\\\\\\\\\\\\">(Optional)</span>\\\\\\\\n      </p>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"form-check form-check-inline\\\\\\\\\\\\\\\">\\\\\\\\n        <label class=\\\\\\\\\\\\\\\"form-check-label\\\\\\\\\\\\\\\">\\\\\\\\n          <button\\\\\\\\n            className=\\\\\\\\\\\\\\\"btn btn-light p-0\\\\\\\\\\\\\\\"\\\\\\\\n            style={{\\\\\\\\n              backgroundColor: state.seekingFunding ? \\\\\\\\\\\\\\\"#0C7283\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"inherit\\\\\\\\\\\\\\\",\\\\\\\\n              color: \\\\\\\\\\\\\\\"#f3f3f3\\\\\\\\\\\\\\\",\\\\\\\\n              border: \\\\\\\\\\\\\\\"solid #D9D9D9\\\\\\\\\\\\\\\",\\\\\\\\n              borderRadius: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\",\\\\\\\\n              height: \\\\\\\\\\\\\\\"20px\\\\\\\\\\\\\\\",\\\\\\\\n              width: \\\\\\\\\\\\\\\"20px\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n            onClick={() => State.update({ seekingFunding: true })}\\\\\\\\n          />\\\\\\\\n          Yes\\\\\\\\n        </label>\\\\\\\\n      </div>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"form-check form-check-inline\\\\\\\\\\\\\\\">\\\\\\\\n        <label class=\\\\\\\\\\\\\\\"form-check-label\\\\\\\\\\\\\\\">\\\\\\\\n          <button\\\\\\\\n            className=\\\\\\\\\\\\\\\"btn btn-light p-0\\\\\\\\\\\\\\\"\\\\\\\\n            style={{\\\\\\\\n              backgroundColor: !state.seekingFunding ? \\\\\\\\\\\\\\\"#0C7283\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"inherit\\\\\\\\\\\\\\\",\\\\\\\\n              color: \\\\\\\\\\\\\\\"#f3f3f3\\\\\\\\\\\\\\\",\\\\\\\\n              border: \\\\\\\\\\\\\\\"solid #D9D9D9\\\\\\\\\\\\\\\",\\\\\\\\n              borderRadius: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\",\\\\\\\\n              height: \\\\\\\\\\\\\\\"20px\\\\\\\\\\\\\\\",\\\\\\\\n              width: \\\\\\\\\\\\\\\"20px\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n            onClick={() => State.update({ seekingFunding: false })}\\\\\\\\n          />\\\\\\\\n          No\\\\\\\\n        </label>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst fundraisingDiv = (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"d-flex flex-column mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n      Currency\\\\\\\\n      <select\\\\\\\\n        onChange={(event) => State.update({ token: event.target.value })}\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-select\\\\\\\\\\\\\\\"\\\\\\\\n        aria-label=\\\\\\\\\\\\\\\"Default select example\\\\\\\\\\\\\\\"\\\\\\\\n        value={state.token}\\\\\\\\n      >\\\\\\\\n        <option value=\\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\">USDT</option>\\\\\\\\n        <option value=\\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\">NEAR</option>\\\\\\\\n        <option value=\\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\">USDC</option>\\\\\\\\n      </select>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n      Requested amount\\\\\\\\n      <span class=\\\\\\\\\\\\\\\"text-muted fw-normal\\\\\\\\\\\\\\\">(Numbers Only)</span>\\\\\\\\n      <input\\\\\\\\n        data-testid=\\\\\\\\\\\\\\\"requested-amount-editor\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\"\\\\\\\\n        value={parseInt(state.amount) > 0 ? state.amount : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n        min={0}\\\\\\\\n        onChange={(event) => {\\\\\\\\n          State.update({\\\\\\\\n            amount: Number(\\\\\\\\n              event.target.value.toString().replace(/e/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n            ).toString(),\\\\\\\\n          });\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n      <p class=\\\\\\\\\\\\\\\"mb-1\\\\\\\\\\\\\\\">\\\\\\\\n        Requested sponsor\\\\\\\\n        <span class=\\\\\\\\\\\\\\\"text-muted fw-normal\\\\\\\\\\\\\\\">(Optional)</span>\\\\\\\\n      </p>\\\\\\\\n      <p style={{ fontSize: \\\\\\\\\\\\\\\"13px\\\\\\\\\\\\\\\" }} class=\\\\\\\\\\\\\\\"m-0 text-muted fw-light\\\\\\\\\\\\\\\">\\\\\\\\n        If you are requesting funding from a specific sponsor, please enter\\\\\\\\n        their username.\\\\\\\\n      </p>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"input-group flex-nowrap\\\\\\\\\\\\\\\">\\\\\\\\n        <span class=\\\\\\\\\\\\\\\"input-group-text\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"addon-wrapping\\\\\\\\\\\\\\\">\\\\\\\\n          @\\\\\\\\n        </span>\\\\\\\\n        <input\\\\\\\\n          type=\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\"\\\\\\\\n          class=\\\\\\\\\\\\\\\"form-control\\\\\\\\\\\\\\\"\\\\\\\\n          placeholder=\\\\\\\\\\\\\\\"Enter username\\\\\\\\\\\\\\\"\\\\\\\\n          value={state.supervisor}\\\\\\\\n          onChange={(event) => State.update({ supervisor: event.target.value })}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nfunction generateDescription(text, amount, token, supervisor, seekingFunding) {\\\\\\\\n  const fundingText =\\\\\\\\n    amount > 0 && token ? `###### Requested amount: ${amount} ${token}\\\\\\\\\\\\\\\\n` : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  const supervisorText = supervisor\\\\\\\\n    ? `###### Requested sponsor: @${supervisor}\\\\\\\\\\\\\\\\n`\\\\\\\\n    : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  return seekingFunding ? `${fundingText}${supervisorText}${text}` : text;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [tab, setTab] = useState(\\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst renamedPostType =\\\\\\\\n  state.postType == \\\\\\\\\\\\\\\"Submission\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\" : state.postType;\\\\\\\\n// Below there is a weird code with fields.includes(\\\\\\\\\\\\\\\"githubLink\\\\\\\\\\\\\\\") ternary operator.\\\\\\\\n// This is to hack around rendering bug of near.social.\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-grow-1 w-100\\\\\\\\\\\\\\\">\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"mx-2 mx-md-5 mb-5\\\\\\\\\\\\\\\">\\\\\\\\n      {showPostPage ? (\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Post\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            id: postId,\\\\\\\\n            expandable: true,\\\\\\\\n            defaultExpanded: false,\\\\\\\\n            isInList: true,\\\\\\\\n            isPreview: false,\\\\\\\\n            onDraftStateChange: props.onDraftStateChange,\\\\\\\\n            referral: postId,\\\\\\\\n            transactionHashes: props.transactionHashes,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      ) : (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card-header\\\\\\\\\\\\\\\">\\\\\\\\n            <div>\\\\\\\\n              <ul class=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\">\\\\\\\\n                <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                  <button\\\\\\\\n                    class={`nav-link ${tab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}`}\\\\\\\\n                    onClick={() => setTab(\\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\")}\\\\\\\\n                  >\\\\\\\\n                    Editor\\\\\\\\n                  </button>\\\\\\\\n                </li>\\\\\\\\n                <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                  <button\\\\\\\\n                    class={`nav-link ${tab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}`}\\\\\\\\n                    onClick={() => setTab(\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\")}\\\\\\\\n                  >\\\\\\\\n                    Preview\\\\\\\\n                  </button>\\\\\\\\n                </li>\\\\\\\\n              </ul>\\\\\\\\n            </div>\\\\\\\\n            {!isCreatePostPage && tab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"my-3\\\\\\\\\\\\\\\">\\\\\\\\n                {mode} {renamedPostType}\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n            {tab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" && <div className=\\\\\\\\\\\\\\\"my-3\\\\\\\\\\\\\\\">Post Preview</div>}\\\\\\\\n          </div>\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n            {tab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" && (\\\\\\\\n              <>\\\\\\\\n                {state.warning && (\\\\\\\\n                  <div\\\\\\\\n                    class=\\\\\\\\\\\\\\\"alert alert-warning alert-dismissible fade show\\\\\\\\\\\\\\\"\\\\\\\\n                    role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    {state.warning}\\\\\\\\n                    <button\\\\\\\\n                      type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n                      class=\\\\\\\\\\\\\\\"btn-close\\\\\\\\\\\\\\\"\\\\\\\\n                      data-bs-dismiss=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\"\\\\\\\\n                      aria-label=\\\\\\\\\\\\\\\"Close\\\\\\\\\\\\\\\"\\\\\\\\n                      onClick={() => State.update({ warning: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" })}\\\\\\\\n                    ></button>\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n                {isCreatePostPage && (\\\\\\\\n                  <div>\\\\\\\\n                    <p class=\\\\\\\\\\\\\\\"card-title fw-bold fs-6\\\\\\\\\\\\\\\">\\\\\\\\n                      What do you want to create?\\\\\\\\n                    </p>\\\\\\\\n                    <div class=\\\\\\\\\\\\\\\"d-flex flex-row gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                      {Object.values(postTypeOptions).map((option) => (\\\\\\\\n                        <button\\\\\\\\n                          className={`btn btn-${\\\\\\\\n                            state.postType === option.name\\\\\\\\n                              ? \\\\\\\\\\\\\\\"primary\\\\\\\\\\\\\\\"\\\\\\\\n                              : \\\\\\\\\\\\\\\"outline-secondary\\\\\\\\\\\\\\\"\\\\\\\\n                          }`}\\\\\\\\n                          data-testid={`btn-${option.name.toLowerCase()}`}\\\\\\\\n                          key={option.name}\\\\\\\\n                          onClick={() => typeSwitch(option.name)}\\\\\\\\n                          style={\\\\\\\\n                            state.postType === option.name\\\\\\\\n                              ? {\\\\\\\\n                                  backgroundColor: \\\\\\\\\\\\\\\"#0C7283\\\\\\\\\\\\\\\",\\\\\\\\n                                  color: \\\\\\\\\\\\\\\"#f3f3f3\\\\\\\\\\\\\\\",\\\\\\\\n                                }\\\\\\\\n                              : null\\\\\\\\n                          }\\\\\\\\n                          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n                        >\\\\\\\\n                          <i className={`bi ${option.icon}`} />\\\\\\\\n                          <span>{option.name}</span>\\\\\\\\n                        </button>\\\\\\\\n                      ))}\\\\\\\\n                    </div>\\\\\\\\n                    <p class=\\\\\\\\\\\\\\\"text-muted w-75 my-1\\\\\\\\\\\\\\\">\\\\\\\\n                      {postTypeOptions[state.postType].description}\\\\\\\\n                    </p>\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n                {/* This statement around the githubLinkDiv creates a weird render bug\\\\\\\\n      where the title renders extra on state change. */}\\\\\\\\n                {state.displayFields.includes(\\\\\\\\\\\\\\\"githubLink\\\\\\\\\\\\\\\") ? (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\">\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"githubLink\\\\\\\\\\\\\\\") &&\\\\\\\\n                      githubLinkDiv}\\\\\\\\n                    {labelEditor}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\") && nameDiv}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\") &&\\\\\\\\n                      callDescriptionDiv()}\\\\\\\\n                  </div>\\\\\\\\n                ) : (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\">\\\\\\\\n                    {labelEditor}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\") && nameDiv}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"amount\\\\\\\\\\\\\\\") && amountDiv}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"sponsorship_token\\\\\\\\\\\\\\\") &&\\\\\\\\n                      tokenDiv}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"supervisor\\\\\\\\\\\\\\\") &&\\\\\\\\n                      supervisorDiv}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\") &&\\\\\\\\n                      callDescriptionDiv()}\\\\\\\\n                    {state.displayFields.includes(\\\\\\\\\\\\\\\"fund_raising\\\\\\\\\\\\\\\") &&\\\\\\\\n                      isFundraisingDiv}\\\\\\\\n                    {state.seekingFunding &&\\\\\\\\n                      state.displayFields.includes(\\\\\\\\\\\\\\\"fund_raising\\\\\\\\\\\\\\\") &&\\\\\\\\n                      fundraisingDiv}\\\\\\\\n                  </div>\\\\\\\\n                )}\\\\\\\\n\\\\\\\\n                {disclaimer}\\\\\\\\n              </>\\\\\\\\n            )}\\\\\\\\n            {tab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mb-2\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Post\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    isPreview: true,\\\\\\\\n                    id: 0, // irrelevant\\\\\\\\n                    post: {\\\\\\\\n                      author_id: state.author_id,\\\\\\\\n                      likes: [],\\\\\\\\n                      snapshot: {\\\\\\\\n                        editor_id: state.editor_id,\\\\\\\\n                        labels: state.labelStrings,\\\\\\\\n                        post_type: postType,\\\\\\\\n                        name: state.name,\\\\\\\\n                        description:\\\\\\\\n                          state.postType == \\\\\\\\\\\\\\\"Solution\\\\\\\\\\\\\\\"\\\\\\\\n                            ? generateDescription(\\\\\\\\n                                state.description,\\\\\\\\n                                state.amount,\\\\\\\\n                                state.token,\\\\\\\\n                                state.supervisor,\\\\\\\\n                                state.seekingFunding\\\\\\\\n                              )\\\\\\\\n                            : state.description,\\\\\\\\n                        amount: state.amount,\\\\\\\\n                        sponsorship_token: state.token,\\\\\\\\n                        supervisor: state.supervisor,\\\\\\\\n                        github_link: state.githubLink,\\\\\\\\n                      },\\\\\\\\n                    },\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n            <button\\\\\\\\n              data-testid=\\\\\\\\\\\\\\\"submit-create-post\\\\\\\\\\\\\\\"\\\\\\\\n              style={{\\\\\\\\n                width: \\\\\\\\\\\\\\\"7rem\\\\\\\\\\\\\\\",\\\\\\\\n                backgroundColor: \\\\\\\\\\\\\\\"#0C7283\\\\\\\\\\\\\\\",\\\\\\\\n                color: \\\\\\\\\\\\\\\"#f3f3f3\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n              disabled={\\\\\\\\n                (state.seekingFunding && (!state.amount || state.amount < 1)) ||\\\\\\\\n                (isCreatePostPage &&\\\\\\\\n                  (state.name === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" || state.description === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"))\\\\\\\\n              }\\\\\\\\n              className=\\\\\\\\\\\\\\\"btn btn-light mb-2 p-3\\\\\\\\\\\\\\\"\\\\\\\\n              onClick={onSubmit}\\\\\\\\n            >\\\\\\\\n              Submit\\\\\\\\n            </button>\\\\\\\\n            {!isCreatePostPage && (\\\\\\\\n              <button\\\\\\\\n                style={{\\\\\\\\n                  width: \\\\\\\\\\\\\\\"7rem\\\\\\\\\\\\\\\",\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"#fff\\\\\\\\\\\\\\\",\\\\\\\\n                  color: \\\\\\\\\\\\\\\"#000\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                className=\\\\\\\\\\\\\\\"btn btn-light mb-2 p-3\\\\\\\\\\\\\\\"\\\\\\\\n                onClick={() => props.setEditorState(false)}\\\\\\\\n              >\\\\\\\\n                Cancel\\\\\\\\n              </button>\\\\\\\\n            )}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.9094517355294e+21
    }
  },
  {
    "id": "2148370510",
    "receipt_id": "fUEjQNkbAoSZQTC5Cr7ivSgsr1vNWbsGk9GtnMA8sU3",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3cxoZQmj4aw9egWo958dF674aewExdJkWVgY97JMUeSH",
      "block_height": 110569825,
      "block_timestamp": 1705432376276475400
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "G8vVocuR6L5aLT2NFV3gsrmSXda9imVEULDc4wGH23Pc",
    "included_in_block_hash": "76TRBetAQVHGb7fwp4yoLuqukGpS4X15wvR8wmDHTr7D",
    "block_timestamp": "1705432374356869056",
    "block": {
      "block_height": 110569823
    },
    "receipt_conversion_tokens_burnt": "254997392925800000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8745143400583527e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.9094517355294e+21
    }
  },
  {
    "id": "2161778733",
    "receipt_id": "4u9X1MJo2hqDtchq3EQziEGGEAi921p15v943vcRENqw",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "4RSNnoDz3ij3F1Chiz2KLNTbd3hvyWUfqgdtk83cs2jx",
      "block_height": 110678762,
      "block_timestamp": 1705545253974526700
    },
    "receipt_outcome": {
      "gas_burnt": 33858791556610,
      "tokens_burnt": 3.385879155661e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "DtJp4g8wuZ6cGK1j1AepskRQAgi13Z1pE6wZcDDFUuUJ",
    "included_in_block_hash": "BtKqffdT78ZahnEms352NqHVBJev1QxfeNpnFWcDXBPQ",
    "block_timestamp": "1705545252916079429",
    "block": {
      "block_height": 110678761
    },
    "receipt_conversion_tokens_burnt": "265255410931000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 3.385879155661e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.page.communities\": {\"\": \"const { getAllCommunitiesMetadata, createCommunity } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!getAllCommunitiesMetadata || !createCommunity) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst onCommunitySubmit = (inputs) =>\\\\\\\\n  createCommunity({\\\\\\\\n    inputs: {\\\\\\\\n      ...inputs,\\\\\\\\n\\\\\\\\n      bio_markdown: [\\\\\\\\n        \\\\\\\\\\\\\\\"This is a sample text about your community.\\\\\\\\\\\\\\\",\\\\\\\\n        \\\\\\\\\\\\\\\"You can change it on the community configuration page.\\\\\\\\\\\\\\\",\\\\\\\\n      ].join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"),\\\\\\\\n\\\\\\\\n      logo_url:\\\\\\\\n        \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreibysr2mkwhb4j36h2t7mqwhynqdy4vzjfygfkfg65kuspd2bawauu\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n      banner_url:\\\\\\\\n        \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  });\\\\\\\\n\\\\\\\\nconst [showSpawner, setShowSpawner] = useState(false);\\\\\\\\n\\\\\\\\nconst [searchKey, setSearchKey] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [sort, setSort] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst communitiesMetadata = getAllCommunitiesMetadata();\\\\\\\\n\\\\\\\\nconst SortedAndFiltered = (searchKey, sortBy) => {\\\\\\\\n  let communities = (communitiesMetadata ?? []).reverse();\\\\\\\\n\\\\\\\\n  let filtered = [...communities];\\\\\\\\n  if (searchKey !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n    filtered = communities.filter((community) =>\\\\\\\\n      community.name.toLowerCase().includes(searchKey.toLowerCase())\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  let sortedCommunities = [...filtered];\\\\\\\\n  if (sortBy !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n    sortedCommunities.sort((a, b) => {\\\\\\\\n      let nameA = a.name.toLowerCase();\\\\\\\\n      let nameB = b.name.toLowerCase();\\\\\\\\n\\\\\\\\n      if (nameA < nameB) {\\\\\\\\n        return -1;\\\\\\\\n      }\\\\\\\\n      if (nameA > nameB) {\\\\\\\\n        return 1;\\\\\\\\n      }\\\\\\\\n      return 0;\\\\\\\\n    });\\\\\\\\n\\\\\\\\n    if (sortBy === \\\\\\\\\\\\\\\"z-a\\\\\\\\\\\\\\\") {\\\\\\\\n      sortedCommunities.reverse();\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return sortedCommunities;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CardGrid = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  height: 100%;\\\\\\\\n\\\\\\\\n  display: grid;\\\\\\\\n  grid-template-columns: repeat(3, 1fr);\\\\\\\\n  gap: 3rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 992px) {\\\\\\\\n    grid-template-columns: repeat(2, 1fr);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: flex;\\\\\\\\n    flex-direction: column;\\\\\\\\n    gap: 2rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst InputContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  position: relative;\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst StyledDropdown = styled.div`\\\\\\\\n  button {\\\\\\\\n    text-align: left;\\\\\\\\n\\\\\\\\n    &::after {\\\\\\\\n      position: absolute;\\\\\\\\n      right: 8px;\\\\\\\\n      top: 45%;\\\\\\\\n      transform: translateX(-50%);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget src={`devhub.near/widget/devhub.components.island.banner`} />\\\\\\\\n    <div style={{ background: \\\\\\\\\\\\\\\"#f4f4f4\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"d-flex justify-content-between p-4\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ backgroundColor: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }}\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <h1\\\\\\\\n            className=\\\\\\\\\\\\\\\"m-0 fs-4\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ color: \\\\\\\\\\\\\\\"#555555\\\\\\\\\\\\\\\", fontSize: \\\\\\\\\\\\\\\"1.5rem\\\\\\\\\\\\\\\" }}\\\\\\\\n          >\\\\\\\\n            Communities\\\\\\\\n          </h1>\\\\\\\\n\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex col-12 flex-column flex-sm-row gap-4 justify-content-between align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-sm-row align-items-center gap-4 col-12 col-sm-6\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer className=\\\\\\\\\\\\\\\"border rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"position-absolute d-flex ps-3 flex-column h-100 justify-center\\\\\\\\\\\\\\\">\\\\\\\\n                  <i class=\\\\\\\\\\\\\\\"bi bi-search m-auto\\\\\\\\\\\\\\\"></i>\\\\\\\\n                </div>\\\\\\\\n                <input\\\\\\\\n                  type=\\\\\\\\\\\\\\\"search\\\\\\\\\\\\\\\"\\\\\\\\n                  className=\\\\\\\\\\\\\\\"ps-5 form-control border border-0\\\\\\\\\\\\\\\"\\\\\\\\n                  value={searchKey ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n                  onChange={(e) => setSearchKey(e.target.value)}\\\\\\\\n                  placeholder={props.placeholder ?? `Search by name`}\\\\\\\\n                />\\\\\\\\n              </InputContainer>\\\\\\\\n              <div class=\\\\\\\\\\\\\\\"dropdown w-100\\\\\\\\\\\\\\\">\\\\\\\\n                <StyledDropdown>\\\\\\\\n                  <button\\\\\\\\n                    class=\\\\\\\\\\\\\\\"btn dropdown-toggle border rounded-2 bg-white w-100\\\\\\\\\\\\\\\"\\\\\\\\n                    type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n                    data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n                    aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    Sort: {sort?.toUpperCase() || \\\\\\\\\\\\\\\"Latest\\\\\\\\\\\\\\\"}\\\\\\\\n                  </button>\\\\\\\\n                  <ul class=\\\\\\\\\\\\\\\"dropdown-menu dropdown-menu-end dropdown-menu-lg-start px-2 shadow\\\\\\\\\\\\\\\">\\\\\\\\n                    <li\\\\\\\\n                      onClick={() => setSort(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")}\\\\\\\\n                      class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Latest\\\\\\\\n                    </li>\\\\\\\\n                    <li\\\\\\\\n                      onClick={() => setSort(\\\\\\\\\\\\\\\"a-z\\\\\\\\\\\\\\\")}\\\\\\\\n                      class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      A-Z\\\\\\\\n                    </li>\\\\\\\\n                    <li\\\\\\\\n                      onClick={() => setSort(\\\\\\\\\\\\\\\"z-a\\\\\\\\\\\\\\\")}\\\\\\\\n                      class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Z-A\\\\\\\\n                    </li>\\\\\\\\n                  </ul>\\\\\\\\n                </StyledDropdown>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column justify-content-center align-self-end\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.CommunityControl\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    title: \\\\\\\\\\\\\\\"Community\\\\\\\\\\\\\\\",\\\\\\\\n                    onClick: () => setShowSpawner(!showSpawner),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap align-content-start gap-4 py-2 px-4 w-100 h-100\\\\\\\\\\\\\\\">\\\\\\\\n        {showSpawner && (\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Spawner\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              data: null,\\\\\\\\n              onSubmit: onCommunitySubmit,\\\\\\\\n              onCancel: () => setShowSpawner(false),\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n        <CardGrid>\\\\\\\\n          {searchKey === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" && sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n            ? (communitiesMetadata ?? []).reverse().map((communityMetadata) => (\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Card\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    format: \\\\\\\\\\\\\\\"small\\\\\\\\\\\\\\\",\\\\\\\\n                    isBannerEnabled: false,\\\\\\\\n                    metadata: communityMetadata,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              ))\\\\\\\\n            : SortedAndFiltered(searchKey, sort).map((communityMetadata) => (\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Card\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    format: \\\\\\\\\\\\\\\"small\\\\\\\\\\\\\\\",\\\\\\\\n                    isBannerEnabled: false,\\\\\\\\n                    metadata: communityMetadata,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              ))}\\\\\\\\n        </CardGrid>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.post.Panel\": {\"\": \"//////////////////////////////////////////////////////////////////////\\\\\\\\n///STOPWORDS//////////////////////////////////////////////////////////\\\\\\\\nconst stopWords = [\\\\\\\\n  \\\\\\\\\\\\\\\"about\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"above\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"after\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"again\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"against\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"and\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"any\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"are\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"because\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"been\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"before\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"being\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"below\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"between\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"both\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"but\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"can\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"cannot\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"could\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"did\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"does\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"doing\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"during\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"each\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"etc\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"few\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"for\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"from\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"further\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"had\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"has\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"have\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"having\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"her\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"hers\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"herself\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"him\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"himself\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"his\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"how\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"into\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"its\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"itself\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"just\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"more\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"most\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"myself\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"nor\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"not\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"now\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"off\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"once\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"only\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"other\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"our\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"ours\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"ourselves\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"out\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"over\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"own\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"same\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"she\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"should\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"some\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"still\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"such\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"than\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"that\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"the\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"their\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"theirs\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"them\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"themselves\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"then\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"there\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"these\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"they\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"this\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"those\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"through\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"too\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"under\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"until\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"very\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"was\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"were\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"what\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"when\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"where\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"which\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"while\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"who\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"whom\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"why\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"will\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"with\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"you\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"your\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"yours\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"yourself\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"yourselves\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"www\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"http\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"com\\\\\\\\\\\\\\\",\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst stopWordsDictionary = {};\\\\\\\\nfor (let i = 0; i < stopWords.length; i++) {\\\\\\\\n  stopWordsDictionary[stopWords[i]] = true;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction isStopWord(word) {\\\\\\\\n  return stopWordsDictionary.hasOwnProperty(word.toLowerCase());\\\\\\\\n}\\\\\\\\n//////////////////////////////////////////////////////////////////////\\\\\\\\n///SYNONYMS///////////////////////////////////////////////////////////\\\\\\\\nconst synonyms = {\\\\\\\\n  ether: \\\\\\\\\\\\\\\"ethereum\\\\\\\\\\\\\\\",\\\\\\\\n  eth: \\\\\\\\\\\\\\\"ethereum\\\\\\\\\\\\\\\",\\\\\\\\n  either: \\\\\\\\\\\\\\\"ethereum\\\\\\\\\\\\\\\",\\\\\\\\n  app: \\\\\\\\\\\\\\\"application\\\\\\\\\\\\\\\",\\\\\\\\n  cryptocyrrency: \\\\\\\\\\\\\\\"crypto\\\\\\\\\\\\\\\",\\\\\\\\n  developerdao: \\\\\\\\\\\\\\\"devdao\\\\\\\\\\\\\\\",\\\\\\\\n  dev: \\\\\\\\\\\\\\\"develop\\\\\\\\\\\\\\\",\\\\\\\\n  doc: \\\\\\\\\\\\\\\"document\\\\\\\\\\\\\\\",\\\\\\\\n  lib: \\\\\\\\\\\\\\\"librari\\\\\\\\\\\\\\\",\\\\\\\\n  saw: \\\\\\\\\\\\\\\"see\\\\\\\\\\\\\\\",\\\\\\\\n  seen: \\\\\\\\\\\\\\\"see\\\\\\\\\\\\\\\",\\\\\\\\n  tweet: \\\\\\\\\\\\\\\"twitter\\\\\\\\\\\\\\\",\\\\\\\\n  paid: \\\\\\\\\\\\\\\"pai\\\\\\\\\\\\\\\",\\\\\\\\n  src: \\\\\\\\\\\\\\\"sourc\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst applySynonym = (word) => {\\\\\\\\n  if (synonyms.hasOwnProperty(word.toLowerCase())) {\\\\\\\\n    return synonyms[word];\\\\\\\\n  }\\\\\\\\n  return word;\\\\\\\\n};\\\\\\\\n//////////////////////////////////////////////////////////////////////\\\\\\\\n///STEMMING///////////////////////////////////////////////////////////\\\\\\\\nconst step2list = {\\\\\\\\n  ational: \\\\\\\\\\\\\\\"ate\\\\\\\\\\\\\\\",\\\\\\\\n  tional: \\\\\\\\\\\\\\\"tion\\\\\\\\\\\\\\\",\\\\\\\\n  enci: \\\\\\\\\\\\\\\"ence\\\\\\\\\\\\\\\",\\\\\\\\n  anci: \\\\\\\\\\\\\\\"ance\\\\\\\\\\\\\\\",\\\\\\\\n  izer: \\\\\\\\\\\\\\\"ize\\\\\\\\\\\\\\\",\\\\\\\\n  bli: \\\\\\\\\\\\\\\"ble\\\\\\\\\\\\\\\",\\\\\\\\n  alli: \\\\\\\\\\\\\\\"al\\\\\\\\\\\\\\\",\\\\\\\\n  entli: \\\\\\\\\\\\\\\"ent\\\\\\\\\\\\\\\",\\\\\\\\n  eli: \\\\\\\\\\\\\\\"e\\\\\\\\\\\\\\\",\\\\\\\\n  ousli: \\\\\\\\\\\\\\\"ous\\\\\\\\\\\\\\\",\\\\\\\\n  ization: \\\\\\\\\\\\\\\"ize\\\\\\\\\\\\\\\",\\\\\\\\n  ation: \\\\\\\\\\\\\\\"ate\\\\\\\\\\\\\\\",\\\\\\\\n  ator: \\\\\\\\\\\\\\\"ate\\\\\\\\\\\\\\\",\\\\\\\\n  alism: \\\\\\\\\\\\\\\"al\\\\\\\\\\\\\\\",\\\\\\\\n  iveness: \\\\\\\\\\\\\\\"ive\\\\\\\\\\\\\\\",\\\\\\\\n  fulness: \\\\\\\\\\\\\\\"ful\\\\\\\\\\\\\\\",\\\\\\\\n  ousness: \\\\\\\\\\\\\\\"ous\\\\\\\\\\\\\\\",\\\\\\\\n  aliti: \\\\\\\\\\\\\\\"al\\\\\\\\\\\\\\\",\\\\\\\\n  iviti: \\\\\\\\\\\\\\\"ive\\\\\\\\\\\\\\\",\\\\\\\\n  biliti: \\\\\\\\\\\\\\\"ble\\\\\\\\\\\\\\\",\\\\\\\\n  logi: \\\\\\\\\\\\\\\"log\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\n/** @type {Record<string, string>} */\\\\\\\\nconst step3list = {\\\\\\\\n  icate: \\\\\\\\\\\\\\\"ic\\\\\\\\\\\\\\\",\\\\\\\\n  ative: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  alize: \\\\\\\\\\\\\\\"al\\\\\\\\\\\\\\\",\\\\\\\\n  iciti: \\\\\\\\\\\\\\\"ic\\\\\\\\\\\\\\\",\\\\\\\\n  ical: \\\\\\\\\\\\\\\"ic\\\\\\\\\\\\\\\",\\\\\\\\n  ful: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  ness: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst gt0 = /^([^aeiou][^aeiouy]*)?([aeiouy][aeiou]*)([^aeiou][^aeiouy]*)/;\\\\\\\\nconst eq1 =\\\\\\\\n  /^([^aeiou][^aeiouy]*)?([aeiouy][aeiou]*)([^aeiou][^aeiouy]*)([aeiouy][aeiou]*)?$/;\\\\\\\\nconst gt1 =\\\\\\\\n  /^([^aeiou][^aeiouy]*)?(([aeiouy][aeiou]*)([^aeiou][^aeiouy]*)){2,}/;\\\\\\\\nconst vowelInStem = /^([^aeiou][^aeiouy]*)?[aeiouy]/;\\\\\\\\nconst consonantLike = /^([^aeiou][^aeiouy]*)[aeiouy][^aeiouwxy]$/;\\\\\\\\n\\\\\\\\n// Exception expressions.\\\\\\\\nconst sfxLl = /ll$/;\\\\\\\\nconst sfxE = /^(.+?)e$/;\\\\\\\\nconst sfxY = /^(.+?)y$/;\\\\\\\\nconst sfxIon = /^(.+?(s|t))(ion)$/;\\\\\\\\nconst sfxEdOrIng = /^(.+?)(ed|ing)$/;\\\\\\\\nconst sfxAtOrBlOrIz = /(at|bl|iz)$/;\\\\\\\\nconst sfxEED = /^(.+?)eed$/;\\\\\\\\nconst sfxS = /^.+?[^s]s$/;\\\\\\\\nconst sfxSsesOrIes = /^.+?(ss|i)es$/;\\\\\\\\nconst sfxMultiConsonantLike = /([^aeiouylsz])\\\\\\\\\\\\\\\\1$/;\\\\\\\\nconst step2 =\\\\\\\\n  /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\\\\\\\\nconst step3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\\\\\\\\nconst step4 =\\\\\\\\n  /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Get the stem from a given value.\\\\\\\\n *\\\\\\\\n * @param {string} value\\\\\\\\n *   Value to stem.\\\\\\\\n * @returns {string}\\\\\\\\n *   Stem for `value`\\\\\\\\n */\\\\\\\\n// eslint-disable-next-line complexity\\\\\\\\nfunction stemmer(value) {\\\\\\\\n  let result = value.toLowerCase();\\\\\\\\n\\\\\\\\n  // Exit early.\\\\\\\\n  if (result.length < 3) {\\\\\\\\n    return result;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /** @type {boolean} */\\\\\\\\n  let firstCharacterWasLowerCaseY = false;\\\\\\\\n\\\\\\\\n  // Detect initial `y`, make sure it never matches.\\\\\\\\n  if (\\\\\\\\n    result.codePointAt(0) === 121 // Lowercase Y\\\\\\\\n  ) {\\\\\\\\n    firstCharacterWasLowerCaseY = true;\\\\\\\\n    result = \\\\\\\\\\\\\\\"Y\\\\\\\\\\\\\\\" + result.slice(1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 1a.\\\\\\\\n  if (sfxSsesOrIes.test(result)) {\\\\\\\\n    // Remove last two characters.\\\\\\\\n    result = result.slice(0, -2);\\\\\\\\n  } else if (sfxS.test(result)) {\\\\\\\\n    // Remove last character.\\\\\\\\n    result = result.slice(0, -1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /** @type {RegExpMatchArray|null} */\\\\\\\\n  let match;\\\\\\\\n\\\\\\\\n  // Step 1b.\\\\\\\\n  if ((match = sfxEED.exec(result))) {\\\\\\\\n    if (gt0.test(match[1])) {\\\\\\\\n      // Remove last character.\\\\\\\\n      result = result.slice(0, -1);\\\\\\\\n    }\\\\\\\\n  } else if ((match = sfxEdOrIng.exec(result)) && vowelInStem.test(match[1])) {\\\\\\\\n    result = match[1];\\\\\\\\n\\\\\\\\n    if (sfxAtOrBlOrIz.test(result)) {\\\\\\\\n      // Append `e`.\\\\\\\\n      result += \\\\\\\\\\\\\\\"e\\\\\\\\\\\\\\\";\\\\\\\\n    } else if (sfxMultiConsonantLike.test(result)) {\\\\\\\\n      // Remove last character.\\\\\\\\n      result = result.slice(0, -1);\\\\\\\\n    } else if (consonantLike.test(result)) {\\\\\\\\n      // Append `e`.\\\\\\\\n      result += \\\\\\\\\\\\\\\"e\\\\\\\\\\\\\\\";\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 1c.\\\\\\\\n  if ((match = sfxY.exec(result)) && vowelInStem.test(match[1])) {\\\\\\\\n    // Remove suffixing `y` and append `i`.\\\\\\\\n    result = match[1] + \\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 2.\\\\\\\\n  if ((match = step2.exec(result)) && gt0.test(match[1])) {\\\\\\\\n    result = match[1] + step2list[match[2]];\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 3.\\\\\\\\n  if ((match = step3.exec(result)) && gt0.test(match[1])) {\\\\\\\\n    result = match[1] + step3list[match[2]];\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 4.\\\\\\\\n  if ((match = step4.exec(result))) {\\\\\\\\n    if (gt1.test(match[1])) {\\\\\\\\n      result = match[1];\\\\\\\\n    }\\\\\\\\n  } else if ((match = sfxIon.exec(result)) && gt1.test(match[1])) {\\\\\\\\n    result = match[1];\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Step 5.\\\\\\\\n  if (\\\\\\\\n    (match = sfxE.exec(result)) &&\\\\\\\\n    (gt1.test(match[1]) ||\\\\\\\\n      (eq1.test(match[1]) && !consonantLike.test(match[1])))\\\\\\\\n  ) {\\\\\\\\n    result = match[1];\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (sfxLl.test(result) && gt1.test(result)) {\\\\\\\\n    result = result.slice(0, -1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // Turn initial `Y` back to `y`.\\\\\\\\n  if (firstCharacterWasLowerCaseY) {\\\\\\\\n    result = \\\\\\\\\\\\\\\"y\\\\\\\\\\\\\\\" + result.slice(1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return result;\\\\\\\\n}\\\\\\\\n\\\\\\\\n//////////////////////////////////////////////////////////////////////\\\\\\\\n///SPELLCHECK/////////////////////////////////////////////////////////\\\\\\\\nfunction levenshteinDistance(s, t, threshold) {\\\\\\\\n  const BIG_NUMBER = 10000;\\\\\\\\n  if (s == null || t == null) {\\\\\\\\n    return BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n  if (threshold < 0) {\\\\\\\\n    return BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n  let n = s.length;\\\\\\\\n  let m = t.length;\\\\\\\\n  if (Math.abs(n - m) >= threshold) {\\\\\\\\n    return BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // if one string is empty, the edit distance is necessarily the length of the other\\\\\\\\n  if (n == 0) {\\\\\\\\n    return m <= threshold ? m : BIG_NUMBER;\\\\\\\\n  } else if (m == 0) {\\\\\\\\n    return n <= threshold ? n : BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (n > m) {\\\\\\\\n    // swap the two strings to consume less memory\\\\\\\\n    let temp = s;\\\\\\\\n    s = t;\\\\\\\\n    t = temp;\\\\\\\\n    let tempSize = n;\\\\\\\\n    n = m;\\\\\\\\n    m = tempSize;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  let p = Array.from({ length: n + 1 }, () => 0); // \\\\\\\\\\\\'previous\\\\\\\\\\\\' cost array, horizontally\\\\\\\\n  let d = Array.from({ length: n + 1 }, () => 0); // cost array, horizontally\\\\\\\\n  let _d; // placeholder to assist in swapping p and d\\\\\\\\n\\\\\\\\n  // fill in starting table values\\\\\\\\n  const boundary = Math.min(n, threshold) + 1;\\\\\\\\n  for (let i = 0; i < boundary; i++) {\\\\\\\\n    p[i] = i;\\\\\\\\n  }\\\\\\\\n  // these fills ensure that the value above the rightmost entry of our\\\\\\\\n  // stripe will be ignored in following loop iterations\\\\\\\\n  for (let i = boundary; i < p.length; i++) {\\\\\\\\n    p[i] = BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n  for (let i = 0; i < d.length; i++) {\\\\\\\\n    d[i] = BIG_NUMBER;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // iterates through t\\\\\\\\n  for (let j = 1; j <= m; j++) {\\\\\\\\n    const t_j = t.charAt(j - 1); // jth character of t\\\\\\\\n    d[0] = j;\\\\\\\\n\\\\\\\\n    // compute stripe indices, constrain to array size\\\\\\\\n    const min = Math.max(1, j - threshold);\\\\\\\\n    const max = j > BIG_NUMBER - threshold ? n : Math.min(n, j + threshold);\\\\\\\\n\\\\\\\\n    // the stripe may lead off of the table if s and t are of different sizes\\\\\\\\n    if (min > max) {\\\\\\\\n      return BIG_NUMBER;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // ignore entry left of leftmost\\\\\\\\n    if (min > 1) {\\\\\\\\n      d[min - 1] = BIG_NUMBER;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // iterates through [min, max] in s\\\\\\\\n    for (let i = min; i <= max; i++) {\\\\\\\\n      if (s.charAt(i - 1) == t_j) {\\\\\\\\n        // diagonally left and up\\\\\\\\n        d[i] = p[i - 1];\\\\\\\\n      } else {\\\\\\\\n        // 1 + minimum of cell to the left, to the top, diagonally left and up\\\\\\\\n        d[i] = 1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // copy current distance counts to \\\\\\\\\\\\'previous row\\\\\\\\\\\\' distance counts\\\\\\\\n    _d = p;\\\\\\\\n    p = d;\\\\\\\\n    d = _d;\\\\\\\\n  }\\\\\\\\n  // we don\\\\\\\\\\\\'t need to check for threshold here because we did it inside the loop\\\\\\\\n  return p[n] <= threshold ? p[n] : BIG_NUMBER;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst spellcheckQueryProcessing = (query, dictionary) => {\\\\\\\\n  // Split text document into words\\\\\\\\n  const words = stemAndFilterQuery(query);\\\\\\\\n  const dictionaryArray = Object.keys(dictionary);\\\\\\\\n  // Iterate over each word in the text\\\\\\\\n  for (let i = 0; i < words.length; i++) {\\\\\\\\n    let word = words[i].toLowerCase().replace(/[^a-z0-9]/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n    // If the word is not in the dictionary, find the closest match\\\\\\\\n    if (!dictionary.hasOwnProperty(word)) {\\\\\\\\n      let closestMatch = undefined;\\\\\\\\n      let closestDistance = word.length;\\\\\\\\n      let allowedDistance = Math.min(word.length - 1, 3);\\\\\\\\n      // Iterate over each word in the dictionary\\\\\\\\n      if (word.length > 1) {\\\\\\\\n        for (let j = 0; j < dictionaryArray.length; j++) {\\\\\\\\n          let dictWord = dictionaryArray[j];\\\\\\\\n          let distance = levenshteinDistance(word, dictWord, allowedDistance);\\\\\\\\n\\\\\\\\n          // If the distance is less than the closest distance, update the closest match\\\\\\\\n          if (distance <= allowedDistance && distance < closestDistance) {\\\\\\\\n            closestMatch = dictWord;\\\\\\\\n            closestDistance = distance;\\\\\\\\n          }\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      // Replace the misspelled word with the closest match\\\\\\\\n      words[i] = closestMatch;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return words.filter((word) => !!word);\\\\\\\\n};\\\\\\\\n\\\\\\\\n//////////////////////////////////////////////////////////////////////\\\\\\\\n///INDEXER&SEARCH/////////////////////////////////////////////////////\\\\\\\\nconst fillDictionaryWith = (dict, text, id) => {\\\\\\\\n  let word = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  for (let i = 0; i < text.length; i++) {\\\\\\\\n    const char = text.charAt(i);\\\\\\\\n    const nextChar = text.charAt(i + 1);\\\\\\\\n    if (/\\\\\\\\\\\\\\\\w/.test(char) || (char === \\\\\\\\\\\\\\\".\\\\\\\\\\\\\\\" && /\\\\\\\\\\\\\\\\w/.test(nextChar))) {\\\\\\\\n      word += char.toLowerCase();\\\\\\\\n    } else if (word.length > 0) {\\\\\\\\n      const processedWord = applySynonym(stemmer(word));\\\\\\\\n      if (processedWord.length > 1 && !isStopWord(processedWord)) {\\\\\\\\n        const oldValue = dict[processedWord] || [];\\\\\\\\n        dict[processedWord] = [...oldValue, id];\\\\\\\\n      }\\\\\\\\n      word = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  const processedWord = applySynonym(stemmer(word));\\\\\\\\n  if (processedWord.length > 1 && !isStopWord(processedWord)) {\\\\\\\\n    const oldValue = dict[stemmer(processedWord)] || [];\\\\\\\\n    dict[stemmer(processedWord)] = [...oldValue, id];\\\\\\\\n  }\\\\\\\\n  return dict;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst buildIndex = (posts) => {\\\\\\\\n  let index = {};\\\\\\\\n\\\\\\\\n  posts.forEach((post) => {\\\\\\\\n    const title = post.snapshot.name;\\\\\\\\n    const labels = post.snapshot.labels.join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n    const text = post.snapshot.description;\\\\\\\\n    const postType = post.snapshot.post_type;\\\\\\\\n    const authorId = post.author_id;\\\\\\\\n    const postText = `${authorId} ${postType} ${title} ${labels} ${text}`;\\\\\\\\n    index = fillDictionaryWith(index, postText, post.id);\\\\\\\\n  });\\\\\\\\n  return index;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst stemAndFilterQuery = (query) => {\\\\\\\\n  return Object.keys(fillDictionaryWith({}, query));\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst sortSearchResult = (searchResult) => {\\\\\\\\n  // create a map to count the frequency of each element\\\\\\\\n  const freq = new Map();\\\\\\\\n  for (const num of searchResult) {\\\\\\\\n    freq.set(num, (freq.get(num) || 0) + 1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // define a custom comparison function to sort the array\\\\\\\\n  function compare(a, b) {\\\\\\\\n    // compare the frequency of the two elements\\\\\\\\n    const freqDiff = freq.get(b) - freq.get(a);\\\\\\\\n    if (freqDiff !== 0) {\\\\\\\\n      return freqDiff; // if they have different frequency, sort by frequency\\\\\\\\n    } else {\\\\\\\\n      return 0; // if they have the same frequency, leave as it is. Will be sorted by search term, by date\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort the array using the custom comparison function\\\\\\\\n  searchResult.sort(compare);\\\\\\\\n  return searchResult.filter(\\\\\\\\n    (elem, index) => searchResult.indexOf(elem) === index\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst search = (processedQueryArray, index) => {\\\\\\\\n  return sortSearchResult(\\\\\\\\n    processedQueryArray.flatMap((queryWord) => {\\\\\\\\n      const termSearchRes = index[queryWord].reverse();\\\\\\\\n      const termSortedSearchRes = sortSearchResult(termSearchRes);\\\\\\\\n      return termSortedSearchRes;\\\\\\\\n    })\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\n//////////////////////////////////////////////////////////////////////\\\\\\\\n///UI&UX//////////////////////////////////////////////////////////////\\\\\\\\n//Run search and spelling computation every time the search bar modified\\\\\\\\n//but no more frequent than 1 time per 1.5 seconds\\\\\\\\nconst amountOfResultsToShowFirst = 5;\\\\\\\\n\\\\\\\\nconst buildPostsIndex = () => {\\\\\\\\n  return Near.asyncView(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_posts\\\\\\\\\\\\\\\").then((posts) => {\\\\\\\\n    const index = buildIndex(posts);\\\\\\\\n    const data = posts.reduce((acc, post) => {\\\\\\\\n      acc[post.id] = post;\\\\\\\\n      return acc;\\\\\\\\n    }, {});\\\\\\\\n    return { index, data };\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getProcessedPostsCached = () => {\\\\\\\\n  return useCache(() => buildPostsIndex(), \\\\\\\\\\\\\\\"processedPostsCached\\\\\\\\\\\\\\\");\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (!state.interval) {\\\\\\\\n  let termStorage = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  Storage.privateSet(\\\\\\\\\\\\\\\"term\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n  setInterval(() => {\\\\\\\\n    const currentInput = Storage.privateGet(\\\\\\\\\\\\\\\"term\\\\\\\\\\\\\\\");\\\\\\\\n    if (currentInput !== termStorage) {\\\\\\\\n      termStorage = currentInput;\\\\\\\\n      computeResults(termStorage);\\\\\\\\n    }\\\\\\\\n  }, 1500);\\\\\\\\n  State.update({\\\\\\\\n    interval: true,\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst computeResults = (term) => {\\\\\\\\n  const start = new Date().getTime();\\\\\\\\n  const processedPostsCached = useCache(\\\\\\\\n    () =>\\\\\\\\n      buildPostsIndex().then((processedPosts) => {\\\\\\\\n        // Run query first time posts retrieved\\\\\\\\n        const query = term;\\\\\\\\n        const processedQuery = spellcheckQueryProcessing(\\\\\\\\n          query,\\\\\\\\n          processedPosts.index\\\\\\\\n        );\\\\\\\\n        const searchResult = search(processedQuery, processedPosts.index);\\\\\\\\n        console.log(processedQuery);\\\\\\\\n        console.log(searchResult);\\\\\\\\n        State.update({\\\\\\\\n          searchResult,\\\\\\\\n          shownSearchResults: searchResult.slice(0, amountOfResultsToShowFirst),\\\\\\\\n          processedQuery,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n        return processedPosts;\\\\\\\\n      }),\\\\\\\\n    \\\\\\\\\\\\\\\"processedPostsCached\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n  if (processedPostsCached) {\\\\\\\\n    // Run query every other time after data retrieved and cached\\\\\\\\n    const query = term;\\\\\\\\n    const processedQuery = spellcheckQueryProcessing(\\\\\\\\n      query,\\\\\\\\n      processedPostsCached.index\\\\\\\\n    );\\\\\\\\n    const searchResult = search(processedQuery, processedPostsCached.index);\\\\\\\\n    console.log(processedQuery);\\\\\\\\n    console.log(searchResult);\\\\\\\\n    State.update({\\\\\\\\n      searchResult,\\\\\\\\n      shownSearchResults: searchResult.slice(0, 10),\\\\\\\\n      processedQuery,\\\\\\\\n      loading: false,\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n  const end = new Date().getTime();\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"search time: \\\\\\\\\\\\\\\", end - start);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst updateInput = (term) => {\\\\\\\\n  Storage.privateSet(\\\\\\\\\\\\\\\"term\\\\\\\\\\\\\\\", term);\\\\\\\\n  State.update({\\\\\\\\n    term,\\\\\\\\n    loading: true,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getSearchResultsKeywordsFor = (postId) => {\\\\\\\\n  const index = getProcessedPostsCached().index;\\\\\\\\n  return state.processedQuery.filter((queryWord) => {\\\\\\\\n    return index[queryWord].includes(postId);\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst showMoreSearchResults = () => {\\\\\\\\n  const shownSearchResults = state.shownSearchResults || [];\\\\\\\\n  const newShownSearchResults = state.searchResult.slice(\\\\\\\\n    0,\\\\\\\\n    shownSearchResults.length + amountOfResultsToShowFirst\\\\\\\\n  );\\\\\\\\n  State.update({ shownSearchResults: newShownSearchResults });\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-row gap-4\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-row position-relative w-25\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"position-absolute d-flex ps-3 flex-column h-100 justify-center\\\\\\\\\\\\\\\">\\\\\\\\n          {state.loading ? (\\\\\\\\n            <span\\\\\\\\n              className=\\\\\\\\\\\\\\\"spinner-grow spinner-grow-sm m-auto\\\\\\\\\\\\\\\"\\\\\\\\n              role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n              aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n            />\\\\\\\\n          ) : (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-search m-auto\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n        <input\\\\\\\\n          type=\\\\\\\\\\\\\\\"search\\\\\\\\\\\\\\\"\\\\\\\\n          className=\\\\\\\\\\\\\\\"ps-5 form-control border border-0 bg-light\\\\\\\\\\\\\\\"\\\\\\\\n          value={state.term ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n          onChange={(e) => updateInput(e.target.value)}\\\\\\\\n          placeholder={props.placeholder ?? `Search Posts`}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n        <button\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn btn-light dropdown-toggle\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n          aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          Sort\\\\\\\\n        </button>\\\\\\\\n        <ul class=\\\\\\\\\\\\\\\"dropdown-menu px-2 shadow\\\\\\\\\\\\\\\">\\\\\\\\n          <li>\\\\\\\\n            <a\\\\\\\\n              style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              Latest\\\\\\\\n            </a>\\\\\\\\n          </li>\\\\\\\\n          <li>\\\\\\\\n            <a\\\\\\\\n              style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              Hottest\\\\\\\\n            </a>\\\\\\\\n          </li>\\\\\\\\n          <li>\\\\\\\\n            <a\\\\\\\\n              style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              All replies\\\\\\\\n            </a>\\\\\\\\n          </li>\\\\\\\\n        </ul>\\\\\\\\n      </div>\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.post-search.by-author\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            authorQuery: props.authorQuery,\\\\\\\\n            onAuthorSearch: props.onAuthorSearch,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n      <div>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.post-search.by-tag\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            tagQuery: props.tagQuery,\\\\\\\\n            onTagSearch: props.onTagSearch,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-row-reverse flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n        {props.children}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    {state.processedQuery &&\\\\\\\\n      state.processedQuery.length > 0 &&\\\\\\\\n      state.term.toLowerCase().trim() !== state.processedQuery.join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\") && (\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"mb-2\\\\\\\\\\\\\\\" style={{ \\\\\\\\\\\\\\\"font-family\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"monospace\\\\\\\\\\\\\\\" }}>\\\\\\\\n          Looking for\\\\\\\\n          <strong>{state.processedQuery.join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}</strong>:\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    {state.term && state.term.length > 1 && state.searchResult ? (\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.List\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          searchResult: {\\\\\\\\n            postIds: state.searchResult,\\\\\\\\n            keywords: Object.fromEntries(\\\\\\\\n              state.searchResult.map((postId) => {\\\\\\\\n                return [postId, getSearchResultsKeywordsFor(postId)];\\\\\\\\n              })\\\\\\\\n            ),\\\\\\\\n          },\\\\\\\\n          recency: props.recency,\\\\\\\\n          tag: props.tag,\\\\\\\\n          author: props.author,\\\\\\\\n        }}\\\\\\\\n        key={key}\\\\\\\\n      />\\\\\\\\n    ) : (\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.List\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          recency: props.recency,\\\\\\\\n          tag: props.tag,\\\\\\\\n          author: props.author,\\\\\\\\n          transactionHashes: props.transactionHashes,\\\\\\\\n        }}\\\\\\\\n        key={key}\\\\\\\\n      />\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.atom.Tag\": {\"\": \"const black = props.black;\\\\\\\\n\\\\\\\\nconst Span = styled.span`\\\\\\\\n  color: ${black ? \\\\\\\\\\\\\\\"#818181\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"#00ec97\\\\\\\\\\\\\\\"};\\\\\\\\n  font-size: 16px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 20px; /* 125% */\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Tag = ({ tag }) => <Span>{tag}</Span>;\\\\\\\\n\\\\\\\\nreturn Tag(props);\\\\\\\\n\"}, \"devhub.entity.post.History\": {\"\": \"/*\\\\\\\\n---props---\\\\\\\\nprops.post: {};\\\\\\\\nprops.id: number;\\\\\\\\nprops.newTab: boolean;\\\\\\\\nprops.timestamp: number;\\\\\\\\nprops.referral: any;\\\\\\\\n*/\\\\\\\\nconst { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\") || (() => {});\\\\\\\\n\\\\\\\\nconst postId = props.post.id ?? (props.id ? parseInt(props.id) : 0);\\\\\\\\nconst post =\\\\\\\\n  props.post ??\\\\\\\\n  Near.view(nearDevGovGigsContractAccountId, \\\\\\\\\\\\\\\"get_post\\\\\\\\\\\\\\\", {\\\\\\\\n    post_id: postId,\\\\\\\\n  });\\\\\\\\nif (!post || !post.snapshot_history) {\\\\\\\\n  return <div class=\\\\\\\\\\\\\\\"bi bi-clock-history px-2\\\\\\\\\\\\\\\"></div>;\\\\\\\\n}\\\\\\\\nconst referral = props.referral;\\\\\\\\n\\\\\\\\nfunction readableDate(timestamp) {\\\\\\\\n  var a = new Date(timestamp);\\\\\\\\n  return (\\\\\\\\n    a.toDateString() +\\\\\\\\n    \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" +\\\\\\\\n    a.toLocaleTimeString([], { hour: \\\\\\\\\\\\\\\"2-digit\\\\\\\\\\\\\\\", minute: \\\\\\\\\\\\\\\"2-digit\\\\\\\\\\\\\\\" })\\\\\\\\n  ).substring(4);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst currentTimestamp = props.timestamp ?? post.snapshot.timestamp;\\\\\\\\nconst snapshot = post.snapshot;\\\\\\\\nconst snapshotHistory = post.snapshot_history\\\\\\\\n  ? Array.from(post.snapshot_history)\\\\\\\\n  : [];\\\\\\\\n\\\\\\\\nsnapshotHistory.push(snapshot);\\\\\\\\nsnapshotHistory.reverse();\\\\\\\\n\\\\\\\\nconst history = (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"btn-group\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"group\\\\\\\\\\\\\\\">\\\\\\\\n    <a\\\\\\\\n      class=\\\\\\\\\\\\\\\"card-link\\\\\\\\\\\\\\\"\\\\\\\\n      role=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n      title=\\\\\\\\\\\\\\\"Post History\\\\\\\\\\\\\\\"\\\\\\\\n      data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n      aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n      type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"bi bi-clock-history px-2\\\\\\\\\\\\\\\"></div>\\\\\\\\n    </a>\\\\\\\\n    <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\">\\\\\\\\n      <a\\\\\\\\n        class=\\\\\\\\\\\\\\\"d-flex text-muted\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ fontSize: \\\\\\\\\\\\\\\"12px\\\\\\\\\\\\\\\", textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\", cursor: \\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\" }}\\\\\\\\n      >\\\\\\\\n        <a\\\\\\\\n          style={{\\\\\\\\n            textAlign: \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\",\\\\\\\\n            minWidth: \\\\\\\\\\\\\\\"290px\\\\\\\\\\\\\\\",\\\\\\\\n            maxWidth: \\\\\\\\\\\\\\\"290px\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        >\\\\\\\\n          Edit History\\\\\\\\n        </a>\\\\\\\\n        <a style={{ marginRight: \\\\\\\\\\\\\\\"8px\\\\\\\\\\\\\\\" }}>Compare</a>\\\\\\\\n      </a>\\\\\\\\n      {snapshotHistory.map((item) => {\\\\\\\\n        if (item === undefined) return;\\\\\\\\n        return (\\\\\\\\n          <li style={{ display: \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <div\\\\\\\\n              style={{\\\\\\\\n                minWidth: \\\\\\\\\\\\\\\"290px\\\\\\\\\\\\\\\",\\\\\\\\n                maxWidth: \\\\\\\\\\\\\\\"290px\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <a\\\\\\\\n                class=\\\\\\\\\\\\\\\"dropdown-item\\\\\\\\\\\\\\\"\\\\\\\\n                href={href({\\\\\\\\n                  widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Post\\\\\\\\\\\\\\\",\\\\\\\\n                  params: {\\\\\\\\n                    id: postId,\\\\\\\\n                    timestamp: item.timestamp,\\\\\\\\n                    compareTimestamp: null,\\\\\\\\n                    referral,\\\\\\\\n                  },\\\\\\\\n                })}\\\\\\\\n                target={props.newTab ? \\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\" : undefined}\\\\\\\\n              >\\\\\\\\n                {readableDate(item.timestamp / 1000000)}\\\\\\\\n\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"mob.near/widget/ProfileImage\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: item.editor_id,\\\\\\\\n                    style: {\\\\\\\\n                      width: \\\\\\\\\\\\\\\"1.25em\\\\\\\\\\\\\\\",\\\\\\\\n                      height: \\\\\\\\\\\\\\\"1.25em\\\\\\\\\\\\\\\",\\\\\\\\n                    },\\\\\\\\n                    imageStyle: {\\\\\\\\n                      transform: \\\\\\\\\\\\\\\"translateY(-12.5%)\\\\\\\\\\\\\\\",\\\\\\\\n                    },\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                {post.author_id.substring(0, 8)}\\\\\\\\n              </a>\\\\\\\\n            </div>\\\\\\\\n            <a\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item\\\\\\\\\\\\\\\"\\\\\\\\n              href={href({\\\\\\\\n                widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.Post\\\\\\\\\\\\\\\",\\\\\\\\n                params: {\\\\\\\\n                  id: postId,\\\\\\\\n                  timestamp: currentTimestamp,\\\\\\\\n                  compareTimestamp: item.timestamp,\\\\\\\\n                  referral,\\\\\\\\n                },\\\\\\\\n              })}\\\\\\\\n            >\\\\\\\\n              <i class=\\\\\\\\\\\\\\\"bi bi-file-earmark-diff\\\\\\\\\\\\\\\" />\\\\\\\\n            </a>\\\\\\\\n          </li>\\\\\\\\n        );\\\\\\\\n      })}\\\\\\\\n    </ul>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nreturn history;\\\\\\\\n\"}, \"devhub.entity.team.LabelRow\": {\"\": \"/**\\\\\\\\n * In the context of the contract, a group is essentially a member identified\\\\\\\\n * by the prefix \\\\\\\\\\\\'team:\\\\\\\\\\\\'; therefore, on the front end, we also employ \\\\\\\\\\\\'team,\\\\\\\\\\\\'\\\\\\\\n * with the user interface displaying \\\\\\\\\\\\'group\\\\\\\\\\\\' for clarity.\\\\\\\\n */\\\\\\\\n\\\\\\\\nconst { getAccessControlInfo, getRootMembers, removeMember } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!getAccessControlInfo || !getRootMembers || !removeMember) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst accessControlInfo = getAccessControlInfo();\\\\\\\\nconst rootMembers = getRootMembers();\\\\\\\\nconst allTeamNames = Object.keys(rootMembers || {});\\\\\\\\n\\\\\\\\nif (!accessControlInfo || !rootMembers) {\\\\\\\\n  return <p>Loading access control info...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { teamName } = props;\\\\\\\\nconst teamModerators = teamName == \\\\\\\\\\\\\\\"team:moderators\\\\\\\\\\\\\\\";\\\\\\\\nconst label = Object.keys(rootMembers[teamName].permissions)[0] || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst metadata = accessControlInfo.members_list[teamName];\\\\\\\\nconst editPost = rootMembers[teamName].permissions[label].includes(\\\\\\\\\\\\\\\"edit-post\\\\\\\\\\\\\\\");\\\\\\\\nconst useLabels =\\\\\\\\n  rootMembers[teamName].permissions[label].includes(\\\\\\\\\\\\\\\"use-labels\\\\\\\\\\\\\\\");\\\\\\\\nconst members = rootMembers[teamName].children || [];\\\\\\\\n\\\\\\\\nconst configuratorData = {\\\\\\\\n  teamName: teamName,\\\\\\\\n  label: label,\\\\\\\\n  members,\\\\\\\\n  editPost,\\\\\\\\n  useLabels,\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [editMode, setEditMode] = useState(false);\\\\\\\\nconst [alertMessage, setAlertMessage] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nfunction arrayEq(arr1, arr2) {\\\\\\\\n  if (arr1.length !== arr2.length) {\\\\\\\\n    return false;\\\\\\\\n  }\\\\\\\\n  const sortedArr1 = arr1.slice().sort();\\\\\\\\n  const sortedArr2 = arr2.slice().sort();\\\\\\\\n  for (let i = 0; i < sortedArr1.length; i++) {\\\\\\\\n    if (sortedArr1[i] !== sortedArr2[i]) {\\\\\\\\n      return false;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return true;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction editTeam({\\\\\\\\n  teamName: tmnm,\\\\\\\\n  label: lbl,\\\\\\\\n  editPost: edtpst,\\\\\\\\n  useLabels: uslbls,\\\\\\\\n  members: mmbrs,\\\\\\\\n}) {\\\\\\\\n  let txn = [];\\\\\\\\n  let numberOfChanges = 0;\\\\\\\\n\\\\\\\\n  if (backwardsCompatibleTeam(teamName) !== tmnm) {\\\\\\\\n    numberOfChanges++;\\\\\\\\n    if (allTeamNames.includes(`team:${tmnm}`)) {\\\\\\\\n      return setAlertMessage(\\\\\\\\\\\\\\\"This team name already exists\\\\\\\\\\\\\\\");\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  console.log(label, lbl);\\\\\\\\n  if (label !== lbl) {\\\\\\\\n    const allLabels = Object.keys(accessControlInfo.rules_list);\\\\\\\\n    if (allLabels.includes(lbl)) {\\\\\\\\n      return setAlertMessage(\\\\\\\\n        \\\\\\\\\\\\\\\"This label is already restricted by another team\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (editPost !== edtpst || useLabels !== uslbls) {\\\\\\\\n    numberOfChanges++;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (!arrayEq(members, mmbrs)) {\\\\\\\\n    numberOfChanges++;\\\\\\\\n    let membersAndTeams = Object.keys(accessControlInfo.members_list);\\\\\\\\n\\\\\\\\n    mmbrs.forEach((member) => {\\\\\\\\n      if (!membersAndTeams.includes(member)) {\\\\\\\\n        // Contract panic member does not exist in the members_list yet.\\\\\\\\n        txn.push({\\\\\\\\n          contractName: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n          methodName: \\\\\\\\\\\\\\\"add_member\\\\\\\\\\\\\\\",\\\\\\\\n          args: {\\\\\\\\n            member: member,\\\\\\\\n            metadata: {\\\\\\\\n              member_metadata_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n              description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n              permissions: {},\\\\\\\\n              children: [],\\\\\\\\n              parents: [],\\\\\\\\n            },\\\\\\\\n          },\\\\\\\\n          gas: Big(10).pow(14),\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (numberOfChanges < 1) {\\\\\\\\n    return setAlertMessage(\\\\\\\\\\\\\\\"No changes found.\\\\\\\\\\\\\\\");\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    ...txn,\\\\\\\\n    {\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_member\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        member: `team:${tmnm}`,\\\\\\\\n        metadata: {\\\\\\\\n          member_metadata_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n          description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n          permissions: {\\\\\\\\n            [lbl]: [\\\\\\\\n              ...(edtpst ? [\\\\\\\\\\\\\\\"edit-post\\\\\\\\\\\\\\\"] : []),\\\\\\\\n              ...(uslbls ? [\\\\\\\\\\\\\\\"use-labels\\\\\\\\\\\\\\\"] : []),\\\\\\\\n            ],\\\\\\\\n          },\\\\\\\\n          children: mmbrs,\\\\\\\\n          parents: [],\\\\\\\\n        },\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction deleteLabel() {\\\\\\\\n  // contract side this is called a team / member\\\\\\\\n  removeMember(teamName);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst backwardsCompatibleLabel = (oldLabel) => {\\\\\\\\n  if (typeof oldLabel === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\")\\\\\\\\n    return oldLabel.startsWith(\\\\\\\\\\\\\\\"starts-with:\\\\\\\\\\\\\\\") ? oldLabel.slice(12) : oldLabel;\\\\\\\\n  else return \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n};\\\\\\\\n// Teams are saved in contract by their prefix \\\\\\\\\\\\'team:\\\\\\\\\\\\'\\\\\\\\n// This function makes the teamName display friendly.\\\\\\\\nconst backwardsCompatibleTeam = (oldTeam) =>\\\\\\\\n  oldTeam.startsWith(\\\\\\\\\\\\\\\"team:\\\\\\\\\\\\\\\") ? oldTeam.slice(5) : oldTeam;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <tr>\\\\\\\\n      <th scope=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\" class=\\\\\\\\\\\\\\\" justify-content-center align-items-center p-3\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Tag\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            tag: backwardsCompatibleLabel(label),\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </th>\\\\\\\\n      <td class=\\\\\\\\\\\\\\\" justify-content-center align-items-center p-3\\\\\\\\\\\\\\\">\\\\\\\\n        {(label || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").startsWith(\\\\\\\\\\\\\\\"starts-with:\\\\\\\\\\\\\\\")\\\\\\\\n          ? \\\\\\\\\\\\\\\"Multiple labels with common prefix\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"Single label\\\\\\\\\\\\\\\"}\\\\\\\\n      </td>\\\\\\\\n      <td class=\\\\\\\\\\\\\\\" justify-content-center align-items-center p-3\\\\\\\\\\\\\\\">\\\\\\\\n        {metadata.children && (\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"vstack\\\\\\\\\\\\\\\">\\\\\\\\n            {metadata.children.length ? (\\\\\\\\n              metadata.children.map((child) => <p>{child}</p>)\\\\\\\\n            ) : (\\\\\\\\n              <div>No members in this group</div>\\\\\\\\n            )}\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </td>\\\\\\\\n      <td class=\\\\\\\\\\\\\\\" justify-content-center align-items-center p-3\\\\\\\\\\\\\\\">\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"form-check\\\\\\\\\\\\\\\">\\\\\\\\n          <input\\\\\\\\n            class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n            type=\\\\\\\\\\\\\\\"checkbox\\\\\\\\\\\\\\\"\\\\\\\\n            value={useLabels}\\\\\\\\n            id={`useLabelsCheckbox${identifier}`}\\\\\\\\n            checked={useLabels}\\\\\\\\n            onChange={() => setUseLabels(!useLabels)}\\\\\\\\n            disabled={disabled}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </td>\\\\\\\\n      <td class=\\\\\\\\\\\\\\\" justify-content-center align-items-center p-3\\\\\\\\\\\\\\\">\\\\\\\\n        <div class=\\\\\\\\\\\\\\\"form-check\\\\\\\\\\\\\\\">\\\\\\\\n          <input\\\\\\\\n            class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n            type=\\\\\\\\\\\\\\\"checkbox\\\\\\\\\\\\\\\"\\\\\\\\n            value={editPost}\\\\\\\\n            id={`editPostCheckbox${identifier}`}\\\\\\\\n            checked={editPost}\\\\\\\\n            onChange={() => setEditPost(!editPost)}\\\\\\\\n            disabled={disabled}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </td>\\\\\\\\n      <td class=\\\\\\\\\\\\\\\" justify-content-center align-items-center p-3\\\\\\\\\\\\\\\">\\\\\\\\n        {editMode ? (\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-outline-danger\\\\\\\\\\\\\\\" },\\\\\\\\n              icon: {\\\\\\\\n                type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                variant: \\\\\\\\\\\\\\\"bi-trash\\\\\\\\\\\\\\\",\\\\\\\\n              },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Delete\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: deleteLabel,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        ) : (\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-outline-light text-dark\\\\\\\\\\\\\\\" },\\\\\\\\n              icon: {\\\\\\\\n                type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                variant: \\\\\\\\\\\\\\\"bi-gear-wide-connected\\\\\\\\\\\\\\\",\\\\\\\\n              },\\\\\\\\n              label: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: () => setEditMode(true),\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </td>\\\\\\\\n    </tr>\\\\\\\\n    {editMode && (\\\\\\\\n      <tr>\\\\\\\\n        <th scope=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\" colspan=\\\\\\\\\\\\\\\"6\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.team.Configurator\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              data: configuratorData,\\\\\\\\n              onCancel: () => setEditMode(false),\\\\\\\\n              onSubmit: (params) => editTeam(params),\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Alert\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              onClose: () => setAlertMessage(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"),\\\\\\\\n              message: alertMessage,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </th>\\\\\\\\n      </tr>\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.page.community.index\": {\"\": \"const { normalize } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.stringUtils\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nnormalize || (normalize = () => {});\\\\\\\\n\\\\\\\\nconst Button = styled.button`\\\\\\\\n  height: 40px;\\\\\\\\n  font-size: 14px;\\\\\\\\n  border-color: #e3e3e0;\\\\\\\\n  background-color: #ffffff;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Banner = styled.div`\\\\\\\\n  max-width: 100%;\\\\\\\\n  min-height: 240px;\\\\\\\\n  height: 240px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CenteredMessage = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n  height: ${(p) => p.height ?? \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\"};\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NavUnderline = styled.ul`\\\\\\\\n  cursor: pointer;\\\\\\\\n  a {\\\\\\\\n    color: #151515;\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.active {\\\\\\\\n    font-weight: bold;\\\\\\\\n    border-bottom: 4px solid #00ec97;\\\\\\\\n  }\\\\\\\\n  border-bottom: 1px solid #cccccc;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst { tab, permissions, community, view } = props;\\\\\\\\n\\\\\\\\nconst { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!href) {\\\\\\\\n  return <></>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (!tab) {\\\\\\\\n  tab = \\\\\\\\\\\\\\\"Announcements\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\ntab = normalize(tab);\\\\\\\\n\\\\\\\\nconst [isLinkCopied, setLinkCopied] = useState(false);\\\\\\\\n\\\\\\\\nconst tabs = [\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Announcements\\\\\\\\\\\\\\\",\\\\\\\\n    view: \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Announcements\\\\\\\\\\\\\\\",\\\\\\\\n    params: {\\\\\\\\n      handle: community.handle,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Activity\\\\\\\\\\\\\\\",\\\\\\\\n    view: \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Activity\\\\\\\\\\\\\\\",\\\\\\\\n    params: {\\\\\\\\n      handle: community.handle,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    title: \\\\\\\\\\\\\\\"Teams\\\\\\\\\\\\\\\",\\\\\\\\n    view: \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Teams\\\\\\\\\\\\\\\",\\\\\\\\n    params: {\\\\\\\\n      handle: community.handle,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\n(community.addons || []).map((addon) => {\\\\\\\\n  addon.enabled &&\\\\\\\\n    tabs.push({\\\\\\\\n      title: addon.display_name,\\\\\\\\n      view: \\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.addon\\\\\\\\\\\\\\\",\\\\\\\\n      params: { addon },\\\\\\\\n    });\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst onShareClick = () =>\\\\\\\\n  clipboard\\\\\\\\n    .writeText(\\\\\\\\n      href({\\\\\\\\n        gateway: \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\",\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: { page: \\\\\\\\\\\\\\\"community\\\\\\\\\\\\\\\", handle: community.handle },\\\\\\\\n      })\\\\\\\\n    )\\\\\\\\n    .then(setLinkCopied(true));\\\\\\\\n\\\\\\\\nlet currentTab = tabs.find((it) => normalize(it.title) === tab);\\\\\\\\n\\\\\\\\nconst CommunityName = styled.span`\\\\\\\\n  color: #151515;\\\\\\\\n  font-size: 2.25rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 100%; /* 48px */\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommunityDetails = styled.span`\\\\\\\\n  color: #818181;\\\\\\\\n  font-size: 1rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n`;\\\\\\\\n\\\\\\\\nfunction trimHttps(url) {\\\\\\\\n  if (url.startsWith(\\\\\\\\\\\\\\\"https://\\\\\\\\\\\\\\\")) {\\\\\\\\n    return url.substring(8);\\\\\\\\n  }\\\\\\\\n  return url;\\\\\\\\n}\\\\\\\\n\\\\\\\\n// some communties have url as handle (eg: devhub platform) while others has correct handle\\\\\\\\nfunction checkTelegramHandle(tg) {\\\\\\\\n  const pattern = /https:\\\\\\\\\\\\\\\\/\\\\\\\\\\\\\\\\/t.me\\\\\\\\\\\\\\\\/(.*)/;\\\\\\\\n  const includesHttp = tg.match(pattern);\\\\\\\\n  const handle = includesHttp ? includesHttp[1] : tg;\\\\\\\\n  return { handle, url: \\\\\\\\\\\\\\\"https://t.me/\\\\\\\\\\\\\\\" + handle };\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst socialLinks = [\\\\\\\\n  ...((community.website_url?.length ?? 0) > 0\\\\\\\\n    ? [\\\\\\\\n        {\\\\\\\\n          href: `https://${trimHttps(community.website_url)}`,\\\\\\\\n          iconClass: \\\\\\\\\\\\\\\"bi bi-globe\\\\\\\\\\\\\\\",\\\\\\\\n          name: trimHttps(community.website_url),\\\\\\\\n        },\\\\\\\\n      ]\\\\\\\\n    : []),\\\\\\\\n\\\\\\\\n  ...((community.github_handle?.length ?? 0) > 0\\\\\\\\n    ? [\\\\\\\\n        {\\\\\\\\n          href: `https://github.com/${community.github_handle}`,\\\\\\\\n          iconClass: \\\\\\\\\\\\\\\"bi bi-github\\\\\\\\\\\\\\\",\\\\\\\\n          name: community.github_handle,\\\\\\\\n        },\\\\\\\\n      ]\\\\\\\\n    : []),\\\\\\\\n\\\\\\\\n  ...((community.twitter_handle?.length ?? 0) > 0\\\\\\\\n    ? [\\\\\\\\n        {\\\\\\\\n          href: `https://twitter.com/${community.twitter_handle}`,\\\\\\\\n          iconClass: \\\\\\\\\\\\\\\"bi bi-twitter\\\\\\\\\\\\\\\",\\\\\\\\n          name: community.twitter_handle,\\\\\\\\n        },\\\\\\\\n      ]\\\\\\\\n    : []),\\\\\\\\n\\\\\\\\n  ...(community.telegram_handle?.length > 0\\\\\\\\n    ? [\\\\\\\\n        {\\\\\\\\n          href: checkTelegramHandle(community.telegram_handle).url,\\\\\\\\n          iconClass: \\\\\\\\\\\\\\\"bi bi-telegram\\\\\\\\\\\\\\\",\\\\\\\\n          name: checkTelegramHandle(community.telegram_handle).handle,\\\\\\\\n        },\\\\\\\\n      ]\\\\\\\\n    : []),\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst NavlinksContainer = styled.div`\\\\\\\\n  //background: white;\\\\\\\\n  padding: 0 3rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    padding: 0 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div\\\\\\\\n    className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 w-100\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ background: \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\" }}\\\\\\\\n  >\\\\\\\\n    <Banner\\\\\\\\n      className=\\\\\\\\\\\\\\\"object-fit-cover\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        background: `center / cover no-repeat url(${community.banner_url})`,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"container d-flex flex-wrap justify-content-between align-items-center align-items-md-start gap-4\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column ms-3\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"position-relative\\\\\\\\\\\\\\\">\\\\\\\\n          <div style={{ width: 150, height: 45 }}>\\\\\\\\n            <img\\\\\\\\n              alt=\\\\\\\\\\\\\\\"Loading logo...\\\\\\\\\\\\\\\"\\\\\\\\n              className=\\\\\\\\\\\\\\\"rounded-circle position-absolute\\\\\\\\\\\\\\\"\\\\\\\\n              width=\\\\\\\\\\\\\\\"160\\\\\\\\\\\\\\\"\\\\\\\\n              height=\\\\\\\\\\\\\\\"160\\\\\\\\\\\\\\\"\\\\\\\\n              src={community.logo_url}\\\\\\\\n              style={{ top: -124 }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 ps-md-3 pt-md-3 pb-md-2\\\\\\\\\\\\\\\">\\\\\\\\n          <CommunityName className=\\\\\\\\\\\\\\\"text-nowrap\\\\\\\\\\\\\\\">\\\\\\\\n            {community.name}\\\\\\\\n          </CommunityName>\\\\\\\\n          <CommunityDetails>{community.description}</CommunityDetails>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"mt-3 ps-3 d-flex gap-3 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          {socialLinks.map((link, index) => (\\\\\\\\n            <a\\\\\\\\n              href={link.href}\\\\\\\\n              style={{\\\\\\\\n                marginLeft: index !== 0 ? \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\",\\\\\\\\n                color: \\\\\\\\\\\\\\\"#818181\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n              key={link.href}\\\\\\\\n              target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <i className={link.iconClass}></i>\\\\\\\\n            </a>\\\\\\\\n          ))}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex align-items-end gap-3 ms-auto mb-md-5 me-4\\\\\\\\\\\\\\\">\\\\\\\\n        {permissions.can_configure && (\\\\\\\\n          <Link\\\\\\\\n            to={`/devhub.near/widget/app?page=community.configuration&handle=${community.handle}`}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-outline-light text-dark shadow-none\\\\\\\\\\\\\\\" },\\\\\\\\n                notRounded: true,\\\\\\\\n                style: {\\\\\\\\n                  display: \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\",\\\\\\\\n                  padding: \\\\\\\\\\\\\\\"0.75rem 1rem\\\\\\\\\\\\\\\",\\\\\\\\n                  alignItems: \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\",\\\\\\\\n                  gap: \\\\\\\\\\\\\\\"16px\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n                  borderRadius: \\\\\\\\\\\\\\\"4px\\\\\\\\\\\\\\\",\\\\\\\\n                  border: \\\\\\\\\\\\\\\"1px solid #00EC97\\\\\\\\\\\\\\\",\\\\\\\\n                  background: \\\\\\\\\\\\\\\"rgba(129, 129, 129, 0.00)\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                icon: {\\\\\\\\n                  type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                  variant: \\\\\\\\\\\\\\\"bi-gear-wide-connected\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Configure community\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"btn-outline-light text-dark shadow-none\\\\\\\\\\\\\\\" },\\\\\\\\n            notRounded: true,\\\\\\\\n            style: {\\\\\\\\n              display: \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\",\\\\\\\\n              padding: \\\\\\\\\\\\\\\"0.75rem 1rem\\\\\\\\\\\\\\\",\\\\\\\\n              alignItems: \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\",\\\\\\\\n              gap: \\\\\\\\\\\\\\\"16px\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n              borderRadius: \\\\\\\\\\\\\\\"4px\\\\\\\\\\\\\\\",\\\\\\\\n              border: \\\\\\\\\\\\\\\"1px solid #00EC97\\\\\\\\\\\\\\\",\\\\\\\\n              background: \\\\\\\\\\\\\\\"rgba(129, 129, 129, 0.00)\\\\\\\\\\\\\\\",\\\\\\\\n            },\\\\\\\\n            label: \\\\\\\\\\\\\\\"Share \\\\\\\\u{2197}\\\\\\\\\\\\\\\",\\\\\\\\n            onClick: onShareClick,\\\\\\\\n            onMouseLeave: () => setLinkCopied(false),\\\\\\\\n            title: \\\\\\\\\\\\\\\"Copy link to clipboard\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <NavlinksContainer>\\\\\\\\n      <NavUnderline className=\\\\\\\\\\\\\\\"nav gap-4 my-4\\\\\\\\\\\\\\\">\\\\\\\\n        {tabs.map(\\\\\\\\n          ({ title }) =>\\\\\\\\n            title && (\\\\\\\\n              <li className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" key={title}>\\\\\\\\n                <Link\\\\\\\\n                  to={href({\\\\\\\\n                    widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                    params: {\\\\\\\\n                      page: \\\\\\\\\\\\\\\"community\\\\\\\\\\\\\\\",\\\\\\\\n                      handle: community.handle,\\\\\\\\n                      tab: normalize(title),\\\\\\\\n                    },\\\\\\\\n                  })}\\\\\\\\n                  aria-current={tab === normalize(title) && \\\\\\\\\\\\\\\"page\\\\\\\\\\\\\\\"}\\\\\\\\n                  className={[\\\\\\\\n                    \\\\\\\\\\\\\\\"d-inline-flex gap-2\\\\\\\\\\\\\\\",\\\\\\\\n                    tab === normalize(title) ? \\\\\\\\\\\\\\\"nav-link active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"nav-link\\\\\\\\\\\\\\\",\\\\\\\\n                  ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n                >\\\\\\\\n                  <span>{title}</span>\\\\\\\\n                </Link>\\\\\\\\n              </li>\\\\\\\\n            )\\\\\\\\n        )}\\\\\\\\n      </NavUnderline>\\\\\\\\n      {currentTab.title === \\\\\\\\\\\\\\\"Activity\\\\\\\\\\\\\\\" && (\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"my-4 d-flex align-items-center justify-content-between\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ gap: \\\\\\\\\\\\\\\"2.5rem\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n            <small class=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <span>Required tags:</span>\\\\\\\\n              <Link\\\\\\\\n                to={href({\\\\\\\\n                  widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                  params: { page: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\", tag: community.tag },\\\\\\\\n                })}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Tag\\\\\\\\\\\\\\\"}\\\\\\\\n                  props={{\\\\\\\\n                    tag: community.tag,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </Link>\\\\\\\\n            </small>\\\\\\\\n          </div>\\\\\\\\n          {context.accountId && (\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.PostControls\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                title: \\\\\\\\\\\\\\\"Post\\\\\\\\\\\\\\\",\\\\\\\\n                href: href({\\\\\\\\n                  widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                  params: {\\\\\\\\n                    page: \\\\\\\\\\\\\\\"create\\\\\\\\\\\\\\\",\\\\\\\\n                    labels: [community.tag],\\\\\\\\n                  },\\\\\\\\n                }),\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </NavlinksContainer>\\\\\\\\n    {currentTab && (\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex w-100 h-100\\\\\\\\\\\\\\\" key={currentTab.title}>\\\\\\\\n        <Widget\\\\\\\\n          src={currentTab.view}\\\\\\\\n          props={{\\\\\\\\n            ...currentTab.params,\\\\\\\\n            view, // default view for an addon, can come as a prop from a community or from a direct link to page.addon\\\\\\\\n\\\\\\\\n            // below is temporary prop drilling until kanban and github are migrated\\\\\\\\n            permissions,\\\\\\\\n            handle: community.handle,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"core.adapter.devhub-contract\": {\"\": \"function getRootMembers() {\\\\\\\\n  return Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_root_members\\\\\\\\\\\\\\\") ?? null;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction removeMember(member) {\\\\\\\\n  return Near.call(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"remove_member\\\\\\\\\\\\\\\", { member });\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction hasModerator({ account_id }) {\\\\\\\\n  return (\\\\\\\\n    Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"has_moderator\\\\\\\\\\\\\\\", { account_id }) ?? null\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction createCommunity({ inputs }) {\\\\\\\\n  return Near.call(\\\\\\\\n    \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"create_community\\\\\\\\\\\\\\\",\\\\\\\\n    { inputs },\\\\\\\\n    Big(10).pow(14), // gas\\\\\\\\n    Big(2) * Big(10).pow(24) // deposit (2N)\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getCommunity({ handle }) {\\\\\\\\n  return (\\\\\\\\n    Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_community\\\\\\\\\\\\\\\", { handle }) ?? null\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getFeaturedCommunities() {\\\\\\\\n  return Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_featured_communities\\\\\\\\\\\\\\\") ?? null;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction setFeaturedCommunities({ handles }) {\\\\\\\\n  return Near.call(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"set_featured_communities\\\\\\\\\\\\\\\", {\\\\\\\\n    handles,\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getAccountCommunityPermissions({ account_id, community_handle }) {\\\\\\\\n  return (\\\\\\\\n    Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_account_community_permissions\\\\\\\\\\\\\\\", {\\\\\\\\n      account_id,\\\\\\\\n      community_handle,\\\\\\\\n    }) ?? null\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction updateCommunity({ handle, community }) {\\\\\\\\n  return Near.call(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"update_community\\\\\\\\\\\\\\\", {\\\\\\\\n    handle,\\\\\\\\n    community,\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction deleteCommunity({ handle }) {\\\\\\\\n  return Near.call(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"delete_community\\\\\\\\\\\\\\\", { handle });\\\\\\\\n}\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Sets all addons, for configurating tabs\\\\\\\\n */\\\\\\\\nfunction setCommunityAddons({ handle, addons }) {\\\\\\\\n  return Near.call(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"set_community_addons\\\\\\\\\\\\\\\", {\\\\\\\\n    handle,\\\\\\\\n    addons,\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Sets specific addon, for configuring params\\\\\\\\n */\\\\\\\\nfunction setCommunityAddon({ handle, addon }) {\\\\\\\\n  return Near.call(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"set_community_addon\\\\\\\\\\\\\\\", {\\\\\\\\n    handle,\\\\\\\\n    community_addon: addon,\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Gets all available addons, these are controlled by devhub moderators\\\\\\\\n */\\\\\\\\nfunction getAllAddons() {\\\\\\\\n  return Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_all_addons\\\\\\\\\\\\\\\") ?? null;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getAccessControlInfo() {\\\\\\\\n  return Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_access_control_info\\\\\\\\\\\\\\\") ?? null;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getAllAuthors() {\\\\\\\\n  return Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_all_authors\\\\\\\\\\\\\\\") ?? null;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getAllCommunitiesMetadata() {\\\\\\\\n  return (\\\\\\\\n    Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_all_communities_metadata\\\\\\\\\\\\\\\") ?? null\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getAllLabels() {\\\\\\\\n  return Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_all_labels\\\\\\\\\\\\\\\") ?? null;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getPost({ post_id }) {\\\\\\\\n  return Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_post\\\\\\\\\\\\\\\", { post_id }) ?? null;\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getPostsByAuthor({ author }) {\\\\\\\\n  return (\\\\\\\\n    Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_posts_by_author\\\\\\\\\\\\\\\", { author }) ??\\\\\\\\n    null\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction getPostsByLabel({ label }) {\\\\\\\\n  return (\\\\\\\\n    Near.view(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_posts_by_label\\\\\\\\\\\\\\\", {\\\\\\\\n      label,\\\\\\\\n    }) ?? null\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction setCommunitySocialDB({ handle, data }) {\\\\\\\\n  return (\\\\\\\\n    Near.call(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"set_community_socialdb\\\\\\\\\\\\\\\", {\\\\\\\\n      handle,\\\\\\\\n      data,\\\\\\\\n    }) ?? null\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction useQuery(name, params) {\\\\\\\\n  const initialState = { data: null, error: null, isLoading: true };\\\\\\\\n\\\\\\\\n  const cacheState = useCache(\\\\\\\\n    () =>\\\\\\\\n      Near.asyncView(\\\\\\\\n        \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n        [\\\\\\\\\\\\\\\"get\\\\\\\\\\\\\\\", name].join(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\"),\\\\\\\\n        params ?? {}\\\\\\\\n      )\\\\\\\\n        .then((response) => ({\\\\\\\\n          ...initialState,\\\\\\\\n          data: response ?? null,\\\\\\\\n          isLoading: false,\\\\\\\\n        }))\\\\\\\\n        .catch((error) => ({\\\\\\\\n          ...initialState,\\\\\\\\n          error: props?.error ?? error,\\\\\\\\n          isLoading: false,\\\\\\\\n        })),\\\\\\\\n\\\\\\\\n    JSON.stringify({ name, params }),\\\\\\\\n    { subscribe: false } // NOTE: I\\\\\\\\\\\\'m turning off subscribe to stop the constant re-rendering\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  return cacheState === null ? initialState : cacheState;\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn {\\\\\\\\n  getRootMembers,\\\\\\\\n  removeMember,\\\\\\\\n  hasModerator,\\\\\\\\n  createCommunity,\\\\\\\\n  getCommunity,\\\\\\\\n  getFeaturedCommunities,\\\\\\\\n  setFeaturedCommunities,\\\\\\\\n  getAccountCommunityPermissions,\\\\\\\\n  updateCommunity,\\\\\\\\n  deleteCommunity,\\\\\\\\n  setCommunityAddons,\\\\\\\\n  setCommunityAddon,\\\\\\\\n  getAccessControlInfo,\\\\\\\\n  getAllAuthors,\\\\\\\\n  getAllCommunitiesMetadata,\\\\\\\\n  getAllAddons,\\\\\\\\n  getAllLabels,\\\\\\\\n  getPost,\\\\\\\\n  getPostsByAuthor,\\\\\\\\n  getPostsByLabel,\\\\\\\\n  setCommunitySocialDB,\\\\\\\\n  useQuery,\\\\\\\\n};\\\\\\\\n\"}, \"devhub.entity.community.Tile\": {\"\": \"/* INCLUDE: \\\\\\\\\\\\\\\"core/lib/gui/attractable\\\\\\\\\\\\\\\" */\\\\\\\\nconst AttractableDiv = styled.div`\\\\\\\\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\\\\\\\\n  transition: box-shadow 0.6s;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst AttractableLink = styled.a`\\\\\\\\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\\\\\\\\n  transition: box-shadow 0.6s;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst AttractableImage = styled.img`\\\\\\\\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\\\\\\\\n  transition: box-shadow 0.6s;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n/* END_INCLUDE: \\\\\\\\\\\\\\\"core/lib/gui/attractable\\\\\\\\\\\\\\\" */\\\\\\\\n\\\\\\\\nconst Tile = ({\\\\\\\\n  children,\\\\\\\\n  borderRadius,\\\\\\\\n  className,\\\\\\\\n  fullWidth,\\\\\\\\n  headerSlotRight,\\\\\\\\n  heading,\\\\\\\\n  headingAdornment,\\\\\\\\n  id,\\\\\\\\n  isHidden,\\\\\\\\n  noBorder,\\\\\\\\n  noFrame,\\\\\\\\n  minHeight,\\\\\\\\n  style,\\\\\\\\n}) => (\\\\\\\\n  <AttractableDiv\\\\\\\\n    className={[\\\\\\\\n      \\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\",\\\\\\\\n      className,\\\\\\\\n      fullWidth ? \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n      !noFrame ? \\\\\\\\\\\\\\\"p-3\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n      isHidden ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n    style={{\\\\\\\\n      maxWidth: fullWidth ? \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\" : null,\\\\\\\\n      minHeight: minHeight ?? 180,\\\\\\\\n      height: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\",\\\\\\\\n      overflowX: \\\\\\\\\\\\\\\"auto\\\\\\\\\\\\\\\",\\\\\\\\n      borderRadius: 16,\\\\\\\\n      border: \\\\\\\\\\\\\\\"1px solid rgba(129, 129, 129, 0.30)\\\\\\\\\\\\\\\",\\\\\\\\n      background: \\\\\\\\\\\\\\\"#FFFEFE\\\\\\\\\\\\\\\",\\\\\\\\n      marginBottom: \\\\\\\\\\\\\\\"1rem\\\\\\\\\\\\\\\",\\\\\\\\n      ...style,\\\\\\\\n    }}\\\\\\\\n    {...{ id }}\\\\\\\\n  >\\\\\\\\n    {\\\\\\\\n      <div\\\\\\\\n        className={[\\\\\\\\n          \\\\\\\\\\\\\\\"d-flex align-items-center justify-content-between gap-3\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n          noFrame || (!heading && !headingAdornment && !headerSlotRight)\\\\\\\\n            ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"\\\\\\\\n            : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n        ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n        style={{ minHeight: 30 }}\\\\\\\\n      >\\\\\\\\n        <h5 className=\\\\\\\\\\\\\\\"h5 d-inline-flex gap-2 m-0\\\\\\\\\\\\\\\">\\\\\\\\n          {headingAdornment}\\\\\\\\n          <span>{heading}</span>\\\\\\\\n        </h5>\\\\\\\\n\\\\\\\\n        {headerSlotRight}\\\\\\\\n      </div>\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    {children}\\\\\\\\n  </AttractableDiv>\\\\\\\\n);\\\\\\\\n\\\\\\\\nreturn Tile(props);\\\\\\\\n\"}, \"devhub.components.organism.Feed\": {\"\": \"const { Feed } = VM.require(\\\\\\\\\\\\\\\"devs.near/widget/Feed\\\\\\\\\\\\\\\");\\\\\\\\nFeed = Feed || (() => <></>);\\\\\\\\n\\\\\\\\nconst filteredAccountIds = props.filteredAccountIds ?? [];\\\\\\\\nconst [showCard, setShowCard] = useState(false);\\\\\\\\n\\\\\\\\nconst GRAPHQL_ENDPOINT =\\\\\\\\n  props.GRAPHQL_ENDPOINT ?? \\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nlet lastPostSocialApi = Social.index(\\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\", {\\\\\\\\n  limit: 1,\\\\\\\\n  order: \\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\\",\\\\\\\\n});\\\\\\\\n\\\\\\\\nif (lastPostSocialApi == null) {\\\\\\\\n  return \\\\\\\\\\\\\\\"Loading...\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  // If QueryAPI Feed is lagging behind Social API, fallback to old widget.\\\\\\\\n  shouldFallback: false,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(`${GRAPHQL_ENDPOINT}/v1/graphql`, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"dataplatform_near\\\\\\\\\\\\\\\" },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst lastPostQuery = `\\\\\\\\nquery IndexerQuery {\\\\\\\\n  dataplatform_near_social_feed_posts( limit: 1, order_by: { block_height: desc }) {\\\\\\\\n      block_height\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nfetchGraphQL(lastPostQuery, \\\\\\\\\\\\\\\"IndexerQuery\\\\\\\\\\\\\\\", {})\\\\\\\\n  .then((feedIndexerResponse) => {\\\\\\\\n    if (\\\\\\\\n      feedIndexerResponse &&\\\\\\\\n      feedIndexerResponse.body.data.dataplatform_near_social_feed_posts.length >\\\\\\\\n        0\\\\\\\\n    ) {\\\\\\\\n      const nearSocialBlockHeight = lastPostSocialApi[0].blockHeight;\\\\\\\\n      const feedIndexerBlockHeight =\\\\\\\\n        feedIndexerResponse.body.data.dataplatform_near_social_feed_posts[0]\\\\\\\\n          .block_height;\\\\\\\\n\\\\\\\\n      const lag = nearSocialBlockHeight - feedIndexerBlockHeight;\\\\\\\\n      let shouldFallback = lag > 2 || !feedIndexerBlockHeight;\\\\\\\\n      if (shouldFallback === true) {\\\\\\\\n        console.log(\\\\\\\\n          \\\\\\\\\\\\\\\"Falling back to Social index feed. Block difference is: \\\\\\\\\\\\\\\",\\\\\\\\n          nearSocialBlockHeight - feedIndexerBlockHeight\\\\\\\\n        );\\\\\\\\n        State.update({ shouldFallback });\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      console.log(\\\\\\\\n        \\\\\\\\\\\\\\\"Falling back to Social index feed. No QueryApi data received.\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      State.update({ shouldFallback: true });\\\\\\\\n    }\\\\\\\\n  })\\\\\\\\n  .catch((error) => {\\\\\\\\n    console.log(\\\\\\\\n      \\\\\\\\\\\\\\\"Error while fetching QueryApi feed (falling back to index feed): \\\\\\\\\\\\\\\",\\\\\\\\n      error\\\\\\\\n    );\\\\\\\\n    State.update({ shouldFallback: true });\\\\\\\\n  });\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  // display card only when a post exists\\\\\\\\n  <div className={showCard && \\\\\\\\\\\\\\\"card p-4\\\\\\\\\\\\\\\"}>\\\\\\\\n    {state.shouldFallback ? (\\\\\\\\n      <Feed\\\\\\\\n        index={[\\\\\\\\n          {\\\\\\\\n            action: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            key: \\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\n            options: {\\\\\\\\n              limit: 10,\\\\\\\\n              order: \\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\\",\\\\\\\\n              accountId: filteredAccountIds,\\\\\\\\n            },\\\\\\\\n            cacheOptions: {\\\\\\\\n              ignoreCache: true,\\\\\\\\n            },\\\\\\\\n          },\\\\\\\\n        ]}\\\\\\\\n        Item={(item) => {\\\\\\\\n          if (!showCard) {\\\\\\\\n            setShowCard(true);\\\\\\\\n          }\\\\\\\\n          return (\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"near/widget/v1.Posts.Post\\\\\\\\\\\\\\\"\\\\\\\\n              loading={<div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\" style={{ height: \\\\\\\\\\\\\\\"200px\\\\\\\\\\\\\\\" }} />}\\\\\\\\n              props={{\\\\\\\\n                accountId: item.accountId,\\\\\\\\n                blockHeight: item.blockHeight,\\\\\\\\n                filteredAccountIds: filteredAccountIds,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          );\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    ) : (\\\\\\\\n      <Widget\\\\\\\\n        src={`devhub.near/widget/devhub.components.organism.Feed.NearQueryApi`}\\\\\\\\n        props={{\\\\\\\\n          GRAPHQL_ENDPOINT,\\\\\\\\n          showFlagAccountFeature: true,\\\\\\\\n          filteredAccountIds: filteredAccountIds,\\\\\\\\n          setShowCard: setShowCard,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.community.Compose\": {\"\": \"if (!context.accountId) {\\\\\\\\n  return <></>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  image: {},\\\\\\\\n  text: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  showPreview: false,\\\\\\\\n  mentionInput: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", // text next to @ tag\\\\\\\\n  mentionsArray: [], // all the mentions in the description\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst profile = Social.getr(`${context.accountId}/profile`);\\\\\\\\nconst autocompleteEnabled = true;\\\\\\\\n\\\\\\\\nconst content = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n  image: state.image.cid ? { ipfs_cid: state.image.cid } : undefined,\\\\\\\\n  text: state.text,\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction extractMentions(text) {\\\\\\\\n  const mentionRegex =\\\\\\\\n    /@((?:(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+\\\\\\\\\\\\\\\\.)*(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+)/gi;\\\\\\\\n  mentionRegex.lastIndex = 0;\\\\\\\\n  const accountIds = new Set();\\\\\\\\n  for (const match of text.matchAll(mentionRegex)) {\\\\\\\\n    if (\\\\\\\\n      !/[\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index - 1)) &&\\\\\\\\n      !/[/\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index + match[0].length)) &&\\\\\\\\n      match[1].length >= 2 &&\\\\\\\\n      match[1].length <= 64\\\\\\\\n    ) {\\\\\\\\n      accountIds.add(match[1].toLowerCase());\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return [...accountIds];\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractTagNotifications(text, item) {\\\\\\\\n  return extractMentions(text || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n    .filter((accountId) => accountId !== context.accountId)\\\\\\\\n    .map((accountId) => ({\\\\\\\\n      key: accountId,\\\\\\\\n      value: {\\\\\\\\n        type: \\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\n        item,\\\\\\\\n      },\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction composeData() {\\\\\\\\n  const data = {\\\\\\\\n    post: {\\\\\\\\n      main: JSON.stringify(content),\\\\\\\\n    },\\\\\\\\n    index: {\\\\\\\\n      post: JSON.stringify({\\\\\\\\n        key: \\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\n        value: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const notifications = extractTagNotifications(state.text, {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${context.accountId}/post/main`,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  if (notifications.length) {\\\\\\\\n    data.index.notify = JSON.stringify(\\\\\\\\n      notifications.length > 1 ? notifications : notifications[0]\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return data;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst handleSubmit = () => {\\\\\\\\n  const data = composeData();\\\\\\\\n  if (props.onSubmit) {\\\\\\\\n    props.onSubmit(data);\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction resetState() {\\\\\\\\n  State.update({\\\\\\\\n    image: {},\\\\\\\\n    text: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction textareaInputHandler(value) {\\\\\\\\n  const words = value.split(/\\\\\\\\\\\\\\\\s+/);\\\\\\\\n  const allMentiones = words\\\\\\\\n    .filter((word) => word.startsWith(\\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\"))\\\\\\\\n    .map((mention) => mention.slice(1));\\\\\\\\n  const newMentiones = allMentiones.filter(\\\\\\\\n    (item) => !state.mentionsArray.includes(item)\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  State.update((lastKnownState) => ({\\\\\\\\n    ...lastKnownState,\\\\\\\\n    text: value,\\\\\\\\n    showAccountAutocomplete: newMentiones?.length > 0,\\\\\\\\n    mentionsArray: allMentiones,\\\\\\\\n    mentionInput: newMentiones?.[0] ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction autoCompleteAccountId(id) {\\\\\\\\n  // to make sure we update the @ at correct index\\\\\\\\n  let currentIndex = 0;\\\\\\\\n  const updatedDescription = state.text.replace(\\\\\\\\n    /(?:^|\\\\\\\\\\\\\\\\s)(@[^\\\\\\\\\\\\\\\\s]*)/g,\\\\\\\\n    (match) => {\\\\\\\\n      if (currentIndex === state.mentionsArray.indexOf(state.mentionInput)) {\\\\\\\\n        currentIndex++;\\\\\\\\n        return ` @${id}`;\\\\\\\\n      } else {\\\\\\\\n        currentIndex++;\\\\\\\\n        return match;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n  State.update((lastKnownState) => ({\\\\\\\\n    ...lastKnownState,\\\\\\\\n    text: updatedDescription,\\\\\\\\n    showAccountAutocomplete: false,\\\\\\\\n  }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  --padding: 24px;\\\\\\\\n  position: relative;\\\\\\\\n\\\\\\\\n  @media (max-width: 1024px) {\\\\\\\\n    --padding: 12px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n  position: absolute;\\\\\\\\n  top: var(--padding);\\\\\\\\n  left: var(--padding);\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media (max-width: 992px) {\\\\\\\\n    display: none;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Textarea = styled.div`\\\\\\\\n  display: grid;\\\\\\\\n  vertical-align: top;\\\\\\\\n  align-items: center;\\\\\\\\n  position: relative;\\\\\\\\n  align-items: stretch;\\\\\\\\n\\\\\\\\n  &::after,\\\\\\\\n  textarea {\\\\\\\\n    width: 100%;\\\\\\\\n    min-width: 1em;\\\\\\\\n    height: unset;\\\\\\\\n    min-height: 164px;\\\\\\\\n    font: inherit;\\\\\\\\n    padding: var(--padding) var(--padding) calc(40px + (var(--padding) * 2))\\\\\\\\n      calc(40px + (var(--padding) * 2));\\\\\\\\n    margin: 0;\\\\\\\\n    resize: none;\\\\\\\\n    background: none;\\\\\\\\n    appearance: none;\\\\\\\\n    border: none;\\\\\\\\n    grid-area: 1 / 1;\\\\\\\\n    overflow: hidden;\\\\\\\\n    outline: none;\\\\\\\\n\\\\\\\\n    @media (max-width: 1024px) {\\\\\\\\n      min-height: 124px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    @media (max-width: 992px) {\\\\\\\\n      padding-left: var(--padding);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &::after {\\\\\\\\n    content: attr(data-value) \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\";\\\\\\\\n    visibility: hidden;\\\\\\\\n    white-space: pre-wrap;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    transition: all 200ms;\\\\\\\\n\\\\\\\\n    &::placeholder {\\\\\\\\n      opacity: 1;\\\\\\\\n      color: #687076;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    &:empty + p {\\\\\\\\n      display: block;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    &:focus {\\\\\\\\n      box-shadow: inset 0 0 30px rgba(0, 0, 0, 0.05);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst TextareaDescription = styled.p`\\\\\\\\n  position: absolute;\\\\\\\\n  top: calc(var(--padding) + 24px);\\\\\\\\n  left: calc(42px + (var(--padding) * 2));\\\\\\\\n  right: var(--padding);\\\\\\\\n  font-size: 10px;\\\\\\\\n  line-height: 18px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  pointer-events: none;\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  a {\\\\\\\\n    color: #000;\\\\\\\\n    outline: none;\\\\\\\\n    font-weight: 600;\\\\\\\\n    pointer-events: auto;\\\\\\\\n\\\\\\\\n    &:hover,\\\\\\\\n    &:focus {\\\\\\\\n      color: #000;\\\\\\\\n      text-decoration: underline;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media (max-width: 992px) {\\\\\\\\n    left: var(--padding);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: inline-flex;\\\\\\\\n  gap: 12px;\\\\\\\\n  position: absolute;\\\\\\\\n  bottom: var(--padding);\\\\\\\\n  right: var(--padding);\\\\\\\\n\\\\\\\\n  .commit-post-button,\\\\\\\\n  .preview-post-button {\\\\\\\\n    background: #59e692;\\\\\\\\n    color: #09342e;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    height: 40px;\\\\\\\\n    padding: 0 35px;\\\\\\\\n    font-weight: 600;\\\\\\\\n    font-size: 14px;\\\\\\\\n    border: none;\\\\\\\\n    cursor: pointer;\\\\\\\\n    transition: background 200ms, opacity 200ms;\\\\\\\\n\\\\\\\\n    &:hover,\\\\\\\\n    &:focus {\\\\\\\\n      background: rgb(112 242 164);\\\\\\\\n      outline: none;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    &:disabled {\\\\\\\\n      opacity: 0.5;\\\\\\\\n      pointer-events: none;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .preview-post-button {\\\\\\\\n    color: #11181c;\\\\\\\\n    background: #f1f3f5;\\\\\\\\n    padding: 0;\\\\\\\\n    width: 40px;\\\\\\\\n\\\\\\\\n    &:hover,\\\\\\\\n    &:focus {\\\\\\\\n      background: #d7dbde;\\\\\\\\n      outline: none;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .upload-image-button {\\\\\\\\n    display: flex;\\\\\\\\n    align-items: center;\\\\\\\\n    justify-content: center;\\\\\\\\n    background: #f1f3f5;\\\\\\\\n    color: #11181c;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    height: 40px;\\\\\\\\n    min-width: 40px;\\\\\\\\n    font-size: 0;\\\\\\\\n    border: none;\\\\\\\\n    cursor: pointer;\\\\\\\\n    transition: background 200ms, opacity 200ms;\\\\\\\\n\\\\\\\\n    &::before {\\\\\\\\n      font-size: 16px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    &:hover,\\\\\\\\n    &:focus {\\\\\\\\n      background: #d7dbde;\\\\\\\\n      outline: none;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    &:disabled {\\\\\\\\n      opacity: 0.5;\\\\\\\\n      pointer-events: none;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    span {\\\\\\\\n      margin-left: 12px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .d-inline-block {\\\\\\\\n    display: flex !important;\\\\\\\\n    gap: 12px;\\\\\\\\n    margin: 0 !important;\\\\\\\\n\\\\\\\\n    .overflow-hidden {\\\\\\\\n      width: 40px !important;\\\\\\\\n      height: 40px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst PreviewWrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  padding: var(--padding);\\\\\\\\n  padding-bottom: calc(40px + (var(--padding) * 2));\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst AutoComplete = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  z-index: 5;\\\\\\\\n  bottom: 0;\\\\\\\\n  left: 0;\\\\\\\\n  right: 0;\\\\\\\\n\\\\\\\\n  > div > div {\\\\\\\\n    padding: calc(var(--padding) / 2);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Wrapper>\\\\\\\\n    {state.showPreview ? (\\\\\\\\n      <PreviewWrapper>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"near/widget/v1.Posts.Post\\\\\\\\\\\\\\\"\\\\\\\\n          loading={<div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\" style={{ height: \\\\\\\\\\\\\\\"200px\\\\\\\\\\\\\\\" }} />}\\\\\\\\n          props={{\\\\\\\\n            accountId: context.accountId,\\\\\\\\n            blockHeight: \\\\\\\\\\\\\\\"now\\\\\\\\\\\\\\\",\\\\\\\\n            content,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </PreviewWrapper>\\\\\\\\n    ) : (\\\\\\\\n      <>\\\\\\\\n        <Avatar>\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"mob.near/widget/Image\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              image: profile.image,\\\\\\\\n              alt: profile.name,\\\\\\\\n              fallbackUrl:\\\\\\\\n                \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreibiyqabm3kl24gcb2oegb7pmwdi6wwrpui62iwb44l7uomnn3lhbi\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </Avatar>\\\\\\\\n\\\\\\\\n        <Textarea data-value={state.text}>\\\\\\\\n          <textarea\\\\\\\\n            data-testid=\\\\\\\\\\\\\\\"compose-announcement\\\\\\\\\\\\\\\"\\\\\\\\n            placeholder=\\\\\\\\\\\\\\\"What\\\\\\\\\\\\'s happening?\\\\\\\\\\\\\\\"\\\\\\\\n            onInput={(event) => textareaInputHandler(event.target.value)}\\\\\\\\n            onKeyUp={(event) => {\\\\\\\\n              if (event.key === \\\\\\\\\\\\\\\"Escape\\\\\\\\\\\\\\\") {\\\\\\\\n                State.update({ showAccountAutocomplete: false });\\\\\\\\n              }\\\\\\\\n            }}\\\\\\\\n            value={state.text}\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          <TextareaDescription>\\\\\\\\n            <a\\\\\\\\n              href=\\\\\\\\\\\\\\\"https://www.markdownguide.org/basic-syntax/\\\\\\\\\\\\\\\"\\\\\\\\n              target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              Markdown\\\\\\\\n            </a>\\\\\\\\n            is supported\\\\\\\\n          </TextareaDescription>\\\\\\\\n        </Textarea>\\\\\\\\n      </>\\\\\\\\n    )}\\\\\\\\n\\\\\\\\n    {autocompleteEnabled && state.showAccountAutocomplete && (\\\\\\\\n      <AutoComplete>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.AccountAutocomplete\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            term: state.mentionInput,\\\\\\\\n            onSelect: autoCompleteAccountId,\\\\\\\\n            onClose: () => State.update({ showAccountAutocomplete: false }),\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </AutoComplete>\\\\\\\\n    )}\\\\\\\\n\\\\\\\\n    <Actions>\\\\\\\\n      {!state.showPreview && (\\\\\\\\n        <IpfsImageUpload\\\\\\\\n          image={state.image}\\\\\\\\n          className=\\\\\\\\\\\\\\\"upload-image-button bi bi-image\\\\\\\\\\\\\\\"\\\\\\\\n        />\\\\\\\\n      )}\\\\\\\\n\\\\\\\\n      <button\\\\\\\\n        type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n        disabled={!state.text}\\\\\\\\n        className=\\\\\\\\\\\\\\\"preview-post-button\\\\\\\\\\\\\\\"\\\\\\\\n        title={state.showPreview ? \\\\\\\\\\\\\\\"Edit Post\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Preview Post\\\\\\\\\\\\\\\"}\\\\\\\\n        onClick={() => State.update({ showPreview: !state.showPreview })}\\\\\\\\n      >\\\\\\\\n        {state.showPreview ? (\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-pencil\\\\\\\\\\\\\\\" />\\\\\\\\n        ) : (\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-eye-fill\\\\\\\\\\\\\\\" />\\\\\\\\n        )}\\\\\\\\n      </button>\\\\\\\\n\\\\\\\\n      <button\\\\\\\\n        data-testid=\\\\\\\\\\\\\\\"post-btn\\\\\\\\\\\\\\\"\\\\\\\\n        disabled={!state.text && !state.image}\\\\\\\\n        onClick={handleSubmit}\\\\\\\\n        className=\\\\\\\\\\\\\\\"commit-post-button\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        Post\\\\\\\\n      </button>\\\\\\\\n    </Actions>\\\\\\\\n  </Wrapper>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.community.Sidebar\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!href) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { community } = props;\\\\\\\\n\\\\\\\\nconst CommunitySummary = () => {\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          text: community.bio_markdown,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <small class=\\\\\\\\\\\\\\\"text-muted mb-3\\\\\\\\\\\\\\\">\\\\\\\\n        <Link\\\\\\\\n          to={href({\\\\\\\\n            widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n            params: { page: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\", tag: community.tag },\\\\\\\\n          })}\\\\\\\\n        >\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Tag\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{ tag: community.tag }}\\\\\\\\n          />\\\\\\\\n        </Link>\\\\\\\\n      </small>\\\\\\\\n    </>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn community === null ? (\\\\\\\\n  <div>Loading...</div>\\\\\\\\n) : (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"d-flex flex-column align-items-end\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Tile\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        fullWidth: true,\\\\\\\\n        minHeight: 0,\\\\\\\\n        noBorder: true,\\\\\\\\n        children: <CommunitySummary />,\\\\\\\\n        style: { marginTop: \\\\\\\\\\\\\\\"0.5rem\\\\\\\\\\\\\\\" },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Tile\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        heading: \\\\\\\\\\\\\\\"Admins\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n        children: (community?.admins ?? []).map((accountId) => (\\\\\\\\n          <div key={accountId} className=\\\\\\\\\\\\\\\"d-flex\\\\\\\\\\\\\\\" style={{ fontWeight: 500 }}>\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.ProfileCard\\\\\\\\\\\\\\\"\\\\\\\\n              props={{ accountId }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )),\\\\\\\\n\\\\\\\\n        fullWidth: true,\\\\\\\\n        minHeight: 0,\\\\\\\\n        noBorder: true,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.community.Announcements\": {\"\": \"const { handle } = props;\\\\\\\\nconst { getCommunity, setCommunitySocialDB } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\ngetCommunity = getCommunity || (() => <></>);\\\\\\\\nsetCommunitySocialDB = setCommunitySocialDB || (() => <></>);\\\\\\\\n\\\\\\\\nconst communityData = getCommunity({ handle });\\\\\\\\n\\\\\\\\nconst MainContent = styled.div`\\\\\\\\n  padding-left: 2rem;\\\\\\\\n  flex: 3;\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    padding-left: 0rem;\\\\\\\\n  }\\\\\\\\n  .post:hover {\\\\\\\\n    background-color: inherit !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst SidebarContainer = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 19px;\\\\\\\\n  font-weight: 600;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst SubHeading = styled.div`\\\\\\\\n  font-size: 15px;\\\\\\\\n  font-weight: 600;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  flex-wrap: no-wrap;\\\\\\\\n  max-width: 100%;\\\\\\\\n\\\\\\\\n  .max-width-100 {\\\\\\\\n    max-width: 100%;\\\\\\\\n  }\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card {\\\\\\\\n    border-radius: 1rem !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Tag = styled.div`\\\\\\\\n  border-top-right-radius: 50px;\\\\\\\\n  border-bottom-right-radius: 50px;\\\\\\\\n  border-top-left-radius: 50px;\\\\\\\\n  border-bottom-left-radius: 50px;\\\\\\\\n  padding-inline: 0.8rem;\\\\\\\\n  padding-block: 0.3rem;\\\\\\\\n  display: flex;\\\\\\\\n  gap: 0.5rem;\\\\\\\\n  border-width: 1px;\\\\\\\\n  border-style: solid;\\\\\\\\n  font-size: 14px;\\\\\\\\n  color: rgba(0, 236, 151, 1);\\\\\\\\n  font-weight: 800;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst [sort, setSort] = useState(\\\\\\\\\\\\\\\"timedesc\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\" style={{ maxWidth: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\" }}>\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"d-flex gap-3 m-3 pl-2\\\\\\\\\\\\\\\">\\\\\\\\n      <MainContent className=\\\\\\\\\\\\\\\"max-width-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n          {context.accountId &&\\\\\\\\n            (communityData?.admins ?? []).includes(context.accountId) && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"card p-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Compose\\\\\\\\\\\\\\\"}\\\\\\\\n                  props={{\\\\\\\\n                    onSubmit: (v) => setCommunitySocialDB({ handle, data: v }),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n            <Heading>Announcements</Heading>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-2\\\\\\\\\\\\\\\">\\\\\\\\n              <select\\\\\\\\n                name=\\\\\\\\\\\\\\\"sort\\\\\\\\\\\\\\\"\\\\\\\\n                id=\\\\\\\\\\\\\\\"sort\\\\\\\\\\\\\\\"\\\\\\\\n                class=\\\\\\\\\\\\\\\"form-select\\\\\\\\\\\\\\\"\\\\\\\\n                value={sort}\\\\\\\\n                onChange={(e) => {\\\\\\\\n                  setSort(e.target.value);\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <option selected value=\\\\\\\\\\\\\\\"timedesc\\\\\\\\\\\\\\\">\\\\\\\\n                  Latest\\\\\\\\n                </option>\\\\\\\\n                <option value=\\\\\\\\\\\\\\\"recentcommentdesc\\\\\\\\\\\\\\\">Last Commented</option>\\\\\\\\n              </select>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.organism.Feed\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              showFlagAccountFeature: true,\\\\\\\\n              filteredAccountIds: [\\\\\\\\n                `${handle}.community.devhub.near`,\\\\\\\\n              ],\\\\\\\\n              sort: sort,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </MainContent>\\\\\\\\n      <SidebarContainer>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card p-4\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"mb-2\\\\\\\\\\\\\\\">{communityData?.description}</div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-wrap\\\\\\\\\\\\\\\">\\\\\\\\n              <Tag>{communityData?.tag} </Tag>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card p-4 d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <SubHeading>Community Admins</SubHeading>\\\\\\\\n            {(communityData?.admins ?? []).map((accountId) => (\\\\\\\\n              <div\\\\\\\\n                key={accountId}\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex\\\\\\\\\\\\\\\"\\\\\\\\n                style={{ fontWeight: 500 }}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.ProfileCard\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{ accountId }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </SidebarContainer>\\\\\\\\n    </Container>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.kanban.Configurator\": {\"\": \"const Struct = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.struct\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!Struct) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\nconst { useQuery } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\nconst { uuid, withUUIDIndex } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.uuid\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nuuid || (uuid = () => {});\\\\\\\\nwithUUIDIndex || (withUUIDIndex = () => {});\\\\\\\\nuseQuery || (useQuery = () => {});\\\\\\\\n\\\\\\\\nconst AttractableDiv = styled.div`\\\\\\\\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\\\\\\\\n  transition: box-shadow 0.6s;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst settings = {\\\\\\\\n  maxColumnsNumber: 10,\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst KanbanPostBoardBasicInfoSchema = {\\\\\\\\n  title: { label: \\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\", order: 1, placeholder: \\\\\\\\\\\\\\\"Enter board title\\\\\\\\\\\\\\\" },\\\\\\\\n  description: {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\",\\\\\\\\n    order: 2,\\\\\\\\n    placeholder: \\\\\\\\\\\\\\\"Enter board description\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst KanbanPostBoardTicketFeaturesSchema = {\\\\\\\\n  author: { label: \\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\" },\\\\\\\\n  like_count: { label: \\\\\\\\\\\\\\\"Likes\\\\\\\\\\\\\\\" },\\\\\\\\n  approved_sponsorship_value: { label: \\\\\\\\\\\\\\\"Funding amount\\\\\\\\\\\\\\\" },\\\\\\\\n  sponsorship_supervisor: { label: \\\\\\\\\\\\\\\"Supervisor/Sponser\\\\\\\\\\\\\\\" },\\\\\\\\n  tags: { label: \\\\\\\\\\\\\\\"Tags\\\\\\\\\\\\\\\" },\\\\\\\\n  type: { label: \\\\\\\\\\\\\\\"Post type\\\\\\\\\\\\\\\" },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst KanbanPostBoardDefaults = {\\\\\\\\n  metadata: {\\\\\\\\n    id: uuid(),\\\\\\\\n    type: \\\\\\\\\\\\\\\"kanban.post_board\\\\\\\\\\\\\\\",\\\\\\\\n    title: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    ticket: {\\\\\\\\n      type: \\\\\\\\\\\\\\\"kanban.post_ticket\\\\\\\\\\\\\\\",\\\\\\\\n      features: {\\\\\\\\n        author: true,\\\\\\\\n        like_count: true,\\\\\\\\n        approved_sponsorship_value: true,\\\\\\\\n        sponsorship_supervisor: true,\\\\\\\\n        tags: true,\\\\\\\\n        type: true,\\\\\\\\n      },\\\\\\\\n      sortBy: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  payload: {\\\\\\\\n    columns: {},\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst toMigrated = ({ config, metadata, payload }) => ({\\\\\\\\n  metadata: {\\\\\\\\n    ...KanbanPostBoardDefaults.metadata,\\\\\\\\n    ...metadata,\\\\\\\\n    ticket: {\\\\\\\\n      ...KanbanPostBoardDefaults.metadata.ticket,\\\\\\\\n      ...metadata.ticket,\\\\\\\\n      features: {\\\\\\\\n        ...KanbanPostBoardDefaults.metadata.ticket.features,\\\\\\\\n        ...metadata.ticket.features,\\\\\\\\n      },\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  payload: {\\\\\\\\n    ...KanbanPostBoardDefaults.payload,\\\\\\\\n    ...payload,\\\\\\\\n    ...config,\\\\\\\\n  },\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst sortByOptions = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"None\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Amount: High to Low\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"descending-amount\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Amount: Low to High\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"ascending-amount\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Date: Newest to Oldest\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"descending-date\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Date: Oldest to Newest\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"ascending-date\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Author: A-Z\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"ascending-author\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Author: Z-A\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"descending-author\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Sponsor/Supervisor: A-Z\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"ascending-sponsor\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Sponsor/Supervisor: Z-A\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"descending-sponsor\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Most Likes\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"descending-likes\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Fewest Likes\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"ascending-likes\\\\\\\\\\\\\\\" },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst KanbanViewConfigurator = ({ handle, data, permissions, onSubmit }) => {\\\\\\\\n  const tags = useCache(\\\\\\\\n    () =>\\\\\\\\n      Near.asyncView(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_all_labels\\\\\\\\\\\\\\\").then(\\\\\\\\n        (res) => res\\\\\\\\n      ),\\\\\\\\n    handle,\\\\\\\\n    { subscribe: false }\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  if (!data) {\\\\\\\\n    return (\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"alert alert-danger\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n        Loading...\\\\\\\\n      </div>\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n  const initialFormState = Struct.pick(\\\\\\\\n    data.metadata === undefined ? {} : toMigrated(data),\\\\\\\\n    [\\\\\\\\\\\\\\\"metadata\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"payload\\\\\\\\\\\\\\\"]\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const [formState, setForm] = useState(initialFormState);\\\\\\\\n  const [showPreview, setPreview] = useState(false);\\\\\\\\n\\\\\\\\n  const formUpdate =\\\\\\\\n    ({ path, via: customFieldUpdate, ...params }) =>\\\\\\\\n    (fieldInput) => {\\\\\\\\n      const transformFn = (node) => {\\\\\\\\n        if (typeof customFieldUpdate === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\") {\\\\\\\\n          return customFieldUpdate({\\\\\\\\n            input: fieldInput?.target?.value ?? fieldInput,\\\\\\\\n            lastKnownValue: node,\\\\\\\\n            params,\\\\\\\\n          });\\\\\\\\n        } else {\\\\\\\\n          return Struct.defaultFieldUpdate({\\\\\\\\n            input: fieldInput?.target?.value ?? fieldInput,\\\\\\\\n            lastKnownValue: node,\\\\\\\\n            params,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n      };\\\\\\\\n      const updatedValues = Struct.deepFieldUpdate(\\\\\\\\n        formState ?? {},\\\\\\\\n        path,\\\\\\\\n        (node) => transformFn(node)\\\\\\\\n      );\\\\\\\\n      setForm((prevFormState) => ({\\\\\\\\n        ...prevFormState,\\\\\\\\n        ...updatedValues,\\\\\\\\n      }));\\\\\\\\n    };\\\\\\\\n\\\\\\\\n  const formReset = () => {\\\\\\\\n    setForm(initialFormState);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const newViewInit = () => {\\\\\\\\n    setForm(KanbanPostBoardDefaults);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const columnsCreateNew = ({ lastKnownValue }) =>\\\\\\\\n    Object.keys(lastKnownValue).length < settings.maxColumnsNumber\\\\\\\\n      ? {\\\\\\\\n          ...(lastKnownValue ?? {}),\\\\\\\\n          ...withUUIDIndex({ tag: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", title: \\\\\\\\\\\\\\\"New column\\\\\\\\\\\\\\\", description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }),\\\\\\\\n        }\\\\\\\\n      : lastKnownValue;\\\\\\\\n\\\\\\\\n  const columnsDeleteById =\\\\\\\\n    (id) =>\\\\\\\\n    ({ lastKnownValue }) =>\\\\\\\\n      Object.fromEntries(\\\\\\\\n        Object.entries(lastKnownValue).filter(([columnId]) => columnId !== id)\\\\\\\\n      );\\\\\\\\n\\\\\\\\n  const onCancel = () => {\\\\\\\\n    formReset();\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const onSave = () => onSubmit(formState);\\\\\\\\n\\\\\\\\n  const formElement = (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card p-2\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"card-body d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-lg-row align-items-stretch w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`devhub.near/widget/devhub.components.organism.Configurator`}\\\\\\\\n            props={{\\\\\\\\n              heading: \\\\\\\\\\\\\\\"Basic information\\\\\\\\\\\\\\\",\\\\\\\\n              externalState: formState.metadata,\\\\\\\\n              isActive: true,\\\\\\\\n              isEmbedded: true,\\\\\\\\n              isUnlocked: permissions.can_configure,\\\\\\\\n              onChange: formUpdate({ path: [\\\\\\\\\\\\\\\"metadata\\\\\\\\\\\\\\\"] }),\\\\\\\\n              schema: KanbanPostBoardBasicInfoSchema,\\\\\\\\n              hideSubmitBtn: true,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-1 align-items-start justify-content-evenly gap-1 p-2 flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n          <span\\\\\\\\n            className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-items-center gap-3 w-100\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ fontWeight: 500, fontSize: \\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\" }}\\\\\\\\n          >\\\\\\\\n            Fields to display\\\\\\\\n          </span>\\\\\\\\n          <div>\\\\\\\\n            <Widget\\\\\\\\n              src={`devhub.near/widget/devhub.components.organism.Configurator`}\\\\\\\\n              props={{\\\\\\\\n                heading: \\\\\\\\\\\\\\\"Card fields\\\\\\\\\\\\\\\",\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"w-auto h-auto\\\\\\\\\\\\\\\" },\\\\\\\\n                externalState: formState.metadata.ticket.features,\\\\\\\\n                isActive: true,\\\\\\\\n                isEmbedded: true,\\\\\\\\n                isUnlocked: permissions.can_configure,\\\\\\\\n                onChange: formUpdate({\\\\\\\\n                  path: [\\\\\\\\\\\\\\\"metadata\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"ticket\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"features\\\\\\\\\\\\\\\"],\\\\\\\\n                }),\\\\\\\\n                schema: KanbanPostBoardTicketFeaturesSchema,\\\\\\\\n                style: { minWidth: \\\\\\\\\\\\\\\"36%\\\\\\\\\\\\\\\" },\\\\\\\\n                hideSubmitBtn: true,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-1 align-items-start justify-content-evenly gap-1 p-2 flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n          <span\\\\\\\\n            className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-items-center gap-3 w-100\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ fontWeight: 500, fontSize: \\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\" }}\\\\\\\\n          >\\\\\\\\n            Sort by\\\\\\\\n          </span>\\\\\\\\n          <div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"input-group\\\\\\\\\\\\\\\">\\\\\\\\n              <select\\\\\\\\n                className=\\\\\\\\\\\\\\\"form-select border border-1\\\\\\\\\\\\\\\"\\\\\\\\n                value={formState.metadata.ticket.sortBy}\\\\\\\\n                onChange={formUpdate({\\\\\\\\n                  path: [\\\\\\\\\\\\\\\"metadata\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"ticket\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"sortBy\\\\\\\\\\\\\\\"],\\\\\\\\n                })}\\\\\\\\n                aria-label={label}\\\\\\\\n              >\\\\\\\\n                <option value=\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" disabled hidden>\\\\\\\\n                  None\\\\\\\\n                </option>\\\\\\\\n                {sortByOptions.map((option) => (\\\\\\\\n                  <option key={option.value} value={option.value}>\\\\\\\\n                    {option.label}\\\\\\\\n                  </option>\\\\\\\\n                ))}\\\\\\\\n              </select>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-between w-100 mb-1\\\\\\\\\\\\\\\">\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"d-inline-flex gap-2 m-0\\\\\\\\\\\\\\\">\\\\\\\\n            <i className=\\\\\\\\\\\\\\\"bi bi-list-task\\\\\\\\\\\\\\\" />\\\\\\\\n            <span>{`Columns ( max. ${settings.maxColumnsNumber} )`}</span>\\\\\\\\n          </span>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          {Object.values(formState.payload.columns ?? {}).map(\\\\\\\\n            ({ id, description, tag, title }) => (\\\\\\\\n              <AttractableDiv\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex gap-3 rounded-4 border p-3 w-100\\\\\\\\\\\\\\\"\\\\\\\\n                key={`column-${id}-configurator`}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 w-100\\\\\\\\\\\\\\\">\\\\\\\\n                  <Widget\\\\\\\\n                    src={`devhub.near/widget/devhub.components.molecule.Input`}\\\\\\\\n                    props={{\\\\\\\\n                      className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                      key: `column-${id}-title`,\\\\\\\\n                      label: \\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\",\\\\\\\\n                      onChange: formUpdate({\\\\\\\\n                        path: [\\\\\\\\\\\\\\\"payload\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\", id, \\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\"],\\\\\\\\n                      }),\\\\\\\\n                      placeholder: \\\\\\\\\\\\\\\"Enter column title\\\\\\\\\\\\\\\",\\\\\\\\n                      value: title,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                  <Widget\\\\\\\\n                    src={`devhub.near/widget/devhub.components.molecule.Input`}\\\\\\\\n                    props={{\\\\\\\\n                      className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                      key: `column-${id}-description`,\\\\\\\\n                      label: \\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\",\\\\\\\\n                      onChange: formUpdate({\\\\\\\\n                        path: [\\\\\\\\\\\\\\\"payload\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\", id, \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n                      }),\\\\\\\\n                      placeholder: \\\\\\\\\\\\\\\"Enter a brief description for the column\\\\\\\\\\\\\\\",\\\\\\\\n                      value: description,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-1 align-items-start justify-content-evenly gap-1 p-2 flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n                    <span className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-items-center gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n                      Enter a tag to filter posts in this column\\\\\\\\n                    </span>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.post-search.by-tag\\\\\\\\\\\\\\\"\\\\\\\\n                        props={{\\\\\\\\n                          tag: tag,\\\\\\\\n                          onTagSearch: formUpdate({\\\\\\\\n                            path: [\\\\\\\\\\\\\\\"payload\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\", id, \\\\\\\\\\\\\\\"tag\\\\\\\\\\\\\\\"],\\\\\\\\n                          }),\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                </div>\\\\\\\\n\\\\\\\\n                <div\\\\\\\\n                  className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 border-start p-3 pe-0\\\\\\\\\\\\\\\"\\\\\\\\n                  style={{ marginTop: -16, marginBottom: -16 }}\\\\\\\\n                >\\\\\\\\n                  <button\\\\\\\\n                    className=\\\\\\\\\\\\\\\"btn btn-outline-danger\\\\\\\\\\\\\\\"\\\\\\\\n                    onClick={formUpdate({\\\\\\\\n                      path: [\\\\\\\\\\\\\\\"payload\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\"],\\\\\\\\n                      via: columnsDeleteById(id),\\\\\\\\n                    })}\\\\\\\\n                    title=\\\\\\\\\\\\\\\"Delete column\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    <i className=\\\\\\\\\\\\\\\"bi bi-trash-fill\\\\\\\\\\\\\\\" />\\\\\\\\n                  </button>\\\\\\\\n                </div>\\\\\\\\n              </AttractableDiv>\\\\\\\\n            )\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-3 justify-content-between w-100 mt-2 flex-wrap flex-sm-nowrap\\\\\\\\\\\\\\\">\\\\\\\\n          <div style={{ flex: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: {\\\\\\\\n                  root: \\\\\\\\\\\\\\\"btn-sm btn-outline-secondary\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                label: \\\\\\\\\\\\\\\"New column\\\\\\\\\\\\\\\",\\\\\\\\n                disabled:\\\\\\\\n                  Object.keys(formState.payload.columns).length >=\\\\\\\\n                  settings.maxColumnsNumber,\\\\\\\\n                icon: { type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\", variant: \\\\\\\\\\\\\\\"bi-plus-lg\\\\\\\\\\\\\\\" },\\\\\\\\n                onClick: formUpdate({\\\\\\\\n                  path: [\\\\\\\\\\\\\\\"payload\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\"],\\\\\\\\n                  via: columnsCreateNew,\\\\\\\\n                }),\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-3 justify-content-end w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: {\\\\\\\\n                  root: \\\\\\\\\\\\\\\"d-flex btn btn-outline-danger shadow-none border-0\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                isHidden: typeof onCancel !== \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\",\\\\\\\\n                label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: onCancel,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n                disabled: form.isSynced,\\\\\\\\n                icon: {\\\\\\\\n                  type: \\\\\\\\\\\\\\\"svg_icon\\\\\\\\\\\\\\\",\\\\\\\\n                  variant: \\\\\\\\\\\\\\\"floppy_drive\\\\\\\\\\\\\\\",\\\\\\\\n                  width: 14,\\\\\\\\n                  height: 14,\\\\\\\\n                },\\\\\\\\n                isHidden: typeof onSave !== \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\",\\\\\\\\n                label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: onSave,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\"\\\\\\\\n      style={{ maxWidth: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <ul className=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"editPreviewTabs\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"tablist\\\\\\\\\\\\\\\">\\\\\\\\n        <li className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n          <button\\\\\\\\n            className={`nav-link ${!showPreview ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}`}\\\\\\\\n            id=\\\\\\\\\\\\\\\"edit-tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-target=\\\\\\\\\\\\\\\"#edit\\\\\\\\\\\\\\\"\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            aria-controls=\\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\"\\\\\\\\n            aria-selected=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => setPreview(false)}\\\\\\\\n          >\\\\\\\\n            Edit\\\\\\\\n          </button>\\\\\\\\n        </li>\\\\\\\\n        <li className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n          <button\\\\\\\\n            className={`nav-link ${showPreview ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}`}\\\\\\\\n            id=\\\\\\\\\\\\\\\"preview-tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-target=\\\\\\\\\\\\\\\"#preview\\\\\\\\\\\\\\\"\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            aria-controls=\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\"\\\\\\\\n            aria-selected=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => setPreview(true)}\\\\\\\\n          >\\\\\\\\n            Preview\\\\\\\\n          </button>\\\\\\\\n        </li>\\\\\\\\n      </ul>\\\\\\\\n      {showPreview ? (\\\\\\\\n        <div>\\\\\\\\n          <Widget\\\\\\\\n            src={`devhub.near/widget/devhub.entity.addon.kanban.Viewer`}\\\\\\\\n            props={{\\\\\\\\n              data: formState,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      ) : (\\\\\\\\n        <div className={[\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\"].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-between gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <h5 className=\\\\\\\\\\\\\\\"h5 d-inline-flex gap-2 m-0\\\\\\\\\\\\\\\">\\\\\\\\n              <i className=\\\\\\\\\\\\\\\"bi bi-gear-wide-connected\\\\\\\\\\\\\\\" />\\\\\\\\n              <span>Kanban board configuration</span>\\\\\\\\n            </h5>\\\\\\\\n          </div>\\\\\\\\n          {Object.keys(formState.metadata ?? {}).length > 0 && formElement}\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n      {!Object.keys(formState.metadata ?? {}).length && (\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center justify-content-center gap-4\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ height: 384 }}\\\\\\\\n        >\\\\\\\\n          <h5 className=\\\\\\\\\\\\\\\"h5 d-inline-flex gap-2 m-0\\\\\\\\\\\\\\\">\\\\\\\\n            This community doesn\\\\\\\\\\\\'t have a kanban board\\\\\\\\n          </h5>\\\\\\\\n          <Widget\\\\\\\\n            src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              icon: { type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\", variant: \\\\\\\\\\\\\\\"bi-kanban-fill\\\\\\\\\\\\\\\" },\\\\\\\\n              isHidden: !permissions.can_configure,\\\\\\\\n              label: \\\\\\\\\\\\\\\"Create kanban board\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: newViewInit,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn KanbanViewConfigurator(props);\\\\\\\\n\"}, \"devhub.components.organism.Feed.NearQueryApi\": {\"\": \"const LIMIT = 10;\\\\\\\\nconst filteredAccountIds = props.filteredAccountIds;\\\\\\\\nconst setShowCard = props.setShowCard ?? (() => {});\\\\\\\\nconst GRAPHQL_ENDPOINT =\\\\\\\\n  props.GRAPHQL_ENDPOINT ?? \\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst sort = props.sort || \\\\\\\\\\\\\\\"timedec\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n// get the full list of posts that the current user has flagged so\\\\\\\\n// they can be hidden\\\\\\\\nconst selfFlaggedPosts = context.accountId\\\\\\\\n  ? Social.index(\\\\\\\\\\\\\\\"flag\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\", {\\\\\\\\n      accountId: context.accountId,\\\\\\\\n    }) ?? []\\\\\\\\n  : [];\\\\\\\\n\\\\\\\\n// V2 self moderation data, structure is like:\\\\\\\\n// { moderate: {\\\\\\\\n//     \\\\\\\\\\\\\\\"account1.near\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"report\\\\\\\\\\\\\\\",\\\\\\\\n//     \\\\\\\\\\\\\\\"account2.near\\\\\\\\\\\\\\\": {\\\\\\\\n//         \\\\\\\\\\\\\\\".post.main\\\\\\\\\\\\\\\": { // slashes are not allowed in keys\\\\\\\\n//           \\\\\\\\\\\\\\\"100000123\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"spam\\\\\\\\\\\\\\\", // post ids are account/blockHeight\\\\\\\\n//         }\\\\\\\\n//     },\\\\\\\\n//   }\\\\\\\\n// }\\\\\\\\nconst selfModeration = context.accountId\\\\\\\\n  ? Social.getr(`${context.accountId}/moderate`, \\\\\\\\\\\\\\\"optimistic\\\\\\\\\\\\\\\") ?? []\\\\\\\\n  : [];\\\\\\\\nconst postsModerationKey = \\\\\\\\\\\\\\\".post.main\\\\\\\\\\\\\\\";\\\\\\\\nconst commentsModerationKey = \\\\\\\\\\\\\\\".post.comment\\\\\\\\\\\\\\\";\\\\\\\\nconst matchesModeration = (moderated, socialDBObjectType, item) => {\\\\\\\\n  if (!moderated) return false;\\\\\\\\n  const accountFound = moderated[item.account_id];\\\\\\\\n  if (typeof accountFound === \\\\\\\\\\\\\\\"undefined\\\\\\\\\\\\\\\") {\\\\\\\\n    return false;\\\\\\\\n  }\\\\\\\\n  if (typeof accountFound === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" || accountFound[\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"]) {\\\\\\\\n    return true;\\\\\\\\n  }\\\\\\\\n  const moderatedItemsOfType = accountFound[socialDBObjectType];\\\\\\\\n  return (\\\\\\\\n    moderatedItemsOfType &&\\\\\\\\n    typeof moderatedItemsOfType[item.block_height] !== \\\\\\\\\\\\\\\"undefined\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst shouldFilter = (item, socialDBObjectType) => {\\\\\\\\n  return (\\\\\\\\n    selfFlaggedPosts.find((flagged) => {\\\\\\\\n      return (\\\\\\\\n        flagged?.value?.blockHeight === item.block_height &&\\\\\\\\n        flagged?.value?.path.includes(item.account_id)\\\\\\\\n      );\\\\\\\\n    }) || matchesModeration(selfModeration, socialDBObjectType, item)\\\\\\\\n  );\\\\\\\\n};\\\\\\\\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(`${GRAPHQL_ENDPOINT}/v1/graphql`, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"dataplatform_near\\\\\\\\\\\\\\\" },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst createQuery = (type, isUpdate) => {\\\\\\\\n  let querySortOption = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  switch (sort) {\\\\\\\\n    case \\\\\\\\\\\\\\\"recentcommentdesc\\\\\\\\\\\\\\\":\\\\\\\\n      querySortOption = `{ last_comment_timestamp: desc_nulls_last },`;\\\\\\\\n      break;\\\\\\\\n    default:\\\\\\\\n      querySortOption = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  let queryFilter = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  let timeOperation = \\\\\\\\\\\\\\\"_lte\\\\\\\\\\\\\\\";\\\\\\\\n  if (isUpdate) {\\\\\\\\n    timeOperation = \\\\\\\\\\\\\\\"_gt\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const queryTime = initialQueryTime ? initialQueryTime : Date.now() * 1000000;\\\\\\\\n\\\\\\\\n  if (filteredAccountIds) {\\\\\\\\n    queryFilter = `where: {\\\\\\\\n          _and: [\\\\\\\\n            {account_id: {_in: \\\\\\\\\\\\\\\"${filteredAccountIds}\\\\\\\\\\\\\\\"}},\\\\\\\\n            {block_timestamp: {${timeOperation}: ${queryTime}}}\\\\\\\\n          ]\\\\\\\\n        }, `;\\\\\\\\n  } else {\\\\\\\\n    queryFilter = `where: {\\\\\\\\n          _and: [\\\\\\\\n            {block_timestamp: {${timeOperation}: ${queryTime}}}\\\\\\\\n          ]\\\\\\\\n        }, `;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return `\\\\\\\\nquery FeedQuery($offset: Int, $limit: Int) {\\\\\\\\n  dataplatform_near_social_feed_moderated_posts(${queryFilter} order_by: [${querySortOption} { block_height: desc }], offset: $offset, limit: $limit) {\\\\\\\\n    account_id\\\\\\\\n    block_height\\\\\\\\n    block_timestamp\\\\\\\\n    content\\\\\\\\n    receipt_id\\\\\\\\n    accounts_liked\\\\\\\\n    last_comment_timestamp\\\\\\\\n    comments(order_by: {block_height: asc}) {\\\\\\\\n      account_id\\\\\\\\n      block_height\\\\\\\\n      block_timestamp\\\\\\\\n      content\\\\\\\\n    }\\\\\\\\n    verifications {\\\\\\\\n      human_provider\\\\\\\\n      human_valid_until\\\\\\\\n      human_verification_level\\\\\\\\n    }\\\\\\\\n\\\\\\\\n  }\\\\\\\\n  dataplatform_near_social_feed_moderated_posts_aggregate(${queryFilter} order_by: {id: asc}) {\\\\\\\\n    aggregate {\\\\\\\\n      count\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst loadMorePosts = (isUpdate) => {\\\\\\\\n  const queryName = \\\\\\\\\\\\\\\"FeedQuery\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n  if (!isUpdate) {\\\\\\\\n    setIsLoading(true);\\\\\\\\n  }\\\\\\\\n  const offset = isUpdate ? 0 : postsData.posts.length;\\\\\\\\n  const limit = isUpdate ? 100 : LIMIT;\\\\\\\\n  const query = createQuery(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", isUpdate);\\\\\\\\n  fetchGraphQL(query, queryName, {\\\\\\\\n    offset: offset,\\\\\\\\n    limit: limit,\\\\\\\\n  }).then((result) => {\\\\\\\\n    if (result.status === 200 && result.body) {\\\\\\\\n      if (result.body.errors) {\\\\\\\\n        console.log(\\\\\\\\\\\\\\\"error:\\\\\\\\\\\\\\\", result.body.errors);\\\\\\\\n        return;\\\\\\\\n      }\\\\\\\\n      let data = result.body.data;\\\\\\\\n      if (data) {\\\\\\\\n        const newPosts = data.dataplatform_near_social_feed_moderated_posts;\\\\\\\\n        const postsCountLeft =\\\\\\\\n          data.dataplatform_near_social_feed_moderated_posts_aggregate.aggregate\\\\\\\\n            .count;\\\\\\\\n        if (newPosts.length > 0) {\\\\\\\\n          let filteredPosts = newPosts.filter(\\\\\\\\n            (i) => !shouldFilter(i, postsModerationKey)\\\\\\\\n          );\\\\\\\\n          filteredPosts = filteredPosts.map((post) => {\\\\\\\\n            const prevComments = post.comments;\\\\\\\\n            const filteredComments = prevComments.filter(\\\\\\\\n              (comment) => !shouldFilter(comment, commentsModerationKey)\\\\\\\\n            );\\\\\\\\n            post.comments = filteredComments;\\\\\\\\n            return post;\\\\\\\\n          });\\\\\\\\n\\\\\\\\n          if (isUpdate) {\\\\\\\\n            setNewUnseenPosts(filteredPosts);\\\\\\\\n          } else {\\\\\\\\n            setPostsData({\\\\\\\\n              posts: [...postsData.posts, ...filteredPosts],\\\\\\\\n              postsCountLeft,\\\\\\\\n            });\\\\\\\\n            setIsLoading(false);\\\\\\\\n          }\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    if (!isUpdate && initialQueryTime === null) {\\\\\\\\n      const newTime =\\\\\\\\n        postsData.posts && postsData.posts[0]\\\\\\\\n          ? postsData.posts[0].block_timestamp\\\\\\\\n          : Date.now() * 1000000;\\\\\\\\n      setInitialQueryTime(newTime + 1000);\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst displayNewPosts = () => {\\\\\\\\n  if (newUnseenPosts.length > 0) {\\\\\\\\n    stopFeedUpdates();\\\\\\\\n    const initialQueryTime = newUnseenPosts[0].block_timestamp + 1000; // timestamp is getting rounded by 3 digits\\\\\\\\n    const newTotalCount = postsData.postsCountLeft + newUnseenPosts.length;\\\\\\\\n    setPostsData({\\\\\\\\n      posts: [...newUnseenPosts, ...postsData.posts],\\\\\\\\n      postsCountLeft: newTotalCount,\\\\\\\\n    });\\\\\\\\n    setNewUnseenPosts([]);\\\\\\\\n    setInitialQueryTime(initialQueryTime);\\\\\\\\n  }\\\\\\\\n};\\\\\\\\nconst startFeedUpdates = () => {\\\\\\\\n  if (initialQueryTime === null) return;\\\\\\\\n\\\\\\\\n  clearInterval(feedInterval);\\\\\\\\n  const newFeedInterval = setInterval(() => {\\\\\\\\n    loadMorePosts(true);\\\\\\\\n  }, 5000);\\\\\\\\n  setFeedInterval(newFeedInterval);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst stopFeedUpdates = () => {\\\\\\\\n  clearInterval(feedInterval);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [initialized, setInitialized] = useState(false);\\\\\\\\nconst [initialQueryTime, setInitialQueryTime] = useState(null);\\\\\\\\nconst [feedInterval, setFeedInterval] = useState(null);\\\\\\\\nconst [newUnseenPosts, setNewUnseenPosts] = useState([]);\\\\\\\\nconst [postsData, setPostsData] = useState({ posts: [], postsCountLeft: 0 });\\\\\\\\nconst [isLoading, setIsLoading] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  loadMorePosts(false);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (postsData.posts.length > 0) {\\\\\\\\n    setShowCard(true);\\\\\\\\n  }\\\\\\\\n}, [postsData]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (initialQueryTime === null) {\\\\\\\\n    clearInterval(feedInterval);\\\\\\\\n  } else {\\\\\\\\n    startFeedUpdates();\\\\\\\\n  }\\\\\\\\n}, [initialQueryTime]);\\\\\\\\n\\\\\\\\nconst hasMore =\\\\\\\\n  postsData.postsCountLeft !== postsData.posts.length &&\\\\\\\\n  postsData.posts.length > 0;\\\\\\\\n\\\\\\\\nif (!initialized && sort) {\\\\\\\\n  setInitialized(true);\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"near/widget/Posts.Feed\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        hasMore,\\\\\\\\n        isLoading,\\\\\\\\n        loadMorePosts: () => {\\\\\\\\n          if (!isLoading) {\\\\\\\\n            loadMorePosts(false);\\\\\\\\n          }\\\\\\\\n        },\\\\\\\\n        posts: postsData.posts,\\\\\\\\n        showFlagAccountFeature: props.showFlagAccountFeature,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.651134566592e+21
    }
  },
  {
    "id": "2161778814",
    "receipt_id": "BzHhvKrJuY9SHGxCG1vgA9WqD9bGasdMdT8yQWou1QFb",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3ZkyEZoYRxexPT8QFQefK9ZYsB1Rmujb8hyRgrpX861n",
      "block_height": 110678763,
      "block_timestamp": 1705545255023632000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "DtJp4g8wuZ6cGK1j1AepskRQAgi13Z1pE6wZcDDFUuUJ",
    "included_in_block_hash": "BtKqffdT78ZahnEms352NqHVBJev1QxfeNpnFWcDXBPQ",
    "block_timestamp": "1705545252916079429",
    "block": {
      "block_height": 110678761
    },
    "receipt_conversion_tokens_burnt": "265255410931000000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8578412592636655e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.651134566592e+21
    }
  },
  {
    "id": "2161785160",
    "receipt_id": "3vp1wzFx3ncnQTm2MCuWWETDUGuzDuZNDh2e7HxS3ESS",
    "predecessor_account_id": "bo.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "Cwef36USrWe7Lin7LDKXFpbRAur9PstktGNH7VbvDrPh",
      "block_height": 110678932,
      "block_timestamp": 1705545433559867100
    },
    "receipt_outcome": {
      "gas_burnt": 6540339413991,
      "tokens_burnt": 654033941399100000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "5DraTv8bgSsguXCzwjBbgJpJ7hgw3Nqs62NyDN8LXMrj",
    "included_in_block_hash": "85Pqw8WzebNZMNpeH2EUHSE9ZnGAsoxvZBxbt7JkwTDe",
    "block_timestamp": "1705545432451239248",
    "block": {
      "block_height": 110678931
    },
    "receipt_conversion_tokens_burnt": "242836147899800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 654033941399100000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Announcement test from Bo!\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"devhub-test\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4843123243805e+21
    }
  },
  {
    "id": "2161785193",
    "receipt_id": "9TMjZZkjhzDVF3D8ERtkVhRA6F53y5X3VAsx4S27LqUn",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "E7z51rh3WWsYNfsXduwWwQ8efxgr2DiqwcNRpkK5pqk",
      "block_height": 110678933,
      "block_timestamp": 1705545434751565300
    },
    "receipt_outcome": {
      "gas_burnt": 5874422350816,
      "tokens_burnt": 587442235081600000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "5DraTv8bgSsguXCzwjBbgJpJ7hgw3Nqs62NyDN8LXMrj",
    "included_in_block_hash": "85Pqw8WzebNZMNpeH2EUHSE9ZnGAsoxvZBxbt7JkwTDe",
    "block_timestamp": "1705545432451239248",
    "block": {
      "block_height": 110678931
    },
    "receipt_conversion_tokens_burnt": "242836147899800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 587442235081600000000,
        "args": "{\"data\": {\"devhub-test.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Announcement test from Bo!\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4843123243805e+21
    }
  },
  {
    "id": "2166410587",
    "receipt_id": "EyCR5BJmhd9MAFaXv1SgtdCd1hk7HDBwB2ta4yNjKEza",
    "predecessor_account_id": "pivortex.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "CBzcs4Rt1GnV7WY4PAYz6nXaih2H8MxWWwyrEiGDVv9N",
      "block_height": 110721647,
      "block_timestamp": 1705590500193452300
    },
    "receipt_outcome": {
      "gas_burnt": 6274124938481,
      "tokens_burnt": 627412493848100000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "7WmKV2m5WEesgmD4EgVi3o3K9gpCgV6ZBbe3H6wULNL",
    "included_in_block_hash": "Cjs7Qi7tiNmpDfrWftqhtRQjf2aT5Vz7eARDn5dmyqFB",
    "block_timestamp": "1705590499222621932",
    "block": {
      "block_height": 110721646
    },
    "receipt_conversion_tokens_burnt": "242841066954600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 627412493848100000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"TEST ANNOUNCEMENT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[Hello](https://near.org/)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"testing123\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5481366582555e+21
    }
  },
  {
    "id": "2166410647",
    "receipt_id": "9QrWaxZEXbNBLg5o7FXgFHKcRkxsf8YmEdApND1pEkYH",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5aUDBmAVsZ54BikisE5HfWcDjDC6Puc1uDbFdNZ7Efm4",
      "block_height": 110721648,
      "block_timestamp": 1705590501037699800
    },
    "receipt_outcome": {
      "gas_burnt": 6778830974528,
      "tokens_burnt": 677883097452800000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "7WmKV2m5WEesgmD4EgVi3o3K9gpCgV6ZBbe3H6wULNL",
    "included_in_block_hash": "Cjs7Qi7tiNmpDfrWftqhtRQjf2aT5Vz7eARDn5dmyqFB",
    "block_timestamp": "1705590499222621932",
    "block": {
      "block_height": 110721646
    },
    "receipt_conversion_tokens_burnt": "242841066954600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 677883097452800000000,
        "args": "{\"data\": {\"testing123.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"TEST ANNOUNCEMENT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[Hello](https://near.org/)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5481366582555e+21
    }
  },
  {
    "id": "2166416562",
    "receipt_id": "F8LmbqCeb5TpDEaVhZJVT8KgK2mY4V5MV7DVpD6kVCuu",
    "predecessor_account_id": "pivortex.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "JEE5sV2xBWktabyB9xuLmsxqacztXaMoZTFJzcPwAg2P",
      "block_height": 110721806,
      "block_timestamp": 1705590659034018600
    },
    "receipt_outcome": {
      "gas_burnt": 6330123588032,
      "tokens_burnt": 633012358803200000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "GvETC8sSHDp8bvVcNrzQ1DrjxamDLwkRcQ2TqUs5FK3J",
    "included_in_block_hash": "9ZEB1M4Z2VzLSuRqyCQVQL82FAbf3kJvBbNQRzQJ4AMq",
    "block_timestamp": "1705590657873471363",
    "block": {
      "block_height": 110721805
    },
    "receipt_conversion_tokens_burnt": "242843079295200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 633012358803200000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"ROAR, THIS IS A LOUD ANNOUNCEMENT!!!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[Link](near.org)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"testing123\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4606314210234e+21
    }
  },
  {
    "id": "2166416638",
    "receipt_id": "2qGDyfLYBrNH2LG1nMHYgdsTdmBSQZsNqSxodfFEJTKL",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8cXt8z4A6puTAC9od8LdCo5fJyVVHUmu1NG7KuMZgeYh",
      "block_height": 110721807,
      "block_timestamp": 1705590660016253400
    },
    "receipt_outcome": {
      "gas_burnt": 5847759829250,
      "tokens_burnt": 584775982925000000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "GvETC8sSHDp8bvVcNrzQ1DrjxamDLwkRcQ2TqUs5FK3J",
    "included_in_block_hash": "9ZEB1M4Z2VzLSuRqyCQVQL82FAbf3kJvBbNQRzQJ4AMq",
    "block_timestamp": "1705590657873471363",
    "block": {
      "block_height": 110721805
    },
    "receipt_conversion_tokens_burnt": "242843079295200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 584775982925000000000,
        "args": "{\"data\": {\"testing123.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"ROAR, THIS IS A LOUD ANNOUNCEMENT!!!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[Link](near.org)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4606314210234e+21
    }
  },
  {
    "id": "2166423958",
    "receipt_id": "9mYRipPuDe2D9VWCoxQRvn6dQVcKpqmVe91EMCiZm3nP",
    "predecessor_account_id": "pivortex.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "34JzWJJwaBThnQ6aqW6ymZzB7uEgsQt5c8KZYX1Hsxpk",
      "block_height": 110722001,
      "block_timestamp": 1705590849413811200
    },
    "receipt_outcome": {
      "gas_burnt": 7858656885960,
      "tokens_burnt": 785865688596000000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "634W6veVcc1JpDe5zDwjx4LdufrKgXbRgxRm82yE4Fqh",
    "included_in_block_hash": "Fm1Cmpcig9Aq86eg7sCaTG1jkawFjC6Q25SUU2rRovdo",
    "block_timestamp": "1705590848427583742",
    "block": {
      "block_height": 110722000
    },
    "receipt_conversion_tokens_burnt": "243313966995600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_addon",
        "deposit": 0,
        "fee": 785865688596000000000,
        "args": "{\"handle\": \"zero-knowledge\", \"community_addon\": {\"id\": \"8m9guu\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Projects\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"If you have a ZK project building on NEAR and would like it featured here or have an update for a featured project, please fill out this [Google form](https://forms.gle/whyTeNXBWUYJAnpn7).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Electron Bridge \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Description \\\\\\\\\\\\\\\\nElectron is building the next generation of ZK-Light clients that enable ZK-proving of consensus protocols. Electron is launching ZK-Proof aggregation that will enable multiple proofs from different chains to be aggregated together into a single proof.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### How to contribute \\\\\\\\\\\\\\\\nThe project is open source. Anyone who wishes to collaborate can open a PR via [GitHub](https://github.com/Electron-Labs)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Links \\\\\\\\\\\\\\\\n- [Website](https://electronlabs.org/)\\\\\\\\\\\\\\\\n- [GitHub](https://github.com/Electron-Labs)\\\\\\\\\\\\\\\\n- [Twitter](https://twitter.com/labs_electron)\\\\\\\\\\\\\\\\n- [LinkedIn](https://www.linkedin.com/company/electron-labs/)\\\\\\\\\\\\\\\\n- [Youtube](https://www.youtube.com/@electronlabs)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Opact\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nOpact is a decentralized private transactions protocol designed for well-intended users. It breaks the link between the sender and the receiver of a transaction utilizing zero-knowledge proofs. To be able to use it, you have to be accepted into an allowlist connected to KYT providers, which block wallets involved in malicious activities, such as hacking.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### How to contribute \\\\\\\\\\\\\\\\nThe project is open source. Anyone who wishes to collaborate can open a PR via [Github](https://github.com/opact-protocol) directly or get in contact with Hack-a-Chain\\\\\\\\u{2019}s team on [Telegram](t.me/hackachain).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Links\\\\\\\\\\\\\\\\n- [Website](opact.io)\\\\\\\\\\\\\\\\n- [Application](tickets.opact.io)\\\\\\\\\\\\\\\\n- [Docs](https://docs.tickets.opact.io/)\\\\\\\\\\\\\\\\n- [Github](https://github.com/opact-protocol)\\\\\\\\\\\\\\\\n- NEAR ZK Tools \\\\\\\\\\\\\\\\n    - [Groth16 verifier](https://crates.io/crates/near_groth16_verifier)\\\\\\\\\\\\\\\\n    - [Plonk verifier](https://github.com/opact-protocol/tickets/tree/main/packages/contract-libraries/plonk_verifier)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- Zpoken (ZK Light Client Research): [https://zpoken.io/](https://zpoken.io/) -- [GitHub](https://github.com/ZpokenWeb3/zk-light-client-implementation)\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\"}\", \"display_name\": \"Projects\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6181980100406e+21
    }
  },
  {
    "id": "2166423992",
    "receipt_id": "FQ2tVg12uYbWZG6WXpYZucgUj6PMru8bDdNY6QBbSk5q",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "B2yZ3U7qtvzZDyrj5krJakDZafC5GvY65MvfuaHNoMWz",
      "block_height": 110722002,
      "block_timestamp": 1705590850048608800
    },
    "receipt_outcome": {
      "gas_burnt": 5890183544490,
      "tokens_burnt": 589018354449000000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "634W6veVcc1JpDe5zDwjx4LdufrKgXbRgxRm82yE4Fqh",
    "included_in_block_hash": "Fm1Cmpcig9Aq86eg7sCaTG1jkawFjC6Q25SUU2rRovdo",
    "block_timestamp": "1705590848427583742",
    "block": {
      "block_height": 110722000
    },
    "receipt_conversion_tokens_burnt": "243313966995600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 589018354449000000000,
        "args": "{\"data\": {\"zero-knowledge.community.devhub.near\": {\"profile\": {\"name\": \"Zero Knowledge\", \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreiaac3oa4kuwtq4k37toegyrvac4u4sowegowlioagxhq46pvmw2wy\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6181980100406e+21
    }
  },
  {
    "id": "2166425278",
    "receipt_id": "68dobSNLhxJs5kHXxt6MUzvEhRuSLoX6UgMrQw4MEcrB",
    "predecessor_account_id": "pivortex.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "GYrxKutk9ew1LTmJVJLfHZicpAzUGTsRVsefcZ1k2TqR",
      "block_height": 110722036,
      "block_timestamp": 1705590883773903000
    },
    "receipt_outcome": {
      "gas_burnt": 7854313410914,
      "tokens_burnt": 785431341091400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "9hXaqHwaF6mWeUS8ignDZaTLXw3fjXZmNnk3zoGWLUEn",
    "included_in_block_hash": "6e638JHb6FfcSypdmgEF2djFJiRadCd51279zYbGawMk",
    "block_timestamp": "1705590882612460404",
    "block": {
      "block_height": 110722035
    },
    "receipt_conversion_tokens_burnt": "243309718721000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_addon",
        "deposit": 0,
        "fee": 785431341091400000000,
        "args": "{\"handle\": \"zero-knowledge\", \"community_addon\": {\"id\": \"8m9guu\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Projects\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"If you have a ZK project building on NEAR and would like it featured here or have an update for a featured project, please fill out this [Google form](https://forms.gle/whyTeNXBWUYJAnpn7).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Electron Bridge \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nElectron is building the next generation of ZK-Light clients that enable ZK-proving of consensus protocols. Electron is launching ZK-Proof aggregation that will enable multiple proofs from different chains to be aggregated together into a single proof.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### How to contribute \\\\\\\\\\\\\\\\nThe project is open source. Anyone who wishes to collaborate can open a PR via [GitHub](https://github.com/Electron-Labs)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Links \\\\\\\\\\\\\\\\n- [Website](https://electronlabs.org/)\\\\\\\\\\\\\\\\n- [GitHub](https://github.com/Electron-Labs)\\\\\\\\\\\\\\\\n- [Twitter](https://twitter.com/labs_electron)\\\\\\\\\\\\\\\\n- [LinkedIn](https://www.linkedin.com/company/electron-labs/)\\\\\\\\\\\\\\\\n- [Youtube](https://www.youtube.com/@electronlabs)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Opact\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nOpact is a decentralized private transactions protocol designed for well-intended users. It breaks the link between the sender and the receiver of a transaction utilizing zero-knowledge proofs. To be able to use it, you have to be accepted into an allowlist connected to KYT providers, which block wallets involved in malicious activities, such as hacking.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### How to contribute \\\\\\\\\\\\\\\\nThe project is open source. Anyone who wishes to collaborate can open a PR via [Github](https://github.com/opact-protocol) directly or get in contact with Hack-a-Chain\\\\\\\\u{2019}s team on [Telegram](t.me/hackachain).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Links\\\\\\\\\\\\\\\\n- [Website](opact.io)\\\\\\\\\\\\\\\\n- [Application](tickets.opact.io)\\\\\\\\\\\\\\\\n- [Docs](https://docs.tickets.opact.io/)\\\\\\\\\\\\\\\\n- [Github](https://github.com/opact-protocol)\\\\\\\\\\\\\\\\n- NEAR ZK Tools \\\\\\\\\\\\\\\\n    - [Groth16 verifier](https://crates.io/crates/near_groth16_verifier)\\\\\\\\\\\\\\\\n    - [Plonk verifier](https://github.com/opact-protocol/tickets/tree/main/packages/contract-libraries/plonk_verifier)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- Zpoken (ZK Light Client Research): [https://zpoken.io/](https://zpoken.io/) -- [GitHub](https://github.com/ZpokenWeb3/zk-light-client-implementation)\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\"}\", \"display_name\": \"Projects\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6177594142614e+21
    }
  },
  {
    "id": "2166425330",
    "receipt_id": "F2SBbGsjA5ujHyfQoHAdfT2NndsRVcN2xVUN7xXAbQJH",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EChyvfp7kZzMHmbLiJVoQCPG5iNcuGyPtBArvJQfLhbG",
      "block_height": 110722037,
      "block_timestamp": 1705590884547991800
    },
    "receipt_outcome": {
      "gas_burnt": 5890183544490,
      "tokens_burnt": 589018354449000000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "9hXaqHwaF6mWeUS8ignDZaTLXw3fjXZmNnk3zoGWLUEn",
    "included_in_block_hash": "6e638JHb6FfcSypdmgEF2djFJiRadCd51279zYbGawMk",
    "block_timestamp": "1705590882612460404",
    "block": {
      "block_height": 110722035
    },
    "receipt_conversion_tokens_burnt": "243309718721000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 589018354449000000000,
        "args": "{\"data\": {\"zero-knowledge.community.devhub.near\": {\"profile\": {\"name\": \"Zero Knowledge\", \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreiaac3oa4kuwtq4k37toegyrvac4u4sowegowlioagxhq46pvmw2wy\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6177594142614e+21
    }
  },
  {
    "id": "2166561410",
    "receipt_id": "cwLTKfaRp3WmSZcvkU24vwbEWdiKwX6jzKzg8ohFNW1",
    "predecessor_account_id": "pivortex.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "CjJNNWoGywSdv5vSthNm4YLTWwqnNsyAYfCr12KNh2Pd",
      "block_height": 110722471,
      "block_timestamp": 1705591407507341800
    },
    "receipt_outcome": {
      "gas_burnt": 7934757097518,
      "tokens_burnt": 793475709751800000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "4bQTenHxXNxcuVH3xjUJMJmefXw1BGqoASWqUap1FYZ3",
    "included_in_block_hash": "FGiembFDMUJh9kDaxAvhYrkA5UpNxh5z7ZBEGMkatiTs",
    "block_timestamp": "1705591406489474816",
    "block": {
      "block_height": 110722470
    },
    "receipt_conversion_tokens_burnt": "243366958631400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_addon",
        "deposit": 0,
        "fee": 793475709751800000000,
        "args": "{\"handle\": \"zero-knowledge\", \"community_addon\": {\"id\": \"8m9guu\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Projects\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"If you have a ZK project building on NEAR and would like it featured here or have an update for a featured project, please fill out this [Google form](https://forms.gle/whyTeNXBWUYJAnpn7).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Electron Labs\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nElectron is building the next generation of ZK-Light clients that enable ZK-proving of consensus protocols. Electron is launching ZK-Proof aggregation that will enable multiple proofs from different chains to be aggregated together into a single proof.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### How to contribute \\\\\\\\\\\\\\\\nThe project is open source. Anyone who wishes to collaborate can open a PR via [GitHub](https://github.com/Electron-Labs).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Links \\\\\\\\\\\\\\\\n- [Website](https://electronlabs.org/)\\\\\\\\\\\\\\\\n- [GitHub](https://github.com/Electron-Labs)\\\\\\\\\\\\\\\\n- [Twitter](https://twitter.com/labs_electron)\\\\\\\\\\\\\\\\n- [LinkedIn](https://www.linkedin.com/company/electron-labs/)\\\\\\\\\\\\\\\\n- [Youtube](https://www.youtube.com/@electronlabs)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Zpoken\\\\\\\\\\\\\\\\nZpoken is a web3 development organization focusing on cryptography research and decentralized tech. Zpoken is building a NEAR ZK Light Client. \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### How to contribute\\\\\\\\\\\\\\\\nThe project is open source. Anyone who wishes to collaborate can open a PR via [GitHub](https://github.com/ZpokenWeb3).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Links\\\\\\\\\\\\\\\\n- [Website](https://zpoken.io/)\\\\\\\\\\\\\\\\n- [GitHub](https://github.com/ZpokenWeb3)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Opact\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nOpact is a decentralized private transactions protocol designed for well-intended users. It breaks the link between the sender and the receiver of a transaction utilizing zero-knowledge proofs. To be able to use it, you have to be accepted into an allowlist connected to KYT providers, which block wallets involved in malicious activities, such as hacking.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### How to contribute \\\\\\\\\\\\\\\\nThe project is open source. Anyone who wishes to collaborate can open a PR via [Github](https://github.com/opact-protocol) directly or get in contact with Hack-a-Chain\\\\\\\\u{2019}s team on [Telegram](t.me/hackachain).\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Links\\\\\\\\\\\\\\\\n- [Website](opact.io)\\\\\\\\\\\\\\\\n- [Application](tickets.opact.io)\\\\\\\\\\\\\\\\n- [Docs](https://docs.tickets.opact.io/)\\\\\\\\\\\\\\\\n- [Github](https://github.com/opact-protocol)\\\\\\\\\\\\\\\\n- NEAR ZK Tools \\\\\\\\\\\\\\\\n    - [Groth16 verifier](https://crates.io/crates/near_groth16_verifier)\\\\\\\\\\\\\\\\n    - [Plonk verifier](https://github.com/opact-protocol/tickets/tree/main/packages/contract-libraries/plonk_verifier)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\"}\", \"display_name\": \"Projects\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6258610228322e+21
    }
  },
  {
    "id": "2166561442",
    "receipt_id": "AMpv3YZpe8355GGHrZyXUpKbsUtSK2hJRzTp5sYudocp",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "ADvHsmfKNiN9eAME3G6Du8jPQoK8cJEV5djkNeE1mD6A",
      "block_height": 110722472,
      "block_timestamp": 1705591408345649200
    },
    "receipt_outcome": {
      "gas_burnt": 5890183544490,
      "tokens_burnt": 589018354449000000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "4bQTenHxXNxcuVH3xjUJMJmefXw1BGqoASWqUap1FYZ3",
    "included_in_block_hash": "FGiembFDMUJh9kDaxAvhYrkA5UpNxh5z7ZBEGMkatiTs",
    "block_timestamp": "1705591406489474816",
    "block": {
      "block_height": 110722470
    },
    "receipt_conversion_tokens_burnt": "243366958631400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 589018354449000000000,
        "args": "{\"data\": {\"zero-knowledge.community.devhub.near\": {\"profile\": {\"name\": \"Zero Knowledge\", \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreiaac3oa4kuwtq4k37toegyrvac4u4sowegowlioagxhq46pvmw2wy\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6258610228322e+21
    }
  },
  {
    "id": "2169780243",
    "receipt_id": "GNi2PQpJPZauthSiVTC4X8rYKDRAZrmPj1A8uH3JsbYf",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "67opTJDgow6YoGkJQaZSaof2em4r4yniJ3BcEEGDFmjV",
      "block_height": 110738379,
      "block_timestamp": 1705609355778426600
    },
    "receipt_outcome": {
      "gas_burnt": 6623908860645,
      "tokens_burnt": 662390886064500000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "DCT2vmxRLHRmTPw23iAYkA6jqNizWNmTZ7JvkrULkGLu",
    "included_in_block_hash": "9jLF8Tdo6NQCmJaNryc41LnjrRuryN5LXPVUW6C1nbLK",
    "block_timestamp": "1705609354704941254",
    "block": {
      "block_height": 110738378
    },
    "receipt_conversion_tokens_burnt": "242950180533800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 662390886064500000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"image\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"ipfs_cid\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bafybeie7wdex67i56eom5spmlzzp36wyku52fbuw7k5kso2isidcf6ir6y\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Who Maintains Dev Tooling on NEAR (and How)?\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" is a talk from @frol.near at NEARCON 2023 featured the contributors [Fellowship Program](/devhub.near/widget/app?page=community&handle=fellowship&tab=about) contributors!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nhttps://www.youtube.com/watch?v=thHru02lcAw\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nCheck out [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"good first issues\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"](https://github.com/search?q=org%3Anear+label%3A%22good+first+issue%22&type=Issues) to start contributing to NEAR ecosystem at scale!\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"fellowship\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5939975129891e+21
    }
  },
  {
    "id": "2169780962",
    "receipt_id": "912ktSvET6KmuF4YySUP6tsCCMU1rVn4hpYygjPNHjn9",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2qGQ3RsidcswJro4DtURQtBGCpAwj9Mxqyec4L1SuvGo",
      "block_height": 110738380,
      "block_timestamp": 1705609356957633300
    },
    "receipt_outcome": {
      "gas_burnt": 6886564463908,
      "tokens_burnt": 688656446390800000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "DCT2vmxRLHRmTPw23iAYkA6jqNizWNmTZ7JvkrULkGLu",
    "included_in_block_hash": "9jLF8Tdo6NQCmJaNryc41LnjrRuryN5LXPVUW6C1nbLK",
    "block_timestamp": "1705609354704941254",
    "block": {
      "block_height": 110738378
    },
    "receipt_conversion_tokens_burnt": "242950180533800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 688656446390800000000,
        "args": "{\"data\": {\"fellowship.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"image\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"ipfs_cid\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bafybeie7wdex67i56eom5spmlzzp36wyku52fbuw7k5kso2isidcf6ir6y\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Who Maintains Dev Tooling on NEAR (and How)?\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" is a talk from @frol.near at NEARCON 2023 featured the contributors [Fellowship Program](/devhub.near/widget/app?page=community&handle=fellowship&tab=about) contributors!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nhttps://www.youtube.com/watch?v=thHru02lcAw\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nCheck out [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"good first issues\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"](https://github.com/search?q=org%3Anear+label%3A%22good+first+issue%22&type=Issues) to start contributing to NEAR ecosystem at scale!\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5939975129891e+21
    }
  },
  {
    "id": "2179909040",
    "receipt_id": "9X32HHEsn7uJUcQ8Wd8sMpysb4r4wNzsMAqekM1EPrp3",
    "predecessor_account_id": "theori.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "57wH7meErwFMureKDGm5j9uuZPYRGmEgJokV9HBDvySU",
      "block_height": 110814690,
      "block_timestamp": 1705690173233547300
    },
    "receipt_outcome": {
      "gas_burnt": 8137238833352,
      "tokens_burnt": 813723883335200000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "75kjBPpEHcwNesR7T1sz9NudigquhbGcfdnmEFsmRbge",
    "included_in_block_hash": "9eQ5tjArGojpweotoytuTPhSGU5jonh63MnfgP5agdBb",
    "block_timestamp": "1705690172387585930",
    "block": {
      "block_height": 110814689
    },
    "receipt_conversion_tokens_burnt": "244756144425600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "update_community",
        "deposit": 0,
        "fee": 813723883335200000000,
        "args": "{\"handle\": \"contract-standards\", \"community\": {\"tag\": \"contract-standards\", \"name\": \"Contract Standards\", \"addons\": [{\"id\": \"yryet6\", \"enabled\": true, \"addon_id\": \"telegram\", \"parameters\": \"{\\\\\\\\\\\\\\\"handles\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"nearnft\\\\\\\\\\\\\\\"]}\", \"display_name\": \"Telegram\"}, {\"id\": \"leujmy\", \"enabled\": true, \"addon_id\": \"github\", \"parameters\": \"{\\\\\\\\\\\\\\\"kanbanBoards\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"188c636509e--1556a53b--1c5e613e--59efbfe1-7f601918\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c636509e--1556a53b--1c5e613e--59efbfe1-7f601918\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"188c637878a--49eb1372-75f9e38d-68ce9939--45830ecc\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPs that need a moderator review or author revision.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-contract-standards\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"S-draft\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{1f4c4} Draft\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c637878a--49eb1372-75f9e38d-68ce9939--45830ecc\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"188c6379247-7e36236d--57fa12ea-61525584-6dcc50ba\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPS that need a review by Subject Matter Experts.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-contract-standards\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"S-review\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{1f440} Review\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c6379247-7e36236d--57fa12ea-61525584-6dcc50ba\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"188c637a51c--65c71614--4800e5fc-27682e1b-7252bfc6\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPS in the final review stage that need the work group voting indications.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-contract-standards\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"S-voting\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{2714} Voting\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c637a51c--65c71614--4800e5fc-27682e1b-7252bfc6\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"188c637e597-e76346f--30604ac2--75d0bac0-5d95802f\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPS that were reviewed and approved by a work group.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-contract-standards\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"S-approved\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{2705} Approved NEPs\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c637e597-e76346f--30604ac2--75d0bac0-5d95802f\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"188c637f4f5--34fde91d-770cef0f-1e66ffab-71964866\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPS that were reviewed and approved by a work group or NEP moderators.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-contract-standards\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"A-NEP-Extension\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{1f527} Approved Fixes\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c637f4f5--34fde91d-770cef0f-1e66ffab-71964866\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"188c63815fb--2c629be9--4589905e--2d22e766--663cb55c\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPs that were retracted by the author or had no activity for over two months.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-contract-standards\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"S-retracted\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{274c} Retracted\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c63815fb--2c629be9--4589905e--2d22e766--663cb55c\\\\\\\\\\\\\\\"}},\\\\\\\\\\\\\\\"dataTypesIncluded\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"Issue\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"PullRequest\\\\\\\\\\\\\\\":true},\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Latest Contract Standards NEPs\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"repoURL\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"https://github.com/near/NEPs\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ticketState\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEAR Contract Standards NEPs\\\\\\\\\\\\\\\"}}}\", \"display_name\": \"Github\"}, {\"id\": \"nuzsf0\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Overview\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"About the Contract Standards Community\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Contracts are the fundamental components of dApps. NEAR Protocol\\\\\\\\u{2019}s contracts enable the possibilities of dApp development, and their standards ensure consistency in core primitives for those applications. If you are a dApp developer, you\\\\\\\\u{2019}re invested in contract standards! This group exists to connect those with interests in these standards to discuss and improve current standards, and maybe even propose new standards if such a need should arise.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## TIMELINE OF KEY EVENTS/HIGHLIGHTS \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n2023 Key Highlights \\\\\\\\\\\\\\\\n(Last updated June 14)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### COMMUNITY\\\\\\\\\\\\\\\\n- 167 members\\\\\\\\\\\\\\\\n- 2 community calls\\\\\\\\\\\\\\\\n- 4 Working Group calls\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### NEPS\\\\\\\\\\\\\\\\n- NEP-276 Payout NFT Standard Extension\\\\\\\\\\\\\\\\n- NEP-351 Add standards key to ContractSourceMetadata\\\\\\\\\\\\\\\\n- NEP-423 Add contract_metadata_update event\\\\\\\\\\\\\\\\n- NEP-463 Add nft_metadata_update event to NEP-171\\\\\\\\\\\\\\\\n- NEP-393 Adding soulbound token\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### EVENTS\\\\\\\\\\\\\\\\n- No events yet!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n---------\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## STRUCTURE\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nAs with many core DevHub groups, the Contract Standards group has two main parts:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Working Group\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThis formal group is a selected committee of subject matter experts who make official decisions on proposals and questions related to the NEAR dApp standards. They follow a strict process to review proposals, recommend funding to DAO or grant programs, and hold grant takers accountable. They engage with the broader community to understand their needs and encourage ideation.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Members**\\\\\\\\\\\\\\\\n- [Alexander Fadeev](https://github.com/fadeevab)\\\\\\\\\\\\\\\\n- [Evgeny Kapun](https://github.com/abacabadabacaba)\\\\\\\\\\\\\\\\n- [Robert Zaremba](https://github.com/robert-zaremba)\\\\\\\\\\\\\\\\n- [Vlad Frolov](https://github.com/frol)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Community Group\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThis informal self-organized group provides a space for anyone interested in changes to the NEAR dApp standards. While this group does not make official decisions, it offers a great opportunity to meet with others to share ideas and submit proposals. This group is not controlled by anyone but the people who are organizing it. The group has a dedicated Telegram channel.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Communication Channels**\\\\\\\\\\\\\\\\n- [Contract Standards Community Group in Telegram](https://t.me/nearnft)\\\\\\\\\\\\\\\\n- Here on the discussions page!\\\\\\\\\\\\\\\\n- Check the Events tab for upcoming Community/Work Group calls.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Current Work & Topics of Discussion &nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nIf you\\\\\\\\u{2019}d like to add a current topic you\\\\\\\\u{2019}re working on as part of this community, please make a post on the main Group page for inclusion!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Community Links &nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n##### Community Organizations / Projects\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n##### Reference Material\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nIf you\\\\\\\\u{2019}d like to add links to your project, interesting reference material for the community, or anything else worth linking here, please reach out to the community lead! We want to be as inclusive as possible.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"textAlign\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"}\", \"display_name\": \"Wiki 1\"}, {\"id\": \"tzf4ez\", \"enabled\": true, \"addon_id\": \"wiki\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Events\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"## Upcoming Events\\\\\\\\\\\\\\\\nNo dates currently set! If you have topics to discuss, feel free to propose a call on our [Telegram Channel](https://t.me/nearnft)! We\\\\\\\\\\\\'ll find a time that works for the community.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Meeting Archive\\\\\\\\\\\\\\\\n\\\\\\\\u{1f4c4}  [See all previous meeting notes](https://docs.google.com/document/d/1cLthGcAIECWV3Ga4ocTf10PgAqDf6Owrz3VRMvdbV1k)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Recent Calls\\\\\\\\\\\\\\\\nSee summaries for the most recent calls below.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Community Call - May 25th, 2023\\\\\\\\\\\\\\\\nAnyone can propose topics and join the community call for discussion.\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**MODERATOR:** Maxwell S\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**VIDEO:** [Contract Standards Community Group Call #3 \\\\\\\\u{2013} NEAR DevHub September 27th, 2023\\\\\\\\\\\\\\\\n](https://youtu.be/T0qMj1zGA3U)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**AGENDA** \\\\\\\\\\\\\\\\n- Discussion on incentivizing completion of the Multitoken standard and what the blockers might be.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**OUTCOMES**\\\\\\\\\\\\\\\\n- Ken from NEAR Horizon offered to do some unblocking work to move NEP-245 forward in the coming weeks.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n----------\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Work Group Calls\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThe Contract Standards Work Group may host public formal calls to review specific proposals, discuss attestations, or vote on decisions.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### June 30th, 2023 - Working Group Call\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**MODERATOR :** Maxwell S\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**VIDEO :** [Contract Standards Work Group Meeting \\\\\\\\u{2013} June 30th, 2023](https://youtu.be/S1An5CDG154)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**AGENDA**\\\\\\\\\\\\\\\\n-   Objective \\\\\\\\\\\\\\\\n-   Introductions\\\\\\\\\\\\\\\\n-   Discussion: Discussion: NEP-393 Soulbound Token\\\\\\\\\\\\\\\\n-   Voting Decision\\\\\\\\\\\\\\\\n-   Getting Involved\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**NOTES**\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- **NEP-393 Soulbound Token:** This NEP implements wallet-bound non-fungible tokens on NEAR (Soulbound tokens). These tokens cannot trivially be transferred from wallet to wallet, so they serve as a form of wallet-identification & credentialing. This particular implementation has some built-in tools for transferring credentials (which bans/deletes) the transferring wallet)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**VOTE DECISION**\\\\\\\\\\\\\\\\n-   NEP-393: Approved\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**ACTION ITEMS**\\\\\\\\\\\\\\\\n- Fill out \\\\\\\\u{201c}Changelog\\\\\\\\u{201d} section in the NEP with the reference to the video recording of WG call, benefit and concerns table - Robert Z\\\\\\\\\\\\\\\\n- Approve and merge the NEP - Vlad F\\\\\\\\\\\\\\\\n- Endorse SBT support in Wallets - Robert Z\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**RELATED RESOURCES**\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- NEP-393 Soulbound Token on GitHub: [LINK](https://github.com/near/NEPs/pull/393)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n---------\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp; \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n## Events\\\\\\\\\\\\\\\\nWatch this space. We\\\\\\\\\\\\'ll always share highlights and summaries of recent community events.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n&nbsp;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"}\", \"display_name\": \"Wiki 2\"}], \"admins\": [\"theori.near\", \"victorkanu1.near\"], \"handle\": \"contract-standards\", \"logo_url\": \"https://ipfs.near.social/ipfs/bafkreid6fdeatndrnsy4h4ztyci5ugqf4csc6ftxtx6jsmv3blmtwxbgwy\", \"banner_url\": \"https://ipfs.near.social/ipfs/bafkreidwsbixrse662boi2e6bkcngwrkqcdwrbleremmrfj4i33342336u\", \"description\": \"Coordinating the contribution to the NEAR dapp standards.\", \"website_url\": null, \"bio_markdown\": \"A community of individuals, communities, and organizations who have an interest in the current and developing contract standards and related dApps on NEAR Protocol.\", \"github_handle\": null, \"twitter_handle\": null, \"telegram_handle\": \"nearnft\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6489863205492e+21
    }
  }
]