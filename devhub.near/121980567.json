[
  {
    "id": "6053914805",
    "receipt_id": "7sVZfVPhN9aHa1qqjYoAAQeYsauY7MvC7pskAMndgiDP",
    "predecessor_account_id": "hristolimechain.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "GeTC1cE4d3KUsPqNgYmD7Eekip6uoKwp2eZEkFUDajM2",
      "block_height": 122021410,
      "block_timestamp": 1719389577412575200
    },
    "receipt_outcome": {
      "gas_burnt": 5688196595818,
      "tokens_burnt": 568819659581800000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "BoZVVyunZ1K4bHS2PKrSsHLCRuAFrWgN5D81EJ9JgDep",
    "included_in_block_hash": "648CHdju9hb22Jm9GEgdKMvKsdegFEiVRVFi2BRXjBKf",
    "block_timestamp": "1719389576442114607",
    "block": {
      "block_height": 122021409
    },
    "receipt_conversion_tokens_burnt": "31471587551800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_proposal",
        "deposit": 0,
        "fee": 568819659581800000000,
        "args": "{\"body\": {\"name\": \"Near Wallet Selector improvements\", \"summary\": \"Key goals include updating the near-api-js dependency to use native JavaScript bigint, which will reduce bundle size and ensure compatibility. We will pin exact dependency versions to mitigate supply chain risks and review dependencies for potential removal or replacement. The project will also introduce a login flow for multiple contracts, ensure backward compatibility, and improve the user experience with features like a default wallet choice toggle. We will also address reported Git issues.\", \"category\": \"Tooling & Infrastructure\", \"timeline\": {\"status\": \"DRAFT\"}, \"supervisor\": null, \"description\": \"## **Proposal Benefits**\\\\\\\\n\\\\\\\\nOur proposed milestones offer several key benefits.\\\\\\\\n\\\\\\\\n- Enhancing UX within decentralized applications\\\\\\\\n- Improving accessibility by supporting multiple access keys.\\\\\\\\n- Ensure seamless interaction with contracts and the NEAR ecosystem.\\\\\\\\n- Emphasizing robust security measures and effectively safeguarding user data.\\\\\\\\n- Simplified backend integration processes to improve the developer experience\\\\\\\\n\\\\\\\\n## **Development roadmap**\\\\\\\\n\\\\\\\\n### **Milestone 1:** Update near-api-js(NAJ) dependency (1 week)\\\\\\\\n\\\\\\\\n- Upgrade the version to 4.x.\\\\\\\\n- Resolve any incompatibility issues that may arise from the upgrade.\\\\\\\\n- Remove bn.js dependency where possible.\\\\\\\\n    - NAJ 4.x uses native JS bigint type.\\\\\\\\n    - This will also reduce the bundle size of the library.\\\\\\\\n- QA wallet integrations to ensure no regressions are introduced.\\\\\\\\n\\\\\\\\n### **Milestone 2:** Dependency housekeeping (0.5 week)\\\\\\\\n\\\\\\\\n- Pin exact dependency versions.\\\\\\\\n    - This reduces the change of supply chain attacks.\\\\\\\\n- Analyse dependencies and check whether some can be removed or replaced with smaller alternatives.\\\\\\\\n\\\\\\\\n### **Milestone 3:** Provide login flow for multiple contracts (2 weeks)\\\\\\\\n\\\\\\\\n- This is enabled by the introduction of multiple LAK in NAJ\\\\\\\\n- Research the best solution approach for Wallet Selector\\\\\\\\n    - Must be backward compatible\\\\\\\\n- Implement the solution\\\\\\\\n\\\\\\\\n### **Milestone 4:** Dedicate time to resolving GitHub Issues reported by the community (0.5 week)\\\\\\\\n\\\\\\\\n- In case the time is not fully spent, it will be transferred over to the next proposal.\\\\\\\\n\\\\\\\\n### **Milestone 5:** UX Improvements (1 week)\\\\\\\\n\\\\\\\\n- Default wallet choice\\\\\\\\n    - Work with LimeChain\\\\\\\\u{2019}s design team to come up with a good UI design\\\\\\\\n    - Create a toggle in wallet selector \\\\\\\\u{201c}Remember wallet choice\\\\\\\\u{201d}\\\\\\\\n    - Modify wallet selector to persist this toggle in browser local storage\\\\\\\\n    - On \\\\\\\\u{201c}Disconnect\\\\\\\\u{201d} press, the toggle is deleted from local storage\\\\\\\\n        - The exact mechanic may change. If there is a change it will be to provide a better UX.\", \"linked_proposals\": [], \"receiver_account\": \"ca706322ceca9a7922be2c013ce40139c812267270b639647e3cb6e418782cd6\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"40000\", \"requested_sponsorship_paid_in_currency\": \"NEAR\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7632556473211e+21
    }
  },
  {
    "id": "6053915611",
    "receipt_id": "FJ1uCCCr1ujsuVEJUvfKjTiSr9Ek3DDr4tavBCKNXrqi",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7TMYBm1wn39EGj8WMuJHEKwgTHrakDpVLgBeVCwcuNS1",
      "block_height": 122021411,
      "block_timestamp": 1719389578780333000
    },
    "receipt_outcome": {
      "gas_burnt": 4532892601814,
      "tokens_burnt": 453289260181400000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "BoZVVyunZ1K4bHS2PKrSsHLCRuAFrWgN5D81EJ9JgDep",
    "included_in_block_hash": "648CHdju9hb22Jm9GEgdKMvKsdegFEiVRVFi2BRXjBKf",
    "block_timestamp": "1719389576442114607",
    "block": {
      "block_height": 122021409
    },
    "receipt_conversion_tokens_burnt": "31471587551800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 453289260181400000000,
        "args": "{\"data\": {\"devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"We have just received a new *Tooling & Infrastructure* proposal.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**By**: @hristolimechain.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Title**: \\\\\\\\u{201c}Near Wallet Selector improvements\\\\\\\\u{201c}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Summary**:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nKey goals include updating the near-api-js dependency to use native JavaScript bigint, which will reduce bundle size and ensure compatibility. We will pin exact dependency versions to mitigate supply chain risks and review dependencies for potential removal or replacement. The project will also introduce a login flow for multiple contracts, ensure backward compatibility, and improve the user experience with features like a default wallet choice toggle. We will also address reported Git issues.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nRead the full proposal and share your feedback on [DevHub](/devhub.near/widget/app?page=proposal&id=131)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7632556473211e+21
    }
  },
  {
    "id": "6053915614",
    "receipt_id": "GTQFk6kZWbrGvjzB2cUAECARdThK1Kip5kbYbMsVmi7Y",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7TMYBm1wn39EGj8WMuJHEKwgTHrakDpVLgBeVCwcuNS1",
      "block_height": 122021411,
      "block_timestamp": 1719389578780333000
    },
    "receipt_outcome": {
      "gas_burnt": 3597484714574,
      "tokens_burnt": 359748471457400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "BoZVVyunZ1K4bHS2PKrSsHLCRuAFrWgN5D81EJ9JgDep",
    "included_in_block_hash": "648CHdju9hb22Jm9GEgdKMvKsdegFEiVRVFi2BRXjBKf",
    "block_timestamp": "1719389576442114607",
    "block": {
      "block_height": 122021409
    },
    "receipt_conversion_tokens_burnt": "31471587551800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_block_height_callback",
        "deposit": 0,
        "fee": 359748471457400000000,
        "args": "{\"proposal\": {\"id\": 131, \"snapshot\": {\"name\": \"Near Wallet Selector improvements\", \"labels\": [], \"summary\": \"Key goals include updating the near-api-js dependency to use native JavaScript bigint, which will reduce bundle size and ensure compatibility. We will pin exact dependency versions to mitigate supply chain risks and review dependencies for potential removal or replacement. The project will also introduce a login flow for multiple contracts, ensure backward compatibility, and improve the user experience with features like a default wallet choice toggle. We will also address reported Git issues.\", \"category\": \"Tooling & Infrastructure\", \"timeline\": {\"status\": \"DRAFT\"}, \"editor_id\": \"hristolimechain.near\", \"timestamp\": \"1719389577412575176\", \"supervisor\": null, \"description\": \"## **Proposal Benefits**\\\\\\\\n\\\\\\\\nOur proposed milestones offer several key benefits.\\\\\\\\n\\\\\\\\n- Enhancing UX within decentralized applications\\\\\\\\n- Improving accessibility by supporting multiple access keys.\\\\\\\\n- Ensure seamless interaction with contracts and the NEAR ecosystem.\\\\\\\\n- Emphasizing robust security measures and effectively safeguarding user data.\\\\\\\\n- Simplified backend integration processes to improve the developer experience\\\\\\\\n\\\\\\\\n## **Development roadmap**\\\\\\\\n\\\\\\\\n### **Milestone 1:** Update near-api-js(NAJ) dependency (1 week)\\\\\\\\n\\\\\\\\n- Upgrade the version to 4.x.\\\\\\\\n- Resolve any incompatibility issues that may arise from the upgrade.\\\\\\\\n- Remove bn.js dependency where possible.\\\\\\\\n    - NAJ 4.x uses native JS bigint type.\\\\\\\\n    - This will also reduce the bundle size of the library.\\\\\\\\n- QA wallet integrations to ensure no regressions are introduced.\\\\\\\\n\\\\\\\\n### **Milestone 2:** Dependency housekeeping (0.5 week)\\\\\\\\n\\\\\\\\n- Pin exact dependency versions.\\\\\\\\n    - This reduces the change of supply chain attacks.\\\\\\\\n- Analyse dependencies and check whether some can be removed or replaced with smaller alternatives.\\\\\\\\n\\\\\\\\n### **Milestone 3:** Provide login flow for multiple contracts (2 weeks)\\\\\\\\n\\\\\\\\n- This is enabled by the introduction of multiple LAK in NAJ\\\\\\\\n- Research the best solution approach for Wallet Selector\\\\\\\\n    - Must be backward compatible\\\\\\\\n- Implement the solution\\\\\\\\n\\\\\\\\n### **Milestone 4:** Dedicate time to resolving GitHub Issues reported by the community (0.5 week)\\\\\\\\n\\\\\\\\n- In case the time is not fully spent, it will be transferred over to the next proposal.\\\\\\\\n\\\\\\\\n### **Milestone 5:** UX Improvements (1 week)\\\\\\\\n\\\\\\\\n- Default wallet choice\\\\\\\\n    - Work with LimeChain\\\\\\\\u{2019}s design team to come up with a good UI design\\\\\\\\n    - Create a toggle in wallet selector \\\\\\\\u{201c}Remember wallet choice\\\\\\\\u{201d}\\\\\\\\n    - Modify wallet selector to persist this toggle in browser local storage\\\\\\\\n    - On \\\\\\\\u{201c}Disconnect\\\\\\\\u{201d} press, the toggle is deleted from local storage\\\\\\\\n        - The exact mechanic may change. If there is a change it will be to provide a better UX.\", \"linked_proposals\": [], \"receiver_account\": \"ca706322ceca9a7922be2c013ce40139c812267270b639647e3cb6e418782cd6\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"40000\", \"requested_sponsorship_paid_in_currency\": \"NEAR\"}, \"author_id\": \"hristolimechain.near\", \"snapshot_history\": [], \"social_db_post_block_height\": \"0\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7632556473211e+21
    }
  },
  {
    "id": "6053915616",
    "receipt_id": "7q74RVAyrTHfMeN84sF3LspsXyu78hZ76tX43VY1aCn1",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7TMYBm1wn39EGj8WMuJHEKwgTHrakDpVLgBeVCwcuNS1",
      "block_height": 122021411,
      "block_timestamp": 1719389578780333000
    },
    "receipt_outcome": {
      "gas_burnt": 3499266685487,
      "tokens_burnt": 349926668548700000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "BoZVVyunZ1K4bHS2PKrSsHLCRuAFrWgN5D81EJ9JgDep",
    "included_in_block_hash": "648CHdju9hb22Jm9GEgdKMvKsdegFEiVRVFi2BRXjBKf",
    "block_timestamp": "1719389576442114607",
    "block": {
      "block_height": 122021409
    },
    "receipt_conversion_tokens_burnt": "31471587551800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349926668548700000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"[{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":131,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"hristolimechain.near\\\\\\\\\\\\\\\"}}]\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7632556473211e+21
    }
  },
  {
    "id": "6055352026",
    "receipt_id": "Fe9GQd9ceoZ5VpNWa9bsKGD7zjeWqPYQ8iTtc2PtJHQ8",
    "predecessor_account_id": "victorkanu1.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "DsMHmQWq7AAshNK9nrjgH3czRfgEhX5Hsp9Xb6jwdFpH",
      "block_height": 122024042,
      "block_timestamp": 1719392925873802000
    },
    "receipt_outcome": {
      "gas_burnt": 4473234874165,
      "tokens_burnt": 447323487416500000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "BhRZcuwBQnR3iojRadxB31JebHzhmLcaJBopccwcYTV4",
    "included_in_block_hash": "HRt5e8LKeuyyy6xpnXdfC3Re89jit6y64nc8RLeB9Kdy",
    "block_timestamp": "1719392925040628708",
    "block": {
      "block_height": 122024041
    },
    "receipt_conversion_tokens_burnt": "31020152477200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 447323487416500000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"GM Protocol Community \\\\\\\\u{1f920}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n **Major Announcements**\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n1. Stake Wars has been Restarted: All updates and relevant information are being shared on the stakewars Telegram channel with participants. \\\\\\\\u{1f449} https://t.me/near_stake_wars\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n2. Protocol Version 1.40 Released to MainNet: This update includes several bug fixes and the stabilization of the Yield/Resume NEP. In protocol version 67, two new host functions have been introduced: \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{1f449} promise_yield_create: https://github.com/near/NEPs/pull/519) \\\\\\\\\\\\\\\\n\\\\\\\\u{1f449}promise_yield_resume: (https://github.com/near/nearcore/pull/11277). \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThese functions allow a smart contract to delay responding to the caller until it has observed another future transaction.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nCheck out these new updates and enhance your development on NEAR.\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"protocol\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 949196653782500000000
    }
  },
  {
    "id": "6055352344",
    "receipt_id": "9MjEonCFcSMv2XCMUyHpV1BN4VnNUdbXMwcqAxAJh55q",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "H7hHV1cPLDoKAEKMtY5d7BBcf8Yr7mtsM5qZNNtaEwqh",
      "block_height": 122024043,
      "block_timestamp": 1719392926898768100
    },
    "receipt_outcome": {
      "gas_burnt": 4708530138888,
      "tokens_burnt": 470853013888800000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "BhRZcuwBQnR3iojRadxB31JebHzhmLcaJBopccwcYTV4",
    "included_in_block_hash": "HRt5e8LKeuyyy6xpnXdfC3Re89jit6y64nc8RLeB9Kdy",
    "block_timestamp": "1719392925040628708",
    "block": {
      "block_height": 122024041
    },
    "receipt_conversion_tokens_burnt": "31020152477200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 470853013888800000000,
        "args": "{\"data\": {\"protocol.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"GM Protocol Community \\\\\\\\u{1f920}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n **Major Announcements**\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n1. Stake Wars has been Restarted: All updates and relevant information are being shared on the stakewars Telegram channel with participants. \\\\\\\\u{1f449} https://t.me/near_stake_wars\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n2. Protocol Version 1.40 Released to MainNet: This update includes several bug fixes and the stabilization of the Yield/Resume NEP. In protocol version 67, two new host functions have been introduced: \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{1f449} promise_yield_create: https://github.com/near/NEPs/pull/519) \\\\\\\\\\\\\\\\n\\\\\\\\u{1f449}promise_yield_resume: (https://github.com/near/nearcore/pull/11277). \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThese functions allow a smart contract to delay responding to the caller until it has observed another future transaction.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nCheck out these new updates and enhance your development on NEAR.\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 949196653782500000000
    }
  },
  {
    "id": "6056557501",
    "receipt_id": "4xGLyqEuvVmPz6cksKrV1HwG6RdPQNZDfTPr1jHyP1zG",
    "predecessor_account_id": "yarotska.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "FUYMMG4uXtxmF25KjKzg535zS9ckR83Bow3FxsAkm6TD",
      "block_height": 122027186,
      "block_timestamp": 1719396778921811000
    },
    "receipt_outcome": {
      "gas_burnt": 10109277483377,
      "tokens_burnt": 1.0109277483377e+21,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "3jPTUVVx1vL7SzhvyKyNFD6rCnp9XurHj4yadVhprUfS",
    "included_in_block_hash": "2JCZwUQ5LL4YPj8gdXbnrzoWpC3qppnnF1voTMH4pnbG",
    "block_timestamp": "1719396777627671446",
    "block": {
      "block_height": 122027185
    },
    "receipt_conversion_tokens_burnt": "34451193200200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal",
        "deposit": 0,
        "fee": 1.0109277483377e+21,
        "args": "{\"id\": 82, \"body\": {\"name\": \"NEAR Education Path @ Latam by Open Web Academy\", \"summary\": \"This is a proposal executed and not approved in the previous DEV HUB flow. You can see the proposal here: https://near.org/devhub.near/widget/app?page=post&id=2837\\\\\\\\nThe NEAR education Path by Open Web Academy consists of the design and execution of an educational path of 3 synchronous certifications via video call with asynchronous content to educate the general public and developers about the NEAR protocol and the development of solutions using NEAR\\\\\\\\\\\\'s smarcconract and Blockchain Operating System\", \"category\": \"Universities & Bootcamps\", \"timeline\": {\"status\": \"APPROVED_CONDITIONALLY\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"supervisor\": \"yarotska.near\", \"description\": \"**This is a proposal executed and not approved in the previous DEV HUB flow. You can see the proposal here: https://near.org/devhub.near/widget/app?page=post&id=2837**\\\\\\\\n\\\\\\\\nThe NEAR education Path by Open Web Academy consists of the design and execution of an educational path of 3 synchronous certifications via video call with asynchronous content to educate the general public and developers about the NEAR protocol and the development of solutions using NEAR\\\\\\\\\\\\'s smarcconract and Blockchain Operating System interfaces\\\\\\\\n\\\\\\\\nThe complex and ever-evolving nature of blockchains, specifically NEAR, coupled with the lack of a standardized educational offering, makes it difficult for individuals to acquire an adequate level of proficiency in implementing and developing blockchain-based solutions. This can result in a gap between the growing demand for trained professionals and the availability of qualified talent to meet this demand.\\\\\\\\n\\\\\\\\n## Activities proposal\\\\\\\\n\\\\\\\\n* Curricular and pedagogical development of the NEAR Elementals (NEC) Bootcamp with experts in education and technical experts\\\\\\\\n* Design and updated of Curriculum NEAR Certified Developer Bootcamp (NCD) with experts in education and technical experts\\\\\\\\n* Instructional design for the teaching of NEC and NCD\\\\\\\\n* Creation of a playbook about NEC and NCD to replicate the learning model in other regions of the world.\\\\\\\\n* Promotional activities and engagement with those interested in the program\\\\\\\\n* Delivery of the 2 x NEAR Elementals Certified Bootcamp (NEC)\\\\\\\\n* Delivery of the 3 x BOS Certified Developer Bootcamp (BCD)\\\\\\\\n* Delivery of the 3 x NEAR Certified Developer Bootcamp (NCD)\\\\\\\\n* Partnerships with regional educational authorities to teach certifications with professors and university students.\\\\\\\\n* Evaluation of deliverables and give feedback to the participants\\\\\\\\n* Office Hours sessions to ensure learning and 1:1 support with technical questions\\\\\\\\n\\\\\\\\n## Timeline\\\\\\\\n\\\\\\\\nThe activities were planned to be carried out in Q1 of 2024, enter here to see the timeline and exact dates of execution of the activities\\\\\\\\n\\\\\\\\n[Education Grantt Diagram](https://docs.google.com/spreadsheets/d/1RYRXMs-p3p_zyJ9wv0R3FTtI36naupyGpKjDb_6cLFA/edit?usp=sharing)\\\\\\\\n\\\\\\\\n## NEAR Elementals Certified\\\\\\\\n\\\\\\\\nThe **NEAR Elementals** certification represents an introductory level qualification covering fundamental blockchain concepts, use cases, and the foundational theory of NEAR. Its purpose is to expand the protocol\\\\\\\\\\\\'s user base by providing accessible knowledge. This certification targets individuals already engaged or interested in Web 3.0, including developers, architects, technology specialists, and operations personnel. Additionally, it serves as a valuable resource for students, entrepreneurs, project initiators, project managers, and early adopters seeking a foundational understanding of Web 3.0 software and the NEAR protocol.\\\\\\\\n\\\\\\\\n**Where is NEAR Elementals located in the learning path?** NEAR Elementals is located just at the beginning of our journey in the NEAR World. Like any new emergent technology there are many new concepts and elements which are being developed for it, NEAR Elementals gives an understanding of those concepts even for those people who are experienced in other technological fields. Unlike other more advanced NEAR certifications which are going deep into the programming of the solutions, NEAR Elementals is looking to settle the bases on each future NEAR developer about what we are trying to achieve with the ecosystem.\\\\\\\\n\\\\\\\\nHolders of the NEAR Elementals Certificate will bolster the skill sets necessary for advancing to higher-level NEAR certifications. \\\\\\\\u{1f53c}This progression is integral to driving widespread adoption among end users within the NEAR ecosystem.\\\\\\\\u{1f53c}\\\\\\\\n\\\\\\\\n## BOS Certified Developer\\\\\\\\n\\\\\\\\n**BOS Certified Developer** is a 5-day virtual educational program that teaches developers inside and outside the NEAR ecosystem to develop highly decentralized interfaces with widgets deployed on the NEAR Protocol.\\\\\\\\n\\\\\\\\nEach developer who completes the BCD has the ability to develop and manage BOS components, as well as connect chains/layer 2 of Ethereum (EVM), this is achieved thanks to the curricular design and the pedagogical vision that each of the instructors supports the participants.\\\\\\\\n\\\\\\\\n## NEAR Certified Developer\\\\\\\\n\\\\\\\\n**NEAR Certified Developer (NCD) bootcamp**, is a 5-day virtual educational program that teaches internal and external developers in the NEAR ecosystem how to develop smart contracts with Rust and Javascript for the NEAR Protocol\\\\\\\\n\\\\\\\\nEach developer who completes the NCD has the ability to develop and deploy high-quality smart contracts, adhering to good programming practices and respecting NEAR contract standards.\\\\\\\\n\\\\\\\\n[NEAR Education Path](https://i.ibb.co/hW00xJb/NEAR-Education-Path.png)\\\\\\\\n\\\\\\\\n### OpenEdx LMS\\\\\\\\n\\\\\\\\nOpen edX is an open-source Learning Management System designed for online education. It provides flexibility, global accessibility, advanced assessment tools, scalability, and an engaged community. It\\\\\\\\\\\\'s cost-effective and allows for course customization to meet participants\\\\\\\\\\\\' needs. Implementing this aims to create a platform dedicated to participant tracking, assessment management, and content curation.\\\\\\\\n\\\\\\\\n### Partnership with Educational Department\\\\\\\\n\\\\\\\\nAdditionally, the Open Web Academy team will achieve a Partnership with the Department of Education of Nayarit Mexico to promote and teach certifications here in favor of professors and university students. Bringing new users and formalization in institutional agreement.\\\\\\\\n\\\\\\\\n### Value proposal.\\\\\\\\n\\\\\\\\n* Content 100% in Spanish for Latino communities\\\\\\\\n* Content created by technical staff with experience in NEAR and with the support of digital marketing specialists.\\\\\\\\n* Monitoring of stakeholders in collective development study groups.\\\\\\\\n* Personalized monitoring of growing projects\\\\\\\\n* Institutional alliances in Mexico and alliances with Spanish-speaking blockchain communities.\\\\\\\\n\\\\\\\\n### Target Audience\\\\\\\\n\\\\\\\\nFullstack developers, Javascript developers, general devs, university students and IT professionals and NEAR experts developers\\\\\\\\n\\\\\\\\n### Deliverables\\\\\\\\n\\\\\\\\n* 80 participants in each NEC - 40 certified participants.\\\\\\\\n* 50 participants in each BCD - 10 certified participants.\\\\\\\\n* 50 participants in each NCD - 10 certified participants.\\\\\\\\n* 35 office hour sessions.\\\\\\\\n* NEC and NCD Certified Developer Playbook\\\\\\\\n* NEC and NCD Certified Developer syllabus\\\\\\\\n* NEC and NCD Certified Developer evaluation rubrics\\\\\\\\n* 1x general playbook about NEAR Education Path\\\\\\\\n* Learning Management System (LMS) to solve automated exams and certify knowledge of the NEAR Elementals Certified.\\\\\\\\n* Slides about all certifications to run Certification in another country\\\\\\\\n* Recordings of certification sessions\\\\\\\\n* Pre-recorded content and technical certification materials\\\\\\\\n* 1x pack of multimedia material to promote certifications.\\\\\\\\n\\\\\\\\n### Budget\\\\\\\\n\\\\\\\\n|Tasks|Hours required|\\\\\\\\n| --- | --- |\\\\\\\\n|Operations and management|180|\\\\\\\\n|Promotion and marketing for bootcamps|150|\\\\\\\\n|Design of NEAR Elementals Certification Bootcamp|180|\\\\\\\\n|Update of NEAR Certified Developer Bootcamp|120|\\\\\\\\n|Run 2 x NEAR Elementals Certified Bootcamp|40|\\\\\\\\n|Run 3 x BOS Certified Developer Bootcamp|70|\\\\\\\\n|Run 3 x NEAR Certified Developer Bootcamp|70|\\\\\\\\n|Analysis of final results and reports|10|\\\\\\\\n|**Total Hours**|820|\\\\\\\\n\\\\\\\\nPrice: $32,800.00 USD (40 USD/hour) + $2000 USD Rewards for participants.\\\\\\\\n\\\\\\\\nGrand total: $34,800.00 USD Funds management would be done through the DAO of the Open Web Academy in [Astra++](https://near.org/astraplusplus.ndctools.near/widget/home?page=dao&daoId=open-web-academy.sputnik-dao.near)\\\\\\\\n\\\\\\\\n### Operations and management\\\\\\\\n\\\\\\\\n* Global NEAR Education -- In addition to focusing on creating detailed documentation and guides for each certification, we will develop a general playbook for the NEAR education path to replicate the entire system by other communities worldwide. We will establish universal standards to ensure quality and consistency in NEAR Protocol education. Continuous evaluation will enable us to update the plan and add new certifications according to evolving needs and advancements in educational communities.\\\\\\\\n* Open EdX operations -- Assembly, technical configuration, content upload and management of the LMS platform. -- Support for 1 year to have the public platform, so that interested parties can access the content at any time -- Export of content for free use for the global NEAR community\\\\\\\\n* Office Hours -- Execution of office hours with 2 instructors with more than 2 years of experience in backend and frontend development of NEAR Protocol and BOS -- Customer service to provide answers to technical questions on Telegram and Discord channels.\\\\\\\\n* Community alliances -- Management and administration to establish alliances with educational partners such as universities, education departments and private organizations -- Management and administration to establish alliances with relevant communities in the Spanish-speaking blockchain ecosystem to participate in the certifications\\\\\\\\n\\\\\\\\n### Promotion and marketing for bootcamps\\\\\\\\n\\\\\\\\n* 2x collaborations with influencers in the Spanish crypto ecosystem. -- Promotion of certifications via Twitter Spaces. -- Live broadcasts discussing how to align with the builder philosophy using NEAR. -- Creation of short videos on TikTok, YouTube Shorts, and Instagram Reels. -- Written content and press releases about the certifications, including a call-to-action (CTA) for registration.\\\\\\\\n* Graphic design -- 1x pack of multimedia materials to advertise certifications. -- 1 landing page dedicated to promoting and providing information about certifications, including a call-to-action to register new users for each certification.\\\\\\\\n* 2x Zealy Campaigns. -- Writing and validating technical quests to engage participants after certifications. -- Daily campaign promotion on Zealy and monitoring of active builders.\\\\\\\\n\\\\\\\\n### Design of NEAR Elementals Certification Bootcamp\\\\\\\\n\\\\\\\\n* Curriculum and pedagogical development of the NEAR Elementals Certification Bootcamp certification with education experts and technical experts\\\\\\\\n* Instructional design for teaching NEC.\\\\\\\\n* Creation of a playbook to replicate the learning model in other regions of the world.\\\\\\\\n* Production and post-production of high-quality video tutorials to complement the certification.\\\\\\\\n* Creation of written content to provide readings for the participants.\\\\\\\\n* Creation of an assessment rubric to evaluate participants.\\\\\\\\n* Evaluation of deliverables and giving feedback to participants.\\\\\\\\n* Certification recordings\\\\\\\\n\\\\\\\\n### Update of NEAR Certified Developer Bootcamp\\\\\\\\n\\\\\\\\n* Updating the NEAR Certified Developer Bootcamp certification curriculum with educational experts and technical experts.\\\\\\\\n* Update instructional design for teaching NCD.\\\\\\\\n* Creation of a playbook to replicate the learning model in other regions of the world.\\\\\\\\n* Production and post-production of high-quality video tutorials to complement the certification.\\\\\\\\n* Update of written content to provide readings for the participants.\\\\\\\\n* Update of an assessment rubric to evaluate participants.\\\\\\\\n* Evaluation of deliverables and giving feedback to participants.\\\\\\\\n* Creation of sample code to facilitate participant learning.\\\\\\\\n* Certification recordings\\\\\\\\n* Design of exercises for problem-solving and repetition-based learning.\\\\\\\\n\\\\\\\\n## About Open Web Academy\\\\\\\\n\\\\\\\\nIn the past, the organization of the Open Web Academy has carried out educational activities focused on the creation of new blockchain solutions that allow the NEAR ecosystem to grow. Some of these activities have even been financed by DAO marketing. You can list:\\\\\\\\n\\\\\\\\n* Educational content: in this category, the creation, planning and execution of 3 certification courses that teach and endorse knowledge in different branches of the NEAR protocol such as [NEAR Certified Architect](https://gov.near.org/t/near-certified-architect-ncar-design-by-owa/23692), [NEAR Certified AURORA Developer](https://gov.near.org/t/near-certified-aurora-developer-ncad-design-by-owa/23830), [NEAR Certified Game Developer](https://gov.near.org/t/near-certified-game-developer-ncgd-design-by-owa/23894), [OWA LIVE](https://youtube.com/playlist?list=PLkwvyg8hchrtMRl4MALYloxZ1QLzorYRk) and [\\\\\\\\u{201c}Montando nodos en NEAR\\\\\\\\u{201d}](https://youtube.com/playlist?list=PLkwvyg8hchru5HOCZJyvZKf9RXQ4xwkkn).\\\\\\\\n* [Smart Contract Construction](https://youtu.be/qvKBRGLzxts) - Live session to guide you through the technical parameters of creating smart contracts with NEAR. (Funded by marketing DAO).\\\\\\\\n* [Hackathon Open Web House PV Supported by NEAR:](https://gov.near.org/t/approved-open-web-house-hackathon-in-the-mexican-pacific-ocean/29391) Hackathon oriented to build solutions in NEAR Protocol held in Puerto Vallarta Mexico.\\\\\\\\n* [Hackathon Open Web House GDL Supported by NEAR:](https://gov.near.org/t/approved-open-web-house-hackathon-in-guadalajara-mexico/32694) Hackathon oriented to build solutions in NEAR Protocol held in Guadalajara Mexico.\\\\\\\\n* [Hackathon Open Web House MTY Supported by NEAR:](https://gov.near.org/t/report-open-web-house-monterrey-mexico/34795) Hackathon oriented to build solutions in NEAR Protocol held in Monterrey Mexico.\\\\\\\\n* [Hackathon Open Web House CDMX Supported by Hackbox:](https://near.social/devhub.near/widget/app?page=post&id=2168) Hackathon oriented to build solutions in BOS and NEAR Protocol held in Mexico City, Mexico and virtual way.\\\\\\\\n* Run 2 x [BOS Certified Developer Bootcamp](https://near.social/devhub.near/widget/app?page=post&id=2168) in 2023 and we certified 9 Spanish-speaking developers.[Look at the results obtained here](https://near.org/devhub.near/widget/app?page=post&id=2516) and see the [last proposal](https://near.org/devhub.near/widget/app?page=post&id=1118) here\\\\\\\\n\\\\\\\\nOur team includes: Current proposal is presented by the Open Web Academy team:\\\\\\\\n\\\\\\\\n* @educar.near: Project manager, 15 years of experience in leading big tech projects and education lead in Open Web Academy.\\\\\\\\n* @freyjxh98.near: engineer in business management, web3 enthusiast and social media manager.\\\\\\\\n* @alan777.near: NEAR certified developer and co-founder of web 3.0 projects at NEAR.\\\\\\\\n* @izcc.near: Certified NEAR Analyst, NEAR Professor and Google Lv2 Professor.\\\\\\\\n* @yairnava.near: Backend developer with experience in RUST and Solidity, mentor of technical workshops\\\\\\\\n* @syi216.near: Front end developer, with experience in BOS. Technical content creator about NEAR\\\\\\\\n\\\\\\\\nOur social networks\\\\\\\\n\\\\\\\\n* Website: [https://ow.academy](https://ow.academy/)\\\\\\\\n* Youtube: [Open Web Academy - YouTube](https://www.youtube.com/@openwebacademy)\\\\\\\\n* Twitter: https://twitter.com/openwebacademy_\\\\\\\\n* Telegram: [Telegram: Contact @openwebhouse](https://t.me/openwebhouse)\\\\\\\\n* Discord: [Open Web Academy](https://discord.com/invite/ekZy68tm5c)\\\\\\\\n* Medium: [Open Web Academy \\\\\\\\u{2013} Medium](https://medium.com/@owa_academy)\\\\\\\\n* Github: [Open Web Academy \\\\\\\\u{b7} GitHub](https://github.com/open-web-academy)\\\\\\\\n\\\\\\\\nTiktok: [owa (@openwebacademy) | TikTok](https://www.tiktok.com/@openwebacademy)\\\\\\\\n\\\\\\\\n### Notes\\\\\\\\n\\\\\\\\nThe open web academy will make all the material generated for the NEAR community free to use and invites the NEAR guilds to collaborate in a way that is best for them.\", \"linked_proposals\": [], \"receiver_account\": \"open-web-academy.sputnik-dao.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"34800\", \"requested_sponsorship_paid_in_currency\": \"USDT\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.3951660327366e+21
    }
  },
  {
    "id": "6056557912",
    "receipt_id": "HWGyscAoDr4BjjcJbW1x8EefsZL8EBk6CUPfiytnNQ2w",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7PdtgCCtYGpFKt72yAEw8fGaPQsQWEv6JzBoHX1TvboJ",
      "block_height": 122027187,
      "block_timestamp": 1719396780099424300
    },
    "receipt_outcome": {
      "gas_burnt": 3497870911987,
      "tokens_burnt": 349787091198700000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "3jPTUVVx1vL7SzhvyKyNFD6rCnp9XurHj4yadVhprUfS",
    "included_in_block_hash": "2JCZwUQ5LL4YPj8gdXbnrzoWpC3qppnnF1voTMH4pnbG",
    "block_timestamp": "1719396777627671446",
    "block": {
      "block_height": 122027185
    },
    "receipt_conversion_tokens_burnt": "34451193200200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349787091198700000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"izcc.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":82,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yarotska.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.3951660327366e+21
    }
  },
  {
    "id": "6056702759",
    "receipt_id": "4tfNKK4bWmRkutPm6JEySY37ZRfpx4QSbp431TyYys19",
    "predecessor_account_id": "yarotska.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "BPHSoeFL1oX2J9LvS3irCKiytMcXi6uLKyrtNBj1UXqT",
      "block_height": 122027457,
      "block_timestamp": 1719397139910092500
    },
    "receipt_outcome": {
      "gas_burnt": 12631888597307,
      "tokens_burnt": 1.2631888597307e+21,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "Hxc94tCVqTuurZov9vhArAqokWiVHTnVJTeCjMuDde6X",
    "included_in_block_hash": "7a8Bcve2GZDPEkFiCTnqXHhYoNDwcnethoQG49uLNJs8",
    "block_timestamp": "1719397138122050460",
    "block": {
      "block_height": 122027456
    },
    "receipt_conversion_tokens_burnt": "30857823668800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 1.2631888597307e+21,
        "args": "{\"id\": 82, \"timeline\": {\"status\": \"PAYMENT_PROCESSING\", \"kyc_verified\": true, \"test_transaction_sent\": true, \"sponsor_requested_review\": false, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.643712237313e+21
    }
  },
  {
    "id": "6056703220",
    "receipt_id": "GyZ3ELLEm7MYFdPdmQxE9eGyQqf19qBjv7rtmUMeDgDS",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "HjjAAr9tqF6n3gqFSJmNmjCifYigqTvtckkoDMKLmZ9d",
      "block_height": 122027458,
      "block_timestamp": 1719397140772000000
    },
    "receipt_outcome": {
      "gas_burnt": 3496655539135,
      "tokens_burnt": 349665553913500000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "Hxc94tCVqTuurZov9vhArAqokWiVHTnVJTeCjMuDde6X",
    "included_in_block_hash": "7a8Bcve2GZDPEkFiCTnqXHhYoNDwcnethoQG49uLNJs8",
    "block_timestamp": "1719397138122050460",
    "block": {
      "block_height": 122027456
    },
    "receipt_conversion_tokens_burnt": "30857823668800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349665553913500000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"izcc.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":82,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yarotska.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.643712237313e+21
    }
  },
  {
    "id": "6057696453",
    "receipt_id": "8La99VA4kMYewnPzPFtzq9BiM9dJq73MyrYTcYYyAcvY",
    "predecessor_account_id": "hristolimechain.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "Hkex27zFsGRuGqcsURWTfxFfn6ukAwynVJDdTZnwGNjs",
      "block_height": 122029254,
      "block_timestamp": 1719399433545147000
    },
    "receipt_outcome": {
      "gas_burnt": 4705007028407,
      "tokens_burnt": 470500702840700000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "AKbEjb8U7ueqdtcrxo67FVyjMnurgxGrQPHsPHc5V9vb",
    "included_in_block_hash": "3Lh3g6KQSM4AVNSxVz3bbaD94cQgqbq7ZJ26DbW4U1PL",
    "block_timestamp": "1719399432195044370",
    "block": {
      "block_height": 122029253
    },
    "receipt_conversion_tokens_burnt": "30836135109000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 470500702840700000000,
        "args": "{\"id\": 131, \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 851185594981600000000
    }
  },
  {
    "id": "6057699498",
    "receipt_id": "GwqEkaomQa1h48A3UYAFKf9gUudUCG7UNbaXVrXkWKdG",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9EEDo7T7GRpv6t6iECuPUdw99xTxNEYb2RQEeMPeLES6",
      "block_height": 122029256,
      "block_timestamp": 1719399436223874300
    },
    "receipt_outcome": {
      "gas_burnt": 3498487570319,
      "tokens_burnt": 349848757031900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "AKbEjb8U7ueqdtcrxo67FVyjMnurgxGrQPHsPHc5V9vb",
    "included_in_block_hash": "3Lh3g6KQSM4AVNSxVz3bbaD94cQgqbq7ZJ26DbW4U1PL",
    "block_timestamp": "1719399432195044370",
    "block": {
      "block_height": 122029253
    },
    "receipt_conversion_tokens_burnt": "30836135109000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349848757031900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"hristolimechain.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":131,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"hristolimechain.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 851185594981600000000
    }
  },
  {
    "id": "6069884116",
    "receipt_id": "Ei4KPChydtYV5vnxph8MDRXfBDbGNDsHJoZmZ5ArbGgY",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3p4ByjwXnY4t7MifdJZJAA1q6dtZ4iZTeVEWHVhQ4BAx",
      "block_height": 122052354,
      "block_timestamp": 1719428337627948000
    },
    "receipt_outcome": {
      "gas_burnt": 5211150311338,
      "tokens_burnt": 521115031133800000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "4QHHxE6WtDZnzzNkU7UZTMQPWyoCDpMiPhrdU8PjLgsP",
    "included_in_block_hash": "EUcsMFvgcXW6u3DriBLRQCwM7Msm4y7YNcqhFoJkcHQ7",
    "block_timestamp": "1719428336530308169",
    "block": {
      "block_height": 122052353
    },
    "receipt_conversion_tokens_burnt": "31513175924200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal",
        "deposit": 0,
        "fee": 521115031133800000000,
        "args": "{\"id\": 131, \"body\": {\"name\": \"Near Wallet Selector improvements\", \"summary\": \"Key goals include updating the near-api-js dependency to use native JavaScript bigint, which will reduce bundle size and ensure compatibility. We will pin exact dependency versions to mitigate supply chain risks and review dependencies for potential removal or replacement. The project will also introduce a login flow for multiple contracts, ensure backward compatibility, and improve the user experience with features like a default wallet choice toggle. We will also address reported Git issues.\", \"category\": \"Tooling & Infrastructure\", \"timeline\": {\"status\": \"PAYMENT_PROCESSING\", \"kyc_verified\": true, \"test_transaction_sent\": true, \"sponsor_requested_review\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": true}, \"supervisor\": \"frol.near\", \"description\": \"## **Proposal Benefits**\\\\\\\\n\\\\\\\\nOur proposed milestones offer several key benefits.\\\\\\\\n\\\\\\\\n- Enhancing UX within decentralized applications\\\\\\\\n- Improving accessibility by supporting multiple access keys.\\\\\\\\n- Ensure seamless interaction with contracts and the NEAR ecosystem.\\\\\\\\n- Emphasizing robust security measures and effectively safeguarding user data.\\\\\\\\n- Simplified backend integration processes to improve the developer experience\\\\\\\\n\\\\\\\\n## **Development roadmap**\\\\\\\\n\\\\\\\\n### **Milestone 1:** Update near-api-js(NAJ) dependency (1 week)\\\\\\\\n\\\\\\\\n- Upgrade the version to 4.x.\\\\\\\\n- Resolve any incompatibility issues that may arise from the upgrade.\\\\\\\\n- Remove bn.js dependency where possible.\\\\\\\\n    - NAJ 4.x uses native JS bigint type.\\\\\\\\n    - This will also reduce the bundle size of the library.\\\\\\\\n- QA wallet integrations to ensure no regressions are introduced.\\\\\\\\n\\\\\\\\n### **Milestone 2:** Dependency housekeeping (0.5 week)\\\\\\\\n\\\\\\\\n- Pin exact dependency versions.\\\\\\\\n    - This reduces the change of supply chain attacks.\\\\\\\\n- Analyse dependencies and check whether some can be removed or replaced with smaller alternatives.\\\\\\\\n\\\\\\\\n### **Milestone 3:** Provide login flow for multiple contracts (2 weeks)\\\\\\\\n\\\\\\\\n- This is enabled by the introduction of multiple LAK in NAJ\\\\\\\\n- Research the best solution approach for Wallet Selector\\\\\\\\n    - Must be backward compatible\\\\\\\\n- Implement the solution\\\\\\\\n\\\\\\\\n### **Milestone 4:** Dedicate time to resolving GitHub Issues reported by the community (0.5 week)\\\\\\\\n\\\\\\\\n- In case the time is not fully spent, it will be transferred over to the next proposal.\\\\\\\\n\\\\\\\\n### **Milestone 5:** UX Improvements (1 week)\\\\\\\\n\\\\\\\\n- Default wallet choice\\\\\\\\n    - Work with LimeChain\\\\\\\\u{2019}s design team to come up with a good UI design\\\\\\\\n    - Create a toggle in wallet selector \\\\\\\\u{201c}Remember wallet choice\\\\\\\\u{201d}\\\\\\\\n    - Modify wallet selector to persist this toggle in browser local storage\\\\\\\\n    - On \\\\\\\\u{201c}Disconnect\\\\\\\\u{201d} press, the toggle is deleted from local storage\\\\\\\\n        - The exact mechanic may change. If there is a change it will be to provide a better UX.\", \"linked_proposals\": [], \"receiver_account\": \"ca706322ceca9a7922be2c013ce40139c812267270b639647e3cb6e418782cd6\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"40000\", \"requested_sponsorship_paid_in_currency\": \"NEAR\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 902500841513900000000
    }
  },
  {
    "id": "6069884608",
    "receipt_id": "2DcxBGtRbJ19FZ9LcVhxRBzqbVAKZ84Zu6maACuF1t2o",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7FGKFftQwtna3j5RH3pZCHxjUY6G49KUmRuXTcNADwcZ",
      "block_height": 122052355,
      "block_timestamp": 1719428338617012700
    },
    "receipt_outcome": {
      "gas_burnt": 3498726344559,
      "tokens_burnt": 349872634455900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "4QHHxE6WtDZnzzNkU7UZTMQPWyoCDpMiPhrdU8PjLgsP",
    "included_in_block_hash": "EUcsMFvgcXW6u3DriBLRQCwM7Msm4y7YNcqhFoJkcHQ7",
    "block_timestamp": "1719428336530308169",
    "block": {
      "block_height": 122052353
    },
    "receipt_conversion_tokens_burnt": "31513175924200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 349872634455900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"hristolimechain.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":131,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 902500841513900000000
    }
  },
  {
    "id": "6073060603",
    "receipt_id": "GYiRnAk8mFrrF9M5JQw8jE7Uysqc1qWa5eab5J34D3d8",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "BBWNZz7hTSk42E8frYJmV6e4RN8XVLkaVqrk3NZk1H6k",
      "block_height": 122058395,
      "block_timestamp": 1719435463417021200
    },
    "receipt_outcome": {
      "gas_burnt": 5178768316482,
      "tokens_burnt": 517876831648200000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "9ryc11WdFeDSKBCTcZrUUWHeqpFvXsq9shzmmH5bbQX7",
    "included_in_block_hash": "HMfQSyKwWewPDyyyyz5oCysA79ZgLrnmMmPBL29jGHhd",
    "block_timestamp": "1719435462317080991",
    "block": {
      "block_height": 122058394
    },
    "receipt_conversion_tokens_burnt": "30857376482000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 517876831648200000000,
        "args": "{\"id\": 81, \"timeline\": {\"status\": \"PAYMENT_PROCESSING\", \"kyc_verified\": true, \"test_transaction_sent\": true, \"sponsor_requested_review\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": true}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 898849170000900000000
    }
  },
  {
    "id": "6073061640",
    "receipt_id": "7Mwq56xd7A5QzKchsF4xz8PfngEgVHJVhB7urZarggAv",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "BfUzgsmjzbZhXUnrU1U9dnmLGQ3qesx8Yn3NK2tBPD1H",
      "block_height": 122058396,
      "block_timestamp": 1719435464525250000
    },
    "receipt_outcome": {
      "gas_burnt": 3501149618707,
      "tokens_burnt": 350114961870700000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "9ryc11WdFeDSKBCTcZrUUWHeqpFvXsq9shzmmH5bbQX7",
    "included_in_block_hash": "HMfQSyKwWewPDyyyyz5oCysA79ZgLrnmMmPBL29jGHhd",
    "block_timestamp": "1719435462317080991",
    "block": {
      "block_height": 122058394
    },
    "receipt_conversion_tokens_burnt": "30857376482000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 350114961870700000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"22516c1b4e5d40db919e5e56a040c5670eac947fcb53a71207d5ce640a973820\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"proposal/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":81,\\\\\\\\\\\\\\\"widgetAccountId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"frol.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 898849170000900000000
    }
  },
  {
    "id": "6101479681",
    "receipt_id": "FeMzgVkikS4D6XEZraxYmqd4zub5CZJbyK4C1cWzNvEp",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "A9xq8sgr2muYXV5EjYmq5VxwsCHYD1f4qZ4iHngy63oq",
      "block_height": 122113458,
      "block_timestamp": 1719501784398153700
    },
    "receipt_outcome": {
      "gas_burnt": 19785023830478,
      "tokens_burnt": 1.9785023830478e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "CZ5byLkY8QofJA6GYDGQVPXPmw1AS9anjq6cpeKVoEoL",
    "included_in_block_hash": "8Sx3t75oUbUB9CNSRKVQ5EtUE4WR3Hrid7JoShTNfGcV",
    "block_timestamp": "1719501783283680690",
    "block": {
      "block_height": 122113457
    },
    "receipt_conversion_tokens_burnt": "48706166823800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.9785023830478e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.entity.proposal.Proposal\": {\"\": \"const { href, getLinkUsingCurrentGateway } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\"\\\\\\\\n) || {\\\\\\\\n  href: () => {},\\\\\\\\n  getLinkUsingCurrentGateway: () => {},\\\\\\\\n};\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.common\\\\\\\\\\\\\\\"\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\n\\\\\\\\nconst accountId = context.accountId;\\\\\\\\n/*\\\\\\\\n---props---\\\\\\\\nprops.id: number;\\\\\\\\nprops.timestamp: number; optional\\\\\\\\naccountId: string\\\\\\\\nblockHeight:number\\\\\\\\n*/\\\\\\\\n\\\\\\\\nconst TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst DecisionStage = [\\\\\\\\n  TIMELINE_STATUS.APPROVED,\\\\\\\\n  TIMELINE_STATUS.REJECTED,\\\\\\\\n  TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .description-box {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .draft-info-container {\\\\\\\\n    background-color: #ecf8fb;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .review-info-container {\\\\\\\\n    background-color: #fef6ee;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-3 {\\\\\\\\n    flex: 3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 20px;\\\\\\\\n    height: 20px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 180px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 135px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 180px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 75px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line-sm {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 70px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:disabled ~ .form-check-label,\\\\\\\\n  .form-check-input[disabled] ~ .form-check-label {\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input {\\\\\\\\n    border-color: black !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-btn {\\\\\\\\n    background-color: #687076;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-vertical {\\\\\\\\n    border-top: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n    border-bottom: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  button.px-0 {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  red-icon i {\\\\\\\\n    color: red;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  input[type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"] {\\\\\\\\n    min-width: 13px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ProposalContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Text = styled.p`\\\\\\\\n  display: block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 20px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  white-space: nowrap;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 12px;\\\\\\\\n  margin: -6px -6px 6px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LinkProfile = ({ account, children }) => {\\\\\\\\n  return (\\\\\\\\n    <Link href={`/near/widget/ProfilePage?accountId=${account}`}>\\\\\\\\n      {children}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst stepsArray = [1, 2, 3, 4, 5];\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\nconst proposal = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n  proposal_id: parseInt(id),\\\\\\\\n});\\\\\\\\n\\\\\\\\nif (!proposal) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Spinner\\\\\\\\\\\\\\\"}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nif (timestamp && proposal) {\\\\\\\\n  proposal.snapshot =\\\\\\\\n    proposal.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n    proposal.snapshot;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { snapshot } = proposal;\\\\\\\\n\\\\\\\\nconst authorId = proposal.author_id;\\\\\\\\nconst blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\nconst item = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n  path: `devhub.near/post/main`,\\\\\\\\n  blockHeight,\\\\\\\\n};\\\\\\\\nconst comments = Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", item, { subscribe: true }) ?? [];\\\\\\\\n\\\\\\\\nconst commentAuthors = [\\\\\\\\n  ...new Set(comments.map((comment) => comment.accountId)),\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst proposalURL = getLinkUsingCurrentGateway(\\\\\\\\n  `devhub.near/widget/app?page=proposal&id=${proposal.id}&timestamp=${snapshot.timestamp}`\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst KycVerificationStatus = () => {\\\\\\\\n  const isVerified = true;\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <img\\\\\\\\n        src={\\\\\\\\n          isVerified\\\\\\\\n            ? \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreidqveupkcc7e3rko2e67lztsqrfnjzw3ceoajyglqeomvv7xznusm\\\\\\\\\\\\\\\"\\\\\\\\n            : \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreieq4222tf3hkbccfnbw5kpgedm3bf2zcfgzbnmismxav2phqdwd7q\\\\\\\\\\\\\\\"\\\\\\\\n        }\\\\\\\\n        height={40}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">KYC Verified</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">Expires on Aug 24, 2024</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst SidePanelItem = ({ title, children, hideBorder, ishidden }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ gap: \\\\\\\\\\\\\\\"8px\\\\\\\\\\\\\\\" }}\\\\\\\\n      className={\\\\\\\\n        ishidden\\\\\\\\n          ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"d-flex flex-column pb-3 \\\\\\\\\\\\\\\" + (!hideBorder && \\\\\\\\\\\\\\\" border-bottom\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{title} </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst proposalStatusOptions = [\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Draft\\\\\\\\\\\\\\\",\\\\\\\\n    value: { status: TIMELINE_STATUS.DRAFT },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Review\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.REVIEW,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.APPROVED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved-Conditionally\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Rejected\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.REJECTED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.CANCELED,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Payment-processing\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n      kyc_verified: false,\\\\\\\\n      test_transaction_sent: false,\\\\\\\\n      request_for_trustees_created: false,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Funded\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.FUNDED,\\\\\\\\n      trustees_released_payment: true,\\\\\\\\n      kyc_verified: true,\\\\\\\\n      test_transaction_sent: true,\\\\\\\\n      request_for_trustees_created: true,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst LinkedProposals = () => {\\\\\\\\n  const linkedProposalsData = [];\\\\\\\\n  snapshot.linked_proposals.map((item) => {\\\\\\\\n    const data = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n      proposal_id: item,\\\\\\\\n    });\\\\\\\\n    if (data !== null) {\\\\\\\\n      linkedProposalsData.push(data);\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      {linkedProposalsData.map((item) => {\\\\\\\\n        return (\\\\\\\\n          <a\\\\\\\\n            href={`?page=proposal&id=${item.id}`}\\\\\\\\n            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  accountId: item.snapshot.editor_id,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\" style={{ maxWidth: 250 }}>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n                  <LinkProfile account={item.snapshot.name}>\\\\\\\\n                    <b>{item.snapshot.name}</b>\\\\\\\\n                  </LinkProfile>\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                  created on {readableDate(item.snapshot.timestamp / 1000000)}\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </a>\\\\\\\\n        );\\\\\\\\n      })}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CheckBox = ({ value, isChecked, label, disabled, onClick }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"checkbox\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={!isModerator || !showTimelineSetting || disabled}\\\\\\\\n        onChange={(e) => onClick(e.target.checked)}\\\\\\\\n      />\\\\\\\\n      <label style={{ width: \\\\\\\\\\\\\\\"90%\\\\\\\\\\\\\\\" }} class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">\\\\\\\\n        {label}\\\\\\\\n      </label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst RadioButton = ({ value, isChecked, label }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={true}\\\\\\\\n      />\\\\\\\\n      <label class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isAllowedToEditProposal = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    proposal_id: proposal.id,\\\\\\\\n    editor: accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"has_moderator\\\\\\\\\\\\\\\", {\\\\\\\\n  account_id: accountId,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst editProposal = ({ timeline }) => {\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n    name: snapshot.name,\\\\\\\\n    description: snapshot.description,\\\\\\\\n    category: snapshot.category,\\\\\\\\n    summary: snapshot.summary,\\\\\\\\n    linked_proposals: snapshot.linked_proposals,\\\\\\\\n    requested_sponsorship_usd_amount: snapshot.requested_sponsorship_usd_amount,\\\\\\\\n    requested_sponsorship_paid_in_currency:\\\\\\\\n      snapshot.requested_sponsorship_paid_in_currency,\\\\\\\\n    receiver_account: snapshot.receiver_account,\\\\\\\\n    supervisor: supervisor || null,\\\\\\\\n    requested_sponsor: snapshot.requested_sponsor,\\\\\\\\n    timeline: timeline,\\\\\\\\n  };\\\\\\\\n  const args = { labels: [], body: body, id: proposal.id };\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst editProposalStatus = ({ timeline }) => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal_timeline\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: proposal.id,\\\\\\\\n        timeline: timeline,\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n  setEditProposalTimelineCalled(true);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\nconst [isEditProposalTimelineCalled, setEditProposalTimelineCalled] =\\\\\\\\n  useState(false);\\\\\\\\nconst [showTimeLineStatusSubmittedToast, setShowTimeLineStatusSubmittedToast] =\\\\\\\\n  useState(false);\\\\\\\\nconst [showTimelineSetting, setShowTimelineSetting] = useState(false);\\\\\\\\nconst proposalStatus = useCallback(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.find(\\\\\\\\n      (i) => i.value.status === snapshot.timeline.status\\\\\\\\n    ),\\\\\\\\n  [snapshot]\\\\\\\\n);\\\\\\\\nconst [updatedProposalStatus, setUpdatedProposalStatus] = useState({});\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (isEditProposalTimelineCalled) {\\\\\\\\n    setShowTimeLineStatusSubmittedToast(true);\\\\\\\\n    setEditProposalTimelineCalled(false);\\\\\\\\n  }\\\\\\\\n  setUpdatedProposalStatus({\\\\\\\\n    ...proposalStatus(),\\\\\\\\n    value: { ...proposalStatus().value, ...snapshot.timeline },\\\\\\\\n  });\\\\\\\\n}, [proposal]);\\\\\\\\n\\\\\\\\nconst [paymentHashes, setPaymentHashes] = useState([\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"]);\\\\\\\\nconst [supervisor, setSupervisor] = useState(snapshot.supervisor);\\\\\\\\n\\\\\\\\nconst selectedStatusIndex = useMemo(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.findIndex((i) => {\\\\\\\\n      return updatedProposalStatus.value.status === i.value.status;\\\\\\\\n    }),\\\\\\\\n  [updatedProposalStatus]\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst TimelineItems = ({ title, children, value, values }) => {\\\\\\\\n  const indexOfCurrentItem = proposalStatusOptions.findIndex((i) =>\\\\\\\\n    Array.isArray(values)\\\\\\\\n      ? values.includes(i.value.status)\\\\\\\\n      : value === i.value.status\\\\\\\\n  );\\\\\\\\n  let color = \\\\\\\\\\\\\\\"transparent\\\\\\\\\\\\\\\";\\\\\\\\n  let statusIndex = selectedStatusIndex;\\\\\\\\n\\\\\\\\n  // index 2,3,4,5  is of decision\\\\\\\\n  if (selectedStatusIndex === 3 || selectedStatusIndex === 2) {\\\\\\\\n    statusIndex = 2;\\\\\\\\n  }\\\\\\\\n  if (statusIndex === indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FEF6EE\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  if (\\\\\\\\n    statusIndex > indexOfCurrentItem ||\\\\\\\\n    updatedProposalStatus.value.status === TIMELINE_STATUS.FUNDED\\\\\\\\n  ) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#EEFEF0\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // reject\\\\\\\\n  if (statusIndex === 4 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FF7F7F\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // cancelled\\\\\\\\n  if (statusIndex === 5 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"p-2 rounded-3\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        backgroundColor: color,\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 text-black\\\\\\\\\\\\\\\"> {title}</div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst link = href({\\\\\\\\n  widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n  params: {\\\\\\\\n    page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\",\\\\\\\\n    id: proposal.id,\\\\\\\\n    timestamp: timestamp,\\\\\\\\n  },\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst createdDate =\\\\\\\\n  proposal.snapshot_history?.[proposal.snapshot_history.length - 1]\\\\\\\\n    ?.timestamp ?? snapshot.timestamp;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"near/widget/DIG.Toast\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        title: \\\\\\\\\\\\\\\"Timeline status submitted successfully\\\\\\\\\\\\\\\",\\\\\\\\n        type: \\\\\\\\\\\\\\\"success\\\\\\\\\\\\\\\",\\\\\\\\n        open: showTimeLineStatusSubmittedToast,\\\\\\\\n        onOpenChange: (v) => setShowTimeLineStatusSubmittedToast(v),\\\\\\\\n        trigger: <></>,\\\\\\\\n        providerProps: { duration: 3000 },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmReviewModal\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[1].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmCancelModal\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[5].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex px-3 px-lg-0 justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center h3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>{snapshot.name}</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">#{proposal.id}</div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"near/widget/ShareButton\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            url: proposalURL,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        {((isAllowedToEditProposal &&\\\\\\\\n          snapshot.timeline.status === TIMELINE_STATUS.DRAFT) ||\\\\\\\\n          isModerator) && (\\\\\\\\n          <Link to={link} style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap flex-md-nowrap px-3 px-lg-0 gap-2 align-items-center text-sm pb-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          timelineStatus: snapshot.timeline.status,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"w-100 d-flex flex-wrap flex-md-nowrap gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n          <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n        </div>\\\\\\\\n        <div>created on {readableDate(createdDate / 1000000)}</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 full-width-div px-3 px-lg-0\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4\\\\\\\\\\\\\\\">\\\\\\\\n        {snapshot.timeline.status === TIMELINE_STATUS.DRAFT &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"draft-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in draft mode and open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  The author can still refine the proposal and build consensus\\\\\\\\n                  before sharing it with sponsors. Click \\\\\\\\u{201c}Ready for review\\\\\\\\u{201d} when\\\\\\\\n                  you want to start the official review process. This will lock\\\\\\\\n                  the editing function, but comments are still open.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    label: \\\\\\\\\\\\\\\"Ready for review\\\\\\\\\\\\\\\",\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setReviewModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        {snapshot.timeline.status === TIMELINE_STATUS.REVIEW &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"review-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in review mode and still open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  You can\\\\\\\\u{2019}t edit the proposal, but comments are open. Only\\\\\\\\n                  moderators can make changes. Click \\\\\\\\u{201c}Cancel Proposal\\\\\\\\u{201d} to cancel\\\\\\\\n                  your proposal. This changes the status to Canceled, signaling\\\\\\\\n                  to sponsors that it\\\\\\\\u{2019}s no longer active or relevant.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    label: (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                      </div>\\\\\\\\n                    ),\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"btn-outline-danger btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setCancelModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"my-4\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-6\\\\\\\\\\\\\\\">\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"flex-3 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                  <Widget\\\\\\\\n                    src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n                    props={{\\\\\\\\n                      accountId: authorId,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n                <ProposalContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Header className=\\\\\\\\\\\\\\\"d-flex gap-1 align-items-center p-2 px-3 \\\\\\\\\\\\\\\">\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ maxWidth: \\\\\\\\\\\\\\\"60%\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      <LinkProfile account={authorId}>{authorId}</LinkProfile>\\\\\\\\n                    </div>\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <Widget\\\\\\\\n                        src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n                        props={{\\\\\\\\n                          blockHeight,\\\\\\\\n                          blockTimestamp: createdDate,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      {context.accountId && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                          <Widget\\\\\\\\n                            src=\\\\\\\\\\\\\\\"near/widget/Posts.Menu\\\\\\\\\\\\\\\"\\\\\\\\n                            props={{\\\\\\\\n                              accountId: authorId,\\\\\\\\n                              blockHeight: blockHeight,\\\\\\\\n                            }}\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </Header>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 p-2 px-3 description-box\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      PROPOSAL CATEGORY\\\\\\\\n                    </div>\\\\\\\\n                    <div>\\\\\\\\n                      <Widget\\\\\\\\n                        src={\\\\\\\\n                          \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CategoryDropdown\\\\\\\\\\\\\\\"\\\\\\\\n                        }\\\\\\\\n                        props={{\\\\\\\\n                          selectedValue: snapshot.category,\\\\\\\\n                          disabled: true,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      SUMMARY\\\\\\\\n                    </div>\\\\\\\\n                    <div>{snapshot.summary}</div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n                      DESCRIPTION\\\\\\\\n                    </div>\\\\\\\\n                    <Widget\\\\\\\\n                      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n                      props={{ text: snapshot.description }}\\\\\\\\n                    />\\\\\\\\n\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.LikeButton\\\\\\\\\\\\\\\"\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          proposalId: proposal.id,\\\\\\\\n                          notifyAccountId: authorId,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={\\\\\\\\n                          \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CommentIcon\\\\\\\\\\\\\\\"\\\\\\\\n                        }\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          showOverlay: false,\\\\\\\\n                          onClick: () => {},\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src=\\\\\\\\\\\\\\\"near/widget/CopyUrlButton\\\\\\\\\\\\\\\"\\\\\\\\n                        props={{\\\\\\\\n                          url: proposalURL,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                </ProposalContainer>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CommentsAndLogs\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    id: proposal.id,\\\\\\\\n                    item: item,\\\\\\\\n                    snapshotHistory: [...proposal.snapshot_history, snapshot],\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div\\\\\\\\n                style={{\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                className=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ComposeComment\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    item: item,\\\\\\\\n                    notifyAccountId: authorId,\\\\\\\\n                    id: proposal.id,\\\\\\\\n                    sortedRelevantUsers: [\\\\\\\\n                      authorId,\\\\\\\\n                      snapshot.supervisor,\\\\\\\\n                      snapshot.requested_sponsor,\\\\\\\\n                      ...commentAuthors,\\\\\\\\n                    ].filter((user) => user !== accountId),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 flex-1 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: authorId,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"Linked Proposals \\\\\\\\\\\\\\\" + `(${snapshot.linked_proposals.length})`\\\\\\\\n                }\\\\\\\\n                ishidden={!snapshot.linked_proposals.length}\\\\\\\\n              >\\\\\\\\n                <LinkedProposals />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Funding Ask\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"h4 text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {snapshot.requested_sponsorship_usd_amount && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                      <div>\\\\\\\\n                        {parseInt(\\\\\\\\n                          snapshot.requested_sponsorship_usd_amount\\\\\\\\n                        ).toLocaleString()}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        USD\\\\\\\\n                      </div>\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                        Requested in{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        {snapshot.requested_sponsorship_paid_in_currency}\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Wallet Address\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: snapshot.receiver_account,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Verification Status\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.VerificationStatus\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    receiverAccount: snapshot.receiver_account,\\\\\\\\n                    showGetVerifiedBtn:\\\\\\\\n                      accountId === snapshot.receiver_account ||\\\\\\\\n                      accountId === authorId,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Requested Sponsor\\\\\\\\\\\\\\\">\\\\\\\\n                {snapshot.requested_sponsor && (\\\\\\\\n                  <Widget\\\\\\\\n                    src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                    props={{\\\\\\\\n                      accountId: snapshot.requested_sponsor,\\\\\\\\n                      noOverlay: true,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                )}\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Supervisor\\\\\\\\\\\\\\\">\\\\\\\\n                {snapshot.supervisor ? (\\\\\\\\n                  <Widget\\\\\\\\n                    src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                    props={{\\\\\\\\n                      accountId: snapshot.supervisor,\\\\\\\\n                      noOverlay: true,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                ) : (\\\\\\\\n                  \\\\\\\\\\\\\\\"No Supervisor\\\\\\\\\\\\\\\"\\\\\\\\n                )}\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                hideBorder={true}\\\\\\\\n                title={\\\\\\\\n                  <div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Timeline\\\\\\\\n                      {isModerator && (\\\\\\\\n                        <div onClick={() => setShowTimelineSetting(true)}>\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                    {showTimelineSetting && (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"mt-2 d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <h6 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Proposal Status</h6>\\\\\\\\n                        <Widget\\\\\\\\n                          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n                          props={{\\\\\\\\n                            options: proposalStatusOptions,\\\\\\\\n                            selectedValue: updatedProposalStatus,\\\\\\\\n                            onUpdate: (v) => {\\\\\\\\n                              setUpdatedProposalStatus({\\\\\\\\n                                ...v,\\\\\\\\n                                value: {\\\\\\\\n                                  ...v.value,\\\\\\\\n                                  ...updatedProposalStatus.value,\\\\\\\\n                                  status: v.value.status,\\\\\\\\n                                },\\\\\\\\n                              });\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-3 mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n                      {stepsArray.map((_, index) => {\\\\\\\\n                        const indexOfCurrentItem = index;\\\\\\\\n                        let color = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n                        let statusIndex = selectedStatusIndex;\\\\\\\\n                        // index 2,3,4 is of decision\\\\\\\\n                        if (\\\\\\\\n                          selectedStatusIndex === 3 ||\\\\\\\\n                          selectedStatusIndex === 2 ||\\\\\\\\n                          selectedStatusIndex === 4 ||\\\\\\\\n                          selectedStatusIndex === 5\\\\\\\\n                        ) {\\\\\\\\n                          statusIndex = 2;\\\\\\\\n                        }\\\\\\\\n                        if (selectedStatusIndex === 6) {\\\\\\\\n                          statusIndex = 3;\\\\\\\\n                        }\\\\\\\\n                        const current = statusIndex === indexOfCurrentItem;\\\\\\\\n                        const completed =\\\\\\\\n                          statusIndex > indexOfCurrentItem ||\\\\\\\\n                          updatedProposalStatus.value.status ===\\\\\\\\n                            TIMELINE_STATUS.FUNDED;\\\\\\\\n                        return (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <div\\\\\\\\n                              className={\\\\\\\\n                                \\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" +\\\\\\\\n                                (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                              }\\\\\\\\n                            >\\\\\\\\n                              {completed && (\\\\\\\\n                                <div\\\\\\\\n                                  className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n                                  style={{ height: \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" }}\\\\\\\\n                                >\\\\\\\\n                                  <i class=\\\\\\\\\\\\\\\"bi bi-check\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                </div>\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n\\\\\\\\n                            {index !== stepsArray.length - 1 && (\\\\\\\\n                              <div\\\\\\\\n                                className={\\\\\\\\n                                  \\\\\\\\\\\\\\\"vertical-line\\\\\\\\\\\\\\\" +\\\\\\\\n                                  (index === stepsArray.length - 2\\\\\\\\n                                    ? \\\\\\\\\\\\\\\"-sm \\\\\\\\\\\\\\\"\\\\\\\\n                                    : \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                                }\\\\\\\\n                              ></div>\\\\\\\\n                            )}\\\\\\\\n                          </div>\\\\\\\\n                        );\\\\\\\\n                      })}\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"1) Draft\\\\\\\\\\\\\\\"\\\\\\\\n                        value={TIMELINE_STATUS.DRAFT}\\\\\\\\n                      >\\\\\\\\n                        <div>\\\\\\\\n                          Once an author submits a proposal, it is in draft mode\\\\\\\\n                          and open for community comments. The author can still\\\\\\\\n                          make changes to the proposal during this stage and\\\\\\\\n                          submit it for official review when ready.\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"2) Review\\\\\\\\\\\\\\\"\\\\\\\\n                        value={TIMELINE_STATUS.REVIEW}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          Sponsors who agree to consider the proposal may\\\\\\\\n                          request attestations from work groups.\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  sponsor_requested_review: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor provides feedback or requests reviews\\\\\\\\\\\\\\\"\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .sponsor_requested_review\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Reviewer completes attestations (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  reviewer_completed_attestation: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .reviewer_completed_attestation\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"3) Decision\\\\\\\\\\\\\\\"\\\\\\\\n                        values={[\\\\\\\\n                          TIMELINE_STATUS.APPROVED,\\\\\\\\n                          TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n                          TIMELINE_STATUS.REJECTED,\\\\\\\\n                        ]}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <div>Sponsor makes a final decision:</div>\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Approved</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                TIMELINE_STATUS.APPROVED ||\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                TIMELINE_STATUS.PAYMENT_PROCESSING ||\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                                TIMELINE_STATUS.FUNDED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={\\\\\\\\n                              <>\\\\\\\\n                                <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                                  Approved - Conditional{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                                </div>\\\\\\\\n                                <span>\\\\\\\\n                                  Requires follow up from recipient. Moderators\\\\\\\\n                                  will provide further details.\\\\\\\\n                                </span>\\\\\\\\n                              </>\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              TIMELINE_STATUS.APPROVED_CONDITIONALLY\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Reject\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Rejected</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              TIMELINE_STATUS.REJECTED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Canceled</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              TIMELINE_STATUS.CANCELED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"4) Payment Processing\\\\\\\\\\\\\\\"\\\\\\\\n                        value={TIMELINE_STATUS.PAYMENT_PROCESSING}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor verifies KYC/KYB\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  kyc_verified: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor confirmed sponsorship and shared funding steps with recipient\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  test_transaction_sent: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          {/* Not needed for Alpha testing */}\\\\\\\\n                          {/* <CheckBox\\\\\\\\n                          value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                          disabled={selectedStatusIndex !== 6}\\\\\\\\n                          label=\\\\\\\\\\\\\\\"Sponsor sends test transaction\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={(value) =>\\\\\\\\n                            setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                              ...prevState,\\\\\\\\n                              value: {\\\\\\\\n                                ...prevState.value,\\\\\\\\n                                test_transaction_sent: value\\\\\\\\n                              }\\\\\\\\n                            }))\\\\\\\\n                          }\\\\\\\\n                          isChecked={\\\\\\\\n                            updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                          }\\\\\\\\n                        />\\\\\\\\n                        <CheckBox\\\\\\\\n                          value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                          disabled={selectedStatusIndex !== 6}\\\\\\\\n                          label=\\\\\\\\\\\\\\\"Sponsor creates funding request from Trustees\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={(value) =>\\\\\\\\n                            setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                              ...prevState,\\\\\\\\n                              value: {\\\\\\\\n                                ...prevState.value,\\\\\\\\n                                request_for_trustees_created: value\\\\\\\\n                              }\\\\\\\\n                            }))\\\\\\\\n                          }\\\\\\\\n                          isChecked={\\\\\\\\n                            updatedProposalStatus.value\\\\\\\\n                              .request_for_trustees_created\\\\\\\\n                          }\\\\\\\\n                        /> */}\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"5) Funded\\\\\\\\\\\\\\\"\\\\\\\\n                        value={TIMELINE_STATUS.FUNDED}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          {paymentHashes?.length > 1 ? (\\\\\\\\n                            paymentHashes.slice(0, -1).map((link, index) => (\\\\\\\\n                              <a\\\\\\\\n                                key={index}\\\\\\\\n                                href={link}\\\\\\\\n                                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                              >\\\\\\\\n                                Payment Link\\\\\\\\n                                <i className=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                              </a>\\\\\\\\n                            ))\\\\\\\\n                          ) : updatedProposalStatus.value.payouts.length > 0 ? (\\\\\\\\n                            <div>\\\\\\\\n                              {updatedProposalStatus.value.payouts.map(\\\\\\\\n                                (link) => {\\\\\\\\n                                  return (\\\\\\\\n                                    <a\\\\\\\\n                                      href={link}\\\\\\\\n                                      className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                                    >\\\\\\\\n                                      Payment Link\\\\\\\\n                                      <i class=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                    </a>\\\\\\\\n                                  );\\\\\\\\n                                }\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n                          ) : (\\\\\\\\n                            \\\\\\\\\\\\\\\"No Payouts yet\\\\\\\\\\\\\\\"\\\\\\\\n                          )}\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                  {showTimelineSetting && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">Supervisor</label>\\\\\\\\n                        <Widget\\\\\\\\n                          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AccountInput\\\\\\\\\\\\\\\"\\\\\\\\n                          props={{\\\\\\\\n                            value: supervisor,\\\\\\\\n                            placeholder: \\\\\\\\\\\\\\\"Enter Supervisor\\\\\\\\\\\\\\\",\\\\\\\\n                            onUpdate: setSupervisor,\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                      {updatedProposalStatus.value.status ===\\\\\\\\n                        TIMELINE_STATUS.FUNDED && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">Payment Link</label>\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                            {paymentHashes.map((item, index) => (\\\\\\\\n                              <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-between align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                                <Widget\\\\\\\\n                                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n                                  props={{\\\\\\\\n                                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                                    value: item,\\\\\\\\n                                    onChange: (e) => {\\\\\\\\n                                      const updatedHashes = [...paymentHashes];\\\\\\\\n                                      updatedHashes[index] = e.target.value;\\\\\\\\n                                      setPaymentHashes(updatedHashes);\\\\\\\\n                                    },\\\\\\\\n                                    skipPaddingGap: true,\\\\\\\\n                                    placeholder: \\\\\\\\\\\\\\\"Enter URL\\\\\\\\\\\\\\\",\\\\\\\\n                                  }}\\\\\\\\n                                />\\\\\\\\n                                <div style={{ minWidth: 20 }}>\\\\\\\\n                                  {index !== paymentHashes.length - 1 ? (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={\\\\\\\\n                                        \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                                      }\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-trash3 h6\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () => {\\\\\\\\n                                          const updatedHashes = [\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                          ];\\\\\\\\n                                          updatedHashes.splice(index, 1);\\\\\\\\n                                          setPaymentHashes(updatedHashes);\\\\\\\\n                                        },\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  ) : (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={\\\\\\\\n                                        \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                                      }\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"green-btn shadow-none border-0 w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-plus-lg\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () =>\\\\\\\\n                                          setPaymentHashes([\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                            \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                                          ]),\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  )}\\\\\\\\n                                </div>\\\\\\\\n                              </div>\\\\\\\\n                            ))}\\\\\\\\n                          </div>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end text-sm\\\\\\\\\\\\\\\">\\\\\\\\n                        <Widget\\\\\\\\n                          src={\\\\\\\\n                            \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                          }\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                            classNames: {\\\\\\\\n                              root: \\\\\\\\\\\\\\\"btn-outline-danger border-0 shadow-none btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              setShowTimelineSetting(false);\\\\\\\\n                              setUpdatedProposalStatus(proposalStatus);\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                        <Widget\\\\\\\\n                          src={\\\\\\\\n                            \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                          }\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                            disabled:\\\\\\\\n                              !supervisor &&\\\\\\\\n                              DecisionStage.includes(\\\\\\\\n                                updatedProposalStatus.value.status\\\\\\\\n                              ),\\\\\\\\n                            classNames: { root: \\\\\\\\\\\\\\\"green-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              if (snapshot.supervisor !== supervisor) {\\\\\\\\n                                editProposal({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              } else if (\\\\\\\\n                                updatedProposalStatus.value.status ===\\\\\\\\n                                TIMELINE_STATUS.FUNDED\\\\\\\\n                              ) {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: {\\\\\\\\n                                    ...updatedProposalStatus.value,\\\\\\\\n                                    payouts: !paymentHashes[0]\\\\\\\\n                                      ? []\\\\\\\\n                                      : paymentHashes.filter(\\\\\\\\n                                          (item) => item !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                                        ),\\\\\\\\n                                  },\\\\\\\\n                                });\\\\\\\\n                              } else {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              }\\\\\\\\n                              setShowTimelineSetting(false);\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.molecule.Compose\": {\"\": \"const EmbeddCSS = `\\\\\\\\n  .CodeMirror {\\\\\\\\n   margin-inline:10px;\\\\\\\\n   border-radius:5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  .nav-link {\\\\\\\\n    color: inherit !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card-header {\\\\\\\\n    padding-bottom: 0px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Compose = ({\\\\\\\\n  data,\\\\\\\\n  onChange,\\\\\\\\n  autocompleteEnabled,\\\\\\\\n  placeholder,\\\\\\\\n  height,\\\\\\\\n  embeddCSS,\\\\\\\\n  showProposalIdAutoComplete,\\\\\\\\n  onChangeKeyup,\\\\\\\\n  handler,\\\\\\\\n  sortedRelevantUsers,\\\\\\\\n}) => {\\\\\\\\n  State.init({\\\\\\\\n    data: data,\\\\\\\\n    selectedTab: \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\",\\\\\\\\n    autoFocus: false,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    if (typeof onChange === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\") {\\\\\\\\n      onChange(state.data);\\\\\\\\n    }\\\\\\\\n  }, [state.data]);\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    // for clearing editor after txn approval/ showing draft state\\\\\\\\n    if (data !== state.data || handler !== state.handler) {\\\\\\\\n      State.update({ data: data, handler: handler });\\\\\\\\n    }\\\\\\\\n  }, [data, handler]);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"card-header\\\\\\\\\\\\\\\" style={{ position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <div>\\\\\\\\n            <ul class=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\">\\\\\\\\n              <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class={`nav-link ${\\\\\\\\n                    state.selectedTab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  }`}\\\\\\\\n                  onClick={() =>\\\\\\\\n                    State.update({ selectedTab: \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\", autoFocus: true })\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  Write\\\\\\\\n                </button>\\\\\\\\n              </li>\\\\\\\\n              <li class=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\">\\\\\\\\n                <button\\\\\\\\n                  class={`nav-link ${\\\\\\\\n                    state.selectedTab === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  }`}\\\\\\\\n                  onClick={() => State.update({ selectedTab: \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" })}\\\\\\\\n                >\\\\\\\\n                  Preview\\\\\\\\n                </button>\\\\\\\\n              </li>\\\\\\\\n            </ul>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {state.selectedTab === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? (\\\\\\\\n          <>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.SimpleMDE\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                data: { handler: state.handler, content: state.data },\\\\\\\\n                onChange: (content) => {\\\\\\\\n                  State.update({ data: content, handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\" });\\\\\\\\n                },\\\\\\\\n                placeholder: placeholder,\\\\\\\\n                height,\\\\\\\\n                embeddCSS: embeddCSS || EmbeddCSS,\\\\\\\\n                showAutoComplete: autocompleteEnabled,\\\\\\\\n                showProposalIdAutoComplete: showProposalIdAutoComplete,\\\\\\\\n                autoFocus: state.autoFocus,\\\\\\\\n                onChangeKeyup: onChangeKeyup,\\\\\\\\n                sortedRelevantUsers,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card-body\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                text: state.data,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn Compose(props);\\\\\\\\n\"}, \"devhub.components.molecule.SimpleMDE\": {\"\": \"/**\\\\\\\\n * iframe embedding a SimpleMDE component\\\\\\\\n * https://github.com/sparksuite/simplemde-markdown-editor\\\\\\\\n */\\\\\\\\nconst { getLinkUsingCurrentGateway } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\"\\\\\\\\n) || { getLinkUsingCurrentGateway: () => {} };\\\\\\\\nconst data = props.data;\\\\\\\\nconst onChange = props.onChange ?? (() => {});\\\\\\\\nconst onChangeKeyup = props.onChangeKeyup ?? (() => {}); // in case where we want immediate action\\\\\\\\nconst height = props.height ?? \\\\\\\\\\\\\\\"390\\\\\\\\\\\\\\\";\\\\\\\\nconst className = props.className ?? \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\";\\\\\\\\nconst embeddCSS = props.embeddCSS;\\\\\\\\nconst sortedRelevantUsers = props.sortedRelevantUsers || [];\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  iframeHeight: height,\\\\\\\\n  message: props.data,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst profilesData = Social.get(\\\\\\\\\\\\\\\"*/profile/name\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\nconst followingData = Social.get(\\\\\\\\n  `${context.accountId}/graph/follow/**`,\\\\\\\\n  \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\n// SIMPLEMDE CONFIG //\\\\\\\\nconst fontFamily = props.fontFamily ?? \\\\\\\\\\\\\\\"sans-serif\\\\\\\\\\\\\\\";\\\\\\\\nconst alignToolItems = props.alignToolItems ?? \\\\\\\\\\\\\\\"right\\\\\\\\\\\\\\\";\\\\\\\\nconst placeholder = props.placeholder ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst showAccountAutoComplete = props.showAutoComplete ?? false;\\\\\\\\nconst showProposalIdAutoComplete = props.showProposalIdAutoComplete ?? false;\\\\\\\\nconst autoFocus = props.autoFocus ?? false;\\\\\\\\n\\\\\\\\nconst queryName =\\\\\\\\n  \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_prod_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n${queryName}(\\\\\\\\n  offset: $offset\\\\\\\\n  limit: $limit\\\\\\\\n  order_by: {proposal_id: desc}\\\\\\\\n  where: $where\\\\\\\\n) {\\\\\\\\n  name\\\\\\\\n  proposal_id\\\\\\\\n}\\\\\\\\n}`;\\\\\\\\n\\\\\\\\nconst proposalLink = getLinkUsingCurrentGateway(\\\\\\\\n  `devhub.near/widget/app?page=proposal&id=`\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst code = `\\\\\\\\n<!doctype html>\\\\\\\\n<html>\\\\\\\\n  <head>\\\\\\\\n  <meta charset=\\\\\\\\\\\\\\\"utf-8\\\\\\\\\\\\\\\">\\\\\\\\n  <meta name=\\\\\\\\\\\\\\\"viewport\\\\\\\\\\\\\\\" content=\\\\\\\\\\\\\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\\\\\\\\\\\\\">\\\\\\\\n  <style>\\\\\\\\n  body {  \\\\\\\\n      margin: auto;\\\\\\\\n      font-family: ${fontFamily};\\\\\\\\n      overflow: visible;\\\\\\\\n      font-size:14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    body {\\\\\\\\n      font-size: 12px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item:hover,\\\\\\\\n  .dropdown-item:focus {\\\\\\\\n    background-color:rgb(0, 236, 151) !important;\\\\\\\\n    color:white !important;\\\\\\\\n    outline: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n      text-align: ${alignToolItems};\\\\\\\\n  }\\\\\\\\n  \\\\\\\\n  .CodeMirror {\\\\\\\\n    min-height:200px !important; // for autocomplete to be visble \\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .CodeMirror-scroll {\\\\\\\\n    min-height:200px !important; // for autocomplete to be visble \\\\\\\\n  }\\\\\\\\n\\\\\\\\n  ${embeddCSS}\\\\\\\\n\\\\\\\\n  </style>\\\\\\\\n  <link rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css\\\\\\\\\\\\\\\">\\\\\\\\n  <link rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/highlight.js/latest/styles/github.min.css\\\\\\\\\\\\\\\">\\\\\\\\n  <link href=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\\\\\\\\\\\\\\\" rel=\\\\\\\\\\\\\\\"stylesheet\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\">\\\\\\\\n</head>\\\\\\\\n<body>\\\\\\\\n<div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n  <button style=\\\\\\\\\\\\\\\"display: none\\\\\\\\\\\\\\\" type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\" data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n    Dropdown button\\\\\\\\n  </button>\\\\\\\\n\\\\\\\\n  <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"mentiondropdown\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\"position: absolute;\\\\\\\\\\\\\\\">\\\\\\\\n</div>\\\\\\\\n<div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n  <button style=\\\\\\\\\\\\\\\"display: none\\\\\\\\\\\\\\\" type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\" data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n    Dropdown button\\\\\\\\n  </button>\\\\\\\\n  <ul class=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"referencedropdown\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\"position: absolute;\\\\\\\\\\\\\\\">\\\\\\\\n</div>\\\\\\\\n</ul>\\\\\\\\n\\\\\\\\n<textarea></textarea>\\\\\\\\n\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script src=\\\\\\\\\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js\\\\\\\\\\\\\\\" integrity=\\\\\\\\\\\\\\\"sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V\\\\\\\\\\\\\\\" crossorigin=\\\\\\\\\\\\\\\"anonymous\\\\\\\\\\\\\\\"></script>\\\\\\\\n<script>\\\\\\\\nlet codeMirrorInstance;\\\\\\\\nlet isEditorInitialized = false;\\\\\\\\nlet followingData = {};\\\\\\\\nlet profilesData = {};\\\\\\\\nlet proposalLink = \\\\\\\\\\\\'\\\\\\\\\\\\';\\\\\\\\nlet query = \\\\\\\\\\\\'\\\\\\\\\\\\';\\\\\\\\nlet showAccountAutoComplete = ${showAccountAutoComplete};\\\\\\\\nlet showProposalIdAutoComplete = ${showProposalIdAutoComplete};\\\\\\\\n\\\\\\\\nfunction getSuggestedAccounts(term) {\\\\\\\\n  let results = [];\\\\\\\\n\\\\\\\\n  term = (term || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").toLowerCase();\\\\\\\\n  let limit = 5;\\\\\\\\n  if (term.length < 2) {\\\\\\\\n   results = [${sortedRelevantUsers\\\\\\\\n     .map((u) => \\\\\\\\\\\\\\\"{accountId:\\\\\\\\\\\\'\\\\\\\\\\\\\\\" + u + \\\\\\\\\\\\\\\"\\\\\\\\\\\\', score: 60}\\\\\\\\\\\\\\\")\\\\\\\\n     .join(\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\")}];\\\\\\\\n    limit = ${5 + sortedRelevantUsers.length};\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const profiles = Object.entries(profilesData);\\\\\\\\n\\\\\\\\n  for (let i = 0; i < profiles.length; i++) {\\\\\\\\n    let score = 0;\\\\\\\\n    const accountId = profiles[i][0];\\\\\\\\n    const accountIdSearch = profiles[i][0].replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").toLowerCase();\\\\\\\\n    const nameSearch = (profiles[i][1]?.profile?.name || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n      .replace(/\\\\\\\\\\\\\\\\W/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n      .toLowerCase();\\\\\\\\n    const accountIdSearchIndex = accountIdSearch.indexOf(term);\\\\\\\\n    const nameSearchIndex = nameSearch.indexOf(term);\\\\\\\\n\\\\\\\\n    if (accountIdSearchIndex > -1 || nameSearchIndex > -1) {\\\\\\\\n      score += 10;\\\\\\\\n\\\\\\\\n      if (accountIdSearchIndex === 0) {\\\\\\\\n        score += 10;\\\\\\\\n      }\\\\\\\\n      if (nameSearchIndex === 0) {\\\\\\\\n        score += 10;\\\\\\\\n      }\\\\\\\\n      if (followingData[accountId] === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n        score += 30;\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      results.push({\\\\\\\\n        accountId,\\\\\\\\n        score,\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  results.sort((a, b) => b.score - a.score);\\\\\\\\n  results = results.slice(0, limit);\\\\\\\\n\\\\\\\\n  return results;\\\\\\\\n}\\\\\\\\n\\\\\\\\nasync function asyncFetch(endpoint, { method, headers, body }) {\\\\\\\\n  try {\\\\\\\\n    const response = await fetch(endpoint, {\\\\\\\\n      method: method,\\\\\\\\n      headers: headers,\\\\\\\\n      body: body\\\\\\\\n    });\\\\\\\\n\\\\\\\\n    if (!response.ok) {\\\\\\\\n      throw new Error(\\\\\\\\\\\\\\\"HTTP error!\\\\\\\\\\\\\\\");\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return await response.json();\\\\\\\\n  } catch (error) {\\\\\\\\n    console.error(\\\\\\\\\\\\'Error fetching data:\\\\\\\\\\\\', error);\\\\\\\\n    throw error;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractNumbers(str) {\\\\\\\\n  let numbers = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  for (let i = 0; i < str.length; i++) {\\\\\\\\n    if (!isNaN(str[i])) {\\\\\\\\n      numbers += str[i];\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return numbers;\\\\\\\\n};\\\\\\\\n\\\\\\\\nasync function getSuggestedProposals(id) {\\\\\\\\n  let results = [];\\\\\\\\n  const variables = {\\\\\\\\n    limit: 5,\\\\\\\\n    offset: 0,\\\\\\\\n    where: {},\\\\\\\\n  };\\\\\\\\n  if (id) {\\\\\\\\n    const proposalId = extractNumbers(id);\\\\\\\\n    if (proposalId) {\\\\\\\\n      variables[\\\\\\\\\\\\\\\"where\\\\\\\\\\\\\\\"] = { proposal_id: { _eq: id } };\\\\\\\\n    } else {\\\\\\\\n      variables[\\\\\\\\\\\\\\\"where\\\\\\\\\\\\\\\"] = {\\\\\\\\n        _or: [\\\\\\\\n          { name: { _iregex: id } },\\\\\\\\n          { summary: { _iregex: id } },\\\\\\\\n          { description: { _iregex: id } },\\\\\\\\n        ],\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  await asyncFetch(\\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co/v1/graphql\\\\\\\\\\\\\\\", {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"polyprogrammist_near\\\\\\\\\\\\\\\" },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: query,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\",\\\\\\\\n    }),\\\\\\\\n  })\\\\\\\\n    .then((res) => {\\\\\\\\n      const proposals =\\\\\\\\n        res?.data?.[\\\\\\\\n          \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_prod_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\"\\\\\\\\n        ];\\\\\\\\n      results = proposals;\\\\\\\\n    })\\\\\\\\n    .catch((error) => {\\\\\\\\n      console.error(error);\\\\\\\\n    });\\\\\\\\n  return results;\\\\\\\\n};\\\\\\\\n\\\\\\\\n// Initializes SimpleMDE element and attaches to text-area\\\\\\\\nconst simplemde = new SimpleMDE({\\\\\\\\n  forceSync: true,\\\\\\\\n  toolbar: [\\\\\\\\n    \\\\\\\\\\\\\\\"heading\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"bold\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"italic\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"|\\\\\\\\\\\\\\\", // adding | creates a divider in the toolbar\\\\\\\\n    \\\\\\\\\\\\\\\"quote\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"link\\\\\\\\\\\\\\\",\\\\\\\\n  ],\\\\\\\\n  placeholder: \\\\\\\\\\\\\\\\`${placeholder}\\\\\\\\\\\\\\\\`,\\\\\\\\n  initialValue: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  insertTexts: {\\\\\\\\n    link: [\\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"]()\\\\\\\\\\\\\\\"],\\\\\\\\n  },\\\\\\\\n  spellChecker: false,\\\\\\\\n  renderingConfig: {\\\\\\\\n\\\\\\\\t\\\\\\\\tsingleLineBreaks: false,\\\\\\\\n\\\\\\\\t\\\\\\\\tcodeSyntaxHighlighting: true,\\\\\\\\n\\\\\\\\t},\\\\\\\\n  autofocus:${autoFocus}\\\\\\\\n});\\\\\\\\n\\\\\\\\ncodeMirrorInstance = simplemde.codemirror;\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Sends message to Widget to update content\\\\\\\\n */\\\\\\\\nconst updateContent = () => {\\\\\\\\n  const content = simplemde.value();\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\", content }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n};\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * Sends message to Widget to update iframe height\\\\\\\\n */\\\\\\\\nconst updateIframeHeight = () => {\\\\\\\\n  const iframeHeight = document.body.scrollHeight;\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"resize\\\\\\\\\\\\\\\", height: iframeHeight }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n};\\\\\\\\n\\\\\\\\n// On Change\\\\\\\\nsimplemde.codemirror.on(\\\\\\\\\\\\'blur\\\\\\\\\\\\', () => {\\\\\\\\n  updateContent();\\\\\\\\n});\\\\\\\\n\\\\\\\\nsimplemde.codemirror.on(\\\\\\\\\\\\'keyup\\\\\\\\\\\\', () => {\\\\\\\\n  updateIframeHeight();\\\\\\\\n  const content = simplemde.value();\\\\\\\\n  window.parent.postMessage({ handler: \\\\\\\\\\\\\\\"updateOnKeyup\\\\\\\\\\\\\\\", content }, \\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\\");\\\\\\\\n});\\\\\\\\n\\\\\\\\n\\\\\\\\nif (showAccountAutoComplete) {\\\\\\\\n  let mentionToken;\\\\\\\\n  let mentionCursorStart;\\\\\\\\n  const dropdown = document.getElementById(\\\\\\\\\\\\\\\"mentiondropdown\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keydown\\\\\\\\\\\\\\\", () => {\\\\\\\\n    if (mentionToken && event.key === \\\\\\\\\\\\'ArrowDown\\\\\\\\\\\\') {\\\\\\\\n      dropdown.querySelector(\\\\\\\\\\\\'button\\\\\\\\\\\\').focus();\\\\\\\\n      event.preventDefault();\\\\\\\\n      return false;\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keyup\\\\\\\\\\\\\\\", (cm, event) => {\\\\\\\\n    const cursor = cm.getCursor();\\\\\\\\n    const token = cm.getTokenAt(cursor);\\\\\\\\n\\\\\\\\n    const createMentionDropDownOptions = () => {\\\\\\\\n      const mentionInput = cm.getRange(mentionCursorStart, cursor);\\\\\\\\n      dropdown.innerHTML = getSuggestedAccounts(mentionInput)\\\\\\\\n      .map(\\\\\\\\n        (item) =>\\\\\\\\n          \\\\\\\\\\\\'<li><button class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\\\\\' + item?.accountId + \\\\\\\\\\\\'</button></li>\\\\\\\\\\\\'\\\\\\\\n      )\\\\\\\\n      .join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n      dropdown.querySelectorAll(\\\\\\\\\\\\\\\"li\\\\\\\\\\\\\\\").forEach((li) => {\\\\\\\\n        li.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", () => {\\\\\\\\n          const selectedText = li.textContent.trim();\\\\\\\\n          simplemde.codemirror.replaceRange(selectedText, mentionCursorStart, cursor);\\\\\\\\n          mentionToken = null;\\\\\\\\n          dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n          cm.focus();\\\\\\\\n        });\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    // show dropwdown only when @ is at first place or when there is a space before @\\\\\\\\n      if (!mentionToken && (token.string === \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\" && cursor.ch === 1 || token.string === \\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\" && cm.getTokenAt({line:cursor.line, ch: cursor.ch - 1}).string == \\\\\\\\\\\\' \\\\\\\\\\\\')) {\\\\\\\\n        mentionToken = token;\\\\\\\\n        mentionCursorStart = cursor;\\\\\\\\n        // Calculate cursor position relative to the iframe\\\\\\\\\\\\'s viewport\\\\\\\\n        const rect = cm.charCoords(cursor);\\\\\\\\n        const x = rect.left;\\\\\\\\n        const y = rect.bottom;\\\\\\\\n\\\\\\\\n        // Create dropdown with options\\\\\\\\n        dropdown.style.top = y + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n        dropdown.style.left = x + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n        createMentionDropDownOptions();\\\\\\\\n\\\\\\\\n        dropdown.classList.add(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        // Close dropdown on outside click\\\\\\\\n        document.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", function(event) {\\\\\\\\n            if (!dropdown.contains(event.target)) {\\\\\\\\n                mentionToken = null;\\\\\\\\n                dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            }\\\\\\\\n        });\\\\\\\\n    } else if (mentionToken && token.string.match(/[^@a-z0-9.]/)) {\\\\\\\\n        mentionToken = null;\\\\\\\\n        dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n    } else if (mentionToken) {\\\\\\\\n        createMentionDropDownOptions();\\\\\\\\n    }\\\\\\\\n});\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (showProposalIdAutoComplete) {\\\\\\\\n  let proposalId;\\\\\\\\n  let referenceCursorStart;\\\\\\\\n  const dropdown = document.getElementById(\\\\\\\\\\\\\\\"referencedropdown\\\\\\\\\\\\\\\");\\\\\\\\n  const loader = document.createElement(\\\\\\\\\\\\'div\\\\\\\\\\\\');\\\\\\\\n  loader.className = \\\\\\\\\\\\'loader\\\\\\\\\\\\';\\\\\\\\n  loader.textContent = \\\\\\\\\\\\'Loading...\\\\\\\\\\\\';\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keydown\\\\\\\\\\\\\\\", () => {\\\\\\\\n    if (proposalId && event.key === \\\\\\\\\\\\'ArrowDown\\\\\\\\\\\\') {\\\\\\\\n      dropdown.querySelector(\\\\\\\\\\\\'button\\\\\\\\\\\\').focus();\\\\\\\\n      event.preventDefault();\\\\\\\\n      return false;\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  simplemde.codemirror.on(\\\\\\\\\\\\\\\"keyup\\\\\\\\\\\\\\\", (cm, event) => {\\\\\\\\n    const cursor = cm.getCursor();\\\\\\\\n    const token = cm.getTokenAt(cursor);\\\\\\\\n\\\\\\\\n    const createReferenceDropDownOptions = async () => {\\\\\\\\n      try {\\\\\\\\n        const proposalIdInput = cm.getRange(referenceCursorStart, cursor);\\\\\\\\n        dropdown.innerHTML = \\\\\\\\\\\\'\\\\\\\\\\\\'; // Clear previous content\\\\\\\\n        dropdown.appendChild(loader); // Show loader\\\\\\\\n\\\\\\\\n        const suggestedProposals = await getSuggestedProposals(proposalIdInput);\\\\\\\\n        dropdown.innerHTML = suggestedProposals\\\\\\\\n        .map(\\\\\\\\n          (item) =>\\\\\\\\n            \\\\\\\\\\\\'<li><button class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\\\\\' + \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" + item?.proposal_id + \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" + item.name + \\\\\\\\\\\\'</button></li>\\\\\\\\\\\\'\\\\\\\\n        )\\\\\\\\n        .join(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        dropdown.querySelectorAll(\\\\\\\\\\\\\\\"li\\\\\\\\\\\\\\\").forEach((li) => {\\\\\\\\n          li.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", () => {\\\\\\\\n            const selectedText = li.textContent.trim();\\\\\\\\n            const startIndex = selectedText.indexOf(\\\\\\\\\\\\'#\\\\\\\\\\\\') + 1; \\\\\\\\n            const endIndex = selectedText.indexOf(\\\\\\\\\\\\' \\\\\\\\\\\\', startIndex);\\\\\\\\n            const id = endIndex !== -1 ? selectedText.substring(startIndex, endIndex) : selectedText.substring(startIndex);\\\\\\\\n            const link = proposalLink + id;\\\\\\\\n            const adjustedStart = {\\\\\\\\n              line: referenceCursorStart.line,\\\\\\\\n              ch: referenceCursorStart.ch - 1\\\\\\\\n            };\\\\\\\\n            simplemde.codemirror.replaceRange(\\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\" + selectedText + \\\\\\\\\\\\\\\"]\\\\\\\\\\\\\\\" + \\\\\\\\\\\\\\\"(\\\\\\\\\\\\\\\" + link + \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", adjustedStart, cursor);\\\\\\\\n            proposalId = null;\\\\\\\\n            dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            cm.focus();\\\\\\\\n          });\\\\\\\\n        });\\\\\\\\n      } catch (error) {\\\\\\\\n        console.error(\\\\\\\\\\\\'Error fetching data:\\\\\\\\\\\\', error);\\\\\\\\n        // Handle error: Remove loader\\\\\\\\n        dropdown.innerHTML = \\\\\\\\\\\\'\\\\\\\\\\\\'; // Clear previous content\\\\\\\\n      } finally {\\\\\\\\n        // Remove loader\\\\\\\\n        dropdown.removeChild(loader);\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    // show dropwdown only when there is space before # or it\\\\\\\\\\\\'s first char\\\\\\\\n      if (!proposalId && (token.string === \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" && cursor.ch === 1 || token.string === \\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\" && cm.getTokenAt({line:cursor.line, ch: cursor.ch - 1}).string == \\\\\\\\\\\\' \\\\\\\\\\\\')) {\\\\\\\\n        proposalId = token;\\\\\\\\n        referenceCursorStart = cursor;\\\\\\\\n        // Calculate cursor position relative to the iframe\\\\\\\\\\\\'s viewport\\\\\\\\n        const rect = cm.charCoords(cursor);\\\\\\\\n        const x = rect.left;\\\\\\\\n        const y = rect.bottom;\\\\\\\\n\\\\\\\\n        // Create dropdown with options\\\\\\\\n        dropdown.style.top = y + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n        dropdown.style.left = x + \\\\\\\\\\\\\\\"px\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n        createReferenceDropDownOptions();\\\\\\\\n\\\\\\\\n        dropdown.classList.add(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        // Close dropdown on outside click\\\\\\\\n        document.addEventListener(\\\\\\\\\\\\\\\"click\\\\\\\\\\\\\\\", function(event) {\\\\\\\\n            if (!dropdown.contains(event.target)) {\\\\\\\\n              proposalId = null;\\\\\\\\n                dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n            }\\\\\\\\n        });\\\\\\\\n    } else if (proposalId && (token.string.match(/[^#a-z0-9.]/) || !token.string)) {\\\\\\\\n      proposalId = null;\\\\\\\\n      dropdown.classList.remove(\\\\\\\\\\\\\\\"show\\\\\\\\\\\\\\\");\\\\\\\\n    } else if (proposalId) {\\\\\\\\n      createReferenceDropDownOptions();\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n\\\\\\\\n}\\\\\\\\n\\\\\\\\nwindow.addEventListener(\\\\\\\\\\\\\\\"message\\\\\\\\\\\\\\\", (event) => {\\\\\\\\n  if (!isEditorInitialized && event.data !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n    simplemde.value(event.data.content);\\\\\\\\n    isEditorInitialized = true;\\\\\\\\n  } else {\\\\\\\\n    if (event.data.handler === \\\\\\\\\\\\'refreshEditor\\\\\\\\\\\\' || event.data.handler === \\\\\\\\\\\\'committed\\\\\\\\\\\\') {\\\\\\\\n      codeMirrorInstance.getDoc().setValue(event.data.content);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  if (event.data.followingData) {\\\\\\\\n    followingData = event.data.followingData;\\\\\\\\n  }\\\\\\\\n  if (event.data.profilesData) {\\\\\\\\n    profilesData = JSON.parse(event.data.profilesData);\\\\\\\\n  }\\\\\\\\n  if (event.data.query) {\\\\\\\\n    query = event.data.query;\\\\\\\\n  }\\\\\\\\n  if (event.data.proposalLink) {\\\\\\\\n    proposalLink = event.data.proposalLink;\\\\\\\\n  }\\\\\\\\n});\\\\\\\\n</script>\\\\\\\\n</body>\\\\\\\\n</html>\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <iframe\\\\\\\\n    className={className}\\\\\\\\n    style={{\\\\\\\\n      height: `${state.iframeHeight}px`,\\\\\\\\n      maxHeight: \\\\\\\\\\\\\\\"410px\\\\\\\\\\\\\\\",\\\\\\\\n      minHeight: \\\\\\\\\\\\\\\"250px\\\\\\\\\\\\\\\",\\\\\\\\n    }}\\\\\\\\n    srcDoc={code}\\\\\\\\n    message={{\\\\\\\\n      content: props.data?.content ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n      followingData,\\\\\\\\n      profilesData: JSON.stringify(profilesData),\\\\\\\\n      query: query,\\\\\\\\n      handler: props.data.handler,\\\\\\\\n      proposalLink: proposalLink,\\\\\\\\n    }}\\\\\\\\n    onMessage={(e) => {\\\\\\\\n      switch (e.handler) {\\\\\\\\n        case \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            onChange(e.content);\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n        case \\\\\\\\\\\\\\\"resize\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            const offset = 10;\\\\\\\\n            State.update({ iframeHeight: e.height + offset });\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n        case \\\\\\\\\\\\\\\"updateOnKeyup\\\\\\\\\\\\\\\":\\\\\\\\n          {\\\\\\\\n            onChangeKeyup(e.content);\\\\\\\\n          }\\\\\\\\n          break;\\\\\\\\n      }\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.ComposeComment\": {\"\": \"const proposalId = props.id;\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"COMMENT_DRAFT\\\\\\\\\\\\\\\" + proposalId;\\\\\\\\nlet draftComment = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst ComposeEmbeddCSS = `\\\\\\\\n  .CodeMirror {\\\\\\\\n    border: none !important;\\\\\\\\n    min-height: 50px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .editor-toolbar {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .CodeMirror-scroll{\\\\\\\\n    min-height: 50px !important;\\\\\\\\n    max-height: 300px !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\nconst notifyAccountId = props.notifyAccountId;\\\\\\\\nconst accountId = context.accountId;\\\\\\\\nconst item = props.item;\\\\\\\\nconst [allowGetDraft, setAllowGetDraft] = useState(true);\\\\\\\\nconst [comment, setComment] = useState(null);\\\\\\\\nconst [isTxnCreated, setTxnCreated] = useState(false);\\\\\\\\nconst [handler, setHandler] = useState(\\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\"); // to update editor state on draft and txn approval\\\\\\\\nconst [showCommentToast, setCommentToast] = useState(false);\\\\\\\\n\\\\\\\\nif (allowGetDraft) {\\\\\\\\n  draftComment = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (draftComment) {\\\\\\\\n    setComment(draftComment);\\\\\\\\n    setAllowGetDraft(false);\\\\\\\\n    setHandler(\\\\\\\\\\\\\\\"refreshEditor\\\\\\\\\\\\\\\");\\\\\\\\n  }\\\\\\\\n}, [draftComment]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (draftComment === comment) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, comment);\\\\\\\\n  }, 1000);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [comment]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (handler === \\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\") {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    setHandler(\\\\\\\\\\\\\\\"update\\\\\\\\\\\\\\\");\\\\\\\\n  }, 3000);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [handler]);\\\\\\\\n\\\\\\\\nif (!accountId) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{\\\\\\\\n        marginLeft: 10,\\\\\\\\n        backgroundColor: \\\\\\\\\\\\\\\"#ECF8FB\\\\\\\\\\\\\\\",\\\\\\\\n        border: \\\\\\\\\\\\\\\"1px solid #E2E6EC\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1 p-4 rounded-2 flex-wrap flex-md-nowrap\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Link to=\\\\\\\\\\\\\\\"https://near.org/signup\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"grey-btn\\\\\\\\\\\\\\\" },\\\\\\\\n            label: \\\\\\\\\\\\\\\"Sign up\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </Link>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">to join this conversation.</div>\\\\\\\\n      <div>Already have an account?</div>\\\\\\\\n      <a className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\" href=\\\\\\\\\\\\\\\"https://near.org/signin\\\\\\\\\\\\\\\">\\\\\\\\n        Log in to comment\\\\\\\\n      </a>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractMentions(text) {\\\\\\\\n  const mentionRegex =\\\\\\\\n    /@((?:(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+\\\\\\\\\\\\\\\\.)*(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+)/gi;\\\\\\\\n  mentionRegex.lastIndex = 0;\\\\\\\\n  const accountIds = new Set();\\\\\\\\n  for (const match of text.matchAll(mentionRegex)) {\\\\\\\\n    if (\\\\\\\\n      !/[\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index - 1)) &&\\\\\\\\n      !/[/\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index + match[0].length)) &&\\\\\\\\n      match[1].length >= 2 &&\\\\\\\\n      match[1].length <= 64\\\\\\\\n    ) {\\\\\\\\n      accountIds.add(match[1].toLowerCase());\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return [...accountIds];\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractTagNotifications(text, item) {\\\\\\\\n  return extractMentions(text || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n    .filter((accountId) => accountId !== context.accountId)\\\\\\\\n    .map((accountId) => ({\\\\\\\\n      key: accountId,\\\\\\\\n      value: {\\\\\\\\n        type: \\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\n        item,\\\\\\\\n      },\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction composeData() {\\\\\\\\n  setTxnCreated(true);\\\\\\\\n  const data = {\\\\\\\\n    post: {\\\\\\\\n      comment: JSON.stringify({\\\\\\\\n        type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n        text: comment,\\\\\\\\n        item,\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n    index: {\\\\\\\\n      comment: JSON.stringify({\\\\\\\\n        key: item,\\\\\\\\n        value: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const notifications = extractTagNotifications(comment, {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  if (notifyAccountId && notifyAccountId !== context.accountId) {\\\\\\\\n    notifications.push({\\\\\\\\n      key: notifyAccountId,\\\\\\\\n      value: {\\\\\\\\n        type: \\\\\\\\\\\\\\\"proposal/reply\\\\\\\\\\\\\\\",\\\\\\\\n        item,\\\\\\\\n        proposal: proposalId,\\\\\\\\n        widgetAccountId: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n      },\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  if (notifications.length) {\\\\\\\\n    data.index.notify = JSON.stringify(\\\\\\\\n      notifications.length > 1 ? notifications : notifications[0]\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Social.set(data, {\\\\\\\\n    force: true,\\\\\\\\n    onCommit: () => {\\\\\\\\n      setCommentToast(true);\\\\\\\\n      setComment(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n      setHandler(\\\\\\\\\\\\\\\"committed\\\\\\\\\\\\\\\");\\\\\\\\n      setTxnCreated(false);\\\\\\\\n    },\\\\\\\\n    onCancel: () => {\\\\\\\\n      setTxnCreated(false);\\\\\\\\n    },\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes && comment) {\\\\\\\\n    setComment(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"comment-btn-spinner spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Compose = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Compose\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        data: comment,\\\\\\\\n        onChangeKeyup: setComment,\\\\\\\\n        autocompleteEnabled: true,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Add your comment here...\\\\\\\\\\\\\\\",\\\\\\\\n        height: \\\\\\\\\\\\\\\"250\\\\\\\\\\\\\\\",\\\\\\\\n        embeddCSS: ComposeEmbeddCSS,\\\\\\\\n        handler: handler,\\\\\\\\n        showProposalIdAutoComplete: true,\\\\\\\\n        sortedRelevantUsers: props.sortedRelevantUsers,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [draftComment, handler, props.sortedRelevantUsers]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"near/widget/DIG.Toast\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        title: \\\\\\\\\\\\\\\"Comment Submitted Successfully\\\\\\\\\\\\\\\",\\\\\\\\n        type: \\\\\\\\\\\\\\\"success\\\\\\\\\\\\\\\",\\\\\\\\n        open: showCommentToast,\\\\\\\\n        onOpenChange: (v) => setCommentToast(v),\\\\\\\\n        trigger: <></>,\\\\\\\\n        providerProps: { duration: 3000 },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        accountId: accountId,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"mt-1\\\\\\\\\\\\\\\">Add a comment</b>\\\\\\\\n      {Compose}\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-content-center justify-content-end\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            label: isTxnCreated ? LoadingButtonSpinner : \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n            [\\\\\\\\\\\\\\\"data-testid\\\\\\\\\\\\\\\"]: \\\\\\\\\\\\\\\"compose-comment\\\\\\\\\\\\\\\",\\\\\\\\n            disabled: !comment || isTxnCreated,\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"green-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n            onClick: () => {\\\\\\\\n              composeData();\\\\\\\\n            },\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.0272085498716e+21
    }
  },
  {
    "id": "6101480386",
    "receipt_id": "7sCtveAk1TjFfwguKD7HQxoWxasTJE45gzDoQwGUuV7L",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8frpyrBxKAD3AfDZwCQQiipE1BGwjAzVkuWUQdpGH2nf",
      "block_height": 122113459,
      "block_timestamp": 1719501785384127200
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "CZ5byLkY8QofJA6GYDGQVPXPmw1AS9anjq6cpeKVoEoL",
    "included_in_block_hash": "8Sx3t75oUbUB9CNSRKVQ5EtUE4WR3Hrid7JoShTNfGcV",
    "block_timestamp": "1719501783283680690",
    "block": {
      "block_height": 122113457
    },
    "receipt_conversion_tokens_burnt": "48706166823800000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.862005062277364e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.0272085498716e+21
    }
  },
  {
    "id": "6101799577",
    "receipt_id": "E7CRhGsGdHh91ChV45LmyoABz3gQjeX2sTZdNQnt8YQA",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "CrgdYqAuTcJzhkZfdpfuUSySNahQCBW1r6KnRqFcqD3e",
      "block_height": 122114121,
      "block_timestamp": 1719502617421431600
    },
    "receipt_outcome": {
      "gas_burnt": 43084237333317,
      "tokens_burnt": 4.3084237333317e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "65pRnmRzeRC53myqM7NmGn2rPKq3YC6HyA3NQQZ3YiM5",
    "included_in_block_hash": "A94ArBvU2Kp9AvXGWtPwBNLnmjkuVWkGJx8mfB8dYBfW",
    "block_timestamp": "1719502615955986841",
    "block": {
      "block_height": 122114120
    },
    "receipt_conversion_tokens_burnt": "59721272081400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 4.3084237333317e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.page.addon\": {\"\": \"const Container = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  height: 100%;\\\\\\\\n  width: 100%;\\\\\\\\n  position: relative;\\\\\\\\n  padding: 0 1rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    padding: 0 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Content = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  padding: 20px;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst SettingsButton = styled.button`\\\\\\\\n  position: absolute;\\\\\\\\n  top: -100px;\\\\\\\\n  right: 10px;\\\\\\\\n\\\\\\\\n  background-color: #fff;\\\\\\\\n  display: flex;\\\\\\\\n  padding: 14px 16px;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 16px;\\\\\\\\n  width: 50px;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  border-radius: 4px;\\\\\\\\n  border: 1px solid #00ec97;\\\\\\\\n\\\\\\\\n  z-index: 10;\\\\\\\\n\\\\\\\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    transform: translateY(2px);\\\\\\\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:active {\\\\\\\\n    transform: translateY(0);\\\\\\\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CenteredMessage = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n  height: ${(p) => p.height ?? \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\"};\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst { addon, permissions, handle, addonView, setAddonView } = props;\\\\\\\\n\\\\\\\\nconst { getAllAddons, setCommunityAddon } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!getAllAddons || !setCommunityAddon) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst availableAddons = getAllAddons();\\\\\\\\n\\\\\\\\nlet addonMatch = null; // If availableAddons is not an array, set addonMatch to null\\\\\\\\nif (\\\\\\\\n  Array.isArray(availableAddons) &&\\\\\\\\n  availableAddons !== null &&\\\\\\\\n  availableAddons !== undefined\\\\\\\\n) {\\\\\\\\n  addonMatch = availableAddons.find((it) => it.id === addon.addon_id);\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (!addonMatch) {\\\\\\\\n  return (\\\\\\\\n    <CenteredMessage height={\\\\\\\\\\\\\\\"384px\\\\\\\\\\\\\\\"}>\\\\\\\\n      <h2>Addon with id: \\\\\\\\\\\\\\\"{addon.addon_id}\\\\\\\\\\\\\\\" not found.</h2>\\\\\\\\n    </CenteredMessage>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst config = JSON.parse(addon.parameters || \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst ButtonRow = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  justify-content: space-between;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst BannerWrapper = styled.div`\\\\\\\\n  background-color: #ffd2d2;\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\" !== \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\") {\\\\\\\\n  addonMatch.configurator_widget = addonMatch.configurator_widget.replace(\\\\\\\\n    \\\\\\\\\\\\\\\"devhub.near/\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"devhub.near/\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n  addonMatch.view_widget = addonMatch.view_widget.replace(\\\\\\\\n    \\\\\\\\\\\\\\\"devhub.near/\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"devhub.near/\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    {permissions.can_configure && addonMatch.configurator_widget !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" && (\\\\\\\\n      <SettingsButton\\\\\\\\n        onClick={() =>\\\\\\\\n          setAddonView(addonView === \\\\\\\\\\\\\\\"configure\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"viewer\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"configure\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n        aria-label={\\\\\\\\n          addonView === \\\\\\\\\\\\\\\"configure\\\\\\\\\\\\\\\"\\\\\\\\n            ? \\\\\\\\\\\\\\\"Close configuration\\\\\\\\\\\\\\\"\\\\\\\\n            : \\\\\\\\\\\\\\\"Open configuration\\\\\\\\\\\\\\\"\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        {addonView === \\\\\\\\\\\\\\\"configure\\\\\\\\\\\\\\\" ? (\\\\\\\\n          <span\\\\\\\\n            className=\\\\\\\\\\\\\\\"bi bi-x\\\\\\\\\\\\\\\"\\\\\\\\n            data-testid=\\\\\\\\\\\\\\\"configure-addon-button-x\\\\\\\\\\\\\\\"\\\\\\\\n          ></span>\\\\\\\\n        ) : (\\\\\\\\n          <span\\\\\\\\n            className=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"\\\\\\\\n            data-testid=\\\\\\\\\\\\\\\"configure-addon-button\\\\\\\\\\\\\\\"\\\\\\\\n          ></span>\\\\\\\\n        )}\\\\\\\\n      </SettingsButton>\\\\\\\\n    )}\\\\\\\\n    {permissions.can_configure && config === null ? (\\\\\\\\n      <BannerWrapper className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center mb-4 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>\\\\\\\\n          <i class=\\\\\\\\\\\\\\\"bi bi-exclamation-triangle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n        </div>\\\\\\\\n        <div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Addon Misconfiguration</div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">\\\\\\\\n            It appears that this addon is missing some required parameters.\\\\\\\\n            Please contact a DevHub administrator for assistance.\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </BannerWrapper>\\\\\\\\n    ) : null}\\\\\\\\n    <Content>\\\\\\\\n      {addonView === \\\\\\\\\\\\\\\"configure\\\\\\\\\\\\\\\" ? (\\\\\\\\n        <Widget\\\\\\\\n          src={addonMatch.configurator_widget}\\\\\\\\n          props={{\\\\\\\\n            ...config,\\\\\\\\n            data: config,\\\\\\\\n            onSubmit: (data) => {\\\\\\\\n              setCommunityAddon({\\\\\\\\n                handle,\\\\\\\\n                addon: {\\\\\\\\n                  ...addon,\\\\\\\\n                  parameters: JSON.stringify(data),\\\\\\\\n                },\\\\\\\\n              });\\\\\\\\n            },\\\\\\\\n            handle, // this is temporary prop drilling until kanban and github are migrated\\\\\\\\n            permissions,\\\\\\\\n            communityAddonId: addon.id,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      ) : (\\\\\\\\n        <Widget\\\\\\\\n          src={addonMatch.view_widget}\\\\\\\\n          props={{\\\\\\\\n            ...config,\\\\\\\\n            data: config,\\\\\\\\n            handle,\\\\\\\\n            permissions,\\\\\\\\n            transactionHashes: props.transactionHashes,\\\\\\\\n            communityAddonId: addon.id,\\\\\\\\n            setAddonView,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      )}\\\\\\\\n    </Content>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.page.blogv2\": {\"\": \"const { id, community } = props;\\\\\\\\n\\\\\\\\nconst { getAccountCommunityPermissions } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n) || {\\\\\\\\n  getAccountCommunityPermissions: () => {},\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [showEditScreenData, setShowEditScreen] = useState(null);\\\\\\\\n\\\\\\\\nconst permissions = getAccountCommunityPermissions({\\\\\\\\n  account_id: context.accountId,\\\\\\\\n  community_handle: community,\\\\\\\\n}) || {\\\\\\\\n  can_configure: false,\\\\\\\\n  can_delete: false,\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (id && !showEditScreenData) {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.Blog\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        blogId: id,\\\\\\\\n        handle: community,\\\\\\\\n        template: (p) => (\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.Page\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              data: { ...p.data, id },\\\\\\\\n              onEdit: () => {\\\\\\\\n                setShowEditScreen({ ...p, data: { ...p.data, id } });\\\\\\\\n              },\\\\\\\\n              community,\\\\\\\\n              accountId: context.accountId,\\\\\\\\n              isAllowedToEdit: permissions.can_configure,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        ),\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst HeaderContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  width: 100%;\\\\\\\\n  height: 60px;\\\\\\\\n  padding: 1rem 3rem;\\\\\\\\n  align-items: center;\\\\\\\\n  flex-shrink: 0;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.h1`\\\\\\\\n  color: #555555;\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 500;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.24px;\\\\\\\\n  margin: 0;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst BlogContainer = styled.div`\\\\\\\\n  padding: 1rem 3rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst EditorContainer = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  width: 100%;\\\\\\\\n  padding: 20px;\\\\\\\\n  padding-top: 40px;\\\\\\\\n  .cancel-icon {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 0px;\\\\\\\\n    left: 30px;\\\\\\\\n    font-size: 18px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    display: flex;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .back-button {\\\\\\\\n    font-size: 18px;\\\\\\\\n    line-height: 25px;\\\\\\\\n    margin-left: 10px;\\\\\\\\n    justify-content: center;\\\\\\\\n    align-items: center;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (showEditScreenData) {\\\\\\\\n  return (\\\\\\\\n    <EditorContainer>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"cancel-icon\\\\\\\\\\\\\\\" onClick={() => setShowEditScreen(null)}>\\\\\\\\n        <i class=\\\\\\\\\\\\\\\"bi bi-arrow-left\\\\\\\\\\\\\\\"></i> <p className=\\\\\\\\\\\\\\\"back-button\\\\\\\\\\\\\\\">Back</p>\\\\\\\\n      </div>\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.Blog\\\\\\\\\\\\\\\"\\\\\\\\n        props={{\\\\\\\\n          blogId: id,\\\\\\\\n          handle: community,\\\\\\\\n          template: (p) => {\\\\\\\\n            return (\\\\\\\\n              <Widget\\\\\\\\n                src={`devhub.near/widget/devhub.entity.addon.blogv2.Configurator`}\\\\\\\\n                props={{\\\\\\\\n                  ...showEditScreenData,\\\\\\\\n                  handle: community,\\\\\\\\n                  communityAddonId: p.data.communityAddonId,\\\\\\\\n                  selectedBlog: { ...p.data, id },\\\\\\\\n                  permissions,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            );\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </EditorContainer>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget src={`devhub.near/widget/devhub.components.island.banner`} />\\\\\\\\n    <HeaderContainer>\\\\\\\\n      <Header>Blog</Header>\\\\\\\\n    </HeaderContainer>\\\\\\\\n    <BlogContainer>\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.Viewer\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          handle: community,\\\\\\\\n          hideTitle: true,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </BlogContainer>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.Feed\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!href) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    border-bottom: none !important;\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .green-btn {\\\\\\\\n      padding: 0.5rem 0.8rem !important;\\\\\\\\n      min-height: 32px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  .text-normal {\\\\\\\\n    font-weight: normal !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst FeedItem = ({ proposal, index }) => {\\\\\\\\n  const accountId = proposal.author_id;\\\\\\\\n  const profile = Social.get(`${accountId}/profile/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\n  // We will have to get the proposal from the contract to get the block height.\\\\\\\\n  const blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `devhub.near/post/main`,\\\\\\\\n    blockHeight: blockHeight,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n          id: proposal.proposal_id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      onClick={(e) => e.stopPropagation()}\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\n          \\\\\\\\\\\\\\\"proposal-card d-flex justify-content-between gap-2 text-muted cursor-pointer p-3 w-100 flex-wrap flex-sm-nowrap \\\\\\\\\\\\\\\" +\\\\\\\\n          (index !== 0 && \\\\\\\\\\\\\\\" border\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"h6 mb-0 text-black\\\\\\\\\\\\\\\">{proposal.name}</div>\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CategoryTag\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  category: proposal.category,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap flex-sm-nowrap text-sm w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div>#{proposal.proposal_id} \\\\\\\\u{ff65} </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n                By {profile.name ?? accountId} \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              </div>\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  blockHeight,\\\\\\\\n                  blockTimestamp: proposal.timestamp,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.LikeButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  proposalId: proposal.id,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CommentIcon\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  showOverlay: false,\\\\\\\\n                  onClick: () => {},\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"align-self-center\\\\\\\\\\\\\\\" style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              timelineStatus: proposal.timeline.status,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getProposal = (proposal_id) => {\\\\\\\\n  return Near.asyncView(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n    proposal_id,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FeedPage = () => {\\\\\\\\n  const QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\n  State.init({\\\\\\\\n    data: [],\\\\\\\\n    cachedItems: {},\\\\\\\\n    author: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    stage: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    sort: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    category: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    input: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    loading: false,\\\\\\\\n    loadingMore: false,\\\\\\\\n    aggregatedCount: null,\\\\\\\\n    currentlyDisplaying: 0,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  const queryName =\\\\\\\\n    \\\\\\\\\\\\\\\"polyprogrammist_near_devhub_prod_v1_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      author_id\\\\\\\\n      block_height\\\\\\\\n      name\\\\\\\\n      category\\\\\\\\n      summary\\\\\\\\n      editor_id\\\\\\\\n      proposal_id\\\\\\\\n      ts\\\\\\\\n      timeline\\\\\\\\n      views\\\\\\\\n    }\\\\\\\\n    ${queryName}_aggregate(\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    )  {\\\\\\\\n      aggregate {\\\\\\\\n        count\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n    return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n      method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n      headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `polyprogrammist_near` },\\\\\\\\n      body: JSON.stringify({\\\\\\\\n        query: operationsDoc,\\\\\\\\n        variables: variables,\\\\\\\\n        operationName: operationName,\\\\\\\\n      }),\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  function separateNumberAndText(str) {\\\\\\\\n    const numberRegex = /\\\\\\\\\\\\\\\\d+/;\\\\\\\\n\\\\\\\\n    if (numberRegex.test(str)) {\\\\\\\\n      const number = str.match(numberRegex)[0];\\\\\\\\n      const text = str.replace(numberRegex, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").trim();\\\\\\\\n      return { number: parseInt(number), text };\\\\\\\\n    } else {\\\\\\\\n      return { number: null, text: str.trim() };\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const buildWhereClause = () => {\\\\\\\\n    let where = {};\\\\\\\\n    if (state.author) {\\\\\\\\n      where = { author_id: { _eq: state.author }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.category) {\\\\\\\\n      where = { category: { _eq: state.category }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.stage) {\\\\\\\\n      // timeline is stored as jsonb\\\\\\\\n      where = {\\\\\\\\n        timeline: { _cast: { String: { _regex: `${state.stage}` } } },\\\\\\\\n        ...where,\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n    if (state.input) {\\\\\\\\n      const { number, text } = separateNumberAndText(state.input);\\\\\\\\n      if (number) {\\\\\\\\n        where = { proposal_id: { _eq: number }, ...where };\\\\\\\\n      }\\\\\\\\n\\\\\\\\n      if (text) {\\\\\\\\n        where = {\\\\\\\\n          _or: [\\\\\\\\n            { name: { _iregex: `${text}` } },\\\\\\\\n            { summary: { _iregex: `${text}` } },\\\\\\\\n            { description: { _iregex: `${text}` } },\\\\\\\\n          ],\\\\\\\\n          ...where,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return where;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const makeMoreItems = () => {\\\\\\\\n    if (state.aggregatedCount <= state.currentlyDisplaying) return;\\\\\\\\n    fetchProposals(state.data.length);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchProposals = (offset) => {\\\\\\\\n    if (!offset) {\\\\\\\\n      offset = 0;\\\\\\\\n    }\\\\\\\\n    if (state.loading) return;\\\\\\\\n    const FETCH_LIMIT = 20;\\\\\\\\n    const variables = {\\\\\\\\n      limit: FETCH_LIMIT,\\\\\\\\n      offset,\\\\\\\\n      where: buildWhereClause(),\\\\\\\\n    };\\\\\\\\n    fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n      if (result.status === 200) {\\\\\\\\n        if (result.body.data) {\\\\\\\\n          const data =\\\\\\\\n            result.body.data\\\\\\\\n              .polyprogrammist_near_devhub_prod_v1_proposals_with_latest_snapshot;\\\\\\\\n          const totalResult =\\\\\\\\n            result.body.data\\\\\\\\n              .polyprogrammist_near_devhub_prod_v1_proposals_with_latest_snapshot_aggregate;\\\\\\\\n          State.update({ aggregatedCount: totalResult.aggregate.count });\\\\\\\\n          // Parse timeline\\\\\\\\n          fetchBlockHeights(data, offset);\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const renderItem = (item, index) => (\\\\\\\\n    <div\\\\\\\\n      key={item.proposal_id}\\\\\\\\n      className={\\\\\\\\n        (index !== state.data.length - 1 && \\\\\\\\\\\\\\\"border-bottom \\\\\\\\\\\\\\\") + index === 0 &&\\\\\\\\n        \\\\\\\\\\\\\\\" rounded-top-2\\\\\\\\\\\\\\\"\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <FeedItem proposal={item} index={index} />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n  const cachedRenderItem = (item, index) => {\\\\\\\\n    if (props.term) {\\\\\\\\n      return renderItem(item, {\\\\\\\\n        searchKeywords: [props.term],\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    const key = JSON.stringify(item);\\\\\\\\n\\\\\\\\n    if (!(key in state.cachedItems)) {\\\\\\\\n      state.cachedItems[key] = renderItem(item, index);\\\\\\\\n      State.update();\\\\\\\\n    }\\\\\\\\n    return state.cachedItems[key];\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    fetchProposals();\\\\\\\\n  }, [state.author, state.sort, state.category, state.stage]);\\\\\\\\n\\\\\\\\n  const mergeItems = (newItems) => {\\\\\\\\n    const items = [\\\\\\\\n      ...new Set([...newItems, ...state.data].map((i) => JSON.stringify(i))),\\\\\\\\n    ].map((i) => JSON.parse(i));\\\\\\\\n    // Sorting in the front end\\\\\\\\n    if (state.sort === \\\\\\\\\\\\\\\"proposal_id\\\\\\\\\\\\\\\" || state.sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.proposal_id - a.proposal_id);\\\\\\\\n    } else if (state.sort === \\\\\\\\\\\\\\\"views\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.views - a.views);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return items;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchBlockHeights = (data, offset) => {\\\\\\\\n    let promises = data.map((item) => getProposal(item.proposal_id));\\\\\\\\n    Promise.all(promises).then((blockHeights) => {\\\\\\\\n      data = data.map((item, index) => ({\\\\\\\\n        ...item,\\\\\\\\n        timeline: JSON.parse(item.timeline),\\\\\\\\n        social_db_post_block_height:\\\\\\\\n          blockHeights[index].social_db_post_block_height,\\\\\\\\n      }));\\\\\\\\n      if (offset) {\\\\\\\\n        let newData = mergeItems(data);\\\\\\\\n        State.update({\\\\\\\\n          data: newData,\\\\\\\\n          currentlyDisplaying: newData.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      } else {\\\\\\\\n        State.update({\\\\\\\\n          data,\\\\\\\\n          currentlyDisplaying: data.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const loader = (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Spinner\\\\\\\\\\\\\\\"}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const renderedItems = state.data ? state.data.map(cachedRenderItem) : null;\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    const handler = setTimeout(() => {\\\\\\\\n      fetchProposals();\\\\\\\\n    }, 1000);\\\\\\\\n\\\\\\\\n    return () => {\\\\\\\\n      clearTimeout(handler);\\\\\\\\n    };\\\\\\\\n  }, [state.input]);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between flex-wrap gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Heading>\\\\\\\\n          DevDAO Proposals\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"text-muted text-normal\\\\\\\\\\\\\\\">\\\\\\\\n            ({state.aggregatedCount ?? state.data.length}){\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          </span>\\\\\\\\n        </Heading>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\n              \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-input\\\\\\\\\\\\\\\"\\\\\\\\n            }\\\\\\\\n            props={{\\\\\\\\n              search: state.input,\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-xs-100\\\\\\\\\\\\\\\",\\\\\\\\n              onSearch: (input) => {\\\\\\\\n                State.update({ input });\\\\\\\\n              },\\\\\\\\n              onEnter: () => {\\\\\\\\n                fetchProposals();\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-sort\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ sort: select.value });\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-category\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ category: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-stage\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ stage: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-author\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                onAuthorChange: (select) => {\\\\\\\\n                  State.update({ author: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"mt-2 mt-xs-0\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={href({\\\\\\\\n              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\" },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                label: (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                    <div>\\\\\\\\n                      <i class=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                    </div>\\\\\\\\n                    New Proposal\\\\\\\\n                  </div>\\\\\\\\n                ),\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"green-btn\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div style={{ minHeight: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {!Array.isArray(state.data) ? (\\\\\\\\n          loader\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 mt-4 py-3 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"container-xl\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-muted bg-grey text-sm mt-2 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center mb-0\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    <i class=\\\\\\\\\\\\\\\"bi bi-info-circle\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                  <div>\\\\\\\\n                    <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                      Welcome to\\\\\\\\n                      <a\\\\\\\\n                        href=\\\\\\\\\\\\\\\"?page=community&handle=developer-dao&tab=overview\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        DevDAO\\\\\\\\u{2019}s New Proposal Feed!\\\\\\\\n                      </a>\\\\\\\\n                    </span>\\\\\\\\n                    This dedicated space replaces the\\\\\\\\n                    <a\\\\\\\\n                      href=\\\\\\\\\\\\\\\"?page=feed\\\\\\\\\\\\\\\"\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      old activity feed\\\\\\\\n                    </a>\\\\\\\\n                    , making it easier to submit and track funding requests from\\\\\\\\n                    DevDAO, the primary organization behind DevHub. To submit a\\\\\\\\n                    formal proposal, click New Proposal. See our{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href=\\\\\\\\\\\\\\\"?page=community&handle=developer-dao&tab=funding\\\\\\\\\\\\\\\"\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      guidelines\\\\\\\\n                    </a>\\\\\\\\n                    for details. For discussions and brainstorming, please\\\\\\\\n                    utilize the relevant{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href=\\\\\\\\\\\\\\\"?page=communities\\\\\\\\\\\\\\\"\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      communities\\\\\\\\n                    </a>\\\\\\\\n                    .\\\\\\\\n                  </div>\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mt-4 border rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                {state.aggregatedCount === 0 ? (\\\\\\\\n                  <div class=\\\\\\\\\\\\\\\"alert alert-danger m-2\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n                    No proposals found for selected filter.{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                  </div>\\\\\\\\n                ) : state.aggregatedCount > 0 ? (\\\\\\\\n                  <InfiniteScroll\\\\\\\\n                    pageStart={0}\\\\\\\\n                    loadMore={makeMoreItems}\\\\\\\\n                    hasMore={state.aggregatedCount > state.data.length}\\\\\\\\n                    loader={loader}\\\\\\\\n                    useWindow={false}\\\\\\\\n                    threshold={50}\\\\\\\\n                  >\\\\\\\\n                    {renderedItems}\\\\\\\\n                  </InfiniteScroll>\\\\\\\\n                ) : (\\\\\\\\n                  loader\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn FeedPage(props);\\\\\\\\n\"}, \"devhub.page.community.index\": {\"\": \"const { normalize } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.stringUtils\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nnormalize || (normalize = () => {});\\\\\\\\n\\\\\\\\nconst Button = styled.button`\\\\\\\\n  height: 40px;\\\\\\\\n  font-size: 14px;\\\\\\\\n  border-color: #e3e3e0;\\\\\\\\n  background-color: #ffffff;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Banner = styled.div`\\\\\\\\n  max-width: 100%;\\\\\\\\n  min-height: 240px;\\\\\\\\n  height: 240px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CenteredMessage = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n  height: ${(p) => p.height ?? \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\"};\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst NavUnderline = styled.ul`\\\\\\\\n  cursor: pointer;\\\\\\\\n  a {\\\\\\\\n    color: #151515;\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.active {\\\\\\\\n    font-weight: bold;\\\\\\\\n    border-bottom: 4px solid #00ec97;\\\\\\\\n  }\\\\\\\\n  border-bottom: 1px solid #cccccc;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst { tab, permissions, community } = props;\\\\\\\\n\\\\\\\\nconst { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!href) {\\\\\\\\n  return <></>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (!tab) {\\\\\\\\n  tab = \\\\\\\\\\\\\\\"Announcements\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\ntab = normalize(tab);\\\\\\\\n\\\\\\\\nconst [isLinkCopied, setLinkCopied] = useState(false);\\\\\\\\n\\\\\\\\nconst [addonView, setAddonView] = useState(\\\\\\\\\\\\\\\"viewer\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n// CommunityAddOn\\\\\\\\nconst blogv2 = {\\\\\\\\n  addon_id: \\\\\\\\\\\\\\\"blogv2\\\\\\\\\\\\\\\",\\\\\\\\n  display_name: \\\\\\\\\\\\\\\"BlogV2\\\\\\\\\\\\\\\",\\\\\\\\n  enabled: true,\\\\\\\\n  id: \\\\\\\\\\\\\\\"blogv2\\\\\\\\\\\\\\\",\\\\\\\\n  parameters:\\\\\\\\n    \\\\\\\\\\\\'{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"My blog page title\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\n     \\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Classic subtitle\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\n     \\\\\\\\\\\\\\\"auhtorEnabled\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\n     \\\\\\\\\\\\\\\"searchEnabled\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\n     \\\\\\\\\\\\\\\"orderBy\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"timedesc\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\n     \\\\\\\\\\\\\\\"categoriesEnabled\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\n     \\\\\\\\\\\\\\\"categories\\\\\\\\\\\\\\\": [\\\\\\\\\\\\\\\"news\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"guide\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"reference\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\\\\\\\\\\n     \\\\\\\\\\\\\\\"categoryRequired\\\\\\\\\\\\\\\": false}\\\\\\\\\\\\',\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst blogv2instance2 = {\\\\\\\\n  addon_id: \\\\\\\\\\\\\\\"blogv2\\\\\\\\\\\\\\\",\\\\\\\\n  display_name: \\\\\\\\\\\\\\\"BlogV2\\\\\\\\\\\\\\\",\\\\\\\\n  enabled: true,\\\\\\\\n  id: \\\\\\\\\\\\\\\"blogv2instance2\\\\\\\\\\\\\\\",\\\\\\\\n  parameters: \\\\\\\\\\\\\\\"{}\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst tabs = [];\\\\\\\\n\\\\\\\\n(community.addons || []).map((addon) => {\\\\\\\\n  addon.enabled &&\\\\\\\\n    tabs.push({\\\\\\\\n      title: addon.display_name,\\\\\\\\n      params: {\\\\\\\\n        addon,\\\\\\\\n        handle: community.handle,\\\\\\\\n        transactionHashes: props.transactionHashes,\\\\\\\\n      },\\\\\\\\n    });\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst onShareClick = () =>\\\\\\\\n  clipboard\\\\\\\\n    .writeText(\\\\\\\\n      href({\\\\\\\\n        gateway: \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\",\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: { page: \\\\\\\\\\\\\\\"community\\\\\\\\\\\\\\\", handle: community.handle },\\\\\\\\n      })\\\\\\\\n    )\\\\\\\\n    .then(setLinkCopied(true));\\\\\\\\n\\\\\\\\nlet currentTab = tabs.find((it) => normalize(it.title) === tab);\\\\\\\\n\\\\\\\\nconst CommunityName = styled.span`\\\\\\\\n  color: #151515;\\\\\\\\n  font-size: 2.25rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 100%; /* 48px */\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 1.5rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommunityDetails = styled.span`\\\\\\\\n  color: #818181;\\\\\\\\n  font-size: 1rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 400;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n`;\\\\\\\\n\\\\\\\\nfunction trimHttps(url) {\\\\\\\\n  if (url.startsWith(\\\\\\\\\\\\\\\"https://\\\\\\\\\\\\\\\")) {\\\\\\\\n    return url.substring(8);\\\\\\\\n  }\\\\\\\\n  return url;\\\\\\\\n}\\\\\\\\n\\\\\\\\n// some communities have url as handle (eg: devhub platform) while others has correct handle\\\\\\\\nfunction checkTelegramHandle(tg) {\\\\\\\\n  const pattern = /https:\\\\\\\\\\\\\\\\/\\\\\\\\\\\\\\\\/t.me\\\\\\\\\\\\\\\\/(.*)/;\\\\\\\\n  const includesHttp = tg.match(pattern);\\\\\\\\n  const handle = includesHttp ? includesHttp[1] : tg;\\\\\\\\n  return { handle, url: \\\\\\\\\\\\\\\"https://t.me/\\\\\\\\\\\\\\\" + handle };\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst socialLinks = [\\\\\\\\n  ...((community.website_url?.length ?? 0) > 0\\\\\\\\n    ? [\\\\\\\\n        {\\\\\\\\n          href: `https://${trimHttps(community.website_url)}`,\\\\\\\\n          iconClass: \\\\\\\\\\\\\\\"bi bi-globe\\\\\\\\\\\\\\\",\\\\\\\\n          name: trimHttps(community.website_url),\\\\\\\\n        },\\\\\\\\n      ]\\\\\\\\n    : []),\\\\\\\\n\\\\\\\\n  ...((community.github_handle?.length ?? 0) > 0\\\\\\\\n    ? [\\\\\\\\n        {\\\\\\\\n          href: `https://github.com/${community.github_handle}`,\\\\\\\\n          iconClass: \\\\\\\\\\\\\\\"bi bi-github\\\\\\\\\\\\\\\",\\\\\\\\n          name: community.github_handle,\\\\\\\\n        },\\\\\\\\n      ]\\\\\\\\n    : []),\\\\\\\\n\\\\\\\\n  ...((community.twitter_handle?.length ?? 0) > 0\\\\\\\\n    ? [\\\\\\\\n        {\\\\\\\\n          href: `https://twitter.com/${community.twitter_handle}`,\\\\\\\\n          iconClass: \\\\\\\\\\\\\\\"bi bi-twitter\\\\\\\\\\\\\\\",\\\\\\\\n          name: community.twitter_handle,\\\\\\\\n        },\\\\\\\\n      ]\\\\\\\\n    : []),\\\\\\\\n\\\\\\\\n  ...(community.telegram_handle?.length > 0\\\\\\\\n    ? [\\\\\\\\n        {\\\\\\\\n          href: checkTelegramHandle(community.telegram_handle).url,\\\\\\\\n          iconClass: \\\\\\\\\\\\\\\"bi bi-telegram\\\\\\\\\\\\\\\",\\\\\\\\n          name: checkTelegramHandle(community.telegram_handle).handle,\\\\\\\\n        },\\\\\\\\n      ]\\\\\\\\n    : []),\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst NavlinksContainer = styled.div`\\\\\\\\n  //background: white;\\\\\\\\n  padding: 0 3rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    padding: 0 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div\\\\\\\\n    className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 w-100\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ background: \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\" }}\\\\\\\\n  >\\\\\\\\n    <Banner\\\\\\\\n      className=\\\\\\\\\\\\\\\"object-fit-cover\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        background: `center / cover no-repeat url(${community.banner_url})`,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"container d-flex flex-wrap justify-content-between align-items-center align-items-md-start gap-4\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column ms-3\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"position-relative\\\\\\\\\\\\\\\">\\\\\\\\n          <div style={{ width: 150, height: 45 }}>\\\\\\\\n            <img\\\\\\\\n              alt=\\\\\\\\\\\\\\\"Loading logo...\\\\\\\\\\\\\\\"\\\\\\\\n              className=\\\\\\\\\\\\\\\"rounded-circle position-absolute\\\\\\\\\\\\\\\"\\\\\\\\n              width=\\\\\\\\\\\\\\\"160\\\\\\\\\\\\\\\"\\\\\\\\n              height=\\\\\\\\\\\\\\\"160\\\\\\\\\\\\\\\"\\\\\\\\n              src={community.logo_url}\\\\\\\\n              style={{ top: -124 }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 ps-md-3 pt-md-3 pb-md-2\\\\\\\\\\\\\\\">\\\\\\\\n          <CommunityName className=\\\\\\\\\\\\\\\"text-nowrap\\\\\\\\\\\\\\\">\\\\\\\\n            {community.name}\\\\\\\\n          </CommunityName>\\\\\\\\n          <CommunityDetails>{community.description}</CommunityDetails>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"mt-3 ps-3 d-flex gap-3 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          {socialLinks.map((link, index) => (\\\\\\\\n            <a\\\\\\\\n              href={link.href}\\\\\\\\n              style={{\\\\\\\\n                marginLeft: index !== 0 ? \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"0px\\\\\\\\\\\\\\\",\\\\\\\\n                color: \\\\\\\\\\\\\\\"#818181\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n              key={link.href}\\\\\\\\n              target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <i className={link.iconClass}></i>\\\\\\\\n            </a>\\\\\\\\n          ))}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex align-items-end gap-3 ms-auto mb-md-5 me-4\\\\\\\\\\\\\\\">\\\\\\\\n        {permissions.can_configure && (\\\\\\\\n          <Link\\\\\\\\n            to={`/devhub.near/widget/app?page=community.configuration&handle=${community.handle}`}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"btn-outline-light text-dark shadow-none\\\\\\\\\\\\\\\" },\\\\\\\\n                notRounded: true,\\\\\\\\n                style: {\\\\\\\\n                  display: \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\",\\\\\\\\n                  padding: \\\\\\\\\\\\\\\"0.75rem 1rem\\\\\\\\\\\\\\\",\\\\\\\\n                  alignItems: \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\",\\\\\\\\n                  gap: \\\\\\\\\\\\\\\"16px\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n                  borderRadius: \\\\\\\\\\\\\\\"4px\\\\\\\\\\\\\\\",\\\\\\\\n                  border: \\\\\\\\\\\\\\\"1px solid #00EC97\\\\\\\\\\\\\\\",\\\\\\\\n                  background: \\\\\\\\\\\\\\\"rgba(129, 129, 129, 0.00)\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                icon: {\\\\\\\\n                  type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                  variant: \\\\\\\\\\\\\\\"bi-gear-wide-connected\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Configure community\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"btn-outline-light text-dark shadow-none\\\\\\\\\\\\\\\" },\\\\\\\\n            notRounded: true,\\\\\\\\n            style: {\\\\\\\\n              display: \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\",\\\\\\\\n              padding: \\\\\\\\\\\\\\\"0.75rem 1rem\\\\\\\\\\\\\\\",\\\\\\\\n              alignItems: \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\",\\\\\\\\n              gap: \\\\\\\\\\\\\\\"16px\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n              borderRadius: \\\\\\\\\\\\\\\"4px\\\\\\\\\\\\\\\",\\\\\\\\n              border: \\\\\\\\\\\\\\\"1px solid #00EC97\\\\\\\\\\\\\\\",\\\\\\\\n              background: \\\\\\\\\\\\\\\"rgba(129, 129, 129, 0.00)\\\\\\\\\\\\\\\",\\\\\\\\n            },\\\\\\\\n            label: \\\\\\\\\\\\\\\"Share \\\\\\\\u{2197}\\\\\\\\\\\\\\\",\\\\\\\\n            onClick: onShareClick,\\\\\\\\n            onMouseLeave: () => setLinkCopied(false),\\\\\\\\n            title: \\\\\\\\\\\\\\\"Copy link to clipboard\\\\\\\\\\\\\\\",\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <NavlinksContainer>\\\\\\\\n      <NavUnderline className=\\\\\\\\\\\\\\\"nav gap-4 my-4\\\\\\\\\\\\\\\">\\\\\\\\n        {tabs.map(\\\\\\\\n          ({ title }) =>\\\\\\\\n            title && (\\\\\\\\n              <li\\\\\\\\n                className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\"\\\\\\\\n                key={title}\\\\\\\\n                onClick={() => setAddonView(\\\\\\\\\\\\\\\"viewer\\\\\\\\\\\\\\\")}\\\\\\\\n              >\\\\\\\\n                <Link\\\\\\\\n                  to={href({\\\\\\\\n                    widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                    params: {\\\\\\\\n                      page: \\\\\\\\\\\\\\\"community\\\\\\\\\\\\\\\",\\\\\\\\n                      handle: community.handle,\\\\\\\\n                      tab: normalize(title),\\\\\\\\n                    },\\\\\\\\n                  })}\\\\\\\\n                  aria-current={tab === normalize(title) && \\\\\\\\\\\\\\\"page\\\\\\\\\\\\\\\"}\\\\\\\\n                  className={[\\\\\\\\n                    \\\\\\\\\\\\\\\"d-inline-flex gap-2\\\\\\\\\\\\\\\",\\\\\\\\n                    tab === normalize(title) ? \\\\\\\\\\\\\\\"nav-link active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"nav-link\\\\\\\\\\\\\\\",\\\\\\\\n                  ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n                >\\\\\\\\n                  <span>{title}</span>\\\\\\\\n                </Link>\\\\\\\\n              </li>\\\\\\\\n            )\\\\\\\\n        )}\\\\\\\\n      </NavUnderline>\\\\\\\\n      {currentTab.title === \\\\\\\\\\\\\\\"Activity\\\\\\\\\\\\\\\" && (\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"my-4 d-flex align-items-center justify-content-between\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ gap: \\\\\\\\\\\\\\\"2.5rem\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n            <small class=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <span>Required tags:</span>\\\\\\\\n              <Link\\\\\\\\n                to={href({\\\\\\\\n                  widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                  params: { page: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\", tag: community.tag },\\\\\\\\n                })}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Tag\\\\\\\\\\\\\\\"}\\\\\\\\n                  props={{\\\\\\\\n                    tag: community.tag,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </Link>\\\\\\\\n            </small>\\\\\\\\n          </div>\\\\\\\\n          {context.accountId && (\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.PostControls\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                title: \\\\\\\\\\\\\\\"Post\\\\\\\\\\\\\\\",\\\\\\\\n                href: href({\\\\\\\\n                  widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                  params: {\\\\\\\\n                    page: \\\\\\\\\\\\\\\"create\\\\\\\\\\\\\\\",\\\\\\\\n                    labels: [community.tag],\\\\\\\\n                  },\\\\\\\\n                }),\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </NavlinksContainer>\\\\\\\\n    {currentTab && (\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex w-100 h-100\\\\\\\\\\\\\\\" key={currentTab.title}>\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.page.addon\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            ...currentTab.params,\\\\\\\\n            addonView,\\\\\\\\n            setAddonView,\\\\\\\\n            // below is temporary prop drilling until kanban and github are migrated\\\\\\\\n            permissions,\\\\\\\\n            handle: community.handle,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.blogv2.Blog\": {\"\": \"const { blogId, template, handle } = props;\\\\\\\\n\\\\\\\\nconst blog =\\\\\\\\n  Social.get(`${handle}.community.devhub.near/blog/${blogId}/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\") ||\\\\\\\\n  {};\\\\\\\\n\\\\\\\\nif (!blog || Object.keys(blog).length === 0) {\\\\\\\\n  return <div>Loading Blog...</div>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Template = template || (() => <></>);\\\\\\\\n\\\\\\\\nreturn <Template data={{ ...blog.metadata, content: blog[\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"], handle }} />;\\\\\\\\n\"}, \"devhub.entity.addon.blogv2.Card\": {\"\": \"function Card({ data, addonParameters }) {\\\\\\\\n  const { category, title, description, publishedAt: date, id } = data;\\\\\\\\n  const { categoriesEnabled, categories } = addonParameters;\\\\\\\\n\\\\\\\\n  let categoryIsOptionInSettings = true;\\\\\\\\n  let categoriesInSettings = (categories || []).map((c) => c.value);\\\\\\\\n  if (\\\\\\\\n    categoriesInSettings.length > 0 &&\\\\\\\\n    !categoriesInSettings.includes(category) &&\\\\\\\\n    category !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" &&\\\\\\\\n    category !== null\\\\\\\\n  ) {\\\\\\\\n    categoryIsOptionInSettings = false;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const Container = styled.div`\\\\\\\\n    min-height: 12.5rem;\\\\\\\\n    height: 100%;\\\\\\\\n    display: flex;\\\\\\\\n    padding: 1rem;\\\\\\\\n    flex-direction: column;\\\\\\\\n    align-items: flex-start;\\\\\\\\n    gap: 1rem;\\\\\\\\n    flex-shrink: 0;\\\\\\\\n\\\\\\\\n    border-radius: 1rem;\\\\\\\\n    border: 1px solid rgba(129, 129, 129, 0.3);\\\\\\\\n    background: #fffefe;\\\\\\\\n\\\\\\\\n    h5 {\\\\\\\\n      margin: 0;\\\\\\\\n      color: #151515;\\\\\\\\n      font-size: 1.5rem;\\\\\\\\n      font-style: normal;\\\\\\\\n      font-weight: 700;\\\\\\\\n      line-height: 110%; /* 39.6px */\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    ${category &&\\\\\\\\n    `\\\\\\\\n    span.category {\\\\\\\\n      color: ${\\\\\\\\n        category.toLowerCase() === \\\\\\\\\\\\\\\"news\\\\\\\\\\\\\\\"\\\\\\\\n          ? \\\\\\\\\\\\\\\"#F40303\\\\\\\\\\\\\\\"\\\\\\\\n          : category.toLowerCase() === \\\\\\\\\\\\\\\"guide\\\\\\\\\\\\\\\"\\\\\\\\n          ? \\\\\\\\\\\\\\\"#004BE1\\\\\\\\\\\\\\\"\\\\\\\\n          : category.toLowerCase() === \\\\\\\\\\\\\\\"reference\\\\\\\\\\\\\\\" && \\\\\\\\\\\\\\\"#FF7A00\\\\\\\\\\\\\\\"\\\\\\\\n      };\\\\\\\\n      font-size: 1rem;\\\\\\\\n      font-style: normal;\\\\\\\\n      font-weight: 700;\\\\\\\\n      line-height: 20px; /* 125% */\\\\\\\\n      text-transform: uppercase;\\\\\\\\n    }\\\\\\\\n    `}\\\\\\\\n\\\\\\\\n    span.date {\\\\\\\\n      color: #818181;\\\\\\\\n      font-size: 16px;\\\\\\\\n      font-style: normal;\\\\\\\\n      font-weight: 400;\\\\\\\\n      line-height: 20px; /* 125% */\\\\\\\\n      margin-top: auto;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    p {\\\\\\\\n      margin: 0;\\\\\\\\n      color: #151515;\\\\\\\\n      font-size: 1rem;\\\\\\\\n      font-style: normal;\\\\\\\\n      font-weight: 400;\\\\\\\\n      line-height: 120%; /* 28.8px */\\\\\\\\n    }\\\\\\\\n  `;\\\\\\\\n\\\\\\\\n  const options = { year: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\", month: \\\\\\\\\\\\\\\"short\\\\\\\\\\\\\\\", day: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\" };\\\\\\\\n  const formattedDate = new Date(date).toLocaleString(\\\\\\\\\\\\\\\"en-US\\\\\\\\\\\\\\\", options);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container id={`blog-card-${id}`} data-testid={id}>\\\\\\\\n      {category &&\\\\\\\\n        categoriesEnabled === \\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\\" &&\\\\\\\\n        categoryIsOptionInSettings && (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\" data-testid=\\\\\\\\\\\\\\\"card-category\\\\\\\\\\\\\\\">\\\\\\\\n            {category}\\\\\\\\n          </span>\\\\\\\\n        )}\\\\\\\\n      <h5 data-testid=\\\\\\\\\\\\\\\"blog-card-title\\\\\\\\\\\\\\\">{title}</h5>\\\\\\\\n      <p>{description}</p>\\\\\\\\n      <span className=\\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\\" data-testid=\\\\\\\\\\\\\\\"blog-card-date\\\\\\\\\\\\\\\">\\\\\\\\n        {formattedDate}\\\\\\\\n      </span>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn { Card };\\\\\\\\n\"}, \"devhub.entity.addon.blogv2.Page\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\") || {\\\\\\\\n  href: () => {},\\\\\\\\n};\\\\\\\\nconst httpbin = fetch(`https://httpbin.org/headers`);\\\\\\\\n\\\\\\\\nconst { getCommunity } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n) || {\\\\\\\\n  getCommunity: () => {},\\\\\\\\n};\\\\\\\\nconst imagelink =\\\\\\\\n  \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiajzvmy7574k7mp3if6u53mdukfr3hoc2kjkhjadt6x56vqhd5swy\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst { data, onEdit, community: handle, isAllowedToEdit } = props;\\\\\\\\n\\\\\\\\nconst {\\\\\\\\n  category,\\\\\\\\n  title,\\\\\\\\n  description,\\\\\\\\n  subtitle,\\\\\\\\n  publishedAt: date,\\\\\\\\n  content,\\\\\\\\n  author,\\\\\\\\n  communityAddonId,\\\\\\\\n} = data;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  padding: 0 3rem;\\\\\\\\n  margin-bottom: 2rem;\\\\\\\\n  position: relative;\\\\\\\\n  ${category &&\\\\\\\\n  `\\\\\\\\n    span.category {\\\\\\\\n      color: ${\\\\\\\\n        category.toLowerCase() === \\\\\\\\\\\\\\\"news\\\\\\\\\\\\\\\"\\\\\\\\n          ? \\\\\\\\\\\\\\\"#F40303\\\\\\\\\\\\\\\"\\\\\\\\n          : category.toLowerCase() === \\\\\\\\\\\\\\\"guide\\\\\\\\\\\\\\\"\\\\\\\\n          ? \\\\\\\\\\\\\\\"#004BE1\\\\\\\\\\\\\\\"\\\\\\\\n          : category.toLowerCase() === \\\\\\\\\\\\\\\"reference\\\\\\\\\\\\\\\" && \\\\\\\\\\\\\\\"#FF7A00\\\\\\\\\\\\\\\"\\\\\\\\n      };\\\\\\\\n      font-size: 1.5rem;\\\\\\\\n      font-style: normal;\\\\\\\\n      font-weight: 700;\\\\\\\\n      line-height: 20px; /* 125% */\\\\\\\\n      text-transform: uppercase;\\\\\\\\n    }\\\\\\\\n    `}\\\\\\\\n\\\\\\\\n  div.date {\\\\\\\\n    color: #818181;\\\\\\\\n    font-size: 1rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 20px; /* 125% */\\\\\\\\n    margin: 1.5rem 0;\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  h1 {\\\\\\\\n    color: #151515;\\\\\\\\n    font-size: 3.5rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 700;\\\\\\\\n    line-height: 100%; /* 88px */\\\\\\\\n    margin: 1.5rem 0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  p.subtitle {\\\\\\\\n    color: #555;\\\\\\\\n    font-size: 1.5rem;\\\\\\\\n    font-style: normal;\\\\\\\\n    font-weight: 400;\\\\\\\\n    line-height: 110%; /* 35.2px */\\\\\\\\n    margin: 0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .edit-icon {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 20px;\\\\\\\\n    right: 20px;\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .share-icon {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 25px;\\\\\\\\n    right: 55px;\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 0 1rem;\\\\\\\\n\\\\\\\\n    span.category {\\\\\\\\n      font-size: 0.75rem;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    h1 {\\\\\\\\n      font-size: 2rem;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    p.subtitle {\\\\\\\\n      font-size: 1rem;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst BackgroundImage = styled.img`\\\\\\\\n  width: 100%;\\\\\\\\n  height: auto;\\\\\\\\n  object-fit: cover;\\\\\\\\n  margin-bottom: 1rem;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (!handle) {\\\\\\\\n  return <div>Community handle not found</div>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst community = getCommunity({ handle: handle });\\\\\\\\n\\\\\\\\nlet communityConfig = (community.addons || []).find(\\\\\\\\n  (addon) => addon.id === communityAddonId\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (communityConfig === undefined) {\\\\\\\\n  return <div>Community addon not found</div>;\\\\\\\\n}\\\\\\\\nconst parameters = JSON.parse(communityConfig.parameters || {}) || {};\\\\\\\\n\\\\\\\\n// Make sure only the categories that are configured in the settings are displayed.\\\\\\\\nlet categoryIsOptionInSettings = true;\\\\\\\\nlet categoriesInSettings = (parameters?.categories || []).map((c) => c.value);\\\\\\\\nif (\\\\\\\\n  categoriesInSettings.length > 0 &&\\\\\\\\n  !categoriesInSettings.includes(category) &&\\\\\\\\n  category !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" &&\\\\\\\\n  category !== null\\\\\\\\n) {\\\\\\\\n  categoryIsOptionInSettings = false;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = { year: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\", month: \\\\\\\\\\\\\\\"short\\\\\\\\\\\\\\\", day: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\" };\\\\\\\\nconst formattedDate = new Date(date).toLocaleString(\\\\\\\\\\\\\\\"en-US\\\\\\\\\\\\\\\", options);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <BackgroundImage src={imagelink} />\\\\\\\\n    <Container>\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.ShareButton\\\\\\\\\\\\\\\"\\\\\\\\n        props={{\\\\\\\\n          className: \\\\\\\\\\\\\\\"share-icon\\\\\\\\\\\\\\\",\\\\\\\\n          size: \\\\\\\\\\\\\\\"35px\\\\\\\\\\\\\\\",\\\\\\\\n          postType: \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\",\\\\\\\\n          externalLink: href({\\\\\\\\n            gateway: httpbin?.body?.headers?.Origin.slice(8) ?? \\\\\\\\\\\\\\\"near.social\\\\\\\\\\\\\\\",\\\\\\\\n            widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n            params: {\\\\\\\\n              page: \\\\\\\\\\\\\\\"blogv2\\\\\\\\\\\\\\\",\\\\\\\\n              community: community.handle,\\\\\\\\n              id: data.id,\\\\\\\\n            },\\\\\\\\n          }),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      {isAllowedToEdit && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"edit-icon\\\\\\\\\\\\\\\" onClick={onEdit}>\\\\\\\\n          <div class=\\\\\\\\\\\\\\\"bi bi-pencil-square\\\\\\\\\\\\\\\" style={{ fontSize: \\\\\\\\\\\\\\\"30px\\\\\\\\\\\\\\\" }}></div>\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n      {category &&\\\\\\\\n        parameters.categoriesEnabled === \\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\\" &&\\\\\\\\n        categoryIsOptionInSettings && (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\" data-testid=\\\\\\\\\\\\\\\"blog-category\\\\\\\\\\\\\\\">\\\\\\\\n            {category}\\\\\\\\n          </span>\\\\\\\\n        )}\\\\\\\\n      <h1 data-testid=\\\\\\\\\\\\\\\"blog-title\\\\\\\\\\\\\\\">{title}</h1>\\\\\\\\n      <p className=\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\">{subtitle}</p>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-row justify-content-between date\\\\\\\\\\\\\\\">\\\\\\\\n        {author && parameters.authorEnabled !== \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" && (\\\\\\\\n          <div data-testid=\\\\\\\\\\\\\\\"blog-author\\\\\\\\\\\\\\\">{author}</div>\\\\\\\\n        )}\\\\\\\\n        <div data-testid=\\\\\\\\\\\\\\\"blog-date\\\\\\\\\\\\\\\">{formattedDate}</div>\\\\\\\\n      </div>\\\\\\\\n      <p>{description}</p>\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{ text: content }}\\\\\\\\n      />\\\\\\\\n    </Container>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.molecule.Button\": {\"\": \"const styles = `\\\\\\\\n  padding: 0.5rem 1.2rem !important;\\\\\\\\n  min-height: 36px;\\\\\\\\n  line-height: 1.5;\\\\\\\\n  text-decoration: none !important;\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    pointer-events: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:not(.shadow-none) {\\\\\\\\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\\\\\\\\n    transition: box-shadow 0.6s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &.btn-sm {\\\\\\\\n    padding: 0.5rem 0.8rem !important;\\\\\\\\n    min-height: 32px;\\\\\\\\n    line-height: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &.btn-lg {\\\\\\\\n    padding: 1rem 1.5rem !important;\\\\\\\\n    min-height: 48px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &.btn-primary {\\\\\\\\n    border: none;\\\\\\\\n    --bs-btn-color: #ffffff;\\\\\\\\n    --bs-btn-bg: #087990;\\\\\\\\n    --bs-btn-border-color: #087990;\\\\\\\\n    --bs-btn-hover-color: #ffffff;\\\\\\\\n    --bs-btn-hover-bg: #055160;\\\\\\\\n    --bs-btn-hover-border-color: #055160;\\\\\\\\n    --bs-btn-focus-shadow-rgb: 49, 132, 253;\\\\\\\\n    --bs-btn-active-color: #ffffff;\\\\\\\\n    --bs-btn-active-bg: #055160;\\\\\\\\n    --bs-btn-active-border-color: #055160;\\\\\\\\n    --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\\\\\\\\n    --bs-btn-disabled-color: #ffffff;\\\\\\\\n    --bs-btn-disabled-bg: #0551604a;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n\\\\\\\\t&.btn-outline-primary {\\\\\\\\n\\\\\\\\t\\\\\\\\t--bs-btn-color: #087990;\\\\\\\\n\\\\\\\\t\\\\\\\\t--bs-btn-border-color: #087990;\\\\\\\\n\\\\\\\\t\\\\\\\\t--bs-btn-hover-color: #ffffff;\\\\\\\\n\\\\\\\\t\\\\\\\\t--bs-btn-hover-bg: #087990;\\\\\\\\n\\\\\\\\t\\\\\\\\t--bs-btn-hover-border-color: #087990;\\\\\\\\n\\\\\\\\t\\\\\\\\t--bs-btn-focus-shadow-rgb: 49, 132, 253;\\\\\\\\n\\\\\\\\t\\\\\\\\t--bs-btn-active-color: #ffffff;\\\\\\\\n\\\\\\\\t\\\\\\\\t--bs-btn-active-bg: #087990;\\\\\\\\n\\\\\\\\t\\\\\\\\t--bs-btn-active-border-color: #087990;\\\\\\\\n\\\\\\\\t\\\\\\\\t--bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\\\\\\\\n\\\\\\\\t\\\\\\\\t--bs-btn-disabled-border-color: #0551604a;\\\\\\\\n\\\\\\\\t}\\\\\\\\n\\\\\\\\n  &[class*=\\\\\\\\\\\\\\\"btn-outline-\\\\\\\\\\\\\\\"] {\\\\\\\\n    border-width: 2px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &.btn-outline-primary {\\\\\\\\n    --bs-btn-disabled-color: #6c757d8f;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &.btn-secondary {\\\\\\\\n    border: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &.btn-outline-secondary {\\\\\\\\n    --bs-btn-disabled-color: #6c757d8f;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &.btn-success {\\\\\\\\n    border: none;\\\\\\\\n    --bs-btn-disabled-bg: #35482a4a;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &.btn-outline-success {\\\\\\\\n    --bs-btn-disabled-color: #6c757d8f;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &.btn-danger {\\\\\\\\n    border: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &.btn-outline-danger {\\\\\\\\n    --bs-btn-disabled-color: #6c757d8f;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &.btn-warning {\\\\\\\\n    border: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &.btn-outline-warning {\\\\\\\\n    --bs-btn-disabled-color: #6c757d8f;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &.btn-info {\\\\\\\\n    border: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &.btn-outline-info {\\\\\\\\n    --bs-btn-disabled-color: #6c757d8f;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst rootElementByType = (type) =>\\\\\\\\n  type === \\\\\\\\\\\\\\\"link\\\\\\\\\\\\\\\"\\\\\\\\n    ? styled.a`\\\\\\\\n        ${styles}\\\\\\\\n      `\\\\\\\\n    : styled.button`\\\\\\\\n        ${styles}\\\\\\\\n      `;\\\\\\\\n\\\\\\\\nconst Button = ({\\\\\\\\n  classNames,\\\\\\\\n  icon: iconProps,\\\\\\\\n  label,\\\\\\\\n  type,\\\\\\\\n  isHidden,\\\\\\\\n  notRounded,\\\\\\\\n  loading,\\\\\\\\n  disabled,\\\\\\\\n  ...restProps\\\\\\\\n}) => {\\\\\\\\n  const ButtonRoot = rootElementByType(type);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ButtonRoot\\\\\\\\n      className={[\\\\\\\\n        \\\\\\\\\\\\\\\"btn d-inline-flex align-items-center gap-2\\\\\\\\\\\\\\\",\\\\\\\\n        classNames?.root ?? \\\\\\\\\\\\\\\"btn-primary\\\\\\\\\\\\\\\",\\\\\\\\n        !notRounded ?? \\\\\\\\\\\\\\\"rounded-pill\\\\\\\\\\\\\\\",\\\\\\\\n        isHidden ?? false ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n        disabled ? \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n      ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n      disabled={disabled}\\\\\\\\n      style={{ width: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}\\\\\\\\n      {...restProps}\\\\\\\\n      data-testid={props.testId ?? \\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"}\\\\\\\\n    >\\\\\\\\n      {iconProps !== null &&\\\\\\\\n        !props.loading &&\\\\\\\\n        typeof iconProps === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" &&\\\\\\\\n        !Array.isArray(iconProps) && (\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.atom.Icon\\\\\\\\\\\\\\\"}\\\\\\\\n            props={iconProps}\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      {props.loading ? LoadingButtonSpinner : null}\\\\\\\\n      <span className={classNames?.label} style={{ lineHeight: \\\\\\\\\\\\\\\"inherit\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {label}\\\\\\\\n      </span>\\\\\\\\n    </ButtonRoot>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn Button(props);\\\\\\\\n\"}, \"devhub.components.molecule.Switch\": {\"\": \"const {\\\\\\\\n  className,\\\\\\\\n  currentValue,\\\\\\\\n  isHidden,\\\\\\\\n  key,\\\\\\\\n  onChange,\\\\\\\\n  options,\\\\\\\\n  title,\\\\\\\\n  style,\\\\\\\\n} = props;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div\\\\\\\\n    className={[\\\\\\\\n      \\\\\\\\\\\\\\\"btn-group shadow\\\\\\\\\\\\\\\",\\\\\\\\n      className ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n      isHidden ?? false ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n    style={style ?? {}}\\\\\\\\n    role=\\\\\\\\\\\\\\\"group\\\\\\\\\\\\\\\"\\\\\\\\n    aria-label={title}\\\\\\\\n    key={`${key}-${value}`}\\\\\\\\n    {...{ title }}\\\\\\\\n  >\\\\\\\\n    {options.map(({ label, value }) => (\\\\\\\\n      <>\\\\\\\\n        <input\\\\\\\\n          checked={currentValue === value}\\\\\\\\n          className=\\\\\\\\\\\\\\\"btn-check\\\\\\\\\\\\\\\"\\\\\\\\n          id={`${key}-${value}`}\\\\\\\\n          name={`${key}-${value}`}\\\\\\\\n          type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"\\\\\\\\n          {...{ onChange, value }}\\\\\\\\n        />\\\\\\\\n\\\\\\\\n        <label\\\\\\\\n          className={[\\\\\\\\n            \\\\\\\\\\\\\\\"btn btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n            currentValue === value ? \\\\\\\\\\\\\\\"btn-dark\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"btn-light\\\\\\\\\\\\\\\",\\\\\\\\n          ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n          for={`${key}-${value}`}\\\\\\\\n        >\\\\\\\\n          {label}\\\\\\\\n        </label>\\\\\\\\n      </>\\\\\\\\n    ))}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.blogv2.Viewer\": {\"\": \"const { Tailwind } = VM.require(\\\\\\\\\\\\\\\"uiisnear.near/widget/tailwind\\\\\\\\\\\\\\\");\\\\\\\\nconst { ButtonConf } = VM.require(\\\\\\\\\\\\\\\"uiisnear.near/widget/button\\\\\\\\\\\\\\\");\\\\\\\\nconst {\\\\\\\\n  Pagination,\\\\\\\\n  PaginationContent,\\\\\\\\n  PaginationItem,\\\\\\\\n  PaginationLink,\\\\\\\\n  PaginationPrevious,\\\\\\\\n  PaginationNext,\\\\\\\\n  PaginationEllipsis,\\\\\\\\n  paginationPreviousClassname,\\\\\\\\n  paginationNextClassname,\\\\\\\\n} = VM.require(\\\\\\\\\\\\\\\"uiisnear.near/widget/pagination\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst { Card } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.Card\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!Card) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\") || (() => {});\\\\\\\\n\\\\\\\\nconst [paginationLink, setPaginationLink] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [paginationLinkPrevious, setPaginationLinkPrevious] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [paginationLinkNext, setPaginationLinkNext] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [paginationLinkActive, setPaginationLinkActive] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (ButtonConf == undefined) return \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nif (paginationLink === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n  return <ButtonConf output={setPaginationLink} variant=\\\\\\\\\\\\\\\"ghost\\\\\\\\\\\\\\\" size=\\\\\\\\\\\\\\\"icon\\\\\\\\\\\\\\\" />;\\\\\\\\nif (paginationLinkPrevious === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n  return (\\\\\\\\n    <ButtonConf\\\\\\\\n      output={setPaginationLinkPrevious}\\\\\\\\n      variant=\\\\\\\\\\\\\\\"ghost\\\\\\\\\\\\\\\"\\\\\\\\n      size=\\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\"\\\\\\\\n      className={paginationPreviousClassname}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\nif (paginationLinkNext === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n  return (\\\\\\\\n    <ButtonConf\\\\\\\\n      output={setPaginationLinkNext}\\\\\\\\n      variant=\\\\\\\\\\\\\\\"ghost\\\\\\\\\\\\\\\"\\\\\\\\n      size=\\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\"\\\\\\\\n      className={paginationNextClassname}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\nif (paginationLinkActive === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n  return (\\\\\\\\n    <ButtonConf\\\\\\\\n      output={setPaginationLinkActive}\\\\\\\\n      variant=\\\\\\\\\\\\\\\"outline\\\\\\\\\\\\\\\"\\\\\\\\n      size=\\\\\\\\\\\\\\\"icon\\\\\\\\\\\\\\\"\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n\\\\\\\\nif (Tailwind == undefined) return \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst {\\\\\\\\n  data,\\\\\\\\n  handle,\\\\\\\\n  hideTitle,\\\\\\\\n  communityAddonId,\\\\\\\\n  setAddonView,\\\\\\\\n  transactionHashes,\\\\\\\\n  permissions,\\\\\\\\n} = props;\\\\\\\\n\\\\\\\\nconst Grid = styled.div`\\\\\\\\n  display: grid;\\\\\\\\n  grid-template-columns: repeat(3, minmax(0, 1fr));\\\\\\\\n  gap: 1rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    display: flex;\\\\\\\\n    flex-direction: column;\\\\\\\\n    gap: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  color: #151515;\\\\\\\\n  font-size: 2rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 120%; /* 48px */\\\\\\\\n  margin-bottom: 0.5rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 1.5rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst SubHeading = styled.div`\\\\\\\\n  color: #3b3b3b;\\\\\\\\n  font-size: 1.5rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 600;\\\\\\\\n  line-height: 100%;\\\\\\\\n  margin-bottom: 2rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CardContainer = styled.div`\\\\\\\\n  transition: all 300ms;\\\\\\\\n  border-radius: 1rem;\\\\\\\\n  height: 100%;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1),\\\\\\\\n      0 4px 6px -4px rgb(0 0 0 / 0.1);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (!handle) {\\\\\\\\n  return <div>Missing handle</div>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [blogPostQueryString, setBlogPostQueryString] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [blogPostFilterCategory, setBlogPostFilterCategory] = useState(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst blogPostQueryStringLowerCase = blogPostQueryString\\\\\\\\n  ? blogPostQueryString.toLowerCase().trim()\\\\\\\\n  : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst [blogData, setBlogData] = useState([]);\\\\\\\\n\\\\\\\\nconst initialBlogData = Social.get(\\\\\\\\n  [`${handle}.community.devhub.near/blog/**`],\\\\\\\\n  \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (initialBlogData) {\\\\\\\\n    setBlogData(initialBlogData);\\\\\\\\n  }\\\\\\\\n}, [initialBlogData]);\\\\\\\\n\\\\\\\\nconst categories = {\\\\\\\\n  none: {\\\\\\\\n    label: \\\\\\\\\\\\\\\"None\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction flattenBlogObject(blogsObject) {\\\\\\\\n  if (!blogsObject) return [];\\\\\\\\n  return (\\\\\\\\n    Object.keys(blogsObject)\\\\\\\\n      .map((key) => {\\\\\\\\n        return {\\\\\\\\n          ...blogsObject[key].metadata,\\\\\\\\n          id: key,\\\\\\\\n          content: blogsObject[key][\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"],\\\\\\\\n        };\\\\\\\\n      })\\\\\\\\n      // Show only published blogs\\\\\\\\n      .filter((blog) => blog.status === \\\\\\\\\\\\\\\"PUBLISH\\\\\\\\\\\\\\\")\\\\\\\\n      // Every instance of the blog tab has its own blogs\\\\\\\\n      .filter((blog) => blog.communityAddonId === communityAddonId)\\\\\\\\n      // Add categories to the dropdown\\\\\\\\n      .map((flattenedBlog) => {\\\\\\\\n        if (!categories[flattenedBlog.category]) {\\\\\\\\n          categories[flattenedBlog.category] = {\\\\\\\\n            label: flattenedBlog.category,\\\\\\\\n            value: flattenedBlog.category,\\\\\\\\n          };\\\\\\\\n        }\\\\\\\\n        return flattenedBlog;\\\\\\\\n      })\\\\\\\\n      .filter(\\\\\\\\n        (flattenedBlog) =>\\\\\\\\n          !blogPostQueryStringLowerCase ||\\\\\\\\n          flattenedBlog.content\\\\\\\\n            ?.toLowerCase()\\\\\\\\n            .includes(blogPostQueryStringLowerCase) ||\\\\\\\\n          flattenedBlog.title\\\\\\\\n            ?.toLowerCase()\\\\\\\\n            .includes(blogPostQueryStringLowerCase) ||\\\\\\\\n          flattenedBlog.subtitle\\\\\\\\n            ?.toLowerCase()\\\\\\\\n            .includes(blogPostQueryStringLowerCase)\\\\\\\\n      )\\\\\\\\n      .filter(\\\\\\\\n        (flattenedBlog) =>\\\\\\\\n          !blogPostFilterCategory ||\\\\\\\\n          flattenedBlog.category === blogPostFilterCategory\\\\\\\\n      )\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nfunction checkHashes() {\\\\\\\\n  if (transactionHashes) {\\\\\\\\n    // Fetch new blog data\\\\\\\\n    const subscribeToBlogForNextFifteenSec = (tries) => {\\\\\\\\n      if (tries >= 5) {\\\\\\\\n        return;\\\\\\\\n      }\\\\\\\\n      Near.asyncView(\\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get\\\\\\\\\\\\\\\", {\\\\\\\\n        keys: [`${handle}.community.devhub.near/blog/**`],\\\\\\\\n      }).then((result) => {\\\\\\\\n        try {\\\\\\\\n          const newBlogPosts = result[`${handle}.community.devhub.near`].blog;\\\\\\\\n          // Check the number of blogs in this instance with a different status\\\\\\\\n          if (\\\\\\\\n            flattenBlogObject(newBlogPosts).length !==\\\\\\\\n            flattenBlogObject(blogData).length\\\\\\\\n          ) {\\\\\\\\n            setBlogData(newBlogPosts);\\\\\\\\n          } else {\\\\\\\\n            setTimeout(() => {\\\\\\\\n              subscribeToBlogForNextFifteenSec(tries + 1);\\\\\\\\n            }, 3000);\\\\\\\\n          }\\\\\\\\n        } catch (e) {}\\\\\\\\n      });\\\\\\\\n    };\\\\\\\\n    // After a second subscribe to the blog data\\\\\\\\n    setTimeout(() => {\\\\\\\\n      subscribeToBlogForNextFifteenSec(0);\\\\\\\\n    }, 1000);\\\\\\\\n  }\\\\\\\\n}\\\\\\\\nuseEffect(() => {\\\\\\\\n  // Only render one time\\\\\\\\n  checkHashes();\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst processedData = flattenBlogObject(blogData)\\\\\\\\n  // Sort by published date\\\\\\\\n  .sort((blog1, blog2) => {\\\\\\\\n    if (data.orderBy === \\\\\\\\\\\\\\\"timeasc\\\\\\\\\\\\\\\") {\\\\\\\\n      return new Date(blog1.publishedAt) - new Date(blog2.publishedAt);\\\\\\\\n    }\\\\\\\\n    if (data.orderBy === \\\\\\\\\\\\\\\"alpha\\\\\\\\\\\\\\\") {\\\\\\\\n      return (blog1.title || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").localeCompare(blog2.title || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n    }\\\\\\\\n    // timedesc is the default order\\\\\\\\n    return new Date(blog2.publishedAt) - new Date(blog1.publishedAt);\\\\\\\\n  });\\\\\\\\n\\\\\\\\n// Pagination\\\\\\\\nconst [currentPage, setCurrentPage] = useState(0);\\\\\\\\nconst amountOfBlogPosts = processedData.length || 0;\\\\\\\\nconst amountOfBlogPostsPerPage = data.postPerPage || 100; // Default to 100 if not set\\\\\\\\nconst amountOfPages = Math.ceil(amountOfBlogPosts / amountOfBlogPostsPerPage);\\\\\\\\nlet currentPageData = (processedData || [1, 2, 3, 4, 5]).slice(\\\\\\\\n  currentPage * amountOfBlogPostsPerPage,\\\\\\\\n  (currentPage + 1) * amountOfBlogPostsPerPage\\\\\\\\n);\\\\\\\\nconst showPreviousButton = currentPage !== 0;\\\\\\\\nconst showNextButton = currentPage !== amountOfPages - 1;\\\\\\\\n// End Pagination\\\\\\\\n\\\\\\\\nfunction BlogCardWithLink(flattenedBlog) {\\\\\\\\n  return (\\\\\\\\n    <Link\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n      to={href({\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"blogv2\\\\\\\\\\\\\\\",\\\\\\\\n          id: flattenedBlog.id,\\\\\\\\n          community: handle,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n    >\\\\\\\\n      {BlogCard(flattenedBlog)}\\\\\\\\n    </Link>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction BlogCard(flattenedBlog) {\\\\\\\\n  return (\\\\\\\\n    <CardContainer>\\\\\\\\n      <Card data={flattenedBlog} addonParameters={data} />\\\\\\\\n    </CardContainer>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst searchInput = useMemo(\\\\\\\\n  () => (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n        props={{\\\\\\\\n          key: \\\\\\\\\\\\\\\"search-blog-posts\\\\\\\\\\\\\\\",\\\\\\\\n          className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n          skipPaddingGap: true,\\\\\\\\n          placeholder: \\\\\\\\\\\\\\\"search blog posts\\\\\\\\\\\\\\\",\\\\\\\\n          debounceTimeout: 300,\\\\\\\\n          onChange: (e) => {\\\\\\\\n            setBlogPostQueryString(e.target.value);\\\\\\\\n          },\\\\\\\\n          inputProps: {\\\\\\\\n            prefix: <i class=\\\\\\\\\\\\\\\"bi bi-search m-auto\\\\\\\\\\\\\\\"></i>,\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  ),\\\\\\\\n  []\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst categoryInput = useMemo(() => {\\\\\\\\n  const options = Object.values(categories);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n        props={{\\\\\\\\n          options: options,\\\\\\\\n          label: \\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\",\\\\\\\\n          onUpdate: (selectedCategory) => {\\\\\\\\n            setBlogPostFilterCategory(selectedCategory.value);\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}, [categories]);\\\\\\\\n\\\\\\\\nif (!processedData || processedData.length === 0) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center justify-content-center gap-4\\\\\\\\\\\\\\\"\\\\\\\\n      style={{ height: 384 }}\\\\\\\\n    >\\\\\\\\n      <h5 className=\\\\\\\\\\\\\\\"h5 d-inline-flex gap-2 m-0 text-center\\\\\\\\\\\\\\\">\\\\\\\\n        {\\\\\\\\\\\\\\\"This blog isn\\\\\\\\\\\\'t configured yet.\\\\\\\\\\\\\\\"}\\\\\\\\n        <br />\\\\\\\\n        {permissions.can_configure\\\\\\\\n          ? \\\\\\\\\\\\\\\"Go to settings to configure your blog or create your first post.\\\\\\\\\\\\\\\"\\\\\\\\n          : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n      </h5>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div class=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n    {!hideTitle && (\\\\\\\\n      <Heading data-testid=\\\\\\\\\\\\\\\"blog-instance-title\\\\\\\\\\\\\\\">{data.title || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}</Heading>\\\\\\\\n    )}\\\\\\\\n    {!hideTitle && (\\\\\\\\n      <SubHeading data-testid=\\\\\\\\\\\\\\\"blog-instance-subtitle\\\\\\\\\\\\\\\">\\\\\\\\n        {data.subtitle || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n      </SubHeading>\\\\\\\\n    )}\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-start flex-wrap gap-2 align-items-center mb-5\\\\\\\\\\\\\\\">\\\\\\\\n      {data.searchEnabled === \\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\\" ? searchInput : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n      {data.categoriesEnabled === \\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\\" ? categoryInput : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n    </div>\\\\\\\\n    <Grid>\\\\\\\\n      {processedData &&\\\\\\\\n        currentPageData.map((flattenedBlog) => BlogCardWithLink(flattenedBlog))}\\\\\\\\n    </Grid>\\\\\\\\n    <Tailwind>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"flex mx-auto w-max pt-10\\\\\\\\\\\\\\\">\\\\\\\\n        <Pagination>\\\\\\\\n          <PaginationContent>\\\\\\\\n            {showPreviousButton && (\\\\\\\\n              <PaginationItem>\\\\\\\\n                <PaginationPrevious\\\\\\\\n                  className={paginationLinkPrevious}\\\\\\\\n                  onClick={() => setCurrentPage(currentPage - 1)}\\\\\\\\n                />\\\\\\\\n              </PaginationItem>\\\\\\\\n            )}\\\\\\\\n            {[...Array(amountOfPages)].map((_, index) => {\\\\\\\\n              return (\\\\\\\\n                <PaginationItem>\\\\\\\\n                  <PaginationLink\\\\\\\\n                    className={\\\\\\\\n                      index === currentPage\\\\\\\\n                        ? paginationLinkActive\\\\\\\\n                        : paginationLink\\\\\\\\n                    }\\\\\\\\n                    isActive={index === currentPage}\\\\\\\\n                    onClick={() => setCurrentPage(index)}\\\\\\\\n                  >\\\\\\\\n                    {index + 1}\\\\\\\\n                  </PaginationLink>\\\\\\\\n                </PaginationItem>\\\\\\\\n              );\\\\\\\\n            })}\\\\\\\\n            {showNextButton && (\\\\\\\\n              <PaginationItem>\\\\\\\\n                <PaginationNext\\\\\\\\n                  className={paginationLinkNext}\\\\\\\\n                  onClick={() => setCurrentPage(currentPage + 1)}\\\\\\\\n                />\\\\\\\\n              </PaginationItem>\\\\\\\\n            )}\\\\\\\\n          </PaginationContent>\\\\\\\\n        </Pagination>\\\\\\\\n      </div>\\\\\\\\n    </Tailwind>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.molecule.DropDown\": {\"\": \"const options = props.options; // [{label:\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",value:\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\nconst label = props.label;\\\\\\\\nconst onUpdate = props.onUpdate ?? (() => {});\\\\\\\\nconst selectedValue = props.selectedValue;\\\\\\\\nconst [selected, setSelected] = useState(selectedValue);\\\\\\\\n\\\\\\\\nconst StyledDropdown = styled.div`\\\\\\\\n  .drop-btn {\\\\\\\\n    width: 100%;\\\\\\\\n    max-width: 200px;\\\\\\\\n    text-align: left;\\\\\\\\n    padding-inline: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item.active,\\\\\\\\n  .dropdown-item:active {\\\\\\\\n    background-color: #f0f0f0 !important;\\\\\\\\n    color: black;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  onUpdate(selected);\\\\\\\\n}, [selected]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"dropdown w-100\\\\\\\\\\\\\\\" data-testid=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n      <StyledDropdown>\\\\\\\\n        <button\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn drop-btn text-truncate dropdown-toggle bg-white border rounded-2\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n          aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          {label} {selected && label && \\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"} {selected.label}\\\\\\\\n        </button>\\\\\\\\n        <ul class=\\\\\\\\\\\\\\\"dropdown-menu dropdown-menu-end dropdown-menu-lg-start px-2 shadow\\\\\\\\\\\\\\\">\\\\\\\\n          {options.map((item) => (\\\\\\\\n            <li\\\\\\\\n              style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n              onClick={() => {\\\\\\\\n                if (selected.label !== item.label) {\\\\\\\\n                  setSelected(item);\\\\\\\\n                }\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {item.label}\\\\\\\\n            </li>\\\\\\\\n          ))}\\\\\\\\n        </ul>\\\\\\\\n      </StyledDropdown>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.molecule.BlogControl\": {\"\": \"const { title, onClick, icon, color, loading } = props;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <button\\\\\\\\n    type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n    data-testid={props.testId ? props.testId : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n    className=\\\\\\\\\\\\\\\"btn btn-primary inline-flex items-center gap-x-1.5 rounded-md bg-devhub-green px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-devhub-green-transparent focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ backgroundColor: color }}\\\\\\\\n    onClick={props.onClick}\\\\\\\\n    disabled={props.disabled}\\\\\\\\n  >\\\\\\\\n    <i className={`-ml-0.5 h-5 w-5 bi ${props.icon}`} aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"></i>\\\\\\\\n    {loading ? \\\\\\\\\\\\\\\"Loading...\\\\\\\\\\\\\\\" : props.title || \\\\\\\\\\\\\\\"New Blog Post\\\\\\\\\\\\\\\"}\\\\\\\\n  </button>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.molecule.ShareButton\": {\"\": \"const postType = props.postType ?? \\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\";\\\\\\\\nconst externalLink = props.externalLink;\\\\\\\\nconst className = props.className;\\\\\\\\nconst size = props.size ?? \\\\\\\\\\\\\\\"20px\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst clickbaitPrompt =\\\\\\\\n  props.clickbaitPrompt ??\\\\\\\\n  `Check out this ${postType} on @NearSocial_\\\\\\\\\\\\\\\\n#NearSocial #NEAR #BOS\\\\\\\\\\\\\\\\n${externalLink}`;\\\\\\\\n\\\\\\\\nconst twitterUrl = new URL(\\\\\\\\\\\\\\\"https://twitter.com/intent/tweet\\\\\\\\\\\\\\\");\\\\\\\\ntwitterUrl.searchParams.set(\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\", clickbaitPrompt);\\\\\\\\n\\\\\\\\nconst mailtoUrl = new URL(\\\\\\\\\\\\\\\"mailto:\\\\\\\\\\\\\\\");\\\\\\\\nmailtoUrl.searchParams.set(\\\\\\\\n  \\\\\\\\\\\\\\\"subject\\\\\\\\\\\\\\\",\\\\\\\\n  `Check out this ${postType} on Near Social`\\\\\\\\n);\\\\\\\\nmailtoUrl.searchParams.set(\\\\\\\\n  \\\\\\\\\\\\\\\"body\\\\\\\\\\\\\\\",\\\\\\\\n  `Take a look this ${postType}.\\\\\\\\n${externalLink}\\\\\\\\n`\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst shareSvg = (\\\\\\\\n  <svg\\\\\\\\n    xmlns=\\\\\\\\\\\\\\\"http://www.w3.org/2000/svg\\\\\\\\\\\\\\\"\\\\\\\\n    style={{ width: size }}\\\\\\\\n    fill=\\\\\\\\\\\\\\\"currentColor\\\\\\\\\\\\\\\"\\\\\\\\n    viewBox=\\\\\\\\\\\\\\\"0 0 16 16\\\\\\\\\\\\\\\"\\\\\\\\n    stroke=\\\\\\\\\\\\\\\"currentColor\\\\\\\\\\\\\\\"\\\\\\\\n    strokeWidth=\\\\\\\\\\\\\\\"0.363\\\\\\\\\\\\\\\"\\\\\\\\n  >\\\\\\\\n    <path d=\\\\\\\\\\\\\\\"M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z\\\\\\\\\\\\\\\" />\\\\\\\\n    <path d=\\\\\\\\\\\\\\\"M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z\\\\\\\\\\\\\\\" />\\\\\\\\n  </svg>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Button = styled.div`\\\\\\\\n  display: inline-flex;\\\\\\\\n  align-items: center;\\\\\\\\n  justify-content: left;\\\\\\\\n  background: inherit;\\\\\\\\n  color: inherit;\\\\\\\\n  .icon {\\\\\\\\n    position: relative;\\\\\\\\n    &:before {\\\\\\\\n      content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n      position: absolute;\\\\\\\\n      top: 0;\\\\\\\\n      left: 0;\\\\\\\\n      bottom: 0;\\\\\\\\n      right: 0;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:not([disabled]) {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:not([disabled]):hover {\\\\\\\\n    opacity: 1 !important;\\\\\\\\n    color: rgba(0, 0, 0, 0.5);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <span className={className}>\\\\\\\\n    <Button data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\" aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\" title=\\\\\\\\\\\\\\\"Share\\\\\\\\\\\\\\\">\\\\\\\\n      <span className=\\\\\\\\\\\\\\\"icon\\\\\\\\\\\\\\\">{shareSvg}</span>\\\\\\\\n      <span className=\\\\\\\\\\\\\\\"count\\\\\\\\\\\\\\\" />\\\\\\\\n    </Button>\\\\\\\\n    <ul className=\\\\\\\\\\\\\\\"dropdown-menu\\\\\\\\\\\\\\\">\\\\\\\\n      <li>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"mob.near/widget/CopyButton\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            text: externalLink,\\\\\\\\n            className: \\\\\\\\\\\\\\\"btn btn-outline-dark dropdown-item\\\\\\\\\\\\\\\",\\\\\\\\n            label: `Copy link to ${postType}`,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </li>\\\\\\\\n      <li className=\\\\\\\\\\\\\\\"dropdown-item\\\\\\\\\\\\\\\">\\\\\\\\n        <a\\\\\\\\n          className=\\\\\\\\\\\\\\\"link-dark text-decoration-none\\\\\\\\\\\\\\\"\\\\\\\\n          href={mailtoUrl.toString()}\\\\\\\\n          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-envelope-at\\\\\\\\\\\\\\\" /> Share by email\\\\\\\\n        </a>\\\\\\\\n      </li>\\\\\\\\n      <li className=\\\\\\\\\\\\\\\"dropdown-item\\\\\\\\\\\\\\\">\\\\\\\\n        <a\\\\\\\\n          className=\\\\\\\\\\\\\\\"link-dark text-decoration-none\\\\\\\\\\\\\\\"\\\\\\\\n          href={twitterUrl.toString()}\\\\\\\\n          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-twitter\\\\\\\\\\\\\\\" />\\\\\\\\n          Share on Twitter\\\\\\\\n        </a>\\\\\\\\n      </li>\\\\\\\\n    </ul>\\\\\\\\n  </span>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.blogv2.editor.form\": {\"\": \"const FormContainer = styled.div`\\\\\\\\n  & > *:not(:last-child) {\\\\\\\\n    margin-bottom: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst {\\\\\\\\n  title,\\\\\\\\n  setTitle,\\\\\\\\n  subtitle,\\\\\\\\n  setSubtitle,\\\\\\\\n  options,\\\\\\\\n  category,\\\\\\\\n  setCategory,\\\\\\\\n  description,\\\\\\\\n  setDescription,\\\\\\\\n  debouncedUpdateState,\\\\\\\\n  author,\\\\\\\\n  setAuthor,\\\\\\\\n  date,\\\\\\\\n  setDate,\\\\\\\\n  content,\\\\\\\\n  setContent,\\\\\\\\n  addonParameters,\\\\\\\\n} = props;\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (e) => setTitle(e.target.value),\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 80,\\\\\\\\n          required: true,\\\\\\\\n          name: \\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\",\\\\\\\\n          className:\\\\\\\\n            \\\\\\\\\\\\\\\"block w-full rounded-md border-0 px-1 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst SubtitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: subtitle,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Subtitle\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (e) => setSubtitle(e.target.value),\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          required: true,\\\\\\\\n          max: 80,\\\\\\\\n          name: \\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\",\\\\\\\\n          className:\\\\\\\\n            \\\\\\\\\\\\\\\"block w-full rounded-md border-0 px-1 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst CategorySelect = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\n        \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.editor.CategoryDropdown\\\\\\\\\\\\\\\"\\\\\\\\n      }\\\\\\\\n      props={{\\\\\\\\n        options,\\\\\\\\n        selectedValue: category,\\\\\\\\n        onChange: setCategory,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst DescriptionInput = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (e) => setDescription(e.target.value),\\\\\\\\n        value: description,\\\\\\\\n        multiline: true,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\",\\\\\\\\n        inputProps: {\\\\\\\\n          max: 500,\\\\\\\\n          name: \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\",\\\\\\\\n          className:\\\\\\\\n            \\\\\\\\\\\\\\\"block w-full rounded-md border-0 px-1 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        key: \\\\\\\\\\\\\\\"description-input-field\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst AuthorInput = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (e) => setAuthor(e.target.value),\\\\\\\\n        value: author,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\",\\\\\\\\n        inputProps: {\\\\\\\\n          name: \\\\\\\\\\\\\\\"author\\\\\\\\\\\\\\\",\\\\\\\\n          className:\\\\\\\\n            \\\\\\\\\\\\\\\"block w-full rounded-md border-0 px-1 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        key: \\\\\\\\\\\\\\\"author-input-field\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst DateInput = () => {\\\\\\\\n  return (\\\\\\\\n    <input\\\\\\\\n      name=\\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\\"\\\\\\\\n      type=\\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\\"\\\\\\\\n      value={date}\\\\\\\\n      className=\\\\\\\\\\\\\\\"block w-full rounded-md border-0 px-1 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\\\\\\\\\\\\\\\"\\\\\\\\n      onChange={(e) => setDate(e.target.value)}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst ContentEditor = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownEditor\\\\\\\\\\\\\\\"\\\\\\\\n      props={{ data: { content }, onChange: setContent, autoFocus: false }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <FormContainer id=\\\\\\\\\\\\\\\"blog-editor-form\\\\\\\\\\\\\\\">\\\\\\\\n    <InputContainer\\\\\\\\n      heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n      description=\\\\\\\\\\\\\\\"Highlight the essence of your blog in a few words. This will appear on your blog card and on the top of your blog.\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      {TitleComponent}\\\\\\\\n    </InputContainer>\\\\\\\\n    <InputContainer\\\\\\\\n      heading=\\\\\\\\\\\\\\\"Subtitle\\\\\\\\\\\\\\\"\\\\\\\\n      description=\\\\\\\\\\\\\\\"Provide a brief subtitle for the blog\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      {SubtitleComponent}\\\\\\\\n    </InputContainer>\\\\\\\\n    {addonParameters.categoriesEnabled === \\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\\" ? (\\\\\\\\n      <InputContainer\\\\\\\\n        heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n        description={\\\\\\\\n          <>\\\\\\\\n            Choose the category that fits your blog best. Set up your categories\\\\\\\\n            in the blog settings.\\\\\\\\n          </>\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        {CategorySelect}\\\\\\\\n      </InputContainer>\\\\\\\\n    ) : (\\\\\\\\n      <></>\\\\\\\\n    )}\\\\\\\\n\\\\\\\\n    <InputContainer\\\\\\\\n      heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n      description=\\\\\\\\\\\\\\\"Provide a brief description for the blog. This will appear on the blog card.\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      {DescriptionInput}\\\\\\\\n    </InputContainer>\\\\\\\\n    {addonParameters.authorEnabled === \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" ? (\\\\\\\\n      <></>\\\\\\\\n    ) : (\\\\\\\\n      <InputContainer heading=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\" description=\\\\\\\\\\\\\\\"Who wrote this blog?\\\\\\\\\\\\\\\">\\\\\\\\n        {AuthorInput}\\\\\\\\n      </InputContainer>\\\\\\\\n    )}\\\\\\\\n    <InputContainer\\\\\\\\n      heading=\\\\\\\\\\\\\\\"Visible Publish Date\\\\\\\\\\\\\\\"\\\\\\\\n      description=\\\\\\\\\\\\\\\"What date do you want to have the blog published under?\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <DateInput />\\\\\\\\n    </InputContainer>\\\\\\\\n\\\\\\\\n    <InputContainer\\\\\\\\n      heading=\\\\\\\\\\\\\\\"Content\\\\\\\\\\\\\\\"\\\\\\\\n      description=\\\\\\\\\\\\\\\"Write your blog here. Use Markdown to format your content.\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      {ContentEditor}\\\\\\\\n    </InputContainer>\\\\\\\\n  </FormContainer>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.blogv2.Configurator\": {\"\": \"const { data, handle, communityAddonId, onSubmit, selectedBlog, permissions } =\\\\\\\\n  props;\\\\\\\\n\\\\\\\\nconst { Tile } =\\\\\\\\n  VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Tile\\\\\\\\\\\\\\\") ||\\\\\\\\n  (() => <></>);\\\\\\\\n\\\\\\\\nif (!Tile) {\\\\\\\\n  return <div>Loading...</div>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 20px 5px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst css = fetch(\\\\\\\\\\\\\\\"https://floatui.com/tailwind.css\\\\\\\\\\\\\\\").body;\\\\\\\\nif (!css) return \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst Tailwind = styled.div`\\\\\\\\n  ${css}\\\\\\\\n\\\\\\\\n  .bg-devhub-green {\\\\\\\\n    background-color: rgb(4, 164, 110);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-devhub-green-light {\\\\\\\\n    background-color: rgba(212, 236, 227, 0.2);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-devhub-green {\\\\\\\\n    color: rgb(4, 164, 110);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-devhub-gray {\\\\\\\\n    color: #6c757d;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .hover\\\\\\\\\\\\\\\\:bg-devhub-green-transparent:hover {\\\\\\\\n    background-color: rgba(4, 164, 110, 0.8) !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .w-40 {\\\\\\\\n    width: 10rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .hover-bg-slate-300:hover {\\\\\\\\n    background-color: rgb(244, 244, 244);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (permissions.can_configure !== true) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center justify-content-center gap-4\\\\\\\\\\\\\\\"\\\\\\\\n      style={{ height: 384 }}\\\\\\\\n    >\\\\\\\\n      <h5 className=\\\\\\\\\\\\\\\"h5 d-inline-flex gap-2 m-0\\\\\\\\\\\\\\\">\\\\\\\\n        You don\\\\\\\\\\\\'t have permission to configure this blog.\\\\\\\\n      </h5>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Tailwind>\\\\\\\\n    <Tile className=\\\\\\\\\\\\\\\"p-3 bg-white min-vh-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Container>\\\\\\\\n        <Widget\\\\\\\\n          src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.editor.index\\\\\\\\\\\\\\\"}\\\\\\\\n          props={{\\\\\\\\n            data,\\\\\\\\n            handle,\\\\\\\\n            communityAddonId,\\\\\\\\n            onSubmit,\\\\\\\\n            selectedBlog: props.selectedBlog,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </Container>\\\\\\\\n    </Tile>\\\\\\\\n  </Tailwind>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.blogv2.editor.index\": {\"\": \"let theme = props.theme;\\\\\\\\nlet variables = props.variables;\\\\\\\\n\\\\\\\\nconst {\\\\\\\\n  communityAddonId,\\\\\\\\n  data: addonParameters,\\\\\\\\n  handle,\\\\\\\\n  onSubmit: onSubmitBlogSettings,\\\\\\\\n} = props;\\\\\\\\n\\\\\\\\nif (!variables) {\\\\\\\\n  variables = ``;\\\\\\\\n}\\\\\\\\n\\\\\\\\nif (!theme) {\\\\\\\\n  theme = ``;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Root = styled.div`\\\\\\\\n  ${variables}\\\\\\\\n  ${theme}\\\\\\\\n\\\\\\\\n  a {\\\\\\\\n    text-decoration: none;\\\\\\\\n    color: var(--base900);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  height: 100%;\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Root>\\\\\\\\n    <Container>\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.editor.provider\\\\\\\\\\\\\\\"\\\\\\\\n        props={{\\\\\\\\n          handle,\\\\\\\\n          communityAddonId,\\\\\\\\n          Layout: (providerProps) => {\\\\\\\\n            const {\\\\\\\\n              onSubmit: onSubmitBlogData,\\\\\\\\n              getData,\\\\\\\\n              onDelete,\\\\\\\\n            } = providerProps;\\\\\\\\n            return (\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.editor.layout\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  getData,\\\\\\\\n                  parametersData,\\\\\\\\n                  // On the blog page, when the user clicks on the edit button, the\\\\\\\\n                  // blog id is passed to the Configurator > layout > blogOverview\\\\\\\\n                  selectedBlog: props.selectedBlog,\\\\\\\\n                  BlogOverview: (p) => (\\\\\\\\n                    <Widget\\\\\\\\n                      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.editor.BlogOverview\\\\\\\\\\\\\\\"\\\\\\\\n                      props={{\\\\\\\\n                        ...p,\\\\\\\\n                        ...providerProps,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  ),\\\\\\\\n                  BlogPostSettings: (p) => (\\\\\\\\n                    <Widget\\\\\\\\n                      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.editor.BlogPostSettings\\\\\\\\\\\\\\\"\\\\\\\\n                      props={{\\\\\\\\n                        ...p,\\\\\\\\n                        ...providerProps,\\\\\\\\n                        data: addonParameters,\\\\\\\\n                        onSubmit: onSubmitBlogSettings,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  ),\\\\\\\\n                  Content: (p) => (\\\\\\\\n                    <Widget\\\\\\\\n                      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.editor.content\\\\\\\\\\\\\\\"\\\\\\\\n                      props={{\\\\\\\\n                        onSubmit: onSubmitBlogData,\\\\\\\\n                        onDelete,\\\\\\\\n                        handle: props.handle,\\\\\\\\n                        allBlogs: providerProps.data,\\\\\\\\n                        communityAddonId: props.communityAddonId,\\\\\\\\n                        addonParameters: addonParameters,\\\\\\\\n                        ...p,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  ),\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            );\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </Container>\\\\\\\\n  </Root>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.blogv2.editor.layout\": {\"\": \"const {\\\\\\\\n  BlogOverview,\\\\\\\\n  data: processedBlogData,\\\\\\\\n  Content,\\\\\\\\n  onSubmit,\\\\\\\\n  BlogPostSettings,\\\\\\\\n  selectedBlog,\\\\\\\\n} = props;\\\\\\\\n\\\\\\\\nconst [selectedItem, setSelectedItem] = useState(\\\\\\\\n  selectedBlog ? selectedBlog : null\\\\\\\\n);\\\\\\\\nconst [selectedItemChanged, setSelectedItemChanged] = useState(false);\\\\\\\\n\\\\\\\\nconst [showScreen, setShowScreen] = useState(\\\\\\\\n  selectedBlog ? \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"overview\\\\\\\\\\\\\\\"\\\\\\\\n); // overview, editor, settings\\\\\\\\n\\\\\\\\nconst openBlogPostSettings = () => {\\\\\\\\n  setShowScreen(true);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [isSwitchBlogModalOpen, setIsSwitchBlogModalOpen] = useState(false);\\\\\\\\n\\\\\\\\n// This function checks for unsaved changes and shows a modal if there are any\\\\\\\\nconst checkForUnsavedChanges = (item) => {\\\\\\\\n  const unsavedChanges = selectedItemChanged;\\\\\\\\n  // If the user has edited show the confirm modal otherwise just switch\\\\\\\\n  if (unsavedChanges) {\\\\\\\\n    setIsSwitchBlogModalOpen(item);\\\\\\\\n  } else {\\\\\\\\n    handleItemClick(item);\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\n// This function\\\\\\\\nconst handleItemClick = (item) => {\\\\\\\\n  if (item) {\\\\\\\\n    setSelectedItem(item);\\\\\\\\n    setShowScreen(\\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\");\\\\\\\\n  } else {\\\\\\\\n    setSelectedItem(null);\\\\\\\\n  }\\\\\\\\n  setSelectedItemChanged(false);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst goBack = () => {\\\\\\\\n  setSelectedItem(null);\\\\\\\\n  setShowScreen(\\\\\\\\\\\\\\\"overview\\\\\\\\\\\\\\\");\\\\\\\\n  setSelectedItemChanged(false);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst postHogHref = \\\\\\\\\\\\\\\"https://eu.posthog.com/project/20896\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div style={{ width: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\", height: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\" }}>\\\\\\\\n    {showScreen === \\\\\\\\\\\\\\\"settings\\\\\\\\\\\\\\\" ? (\\\\\\\\n      <BlogPostSettings onHideSettings={() => setShowScreen(\\\\\\\\\\\\\\\"overview\\\\\\\\\\\\\\\")} />\\\\\\\\n    ) : (\\\\\\\\n      <>\\\\\\\\n        {showScreen === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? null : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"flex items-center justify-between w-100 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-xl font-bold\\\\\\\\\\\\\\\">Blog Posts</div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"flex items-end justify-end gap-x-3\\\\\\\\\\\\\\\">\\\\\\\\n              <Link\\\\\\\\n                className=\\\\\\\\\\\\\\\"rounded-md px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm\\\\\\\\\\\\\\\"\\\\\\\\n                href={postHogHref}\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                style={{ backgroundColor: \\\\\\\\\\\\\\\"rgb(104, 112, 118)\\\\\\\\\\\\\\\" }}\\\\\\\\n              >\\\\\\\\n                Analytics\\\\\\\\n              </Link>\\\\\\\\n\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\n                  \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.BlogControl\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                props={{\\\\\\\\n                  title: \\\\\\\\\\\\\\\"Settings\\\\\\\\\\\\\\\",\\\\\\\\n                  color: \\\\\\\\\\\\\\\"rgb(104, 112, 118)\\\\\\\\\\\\\\\",\\\\\\\\n                  onClick: () => setShowScreen(\\\\\\\\\\\\\\\"settings\\\\\\\\\\\\\\\"),\\\\\\\\n                  testId: \\\\\\\\\\\\\\\"settings-button\\\\\\\\\\\\\\\",\\\\\\\\n                  icon: \\\\\\\\\\\\\\\"bi-gear-fill\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\n                  \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.BlogControl\\\\\\\\\\\\\\\"\\\\\\\\n                }\\\\\\\\n                props={{\\\\\\\\n                  title: \\\\\\\\\\\\\\\"New Blog Post\\\\\\\\\\\\\\\",\\\\\\\\n                  onClick: () => {\\\\\\\\n                    handleItemClick(\\\\\\\\\\\\\\\"new\\\\\\\\\\\\\\\");\\\\\\\\n                    setShowScreen(\\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\");\\\\\\\\n                  },\\\\\\\\n                  icon: \\\\\\\\\\\\\\\"bi-plus-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n                  testId: \\\\\\\\\\\\\\\"new-blog-post-button\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"template\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ display: \\\\\\\\\\\\\\\"flex\\\\\\\\\\\\\\\", width: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\", height: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"left-panel\\\\\\\\\\\\\\\"\\\\\\\\n            style={{\\\\\\\\n              width: showScreen === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"20%\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <BlogOverview\\\\\\\\n              selectedItem={selectedItem}\\\\\\\\n              handleItemClick={checkForUnsavedChanges}\\\\\\\\n              hideColumns={showScreen === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\"}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.editor.ConfirmModal\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                isOpen: isSwitchBlogModalOpen,\\\\\\\\n                onCancelClick: () => setIsSwitchBlogModalOpen(false),\\\\\\\\n                onConfirmClick: () => {\\\\\\\\n                  handleItemClick(isSwitchBlogModalOpen);\\\\\\\\n                  setIsSwitchBlogModalOpen(false);\\\\\\\\n                },\\\\\\\\n                title: \\\\\\\\\\\\\\\"Are you sure you want to continue?\\\\\\\\\\\\\\\",\\\\\\\\n                content: \\\\\\\\\\\\\\\"Unsaved changes will be lost.\\\\\\\\\\\\\\\",\\\\\\\\n                confirmLabel: \\\\\\\\\\\\\\\"Continue\\\\\\\\\\\\\\\",\\\\\\\\n                cancelLabel: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                buttonRoot: \\\\\\\\\\\\\\\"btn-danger\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n          {showScreen === \\\\\\\\\\\\\\\"editor\\\\\\\\\\\\\\\" && (\\\\\\\\n            <div\\\\\\\\n              className=\\\\\\\\\\\\\\\"right-panel\\\\\\\\\\\\\\\"\\\\\\\\n              style={{ flex: 1, width: 0, overflow: \\\\\\\\\\\\\\\"scroll\\\\\\\\\\\\\\\" }}\\\\\\\\n              key={selectedItem.id}\\\\\\\\n            >\\\\\\\\n              <Content\\\\\\\\n                data={selectedItem}\\\\\\\\n                onCancel={goBack}\\\\\\\\n                setSelectedItemChanged={setSelectedItemChanged}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </>\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.blogv2.editor.content\": {\"\": \"const { Card } =\\\\\\\\n  VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.Card\\\\\\\\\\\\\\\") ||\\\\\\\\n  (() => <></>);\\\\\\\\nconst { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\") || (() => {});\\\\\\\\n\\\\\\\\nconst {\\\\\\\\n  data,\\\\\\\\n  handle,\\\\\\\\n  onSubmit,\\\\\\\\n  onCancel,\\\\\\\\n  onDelete,\\\\\\\\n  allBlogs: allBlogsOfThisInstance,\\\\\\\\n  communityAddonId,\\\\\\\\n  setSelectedItemChanged,\\\\\\\\n  addonParameters,\\\\\\\\n} = props;\\\\\\\\n\\\\\\\\nconst selectOptions = useMemo(() => {\\\\\\\\n  let ops = (addonParameters.categories || []).map((it) => ({\\\\\\\\n    title: it.category,\\\\\\\\n    description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    value: it.value,\\\\\\\\n  }));\\\\\\\\n  if (addonParameters.categoryRequired === \\\\\\\\\\\\\\\"required\\\\\\\\\\\\\\\") {\\\\\\\\n    return ops;\\\\\\\\n  }\\\\\\\\n  return [{ title: \\\\\\\\\\\\\\\"None\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" }, ...ops];\\\\\\\\n}, [addonParameters]);\\\\\\\\n\\\\\\\\nconst Banner = styled.div`\\\\\\\\n  border-radius: var(--bs-border-radius-xl) !important;\\\\\\\\n  height: 100%;\\\\\\\\n\\\\\\\\n  & > div :not(.btn) {\\\\\\\\n    position: absolute;\\\\\\\\n    display: none;\\\\\\\\n    margin: 0 !important;\\\\\\\\n    width: 0 !important;\\\\\\\\n    height: 0 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .btn {\\\\\\\\n    padding: 0.5rem 0.75rem !important;\\\\\\\\n    min-height: 32;\\\\\\\\n    line-height: 1;\\\\\\\\n\\\\\\\\n    border: none;\\\\\\\\n    border-radius: 50px;\\\\\\\\n    --bs-btn-color: #ffffff;\\\\\\\\n    --bs-btn-bg: #087990;\\\\\\\\n    --bs-btn-border-color: #087990;\\\\\\\\n    --bs-btn-hover-color: #ffffff;\\\\\\\\n    --bs-btn-hover-bg: #055160;\\\\\\\\n    --bs-btn-hover-border-color: #055160;\\\\\\\\n    --bs-btn-focus-shadow-rgb: 49, 132, 253;\\\\\\\\n    --bs-btn-active-color: #ffffff;\\\\\\\\n    --bs-btn-active-bg: #055160;\\\\\\\\n    --bs-btn-active-border-color: #055160;\\\\\\\\n    --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\\\\\\\\n    opacity: 0.8;\\\\\\\\n\\\\\\\\n    &:hover {\\\\\\\\n      opacity: 1;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst DropdownBtnContainer = styled.div`\\\\\\\\n  font-size: 13px;\\\\\\\\n  min-width: 150px;\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .select-header {\\\\\\\\n    display: flex;\\\\\\\\n    justify-content: space-between;\\\\\\\\n    align-items: center;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    border-radius-top: 5px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    background-color: #fff;\\\\\\\\n    border-radius: 5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .no-border {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .options-card {\\\\\\\\n    position: absolute;\\\\\\\\n    bottom: 100%;\\\\\\\\n    right: 0;\\\\\\\\n    width: 200%;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    background-color: #fff;\\\\\\\\n    padding: 0.5rem;\\\\\\\\n    z-index: 99;\\\\\\\\n    font-size: 13px;\\\\\\\\n    border-radius:0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .left {\\\\\\\\n    right: 0 !important;\\\\\\\\n    left: auto !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .options-card {\\\\\\\\n      right: 0 !important;\\\\\\\\n      left: auto !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option {\\\\\\\\n    margin-block: 5px;\\\\\\\\n    padding: 10px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    border-bottom: 1px solid #f0f0f0;\\\\\\\\n    transition: background-color 0.3s ease;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:hover {\\\\\\\\n    background-color: #f0f0f0; /* Custom hover effect color */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:last-child {\\\\\\\\n    border-bottom: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f4f4f4 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    font-weight: 500;\\\\\\\\n    color: #b3b3b3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 8px;\\\\\\\\n    height: 8px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: rgba(129, 129, 129, 0.5);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green {\\\\\\\\n    background-color: #00ec97;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst allBlogKeys =\\\\\\\\n  Social.keys(`${handle}.community.devhub.near/blog/*`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\") || {};\\\\\\\\n\\\\\\\\nconst initialData = data;\\\\\\\\n\\\\\\\\nconst [initialBlogAmount, setInitialBlogAmount] = useState(\\\\\\\\n  Object.keys(allBlogKeys[`${handle}.community.devhub.near`][\\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\"] || {})\\\\\\\\n    .length || 0\\\\\\\\n);\\\\\\\\n\\\\\\\\n// Parse the date string to create a Date object\\\\\\\\nconst publishedAtDate = new Date(initialData.publishedAt || new Date());\\\\\\\\nconst year = publishedAtDate.getFullYear();\\\\\\\\nconst month = (publishedAtDate.getMonth() + 1).toString().padStart(2, \\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\");\\\\\\\\nconst day = publishedAtDate.getDate().toString().padStart(2, \\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\");\\\\\\\\nconst initialFormattedDate = year + \\\\\\\\\\\\\\\"-\\\\\\\\\\\\\\\" + month + \\\\\\\\\\\\\\\"-\\\\\\\\\\\\\\\" + day;\\\\\\\\n\\\\\\\\nconst [content, setContent] = useState(initialData.content || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [title, setTitle] = useState(initialData.title || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [subtitle, setSubtitle] = useState(initialData.subtitle || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [description, setDescription] = useState(initialData.description || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [author, setAuthor] = useState(initialData.author || context.accountId);\\\\\\\\nconst [previewMode, setPreviewMode] = useState(\\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\"); // \\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\" or \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" // \\\\\\\\\\\\\\\"card\\\\\\\\\\\\\\\" or \\\\\\\\\\\\\\\"page\\\\\\\\\\\\\\\"\\\\\\\\nconst [date, setDate] = useState(initialFormattedDate || new Date());\\\\\\\\n\\\\\\\\n// Initial category\\\\\\\\nconst initialCategory =\\\\\\\\n  addonParameters.categoryRequired === \\\\\\\\\\\\\\\"required\\\\\\\\\\\\\\\" ? selectOptions[0].value : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst [category, setCategory] = useState(\\\\\\\\n  initialData.category || initialCategory\\\\\\\\n);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\nconst [selectedStatus, setSelectedStatus] = useState(\\\\\\\\n  initialData.status || \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\nconst [isDeleteModalOpen, setDeleteModal] = useState(false);\\\\\\\\n\\\\\\\\n// Dont ask me again check when deleting\\\\\\\\nconst [submittedBlogDeleted, setSubmittedBlogDeleted] = useState(null);\\\\\\\\nuseEffect(() => {\\\\\\\\n  const checkForDeletedBlogInSocialDB = () => {\\\\\\\\n    const communityAccount = `${handle}.community.devhub.near`;\\\\\\\\n    Near.asyncView(\\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get\\\\\\\\\\\\\\\", {\\\\\\\\n      keys: [`${communityAccount}/blog/**`],\\\\\\\\n      options: {\\\\\\\\n        return_deleted: true,\\\\\\\\n      },\\\\\\\\n    }).then((result) => {\\\\\\\\n      try {\\\\\\\\n        if (\\\\\\\\n          JSON.parse(result[communityAccount].blog[submittedBlogDeleted]) ===\\\\\\\\n          null\\\\\\\\n        ) {\\\\\\\\n          // Blog is deleted\\\\\\\\n          setSubmittedBlogDeleted(null);\\\\\\\\n        }\\\\\\\\n      } catch (e) {}\\\\\\\\n      setTimeout(() => checkForDeletedBlogInSocialDB(), 1000);\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n  if (submittedBlogDeleted) {\\\\\\\\n    checkForDeletedBlogInSocialDB();\\\\\\\\n  }\\\\\\\\n}, [submittedBlogDeleted]);\\\\\\\\n\\\\\\\\n// Dont ask me again check when updating and creating blogs\\\\\\\\nconst [submittedBlogData, setSubmittedBlogData] = useState(null);\\\\\\\\nuseEffect(() => {\\\\\\\\n  const checkForNewOrUpdatedBlogInSocialDB = () => {\\\\\\\\n    const communityAccount = `${handle}.community.devhub.near`;\\\\\\\\n    Near.asyncView(\\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get\\\\\\\\\\\\\\\", {\\\\\\\\n      keys: [`${communityAccount}/blog/**`],\\\\\\\\n    }).then((result) => {\\\\\\\\n      try {\\\\\\\\n        if (initialData.id) {\\\\\\\\n          // Update\\\\\\\\n          const updatedBlog =\\\\\\\\n            result[communityAccount][\\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\"][initialData.id].metadata;\\\\\\\\n          updatedBlog.content =\\\\\\\\n            result[communityAccount][\\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\"][initialData.id][\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"];\\\\\\\\n\\\\\\\\n          let theyMatch = true;\\\\\\\\n          let keys = Object.keys(submittedBlogData);\\\\\\\\n          for (const key of keys) {\\\\\\\\n            // Get the full data of the new blog and compare it to socialDB\\\\\\\\n            if (updatedBlog[key] !== submittedBlogData[key]) {\\\\\\\\n              theyMatch = false;\\\\\\\\n              break;\\\\\\\\n            }\\\\\\\\n          }\\\\\\\\n          if (theyMatch) {\\\\\\\\n            setSubmittedBlogData(null);\\\\\\\\n          }\\\\\\\\n        } else {\\\\\\\\n          // Create\\\\\\\\n          let blogArray = Object.keys(result).map(\\\\\\\\n            (blogKey) => result[communityAccount][\\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\"][blogKey]\\\\\\\\n          );\\\\\\\\n\\\\\\\\n          if (\\\\\\\\n            blogArray.length &&\\\\\\\\n            blogArray.find(\\\\\\\\n              (blog) =>\\\\\\\\n                blog.metadata.title === submittedBlogData.title &&\\\\\\\\n                blog.metadata.description === submittedBlogData.description\\\\\\\\n            )\\\\\\\\n          ) {\\\\\\\\n            setSubmittedBlogData(null);\\\\\\\\n          }\\\\\\\\n        }\\\\\\\\n      } catch (e) {\\\\\\\\n        console.log(\\\\\\\\\\\\\\\"Error in useEffect checkForNewOrUpdatedBlogInSocialDB\\\\\\\\\\\\\\\", e);\\\\\\\\n      }\\\\\\\\n      setTimeout(() => checkForNewOrUpdatedBlogInSocialDB(), 1000);\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n  if (submittedBlogData) {\\\\\\\\n    checkForNewOrUpdatedBlogInSocialDB();\\\\\\\\n  }\\\\\\\\n}, [submittedBlogData]);\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"submit-blog-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SubmitBtn = () => {\\\\\\\\n  const btnOptions = [\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Save Draft\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"The author can still edit the blog before sharing it with the community.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"bg-devhub-green\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Publish\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"The blog will be shared with the community and can be viewed by everyone.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"PUBLISH\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  const handleOptionClick = (option) => {\\\\\\\\n    setDraftBtnOpen(false);\\\\\\\\n    setSelectedStatus(option.value);\\\\\\\\n    setSubmittedBlogData(null);\\\\\\\\n    handleSubmit(option.value);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const toggleDropdown = () => {\\\\\\\\n    setDraftBtnOpen(!isDraftBtnOpen);\\\\\\\\n    setSubmittedBlogData(null);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const handleSubmit = (status) => {\\\\\\\\n    // Set the title for dont ask me again check\\\\\\\\n    setSubmittedBlogData({\\\\\\\\n      title,\\\\\\\\n      subtitle,\\\\\\\\n      description,\\\\\\\\n      author,\\\\\\\\n      date,\\\\\\\\n      content,\\\\\\\\n      category,\\\\\\\\n      community: handle,\\\\\\\\n      publishedAt,\\\\\\\\n      status,\\\\\\\\n    });\\\\\\\\n    handlePublish(status);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <DropdownBtnContainer>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"custom-select shadow-sm\\\\\\\\\\\\\\\"\\\\\\\\n        tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n        onBlur={() => setDraftBtnOpen(false)}\\\\\\\\n      >\\\\\\\\n        <div\\\\\\\\n          data-testid=\\\\\\\\\\\\\\\"parent-submit-blog-button\\\\\\\\\\\\\\\"\\\\\\\\n          className={`select-header d-flex gap-1 align-items-center submit-draft-button ${\\\\\\\\n            shouldBeDisabled() ? \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n          }`}\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            onClick={() =>\\\\\\\\n              !shouldBeDisabled() && handleSubmit(selectedOption.value)\\\\\\\\n            }\\\\\\\\n            className=\\\\\\\\\\\\\\\"py-2.5 px-2 d-flex gap-2 align-items-center \\\\\\\\\\\\\\\"\\\\\\\\n            data-testid=\\\\\\\\\\\\\\\"submit-blog-button\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {submittedBlogData ? (\\\\\\\\n              LoadingButtonSpinner\\\\\\\\n            ) : (\\\\\\\\n              <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + selectedOption.iconColor}></div>\\\\\\\\n            )}\\\\\\\\n            <div className={`selected-option`}>{selectedOption.label}</div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"h-100 py-2.5 px-2\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ borderLeft: \\\\\\\\\\\\\\\"1px solid #ccc\\\\\\\\\\\\\\\" }}\\\\\\\\n            onClick={toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <i\\\\\\\\n              data-testid=\\\\\\\\\\\\\\\"toggle-dropdown\\\\\\\\\\\\\\\"\\\\\\\\n              class={`bi bi-chevron-${isDraftBtnOpen ? \\\\\\\\\\\\\\\"up\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\"}`}\\\\\\\\n            ></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {isDraftBtnOpen && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"options-card\\\\\\\\\\\\\\\">\\\\\\\\n            {btnOptions.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`option ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n                data-testid={\\\\\\\\\\\\\\\"submit-button-option-\\\\\\\\\\\\\\\" + option.value}\\\\\\\\n              >\\\\\\\\n                <div className={`d-flex gap-2 align-items-center`}>\\\\\\\\n                  <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + option.iconColor}></div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">{option.label}</div>\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-muted text-xs\\\\\\\\\\\\\\\">{option.description}</div>\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </DropdownBtnContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  margin: 0 auto;\\\\\\\\n  text-align: left;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst shouldBeDisabled = () => {\\\\\\\\n  return hasEmptyFields() || submittedBlogData;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst hasEmptyFields = () => {\\\\\\\\n  return (\\\\\\\\n    content.trim() === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" ||\\\\\\\\n    title.trim() === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" ||\\\\\\\\n    subtitle.trim() === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" ||\\\\\\\\n    description.trim() === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" ||\\\\\\\\n    author.trim() === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" ||\\\\\\\\n    date === \\\\\\\\\\\\\\\"NaN-NaN-NaN\\\\\\\\\\\\\\\" ||\\\\\\\\n    category.trim() === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst unsavedChanges = () => {\\\\\\\\n  return (\\\\\\\\n    initialData.content !== content ||\\\\\\\\n    initialData.title !== title ||\\\\\\\\n    initialData.subtitle !== subtitle ||\\\\\\\\n    initialData.description !== description ||\\\\\\\\n    initialData.author !== author ||\\\\\\\\n    initialData.category !== category ||\\\\\\\\n    initialData.publishedAt !== date ||\\\\\\\\n    initialData.status !== selectedStatus\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (unsavedChanges()) {\\\\\\\\n    setSelectedItemChanged(true);\\\\\\\\n  } else {\\\\\\\\n    setSelectedItemChanged(false);\\\\\\\\n  }\\\\\\\\n}, [\\\\\\\\n  content,\\\\\\\\n  title,\\\\\\\\n  subtitle,\\\\\\\\n  description,\\\\\\\\n  author,\\\\\\\\n  category,\\\\\\\\n  date,\\\\\\\\n  selectedStatus,\\\\\\\\n]);\\\\\\\\n\\\\\\\\nconst handlePublish = (status) => {\\\\\\\\n  onSubmit &&\\\\\\\\n    onSubmit(\\\\\\\\n      {\\\\\\\\n        id: data.id || undefined,\\\\\\\\n        title,\\\\\\\\n        subtitle,\\\\\\\\n        description,\\\\\\\\n        date,\\\\\\\\n        content,\\\\\\\\n        status,\\\\\\\\n        author,\\\\\\\\n        category,\\\\\\\\n        community: handle,\\\\\\\\n      },\\\\\\\\n      data.id !== undefined\\\\\\\\n    );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction handleDelete() {\\\\\\\\n  setSubmittedBlogDeleted(initialData.id);\\\\\\\\n  onDelete(data.id);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst tabs = [\\\\\\\\n  { name: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\", testId: \\\\\\\\\\\\\\\"edit-blog-toggle\\\\\\\\\\\\\\\" },\\\\\\\\n  { name: \\\\\\\\\\\\\\\"Preview\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\", testId: \\\\\\\\\\\\\\\"preview-page-blog-toggle\\\\\\\\\\\\\\\" },\\\\\\\\n];\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"flex flex-wrap-reverse gap-1 justify-between w-100 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"flex cursor-pointer align-items-center justify-content-center gap-1 px-4\\\\\\\\\\\\\\\"\\\\\\\\n        onClick={onCancel}\\\\\\\\n      >\\\\\\\\n        <i class=\\\\\\\\\\\\\\\"bi bi-arrow-left\\\\\\\\\\\\\\\"></i>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"sm:hidden grow rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-indigo-600\\\\\\\\\\\\\\\">\\\\\\\\n        <label\\\\\\\\n          htmlFor=\\\\\\\\\\\\\\\"tabs\\\\\\\\\\\\\\\"\\\\\\\\n          className=\\\\\\\\\\\\\\\"sr-only block text-xs font-medium text-gray-900\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          Select a tab\\\\\\\\n        </label>\\\\\\\\n        <select\\\\\\\\n          id=\\\\\\\\\\\\\\\"tabs\\\\\\\\\\\\\\\"\\\\\\\\n          name=\\\\\\\\\\\\\\\"tabs\\\\\\\\\\\\\\\"\\\\\\\\n          className=\\\\\\\\\\\\\\\"block w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 h-9 border-gray-300 block w-full border-0 p-0 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\\\\\\\\\\\\\\\"\\\\\\\\n          defaultValue={tabs.find((tab) => tab.value === previewMode).name}\\\\\\\\n        >\\\\\\\\n          {tabs.map((tab) => {\\\\\\\\n            return (\\\\\\\\n              <option key={tab.name} onClick={() => setPreviewMode(tab.value)}>\\\\\\\\n                {tab.name}\\\\\\\\n              </option>\\\\\\\\n            );\\\\\\\\n          })}\\\\\\\\n        </select>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"hidden sm:block\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"-mb-px flex gap-x-3 px-2\\\\\\\\\\\\\\\" aria-label=\\\\\\\\\\\\\\\"Tabs\\\\\\\\\\\\\\\">\\\\\\\\n          {tabs.map((tab) => {\\\\\\\\n            return (\\\\\\\\n              <a\\\\\\\\n                data-testid={tab.testId}\\\\\\\\n                key={tab.name}\\\\\\\\n                onClick={() => setPreviewMode(tab.value)}\\\\\\\\n                className={`${\\\\\\\\n                  tab.value === previewMode ? \\\\\\\\\\\\\\\"hidden\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                } rounded-md px-3.5 py-2.5 text-sm cursor-pointer font-semibold whitespace-nowrap overflow-hidden truncate text-devhub-gray`}\\\\\\\\n              >\\\\\\\\n                {tab.name}\\\\\\\\n              </a>\\\\\\\\n            );\\\\\\\\n          })}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"flex gap-x-3\\\\\\\\\\\\\\\">\\\\\\\\n        <p className=\\\\\\\\\\\\\\\"text-nowrap text-sm text-devhub-gray font-semibold py-2.5 px-1\\\\\\\\\\\\\\\">\\\\\\\\n          Status:{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <span\\\\\\\\n            className={`px-3 py-2 rounded-full font-semibold text-xs ${\\\\\\\\n              initialData.status == \\\\\\\\\\\\\\\"PUBLISH\\\\\\\\\\\\\\\"\\\\\\\\n                ? \\\\\\\\\\\\\\\"text-green-600 bg-green-50\\\\\\\\\\\\\\\"\\\\\\\\n                : \\\\\\\\\\\\\\\"text-blue-600 bg-blue-50\\\\\\\\\\\\\\\"\\\\\\\\n            }`}\\\\\\\\n          >\\\\\\\\n            {initialData.status === \\\\\\\\\\\\\\\"PUBLISH\\\\\\\\\\\\\\\" ? (\\\\\\\\n              <Link\\\\\\\\n                to={href({\\\\\\\\n                  widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                  params: {\\\\\\\\n                    page: \\\\\\\\\\\\\\\"blogv2\\\\\\\\\\\\\\\",\\\\\\\\n                    id: initialData.id,\\\\\\\\n                    community: handle,\\\\\\\\n                  },\\\\\\\\n                })}\\\\\\\\n                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                className=\\\\\\\\\\\\\\\"cursor-pointer underline\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                Published\\\\\\\\n              </Link>\\\\\\\\n            ) : (\\\\\\\\n              <>Draft</>\\\\\\\\n            )}\\\\\\\\n          </span>\\\\\\\\n        </p>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n\\\\\\\\n    <div>\\\\\\\\n      {previewMode === \\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\" && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"tab-pane show active p-4\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.editor.form\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              title,\\\\\\\\n              setTitle,\\\\\\\\n              subtitle,\\\\\\\\n              setSubtitle,\\\\\\\\n              options: selectOptions,\\\\\\\\n              category,\\\\\\\\n              setCategory,\\\\\\\\n              description,\\\\\\\\n              setDescription,\\\\\\\\n              author,\\\\\\\\n              setAuthor,\\\\\\\\n              date,\\\\\\\\n              setDate,\\\\\\\\n              content,\\\\\\\\n              setContent,\\\\\\\\n              addonParameters,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          {/* Show delete button */}\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\\\\\\\\"d-flex align-items-center justify-between gap-3 mt-4\\\\\\\\\\\\\\\"}\\\\\\\\n          >\\\\\\\\n            {data.id ? (\\\\\\\\n              <>\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.editor.ConfirmModal\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    isOpen: isDeleteModalOpen,\\\\\\\\n                    onCancelClick: () => setDeleteModal(false),\\\\\\\\n                    onConfirmClick: () => {\\\\\\\\n                      setDeleteModal(false);\\\\\\\\n                      handleDelete();\\\\\\\\n                    },\\\\\\\\n                    title: \\\\\\\\\\\\\\\"Are you sure you want to delete this blog?\\\\\\\\\\\\\\\",\\\\\\\\n                    content: \\\\\\\\\\\\\\\"This will permanently remove your blog.\\\\\\\\\\\\\\\",\\\\\\\\n                    confirmLabel: \\\\\\\\\\\\\\\"Ready to Delete\\\\\\\\\\\\\\\",\\\\\\\\n                    cancelLabel: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                <Widget\\\\\\\\n                  src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                  props={{\\\\\\\\n                    classNames: {\\\\\\\\n                      root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                    },\\\\\\\\n                    label: (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Delete\\\\\\\\n                      </div>\\\\\\\\n                    ),\\\\\\\\n                    testId: \\\\\\\\\\\\\\\"delete-blog-button\\\\\\\\\\\\\\\",\\\\\\\\n                    disabled: submittedBlogDeleted,\\\\\\\\n                    onClick: () => setDeleteModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </>\\\\\\\\n            ) : null}\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"flex gap-x-3 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                props={{\\\\\\\\n                  classNames: {\\\\\\\\n                    root: \\\\\\\\\\\\\\\"d-flex text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                  },\\\\\\\\n                  label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                  onClick: onCancel,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <SubmitBtn />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n      {previewMode === \\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\" && (\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"w-100 h-100 p-4 flex flex-column gap-4\\\\\\\\\\\\\\\"\\\\\\\\n          id=\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\"\\\\\\\\n          style={{ position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\" }}\\\\\\\\n        >\\\\\\\\n          <Card\\\\\\\\n            data={{\\\\\\\\n              title,\\\\\\\\n              subtitle,\\\\\\\\n              description,\\\\\\\\n              publishedAt: date,\\\\\\\\n              content,\\\\\\\\n              author,\\\\\\\\n              category,\\\\\\\\n              community: handle,\\\\\\\\n            }}\\\\\\\\n            addonParameters={addonParameters}\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.Page\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              data: {\\\\\\\\n                title,\\\\\\\\n                subtitle,\\\\\\\\n                description,\\\\\\\\n                publishedAt: date,\\\\\\\\n                content,\\\\\\\\n                author,\\\\\\\\n                category,\\\\\\\\n                community: handle,\\\\\\\\n                communityAddonId,\\\\\\\\n              },\\\\\\\\n              community: handle,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.blogv2.editor.provider\": {\"\": \"const { getPost, setCommunitySocialDB } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst { generateRandom6CharUUID } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.stringUtils\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\ngenerateRandom6CharUUID || (generateRandom6CharUUID = () => {});\\\\\\\\n\\\\\\\\nconst { Layout, handle, communityAddonId } = props;\\\\\\\\n\\\\\\\\nsetCommunitySocialDB = setCommunitySocialDB || (() => <></>);\\\\\\\\ngetPost = getPost || (() => <></>);\\\\\\\\n\\\\\\\\nconst handleGetData = (v) => {\\\\\\\\n  const id = transformString(v.title);\\\\\\\\n  return blogData[id] || {};\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [blogData, setBlogData] = useState([]);\\\\\\\\n\\\\\\\\nconst initialBlogData =\\\\\\\\n  Social.get([`${handle}.community.devhub.near/blog/**`], \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\") || {};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (initialBlogData) {\\\\\\\\n    setBlogData(initialBlogData);\\\\\\\\n  }\\\\\\\\n}, [initialBlogData]);\\\\\\\\n\\\\\\\\nfunction checkHashes() {\\\\\\\\n  if (transactionHashes) {\\\\\\\\n    // Fetch new blog data\\\\\\\\n    const subscribeToBlogForNextFifteenSec = (tries) => {\\\\\\\\n      if (tries >= 5) {\\\\\\\\n        return;\\\\\\\\n      }\\\\\\\\n      Near.asyncView(\\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get\\\\\\\\\\\\\\\", {\\\\\\\\n        keys: [`${handle}.community.devhub.near/blog/**`],\\\\\\\\n      }).then((result) => {\\\\\\\\n        try {\\\\\\\\n          const newBlogPosts = result[`${handle}.community.devhub.near`].blog;\\\\\\\\n          // Check the number of blogs in this instance with a different status\\\\\\\\n          if (\\\\\\\\n            flattenBlogObject(newBlogPosts).length !==\\\\\\\\n            flattenBlogObject(blogData).length\\\\\\\\n          ) {\\\\\\\\n            setBlogData(newBlogPosts);\\\\\\\\n          } else {\\\\\\\\n            setTimeout(() => {\\\\\\\\n              subscribeToBlogForNextFifteenSec(tries + 1);\\\\\\\\n            }, 3000);\\\\\\\\n          }\\\\\\\\n        } catch (e) {}\\\\\\\\n      });\\\\\\\\n    };\\\\\\\\n    // After a second subscribe to the blog data\\\\\\\\n    setTimeout(() => {\\\\\\\\n      subscribeToBlogForNextFifteenSec(0);\\\\\\\\n    }, 1000);\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  // Only render one time\\\\\\\\n  checkHashes();\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\n// Show only published blogs\\\\\\\\nconst processedData = Object.keys(blogData)\\\\\\\\n  .map((key) => {\\\\\\\\n    return {\\\\\\\\n      ...blogData[key].metadata,\\\\\\\\n      id: key,\\\\\\\\n      content: blogData[key][\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"],\\\\\\\\n    };\\\\\\\\n  })\\\\\\\\n  // Every instance of the blog tab has its own blogs\\\\\\\\n  .filter((blog) => blog.communityAddonId === communityAddonId)\\\\\\\\n  // Sort by published date\\\\\\\\n  .sort((blog1, blog2) => {\\\\\\\\n    if (data.orderBy === \\\\\\\\\\\\\\\"timeasc\\\\\\\\\\\\\\\") {\\\\\\\\n      return new Date(blog1.publishedAt) - new Date(blog2.publishedAt);\\\\\\\\n    }\\\\\\\\n    if (data.orderBy === \\\\\\\\\\\\\\\"alpha\\\\\\\\\\\\\\\") {\\\\\\\\n      return (blog1.title || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").localeCompare(blog2.title || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n    }\\\\\\\\n    // timedesc is the default order\\\\\\\\n    return new Date(blog2.publishedAt) - new Date(blog1.publishedAt);\\\\\\\\n  });\\\\\\\\n\\\\\\\\nfunction transformString(str) {\\\\\\\\n  // Convert the string to lowercase\\\\\\\\n  const lowerCaseStr = str.toLowerCase();\\\\\\\\n\\\\\\\\n  // Replace spaces with hyphens\\\\\\\\n  const transformedStr = lowerCaseStr.replace(/ /g, \\\\\\\\\\\\\\\"-\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  // Return the transformed string\\\\\\\\n  return transformedStr;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst handleOnSubmit = (v, isEdit) => {\\\\\\\\n  let id = isEdit\\\\\\\\n    ? v.id\\\\\\\\n    : `${transformString(v.title)}-${generateRandom6CharUUID()}`;\\\\\\\\n  let publishedAt = new Date(v.date).toISOString().slice(0, 10);\\\\\\\\n\\\\\\\\n  let metadata = {\\\\\\\\n    title: v.title,\\\\\\\\n    publishedAt,\\\\\\\\n    status: v.status,\\\\\\\\n    subtitle: v.subtitle,\\\\\\\\n    description: v.description,\\\\\\\\n    author: v.author,\\\\\\\\n    category: v.category,\\\\\\\\n    updatedAt: new Date().toISOString().slice(0, 10),\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  if (!isEdit) {\\\\\\\\n    // Set this once when created\\\\\\\\n    metadata.createdAt = new Date().toISOString().slice(0, 10);\\\\\\\\n    metadata.communityAddonId = communityAddonId;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  setCommunitySocialDB({\\\\\\\\n    handle,\\\\\\\\n    data: {\\\\\\\\n      blog: {\\\\\\\\n        [id]: {\\\\\\\\n          \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\": v.content,\\\\\\\\n          metadata,\\\\\\\\n        },\\\\\\\\n      },\\\\\\\\n    },\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleOnDelete = (id) => {\\\\\\\\n  setCommunitySocialDB({\\\\\\\\n    handle,\\\\\\\\n    data: {\\\\\\\\n      blog: {\\\\\\\\n        [id]: {\\\\\\\\n          \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\": null,\\\\\\\\n          metadata: {\\\\\\\\n            title: null,\\\\\\\\n            createdAt: null,\\\\\\\\n            updatedAt: null,\\\\\\\\n            publishedAt: null,\\\\\\\\n            status: null,\\\\\\\\n            subtitle: null,\\\\\\\\n            description: null,\\\\\\\\n            author: null,\\\\\\\\n            id: null,\\\\\\\\n            category: null,\\\\\\\\n            communityAddonId: null,\\\\\\\\n          },\\\\\\\\n        },\\\\\\\\n      },\\\\\\\\n    },\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Layout\\\\\\\\n    data={processedData || []}\\\\\\\\n    getData={handleGetData}\\\\\\\\n    onSubmit={handleOnSubmit}\\\\\\\\n    onDelete={handleOnDelete}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.blogv2.editor.BlogOverview\": {\"\": \"// Pagination not necessary since it won\\\\\\\\\\\\'t be too many blogs per community\\\\\\\\n// a few hundred widgets per account are also not a problem\\\\\\\\nconst { data, editPostId, handleItemClick, selectedItem } = props;\\\\\\\\n\\\\\\\\nconst options = { year: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\", month: \\\\\\\\\\\\\\\"short\\\\\\\\\\\\\\\", day: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\" };\\\\\\\\nconst formattedDate = (date) => new Date(date).toLocaleString(\\\\\\\\\\\\\\\"en-US\\\\\\\\\\\\\\\", options);\\\\\\\\n\\\\\\\\nconst blogData = [\\\\\\\\n  {\\\\\\\\n    id: \\\\\\\\\\\\\\\"new\\\\\\\\\\\\\\\",\\\\\\\\n    title: \\\\\\\\\\\\\\\"New Blog Post\\\\\\\\\\\\\\\",\\\\\\\\n    status: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n    createdAt: new Date().toISOString().slice(0, 10),\\\\\\\\n    updatedAt: new Date().toISOString().slice(0, 10),\\\\\\\\n    publishedAt: \\\\\\\\\\\\\\\"yyyy-MM-dd\\\\\\\\\\\\\\\",\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    author: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    subtitle: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  ...data,\\\\\\\\n];\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <table\\\\\\\\n    id=\\\\\\\\\\\\\\\"manage-blog-table\\\\\\\\\\\\\\\"\\\\\\\\n    className=\\\\\\\\\\\\\\\"w-full table-auto text-sm text-left overflow-y-scroll h-dvh\\\\\\\\\\\\\\\"\\\\\\\\n  >\\\\\\\\n    <thead className=\\\\\\\\\\\\\\\"bg-gray-50 text-gray-600 font-medium border-b\\\\\\\\\\\\\\\">\\\\\\\\n      <tr>\\\\\\\\n        <th scope=\\\\\\\\\\\\\\\"col\\\\\\\\\\\\\\\" className={`py-3 px-6 ${props.hideColumns && \\\\\\\\\\\\\\\"px-2\\\\\\\\\\\\\\\"}`}>\\\\\\\\n          Name\\\\\\\\n        </th>\\\\\\\\n        {props.hideColumns ? null : (\\\\\\\\n          <>\\\\\\\\n            <th scope=\\\\\\\\\\\\\\\"col\\\\\\\\\\\\\\\" className=\\\\\\\\\\\\\\\"py-3 px-6\\\\\\\\\\\\\\\">\\\\\\\\n              Status\\\\\\\\n            </th>\\\\\\\\n            <th scope=\\\\\\\\\\\\\\\"col\\\\\\\\\\\\\\\" className=\\\\\\\\\\\\\\\"py-3 px-6\\\\\\\\\\\\\\\" data-testid=\\\\\\\\\\\\\\\"createdAt\\\\\\\\\\\\\\\">\\\\\\\\n              Created\\\\\\\\n            </th>\\\\\\\\n            <th scope=\\\\\\\\\\\\\\\"col\\\\\\\\\\\\\\\" className=\\\\\\\\\\\\\\\"py-3 px-6\\\\\\\\\\\\\\\" data-testid=\\\\\\\\\\\\\\\"updatedAt\\\\\\\\\\\\\\\">\\\\\\\\n              Updated\\\\\\\\n            </th>\\\\\\\\n            <th scope=\\\\\\\\\\\\\\\"col\\\\\\\\\\\\\\\" className=\\\\\\\\\\\\\\\"py-3 px-6\\\\\\\\\\\\\\\" data-testid=\\\\\\\\\\\\\\\"publishedAt\\\\\\\\\\\\\\\">\\\\\\\\n              Visible Publish Date\\\\\\\\n            </th>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </tr>\\\\\\\\n    </thead>\\\\\\\\n    <tbody className=\\\\\\\\\\\\\\\"text-gray-600 divide-y\\\\\\\\\\\\\\\">\\\\\\\\n      {(blogData || []).map((it) => {\\\\\\\\n        // Hide the new blog post item unless selectedItem is new\\\\\\\\n        if (it.id === \\\\\\\\\\\\\\\"new\\\\\\\\\\\\\\\" && selectedItem !== \\\\\\\\\\\\\\\"new\\\\\\\\\\\\\\\") {\\\\\\\\n          return;\\\\\\\\n        }\\\\\\\\n\\\\\\\\n        const isSelected =\\\\\\\\n          it.id === selectedItem.id ||\\\\\\\\n          (it.id === \\\\\\\\\\\\\\\"new\\\\\\\\\\\\\\\" && selectedItem === \\\\\\\\\\\\\\\"new\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        return (\\\\\\\\n          <tr\\\\\\\\n            id={`edit-blog-selector-${it.id}`}\\\\\\\\n            data-testid=\\\\\\\\\\\\\\\"edit-blog-row\\\\\\\\\\\\\\\"\\\\\\\\n            className={`cursor-pointer hover-bg-slate-300 ${\\\\\\\\n              it.id === selectedItem.id ? \\\\\\\\\\\\\\\"bg-gray-100\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n            }`}\\\\\\\\n            key={it.id}\\\\\\\\n            onClick={() => handleItemClick(it)}\\\\\\\\n          >\\\\\\\\n            <td\\\\\\\\n              scope=\\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\\"\\\\\\\\n              className={`px-6 py-4 ${props.hideColumns && \\\\\\\\\\\\\\\"px-2\\\\\\\\\\\\\\\"}`}\\\\\\\\n            >\\\\\\\\n              <div\\\\\\\\n                className={`${isSelected && \\\\\\\\\\\\\\\"font-semibold text-secondary\\\\\\\\\\\\\\\"} ${\\\\\\\\n                  props.hideColumns &&\\\\\\\\n                  \\\\\\\\\\\\\\\"whitespace-nowrap truncate overflow-hidden w-40\\\\\\\\\\\\\\\"\\\\\\\\n                } text-truncate`}\\\\\\\\n              >\\\\\\\\n                {it.title}\\\\\\\\n              </div>\\\\\\\\n            </td>\\\\\\\\n\\\\\\\\n            {props.hideColumns ? null : (\\\\\\\\n              <>\\\\\\\\n                <td className=\\\\\\\\\\\\\\\"px-6 py-4 \\\\\\\\\\\\\\\">\\\\\\\\n                  <span\\\\\\\\n                    className={`px-3 py-2 rounded-full font-semibold text-xs ${\\\\\\\\n                      it.status == \\\\\\\\\\\\\\\"PUBLISH\\\\\\\\\\\\\\\"\\\\\\\\n                        ? \\\\\\\\\\\\\\\"text-green-600 bg-green-50\\\\\\\\\\\\\\\"\\\\\\\\n                        : \\\\\\\\\\\\\\\"text-blue-600 bg-blue-50\\\\\\\\\\\\\\\"\\\\\\\\n                    }`}\\\\\\\\n                  >\\\\\\\\n                    {it.status == \\\\\\\\\\\\\\\"PUBLISH\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"Published\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Draft\\\\\\\\\\\\\\\"}\\\\\\\\n                  </span>\\\\\\\\n                </td>\\\\\\\\n                <td className=\\\\\\\\\\\\\\\"px-6 py-4 \\\\\\\\\\\\\\\">{formattedDate(it.createdAt)}</td>\\\\\\\\n                <td className=\\\\\\\\\\\\\\\"px-6 py-4  \\\\\\\\\\\\\\\">{formattedDate(it.updatedAt)}</td>\\\\\\\\n                <td className=\\\\\\\\\\\\\\\"px-6 py-4  \\\\\\\\\\\\\\\">{formattedDate(it.publishedAt)}</td>\\\\\\\\n              </>\\\\\\\\n            )}\\\\\\\\n          </tr>\\\\\\\\n        );\\\\\\\\n      })}\\\\\\\\n    </tbody>\\\\\\\\n  </table>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.blogv2.editor.BlogPostSettings\": {\"\": \"const { normalize } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.stringUtils\\\\\\\\\\\\\\\");\\\\\\\\nnormalize || (normalize = () => {});\\\\\\\\n\\\\\\\\nconst { data, onHideSettings, onSubmit } = props;\\\\\\\\n\\\\\\\\nconst [isConfirmModalOpen, setModalVisible] = useState(false);\\\\\\\\n\\\\\\\\nconst [title, setTitle] = useState(data.title || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [subtitle, setSubtitle] = useState(data.subtitle || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\nconst [authorEnabled, setAuthorEnabled] = useState(\\\\\\\\n  data.authorEnabled || \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\nconst [searchEnabled, setSearchEnabled] = useState(\\\\\\\\n  data.searchEnabled || \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" // \\\\\\\\\\\\'enabled\\\\\\\\\\\\', \\\\\\\\\\\\'disabled\\\\\\\\\\\\'\\\\\\\\n);\\\\\\\\nconst [orderBy, setOrderBy] = useState(data.orderBy || \\\\\\\\\\\\\\\"timedesc\\\\\\\\\\\\\\\"); // timedesc, timeasc, alpha\\\\\\\\nconst [postPerPage, setPostPerPage] = useState(data.postPerPage || 10);\\\\\\\\n\\\\\\\\nconst [categoriesEnabled, setCategoriesEnabled] = useState(\\\\\\\\n  data.categoriesEnabled || \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" // \\\\\\\\\\\\'enabled\\\\\\\\\\\\', \\\\\\\\\\\\'disabled\\\\\\\\\\\\'\\\\\\\\n);\\\\\\\\nconst switchCategoryEnabled = (value) => {\\\\\\\\n  if (value === \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\") {\\\\\\\\n    setSelected([]);\\\\\\\\n    setCategoryRequired(\\\\\\\\\\\\\\\"not_required\\\\\\\\\\\\\\\");\\\\\\\\n  }\\\\\\\\n  setCategoriesEnabled(value);\\\\\\\\n};\\\\\\\\nconst filteredCategories =\\\\\\\\n  (data.categories || []).filter((categories) => categories !== null) || [];\\\\\\\\n\\\\\\\\nconst [selected, setSelected] = useState(filteredCategories);\\\\\\\\nconst [categoryRequired, setCategoryRequired] = useState(\\\\\\\\n  data.categoryRequired || \\\\\\\\\\\\\\\"not_required\\\\\\\\\\\\\\\" // required | not_required\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst [loadingSaveSettings, setLoadingSaveSettings] = useState(false);\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-2/3\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst TitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: title,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (e) => setTitle(e.target.value),\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          max: 40,\\\\\\\\n          required: true,\\\\\\\\n          name: \\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\",\\\\\\\\n          className:\\\\\\\\n            \\\\\\\\\\\\\\\"block w-full rounded-md border-0 px-1 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst SubtitleComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n        value: subtitle,\\\\\\\\n        placeholder: \\\\\\\\\\\\\\\"Subtitle\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (e) => setSubtitle(e.target.value),\\\\\\\\n        skipPaddingGap: true,\\\\\\\\n        inputProps: {\\\\\\\\n          required: false,\\\\\\\\n          max: 80,\\\\\\\\n          name: \\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\",\\\\\\\\n          className:\\\\\\\\n            \\\\\\\\\\\\\\\"block w-full rounded-md border-0 px-1 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nconst AuthorEnabledSwitchComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Switch\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"w-32 shadow-none\\\\\\\\\\\\\\\",\\\\\\\\n        currentValue: authorEnabled,\\\\\\\\n        key: \\\\\\\\\\\\\\\"authorEnabled\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (e) => setAuthorEnabled(e.target.value),\\\\\\\\n        options: [\\\\\\\\n          { label: \\\\\\\\\\\\\\\"Enabled\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\\" },\\\\\\\\n          { label: \\\\\\\\\\\\\\\"Disabled\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" },\\\\\\\\n        ],\\\\\\\\n        title: \\\\\\\\\\\\\\\"Author Enabled\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [authorEnabled]);\\\\\\\\n\\\\\\\\nconst SearchSwitchComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Switch\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"w-32 shadow-none\\\\\\\\\\\\\\\",\\\\\\\\n\\\\\\\\n        currentValue: searchEnabled,\\\\\\\\n        key: \\\\\\\\\\\\\\\"search\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (e) => setSearchEnabled(e.target.value),\\\\\\\\n        options: [\\\\\\\\n          { label: \\\\\\\\\\\\\\\"Enabled\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\\" },\\\\\\\\n          { label: \\\\\\\\\\\\\\\"Disabled\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" },\\\\\\\\n        ],\\\\\\\\n        title: \\\\\\\\\\\\\\\"Search\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [searchEnabled]);\\\\\\\\n\\\\\\\\nconst OrderBySwitchComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Switch\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"shadow-none\\\\\\\\\\\\\\\",\\\\\\\\n        style: { width: \\\\\\\\\\\\\\\"24rem\\\\\\\\\\\\\\\" },\\\\\\\\n        currentValue: orderBy,\\\\\\\\n        key: \\\\\\\\\\\\\\\"orderBy\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (e) => setOrderBy(e.target.value),\\\\\\\\n        options: [\\\\\\\\n          { label: \\\\\\\\\\\\\\\"Newest to oldest\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"timedesc\\\\\\\\\\\\\\\" },\\\\\\\\n          { label: \\\\\\\\\\\\\\\"Oldest to newest\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"timeasc\\\\\\\\\\\\\\\" },\\\\\\\\n          { label: \\\\\\\\\\\\\\\"Alphabetical\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"alpha\\\\\\\\\\\\\\\" },\\\\\\\\n        ],\\\\\\\\n        title: \\\\\\\\\\\\\\\"Order by\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [orderBy]);\\\\\\\\n\\\\\\\\nconst PostsPerPageComponent = (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"col-lg-6 mb-2\\\\\\\\\\\\\\\">\\\\\\\\n    <input\\\\\\\\n      className=\\\\\\\\\\\\\\\"block w-full rounded-md border-0 px-1 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\\\\\\\\\\\\\\\"\\\\\\\\n      data-testid=\\\\\\\\\\\\\\\"post-per-page-input\\\\\\\\\\\\\\\"\\\\\\\\n      type=\\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\"\\\\\\\\n      value={parseInt(postPerPage) > 0 ? postPerPage : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n      min={0}\\\\\\\\n      onChange={(event) => {\\\\\\\\n        console.log(\\\\\\\\\\\\\\\"onChange\\\\\\\\\\\\\\\", event.target.value.toString());\\\\\\\\n        setPostPerPage(event.target.value.toString().replace(/[a-zA-Z]/g, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"));\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst CategoriesEnabledComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Switch\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"w-32 shadow-none\\\\\\\\\\\\\\\",\\\\\\\\n        currentValue: categoriesEnabled,\\\\\\\\n        key: \\\\\\\\\\\\\\\"categories\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (e) => switchCategoryEnabled(e.target.value),\\\\\\\\n        options: [\\\\\\\\n          { label: \\\\\\\\\\\\\\\"Enabled\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\\" },\\\\\\\\n          { label: \\\\\\\\\\\\\\\"Disabled\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" },\\\\\\\\n        ],\\\\\\\\n\\\\\\\\n        title: \\\\\\\\\\\\\\\"Categories\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [categoriesEnabled]);\\\\\\\\n\\\\\\\\nconst CategoryRequiredSwitchComponent = useMemo(() => {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Switch\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        className: \\\\\\\\\\\\\\\"shadow-none\\\\\\\\\\\\\\\",\\\\\\\\n        style: { width: \\\\\\\\\\\\\\\"12rem\\\\\\\\\\\\\\\" },\\\\\\\\n        currentValue: categoryRequired,\\\\\\\\n        key: \\\\\\\\\\\\\\\"categoryRequired\\\\\\\\\\\\\\\",\\\\\\\\n        onChange: (e) => setCategoryRequired(e.target.value),\\\\\\\\n        options: [\\\\\\\\n          { label: \\\\\\\\\\\\\\\"Required\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"required\\\\\\\\\\\\\\\" },\\\\\\\\n          { label: \\\\\\\\\\\\\\\"Not Required\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"not_required\\\\\\\\\\\\\\\" },\\\\\\\\n        ],\\\\\\\\n        title: \\\\\\\\\\\\\\\"Category Required\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [categoryRequired]);\\\\\\\\n\\\\\\\\nconst onChangeCategories = (_labels) => {\\\\\\\\n  _labels = _labels.map((o) => ({\\\\\\\\n    category: o.category, // labelKey == category\\\\\\\\n    value: normalize(o.category),\\\\\\\\n  }));\\\\\\\\n  // This is for the Typeahead\\\\\\\\n  setSelected(_labels);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CategoriesEditor = useMemo(() => {\\\\\\\\n  const examples = [\\\\\\\\\\\\\\\"News\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Guide\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\"];\\\\\\\\n  const options = examples\\\\\\\\n    .map((category) => {\\\\\\\\n      return { category };\\\\\\\\n    })\\\\\\\\n    .filter((o) => !selected.includes(o.category));\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Typeahead\\\\\\\\n      multiple\\\\\\\\n      labelKey=\\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\"\\\\\\\\n      onChange={onChangeCategories}\\\\\\\\n      options={options}\\\\\\\\n      placeholder=\\\\\\\\\\\\\\\"News, Guide, Reference, etc.\\\\\\\\\\\\\\\"\\\\\\\\n      selected={selected}\\\\\\\\n      positionFixed\\\\\\\\n      caseSensitive={true}\\\\\\\\n      allowNew={(results, props) => {\\\\\\\\n        // Don\\\\\\\\\\\\'t allow more than 10 categories\\\\\\\\n        return props.selected.length < 10;\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n}, [selected]);\\\\\\\\n\\\\\\\\nconst FormContainer = styled.div`\\\\\\\\n  & > *:not(:last-child) {\\\\\\\\n    margin-bottom: 2rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst handleUpdate = () => {\\\\\\\\n  if (\\\\\\\\n    filteredCategories.some(\\\\\\\\n      (category) => !selected.map((e) => e.value).includes(category.value)\\\\\\\\n    )\\\\\\\\n  ) {\\\\\\\\n    setModalVisible(true);\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  handleOnSubmit();\\\\\\\\n};\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * If the settings are empty we use default values for blog settings\\\\\\\\n * These default values should reflect in the configurator / viewer and settings page\\\\\\\\n */\\\\\\\\nconst handleOnSubmit = () => {\\\\\\\\n  setLoadingSaveSettings(true);\\\\\\\\n  if (categoriesEnabled === \\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\\" && categories.length === 0) {\\\\\\\\n    return setLoadingSaveSettings(false);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const cEnabled = categoriesEnabled || \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\";\\\\\\\\n  // If categories are enabled there must be at least 1 category\\\\\\\\n  const cats =\\\\\\\\n    cEnabled == \\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\\" && selected && selected.length > 0 ? selected : [];\\\\\\\\n  // If categories are empty they can not be required\\\\\\\\n  const req = cats.length ? categoryRequired : \\\\\\\\\\\\\\\"not_required\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n  onSubmit({\\\\\\\\n    title: title || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    subtitle: subtitle || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    authorEnabled: authorEnabled || \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\", // \\\\\\\\\\\\'enabled\\\\\\\\\\\\', \\\\\\\\\\\\'disabled\\\\\\\\\\\\'\\\\\\\\n    searchEnabled: searchEnabled || \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\", // \\\\\\\\\\\\'enabled\\\\\\\\\\\\', \\\\\\\\\\\\'disabled\\\\\\\\\\\\'\\\\\\\\n    orderBy: orderBy || \\\\\\\\\\\\\\\"timedesc\\\\\\\\\\\\\\\", // timedesc, timeasc, alpha\\\\\\\\n    categoriesEnabled: cEnabled, // \\\\\\\\\\\\'enabled\\\\\\\\\\\\', \\\\\\\\\\\\'disabled\\\\\\\\\\\\'\\\\\\\\n    categories: cats,\\\\\\\\n    categoryRequired: req,\\\\\\\\n    // minimum of 5 posts per page\\\\\\\\n    postPerPage: postPerPage < 5 ? 5 : postPerPage,\\\\\\\\n  });\\\\\\\\n  setTimeout(() => {\\\\\\\\n    setLoadingSaveSettings(false);\\\\\\\\n  }, 2000);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst categoriesIsInvalid = () =>\\\\\\\\n  categoriesEnabled === \\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\\" && categories.length === 0;\\\\\\\\n\\\\\\\\nconst submitDisabled = () => {\\\\\\\\n  return categoriesIsInvalid() || !title || !subtitle || loadingSaveSettings;\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <FormContainer>\\\\\\\\n      <div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n          <div>\\\\\\\\n            <h2 className=\\\\\\\\\\\\\\\"text-xl leading-7 text-gray-600\\\\\\\\\\\\\\\">Blog List Page</h2>\\\\\\\\n            <p className=\\\\\\\\\\\\\\\"mt-1 text-sm leading-6 text-gray-500\\\\\\\\\\\\\\\">\\\\\\\\n              This information will be displayed publicly.\\\\\\\\n            </p>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-1 align-items-center justify-content-end\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n              props={{\\\\\\\\n                classNames: {\\\\\\\\n                  root: \\\\\\\\\\\\\\\"d-flex text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                },\\\\\\\\n                label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: onHideSettings,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.BlogControl\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                title: \\\\\\\\\\\\\\\"Save Settings\\\\\\\\\\\\\\\",\\\\\\\\n                onClick: handleUpdate,\\\\\\\\n                testId: \\\\\\\\\\\\\\\"save-settings-button\\\\\\\\\\\\\\\",\\\\\\\\n                disabled: submitDisabled(),\\\\\\\\n                loading: loadingSaveSettings,\\\\\\\\n                icon: \\\\\\\\\\\\\\\"bi-plus-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"w-100 border-b\\\\\\\\\\\\\\\"></div>\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      <InputContainer\\\\\\\\n        heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n        description=\\\\\\\\\\\\\\\"Highlight the essence of your blog in a few words. This will appear on the top of your blog page.\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        {TitleComponent}\\\\\\\\n      </InputContainer>\\\\\\\\n      <InputContainer\\\\\\\\n        heading=\\\\\\\\\\\\\\\"Subtitle\\\\\\\\\\\\\\\"\\\\\\\\n        description=\\\\\\\\\\\\\\\"Provide a brief subtitle for the blog.\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        {SubtitleComponent}\\\\\\\\n      </InputContainer>\\\\\\\\n      <InputContainer\\\\\\\\n        heading=\\\\\\\\\\\\\\\"Author visible\\\\\\\\\\\\\\\"\\\\\\\\n        description=\\\\\\\\\\\\\\\"Show the author of each blog post.\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        {AuthorEnabledSwitchComponent}\\\\\\\\n      </InputContainer>\\\\\\\\n      <InputContainer\\\\\\\\n        heading=\\\\\\\\\\\\\\\"Search\\\\\\\\\\\\\\\"\\\\\\\\n        description=\\\\\\\\\\\\\\\"Enable or disable the user to search for blog posts.\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        {SearchSwitchComponent}\\\\\\\\n      </InputContainer>\\\\\\\\n      <InputContainer\\\\\\\\n        heading=\\\\\\\\\\\\\\\"Order by\\\\\\\\\\\\\\\"\\\\\\\\n        description=\\\\\\\\\\\\\\\"Blog post sorting order (e.g. Newest to oldest, Oldest to newest,\\\\\\\\n          Alphabetical). Note: Time sorting is based on the visible publish date.\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        {OrderBySwitchComponent}\\\\\\\\n      </InputContainer>\\\\\\\\n      <InputContainer\\\\\\\\n        heading=\\\\\\\\\\\\\\\"Number of blogs per page (Numbers Only)\\\\\\\\\\\\\\\"\\\\\\\\n        description=\\\\\\\\\\\\\\\"Number of visible blog cards displayed per blog tab. Minimum of 5 posts per page. It is recommended to be a multiple of 3.\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        {PostsPerPageComponent}\\\\\\\\n      </InputContainer>\\\\\\\\n      <div>\\\\\\\\n        <h2 className=\\\\\\\\\\\\\\\"text-xl leading-7 text-gray-600\\\\\\\\\\\\\\\">Blog Post Fields</h2>\\\\\\\\n        <p className=\\\\\\\\\\\\\\\"mt-1 text-sm leading-6 text-gray-500\\\\\\\\\\\\\\\">\\\\\\\\n          The blog and preview card, both display the category when it is\\\\\\\\n          enabled.\\\\\\\\n        </p>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"w-100 border-b\\\\\\\\\\\\\\\"></div>\\\\\\\\n      </div>\\\\\\\\n      <InputContainer\\\\\\\\n        heading=\\\\\\\\\\\\\\\"Enable categories\\\\\\\\\\\\\\\"\\\\\\\\n        description=\\\\\\\\\\\\\\\"Enable or disable categories on blogs. You must have 1 category to enable this field.\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        {CategoriesEnabledComponent}\\\\\\\\n      </InputContainer>\\\\\\\\n      {categoriesEnabled === \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" ? (\\\\\\\\n        <></>\\\\\\\\n      ) : (\\\\\\\\n        <>\\\\\\\\n          <InputContainer\\\\\\\\n            heading=\\\\\\\\\\\\\\\"Manage categories\\\\\\\\\\\\\\\"\\\\\\\\n            description=\\\\\\\\\\\\\\\"Add/edit/delete up to 10 custom category options.\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {CategoriesEditor}\\\\\\\\n          </InputContainer>\\\\\\\\n          <InputContainer\\\\\\\\n            heading=\\\\\\\\\\\\\\\"Category Required\\\\\\\\\\\\\\\"\\\\\\\\n            description=\\\\\\\\\\\\\\\"Decide if to make this field required for every blog post. You must have 1 category to require this field.\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {CategoryRequiredSwitchComponent}\\\\\\\\n          </InputContainer>\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </FormContainer>\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\n        \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.addon.blogv2.editor.ConfirmModal\\\\\\\\\\\\\\\"\\\\\\\\n      }\\\\\\\\n      props={{\\\\\\\\n        isOpen: isConfirmModalOpen,\\\\\\\\n        onCancelClick: () => setModalVisible(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setModalVisible(false);\\\\\\\\n          handleOnSubmit();\\\\\\\\n        },\\\\\\\\n        title: \\\\\\\\\\\\\\\"Are you sure you want to make changes to categories?\\\\\\\\\\\\\\\",\\\\\\\\n        content: \\\\\\\\\\\\\\\"All previous blogs with removed categories will be effected.\\\\\\\\\\\\\\\",\\\\\\\\n        confirmLabel: \\\\\\\\\\\\\\\"I understand\\\\\\\\\\\\\\\",\\\\\\\\n        cancelLabel: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-1 align-items-center justify-content-end mt-3\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n        props={{\\\\\\\\n          classNames: {\\\\\\\\n            root: \\\\\\\\\\\\\\\"d-flex text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n          onClick: onHideSettings,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.BlogControl\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          title: \\\\\\\\\\\\\\\"Save Settings\\\\\\\\\\\\\\\",\\\\\\\\n          onClick: handleUpdate,\\\\\\\\n          testId: \\\\\\\\\\\\\\\"save-settings-button\\\\\\\\\\\\\\\",\\\\\\\\n          disabled: submitDisabled(),\\\\\\\\n          icon: \\\\\\\\\\\\\\\"bi-plus-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n          loading: loadingSaveSettings,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.blogv2.editor.CategoryDropdown\": {\"\": \"const { selectedValue, onChange, disabled, options } = props;\\\\\\\\n\\\\\\\\nonChange = onChange || (() => {});\\\\\\\\n\\\\\\\\nconst [isOpen, setIsOpen] = useState(false);\\\\\\\\nconst [selectedOptionValue, setSelectedValue] = useState(selectedValue);\\\\\\\\n\\\\\\\\nconst toggleDropdown = () => {\\\\\\\\n  setIsOpen(!isOpen);\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (selectedValue && selectedValue !== selectedOptionValue) {\\\\\\\\n    setSelectedValue(selectedValue);\\\\\\\\n  }\\\\\\\\n}, [selectedValue]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (selectedValue !== selectedOptionValue) {\\\\\\\\n    onChange(selectedOptionValue);\\\\\\\\n  }\\\\\\\\n}, [selectedOptionValue]);\\\\\\\\n\\\\\\\\nconst handleOptionClick = (option) => {\\\\\\\\n  setSelectedValue(option.value);\\\\\\\\n  setIsOpen(false);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .drop-btn {\\\\\\\\n    width: 100%;\\\\\\\\n    text-align: left;\\\\\\\\n    padding-inline: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 2%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item.active,\\\\\\\\n  .dropdown-item:active {\\\\\\\\n    background-color: #f0f0f0 !important;\\\\\\\\n    color: black;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f8f8f8 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    border-radius: 5px;\\\\\\\\n    opacity: inherit !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled.dropdown-toggle::after {\\\\\\\\n    display: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Item = ({ option }) => {\\\\\\\\n  if (!option) {\\\\\\\\n    return <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">Select Category</div>;\\\\\\\\n  }\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\"> {option.title}</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst selectedOption =\\\\\\\\n  options.find((item) => item.value === selectedOptionValue) ?? null;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"custom-select w-100\\\\\\\\\\\\\\\"\\\\\\\\n      tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n      onBlur={() => setIsOpen(false)}\\\\\\\\n      data-testid=\\\\\\\\\\\\\\\"category-dropdown\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\n          \\\\\\\\\\\\\\\"dropdown-toggle bg-white border rounded-2 btn drop-btn w-100 \\\\\\\\\\\\\\\" +\\\\\\\\n          (disabled ? \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n        onClick={!disabled && toggleDropdown}\\\\\\\\n      >\\\\\\\\n        <div className={`selected-option`}>\\\\\\\\n          <Item option={selectedOption} />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      {isOpen && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"dropdown-menu rounded-2 dropdown-menu-end dropdown-menu-lg-start px-2 shadow show w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <div>\\\\\\\\n            {options.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                data-testid={`category-option-${option.value}`}\\\\\\\\n                className={`dropdown-item cursor-pointer w-100 my-1 ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n              >\\\\\\\\n                <Item option={option} />\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 4.3681450054131e+21
    }
  },
  {
    "id": "6101800533",
    "receipt_id": "2h4MKngUvT4MvX4nWZgZk5YLAiBpg3TkiDDnz6ZXryJZ",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "HoEA6gwhzi6xVm15UZzjUshuVLNxBiHPsbtBv8pPAZh9",
      "block_height": 122114122,
      "block_timestamp": 1719502618707796200
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "65pRnmRzeRC53myqM7NmGn2rPKq3YC6HyA3NQQZ3YiM5",
    "included_in_block_hash": "A94ArBvU2Kp9AvXGWtPwBNLnmjkuVWkGJx8mfB8dYBfW",
    "block_timestamp": "1719502615955986841",
    "block": {
      "block_height": 122114120
    },
    "receipt_conversion_tokens_burnt": "59721272081400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.839394337105209e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 4.3681450054131e+21
    }
  },
  {
    "id": "6102029018",
    "receipt_id": "Eg46v1j6URcXJtCyLAN1LqPYEM9jSuxf5B371SPK3qRb",
    "predecessor_account_id": "thomasguntenaar.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "BXZgJCcChmKyxVQDEhhYw2Q5rRyM7aJhdYTLw43DpRtq",
      "block_height": 122114550,
      "block_timestamp": 1719503150976030000
    },
    "receipt_outcome": {
      "gas_burnt": 7641544460886,
      "tokens_burnt": 764154446088600000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "9CaN11GRxubvJueuDQyn5V1hnL6TNjpEmEadhHi1WscM",
    "included_in_block_hash": "ADVWuMErpoTn9HQNcwxPdKVpQScSiRRXWouAhi3tKs4R",
    "block_timestamp": "1719503149968869501",
    "block": {
      "block_height": 122114549
    },
    "receipt_conversion_tokens_burnt": "30896505327000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_addon",
        "deposit": 0,
        "fee": 764154446088600000000,
        "args": "{\"handle\": \"developer-dao\", \"community_addon\": {\"id\": \"blogv2\", \"enabled\": true, \"addon_id\": \"blogv2\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Latest Blog Posts\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"authorEnabled\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"searchEnabled\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"orderBy\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"timedesc\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"categoriesEnabled\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"categories\\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\\"categoryRequired\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"not_required\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"postPerPage\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"20\\\\\\\\\\\\\\\"}\", \"display_name\": \"Blog\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.5547916541494e+21
    }
  },
  {
    "id": "6102029364",
    "receipt_id": "2Q6ezMfsZeqkXe98U3ouGMQTqGksu785tBXrmReLv4SK",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "HtSL1KS8F5hWWC98z9qQFM7ioWeMCbfrkCQ9w35EJCoA",
      "block_height": 122114551,
      "block_timestamp": 1719503152177106200
    },
    "receipt_outcome": {
      "gas_burnt": 17597407027338,
      "tokens_burnt": 1.7597407027338e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "9CaN11GRxubvJueuDQyn5V1hnL6TNjpEmEadhHi1WscM",
    "included_in_block_hash": "ADVWuMErpoTn9HQNcwxPdKVpQScSiRRXWouAhi3tKs4R",
    "block_timestamp": "1719503149968869501",
    "block": {
      "block_height": 122114549
    },
    "receipt_conversion_tokens_burnt": "30896505327000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.7597407027338e+21,
        "args": "{\"data\": {\"developer-dao.community.devhub.near\": {\"profile\": {\"name\": \"Developer DAO\", \"tags\": {\"community\": \"\", \"announcements\": \"\", \"developer-dao\": \"\"}, \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreifg2kou37l4y4hxidkone5wxocctqmj6ygnbpjhyf2raxly7avtze\"}, \"linktree\": {\"github\": null, \"twitter\": null, \"website\": \"near.social/devhub.near/widget/app?page=community&handle=developer-dao\", \"telegram\": \"NEARDevHub\"}, \"description\": \"We brings together individuals & organizations to build a decentralized NEAR developer ecosystem. We provide social structures and tools to empower anyone to contribute to the NEAR ecosystem.\\\\\\\\n\\\\\\\\nLearn more about our community [on DevHub](/devhub.near/widget/app?page=community&handle=developer-dao).\", \"backgroundImage\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreihlecc5n2l2r6pstnvpmmnff7pfyc6iurfpps2peep32cruolgrt4\"}}}, \"discussions.developer-dao.community.devhub.near\": {\"profile\": {\"name\": \"Developer DAO (Community Discussions)\", \"tags\": {\"community\": \"\", \"discussions\": \"\", \"developer-dao\": \"\"}, \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreifg2kou37l4y4hxidkone5wxocctqmj6ygnbpjhyf2raxly7avtze\"}, \"linktree\": {\"github\": null, \"twitter\": null, \"website\": \"near.social/devhub.near/widget/app?page=community&handle=developer-dao\", \"telegram\": \"NEARDevHub\"}, \"description\": \"Empowering a decentralized NEAR developer community\\\\\\\\n\\\\\\\\nLearn more about our community [on DevHub](/devhub.near/widget/app?page=community&handle=developer-dao).\", \"backgroundImage\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreihlecc5n2l2r6pstnvpmmnff7pfyc6iurfpps2peep32cruolgrt4\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.5547916541494e+21
    }
  },
  {
    "id": "6102067011",
    "receipt_id": "6wARgdu4FB7LvRr9cyoMgJrDKmu47m5z5CTx3YtbLCg",
    "predecessor_account_id": "thomasguntenaar.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3wVXe57EynhsJKAFAo3durgqSUv5wRBxZFJAi4cjcVA3",
      "block_height": 122114624,
      "block_timestamp": 1719503238691523800
    },
    "receipt_outcome": {
      "gas_burnt": 7594773859944,
      "tokens_burnt": 759477385994400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "7nFxrC1Zau2PfJ4VsGZLhsm2ostS5EyaXc8jXr3K4MFb",
    "included_in_block_hash": "9p5hS3vZeSpNkXj8ExvCHz1yuRBQxnm4pSgc3eSqW8Az",
    "block_timestamp": "1719503236784212375",
    "block": {
      "block_height": 122114623
    },
    "receipt_conversion_tokens_burnt": "30926690436000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_addon",
        "deposit": 0,
        "fee": 759477385994400000000,
        "args": "{\"handle\": \"developer-dao\", \"community_addon\": {\"id\": \"blogv2\", \"enabled\": true, \"addon_id\": \"blogv2\", \"parameters\": \"{\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Latest Blog Posts\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"subtitle\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"authorEnabled\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"searchEnabled\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"orderBy\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"timedesc\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"categoriesEnabled\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"categories\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Guide\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"guide\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"News\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"news\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"reference\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"categoryRequired\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"required\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"postPerPage\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"20\\\\\\\\\\\\\\\"}\", \"display_name\": \"Blog\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.5529091703494e+21
    }
  },
  {
    "id": "6102070044",
    "receipt_id": "6vC4JE3NwmvkP1PrVUzd2auuecUYyUQ1x34teQQLk6ex",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "BFs4SqNnUtUKdohRdjbj311FjnSqJ9hXhxm5GyjAPU21",
      "block_height": 122114626,
      "block_timestamp": 1719503240890097200
    },
    "receipt_outcome": {
      "gas_burnt": 17625050939190,
      "tokens_burnt": 1.762505093919e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "7nFxrC1Zau2PfJ4VsGZLhsm2ostS5EyaXc8jXr3K4MFb",
    "included_in_block_hash": "9p5hS3vZeSpNkXj8ExvCHz1yuRBQxnm4pSgc3eSqW8Az",
    "block_timestamp": "1719503236784212375",
    "block": {
      "block_height": 122114623
    },
    "receipt_conversion_tokens_burnt": "30926690436000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.762505093919e+21,
        "args": "{\"data\": {\"developer-dao.community.devhub.near\": {\"profile\": {\"name\": \"Developer DAO\", \"tags\": {\"community\": \"\", \"announcements\": \"\", \"developer-dao\": \"\"}, \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreifg2kou37l4y4hxidkone5wxocctqmj6ygnbpjhyf2raxly7avtze\"}, \"linktree\": {\"github\": null, \"twitter\": null, \"website\": \"near.social/devhub.near/widget/app?page=community&handle=developer-dao\", \"telegram\": \"NEARDevHub\"}, \"description\": \"We brings together individuals & organizations to build a decentralized NEAR developer ecosystem. We provide social structures and tools to empower anyone to contribute to the NEAR ecosystem.\\\\\\\\n\\\\\\\\nLearn more about our community [on DevHub](/devhub.near/widget/app?page=community&handle=developer-dao).\", \"backgroundImage\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreihlecc5n2l2r6pstnvpmmnff7pfyc6iurfpps2peep32cruolgrt4\"}}}, \"discussions.developer-dao.community.devhub.near\": {\"profile\": {\"name\": \"Developer DAO (Community Discussions)\", \"tags\": {\"community\": \"\", \"discussions\": \"\", \"developer-dao\": \"\"}, \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreifg2kou37l4y4hxidkone5wxocctqmj6ygnbpjhyf2raxly7avtze\"}, \"linktree\": {\"github\": null, \"twitter\": null, \"website\": \"near.social/devhub.near/widget/app?page=community&handle=developer-dao\", \"telegram\": \"NEARDevHub\"}, \"description\": \"Empowering a decentralized NEAR developer community\\\\\\\\n\\\\\\\\nLearn more about our community [on DevHub](/devhub.near/widget/app?page=community&handle=developer-dao).\", \"backgroundImage\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreihlecc5n2l2r6pstnvpmmnff7pfyc6iurfpps2peep32cruolgrt4\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.5529091703494e+21
    }
  },
  {
    "id": "6105900029",
    "receipt_id": "Hr8miZyEfTrzPm5nH9UzKspzgbkGKa72cxWzVhJ9qxuZ",
    "predecessor_account_id": "tfdevhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "fPrrtiyCYpz28yXRZDxYfkp7rLwtmtEFmZgarcmjg5Y",
      "block_height": 122121517,
      "block_timestamp": 1719511823980158200
    },
    "receipt_outcome": {
      "gas_burnt": 5872298537447,
      "tokens_burnt": 587229853744700000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "CxXY5JE2HTEhURQPaLmsvMaa1ojZMMbgQiihRfRhd72q",
    "included_in_block_hash": "GKWhCvjKS36mj5ZsXa9RKgHmVruyXM6HoK7k6pEutkQu",
    "block_timestamp": "1719511822776304353",
    "block": {
      "block_height": 122121516
    },
    "receipt_conversion_tokens_burnt": "30881524569200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 587229853744700000000,
        "args": "{\"id\": 128, \"timeline\": {\"status\": \"FUNDED\", \"payouts\": [\"https://nearblocks.io/txns/afrf4WZ1sQaCi9CCZdVrEJLy7HXx4VoHEGQDuK2S68T\"], \"kyc_verified\": true, \"test_transaction_sent\": true, \"sponsor_requested_review\": false, \"trustees_released_payment\": true, \"request_for_trustees_created\": false, \"reviewer_completed_attestation\": true}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 968179448535400000000
    }
  }
]