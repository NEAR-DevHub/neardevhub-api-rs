[
  {
    "id": "3542525785",
    "receipt_id": "BHjeFM62YHkfJz1zzj8CCKuJdhf9Rho4XCAyNrumqqzD",
    "predecessor_account_id": "frol.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "FAM2Q88fQuySMemo4zDYRg8WRpmZzSPHX1muE9qRYTDc",
      "block_height": 116057119,
      "block_timestamp": 1712159851725245400
    },
    "receipt_outcome": {
      "gas_burnt": 6712007404273,
      "tokens_burnt": 671200740427300000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "DG4Tmi4cBi827tJFs3vCmUA1iWYZsPvDXVobY8LmFbDq",
    "included_in_block_hash": "2JLCqCB4sWZ2GoaFi1FUrBEfEKEjzn4THgnLcXrCgBbD",
    "block_timestamp": "1712159850532129752",
    "block": {
      "block_height": 116057118
    },
    "receipt_conversion_tokens_burnt": "242973434247400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 671200740427300000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Heads up: [Ledger App for Near](https://github.com/dj8yfo/app-near-rs) (the Rust rewrite completely authored by @djeaunty_fourmule.near \\\\\\\\u{1f525}) is going through a security audit and if everything goes smooth, we will have the final report ready by April 22nd!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nNew version features:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- support for transactions of any size (implemented streaming preview)\\\\\\\\\\\\\\\\n- support for meta-transactions signing (aka DelegatedAction)\\\\\\\\\\\\\\\\n- support for message signing NEP\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThis is huge!\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\", \"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"djeaunty_fourmule.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"item\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tooling.community.devhub.near/post/main\\\\\\\\\\\\\\\"}}}\"}}, \"handle\": \"tooling\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5560821670012e+21
    }
  },
  {
    "id": "3542526096",
    "receipt_id": "2BWEwxWckJttnNL6A9idn6kErvCSioCJdyEJvSJsXVdu",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "2Ay5aBv2GZxjxZNh4qv7zkxAkFKQejUhSfDvH2XQBp8w",
      "block_height": 116057120,
      "block_timestamp": 1712159853062300000
    },
    "receipt_outcome": {
      "gas_burnt": 6419079923265,
      "tokens_burnt": 641907992326500000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "DG4Tmi4cBi827tJFs3vCmUA1iWYZsPvDXVobY8LmFbDq",
    "included_in_block_hash": "2JLCqCB4sWZ2GoaFi1FUrBEfEKEjzn4THgnLcXrCgBbD",
    "block_timestamp": "1712159850532129752",
    "block": {
      "block_height": 116057118
    },
    "receipt_conversion_tokens_burnt": "242973434247400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 641907992326500000000,
        "args": "{\"data\": {\"tooling.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Heads up: [Ledger App for Near](https://github.com/dj8yfo/app-near-rs) (the Rust rewrite completely authored by @djeaunty_fourmule.near \\\\\\\\u{1f525}) is going through a security audit and if everything goes smooth, we will have the final report ready by April 22nd!\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nNew version features:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n- support for transactions of any size (implemented streaming preview)\\\\\\\\\\\\\\\\n- support for meta-transactions signing (aka DelegatedAction)\\\\\\\\\\\\\\\\n- support for message signing NEP\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThis is huge!\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\", \"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"djeaunty_fourmule.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"item\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"tooling.community.devhub.near/post/main\\\\\\\\\\\\\\\"}}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5560821670012e+21
    }
  },
  {
    "id": "3545231828",
    "receipt_id": "CaKsvq8jKUgNAvrGCTWVV1UzgBWbkoid1NX2FiAcZnnR",
    "predecessor_account_id": "malbec.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "J3KoZPwf8fHDUycBZvDMgzev36n6gUqANE1ihF41Ktq7",
      "block_height": 116062300,
      "block_timestamp": 1712166908051538000
    },
    "receipt_outcome": {
      "gas_burnt": 12268333247296,
      "tokens_burnt": 1.2268333247296e+21,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "BZckVR7fnB4po1dmavKkXyTd6GvYrBvLgyZdaQ31b87k",
    "included_in_block_hash": "66FXwCuTCyGnqqT8siWb64FbaGXf1qLQ8XnzA7bsyM6o",
    "block_timestamp": "1712166907052866867",
    "block": {
      "block_height": 116062299
    },
    "receipt_conversion_tokens_burnt": "243359356455800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_proposal",
        "deposit": 0,
        "fee": 1.2268333247296e+21,
        "args": "{\"body\": {\"name\": \"Near Campus Activities \", \"summary\": \"\\\\\\\\nconnection work, proposals in universities within the framework of the program near the campus in LATAM\", \"category\": \"Universities & Bootcamps\", \"timeline\": {\"status\": \"DRAFT\"}, \"supervisor\": null, \"description\": \"**Week of 02/12/2024 to 23/02/2023 (2 weeks**) \\\\\\\\n\\\\\\\\n-Search for universities and/or student networks in Paraguay, Uruguay, Colombia, Guatemala, El Salvador (15 hours)\\\\\\\\n-Meetings to clarify doubts and guide proposals from universities in Argentina, Mexico, Chile, Peru, Honduras (10 hours)\\\\\\\\n-Planning activities, calls, and sending emails to follow-up contacts (10 hours)\\\\\\\\n-Participation in xpace on Twitter and meetings with agents of the web3 ecosystem to generate ties with universities (5 hours)\\\\\\\\n**\\\\\\\\n2 week 40 hrs = $720 USD**\\\\\\\\n\\\\\\\\n**Week of 26/02/2024 to 08/03/2023 (2 weeks) **\\\\\\\\n\\\\\\\\n-Search for web3 alliances and/or student networks in El Salvador (10 hours)\\\\\\\\n-Planning activities, calls, and sending emails to follow-up contacts (10 hours)\\\\\\\\n-Meetings with coordinators of student networks in El Salvador, in-person meetings (10 hours)\\\\\\\\n-Meetings to clarify doubts and guide proposals from universities in Argentina, Mexico, Chile, Peru, Honduras (10 hours)\\\\\\\\n\\\\\\\\n**2 weeks total 40 hrs = $720 USD**\\\\\\\\n\\\\\\\\n**Week of 11/03/2024 to 29/03/2024 (3 weeks)**\\\\\\\\n\\\\\\\\n-Search for participating collaborators for university events that have already advanced with their proposal (5 hours)\\\\\\\\n-Planning activities, calls, and sending emails to follow-up contacts (7 hours)\\\\\\\\n-Answer messages with questions about the Near Campus program and keep the idea pending (10 hours)\\\\\\\\n-Attendance at in-person events in Chile about technology promoting Near Campus (10 hours)\\\\\\\\n-Team Meeting (2 hours)\\\\\\\\n-Planning a communication strategy to inform universities that have submitted their proposals about the future of Near Campus (8 hours)\\\\\\\\n-Meetings to communicate the future of Near Campus at universities in Chile, Peru, Mexico, Argentina, Guatemala, El Salvador, Honduras (10 hours)\\\\\\\\n-Send messages to maintain a link with universities in Colombia, Bolivia, Uruguay, Mexico, Argentina, Chile that have not yet boarded the proposals (8 hours)\\\\\\\\n\\\\\\\\n**3 weeks 60 hrs =1080 usd \\\\\\\\n\\\\\\\\n**Requested compensation: 140 Hours at $18/Hr as previously established = 2,520 USDT.**\\\\\\\\n\\\\\\\\n\", \"linked_proposals\": [], \"receiver_account\": \"malbec.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"2520\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.9321935226741e+21
    }
  },
  {
    "id": "3545235663",
    "receipt_id": "7o7cTvtDphGhMKF7AXDDcrpgKvYR3F4CQ5kWDGDuN7YL",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8qCceAdukZhGdoBPwTsGGB8fCXJamYWcESGAFuKoCweg",
      "block_height": 116062305,
      "block_timestamp": 1712166915860498000
    },
    "receipt_outcome": {
      "gas_burnt": 5820992360506,
      "tokens_burnt": 582099236050600000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "BZckVR7fnB4po1dmavKkXyTd6GvYrBvLgyZdaQ31b87k",
    "included_in_block_hash": "66FXwCuTCyGnqqT8siWb64FbaGXf1qLQ8XnzA7bsyM6o",
    "block_timestamp": "1712166907052866867",
    "block": {
      "block_height": 116062299
    },
    "receipt_conversion_tokens_burnt": "243359356455800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 582099236050600000000,
        "args": "{\"data\": {\"devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"We have just received a new *Universities & Bootcamps* proposal.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**By**: @malbec.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Title**: \\\\\\\\u{201c}Near Campus Activities \\\\\\\\u{201c}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Summary**:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nconnection work, proposals in universities within the framework of the program near the campus in LATAM\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nRead the full proposal and share your feedback on [DevHub](/devhub.near/widget/app?page=proposal&id=34)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.9321935226741e+21
    }
  },
  {
    "id": "3545235668",
    "receipt_id": "FLQB4FnfATNvk2xfTsTGAuA5Yu3XTJBCP8c4f75uKrAf",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8qCceAdukZhGdoBPwTsGGB8fCXJamYWcESGAFuKoCweg",
      "block_height": 116062305,
      "block_timestamp": 1712166915860498000
    },
    "receipt_outcome": {
      "gas_burnt": 3964196937902,
      "tokens_burnt": 396419693790200000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "BZckVR7fnB4po1dmavKkXyTd6GvYrBvLgyZdaQ31b87k",
    "included_in_block_hash": "66FXwCuTCyGnqqT8siWb64FbaGXf1qLQ8XnzA7bsyM6o",
    "block_timestamp": "1712166907052866867",
    "block": {
      "block_height": 116062299
    },
    "receipt_conversion_tokens_burnt": "243359356455800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_block_height_callback",
        "deposit": 0,
        "fee": 396419693790200000000,
        "args": "{\"proposal\": {\"id\": 34, \"snapshot\": {\"name\": \"Near Campus Activities \", \"labels\": [], \"summary\": \"\\\\\\\\nconnection work, proposals in universities within the framework of the program near the campus in LATAM\", \"category\": \"Universities & Bootcamps\", \"timeline\": {\"status\": \"DRAFT\"}, \"editor_id\": \"malbec.near\", \"timestamp\": \"1712166914676261534\", \"supervisor\": null, \"description\": \"**Week of 02/12/2024 to 23/02/2023 (2 weeks**) \\\\\\\\n\\\\\\\\n-Search for universities and/or student networks in Paraguay, Uruguay, Colombia, Guatemala, El Salvador (15 hours)\\\\\\\\n-Meetings to clarify doubts and guide proposals from universities in Argentina, Mexico, Chile, Peru, Honduras (10 hours)\\\\\\\\n-Planning activities, calls, and sending emails to follow-up contacts (10 hours)\\\\\\\\n-Participation in xpace on Twitter and meetings with agents of the web3 ecosystem to generate ties with universities (5 hours)\\\\\\\\n**\\\\\\\\n2 week 40 hrs = $720 USD**\\\\\\\\n\\\\\\\\n**Week of 26/02/2024 to 08/03/2023 (2 weeks) **\\\\\\\\n\\\\\\\\n-Search for web3 alliances and/or student networks in El Salvador (10 hours)\\\\\\\\n-Planning activities, calls, and sending emails to follow-up contacts (10 hours)\\\\\\\\n-Meetings with coordinators of student networks in El Salvador, in-person meetings (10 hours)\\\\\\\\n-Meetings to clarify doubts and guide proposals from universities in Argentina, Mexico, Chile, Peru, Honduras (10 hours)\\\\\\\\n\\\\\\\\n**2 weeks total 40 hrs = $720 USD**\\\\\\\\n\\\\\\\\n**Week of 11/03/2024 to 29/03/2024 (3 weeks)**\\\\\\\\n\\\\\\\\n-Search for participating collaborators for university events that have already advanced with their proposal (5 hours)\\\\\\\\n-Planning activities, calls, and sending emails to follow-up contacts (7 hours)\\\\\\\\n-Answer messages with questions about the Near Campus program and keep the idea pending (10 hours)\\\\\\\\n-Attendance at in-person events in Chile about technology promoting Near Campus (10 hours)\\\\\\\\n-Team Meeting (2 hours)\\\\\\\\n-Planning a communication strategy to inform universities that have submitted their proposals about the future of Near Campus (8 hours)\\\\\\\\n-Meetings to communicate the future of Near Campus at universities in Chile, Peru, Mexico, Argentina, Guatemala, El Salvador, Honduras (10 hours)\\\\\\\\n-Send messages to maintain a link with universities in Colombia, Bolivia, Uruguay, Mexico, Argentina, Chile that have not yet boarded the proposals (8 hours)\\\\\\\\n\\\\\\\\n**3 weeks 60 hrs =1080 usd \\\\\\\\n\\\\\\\\n**Requested compensation: 140 Hours at $18/Hr as previously established = 2,520 USDT.**\\\\\\\\n\\\\\\\\n\", \"linked_proposals\": [], \"receiver_account\": \"malbec.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"2520\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"author_id\": \"malbec.near\", \"snapshot_history\": [], \"social_db_post_block_height\": \"0\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.9321935226741e+21
    }
  },
  {
    "id": "3545235671",
    "receipt_id": "FFbKXWPc34xJcSvYUUThpYHD4oMMRDwpk7yTpLuRc83p",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8qCceAdukZhGdoBPwTsGGB8fCXJamYWcESGAFuKoCweg",
      "block_height": 116062305,
      "block_timestamp": 1712166915860498000
    },
    "receipt_outcome": {
      "gas_burnt": 4834819116479,
      "tokens_burnt": 483481911647900000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "BZckVR7fnB4po1dmavKkXyTd6GvYrBvLgyZdaQ31b87k",
    "included_in_block_hash": "66FXwCuTCyGnqqT8siWb64FbaGXf1qLQ8XnzA7bsyM6o",
    "block_timestamp": "1712166907052866867",
    "block": {
      "block_height": 116062299
    },
    "receipt_conversion_tokens_burnt": "243359356455800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 483481911647900000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"[{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":34,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"malbec.near\\\\\\\\\\\\\\\"}}]\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.9321935226741e+21
    }
  },
  {
    "id": "3545409274",
    "receipt_id": "8rHs2pWyhAjeQhonBZ3mSYKASw45BQkKHbpAqpLqzWib",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "FRwfTmpwNruit8zaqyhuQxGuDavZMrPNUDTCiDx3DHyH",
      "block_height": 116062664,
      "block_timestamp": 1712167400680871700
    },
    "receipt_outcome": {
      "gas_burnt": 12580589723184,
      "tokens_burnt": 1.2580589723184e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "HMiwSoBBduVETmVA9JUwaZyHx2GUcggYsfRoRRRXJrCY",
    "included_in_block_hash": "AfaUsEfo9zWcM7ANUZerXx6nMh5961EKp2R9veTf67JZ",
    "block_timestamp": "1712167398919395392",
    "block": {
      "block_height": 116062663
    },
    "receipt_conversion_tokens_burnt": "249290618577600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.2580589723184e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.components.organism.Feed\": {\"\": \"const { Feed } = VM.require(\\\\\\\\\\\\\\\"devs.near/widget/Feed\\\\\\\\\\\\\\\");\\\\\\\\nFeed = Feed || (() => <></>);\\\\\\\\nconst setPostExists = props.setPostExists ?? (() => {});\\\\\\\\nconst showFlagAccountFeature = props.showFlagAccountFeature ?? false;\\\\\\\\n\\\\\\\\nconst filteredAccountIds = props.filteredAccountIds ?? [];\\\\\\\\n\\\\\\\\nconst GRAPHQL_ENDPOINT =\\\\\\\\n  props.GRAPHQL_ENDPOINT ?? \\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nlet lastPostSocialApi = Social.index(\\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\", {\\\\\\\\n  limit: 1,\\\\\\\\n  order: props.sort ? props.sort : \\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\\",\\\\\\\\n});\\\\\\\\n\\\\\\\\nif (lastPostSocialApi == null) {\\\\\\\\n  return \\\\\\\\\\\\\\\"Loading...\\\\\\\\\\\\\\\";\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  // If QueryAPI Feed is lagging behind Social API, fallback to old widget.\\\\\\\\n  shouldFallback: false,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(`${GRAPHQL_ENDPOINT}/v1/graphql`, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"dataplatform_near\\\\\\\\\\\\\\\" },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst lastPostQuery = `\\\\\\\\nquery IndexerQuery {\\\\\\\\n  dataplatform_near_social_feed_posts( limit: 1, order_by: { block_height: desc }) {\\\\\\\\n      block_height\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nfetchGraphQL(lastPostQuery, \\\\\\\\\\\\\\\"IndexerQuery\\\\\\\\\\\\\\\", {})\\\\\\\\n  .then((feedIndexerResponse) => {\\\\\\\\n    if (\\\\\\\\n      feedIndexerResponse &&\\\\\\\\n      feedIndexerResponse.body.data.dataplatform_near_social_feed_posts.length >\\\\\\\\n        0\\\\\\\\n    ) {\\\\\\\\n      const nearSocialBlockHeight = lastPostSocialApi[0].blockHeight;\\\\\\\\n      const feedIndexerBlockHeight =\\\\\\\\n        feedIndexerResponse.body.data.dataplatform_near_social_feed_posts[0]\\\\\\\\n          .block_height;\\\\\\\\n\\\\\\\\n      const lag = nearSocialBlockHeight - feedIndexerBlockHeight;\\\\\\\\n      let shouldFallback = lag > 2 || !feedIndexerBlockHeight;\\\\\\\\n      if (shouldFallback === true) {\\\\\\\\n        console.log(\\\\\\\\n          \\\\\\\\\\\\\\\"Falling back to Social index feed. Block difference is: \\\\\\\\\\\\\\\",\\\\\\\\n          nearSocialBlockHeight - feedIndexerBlockHeight\\\\\\\\n        );\\\\\\\\n        State.update({ shouldFallback });\\\\\\\\n      }\\\\\\\\n    } else {\\\\\\\\n      console.log(\\\\\\\\n        \\\\\\\\\\\\\\\"Falling back to Social index feed. No QueryApi data received.\\\\\\\\\\\\\\\"\\\\\\\\n      );\\\\\\\\n      State.update({ shouldFallback: true });\\\\\\\\n    }\\\\\\\\n  })\\\\\\\\n  .catch((error) => {\\\\\\\\n    console.log(\\\\\\\\n      \\\\\\\\\\\\\\\"Error while fetching QueryApi feed (falling back to index feed): \\\\\\\\\\\\\\\",\\\\\\\\n      error\\\\\\\\n    );\\\\\\\\n    State.update({ shouldFallback: true });\\\\\\\\n  });\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    {state.shouldFallback ? (\\\\\\\\n      <Feed\\\\\\\\n        index={[\\\\\\\\n          {\\\\\\\\n            action: props.action ? props.action : \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            key: \\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\n            options: {\\\\\\\\n              limit: 10,\\\\\\\\n              subscribe: props.onNewUnseenPosts ? true : false,\\\\\\\\n              order: props.sort ? props.sort : \\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\\",\\\\\\\\n              accountId: filteredAccountIds,\\\\\\\\n            },\\\\\\\\n            cacheOptions: {\\\\\\\\n              ignoreCache: true,\\\\\\\\n            },\\\\\\\\n          },\\\\\\\\n        ]}\\\\\\\\n        Item={(item) => {\\\\\\\\n          setPostExists(true);\\\\\\\\n\\\\\\\\n          return (\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"near/widget/v1.Posts.Post\\\\\\\\\\\\\\\"\\\\\\\\n              loading={<div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\" style={{ height: \\\\\\\\\\\\\\\"200px\\\\\\\\\\\\\\\" }} />}\\\\\\\\n              props={{\\\\\\\\n                accountId: item.accountId,\\\\\\\\n                blockHeight: item.blockHeight,\\\\\\\\n                filteredAccountIds: filteredAccountIds,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          );\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    ) : (\\\\\\\\n      <Widget\\\\\\\\n        src={`devhub.near/widget/devhub.components.organism.Feed.NearQueryApi`}\\\\\\\\n        props={{\\\\\\\\n          GRAPHQL_ENDPOINT,\\\\\\\\n          showFlagAccountFeature: true,\\\\\\\\n          filteredAccountIds: filteredAccountIds,\\\\\\\\n          setPostExists: setPostExists,\\\\\\\\n          showFlagAccountFeature: showFlagAccountFeature,\\\\\\\\n          onNewUnseenPosts: props.onNewUnseenPosts,\\\\\\\\n          sort: props.sort,\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    )}\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.community.Compose\": {\"\": \"const profileAccountId = props.profileAccountId;\\\\\\\\n\\\\\\\\nif (!profileAccountId) {\\\\\\\\n  return <></>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  image: {},\\\\\\\\n  text: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  showPreview: false,\\\\\\\\n  mentionInput: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", // text next to @ tag\\\\\\\\n  mentionsArray: [], // all the mentions in the description\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst [isSubmittingTransaction, setIsSubmittingTransaction] = useState(false);\\\\\\\\nconst profile = Social.getr(`${profileAccountId}/profile`);\\\\\\\\nconst autocompleteEnabled = true;\\\\\\\\n\\\\\\\\nconst content = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n  image: state.image.cid ? { ipfs_cid: state.image.cid } : undefined,\\\\\\\\n  text: state.text,\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction extractMentions(text) {\\\\\\\\n  const mentionRegex =\\\\\\\\n    /@((?:(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+\\\\\\\\\\\\\\\\.)*(?:[a-z\\\\\\\\\\\\\\\\d]+[-_])*[a-z\\\\\\\\\\\\\\\\d]+)/gi;\\\\\\\\n  mentionRegex.lastIndex = 0;\\\\\\\\n  const accountIds = new Set();\\\\\\\\n  for (const match of text.matchAll(mentionRegex)) {\\\\\\\\n    if (\\\\\\\\n      !/[\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index - 1)) &&\\\\\\\\n      !/[/\\\\\\\\\\\\\\\\w`]/.test(match.input.charAt(match.index + match[0].length)) &&\\\\\\\\n      match[1].length >= 2 &&\\\\\\\\n      match[1].length <= 64\\\\\\\\n    ) {\\\\\\\\n      accountIds.add(match[1].toLowerCase());\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n  return [...accountIds];\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction extractTagNotifications(text, item) {\\\\\\\\n  return extractMentions(text || \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\n    .filter((accountId) => accountId !== profileAccountId)\\\\\\\\n    .map((accountId) => ({\\\\\\\\n      key: accountId,\\\\\\\\n      value: {\\\\\\\\n        type: \\\\\\\\\\\\\\\"mention\\\\\\\\\\\\\\\",\\\\\\\\n        item,\\\\\\\\n      },\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction composeData() {\\\\\\\\n  const data = {\\\\\\\\n    post: {\\\\\\\\n      main: JSON.stringify(content),\\\\\\\\n    },\\\\\\\\n    index: {\\\\\\\\n      post: JSON.stringify({\\\\\\\\n        key: \\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\n        value: {\\\\\\\\n          type: \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      }),\\\\\\\\n    },\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const notifications = extractTagNotifications(state.text, {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${profileAccountId}/post/main`,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  if (notifications.length) {\\\\\\\\n    data.index.notify = JSON.stringify(\\\\\\\\n      notifications.length > 1 ? notifications : notifications[0]\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return data;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst handleSubmit = () => {\\\\\\\\n  const data = composeData();\\\\\\\\n  if (props.onSubmit) {\\\\\\\\n    props.onSubmit(data);\\\\\\\\n  }\\\\\\\\n  if (props.isFinished) {\\\\\\\\n    setIsSubmittingTransaction(true);\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction resetState() {\\\\\\\\n  State.update({\\\\\\\\n    image: {},\\\\\\\\n    text: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.isFinished && props.isFinished() && isSubmittingTransaction) {\\\\\\\\n    resetState();\\\\\\\\n    setIsSubmittingTransaction(false);\\\\\\\\n  }\\\\\\\\n}, [props.isFinished]);\\\\\\\\n\\\\\\\\nfunction textareaInputHandler(value) {\\\\\\\\n  const words = value.split(/\\\\\\\\\\\\\\\\s+/);\\\\\\\\n  const allMentiones = words\\\\\\\\n    .filter((word) => word.startsWith(\\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\"))\\\\\\\\n    .map((mention) => mention.slice(1));\\\\\\\\n  const newMentiones = allMentiones.filter(\\\\\\\\n    (item) => !state.mentionsArray.includes(item)\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  State.update((lastKnownState) => ({\\\\\\\\n    ...lastKnownState,\\\\\\\\n    text: value,\\\\\\\\n    showAccountAutocomplete: newMentiones?.length > 0,\\\\\\\\n    mentionsArray: allMentiones,\\\\\\\\n    mentionInput: newMentiones?.[0] ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction autoCompleteAccountId(id) {\\\\\\\\n  // to make sure we update the @ at correct index\\\\\\\\n  let currentIndex = 0;\\\\\\\\n  const updatedDescription = state.text.replace(\\\\\\\\n    /(?:^|\\\\\\\\\\\\\\\\s)(@[^\\\\\\\\\\\\\\\\s]*)/g,\\\\\\\\n    (match) => {\\\\\\\\n      if (currentIndex === state.mentionsArray.indexOf(state.mentionInput)) {\\\\\\\\n        currentIndex++;\\\\\\\\n        return ` @${id}`;\\\\\\\\n      } else {\\\\\\\\n        currentIndex++;\\\\\\\\n        return match;\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  );\\\\\\\\n  State.update((lastKnownState) => ({\\\\\\\\n    ...lastKnownState,\\\\\\\\n    text: updatedDescription,\\\\\\\\n    showAccountAutocomplete: false,\\\\\\\\n  }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  --padding: 24px;\\\\\\\\n  position: relative;\\\\\\\\n\\\\\\\\n  @media (max-width: 1024px) {\\\\\\\\n    --padding: 12px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"submit-post-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n  position: absolute;\\\\\\\\n  top: var(--padding);\\\\\\\\n  left: var(--padding);\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media (max-width: 992px) {\\\\\\\\n    display: none;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Textarea = styled.div`\\\\\\\\n  display: grid;\\\\\\\\n  vertical-align: top;\\\\\\\\n  align-items: center;\\\\\\\\n  position: relative;\\\\\\\\n  align-items: stretch;\\\\\\\\n\\\\\\\\n  &::after,\\\\\\\\n  textarea {\\\\\\\\n    width: 100%;\\\\\\\\n    min-width: 1em;\\\\\\\\n    height: unset;\\\\\\\\n    min-height: 164px;\\\\\\\\n    font: inherit;\\\\\\\\n    padding: var(--padding) var(--padding) calc(40px + (var(--padding) * 2))\\\\\\\\n      calc(40px + (var(--padding) * 2));\\\\\\\\n    margin: 0;\\\\\\\\n    resize: none;\\\\\\\\n    background: none;\\\\\\\\n    appearance: none;\\\\\\\\n    border: none;\\\\\\\\n    grid-area: 1 / 1;\\\\\\\\n    overflow: hidden;\\\\\\\\n    outline: none;\\\\\\\\n\\\\\\\\n    @media (max-width: 1024px) {\\\\\\\\n      min-height: 124px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    @media (max-width: 992px) {\\\\\\\\n      padding-left: var(--padding);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &::after {\\\\\\\\n    content: attr(data-value) \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\";\\\\\\\\n    visibility: hidden;\\\\\\\\n    white-space: pre-wrap;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    transition: all 200ms;\\\\\\\\n\\\\\\\\n    &::placeholder {\\\\\\\\n      opacity: 1;\\\\\\\\n      color: #687076;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    &:empty + p {\\\\\\\\n      display: block;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst TextareaDescription = styled.p`\\\\\\\\n  position: absolute;\\\\\\\\n  top: calc(var(--padding) + 24px);\\\\\\\\n  left: calc(42px + (var(--padding) * 2));\\\\\\\\n  right: var(--padding);\\\\\\\\n  font-size: 10px;\\\\\\\\n  line-height: 18px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  pointer-events: none;\\\\\\\\n  display: none;\\\\\\\\n\\\\\\\\n  a {\\\\\\\\n    color: #000;\\\\\\\\n    outline: none;\\\\\\\\n    font-weight: 600;\\\\\\\\n    pointer-events: auto;\\\\\\\\n\\\\\\\\n    &:hover,\\\\\\\\n    &:focus {\\\\\\\\n      color: #000;\\\\\\\\n      text-decoration: underline;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media (max-width: 992px) {\\\\\\\\n    left: var(--padding);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: inline-flex;\\\\\\\\n  gap: 12px;\\\\\\\\n  position: absolute;\\\\\\\\n  bottom: var(--padding);\\\\\\\\n  right: var(--padding);\\\\\\\\n\\\\\\\\n  .commit-post-button,\\\\\\\\n  .preview-post-button {\\\\\\\\n    background: #59e692;\\\\\\\\n    color: #09342e;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    height: 40px;\\\\\\\\n    padding: 0 35px;\\\\\\\\n    font-weight: 600;\\\\\\\\n    font-size: 14px;\\\\\\\\n    border: none;\\\\\\\\n    cursor: pointer;\\\\\\\\n    transition: background 200ms, opacity 200ms;\\\\\\\\n\\\\\\\\n    &:hover,\\\\\\\\n    &:focus {\\\\\\\\n      background: rgb(112 242 164);\\\\\\\\n      outline: none;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    &:disabled {\\\\\\\\n      opacity: 0.5;\\\\\\\\n      pointer-events: none;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .preview-post-button {\\\\\\\\n    color: #11181c;\\\\\\\\n    background: #f1f3f5;\\\\\\\\n    padding: 0;\\\\\\\\n    width: 40px;\\\\\\\\n\\\\\\\\n    &:hover,\\\\\\\\n    &:focus {\\\\\\\\n      background: #d7dbde;\\\\\\\\n      outline: none;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .upload-image-button {\\\\\\\\n    display: flex;\\\\\\\\n    align-items: center;\\\\\\\\n    justify-content: center;\\\\\\\\n    background: #f1f3f5;\\\\\\\\n    color: #11181c;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    height: 40px;\\\\\\\\n    min-width: 40px;\\\\\\\\n    font-size: 0;\\\\\\\\n    border: none;\\\\\\\\n    cursor: pointer;\\\\\\\\n    transition: background 200ms, opacity 200ms;\\\\\\\\n\\\\\\\\n    &::before {\\\\\\\\n      font-size: 16px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    &:hover,\\\\\\\\n    &:focus {\\\\\\\\n      background: #d7dbde;\\\\\\\\n      outline: none;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    &:disabled {\\\\\\\\n      opacity: 0.5;\\\\\\\\n      pointer-events: none;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    span {\\\\\\\\n      margin-left: 12px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .d-inline-block {\\\\\\\\n    display: flex !important;\\\\\\\\n    gap: 12px;\\\\\\\\n    margin: 0 !important;\\\\\\\\n\\\\\\\\n    .overflow-hidden {\\\\\\\\n      width: 40px !important;\\\\\\\\n      height: 40px !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst PreviewWrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  padding: var(--padding);\\\\\\\\n  padding-bottom: calc(40px + (var(--padding) * 2));\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst AutoComplete = styled.div`\\\\\\\\n  position: absolute;\\\\\\\\n  z-index: 5;\\\\\\\\n  bottom: 0;\\\\\\\\n  left: 0;\\\\\\\\n  right: 0;\\\\\\\\n\\\\\\\\n  > div > div {\\\\\\\\n    padding: calc(var(--padding) / 2);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Wrapper>\\\\\\\\n    {state.showPreview ? (\\\\\\\\n      <PreviewWrapper>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"near/widget/v1.Posts.Post\\\\\\\\\\\\\\\"\\\\\\\\n          loading={<div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\" style={{ height: \\\\\\\\\\\\\\\"200px\\\\\\\\\\\\\\\" }} />}\\\\\\\\n          props={{\\\\\\\\n            accountId: profileAccountId,\\\\\\\\n            blockHeight: \\\\\\\\\\\\\\\"now\\\\\\\\\\\\\\\",\\\\\\\\n            content,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </PreviewWrapper>\\\\\\\\n    ) : (\\\\\\\\n      <>\\\\\\\\n        <Avatar>\\\\\\\\n          <Widget\\\\\\\\n            src=\\\\\\\\\\\\\\\"mob.near/widget/Image\\\\\\\\\\\\\\\"\\\\\\\\n            props={{\\\\\\\\n              image: profile.image,\\\\\\\\n              alt: profile.name,\\\\\\\\n              fallbackUrl:\\\\\\\\n                \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreibiyqabm3kl24gcb2oegb7pmwdi6wwrpui62iwb44l7uomnn3lhbi\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </Avatar>\\\\\\\\n\\\\\\\\n        <Textarea data-value={state.text}>\\\\\\\\n          <textarea\\\\\\\\n            data-testid=\\\\\\\\\\\\\\\"compose-announcement\\\\\\\\\\\\\\\"\\\\\\\\n            placeholder=\\\\\\\\\\\\\\\"What\\\\\\\\\\\\'s happening?\\\\\\\\\\\\\\\"\\\\\\\\n            onInput={(event) => textareaInputHandler(event.target.value)}\\\\\\\\n            onKeyUp={(event) => {\\\\\\\\n              if (event.key === \\\\\\\\\\\\\\\"Escape\\\\\\\\\\\\\\\") {\\\\\\\\n                State.update({ showAccountAutocomplete: false });\\\\\\\\n              }\\\\\\\\n            }}\\\\\\\\n            value={state.text}\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          <TextareaDescription>\\\\\\\\n            <a\\\\\\\\n              href=\\\\\\\\\\\\\\\"https://www.markdownguide.org/basic-syntax/\\\\\\\\\\\\\\\"\\\\\\\\n              target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              Markdown\\\\\\\\n            </a>\\\\\\\\n            is supported\\\\\\\\n          </TextareaDescription>\\\\\\\\n        </Textarea>\\\\\\\\n      </>\\\\\\\\n    )}\\\\\\\\n\\\\\\\\n    {autocompleteEnabled && state.showAccountAutocomplete && (\\\\\\\\n      <AutoComplete>\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.AccountAutocomplete\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            term: state.mentionInput,\\\\\\\\n            onSelect: autoCompleteAccountId,\\\\\\\\n            onClose: () => State.update({ showAccountAutocomplete: false }),\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </AutoComplete>\\\\\\\\n    )}\\\\\\\\n\\\\\\\\n    <Actions>\\\\\\\\n      {!state.showPreview && (\\\\\\\\n        <IpfsImageUpload\\\\\\\\n          image={state.image}\\\\\\\\n          className=\\\\\\\\\\\\\\\"upload-image-button bi bi-image\\\\\\\\\\\\\\\"\\\\\\\\n        />\\\\\\\\n      )}\\\\\\\\n\\\\\\\\n      <button\\\\\\\\n        type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n        disabled={!state.text}\\\\\\\\n        className=\\\\\\\\\\\\\\\"preview-post-button\\\\\\\\\\\\\\\"\\\\\\\\n        title={state.showPreview ? \\\\\\\\\\\\\\\"Edit Post\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Preview Post\\\\\\\\\\\\\\\"}\\\\\\\\n        onClick={() => State.update({ showPreview: !state.showPreview })}\\\\\\\\n      >\\\\\\\\n        {state.showPreview ? (\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-pencil\\\\\\\\\\\\\\\" />\\\\\\\\n        ) : (\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-eye-fill\\\\\\\\\\\\\\\" />\\\\\\\\n        )}\\\\\\\\n      </button>\\\\\\\\n\\\\\\\\n      <button\\\\\\\\n        data-testid=\\\\\\\\\\\\\\\"post-btn\\\\\\\\\\\\\\\"\\\\\\\\n        disabled={isSubmittingTransaction || (!state.text && !state.image)}\\\\\\\\n        onClick={handleSubmit}\\\\\\\\n        className=\\\\\\\\\\\\\\\"commit-post-button\\\\\\\\\\\\\\\"\\\\\\\\n      >\\\\\\\\n        {isSubmittingTransaction ? LoadingButtonSpinner : <></>}\\\\\\\\n        Post\\\\\\\\n      </button>\\\\\\\\n    </Actions>\\\\\\\\n  </Wrapper>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.community.Announcements\": {\"\": \"const { handle } = props;\\\\\\\\nconst { getCommunity, setCommunitySocialDB } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\ngetCommunity = getCommunity || (() => <></>);\\\\\\\\nsetCommunitySocialDB = setCommunitySocialDB || (() => <></>);\\\\\\\\n\\\\\\\\nconst communityData = getCommunity({ handle });\\\\\\\\nconst [postsExists, setPostExists] = useState(false);\\\\\\\\nconst [newUnseenPosts, setNewUnseenPosts] = useState([]);\\\\\\\\nconst [lastQueryRequestTimestamp, setLastQueryRequestTimestamp] = useState(\\\\\\\\n  new Date().getTime()\\\\\\\\n);\\\\\\\\nconst [submittedAnnouncementData, setSubmittedAnnouncementData] =\\\\\\\\n  useState(null);\\\\\\\\nconst communityAccountId = `${handle}.community.devhub.near`;\\\\\\\\n\\\\\\\\nlet checkIndexerInterval;\\\\\\\\nconst onNewUnseenPosts = (newUnseenPosts) => {\\\\\\\\n  if (newUnseenPosts.length > 0) {\\\\\\\\n    clearInterval(checkIndexerInterval);\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (submittedAnnouncementData) {\\\\\\\\n    const checkForAnnouncementInSocialDB = () => {\\\\\\\\n      Near.asyncView(\\\\\\\\\\\\\\\"social.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get\\\\\\\\\\\\\\\", {\\\\\\\\n        keys: [`${communityAccountId}/post/**`],\\\\\\\\n      }).then((result) => {\\\\\\\\n        try {\\\\\\\\n          const submittedAnnouncementText = JSON.parse(\\\\\\\\n            submittedAnnouncementData.post.main\\\\\\\\n          ).text;\\\\\\\\n          const lastAnnouncementTextFromSocialDB = JSON.parse(\\\\\\\\n            result[communityAccountId].post.main\\\\\\\\n          ).text;\\\\\\\\n          if (submittedAnnouncementText === lastAnnouncementTextFromSocialDB) {\\\\\\\\n            setSubmittedAnnouncementData(null);\\\\\\\\n            checkIndexerInterval = setInterval(() => {\\\\\\\\n              setLastQueryRequestTimestamp(new Date().getTime());\\\\\\\\n            }, 500);\\\\\\\\n            return;\\\\\\\\n          }\\\\\\\\n        } catch (e) {}\\\\\\\\n        setTimeout(() => checkForAnnouncementInSocialDB(), 1000);\\\\\\\\n      });\\\\\\\\n    };\\\\\\\\n    checkForAnnouncementInSocialDB();\\\\\\\\n  }\\\\\\\\n}, [submittedAnnouncementData]);\\\\\\\\n\\\\\\\\nconst MainContent = styled.div`\\\\\\\\n  padding-left: 2rem;\\\\\\\\n  flex: 3;\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    padding-left: 0rem;\\\\\\\\n  }\\\\\\\\n  .post:hover {\\\\\\\\n    background-color: inherit !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst SidebarContainer = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 19px;\\\\\\\\n  font-weight: 600;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst SubHeading = styled.div`\\\\\\\\n  font-size: 15px;\\\\\\\\n  font-weight: 600;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  flex-wrap: no-wrap;\\\\\\\\n  max-width: 100%;\\\\\\\\n\\\\\\\\n  .max-width-100 {\\\\\\\\n    max-width: 100%;\\\\\\\\n  }\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    flex-wrap: wrap;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card {\\\\\\\\n    border-radius: 1rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .display-none {\\\\\\\\n    display: none;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Tag = styled.div`\\\\\\\\n  border-top-right-radius: 50px;\\\\\\\\n  border-bottom-right-radius: 50px;\\\\\\\\n  border-top-left-radius: 50px;\\\\\\\\n  border-bottom-left-radius: 50px;\\\\\\\\n  padding-inline: 0.8rem;\\\\\\\\n  padding-block: 0.3rem;\\\\\\\\n  display: flex;\\\\\\\\n  gap: 0.5rem;\\\\\\\\n  border-width: 1px;\\\\\\\\n  border-style: solid;\\\\\\\\n  font-size: 14px;\\\\\\\\n  color: rgba(0, 236, 151, 1);\\\\\\\\n  font-weight: 800;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst [sort, setSort] = useState(\\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\" style={{ maxWidth: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\" }}>\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"d-flex gap-3 m-3 pl-2\\\\\\\\\\\\\\\">\\\\\\\\n      <MainContent className=\\\\\\\\\\\\\\\"max-width-100\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n          {context.accountId &&\\\\\\\\n            (communityData?.admins ?? []).includes(context.accountId) && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"card p-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.community.Compose\\\\\\\\\\\\\\\"}\\\\\\\\n                  props={{\\\\\\\\n                    onSubmit: (v) => {\\\\\\\\n                      setSubmittedAnnouncementData(v);\\\\\\\\n                      setCommunitySocialDB({ handle, data: v });\\\\\\\\n                    },\\\\\\\\n                    profileAccountId: `${handle}.community.devhub.near`,\\\\\\\\n                    isFinished: () => submittedAnnouncementData === null,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n            <Heading>Announcements</Heading>\\\\\\\\n            <div\\\\\\\\n              className={\\\\\\\\n                postsExists\\\\\\\\n                  ? \\\\\\\\\\\\\\\"d-flex align-items-center gap-2\\\\\\\\\\\\\\\"\\\\\\\\n                  : \\\\\\\\\\\\\\\" display-none\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n            >\\\\\\\\n              <select\\\\\\\\n                name=\\\\\\\\\\\\\\\"sort\\\\\\\\\\\\\\\"\\\\\\\\n                id=\\\\\\\\\\\\\\\"sort\\\\\\\\\\\\\\\"\\\\\\\\n                class=\\\\\\\\\\\\\\\"form-select\\\\\\\\\\\\\\\"\\\\\\\\n                value={sort}\\\\\\\\n                onChange={(e) => {\\\\\\\\n                  setSort(e.target.value);\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <option selected value=\\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\\">\\\\\\\\n                  Latest\\\\\\\\n                </option>\\\\\\\\n                <option value=\\\\\\\\\\\\\\\"recentcommentdesc\\\\\\\\\\\\\\\">Last Commented</option>\\\\\\\\n              </select>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          {!postsExists && (\\\\\\\\n            <div>\\\\\\\\n              <h6>No announcements exists.</h6>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n          <div className={postsExists && \\\\\\\\\\\\\\\"card p-4\\\\\\\\\\\\\\\"}>\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.organism.Feed\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                showFlagAccountFeature: true,\\\\\\\\n                filteredAccountIds: [communityAccountId],\\\\\\\\n                sort: sort,\\\\\\\\n                setPostExists: setPostExists,\\\\\\\\n                showFlagAccountFeature: true,\\\\\\\\n                lastQueryRequestTimestamp,\\\\\\\\n                onNewUnseenPosts,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </MainContent>\\\\\\\\n      <SidebarContainer>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card p-4\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"mb-2\\\\\\\\\\\\\\\">{communityData?.description}</div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-wrap\\\\\\\\\\\\\\\">\\\\\\\\n              <Tag>{communityData?.tag} </Tag>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card p-4 d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n            <SubHeading>Community Admins</SubHeading>\\\\\\\\n            {(communityData?.admins ?? []).map((accountId) => (\\\\\\\\n              <div\\\\\\\\n                key={accountId}\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex\\\\\\\\\\\\\\\"\\\\\\\\n                style={{ fontWeight: 500 }}\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.ProfileCard\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{ accountId }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </SidebarContainer>\\\\\\\\n    </Container>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.organism.Feed.NearQueryApi\": {\"\": \"const LIMIT = 10;\\\\\\\\nconst filteredAccountIds = props.filteredAccountIds;\\\\\\\\nconst setPostExists = props.setPostExists ?? (() => {});\\\\\\\\nconst GRAPHQL_ENDPOINT =\\\\\\\\n  props.GRAPHQL_ENDPOINT ?? \\\\\\\\\\\\\\\"https://near-queryapi.api.pagoda.co\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst sort = props.sort || \\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n// get the full list of posts that the current user has flagged so\\\\\\\\n// they can be hidden\\\\\\\\nconst selfFlaggedPosts = context.accountId\\\\\\\\n  ? Social.index(\\\\\\\\\\\\\\\"flag\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\", {\\\\\\\\n      accountId: context.accountId,\\\\\\\\n    }) ?? []\\\\\\\\n  : [];\\\\\\\\n\\\\\\\\n// V2 self moderation data, structure is like:\\\\\\\\n// { moderate: {\\\\\\\\n//     \\\\\\\\\\\\\\\"account1.near\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"report\\\\\\\\\\\\\\\",\\\\\\\\n//     \\\\\\\\\\\\\\\"account2.near\\\\\\\\\\\\\\\": {\\\\\\\\n//         \\\\\\\\\\\\\\\".post.main\\\\\\\\\\\\\\\": { // slashes are not allowed in keys\\\\\\\\n//           \\\\\\\\\\\\\\\"100000123\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"spam\\\\\\\\\\\\\\\", // post ids are account/blockHeight\\\\\\\\n//         }\\\\\\\\n//     },\\\\\\\\n//   }\\\\\\\\n// }\\\\\\\\nconst selfModeration = context.accountId\\\\\\\\n  ? Social.getr(`${context.accountId}/moderate`, \\\\\\\\\\\\\\\"optimistic\\\\\\\\\\\\\\\") ?? []\\\\\\\\n  : [];\\\\\\\\nconst postsModerationKey = \\\\\\\\\\\\\\\".post.main\\\\\\\\\\\\\\\";\\\\\\\\nconst commentsModerationKey = \\\\\\\\\\\\\\\".post.comment\\\\\\\\\\\\\\\";\\\\\\\\nconst matchesModeration = (moderated, socialDBObjectType, item) => {\\\\\\\\n  if (!moderated) return false;\\\\\\\\n  const accountFound = moderated[item.account_id];\\\\\\\\n  if (typeof accountFound === \\\\\\\\\\\\\\\"undefined\\\\\\\\\\\\\\\") {\\\\\\\\n    return false;\\\\\\\\n  }\\\\\\\\n  if (typeof accountFound === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" || accountFound[\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"]) {\\\\\\\\n    return true;\\\\\\\\n  }\\\\\\\\n  const moderatedItemsOfType = accountFound[socialDBObjectType];\\\\\\\\n  return (\\\\\\\\n    moderatedItemsOfType &&\\\\\\\\n    typeof moderatedItemsOfType[item.block_height] !== \\\\\\\\\\\\\\\"undefined\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst shouldFilter = (item, socialDBObjectType) => {\\\\\\\\n  return (\\\\\\\\n    selfFlaggedPosts.find((flagged) => {\\\\\\\\n      return (\\\\\\\\n        flagged?.value?.blockHeight === item.block_height &&\\\\\\\\n        flagged?.value?.path.includes(item.account_id)\\\\\\\\n      );\\\\\\\\n    }) || matchesModeration(selfModeration, socialDBObjectType, item)\\\\\\\\n  );\\\\\\\\n};\\\\\\\\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n  return asyncFetch(`${GRAPHQL_ENDPOINT}/v1/graphql`, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"dataplatform_near\\\\\\\\\\\\\\\" },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst createQuery = (type, isUpdate) => {\\\\\\\\n  let querySortOption = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  switch (sort) {\\\\\\\\n    case \\\\\\\\\\\\\\\"recentcommentdesc\\\\\\\\\\\\\\\":\\\\\\\\n      querySortOption = `{ last_comment_timestamp: desc_nulls_last },`;\\\\\\\\n      break;\\\\\\\\n    default:\\\\\\\\n      querySortOption = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  let queryFilter = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n  let timeOperation = \\\\\\\\\\\\\\\"_lte\\\\\\\\\\\\\\\";\\\\\\\\n  if (isUpdate) {\\\\\\\\n    timeOperation = \\\\\\\\\\\\\\\"_gt\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const queryTime = initialQueryTime ? initialQueryTime : Date.now() * 1000000;\\\\\\\\n\\\\\\\\n  if (filteredAccountIds) {\\\\\\\\n    queryFilter = `where: {\\\\\\\\n          _and: [\\\\\\\\n            {account_id: {_in: \\\\\\\\\\\\\\\"${filteredAccountIds}\\\\\\\\\\\\\\\"}},\\\\\\\\n            {block_timestamp: {${timeOperation}: ${queryTime}}}\\\\\\\\n          ]\\\\\\\\n        }, `;\\\\\\\\n  } else {\\\\\\\\n    queryFilter = `where: {\\\\\\\\n          _and: [\\\\\\\\n            {block_timestamp: {${timeOperation}: ${queryTime}}}\\\\\\\\n          ]\\\\\\\\n        }, `;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return `\\\\\\\\nquery FeedQuery($offset: Int, $limit: Int) {\\\\\\\\n  dataplatform_near_social_feed_moderated_posts(${queryFilter} order_by: [${querySortOption} { block_height: desc }], offset: $offset, limit: $limit) {\\\\\\\\n    account_id\\\\\\\\n    block_height\\\\\\\\n    block_timestamp\\\\\\\\n    content\\\\\\\\n    receipt_id\\\\\\\\n    accounts_liked\\\\\\\\n    last_comment_timestamp\\\\\\\\n    comments(order_by: {block_height: asc}) {\\\\\\\\n      account_id\\\\\\\\n      block_height\\\\\\\\n      block_timestamp\\\\\\\\n      content\\\\\\\\n    }\\\\\\\\n    verifications {\\\\\\\\n      human_provider\\\\\\\\n      human_valid_until\\\\\\\\n      human_verification_level\\\\\\\\n    }\\\\\\\\n\\\\\\\\n  }\\\\\\\\n  dataplatform_near_social_feed_moderated_posts_aggregate(${queryFilter} order_by: {id: asc}) {\\\\\\\\n    aggregate {\\\\\\\\n      count\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst loadMorePosts = (isUpdate) => {\\\\\\\\n  const queryName = \\\\\\\\\\\\\\\"FeedQuery\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n  if (!isUpdate) {\\\\\\\\n    setIsLoading(true);\\\\\\\\n  }\\\\\\\\n  const offset = isUpdate ? 0 : postsData.posts.length;\\\\\\\\n  const limit = isUpdate ? 100 : LIMIT;\\\\\\\\n  const query = createQuery(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", isUpdate);\\\\\\\\n  fetchGraphQL(query, queryName, {\\\\\\\\n    offset: offset,\\\\\\\\n    limit: limit,\\\\\\\\n  }).then((result) => {\\\\\\\\n    if (result.status === 200 && result.body) {\\\\\\\\n      if (result.body.errors) {\\\\\\\\n        console.log(\\\\\\\\\\\\\\\"error:\\\\\\\\\\\\\\\", result.body.errors);\\\\\\\\n        return;\\\\\\\\n      }\\\\\\\\n      let data = result.body.data;\\\\\\\\n      if (data) {\\\\\\\\n        const newPosts = data.dataplatform_near_social_feed_moderated_posts;\\\\\\\\n        const postsCountLeft =\\\\\\\\n          data.dataplatform_near_social_feed_moderated_posts_aggregate.aggregate\\\\\\\\n            .count;\\\\\\\\n        if (newPosts.length > 0) {\\\\\\\\n          let filteredPosts = newPosts.filter(\\\\\\\\n            (i) => !shouldFilter(i, postsModerationKey)\\\\\\\\n          );\\\\\\\\n          filteredPosts = filteredPosts.map((post) => {\\\\\\\\n            const prevComments = post.comments;\\\\\\\\n            const filteredComments = prevComments.filter(\\\\\\\\n              (comment) => !shouldFilter(comment, commentsModerationKey)\\\\\\\\n            );\\\\\\\\n            post.comments = filteredComments;\\\\\\\\n            return post;\\\\\\\\n          });\\\\\\\\n\\\\\\\\n          if (isUpdate) {\\\\\\\\n            setNewUnseenPosts(filteredPosts);\\\\\\\\n          } else {\\\\\\\\n            setPostsData({\\\\\\\\n              posts: [...postsData.posts, ...filteredPosts],\\\\\\\\n              postsCountLeft,\\\\\\\\n            });\\\\\\\\n            setIsLoading(false);\\\\\\\\n          }\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    if (!isUpdate && initialQueryTime === null) {\\\\\\\\n      const newTime =\\\\\\\\n        postsData.posts && postsData.posts[0]\\\\\\\\n          ? postsData.posts[0].block_timestamp\\\\\\\\n          : Date.now() * 1000000;\\\\\\\\n      setInitialQueryTime(newTime + 1000);\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst startFeedUpdates = () => {\\\\\\\\n  if (initialQueryTime === null) return;\\\\\\\\n\\\\\\\\n  clearInterval(feedInterval);\\\\\\\\n  const newFeedInterval = setInterval(() => {\\\\\\\\n    loadMorePosts(true);\\\\\\\\n  }, 5000);\\\\\\\\n  setFeedInterval(newFeedInterval);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst stopFeedUpdates = () => {\\\\\\\\n  clearInterval(feedInterval);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [initialized, setInitialized] = useState(false);\\\\\\\\nconst [initialQueryTime, setInitialQueryTime] = useState(null);\\\\\\\\nconst [feedInterval, setFeedInterval] = useState(null);\\\\\\\\nconst [newUnseenPosts, setNewUnseenPosts] = useState([]);\\\\\\\\nconst [postsData, setPostsData] = useState({ posts: [], postsCountLeft: 0 });\\\\\\\\nconst [isLoading, setIsLoading] = useState(false);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  loadMorePosts(false);\\\\\\\\n}, []);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (postsData.posts.length > 0) {\\\\\\\\n    setPostExists(true);\\\\\\\\n  }\\\\\\\\n}, [postsData]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (initialQueryTime === null) {\\\\\\\\n    clearInterval(feedInterval);\\\\\\\\n  } else {\\\\\\\\n    startFeedUpdates();\\\\\\\\n  }\\\\\\\\n}, [initialQueryTime]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (newUnseenPosts && newUnseenPosts.length > 0) {\\\\\\\\n    stopFeedUpdates();\\\\\\\\n    const initialQueryTime = newUnseenPosts[0].block_timestamp + 1000; // timestamp is getting rounded by 3 digits\\\\\\\\n    const newTotalCount = postsData.postsCountLeft + newUnseenPosts.length;\\\\\\\\n    setPostsData({\\\\\\\\n      posts: [...newUnseenPosts, ...postsData.posts],\\\\\\\\n      postsCountLeft: newTotalCount,\\\\\\\\n    });\\\\\\\\n    if (props.onNewUnseenPosts) {\\\\\\\\n      props.onNewUnseenPosts(newUnseenPosts);\\\\\\\\n    }\\\\\\\\n    setNewUnseenPosts([]);\\\\\\\\n    setInitialQueryTime(initialQueryTime);\\\\\\\\n  }\\\\\\\\n}, [newUnseenPosts]);\\\\\\\\n\\\\\\\\nconst hasMore =\\\\\\\\n  postsData.postsCountLeft !== postsData.posts.length &&\\\\\\\\n  postsData.posts.length > 0;\\\\\\\\n\\\\\\\\nif (!initialized && sort) {\\\\\\\\n  setInitialized(true);\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"near/widget/Posts.Feed\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        hasMore,\\\\\\\\n        isLoading,\\\\\\\\n        loadMorePosts: () => {\\\\\\\\n          if (!isLoading) {\\\\\\\\n            loadMorePosts(false);\\\\\\\\n          }\\\\\\\\n        },\\\\\\\\n        posts: postsData.posts,\\\\\\\\n        showFlagAccountFeature: props.showFlagAccountFeature,\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.507349590896e+21
    }
  },
  {
    "id": "3545409888",
    "receipt_id": "3Ts7V83jDfPi3hoPXrxurvy3jPr5NpKdWoPpVtuNLwp4",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8yo4teEfhVr5bEEfNJBcZkgd7dZGgKmzv8qCnveC3Q5W",
      "block_height": 116062665,
      "block_timestamp": 1712167401874336500
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "HMiwSoBBduVETmVA9JUwaZyHx2GUcggYsfRoRRRXJrCY",
    "included_in_block_hash": "AfaUsEfo9zWcM7ANUZerXx6nMh5961EKp2R9veTf67JZ",
    "block_timestamp": "1712167398919395392",
    "block": {
      "block_height": 116062663
    },
    "receipt_conversion_tokens_burnt": "249290618577600000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.878121597438047e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.507349590896e+21
    }
  },
  {
    "id": "3545569225",
    "receipt_id": "ED7Fq6NMaQquotyJyRBQwyfftKXTUERMhyuvMjxaQT3U",
    "predecessor_account_id": "malbec.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "DNKDN3sST8aUZYmQvUCfPANUCRknfnX9VAA93AvJvP8k",
      "block_height": 116063073,
      "block_timestamp": 1712167959247380500
    },
    "receipt_outcome": {
      "gas_burnt": 7059816081190,
      "tokens_burnt": 705981608119000000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "3cucZNpVDJvKRb52hoos82P37SPCM13szQAQjnRXgZtp",
    "included_in_block_hash": "9QrgxTAf3voQsyQ218L8iV43UcCcc9aB4RsiXWuZb3w2",
    "block_timestamp": "1712167958337048559",
    "block": {
      "block_height": 116063072
    },
    "receipt_conversion_tokens_burnt": "242822061515600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 705981608119000000000,
        "args": "{\"id\": 34, \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4281073100671e+21
    }
  },
  {
    "id": "3545569641",
    "receipt_id": "E53dct9o63wXiTtCH2ncTECoZqwG1ArScDFupEZ6NuGA",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "4vEAjUiBYkP2Cw8PkgPxAEtVp68ZZRYMy7QXWRNRBhoa",
      "block_height": 116063074,
      "block_timestamp": 1712167960785519400
    },
    "receipt_outcome": {
      "gas_burnt": 4793036404325,
      "tokens_burnt": 479303640432500000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "3cucZNpVDJvKRb52hoos82P37SPCM13szQAQjnRXgZtp",
    "included_in_block_hash": "9QrgxTAf3voQsyQ218L8iV43UcCcc9aB4RsiXWuZb3w2",
    "block_timestamp": "1712167958337048559",
    "block": {
      "block_height": 116063072
    },
    "receipt_conversion_tokens_burnt": "242822061515600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 479303640432500000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"malbec.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":34,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"malbec.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4281073100671e+21
    }
  },
  {
    "id": "3546479042",
    "receipt_id": "3HJkevs1fNw6yosLTNGXXvActdpCpxc9EbZaUBdf4C8K",
    "predecessor_account_id": "mariamneu.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "EhLtwCAYVycJBAjMzSRcbcmoTLZ2wdCibJLbYvX5n2cz",
      "block_height": 116064772,
      "block_timestamp": 1712170235534730200
    },
    "receipt_outcome": {
      "gas_burnt": 2717464390037,
      "tokens_burnt": 271746439003700000000,
      "executor_account_id": "devhub.near",
      "status": false
    },
    "transaction_hash": "7sBLNmYGAZeQ1ViJ2YCdAtbdZcBkyJtL1HZQ4RS9d5e7",
    "included_in_block_hash": "ArLpgz2o43CSfaWeqHD5jAHmEKXa3dYC1b4EYVWu5fmT",
    "block_timestamp": "1712170234235360884",
    "block": {
      "block_height": 116064771
    },
    "receipt_conversion_tokens_burnt": "242802608889800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "create_discussion",
        "deposit": 0,
        "fee": 271746439003700000000,
        "args": "{\"handle\": \"chain-abstraction\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": false
    },
    "outcomes_agg": {
      "transaction_fee": 514549047893500000000
    }
  },
  {
    "id": "3549592358",
    "receipt_id": "DkQbqGekTgS2mJGf1cBdgVNepNaJyoLFMmyMZgSZncij",
    "predecessor_account_id": "madlime.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8Pvao8ud4Asd6PEv8ut2NEPdfiuYRdfTV5XTvprFWbnz",
      "block_height": 116070285,
      "block_timestamp": 1712177685857672400
    },
    "receipt_outcome": {
      "gas_burnt": 13651700842042,
      "tokens_burnt": 1.3651700842042e+21,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "8WztWoXzmcaLsaGiVzCFMyTYgzWiCCRYLBzkqhEgFWFq",
    "included_in_block_hash": "3xoc6P54QfLdUEN9ZwCQFuRGAFSz6yfwBnP5N5hTf3z9",
    "block_timestamp": "1712177684609773135",
    "block": {
      "block_height": 116070284
    },
    "receipt_conversion_tokens_burnt": "244950670683600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal",
        "deposit": 0,
        "fee": 1.3651700842042e+21,
        "args": "{\"id\": 33, \"body\": {\"name\": \"RE:Public DevHub Proposal #1 - Milestone for April\", \"summary\": \"Re:public is a CI/CD automation tool for smart contract development, allowing deployments across multiple chains with a simple git push. You can see Re:public as Vercel for web3. \\\\\\\\n\\\\\\\\nWe successfully participated in the EthLondon hackathon, securing bounties from Near and Arbitrum, and we won\\\\\\\\u{2019}t stop there. We are deeply believe in idea of improving the developer experience, making it our top priority. \\\\\\\\n\\\\\\\\nOur main goal for this proposal - add \\\\\\\\\\\\\\\"bages and templates\\\\\\\\\\\\\\\" feature, as well as refactor code.\", \"category\": \"Tooling & Infrastructure\", \"timeline\": {\"status\": \"DRAFT\"}, \"supervisor\": null, \"description\": \"## Overview\\\\\\\\nRe:public is a CI/CD automation tool for smart contract development, allowing deployments across multiple chains with a simple git push. You can see Re:public as GitLab or Vercel in web3 world.\\\\\\\\n\\\\\\\\nDesigned to streamline Web3 development, it eliminates the need for manual deployments across testnet chains. Utilizing NEAR cli tools and chain abstraction, it offers a seamless development process, reducing time-to-market and making blockchain development more accessible.\\\\\\\\n\\\\\\\\nWe successfully participated in the EthLondon hackathon, securing bounties from Near and Arbitrum, and we won\\\\\\\\u{2019}t stop there. We are deeply believe in idea of improving the developer experience, making it our top priority. \\\\\\\\n\\\\\\\\nWe created a working demo of Re:public in just two days during the hackathon, demonstrating our capability and drive. For more details, you can check out Re:public demo on ETHGlobal: [Re:public Showcase](https://ethglobal.com/showcase/re-public-4en9r)\\\\\\\\n\\\\\\\\n## Description\\\\\\\\n\\\\\\\\nOur project leverages NEAR cli tools and chain abstraction to deliver best CI experience for customers. Dockerized worker handles commits from connected repositories. Deploys them to the network and stores addresses. Chain abstraction allows to deploy projects to both near evm chains paying fees in NEAR tokens.\\\\\\\\n\\\\\\\\nThe core functionality of our project hinges on leveraging GitHub webhooks to capture various events, including app installations, commits, and pushes. Upon receiving an event, we populate our deployment queue. This queue is then processed by a background worker that is responsible for deploying the project across different blockchain networks, tailored to the specific requirements of each project type.\\\\\\\\n\\\\\\\\n## Who we are\\\\\\\\n\\\\\\\\nWe are experienced developers with an extensive development background, having several years of experience working in big tech companies, as well as creating and founding projects like [ZkNoid](https://zknoid.io/) and [xRaise](https://xraise.io/).\\\\\\\\n\\\\\\\\n## Milestone for this proposal (April 2024)\\\\\\\\n\\\\\\\\n1. **Code Revision and Refactoring:** Following our participation in the EthLondon Hackathon, it\\\\\\\\\\\\'s crucial to revisit and refine our code. We aim to transform prototyped app components into more robust, production-ready elements.\\\\\\\\n2. **Marketplace with Templates and \\\\\\\\\\\\'Badge Deploy\\\\\\\\\\\\':** We aspire to provide a \\\\\\\\\\\\'Vercel-like\\\\\\\\\\\\' user experience. Users should be able to deploy templates with a single \\\\\\\\\\\\'badge\\\\\\\\\\\\' click from any documentation or readme, mimicking the \\\\\\\\\\\\'Vercel deploy\\\\\\\\\\\\' functionality. This process will clone the selected template into the repository, handling its deployment and setup automatically.\\\\\\\\n3. **Customer Development:** We will engage in customer development.\\\\\\\\n\\\\\\\\n## How This Benefits the Near Ecosystem:\\\\\\\\n\\\\\\\\nAdvantages of the project for the Near ecosystem include:\\\\\\\\n\\\\\\\\n1. **Near Chain Signatures Utilization:** Our project heavily relies on and utilizes chain signatures. Deploying this tool in a production environment and working closely with Near dev/Devrel team, we will significantly enhance documentation and the developer experience for those using chain signatures. Our experimental use of chain signatures, such as contract deployments via Near signatures, will provide invaluable insights for the Near core development team, which will benefir all chain signature users.\\\\\\\\n2. **Focus on Deployment Experience on NEAR:** Our MVP will prioritize deployment experiences and CI/CD in the Near ecosystem. We aim to offer the best onboarding experience with template-based deployments similar to Vercel, enabling users to deploy a sandbox contract directly from Near documentation. This approach will simplify the onboarding process for developers new to the Near ecosystem.\\\\\\\\n3. **Seamless Gas Payment using Near token:** A key advantage of our project is the seamless gas payment mechanism in Near, which could increase transaction volumes on the Near network and enhance the liquidity of the Near token.\\\\\\\\n4. **Deployment on Alternative Networks utilising NEAR:** Successful execution of the project and the ability to deploy on alternative networks, like Solana, will distinguish Near from competitors, broaden the application scope of chain signatures, and reinforce Near\\\\\\\\\\\\'s reputation as a leading developer experience network.\\\\\\\\n5. **Benefiting All of Web3:** This project aims to enhance the development experience across the entire Web3 ecosystem, not just for Near. By simplifying the process of developing, testing, and deploying smart contracts, we make it more appealing for developers to engage with and commit to the Web3 space. The more user-friendly the development environment, the greater the incentive for developers to innovate within Web3\\\\\\\\n\\\\\\\\n## Roadmap for Re:public\\\\\\\\n\\\\\\\\n### **Q1 (April-May) 2024 - MVP**\\\\\\\\n\\\\\\\\n1. **Code Revision and Refactoring:** Following our participation in the EthLondon Hackathon, it\\\\\\\\\\\\'s crucial to revisit and refine our code. We aim to transform prototyped app components into more robust, production-ready elements.\\\\\\\\n2. **Marketplace with Templates and \\\\\\\\\\\\'Badge Deploy\\\\\\\\\\\\':** We aspire to provide a \\\\\\\\\\\\'Vercel-like\\\\\\\\\\\\' user experience. Users should be able to deploy templates with a single \\\\\\\\\\\\'badge\\\\\\\\\\\\' click from any documentation or readme, mimicking the \\\\\\\\\\\\'Vercel deploy\\\\\\\\\\\\' functionality. This process will clone the selected template into the repository, handling its deployment and setup automatically.\\\\\\\\n3. **Logging and Deployments Pages:** Implement features to view logs for each unique contract deployment, marking our initial steps toward observability within the app.\\\\\\\\n4. **Enhanced GitHub Integration:** Leveraging the GitHub API, we plan to enrich the developer experience by integrating comments and deployments directly on GitHub when relevant.\\\\\\\\n5. **Customer Development and Early Marketing:** We will engage in customer development and begin early-stage marketing efforts.\\\\\\\\n6. **Long-Term Monetization Strategy:** Begin to think on long-term monetization strategies.\\\\\\\\n7. **Early Stage MVP Release:** Launch an initial version of our Minimum Viable Product, focusing on Near ecosystem deployments.\\\\\\\\n\\\\\\\\n### **Q3 2024 - MLP**\\\\\\\\n\\\\\\\\n1. **HZN Accelerator and Fundraising:** Apply to the HZN accelerator and seek fundraising opportunities for the project.\\\\\\\\n2. **Continue to CustDev:** Enhance collaboration with smart contract developers on different chains\\\\\\\\n3. **Tracing/Monitoring Enhancements:** Develop a custom monitoring and tracing page, complemented by comprehensive logs.\\\\\\\\n4. **Multi-Chain Deployment Integration:** Start integrating deployment capabilities on other chains like Arbitrum and Polygon.\\\\\\\\n5. **Release of MLP:** Launch a fully functional and production-ready Minimal Lovable Product.\\\\\\\\n\\\\\\\\n### **Q4 2024**\\\\\\\\n\\\\\\\\n1. **Successful Fundraising:** Achieve our fundraising goals.\\\\\\\\n2. **Solana Deployments:** Implement deployment capabilities on Solana, utilizing Near chain signatures.\\\\\\\\n3. **In-House Multisig Control:** Centralize multisig control within the app.\\\\\\\\n4. **AI Contract Auditor:** Introduce an AI-based contract auditing feature.\\\\\\\\n5. **IPFS Integration:** Enable contract deployments with linked frontends on IPFS.\\\\\\\\n6. **Enhanced Access Control:** Implement precise access control mechanisms.\\\\\\\\n\\\\\\\\n## Funding\\\\\\\\n\\\\\\\\nWe are required 13k usdt, for April in our Q1 roadmap. This money would be enough for us to hire a team of 5 being able to work on MVP for 1 month: \\\\\\\\n\\\\\\\\n1x - Product Manager / Analyst / Business (we have a contact - 2000 usdt/month)\\\\\\\\n\\\\\\\\n2x - Fullstack Developers (approx 2500 usdt/month)\\\\\\\\n\\\\\\\\n2x - Founders (fundraising, cust devs, programming) (Me and Andrei - 2500 usdt/month)\\\\\\\\n\\\\\\\\nAll additional required exprenses (marketing, ads, etc) would be allocated from founders capital\\\\\\\\n\\\\\\\\nTotal amount = 13 000 usdt (2000 + 2500 * 2 + 2500 * 2 + 1000) for April 2024\\\\\\\\n\\\\\\\\n## Afterword\\\\\\\\n\\\\\\\\nWe truly believe that our project will become one of the key projects in the Near ecosystem and can significantly influence the further success of Near in the web3 space. We received a lot of positive feedback at the hackathon from fellow hackers, builders, and programmers, and we know that the project will be in demand.\\\\\\\\n\\\\\\\\nAs developers, we possess the ability to communicate effectively in the language of our peers, and I believe we have the capability to develop a product that will play a crucial role in advancing the field of development both on the Near platform and within the broader Web3 ecosystem. This project is not just about promoting Near; it\\\\\\\\\\\\'s about advancing the entirety of the Web3 landscape. We are hopeful that this proposal will mark the beginning of our collaborative journey with Near.\\\\\\\\n\\\\\\\\nEthLondon Showcase:  https://ethglobal.com/showcase/re-public-4en9r\\\\\\\\n\\\\\\\\nOur Twitter: https://twitter.com/re_public_dev\\\\\\\\n\", \"linked_proposals\": [], \"receiver_account\": \"madlime.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"13000\", \"requested_sponsorship_paid_in_currency\": \"USDT\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.0935329345101e+21
    }
  },
  {
    "id": "3549593109",
    "receipt_id": "C74QMwGJjC62YkdeazyjUeiFpLLkxKEYmjd5zJHPk49F",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7YpP1uhWeYgsRrDL4NEFcquT6s3DtMCqhM212EzrSc9f",
      "block_height": 116070286,
      "block_timestamp": 1712177687838546000
    },
    "receipt_outcome": {
      "gas_burnt": 4834121796223,
      "tokens_burnt": 483412179622300000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "8WztWoXzmcaLsaGiVzCFMyTYgzWiCCRYLBzkqhEgFWFq",
    "included_in_block_hash": "3xoc6P54QfLdUEN9ZwCQFuRGAFSz6yfwBnP5N5hTf3z9",
    "block_timestamp": "1712177684609773135",
    "block": {
      "block_height": 116070284
    },
    "receipt_conversion_tokens_burnt": "244950670683600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 483412179622300000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"madlime.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":33,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"madlime.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.0935329345101e+21
    }
  },
  {
    "id": "3552734498",
    "receipt_id": "5Wmweb9VvEh2CTPvRQEFawrvuBGWBvwxjmA4jpdvSfhc",
    "predecessor_account_id": "jutsuai.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "DZVrZYNGENAGtZ6hYU2DwQFz3n1fQM2dsh343fcRcN1t",
      "block_height": 116075864,
      "block_timestamp": 1712185043307138300
    },
    "receipt_outcome": {
      "gas_burnt": 7344992712832,
      "tokens_burnt": 734499271283200000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "CqxaEzsSuM8LcG3soQJPyqkScBDB7tQKr7reu54iPPvj",
    "included_in_block_hash": "EAwWhckQjGFm8JPpccLW66dS9vWeGCLRgKPcE9TFa6au",
    "block_timestamp": "1712185041956417985",
    "block": {
      "block_height": 116075863
    },
    "receipt_conversion_tokens_burnt": "243713081214600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal",
        "deposit": 0,
        "fee": 734499271283200000000,
        "args": "{\"id\": 28, \"body\": {\"name\": \"Jutsu DevHub Proposal - Milestone 2\", \"summary\": \"This is a continuation of the Jutsu proposal (posted on 19 January 2024) to DevHub for the building of WebIDE features to improve the developer onboarding and overall hackathon experience with Hackbox. This proposal contains our Milestone 1 report, and Milestone 2 proposal.\", \"category\": \"Tooling & Infrastructure\", \"timeline\": {\"status\": \"DRAFT\"}, \"supervisor\": \"frol.near\", \"description\": \"Previous DevHub Proposal (19 January): https://near.social/devgovgigs.near/widget/gigs-board.pages.Post?id=2750\\\\\\\\n\\\\\\\\n---\\\\\\\\n\\\\\\\\n## Milestone 1 Report: Q1 (January-March)\\\\\\\\n\\\\\\\\n- [x]  Added IntelliSense (auto-complete functionality) support for NEAR Social, BOS Components, \\\\\\\\\\\\\\\"styled-components\\\\\\\\\\\\\\\" and other core libraries within the Jutsu WebIDE.\\\\\\\\n- [x]  Created the following keyboard shortcuts:\\\\\\\\n    - [x]  Searching components (Cmd + p).\\\\\\\\n    - [x]  View source code by clicking \\\\\\\\u{201c}.\\\\\\\\u{201d} when a component is open inside the Jutsu gateway (inspired by GitHub).\\\\\\\\n- [x]  **Collaborative Editing:** Option for real-time (google-docs style) group collaboration with other developers.\\\\\\\\n- [x]  **[Completed Early: From Q2 2024 goals]** ChatGPT/Copilot integration inside Jutsu WebIDE.\\\\\\\\n- [x]  **[Completed Early: From Q4 2024 goals]** Generative UI \\\\\\\\u{2013} Create a functional user interface with just a prompt (bento.jutsu.ai).\\\\\\\\n- [x]  **Supported the 4 following Hackbox hackathons:** ETH Denver (NEAR/DEV/TALKS), ETH Oxford, ETH Samba, and ETH Seoul.\\\\\\\\n\\\\\\\\n## Milestone 2 Proposal: Q2 (April-June)\\\\\\\\n\\\\\\\\n- [ ]  Work with Pagoda team to integrate Web Engine in Jutsu WebIDE.\\\\\\\\n- [ ]  Ability to import and export BOS components to GitHub.\\\\\\\\n- [ ]  Persist the component search query so that when developers switch tabs and come back, the previous search result is maintained.\\\\\\\\n- [ ]  Ability to upload, use, and manage \\\\\\\\u{2018}styled-components\\\\\\\\u{2019} files in IPFS from Jutsu WebIDE.\\\\\\\\n- [ ]  **Improve developer onboarding:** When creating a Jutsu account, if the developer does not have a NEAR wallet, Jutsu will take them through a simplified NEAR wallet creation process where they will receive a small amount ($0.X worth of NEAR), so that they can deploy a few components for free.\\\\\\\\n- [ ]  Implement \\\\\\\\u{201c}Right-click\\\\\\\\u{201d} so users can deploy multiple components at one time.\\\\\\\\n- [ ]  Improve and complete the Pull-Request flow.\\\\\\\\n\\\\\\\\n## Ongoing support to Hackbox\\\\\\\\n\\\\\\\\n**Seamless Onboarding for Beginners:**\\\\\\\\n\\\\\\\\n- As listed above, at the registration stage, Jutsu will provide the option for a simplified NEAR wallet creation process and/or GitHub account setup process. Those without NEAR wallets, will receive pre-filled accounts ($0.X worth of NEAR) for deploying components.\\\\\\\\n\\\\\\\\n**Learning resources:**\\\\\\\\n\\\\\\\\n- Getting started with Jutsu and BOS component development.\\\\\\\\n- Getting started with Bento for non-technical people.\\\\\\\\n- A tailored beginner toolkit for starting with NEAR development, EVM on NEAR, Account Abstraction, BOS development, and other key NEAR technologies.\\\\\\\\n\\\\\\\\n**Ongoing Mentorship and Support During Events:**\\\\\\\\n\\\\\\\\n- When requested, Jutsu will actively participate in Hackbox Hackathon meetings and group chats to facilitate team introductions, platform demonstrations, and Q&A sessions as necessary. Continuous technical support and mentorship will be provided as it pertains to the use of the Jutsu platform for hackathon participants and organizers within Hackbox.\\\\\\\\n\\\\\\\\n**Post-Event Analysis and Metrics:**\\\\\\\\n\\\\\\\\n- When requested, detailed tracking of active builders per event and cohort and comprehensive metrics related to the building and forking of components, insights into participant engagement and project popularity, etc.\\\\\\\\n\\\\\\\\n**Feature Requests:**\\\\\\\\n\\\\\\\\n- Jutsu will consider additional feature requests that have been approved by Hackbox or Devhub admin for the purpose of enhancing developer experience (within the scope of this proposal).\", \"linked_proposals\": [], \"receiver_account\": \"jutsuai.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"3750\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4574854254691e+21
    }
  },
  {
    "id": "3552735453",
    "receipt_id": "CDVKXPpdDeHPpHT4qEpuC3qYFghv4vf6pgR8FQ8H5ZYL",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5Y6CdK8V12JDSXMStqkrbdauhS5kVcSxCuLQKTWDTfWA",
      "block_height": 116075865,
      "block_timestamp": 1712185044572145700
    },
    "receipt_outcome": {
      "gas_burnt": 4792730729713,
      "tokens_burnt": 479273072971300000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "CqxaEzsSuM8LcG3soQJPyqkScBDB7tQKr7reu54iPPvj",
    "included_in_block_hash": "EAwWhckQjGFm8JPpccLW66dS9vWeGCLRgKPcE9TFa6au",
    "block_timestamp": "1712185041956417985",
    "block": {
      "block_height": 116075863
    },
    "receipt_conversion_tokens_burnt": "243713081214600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 479273072971300000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"jutsuai.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":28,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"jutsuai.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4574854254691e+21
    }
  },
  {
    "id": "3552853915",
    "receipt_id": "872WdH8PByb95Ps4De7x6X9KVkGhfCeJaRktfB581VGZ",
    "predecessor_account_id": "jutsuai.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "Hdr7eqwuXaf6q8PShXdm2MWnJL61BMsUD6sfZqQVCKgT",
      "block_height": 116076150,
      "block_timestamp": 1712185415061008100
    },
    "receipt_outcome": {
      "gas_burnt": 7898917353919,
      "tokens_burnt": 789891735391900000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "CJAVzpY5rZguoe19i8CuZUjnjgeNKSz6JoqH7kGVnqFw",
    "included_in_block_hash": "8gpb8bPSaFgcLohU3A4PHitEQ3QSvAYsUtqDnkCQvr8L",
    "block_timestamp": "1712185413721035493",
    "block": {
      "block_height": 116076149
    },
    "receipt_conversion_tokens_burnt": "243713081214600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal",
        "deposit": 0,
        "fee": 789891735391900000000,
        "args": "{\"id\": 28, \"body\": {\"name\": \"Jutsu DevHub Proposal - Milestone 2\", \"summary\": \"This is a continuation of the Jutsu proposal (posted on 19 January 2024) to DevHub for the building of WebIDE features to improve the developer onboarding and overall hackathon experience with Hackbox. This proposal contains our Milestone 1 report, and Milestone 2 proposal.\", \"category\": \"Tooling & Infrastructure\", \"timeline\": {\"status\": \"DRAFT\"}, \"supervisor\": \"frol.near\", \"description\": \"Previous DevHub Proposal (19 January): https://near.social/devgovgigs.near/widget/gigs-board.pages.Post?id=2750\\\\\\\\n\\\\\\\\n---\\\\\\\\n\\\\\\\\n## Milestone 1 Report: Q1 (January-March)\\\\\\\\n\\\\\\\\n- [x]  Added IntelliSense (auto-complete functionality) support for NEAR Social, BOS Components, \\\\\\\\\\\\\\\"styled-components\\\\\\\\\\\\\\\" and other core libraries within the Jutsu WebIDE.\\\\\\\\n- [x]  Created the following keyboard shortcuts:\\\\\\\\n    - [x]  Searching components (Cmd + p).\\\\\\\\n    - [x]  View source code by clicking \\\\\\\\u{201c}.\\\\\\\\u{201d} when a component is open inside the Jutsu gateway (inspired by GitHub).\\\\\\\\n- [x]  **Collaborative Editing:** Option for real-time (google-docs style) group collaboration with other developers.\\\\\\\\n- [x]  **[Completed Early: From Q2 2024 goals]** ChatGPT/Copilot integration inside Jutsu WebIDE.\\\\\\\\n- [x]  **[Completed Early: From Q4 2024 goals]** Generative UI \\\\\\\\u{2013} Create a functional user interface with just a prompt (bento.jutsu.ai).\\\\\\\\n- [x]  **Supported the 4 following Hackbox hackathons:** ETH Denver (NEAR/DEV/TALKS), ETH Oxford, ETH Samba, and ETH Seoul.\\\\\\\\n\\\\\\\\n## Milestone 2 Proposal: Q2 (April-June)\\\\\\\\n\\\\\\\\n- [ ]  Work with Pagoda team to integrate Web Engine in Jutsu WebIDE.\\\\\\\\n- [ ]  Ability to import and export BOS components to GitHub.\\\\\\\\n- [ ]  Persist the component search query so that when developers switch tabs and come back, the previous search result is maintained.\\\\\\\\n- [ ]  Ability to upload, use, and manage \\\\\\\\u{2018}styled-components\\\\\\\\u{2019} files in IPFS from Jutsu WebIDE.\\\\\\\\n- [ ]  **Improve developer onboarding:** When creating a Jutsu account, if the developer does not have a NEAR wallet, Jutsu will take them through a simplified NEAR wallet creation process where they will receive a small amount ($0.X worth of NEAR), so that they can deploy a few components for free.\\\\\\\\n- [ ]  Implement \\\\\\\\u{201c}Right-click\\\\\\\\u{201d} so users can deploy multiple components at one time.\\\\\\\\n- [ ]  Improve and complete the Pull-Request flow.\\\\\\\\n\\\\\\\\n## Ongoing support to Hackbox\\\\\\\\n\\\\\\\\n**Seamless Onboarding for Beginners:**\\\\\\\\n\\\\\\\\n- As listed above, at the registration stage, Jutsu will provide the option for a simplified NEAR wallet creation process and/or GitHub account setup process. Those without NEAR wallets, will receive pre-filled accounts ($0.X worth of NEAR) for deploying components.\\\\\\\\n\\\\\\\\n**Learning resources:**\\\\\\\\n\\\\\\\\n- Getting started with Jutsu and BOS component development.\\\\\\\\n- Getting started with Bento for non-technical people.\\\\\\\\n- A tailored beginner toolkit for starting with NEAR development, EVM on NEAR, Account Abstraction, BOS development, and other key NEAR technologies.\\\\\\\\n\\\\\\\\n**Ongoing Mentorship and Support During Events:**\\\\\\\\n\\\\\\\\n- When requested, Jutsu will actively participate in Hackbox Hackathon meetings and group chats to facilitate team introductions, platform demonstrations, and Q&A sessions as necessary. Continuous technical support and mentorship will be provided as it pertains to the use of the Jutsu platform for hackathon participants and organizers within Hackbox.\\\\\\\\n\\\\\\\\n**Post-Event Analysis and Metrics:**\\\\\\\\n\\\\\\\\n- When requested, detailed tracking of active builders per event and cohort and comprehensive metrics related to the building and forking of components, insights into participant engagement and project popularity, etc.\\\\\\\\n\\\\\\\\n**Feature Requests:**\\\\\\\\n\\\\\\\\n- Jutsu will consider additional feature requests that have been approved by Hackbox or Devhub admin for the purpose of enhancing developer experience (within the scope of this proposal).\", \"linked_proposals\": [], \"receiver_account\": \"jutsuai.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"3750\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5170244763556e+21
    }
  },
  {
    "id": "3552854457",
    "receipt_id": "Fb6EQ3rFdHPwNMEqMniH77tkq6rpcEGarPCNDPQwzZDq",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "Hed2XQ5iJYb36y8tLfhUS1hUFZirVMAUnwGtky1t9QuX",
      "block_height": 116076152,
      "block_timestamp": 1712185417780187000
    },
    "receipt_outcome": {
      "gas_burnt": 4834196597491,
      "tokens_burnt": 483419659749100000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "CJAVzpY5rZguoe19i8CuZUjnjgeNKSz6JoqH7kGVnqFw",
    "included_in_block_hash": "8gpb8bPSaFgcLohU3A4PHitEQ3QSvAYsUtqDnkCQvr8L",
    "block_timestamp": "1712185413721035493",
    "block": {
      "block_height": 116076149
    },
    "receipt_conversion_tokens_burnt": "243713081214600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 483419659749100000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"jutsuai.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":28,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"jutsuai.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5170244763556e+21
    }
  },
  {
    "id": "3552932500",
    "receipt_id": "9qC8gS45JnjKp9aEPQkDR8gWL5SApVV1nMyq2b1j1uuK",
    "predecessor_account_id": "jutsuai.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "DsyyyaTBjpWuwVN4qpxLVSenr7Fq7qUvbBVwg8xq8Jcq",
      "block_height": 116076332,
      "block_timestamp": 1712185653696727800
    },
    "receipt_outcome": {
      "gas_burnt": 8410277153978,
      "tokens_burnt": 841027715397800000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "BhbWvpgJGpC8ewCcPVJcZUnsUka9EcyHJFc7BM2ZSZ2M",
    "included_in_block_hash": "Are3hbw9WcCvZocp6wA3MULSQw4BpguLZVTkzt9xB32d",
    "block_timestamp": "1712185652302029632",
    "block": {
      "block_height": 116076331
    },
    "receipt_conversion_tokens_burnt": "243563720823400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal",
        "deposit": 0,
        "fee": 841027715397800000000,
        "args": "{\"id\": 28, \"body\": {\"name\": \"Jutsu DevHub Proposal - Milestone 2\", \"summary\": \"This is a continuation of Jutsu proposal for WebIDE for new developer onboarding and hackathon participants. This proposal contain our milestone 1 report and milestone 2 proposal\", \"category\": \"Tooling & Infrastructure\", \"timeline\": {\"status\": \"DRAFT\"}, \"supervisor\": \"frol.near\", \"description\": \"Previous DevHub Proposal: https://near.social/devgovgigs.near/widget/gigs-board.pages.Post?id=2750\\\\\\\\n\\\\\\\\n---\\\\\\\\n## Milestone Report: Q1 (January-March)\\\\\\\\n\\\\\\\\n - [x]  Added IntelliSense (code-completion) support for NEAR Social, BOS Components, Styled and other core libraries.\\\\\\\\n - [x]  Create a keyboard shortcut for searching components (ex: Cmd + S)\\\\\\\\n - [x]  View source when the user clicks \\\\\\\\u{201c}.\\\\\\\\u{201d} in a component inside the Jutsu gateway (Inspire by GitHub)\\\\\\\\n - [ ]  [won\\\\\\\\u{2019}t do] ~~Import and export BOS components for the local development environment~~\\\\\\\\n - [ ]  [In-progress] Import and export BOS components in GitHub\\\\\\\\n - [x]  Collaborative Editing - Real-time collaboration with other developers\\\\\\\\n - [x]  [From Q2] ChatGPT/co-pilote integration inside Jutsu WebIDE\\\\\\\\n - [x]  [From Q4] Generative UI - Create user interface from just prompt\\\\\\\\n\\\\\\\\n## Next Milestone: Q2 (April-June)\\\\\\\\n\\\\\\\\n- [ ]  Work with Pagoda team to integrate Web Engine in Jutsu IDE\\\\\\\\n- [ ]  Import and export BOS components in GitHub\\\\\\\\n- [ ]  Persist the component search query so that when developers switch tabs and come back they get the same search result\\\\\\\\n- [ ]  Upload, use and manage styled files in IPFS from Jutus WebIDE\\\\\\\\n- [ ]  Improve developer onboarding - When creating an account developer will get a small amount ($0.5 N) so that they can deploy a few components for free.\\\\\\\\n- [ ]  Implement \\\\\\\\u{201c}Right-click\\\\\\\\u{201d} and deploy multiple components at once\\\\\\\\n- [ ]  Improve and complete the Pull-Request flow\\\\\\\\n\\\\\\\\n## Ongoing support to Hackbox\\\\\\\\n\\\\\\\\n**Seamless Onboarding for Beginners:**\\\\\\\\n\\\\\\\\n- At the registration stage, Jutsu will provide a simplified NEAR wallet or GitHub account setup process.\\\\\\\\n- Participants will receive pre-filled accounts (small) for deploying components.\\\\\\\\n\\\\\\\\n**Learning resources:**\\\\\\\\n\\\\\\\\n- Getting started with Jutsu and BOS component development\\\\\\\\n- Getting started with Bento for non-techncal people\\\\\\\\n- A tailored beginner toolkit for starting with NEAR development, EVM on NEAR, Keypom/Account Abstraction, BOS development, and other key NEAR technologies.\\\\\\\\n\\\\\\\\n**Ongoing Mentorship and Support During Events:**\\\\\\\\n\\\\\\\\n- Jutsu will actively participate in Hackbox Hackathon meetings and group chats to facilitate team introductions, platform demonstrations, and Q&A sessions. Continuous technical support and mentorship will be provided as it pertains to the use of the Jutsu platform for hackathon participants and organizers within Hackbox.\\\\\\\\n\\\\\\\\n**Post-Event Analysis and Metrics:**\\\\\\\\n\\\\\\\\n- Detailed tracking of active builders per event and cohort and comprehensive metrics related to the building and forking of components, insights into participant engagement and project popularity, etc.\\\\\\\\n\\\\\\\\n**Feature Requests:**\\\\\\\\n\\\\\\\\n- Jutsu will build feature requests that have been requested or approved by Hackbox or Devhub admin  for the purpose of enhancing developer experience\", \"linked_proposals\": [], \"receiver_account\": \"jutsuai.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"37500\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5638645091925e+21
    }
  },
  {
    "id": "3552933458",
    "receipt_id": "7y6DCKrq4MMbR4aMfERVRiZMxpE2SaENb1TcAvDEm8Wu",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9fG2AGwMQUyTVQYzrtoUGVMEcJ43ivxHHRaXLV9iNSi9",
      "block_height": 116076333,
      "block_timestamp": 1712185655064828000
    },
    "receipt_outcome": {
      "gas_burnt": 4792730729713,
      "tokens_burnt": 479273072971300000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "BhbWvpgJGpC8ewCcPVJcZUnsUka9EcyHJFc7BM2ZSZ2M",
    "included_in_block_hash": "Are3hbw9WcCvZocp6wA3MULSQw4BpguLZVTkzt9xB32d",
    "block_timestamp": "1712185652302029632",
    "block": {
      "block_height": 116076331
    },
    "receipt_conversion_tokens_burnt": "243563720823400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 479273072971300000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"jutsuai.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":28,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"jutsuai.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.5638645091925e+21
    }
  },
  {
    "id": "3553019707",
    "receipt_id": "DmRaAmw35KmnphdLsxqjQU9PneCnSmMpMtrM7Wg4BbPY",
    "predecessor_account_id": "jutsuai.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "h62onADcVYrhgtaBD6dQ823mH6bxL2ckzX2RQq3Kku9",
      "block_height": 116076545,
      "block_timestamp": 1712185926835718700
    },
    "receipt_outcome": {
      "gas_burnt": 8975011762432,
      "tokens_burnt": 897501176243200000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "3mbiFZzRhCykk9y8hBN5Wm3xRMLh24dVTKs3g8tEq83p",
    "included_in_block_hash": "J2yyZ2gP3i3vfYJqmYc1XWn45qBGPrnNjmthZAzX2Jnj",
    "block_timestamp": "1712185925590442637",
    "block": {
      "block_height": 116076544
    },
    "receipt_conversion_tokens_burnt": "243713751994800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal",
        "deposit": 0,
        "fee": 897501176243200000000,
        "args": "{\"id\": 28, \"body\": {\"name\": \"Jutsu DevHub Proposal - Milestone 2\", \"summary\": \"This is a continuation of the Jutsu proposal (posted on 19 January 2024) to DevHub for the building of WebIDE features to improve the developer onboarding and overall hackathon experience with Hackbox. This proposal contains our Milestone 1 report, and Milestone 2 proposal.\", \"category\": \"Tooling & Infrastructure\", \"timeline\": {\"status\": \"DRAFT\"}, \"supervisor\": \"frol.near\", \"description\": \"Previous DevHub Proposal (19 January): https://near.social/devgovgigs.near/widget/gigs-board.pages.Post?id=2750\\\\\\\\n\\\\\\\\n---\\\\\\\\n\\\\\\\\n## Milestone 1 Report: Q1 (January-March)\\\\\\\\n\\\\\\\\n- [x]  Added IntelliSense (auto-complete functionality) support for NEAR Social, BOS Components, \\\\\\\\u{2018}styled-components\\\\\\\\u{2019} and other core libraries within the Jutsu WebIDE.\\\\\\\\n- [x]  Created the following keyboard shortcuts:\\\\\\\\n    - [x]  Searching components (Cmd + p).\\\\\\\\n    - [x]  View source code by clicking \\\\\\\\u{201c}.\\\\\\\\u{201d} when a component is open inside the Jutsu gateway (inspired by GitHub).\\\\\\\\n- [x]  **Collaborative Editing:** Option for real-time (google-docs style) group collaboration with other developers.\\\\\\\\n- [x]  **[Completed Early: From Q2 2024 goals]** ChatGPT/Copilot integration inside Jutsu WebIDE.\\\\\\\\n- [x]  **[Completed Early: From Q4 2024 goals]** Generative UI \\\\\\\\u{2013} Create a functional user interface with just a prompt (bento.jutsu.ai).\\\\\\\\n- [x]  **Supported the 4 following Hackbox hackathons:** ETH Denver (NEAR/DEV/TALKS), ETH Oxford, ETH Samba, and ETH Seoul.\\\\\\\\n\\\\\\\\n## Milestone 2 Proposal: Q2 (April-June)\\\\\\\\n\\\\\\\\n- [ ]  Work with Pagoda team to integrate Web Engine in Jutsu WebIDE.\\\\\\\\n- [ ]  Ability to import and export BOS components to GitHub.\\\\\\\\n- [ ]  Persist the component search query so that when developers switch tabs and come back, the previous search result is maintained.\\\\\\\\n- [ ]  Ability to upload, use, and manage \\\\\\\\u{2018}styled-components\\\\\\\\u{2019} files in IPFS from Jutsu WebIDE.\\\\\\\\n- [ ]  **Improve developer onboarding:** When creating a Jutsu account, if the developer does not have a NEAR wallet, Jutsu will take them through a simplified NEAR wallet creation process where they will receive a small amount ($0.X worth of NEAR), so that they can deploy a few components for free.\\\\\\\\n- [ ]  Implement \\\\\\\\u{201c}Right-click\\\\\\\\u{201d} so users can deploy multiple components at one time.\\\\\\\\n- [ ]  Improve and complete the Pull-Request flow.\\\\\\\\n\\\\\\\\n## Ongoing support to Hackbox\\\\\\\\n\\\\\\\\n**Seamless Onboarding for Beginners:**\\\\\\\\n\\\\\\\\n- As listed above, at the registration stage, Jutsu will provide the option for a simplified NEAR wallet creation process and/or GitHub account setup process. Those without NEAR wallets, will receive pre-filled accounts ($0.X worth of NEAR) for deploying components.\\\\\\\\n\\\\\\\\n**Learning resources:**\\\\\\\\n\\\\\\\\n- Getting started with Jutsu and BOS component development.\\\\\\\\n- Getting started with Bento for non-technical people.\\\\\\\\n- A tailored beginner toolkit for starting with NEAR development, EVM on NEAR, Account Abstraction, BOS development, and other key NEAR technologies.\\\\\\\\n\\\\\\\\n**Ongoing Mentorship and Support During Events:**\\\\\\\\n\\\\\\\\n- When requested, Jutsu will actively participate in Hackbox Hackathon meetings and group chats to facilitate team introductions, platform demonstrations, and Q&A sessions as necessary. Continuous technical support and mentorship will be provided as it pertains to the use of the Jutsu platform for hackathon participants and organizers within Hackbox.\\\\\\\\n\\\\\\\\n**Post-Event Analysis and Metrics:**\\\\\\\\n\\\\\\\\n- When requested, detailed tracking of active builders per event and cohort and comprehensive metrics related to the building and forking of components, insights into participant engagement and project popularity, etc.\\\\\\\\n\\\\\\\\n**Feature Requests:**\\\\\\\\n\\\\\\\\n- Jutsu will consider additional feature requests that have been approved by Hackbox or Devhub admin for the purpose of enhancing developer experience (within the scope of this proposal).\", \"linked_proposals\": [], \"receiver_account\": \"jutsuai.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"37500\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6191058056167e+21
    }
  },
  {
    "id": "3553020170",
    "receipt_id": "HEww3xSEPSZhWXDDBqVF9MMeMot6PiT91xXJhX3yuRe7",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9zFJ23yEYQH3XQgR4yXyx4FwDw2w2j1jR1KMgYt1wuCh",
      "block_height": 116076546,
      "block_timestamp": 1712185928107803400
    },
    "receipt_outcome": {
      "gas_burnt": 4778908773787,
      "tokens_burnt": 477890877378700000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "3mbiFZzRhCykk9y8hBN5Wm3xRMLh24dVTKs3g8tEq83p",
    "included_in_block_hash": "J2yyZ2gP3i3vfYJqmYc1XWn45qBGPrnNjmthZAzX2Jnj",
    "block_timestamp": "1712185925590442637",
    "block": {
      "block_height": 116076544
    },
    "receipt_conversion_tokens_burnt": "243713751994800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 477890877378700000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"jutsuai.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":28,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"jutsuai.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.6191058056167e+21
    }
  },
  {
    "id": "3553050880",
    "receipt_id": "3XViL5BLV3WkPAt2ZWHWYErSyAkPdY9kEAuvM9fsjH2R",
    "predecessor_account_id": "jutsuai.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9shzRjRix97evLwTvHGpAXjUvwx8vxD7P5iLdqzfF78N",
      "block_height": 116076620,
      "block_timestamp": 1712186022929927000
    },
    "receipt_outcome": {
      "gas_burnt": 9802470687090,
      "tokens_burnt": 980247068709000000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "Goeo7BpvEhRo1gKVs8JESGn52RSnLYPbzdQVHi9X6fWd",
    "included_in_block_hash": "Gnj6ercaja3NK9uNyTgzyciGk693r9zVDxz6AmkeZteM",
    "block_timestamp": "1712186021611574744",
    "block": {
      "block_height": 116076619
    },
    "receipt_conversion_tokens_burnt": "242822061515600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 980247068709000000000,
        "args": "{\"id\": 28, \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7064887899737e+21
    }
  },
  {
    "id": "3553051394",
    "receipt_id": "2SuXkoPACcpFj6fDiVo9dVYWVicrJ4kFsnEq5S9sXB5J",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "H6Sb5wJuxgiGbEfqidu4H1MrBroDLgh7QusELYGKDT29",
      "block_height": 116076621,
      "block_timestamp": 1712186024232695800
    },
    "receipt_outcome": {
      "gas_burnt": 4834196597491,
      "tokens_burnt": 483419659749100000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "Goeo7BpvEhRo1gKVs8JESGn52RSnLYPbzdQVHi9X6fWd",
    "included_in_block_hash": "Gnj6ercaja3NK9uNyTgzyciGk693r9zVDxz6AmkeZteM",
    "block_timestamp": "1712186021611574744",
    "block": {
      "block_height": 116076619
    },
    "receipt_conversion_tokens_burnt": "242822061515600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 483419659749100000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"jutsuai.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":28,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"jutsuai.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.7064887899737e+21
    }
  },
  {
    "id": "3566895900",
    "receipt_id": "AQ9i7EcjLRE6q6GvY2G5aVaoGc13YZDQFFbadEuVftbH",
    "predecessor_account_id": "madlime.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "DLkwDZDpVyJnqD9xgaXZrmMzbkt4yyXUgFBGuFMByvf1",
      "block_height": 116102834,
      "block_timestamp": 1712220083471594500
    },
    "receipt_outcome": {
      "gas_burnt": 15680485359102,
      "tokens_burnt": 1.5680485359102e+21,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "41Le3CYqNLfTWxZo55p59ask1ygkPsttNQ8rAtMqdpiG",
    "included_in_block_hash": "CfbRhqZC7VWRaR6KUbNfMBSfzKySzj2yD2fdHV2Zh4GL",
    "block_timestamp": "1712220082202920084",
    "block": {
      "block_height": 116102833
    },
    "receipt_conversion_tokens_burnt": "242822061515600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "edit_proposal_timeline",
        "deposit": 0,
        "fee": 1.5680485359102e+21,
        "args": "{\"id\": 33, \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.2887614748045e+21
    }
  },
  {
    "id": "3566896450",
    "receipt_id": "FtpSoZD9Q2ZxrgsBmknpBEc444yHDHNc5S6xL97Lr6f1",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7FmFxmecFbT58VcysPm98AryEfEkXVnQserHDqG3oMdZ",
      "block_height": 116102835,
      "block_timestamp": 1712220084716382500
    },
    "receipt_outcome": {
      "gas_burnt": 4778908773787,
      "tokens_burnt": 477890877378700000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "41Le3CYqNLfTWxZo55p59ask1ygkPsttNQ8rAtMqdpiG",
    "included_in_block_hash": "CfbRhqZC7VWRaR6KUbNfMBSfzKySzj2yD2fdHV2Zh4GL",
    "block_timestamp": "1712220082202920084",
    "block": {
      "block_height": 116102833
    },
    "receipt_conversion_tokens_burnt": "242822061515600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 477890877378700000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"madlime.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/edit\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":33,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"madlime.near\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.2887614748045e+21
    }
  }
]