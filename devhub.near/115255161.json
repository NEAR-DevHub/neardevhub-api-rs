[
  {
    "id": "3218020965",
    "receipt_id": "6hFEBwMNhggFsUjqMo1g9uewoDku4idM7QtHHdDXtUUr",
    "predecessor_account_id": "bpolania.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "4aSTsoZusAmeUYUAfnWT3VEKQfBba9q3KaYtd7KH38mw",
      "block_height": 115256222,
      "block_timestamp": 1711143983545804800
    },
    "receipt_outcome": {
      "gas_burnt": 2797672684269,
      "tokens_burnt": 279767268426900000000,
      "executor_account_id": "devhub.near",
      "status": false
    },
    "transaction_hash": "HB54ZpX2J82jyxXpjKLZ2TPinXC4hTgw2ajKZx846Qdz",
    "included_in_block_hash": "BPo67Hi51aL9dka1NNNU7df154e24wRK1o9CW6SAGRuY",
    "block_timestamp": "1711143982481941284",
    "block": {
      "block_height": 115256221
    },
    "receipt_conversion_tokens_burnt": "242975222994600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_proposal",
        "deposit": 0,
        "fee": 279767268426900000000,
        "args": "{\"body\": {\"name\": \"Expenses DevHub DevRel Events / March 2024\", \"summary\": \"Travel Expenses for ETHDenver & ETHGlobal London \", \"category\": \"Events & Hackathons\", \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"supervisor\": \"yarotska.near\", \"description\": \"Number of Days: 17 days\\\\\\\\nNumber of Events; 2\\\\\\\\nCosts Covered: Hotels, Transportation, Plane Tickets and Food\\\\\\\\n\\\\\\\\nETHDenver (Feb 22 - March 04): $1,661.56\\\\\\\\nETHGlobal London (March 11 - 18): $3,668.35\\\\\\\\n\\\\\\\\nTotal: $5,329.91\\\\\\\\n\\\\\\\\nAll invoices have been made available to NEAR Foundation.\", \"linked_proposals\": [], \"receiver_account\": \"bpolania.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": 5330, \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": false
    },
    "outcomes_agg": {
      "transaction_fee": 522742491421500000000
    }
  },
  {
    "id": "3218082228",
    "receipt_id": "Bdq7w9FhTQXVVdpapRCy53fQ9kNUH1pcyzttmWqQM4eT",
    "predecessor_account_id": "bpolania.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "AxfgzC3YD7MBCGeLRp71cL8mYcrpHkqUbVzErnpvDRDu",
      "block_height": 115256610,
      "block_timestamp": 1711144395452717800
    },
    "receipt_outcome": {
      "gas_burnt": 2792843786965,
      "tokens_burnt": 279284378696500000000,
      "executor_account_id": "devhub.near",
      "status": false
    },
    "transaction_hash": "49xdnmeSiznSjGx3aYBZdBpdGuhfhBHuM5gx6KGFKCuD",
    "included_in_block_hash": "D9ghgaxno4vxcrU1YxkrvworW5UD3gzoNfQ3scFXx3em",
    "block_timestamp": "1711144394195060575",
    "block": {
      "block_height": 115256609
    },
    "receipt_conversion_tokens_burnt": "242958006302800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_proposal",
        "deposit": 0,
        "fee": 279284378696500000000,
        "args": "{\"body\": {\"name\": \"Expenses for DevRel Events March 2024\", \"summary\": \"These are the expenses for ETHDenver and ETHGlobal London\", \"category\": \"Events & Hackathons\", \"timeline\": {\"status\": \"DRAFT\"}, \"supervisor\": \"yarotska.near\", \"description\": \"Number of Days: 17 days\\\\\\\\nNumber of Events; 2\\\\\\\\nCosts Covered: Hotels, Transportation, Plane Tickets and Food\\\\\\\\n\\\\\\\\nETHDenver (Feb 22 - March 04): $1661.56\\\\\\\\nUC Santa Barbara (Jan 17): $3668.435\\\\\\\\n\\\\\\\\n\\\\\\\\nTotal: $5329.91\\\\\\\\n\\\\\\\\nAll invoices have been made available to NEAR Foundation.\", \"linked_proposals\": [], \"receiver_account\": \"bpolania.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": 5330, \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": false
    },
    "outcomes_agg": {
      "transaction_fee": 522242384999300000000
    }
  },
  {
    "id": "3218188736",
    "receipt_id": "E45cxZnJNgQoQe4rH8MdAMytTL1WiwdBvFGmkWraAkQt",
    "predecessor_account_id": "bpolania.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "CiBWJnXmczWLWA9FRxifTU8H5cyH9B5WyXm4NPAWd2bN",
      "block_height": 115256817,
      "block_timestamp": 1711144614719211500
    },
    "receipt_outcome": {
      "gas_burnt": 2798031405885,
      "tokens_burnt": 279803140588500000000,
      "executor_account_id": "devhub.near",
      "status": false
    },
    "transaction_hash": "GjR2tLBS2fC6GTaBhKY1x32Nnv7WpNa75vAjPeGGLSL",
    "included_in_block_hash": "jhDzhWa3HgT7XCULM8vazDYNxWMBs8ZE4NkgfebiK7B",
    "block_timestamp": "1711144613524402610",
    "block": {
      "block_height": 115256816
    },
    "receipt_conversion_tokens_burnt": "242975222994600000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_proposal",
        "deposit": 0,
        "fee": 279803140588500000000,
        "args": "{\"body\": {\"name\": \"Expenses for DevRel Events March 2024\", \"summary\": \"These are the expenses for ETHDenver and ETHGlobal London\", \"category\": \"Events & Hackathons\", \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"supervisor\": \"yarotska.near\", \"description\": \"Number of Days: 17 days\\\\\\\\nNumber of Events; 2\\\\\\\\nCosts Covered: Hotels, Transportation, Plane Tickets and Food\\\\\\\\n\\\\\\\\nETHDenver (Feb 22 - March 04): $1661.56\\\\\\\\nUC Santa Barbara (Jan 17): $3668.435\\\\\\\\n\\\\\\\\n\\\\\\\\nTotal: $5329.91\\\\\\\\n\\\\\\\\nAll invoices have been made available to NEAR Foundation.\\\\\\\\n\\\\\\\\n\", \"linked_proposals\": [], \"receiver_account\": \"bpolania.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": 5330, \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": false
    },
    "outcomes_agg": {
      "transaction_fee": 522778363583100000000
    }
  },
  {
    "id": "3218439251",
    "receipt_id": "3hXW6tewaLxgM6guibfhtdcwz4c1ss5DZPoDrgeDZqLa",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "BafCFfr8Za3o7fJhtZL6dJakfRWZeGQx6BWZy3EsvdEQ",
      "block_height": 115257809,
      "block_timestamp": 1711145723937540400
    },
    "receipt_outcome": {
      "gas_burnt": 12172424204278,
      "tokens_burnt": 1.2172424204278e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "61LtXKnsU87xoXRJ3oi9A1f3EtdAyhWQb689iSFcuGfJ",
    "included_in_block_hash": "GxWJgspL822vrFszL16DjJoutT9qSEQdBNViMxZzK4Ng",
    "block_timestamp": "1711145722832172050",
    "block": {
      "block_height": 115257808
    },
    "receipt_conversion_tokens_burnt": "248411449328800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.2172424204278e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.entity.proposal.StatusTag\": {\"\": \"const timelineStatus = props.timelineStatus;\\\\\\\\nconst size = props.size ?? \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst getClassNameByStatus = () => {\\\\\\\\n  switch (timelineStatus) {\\\\\\\\n    case \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"blue\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"orange\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"warning\\\\\\\\\\\\\\\";\\\\\\\\n    default:\\\\\\\\n      return \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  font-size: ${({ size }) => {\\\\\\\\n    switch (size) {\\\\\\\\n      case \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\":\\\\\\\\n        return \\\\\\\\\\\\\\\"10px\\\\\\\\\\\\\\\";\\\\\\\\n      case \\\\\\\\\\\\\\\"lg\\\\\\\\\\\\\\\":\\\\\\\\n        return \\\\\\\\\\\\\\\"14px\\\\\\\\\\\\\\\";\\\\\\\\n      default:\\\\\\\\n        return \\\\\\\\\\\\\\\"12px\\\\\\\\\\\\\\\";\\\\\\\\n    }\\\\\\\\n  }};\\\\\\\\n\\\\\\\\n  .orange-tag {\\\\\\\\n    border: 1px solid #ff7a00 !important;\\\\\\\\n    color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .warning-tag {\\\\\\\\n    border: 1px solid #f40303 !important;\\\\\\\\n    color: #f40303 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-tag {\\\\\\\\n    border: 1px solid #2c3e50 !important;\\\\\\\\n    color: #2c3e50 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-tag {\\\\\\\\n    border: 1px solid #979797 !important;\\\\\\\\n    color: #979797 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-tag {\\\\\\\\n    border: 1px solid #04a46e !important;\\\\\\\\n    color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container size={size}>\\\\\\\\n    <div className={getClassNameByStatus() + \\\\\\\\\\\\\\\"-tag fw-bold rounded-2 p-1 px-2\\\\\\\\\\\\\\\"}>\\\\\\\\n      {(timelineStatus ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.CommentsAndLogs\": {\"\": \"const snapshotHistory = props.snapshotHistory;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  .log-line {\\\\\\\\n    position: absolute;\\\\\\\\n    left: 7%;\\\\\\\\n    top: -30px;\\\\\\\\n    bottom: 0;\\\\\\\\n    z-index: 1;\\\\\\\\n    width: 1px;\\\\\\\\n    background-color: var(--bs-border-color);\\\\\\\\n    z-index: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .inline-flex {\\\\\\\\n    display: inline-flex !important;\\\\\\\\n    align-items: center !important;\\\\\\\\n    gap: 0.25rem !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommentContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// check snapshot history all keys and values for differences\\\\\\\\nfunction getDifferentKeysWithValues(obj1, obj2) {\\\\\\\\n  return Object.keys(obj1)\\\\\\\\n    .filter((key) => {\\\\\\\\n      if (key !== \\\\\\\\\\\\\\\"editor_id\\\\\\\\\\\\\\\" && obj2.hasOwnProperty(key)) {\\\\\\\\n        const value1 = obj1[key];\\\\\\\\n        const value2 = obj2[key];\\\\\\\\n\\\\\\\\n        if (typeof value1 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" && typeof value2 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else if (Array.isArray(value1) && Array.isArray(value2)) {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else {\\\\\\\\n          return value1 !== value2;\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      return false;\\\\\\\\n    })\\\\\\\\n    .map((key) => ({\\\\\\\\n      key,\\\\\\\\n      originalValue: obj1[key],\\\\\\\\n      modifiedValue: obj2[key],\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  data: null,\\\\\\\\n  socialComments: null,\\\\\\\\n  changedKeysListWithValues: null,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction sortTimelineAndComments() {\\\\\\\\n  const comments = Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", props.item);\\\\\\\\n\\\\\\\\n  if (state.changedKeysListWithValues === null) {\\\\\\\\n    const changedKeysListWithValues = snapshotHistory\\\\\\\\n      .slice(1)\\\\\\\\n      .map((item, index) => {\\\\\\\\n        const startingPoint = snapshotHistory[index]; // Set comparison to the previous item\\\\\\\\n        return {\\\\\\\\n          editorId: item.editor_id,\\\\\\\\n          ...getDifferentKeysWithValues(startingPoint, item),\\\\\\\\n        };\\\\\\\\n      });\\\\\\\\n    State.update({ changedKeysListWithValues });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort comments and timeline logs by time\\\\\\\\n  const snapShotTimeStamp = Array.isArray(snapshotHistory)\\\\\\\\n    ? snapshotHistory.map((i) => {\\\\\\\\n        return { blockHeight: null, timestamp: parseFloat(i.timestamp / 1e6) };\\\\\\\\n      })\\\\\\\\n    : [];\\\\\\\\n\\\\\\\\n  const commentsTimeStampPromise = Array.isArray(comments)\\\\\\\\n    ? Promise.all(\\\\\\\\n        comments.map((item) => {\\\\\\\\n          return asyncFetch(\\\\\\\\n            `https://api.near.social/time?blockHeight=${item.blockHeight}`\\\\\\\\n          ).then((res) => {\\\\\\\\n            const timeMs = parseFloat(res.body);\\\\\\\\n            return {\\\\\\\\n              blockHeight: item.blockHeight,\\\\\\\\n              timestamp: timeMs,\\\\\\\\n            };\\\\\\\\n          });\\\\\\\\n        })\\\\\\\\n      ).then((res) => res)\\\\\\\\n    : Promise.resolve([]);\\\\\\\\n\\\\\\\\n  commentsTimeStampPromise.then((commentsTimeStamp) => {\\\\\\\\n    const combinedArray = [...snapShotTimeStamp, ...commentsTimeStamp];\\\\\\\\n    combinedArray.sort((a, b) => a.timestamp - b.timestamp);\\\\\\\\n    State.update({ data: combinedArray, socialComments: comments });\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nsortTimelineAndComments();\\\\\\\\nconst Comment = ({ commentItem }) => {\\\\\\\\n  const { accountId, blockHeight } = commentItem;\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n    blockHeight,\\\\\\\\n  };\\\\\\\\n  const content = JSON.parse(Social.get(item.path, blockHeight) ?? \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  const link = `https://near.org/mob.near/widget/MainPage.N.Comment.Page?accountId=${accountId}&blockHeight=${blockHeight}`;\\\\\\\\n  return (\\\\\\\\n    <div style={{ zIndex: 9999, background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              accountId: accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <CommentContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n          <Header className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <span className=\\\\\\\\\\\\\\\"fw-bold text-black\\\\\\\\\\\\\\\">{accountId}</span> commented\\\\\\\\n              \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  blockHeight: blockHeight,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/Posts.Menu\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: accountId,\\\\\\\\n                    blockHeight: blockHeight,\\\\\\\\n                    contentPath: `/post/comment`,\\\\\\\\n                    contentType: \\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </Header>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                text: content.text,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/v1.LikeButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/CopyUrlButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  url: link,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </CommentContainer>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction capitalizeFirstLetter(string) {\\\\\\\\n  const updated = string.replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n  return updated.charAt(0).toUpperCase() + updated.slice(1).toLowerCase();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction parseTimelineKeyAndValue(timeline, originalValue, modifiedValue) {\\\\\\\\n  const oldValue = originalValue[timeline];\\\\\\\\n  const newValue = modifiedValue[timeline];\\\\\\\\n  switch (timeline) {\\\\\\\\n    case \\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        oldValue !== newValue && (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved proposal from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: oldValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            stage\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"sponsor_requested_review\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed review</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"reviewer_completed_attestation\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed attestation</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"kyc_verified\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>verified KYC/KYB</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"test_transaction_sent\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        !oldValue &&\\\\\\\\n        newValue && (\\\\\\\\n          <span>\\\\\\\\n            confirmed sponsorship and shared funding steps with recipient\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n    // we don\\\\\\\\\\\\'t have this step for now\\\\\\\\n    // case \\\\\\\\\\\\\\\"request_for_trustees_created\\\\\\\\\\\\\\\":\\\\\\\\n    //   return !oldValue && newValue && <span>successfully created request for trustees</span>;\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccountProfile = ({ accountId }) => {\\\\\\\\n  return (\\\\\\\\n    <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          accountId: accountId,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      {accountId}\\\\\\\\n    </span>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst parseProposalKeyAndValue = (key, modifiedValue, originalValue) => {\\\\\\\\n  switch (key) {\\\\\\\\n    case \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed title</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"summary\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed {key}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed category from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>updated linked proposals</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_usd_amount\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship amount from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_paid_in_currency\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship currency from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"receiver_account\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed receiver account from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"supervisor\\\\\\\\\\\\\\\":\\\\\\\\n      return !originalValue && modifiedValue ? (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          added\\\\\\\\n          <AccountProfile accountId={modifiedValue} />\\\\\\\\n          as supervisor\\\\\\\\n        </span>\\\\\\\\n      ) : (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed receiver account from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsor\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed sponsor from <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\": {\\\\\\\\n      const modifiedKeys = Object.keys(modifiedValue);\\\\\\\\n      const originalKeys = Object.keys(originalValue);\\\\\\\\n      return modifiedKeys.map((i, index) => {\\\\\\\\n        const text = parseTimelineKeyAndValue(i, originalValue, modifiedValue);\\\\\\\\n        return (\\\\\\\\n          text && (\\\\\\\\n            <span key={index} className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              {text}\\\\\\\\n              {text &&\\\\\\\\n                originalKeys.length > 1 &&\\\\\\\\n                index < modifiedKeys.length - 1 &&\\\\\\\\n                \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LogIconContainer = styled.div`\\\\\\\\n  margin-left: 50px;\\\\\\\\n  z-index: 99;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin-left: 10px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Log = ({ timestamp }) => {\\\\\\\\n  const updatedData = useMemo(\\\\\\\\n    () =>\\\\\\\\n      state.changedKeysListWithValues.find((obj) =>\\\\\\\\n        Object.values(obj).some(\\\\\\\\n          (value) =>\\\\\\\\n            value && parseFloat(value.modifiedValue / 1e6) === timestamp\\\\\\\\n        )\\\\\\\\n      ),\\\\\\\\n    [state.changedKeysListWithValues, timestamp]\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const editorId = updatedData.editorId;\\\\\\\\n  const valuesArray = Object.values(updatedData ?? {});\\\\\\\\n  // if valuesArray length is 2 that means it only has timestamp and editorId\\\\\\\\n  if (!updatedData || valuesArray.length === 2) {\\\\\\\\n    return <></>;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return valuesArray.map((i, index) => {\\\\\\\\n    if (i.key && i.key !== \\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\\") {\\\\\\\\n      return (\\\\\\\\n        <LogIconContainer\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          key={index}\\\\\\\\n        >\\\\\\\\n          <img\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiffqrxdi4xqu7erf46gdlwuodt6dm6rji2jtixs3iionjvga6rhdi\\\\\\\\\\\\\\\"\\\\\\\\n            height={30}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            style={{\\\\\\\\n              display:\\\\\\\\n                i.key === \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" &&\\\\\\\\n                Object.keys(i.originalValue ?? {}).length > 1\\\\\\\\n                  ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  : \\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\",\\\\\\\\n            }}\\\\\\\\n            className=\\\\\\\\\\\\\\\"flex-1 gap-1 w-100 text-wrap text-muted align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  accountId: editorId,\\\\\\\\n                  size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              {editorId}\\\\\\\\n            </span>\\\\\\\\n            {parseProposalKeyAndValue(i.key, i.modifiedValue, i.originalValue)}\\\\\\\\n            on\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                blockTimestamp: timestamp * 1000000,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </LogIconContainer>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (Array.isArray(state.data)) {\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"log-line\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ height: state.data.length > 4 ? \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"150%\\\\\\\\\\\\\\\" }}\\\\\\\\n      ></div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n        {state.data.map((i, index) => {\\\\\\\\n          if (i.blockHeight) {\\\\\\\\n            const item = state.socialComments.find(\\\\\\\\n              (t) => t.blockHeight === i.blockHeight\\\\\\\\n            );\\\\\\\\n            return <Comment commentItem={item} />;\\\\\\\\n          } else {\\\\\\\\n            return <Log timestamp={i.timestamp} key={index} />;\\\\\\\\n          }\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\"}, \"devhub.components.organism.Configurator\": {\"\": \"const Struct = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.struct\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!Struct) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst useForm = ({ initialValues, onUpdate, stateKey }) => {\\\\\\\\n  const initialFormState = {\\\\\\\\n    hasUnsubmittedChanges: false,\\\\\\\\n    values: initialValues ?? {},\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const formState = state[stateKey] ?? null;\\\\\\\\n\\\\\\\\n  const formReset = () =>\\\\\\\\n    State.update((lastKnownComponentState) => ({\\\\\\\\n      ...lastKnownComponentState,\\\\\\\\n      [stateKey]: initialFormState,\\\\\\\\n      hasUnsubmittedChanges: false,\\\\\\\\n    }));\\\\\\\\n\\\\\\\\n  const formUpdate =\\\\\\\\n    ({ path, via: customFieldUpdate, ...params }) =>\\\\\\\\n    (fieldInput) => {\\\\\\\\n      const transformFn = (node) => {\\\\\\\\n        if (typeof customFieldUpdate === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\") {\\\\\\\\n          return customFieldUpdate({\\\\\\\\n            input: fieldInput?.target?.value ?? fieldInput,\\\\\\\\n            lastKnownValue: node,\\\\\\\\n            params,\\\\\\\\n          });\\\\\\\\n        } else {\\\\\\\\n          return Struct.defaultFieldUpdate({\\\\\\\\n            input: fieldInput?.target?.value ?? fieldInput,\\\\\\\\n            lastKnownValue: node,\\\\\\\\n            params,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n      };\\\\\\\\n      const updatedValues = Struct.deepFieldUpdate(\\\\\\\\n        formState?.values ?? {},\\\\\\\\n        path,\\\\\\\\n        (node) => transformFn(node)\\\\\\\\n      );\\\\\\\\n      State.update((lastKnownComponentState) => ({\\\\\\\\n        ...lastKnownComponentState,\\\\\\\\n        [stateKey]: {\\\\\\\\n          hasUnsubmittedChanges: !Struct.isEqual(\\\\\\\\n            updatedValues,\\\\\\\\n            initialFormState.values\\\\\\\\n          ),\\\\\\\\n          values: updatedValues,\\\\\\\\n        },\\\\\\\\n      }));\\\\\\\\n\\\\\\\\n      if (typeof onUpdate === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\") {\\\\\\\\n        onUpdate(updatedValues);\\\\\\\\n      }\\\\\\\\n    };\\\\\\\\n\\\\\\\\n  return {\\\\\\\\n    hasUnsubmittedChanges: formState?.hasUnsubmittedChanges ?? false,\\\\\\\\n    values: {\\\\\\\\n      ...(initialValues ?? {}),\\\\\\\\n      ...(formState?.values ?? {}),\\\\\\\\n    },\\\\\\\\n    reset: formReset,\\\\\\\\n    stateKey,\\\\\\\\n    update: formUpdate,\\\\\\\\n  };\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst ValueView = styled.div`\\\\\\\\n  & > p {\\\\\\\\n    margin: 0;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst fieldParamsByType = {\\\\\\\\n  array: {\\\\\\\\n    name: \\\\\\\\\\\\\\\"components.molecule.Input\\\\\\\\\\\\\\\",\\\\\\\\n    inputProps: { type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\" },\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  boolean: {\\\\\\\\n    name: \\\\\\\\\\\\\\\"components.atom.Toggle\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n\\\\\\\\n  string: {\\\\\\\\n    name: \\\\\\\\\\\\\\\"components.molecule.Input\\\\\\\\\\\\\\\",\\\\\\\\n    inputProps: { type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\" },\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst defaultFieldsRender = ({ schema, form, isEditable }) => (\\\\\\\\n  <>\\\\\\\\n    {Object.entries(schema).map(\\\\\\\\n      (\\\\\\\\n        [key, { format, inputProps, noop, label, order, style, ...fieldProps }],\\\\\\\\n        idx\\\\\\\\n      ) => {\\\\\\\\n        const fieldKey = `${idx}-${key}`,\\\\\\\\n          fieldValue = form.values[key];\\\\\\\\n\\\\\\\\n        const fieldType = Array.isArray(fieldValue)\\\\\\\\n          ? \\\\\\\\\\\\\\\"array\\\\\\\\\\\\\\\"\\\\\\\\n          : typeof (fieldValue ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        const isDisabled = noop ?? inputProps.disabled ?? false;\\\\\\\\n\\\\\\\\n        const viewClassName = [\\\\\\\\n          (fieldValue?.length ?? 0) > 0 ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\",\\\\\\\\n          \\\\\\\\\\\\\\\"m-0\\\\\\\\\\\\\\\",\\\\\\\\n        ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n        return (\\\\\\\\n          <>\\\\\\\\n            <div\\\\\\\\n              className={[\\\\\\\\n                \\\\\\\\\\\\\\\"d-flex gap-3\\\\\\\\\\\\\\\",\\\\\\\\n                isEditable || noop ? \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n              ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n              key={fieldKey}\\\\\\\\n              style={{ order }}\\\\\\\\n            >\\\\\\\\n              <label className=\\\\\\\\\\\\\\\"fw-bold w-25\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n\\\\\\\\n              <ValueView className={[viewClassName, \\\\\\\\\\\\\\\"w-75\\\\\\\\\\\\\\\"].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}>\\\\\\\\n                {format !== \\\\\\\\\\\\\\\"markdown\\\\\\\\\\\\\\\" ? (\\\\\\\\n                  <span>\\\\\\\\n                    {(fieldType === \\\\\\\\\\\\\\\"array\\\\\\\\\\\\\\\" && format === \\\\\\\\\\\\\\\"comma-separated\\\\\\\\\\\\\\\"\\\\\\\\n                      ? fieldValue\\\\\\\\n                          .filter((string) => string.length > 0)\\\\\\\\n                          .join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")\\\\\\\\n                      : fieldValue\\\\\\\\n                    )?.toString?.() || \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"}\\\\\\\\n                  </span>\\\\\\\\n                ) : (fieldValue?.length ?? 0) > 0 ? (\\\\\\\\n                  <Widget\\\\\\\\n                    src={\\\\\\\\n                      \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n                    }\\\\\\\\n                    props={{\\\\\\\\n                      text: fieldValue,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                ) : (\\\\\\\\n                  <span>none</span>\\\\\\\\n                )}\\\\\\\\n              </ValueView>\\\\\\\\n            </div>\\\\\\\\n            <Widget\\\\\\\\n              src={`devhub.near/widget/devhub.${\\\\\\\\n                (fieldParamsByType[fieldType] ?? fieldParamsByType[\\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\"])\\\\\\\\n                  .name\\\\\\\\n              }`}\\\\\\\\n              props={{\\\\\\\\n                ...fieldProps,\\\\\\\\n                className: [\\\\\\\\n                  \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\",\\\\\\\\n                  fieldProps.className ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                  isEditable && !noop ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\",\\\\\\\\n                ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"),\\\\\\\\n\\\\\\\\n                disabled: isDisabled,\\\\\\\\n                format,\\\\\\\\n                key: `${fieldKey}--editable`,\\\\\\\\n                label,\\\\\\\\n                onChange: form.update({ path: [key] }),\\\\\\\\n                style: { ...style, order },\\\\\\\\n\\\\\\\\n                value:\\\\\\\\n                  fieldType === \\\\\\\\\\\\\\\"array\\\\\\\\\\\\\\\" && format === \\\\\\\\\\\\\\\"comma-separated\\\\\\\\\\\\\\\"\\\\\\\\n                    ? fieldValue.join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\")\\\\\\\\n                    : fieldValue,\\\\\\\\n\\\\\\\\n                inputProps: {\\\\\\\\n                  ...(inputProps ?? {}),\\\\\\\\n                  disabled: isDisabled,\\\\\\\\n\\\\\\\\n                  title:\\\\\\\\n                    noop ?? false\\\\\\\\n                      ? \\\\\\\\\\\\\\\"Temporarily disabled due to technical reasons.\\\\\\\\\\\\\\\"\\\\\\\\n                      : inputProps.title,\\\\\\\\n\\\\\\\\n                  ...(fieldParamsByType[fieldType].inputProps ?? {}),\\\\\\\\n                  tabIndex: order,\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </>\\\\\\\\n        );\\\\\\\\n      }\\\\\\\\n    )}\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst Configurator = ({\\\\\\\\n  actionsAdditional,\\\\\\\\n  cancelLabel,\\\\\\\\n  classNames,\\\\\\\\n  externalState,\\\\\\\\n  fieldsRender: customFieldsRender,\\\\\\\\n  formatter: toFormatted,\\\\\\\\n  isValid,\\\\\\\\n  isActive,\\\\\\\\n  onCancel,\\\\\\\\n  onChange,\\\\\\\\n  onSubmit,\\\\\\\\n  schema,\\\\\\\\n  submitIcon,\\\\\\\\n  submitLabel,\\\\\\\\n  hideSubmitBtn,\\\\\\\\n}) => {\\\\\\\\n  const fieldsRender = customFieldsRender || defaultFieldsRender;\\\\\\\\n\\\\\\\\n  const initialValues = Struct.typeMatch(schema)\\\\\\\\n    ? Struct.pick(externalState ?? {}, Object.keys(schema))\\\\\\\\n    : {};\\\\\\\\n\\\\\\\\n  const form = useForm({ initialValues, onUpdate: onChange, stateKey: \\\\\\\\\\\\\\\"form\\\\\\\\\\\\\\\" });\\\\\\\\n\\\\\\\\n  const formFormattedValues = toFormatted\\\\\\\\n    ? toFormatted(form.values)\\\\\\\\n    : form.values;\\\\\\\\n\\\\\\\\n  const internalValidation = () =>\\\\\\\\n    Object.keys(schema).every((key) => {\\\\\\\\n      const fieldDefinition = schema[key];\\\\\\\\n      const value = form.values[key];\\\\\\\\n      if (!value || value.length === 0) {\\\\\\\\n        return !fieldDefinition.inputProps.required;\\\\\\\\n      } else if (\\\\\\\\n        fieldDefinition.inputProps.min &&\\\\\\\\n        fieldDefinition.inputProps.min > value?.length\\\\\\\\n      ) {\\\\\\\\n        return false;\\\\\\\\n      } else if (\\\\\\\\n        fieldDefinition.inputProps.max &&\\\\\\\\n        fieldDefinition.inputProps.max < value?.length\\\\\\\\n      ) {\\\\\\\\n        return false;\\\\\\\\n      } else if (\\\\\\\\n        fieldDefinition.inputProps.allowCommaAndSpace === false &&\\\\\\\\n        /^[^,\\\\\\\\\\\\\\\\s]*$/.test(value) === false\\\\\\\\n      ) {\\\\\\\\n        return false;\\\\\\\\n      } else if (\\\\\\\\n        fieldDefinition.inputProps.validUrl === true &&\\\\\\\\n        /^(www\\\\\\\\\\\\\\\\.)?[-a-zA-Z0-9@:%._\\\\\\\\\\\\\\\\+~#=]{2,256}\\\\\\\\\\\\\\\\.[a-z]{2,6}\\\\\\\\\\\\\\\\b([-a-zA-Z0-9@:%_\\\\\\\\\\\\\\\\+.~#?&//=]*)$/.test(\\\\\\\\n          value\\\\\\\\n        ) === false\\\\\\\\n      ) {\\\\\\\\n        return false;\\\\\\\\n      }\\\\\\\\n      return true;\\\\\\\\n    });\\\\\\\\n\\\\\\\\n  const isFormValid = () => {\\\\\\\\n    return internalValidation() && (!isValid || isValid(formFormattedValues));\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const onCancelClick = () => {\\\\\\\\n    form.reset();\\\\\\\\n    if (onCancel) onCancel();\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const onSubmitClick = () => {\\\\\\\\n    if (onSubmit && isFormValid()) {\\\\\\\\n      onSubmit(formFormattedValues);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"flex-grow-1 d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n      <div className={`d-flex flex-column gap-${isActive ? 1 : 4}`}>\\\\\\\\n        {fieldsRender({\\\\\\\\n          form,\\\\\\\\n          isEditable: isActive,\\\\\\\\n          schema,\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n      {isActive && !hideSubmitBtn && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-end gap-3 mt-auto\\\\\\\\\\\\\\\">\\\\\\\\n          {actionsAdditional ? (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"me-auto\\\\\\\\\\\\\\\">{actionsAdditional}</div>\\\\\\\\n          ) : null}\\\\\\\\n\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0\\\\\\\\\\\\\\\" },\\\\\\\\n              label: cancelLabel || \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onCancelClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: classNames.submit || \\\\\\\\\\\\\\\"btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n              disabled: !form.hasUnsubmittedChanges || !isFormValid(),\\\\\\\\n              icon: submitIcon || {\\\\\\\\n                type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\",\\\\\\\\n                variant: \\\\\\\\\\\\\\\"bi-check-circle-fill\\\\\\\\\\\\\\\",\\\\\\\\n              },\\\\\\\\n              label: submitLabel || \\\\\\\\\\\\\\\"Submit\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onSubmitClick,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn Configurator(props);\\\\\\\\n\"}, \"devhub.feature.proposal-search.by-input\": {\"\": \"const InputContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  position: relative;\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst [search, setSearch] = useState(props.search);\\\\\\\\nconst onSearch = props.onSearch ?? (() => {});\\\\\\\\nconst onEnter = props.onEnter ?? (() => {});\\\\\\\\n\\\\\\\\nconst updateInput = (value) => setSearch(value);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (search !== props.search) {\\\\\\\\n    onSearch(search);\\\\\\\\n  }\\\\\\\\n}, [search]);\\\\\\\\n\\\\\\\\nconst className = props.className ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Widget\\\\\\\\n    src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n    props={{\\\\\\\\n      className: \\\\\\\\\\\\\\\"flex-grow-1 w-100\\\\\\\\\\\\\\\" + className,\\\\\\\\n      value: search,\\\\\\\\n      onChange: (e) => {\\\\\\\\n        updateInput(e.target.value);\\\\\\\\n      },\\\\\\\\n      onKeyDown: (e) => e.key == \\\\\\\\\\\\\\\"Enter\\\\\\\\\\\\\\\" && onEnter(),\\\\\\\\n      skipPaddingGap: true,\\\\\\\\n      placeholder: \\\\\\\\\\\\\\\"Search by content\\\\\\\\\\\\\\\",\\\\\\\\n      inputProps: {\\\\\\\\n        prefix: <i class=\\\\\\\\\\\\\\\"bi bi-search m-auto\\\\\\\\\\\\\\\"></i>,\\\\\\\\n      },\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4656538697566e+21
    }
  },
  {
    "id": "3218439449",
    "receipt_id": "2Fio3bn18iqZw1kGWBSmdzvxpGT1u7c3obamtza5D4hL",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7ypDdUsEBTuv7sJrw8MoDf1XwA94NsJGb35JUUVwcpvY",
      "block_height": 115257810,
      "block_timestamp": 1711145724882386400
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "61LtXKnsU87xoXRJ3oi9A1f3EtdAyhWQb689iSFcuGfJ",
    "included_in_block_hash": "GxWJgspL822vrFszL16DjJoutT9qSEQdBNViMxZzK4Ng",
    "block_timestamp": "1711145722832172050",
    "block": {
      "block_height": 115257808
    },
    "receipt_conversion_tokens_burnt": "248411449328800000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8784748113469286e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4656538697566e+21
    }
  },
  {
    "id": "3220377449",
    "receipt_id": "7rjf2TRTcEahdY9RzjAgpj83PALMdnrmLDXbQn4PjK75",
    "predecessor_account_id": "theori.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "ByJkWmAeYAwk25HCBTmywQPdDXQGaoWFfR2DxRqYi5Kq",
      "block_height": 115266977,
      "block_timestamp": 1711155101041903900
    },
    "receipt_outcome": {
      "gas_burnt": 8114105854222,
      "tokens_burnt": 811410585422200000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "2MRkoU51nyEFcKJEip6oouSEpL1Q8QXfnjb3VTPjxcmd",
    "included_in_block_hash": "8TyamzuLR2v6P5wBF8PeKaQvYUU9bVjjuhRkKS6MTz5h",
    "block_timestamp": "1711155100025543116",
    "block": {
      "block_height": 115266976
    },
    "receipt_conversion_tokens_burnt": "243325817445800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_addon",
        "deposit": 0,
        "fee": 811410585422200000000,
        "args": "{\"handle\": \"contract-standards\", \"community_addon\": {\"id\": \"leujmy\", \"enabled\": true, \"addon_id\": \"github\", \"parameters\": \"{\\\\\\\\\\\\\\\"metadata\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c636509e--1556a53b--1c5e613e--59efbfe1-7f601918\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"github.kanban_board\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ticket\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"github.kanban_ticket\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"features\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"author\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"labels\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":true}}},\\\\\\\\\\\\\\\"dataTypesIncluded\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"Issue\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"PullRequest\\\\\\\\\\\\\\\":true},\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Latest Contract Standards NEPs\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"repoURL\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"https://github.com/near/NEPs\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ticketState\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEAR Contract Standards NEPs\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"188c637878a--49eb1372-75f9e38d-68ce9939--45830ecc\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPs that need a moderator review or author revision.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-contract-standards\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"S-draft\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{1f4c4} Draft\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c637878a--49eb1372-75f9e38d-68ce9939--45830ecc\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"188c6379247-7e36236d--57fa12ea-61525584-6dcc50ba\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPS that need a review by Subject Matter Experts.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-contract-standards\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"S-review\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{1f440} Review\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c6379247-7e36236d--57fa12ea-61525584-6dcc50ba\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"188c637a51c--65c71614--4800e5fc-27682e1b-7252bfc6\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPS in the final review stage that need the work group voting indications.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-contract-standards\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"S-voting\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{2714} Voting\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c637a51c--65c71614--4800e5fc-27682e1b-7252bfc6\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"188c637e597-e76346f--30604ac2--75d0bac0-5d95802f\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPS that were reviewed and approved by a work group.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-contract-standards\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"S-approved\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{2705} Approved NEPs\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c637e597-e76346f--30604ac2--75d0bac0-5d95802f\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"188c637f4f5--34fde91d-770cef0f-1e66ffab-71964866\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPS that were reviewed and approved by a work group or NEP moderators.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-contract-standards\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"A-NEP-Extension\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{1f527} Approved Fixes\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c637f4f5--34fde91d-770cef0f-1e66ffab-71964866\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"188c63815fb--2c629be9--4589905e--2d22e766--663cb55c\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"NEPs that were retracted by the author or had no activity for over two months.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"WG-contract-standards\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"S-retracted\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{274c} Retracted\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"188c63815fb--2c629be9--4589905e--2d22e766--663cb55c\\\\\\\\\\\\\\\"}}}\", \"display_name\": \"Github\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.4475386276718e+21
    }
  },
  {
    "id": "3220377578",
    "receipt_id": "3iusk8qzxjbezKqx7SK2pyY42UdjudA8QNnEu3nAGXqt",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5zW9sEvSU9YdxLJNUinvEJNpuRCvccADFzMes5ue22ux",
      "block_height": 115266978,
      "block_timestamp": 1711155102016600800
    },
    "receipt_outcome": {
      "gas_burnt": 23928022248038,
      "tokens_burnt": 2.3928022248038e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "2MRkoU51nyEFcKJEip6oouSEpL1Q8QXfnjb3VTPjxcmd",
    "included_in_block_hash": "8TyamzuLR2v6P5wBF8PeKaQvYUU9bVjjuhRkKS6MTz5h",
    "block_timestamp": "1711155100025543116",
    "block": {
      "block_height": 115266976
    },
    "receipt_conversion_tokens_burnt": "243325817445800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 2.3928022248038e+21,
        "args": "{\"data\": {\"contract-standards.community.devhub.near\": {\"profile\": {\"name\": \"Contract Standards\", \"tags\": {\"community\": \"\", \"announcements\": \"\", \"contract-standards\": \"\"}, \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreieuxcx2oy5xbnhgppedsm7sym2xass4acgcvkxyaytf5igyoqitva\"}, \"linktree\": {\"github\": null, \"twitter\": null, \"website\": \"near.social/devhub.near/widget/app?page=community&handle=contract-standards\", \"telegram\": \"nearnft\"}, \"description\": \"A community of individuals, communities, and organizations who have an interest in the current and developing contract standards and related dApps on NEAR Protocol.\\\\\\\\n\\\\\\\\nLearn more about our community [on DevHub](/devhub.near/widget/app?page=community&handle=contract-standards).\", \"backgroundImage\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreigj4ri7hsccfoiwxxnmejwoomt2tks2kkyisi6ggi7ipusc3nyrky\"}}}, \"discussions.contract-standards.community.devhub.near\": {\"profile\": {\"name\": \"Contract Standards (Community Discussions)\", \"tags\": {\"community\": \"\", \"discussions\": \"\", \"contract-standards\": \"\"}, \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreieuxcx2oy5xbnhgppedsm7sym2xass4acgcvkxyaytf5igyoqitva\"}, \"linktree\": {\"github\": null, \"twitter\": null, \"website\": \"near.social/devhub.near/widget/app?page=community&handle=contract-standards\", \"telegram\": \"nearnft\"}, \"description\": \"Coordinating the contribution to the NEAR dapp standards.\\\\\\\\n\\\\\\\\nLearn more about our community [on DevHub](/devhub.near/widget/app?page=community&handle=contract-standards).\", \"backgroundImage\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreigj4ri7hsccfoiwxxnmejwoomt2tks2kkyisi6ggi7ipusc3nyrky\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.4475386276718e+21
    }
  },
  {
    "id": "3224147321",
    "receipt_id": "GW8Mdm2i9CWNZ7ZGQpEV5vmn4gkewEz2XsVh7eeXrzFv",
    "predecessor_account_id": "petersalomonsen.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "7jgMdLSs25Wi6gmZP9SUhrFFGdSh6jBxc1s4seYo8zEQ",
      "block_height": 115282055,
      "block_timestamp": 1711171825549209600
    },
    "receipt_outcome": {
      "gas_burnt": 7122167370671,
      "tokens_burnt": 712216737067100000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "Vz68is7aKUvZ76AsLxKJwLhHW7dpRgECKwMrQZdJXE4",
    "included_in_block_hash": "AHLhtXg4xRV5FgWRnCqpCvuaxSJvvi1axrCugJKtLF7o",
    "block_timestamp": "1711171824426797196",
    "block": {
      "block_height": 115282054
    },
    "receipt_conversion_tokens_burnt": "242826309790200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_addons",
        "deposit": 0,
        "fee": 712216737067100000000,
        "args": "{\"addons\": [{\"id\": \"bjryag\", \"enabled\": true, \"addon_id\": \"github\", \"parameters\": \"{}\", \"display_name\": \"Github\"}], \"handle\": \"webassemblymusic\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.3578697235285e+21
    }
  },
  {
    "id": "3224147427",
    "receipt_id": "35PWB2zRfbqB7g7Kvzh1ZfchMSV95hvJ1PTozoCSxki5",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "WCMPmT5DVVV5uxyQkEuRF3vz5ahZBumKetGQLZPAAbw",
      "block_height": 115282056,
      "block_timestamp": 1711171826680091000
    },
    "receipt_outcome": {
      "gas_burnt": 24028266766712,
      "tokens_burnt": 2.4028266766712e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "Vz68is7aKUvZ76AsLxKJwLhHW7dpRgECKwMrQZdJXE4",
    "included_in_block_hash": "AHLhtXg4xRV5FgWRnCqpCvuaxSJvvi1axrCugJKtLF7o",
    "block_timestamp": "1711171824426797196",
    "block": {
      "block_height": 115282054
    },
    "receipt_conversion_tokens_burnt": "242826309790200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 2.4028266766712e+21,
        "args": "{\"data\": {\"webassemblymusic.community.devhub.near\": {\"profile\": {\"name\": \"WebAssembly Music\", \"tags\": {\"community\": \"\", \"announcements\": \"\", \"webassemblymusic\": \"\"}, \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreibysr2mkwhb4j36h2t7mqwhynqdy4vzjfygfkfg65kuspd2bawauu\"}, \"linktree\": {\"github\": \"petersalomonsen/javascriptmusic\", \"twitter\": \"salomonsen_p\", \"website\": \"near.social/devhub.near/widget/app?page=community&handle=webassemblymusic\", \"telegram\": null}, \"description\": \"Music written in Javascript / AssemblyScript and stored in tiny WebAssembly binaries. See the introduction here: https://youtu.be/C8j_ieOm4vE?si=I2Cq534eynlhasg5\\\\\\\\n\\\\\\\\nLearn more about our community [on DevHub](/devhub.near/widget/app?page=community&handle=webassemblymusic).\", \"backgroundImage\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\"}}}, \"discussions.webassemblymusic.community.devhub.near\": {\"profile\": {\"name\": \"WebAssembly Music (Community Discussions)\", \"tags\": {\"community\": \"\", \"discussions\": \"\", \"webassemblymusic\": \"\"}, \"image\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreibysr2mkwhb4j36h2t7mqwhynqdy4vzjfygfkfg65kuspd2bawauu\"}, \"linktree\": {\"github\": \"petersalomonsen/javascriptmusic\", \"twitter\": \"salomonsen_p\", \"website\": \"near.social/devhub.near/widget/app?page=community&handle=webassemblymusic\", \"telegram\": null}, \"description\": \"Music stored forever in the NEAR blockchain\\\\\\\\n\\\\\\\\nLearn more about our community [on DevHub](/devhub.near/widget/app?page=community&handle=webassemblymusic).\", \"backgroundImage\": {\"url\": \"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 3.3578697235285e+21
    }
  },
  {
    "id": "3225194908",
    "receipt_id": "HyNCyr8aL2tKWen2LNptE9v54KqaVyo1X3LDJVifJtx8",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "3LgS7pxuAV2SKGUKHKcnTah9EJMDvJEWi2bouBt562rd",
      "block_height": 115285281,
      "block_timestamp": 1711175576412209000
    },
    "receipt_outcome": {
      "gas_burnt": 37934835920023,
      "tokens_burnt": 3.7934835920023e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "9KmSUHF77mAZuAYUVsdCB97bza277UYYM2hEDMzCJSF3",
    "included_in_block_hash": "2i6pZajMrcHdjxahfGnjvjejjJtavFftaSmYWRnSseeU",
    "block_timestamp": "1711175575353557846",
    "block": {
      "block_height": 115285280
    },
    "receipt_conversion_tokens_burnt": "274993127094400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 3.7934835920023e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.entity.proposal.Feed\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!href) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    border-bottom: none !important;\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .green-btn {\\\\\\\\n      padding: 0.5rem 0.8rem !important;\\\\\\\\n      min-height: 32px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  .text-normal {\\\\\\\\n    font-weight: normal !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst FeedItem = ({ proposal, index }) => {\\\\\\\\n  const accountId = proposal.author_id;\\\\\\\\n  const profile = Social.get(`${accountId}/profile/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\n  // We will have to get the proposal from the contract to get the block height.\\\\\\\\n  const blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `devhub.near/post/main`,\\\\\\\\n    blockHeight: blockHeight,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n          id: proposal.proposal_id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      onClick={(e) => e.stopPropagation()}\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\n          \\\\\\\\\\\\\\\"proposal-card d-flex justify-content-between gap-2 text-muted cursor-pointer p-3 w-100 flex-wrap flex-sm-nowrap \\\\\\\\\\\\\\\" +\\\\\\\\n          (index !== 0 && \\\\\\\\\\\\\\\" border\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-4 w-100 flex-wrap\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"h6 mb-0 text-black\\\\\\\\\\\\\\\">{proposal.name}</div>\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CategoryTag\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  category: proposal.category,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center text-sm w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n                By {profile.name ?? accountId} \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              </div>\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  blockHeight,\\\\\\\\n                  blockTimestamp: proposal.timestamp,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.LikeButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  proposalId: proposal.id,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CommentIcon\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  showOverlay: false,\\\\\\\\n                  onClick: () => {},\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"align-self-center\\\\\\\\\\\\\\\" style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              timelineStatus: proposal.timeline.status,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getProposal = (proposal_id) => {\\\\\\\\n  return Near.asyncView(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n    proposal_id,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FeedPage = () => {\\\\\\\\n  const QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\n  State.init({\\\\\\\\n    data: [],\\\\\\\\n    cachedItems: {},\\\\\\\\n    author: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    stage: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    sort: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    category: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    input: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    loading: false,\\\\\\\\n    loadingMore: false,\\\\\\\\n    aggregatedCount: 0,\\\\\\\\n    currentlyDisplaying: 0,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  const queryName =\\\\\\\\n    \\\\\\\\\\\\\\\"thomasguntenaar_near_devhub_proposals_quebec_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      author_id\\\\\\\\n      block_height\\\\\\\\n      name\\\\\\\\n      category\\\\\\\\n      summary\\\\\\\\n      editor_id\\\\\\\\n      name\\\\\\\\n      proposal_id\\\\\\\\n      ts\\\\\\\\n      timeline\\\\\\\\n      views\\\\\\\\n    }\\\\\\\\n    ${queryName}_aggregate(\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    )  {\\\\\\\\n      aggregate {\\\\\\\\n        count\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n    return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n      method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n      headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `thomasguntenaar_near` },\\\\\\\\n      body: JSON.stringify({\\\\\\\\n        query: operationsDoc,\\\\\\\\n        variables: variables,\\\\\\\\n        operationName: operationName,\\\\\\\\n      }),\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const buildWhereClause = () => {\\\\\\\\n    let where = {};\\\\\\\\n    if (state.author) {\\\\\\\\n      where = { author_id: { _eq: state.author }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.category) {\\\\\\\\n      where = { category: { _eq: state.category }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.stage) {\\\\\\\\n      // timeline is stored as jsonb\\\\\\\\n      where = {\\\\\\\\n        timeline: { _cast: { String: { _ilike: `%${state.stage}%` } } },\\\\\\\\n        ...where,\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.input) {\\\\\\\\n      where = { description: { _ilike: `%${state.input}%` }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return where;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const buildOrderByClause = () => {\\\\\\\\n    /**\\\\\\\\n     * TODO\\\\\\\\n     * Most commented -> edit contract and indexer\\\\\\\\n     * Unanswered -> 0 comments\\\\\\\\n     */\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const makeMoreItems = () => {\\\\\\\\n    if (state.aggregatedCount <= state.currentlyDisplaying) return;\\\\\\\\n    fetchProposals(state.data.length);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchProposals = (offset) => {\\\\\\\\n    if (!offset) {\\\\\\\\n      offset = 0;\\\\\\\\n    }\\\\\\\\n    if (state.loading) return;\\\\\\\\n    const FETCH_LIMIT = 10;\\\\\\\\n    const variables = {\\\\\\\\n      limit: FETCH_LIMIT,\\\\\\\\n      offset,\\\\\\\\n      where: buildWhereClause(),\\\\\\\\n    };\\\\\\\\n    fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n      if (result.status === 200) {\\\\\\\\n        if (result.body.data) {\\\\\\\\n          const data =\\\\\\\\n            result.body.data\\\\\\\\n              .thomasguntenaar_near_devhub_proposals_quebec_proposals_with_latest_snapshot;\\\\\\\\n          const totalResult =\\\\\\\\n            result.body.data\\\\\\\\n              .thomasguntenaar_near_devhub_proposals_quebec_proposals_with_latest_snapshot_aggregate;\\\\\\\\n          State.update({ aggregatedCount: totalResult.aggregate.count });\\\\\\\\n          // Parse timeline\\\\\\\\n          fetchBlockHeights(data, offset);\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const renderItem = (item, index) => (\\\\\\\\n    <div\\\\\\\\n      key={item.proposal_id}\\\\\\\\n      className={\\\\\\\\n        (index !== state.data.length - 1 && \\\\\\\\\\\\\\\"border-bottom \\\\\\\\\\\\\\\") + index === 0 &&\\\\\\\\n        \\\\\\\\\\\\\\\" rounded-top-2\\\\\\\\\\\\\\\"\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <FeedItem proposal={item} index={index} />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n  const cachedRenderItem = (item, index) => {\\\\\\\\n    if (props.term) {\\\\\\\\n      return renderItem(item, {\\\\\\\\n        searchKeywords: [props.term],\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    const key = JSON.stringify(item);\\\\\\\\n\\\\\\\\n    if (!(key in state.cachedItems)) {\\\\\\\\n      state.cachedItems[key] = renderItem(item, index);\\\\\\\\n      State.update();\\\\\\\\n    }\\\\\\\\n    return state.cachedItems[key];\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    fetchProposals();\\\\\\\\n  }, [state.author, state.sort, state.category, state.stage]);\\\\\\\\n\\\\\\\\n  const mergeItems = (newItems) => {\\\\\\\\n    const items = [\\\\\\\\n      ...new Set([...newItems, ...state.data].map((i) => JSON.stringify(i))),\\\\\\\\n    ].map((i) => JSON.parse(i));\\\\\\\\n    // Sorting in the front end\\\\\\\\n    if (state.sort === \\\\\\\\\\\\\\\"proposal_id\\\\\\\\\\\\\\\" || state.sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.proposal_id - a.proposal_id);\\\\\\\\n    } else if (state.sort === \\\\\\\\\\\\\\\"views\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.views - a.views);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return items;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchBlockHeights = (data, offset) => {\\\\\\\\n    let promises = data.map((item) => getProposal(item.proposal_id));\\\\\\\\n    Promise.all(promises).then((blockHeights) => {\\\\\\\\n      data = data.map((item, index) => ({\\\\\\\\n        ...item,\\\\\\\\n        timeline: JSON.parse(item.timeline),\\\\\\\\n        social_db_post_block_height:\\\\\\\\n          blockHeights[index].social_db_post_block_height,\\\\\\\\n      }));\\\\\\\\n      if (offset) {\\\\\\\\n        let newData = mergeItems(data);\\\\\\\\n        State.update({\\\\\\\\n          data: newData,\\\\\\\\n          currentlyDisplaying: newData.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      } else {\\\\\\\\n        State.update({\\\\\\\\n          data,\\\\\\\\n          currentlyDisplaying: data.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const loader = (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Spinner\\\\\\\\\\\\\\\"}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const renderedItems = state.data ? state.data.map(cachedRenderItem) : null;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between flex-wrap gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Heading>\\\\\\\\n          DevDAO Proposals\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"text-muted text-normal\\\\\\\\\\\\\\\">\\\\\\\\n            ({state.aggregatedCount ?? state.data.length}){\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          </span>\\\\\\\\n        </Heading>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\n              \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-input\\\\\\\\\\\\\\\"\\\\\\\\n            }\\\\\\\\n            props={{\\\\\\\\n              search: state.input,\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-xs-100\\\\\\\\\\\\\\\",\\\\\\\\n              onSearch: (input) => {\\\\\\\\n                State.update({ input });\\\\\\\\n                fetchProposals();\\\\\\\\n              },\\\\\\\\n              onEnter: () => {\\\\\\\\n                fetchProposals();\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-sort\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ sort: select.value });\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-category\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ category: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-stage\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ stage: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-author\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                onAuthorChange: (select) => {\\\\\\\\n                  State.update({ author: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"mt-2 mt-xs-0\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={href({\\\\\\\\n              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\" },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                label: (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                    <div>\\\\\\\\n                      <i class=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                    </div>\\\\\\\\n                    New Proposal\\\\\\\\n                  </div>\\\\\\\\n                ),\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"green-btn\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div style={{ minHeight: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {!Array.isArray(state.data) ? (\\\\\\\\n          loader\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 mt-4 py-3 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"container-xl\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-muted bg-grey text-sm mt-2 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center mb-0\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    <i class=\\\\\\\\\\\\\\\"bi bi-info-circle\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                  <div>\\\\\\\\n                    <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                      Welcome to\\\\\\\\n                      <a\\\\\\\\n                        href=\\\\\\\\\\\\\\\"https://near.social/devhub.near/widget/app?page=community&handle=developer-dao&tab=overview\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        DevDAO\\\\\\\\u{2019}s New Proposal Feed!\\\\\\\\n                      </a>\\\\\\\\n                    </span>\\\\\\\\n                    This dedicated space replaces the\\\\\\\\n                    <a\\\\\\\\n                      href=\\\\\\\\\\\\\\\"https://near.org/devhub.near/widget/app?page=feed\\\\\\\\\\\\\\\"\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      old activity feed\\\\\\\\n                    </a>\\\\\\\\n                    , making it easier to submit and track funding requests from\\\\\\\\n                    DevDAO, the primary organization behind DevHub. To submit a\\\\\\\\n                    formal proposal, click New Proposal. See our{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href=\\\\\\\\\\\\\\\"https://near.org/devhub.near/widget/app?page=community&handle=developer-dao&tab=funding\\\\\\\\\\\\\\\"\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      guidelines\\\\\\\\n                    </a>\\\\\\\\n                    for details. For discussions and brainstorming, please\\\\\\\\n                    utilize the relevant{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href=\\\\\\\\\\\\\\\"https://near.org/devhub.near/widget/app?page=communities\\\\\\\\\\\\\\\"\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      communities\\\\\\\\n                    </a>\\\\\\\\n                    .\\\\\\\\n                  </div>\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mt-4 border rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                {state.data.length > 0 ? (\\\\\\\\n                  <InfiniteScroll\\\\\\\\n                    pageStart={0}\\\\\\\\n                    loadMore={makeMoreItems}\\\\\\\\n                    hasMore={state.aggregatedCount > state.data.length}\\\\\\\\n                    loader={loader}\\\\\\\\n                    useWindow={false}\\\\\\\\n                    threshold={100}\\\\\\\\n                  >\\\\\\\\n                    {renderedItems}\\\\\\\\n                  </InfiniteScroll>\\\\\\\\n                ) : (\\\\\\\\n                  loader\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn FeedPage(props);\\\\\\\\n\"}, \"devhub.entity.proposal.Editor\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\nconst { getDepositAmountForWriteAccess } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.common\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\nconst draftKey = \\\\\\\\\\\\\\\"PROPOSAL_EDIT\\\\\\\\\\\\\\\";\\\\\\\\ngetDepositAmountForWriteAccess || (getDepositAmountForWriteAccess = () => {});\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\n\\\\\\\\nconst isEditPage = typeof id === \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\";\\\\\\\\nconst author = context.accountId;\\\\\\\\nconst FundingDocs =\\\\\\\\n  \\\\\\\\\\\\\\\"https://near.social/devhub.near/widget/app?page=community&handle=developer-dao&tab=funding\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nif (!author) {\\\\\\\\n  return (\\\\\\\\n    <Widget src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.LoginScreen\\\\\\\\\\\\\\\"} />\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nlet editProposalData = null;\\\\\\\\nlet draftProposalData = null;\\\\\\\\n\\\\\\\\nif (isEditPage) {\\\\\\\\n  editProposalData = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n    proposal_id: parseInt(id),\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  input {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  textarea {\\\\\\\\n    font-size: 14px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .h6 {\\\\\\\\n      font-size: 14px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .h5 {\\\\\\\\n      font-size: 16px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .text-sm {\\\\\\\\n      font-size: 11px;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-xs {\\\\\\\\n    font-size: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-2 {\\\\\\\\n    flex: 2;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-1 {\\\\\\\\n    border: 1px solid #e2e6ec;\\\\\\\\n  }\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .black-btn {\\\\\\\\n    background-color: #000 !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .input-icon {\\\\\\\\n    display: flex;\\\\\\\\n    height: 100%;\\\\\\\\n    align-items: center;\\\\\\\\n    border-right: 1px solid #dee2e6;\\\\\\\\n    padding-right: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip container */\\\\\\\\n  .custom-tooltip {\\\\\\\\n    position: relative;\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip text */\\\\\\\\n  .custom-tooltip .tooltiptext {\\\\\\\\n    visibility: hidden;\\\\\\\\n    width: 250px;\\\\\\\\n    background-color: #fff;\\\\\\\\n    color: #6c757d;\\\\\\\\n    text-align: center;\\\\\\\\n    padding: 10px;\\\\\\\\n    border-radius: 6px;\\\\\\\\n    font-size: 12px;\\\\\\\\n    border: 0.2px solid #6c757d;\\\\\\\\n\\\\\\\\n    /* Position the tooltip text */\\\\\\\\n    position: absolute;\\\\\\\\n    z-index: 1;\\\\\\\\n    bottom: 125%;\\\\\\\\n    left: -30px;\\\\\\\\n\\\\\\\\n    /* Fade in tooltip */\\\\\\\\n    opacity: 0;\\\\\\\\n    transition: opacity 0.3s;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Tooltip arrow */\\\\\\\\n  .custom-tooltip .tooltiptext::after {\\\\\\\\n    content: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 15%;\\\\\\\\n    margin-left: -5px;\\\\\\\\n    border-width: 5px;\\\\\\\\n    border-style: solid;\\\\\\\\n    border-color: #555 transparent transparent transparent;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  /* Show the tooltip text when you mouse over the tooltip container */\\\\\\\\n  .custom-tooltip:hover .tooltiptext {\\\\\\\\n    visibility: visible;\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst tokensOptions = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"NEAR\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"USDT\\\\\\\\\\\\\\\" },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"USDC\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"OTHER\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst devdaoAccount = \\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst [category, setCategory] = useState(null);\\\\\\\\nconst [title, setTitle] = useState(null);\\\\\\\\nconst [description, setDescription] = useState(null);\\\\\\\\nconst [summary, setSummary] = useState(null);\\\\\\\\nconst [consent, setConsent] = useState({ toc: false, coc: false });\\\\\\\\nconst [linkedProposals, setLinkedProposals] = useState([]);\\\\\\\\nconst [receiverAccount, setReceiverAccount] = useState(context.accountId);\\\\\\\\nconst [requestedSponsor, setRequestedSponsor] = useState(devdaoAccount);\\\\\\\\nconst [requestedSponsorshipAmount, setRequestedSponsorshipAmount] =\\\\\\\\n  useState(null);\\\\\\\\nconst [requestedSponsorshipToken, setRequestedSponsorshipToken] = useState(\\\\\\\\n  tokensOptions[2]\\\\\\\\n);\\\\\\\\nconst [supervisor, setSupervisor] = useState(null);\\\\\\\\nconst [allowDraft, setAllowDraft] = useState(true);\\\\\\\\n\\\\\\\\nconst [proposalsOptions, setProposalsOptions] = useState([]);\\\\\\\\nconst proposalsData = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposals\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst [loading, setLoading] = useState(true);\\\\\\\\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\\\\\\\\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\\\\\\\\nconst [selectedStatus, setSelectedStatus] = useState(\\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\");\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [amountError, setAmountError] = useState(null);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\n\\\\\\\\nconst [isSubmittingTransaction, setIsSubmittingTransaction] = useState(false);\\\\\\\\n\\\\\\\\nconst [showProposalPage, setShowProposalPage] = useState(false); // when user creates/edit a proposal and confirm the txn, this is true\\\\\\\\nconst [proposalId, setProposalId] = useState(null);\\\\\\\\n\\\\\\\\nif (allowDraft) {\\\\\\\\n  draftProposalData = Storage.privateGet(draftKey);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst memoizedDraftData = useMemo(\\\\\\\\n  () => ({\\\\\\\\n    id: editProposalData.id ?? null,\\\\\\\\n    snapshot: {\\\\\\\\n      name: title,\\\\\\\\n      description: description,\\\\\\\\n      category: category,\\\\\\\\n      summary: summary,\\\\\\\\n      requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n      requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n      receiver_account: receiverAccount,\\\\\\\\n      supervisor: supervisor,\\\\\\\\n      requested_sponsor: requestedSponsor,\\\\\\\\n    },\\\\\\\\n  }),\\\\\\\\n  [\\\\\\\\n    title,\\\\\\\\n    summary,\\\\\\\\n    description,\\\\\\\\n    category,\\\\\\\\n    requestedSponsorshipAmount,\\\\\\\\n    requestedSponsorshipToken,\\\\\\\\n    receiverAccount,\\\\\\\\n    supervisor,\\\\\\\\n    requestedSponsor,\\\\\\\\n  ]\\\\\\\\n);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (allowDraft) {\\\\\\\\n    let data = editProposalData || JSON.parse(draftProposalData);\\\\\\\\n    let snapshot = data.snapshot;\\\\\\\\n    if (data) {\\\\\\\\n      if (timestamp) {\\\\\\\\n        snapshot =\\\\\\\\n          data.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n          data.snapshot;\\\\\\\\n      }\\\\\\\\n      if (\\\\\\\\n        draftProposalData &&\\\\\\\\n        editProposalData &&\\\\\\\\n        editProposalData.id === JSON.parse(draftProposalData).id\\\\\\\\n      ) {\\\\\\\\n        snapshot = {\\\\\\\\n          ...editProposalData.snapshot,\\\\\\\\n          ...JSON.parse(draftProposalData).snapshot,\\\\\\\\n        };\\\\\\\\n      }\\\\\\\\n      setCategory(snapshot.category);\\\\\\\\n      setTitle(snapshot.name);\\\\\\\\n      setSummary(snapshot.summary);\\\\\\\\n      setDescription(snapshot.description);\\\\\\\\n      setReceiverAccount(snapshot.receiver_account);\\\\\\\\n      setRequestedSponsor(snapshot.requested_sponsor);\\\\\\\\n      setRequestedSponsorshipAmount(snapshot.requested_sponsorship_usd_amount);\\\\\\\\n      setSupervisor(snapshot.supervisor);\\\\\\\\n\\\\\\\\n      const token = tokensOptions.find(\\\\\\\\n        (item) => item.value === snapshot.requested_sponsorship_paid_in_currency\\\\\\\\n      );\\\\\\\\n      setRequestedSponsorshipToken(token ?? tokensOptions[2]);\\\\\\\\n      if (isEditPage) {\\\\\\\\n        setConsent({ toc: true, coc: true });\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n    setLoading(false);\\\\\\\\n  }\\\\\\\\n}, [editProposalData, draftProposalData, allowDraft]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (draftProposalData) {\\\\\\\\n    setAllowDraft(false);\\\\\\\\n  }\\\\\\\\n}, [draftProposalData]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (showProposalPage) {\\\\\\\\n    return;\\\\\\\\n  }\\\\\\\\n  setDisabledSubmitBtn(\\\\\\\\n    isSubmittingTransaction ||\\\\\\\\n      amountError ||\\\\\\\\n      !title ||\\\\\\\\n      !description ||\\\\\\\\n      !summary ||\\\\\\\\n      !category ||\\\\\\\\n      !requestedSponsorshipAmount ||\\\\\\\\n      !receiverAccount ||\\\\\\\\n      !requestedSponsor ||\\\\\\\\n      !consent.toc ||\\\\\\\\n      !consent.coc\\\\\\\\n  );\\\\\\\\n  const handler = setTimeout(() => {\\\\\\\\n    Storage.privateSet(draftKey, JSON.stringify(memoizedDraftData));\\\\\\\\n  }, 3000);\\\\\\\\n\\\\\\\\n  return () => {\\\\\\\\n    clearTimeout(handler);\\\\\\\\n  };\\\\\\\\n}, [\\\\\\\\n  memoizedDraftData,\\\\\\\\n  draftKey,\\\\\\\\n  draftProposalData,\\\\\\\\n  consent,\\\\\\\\n  amountError,\\\\\\\\n  isSubmittingTransaction,\\\\\\\\n  showProposalPage,\\\\\\\\n]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    proposalsOptions.length > 0 &&\\\\\\\\n    editProposalData &&\\\\\\\\n    editProposalData?.snapshot?.linked_proposals?.length > 0\\\\\\\\n  ) {\\\\\\\\n    let data = [];\\\\\\\\n    editProposalData.snapshot.linked_proposals.map((item) => {\\\\\\\\n      data.push(proposalsOptions.find((i) => i.value === item));\\\\\\\\n    });\\\\\\\\n    setLinkedProposals(data);\\\\\\\\n  }\\\\\\\\n}, [editProposalData, proposalsOptions]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  // Trigger when proposals data change, which will happen on cache invalidation\\\\\\\\n  setIsSubmittingTransaction(false);\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"Proposals data change, assume transaction completed\\\\\\\\\\\\\\\");\\\\\\\\n}, [proposalsData]);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (\\\\\\\\n    proposalsData !== null &&\\\\\\\\n    Array.isArray(proposalsData) &&\\\\\\\\n    !proposalsOptions.length\\\\\\\\n  ) {\\\\\\\\n    const data = [];\\\\\\\\n    for (const prop of proposalsData) {\\\\\\\\n      data.push({\\\\\\\\n        label: \\\\\\\\\\\\\\\"Id \\\\\\\\\\\\\\\" + prop.id + \\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\" + prop.snapshot.name,\\\\\\\\n        value: prop.id,\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    setProposalsOptions(data);\\\\\\\\n  }\\\\\\\\n}, [proposalsData]);\\\\\\\\n\\\\\\\\nuseEffect(() => {});\\\\\\\\n\\\\\\\\nconst InputContainer = ({ heading, description, children }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 gap-sm-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <b className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{heading}</b>\\\\\\\\n      {description && (\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">{description}</div>\\\\\\\\n      )}\\\\\\\\n      {children}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (props.transactionHashes) {\\\\\\\\n    setLoading(true);\\\\\\\\n    useCache(\\\\\\\\n      () =>\\\\\\\\n        asyncFetch(\\\\\\\\\\\\\\\"https://rpc.mainnet.near.org\\\\\\\\\\\\\\\", {\\\\\\\\n          method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n          headers: {\\\\\\\\n            \\\\\\\\\\\\\\\"content-type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"application/json\\\\\\\\\\\\\\\",\\\\\\\\n          },\\\\\\\\n          body: JSON.stringify({\\\\\\\\n            jsonrpc: \\\\\\\\\\\\\\\"2.0\\\\\\\\\\\\\\\",\\\\\\\\n            id: \\\\\\\\\\\\\\\"dontcare\\\\\\\\\\\\\\\",\\\\\\\\n            method: \\\\\\\\\\\\\\\"tx\\\\\\\\\\\\\\\",\\\\\\\\n            params: [props.transactionHashes, context.accountId],\\\\\\\\n          }),\\\\\\\\n        }).then((transaction) => {\\\\\\\\n          const transaction_method_name =\\\\\\\\n            transaction?.body?.result?.transaction?.actions[0].FunctionCall\\\\\\\\n              .method_name;\\\\\\\\n\\\\\\\\n          const is_edit_or_add_post_transaction =\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\" ||\\\\\\\\n            transaction_method_name == \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n          if (is_edit_or_add_post_transaction) {\\\\\\\\n            setShowProposalPage(true);\\\\\\\\n            Storage.privateSet(draftKey, null);\\\\\\\\n          }\\\\\\\\n          // show the latest created proposal to user\\\\\\\\n          if (transaction_method_name == \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\") {\\\\\\\\n            useCache(\\\\\\\\n              () =>\\\\\\\\n                Near.asyncView(\\\\\\\\n                  \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n                  \\\\\\\\\\\\\\\"get_all_proposal_ids\\\\\\\\\\\\\\\"\\\\\\\\n                ).then((proposalIdsArray) => {\\\\\\\\n                  setProposalId(\\\\\\\\n                    proposalIdsArray?.[proposalIdsArray?.length - 1]\\\\\\\\n                  );\\\\\\\\n                }),\\\\\\\\n              props.transactionHashes + \\\\\\\\\\\\\\\"proposalIds\\\\\\\\\\\\\\\",\\\\\\\\n              { subscribe: false }\\\\\\\\n            );\\\\\\\\n          } else {\\\\\\\\n            setProposalId(id);\\\\\\\\n          }\\\\\\\\n          setLoading(false);\\\\\\\\n        }),\\\\\\\\n      props.transactionHashes + context.accountId,\\\\\\\\n      { subscribe: false }\\\\\\\\n    );\\\\\\\\n  } else {\\\\\\\\n    if (showProposalPage) {\\\\\\\\n      setShowProposalPage(false);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}, [props.transactionHashes]);\\\\\\\\n\\\\\\\\nconst CheckBox = ({ value, isChecked, label, onClick }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"checkbox\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        onChange={(e) => onClick(e.target.checked)}\\\\\\\\n      />\\\\\\\\n      <label class=\\\\\\\\\\\\\\\"form-check-label text-sm\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst DropdowntBtnContainer = styled.div`\\\\\\\\n  font-size: 13px;\\\\\\\\n  min-width: 150px;\\\\\\\\n\\\\\\\\n  .custom-select {\\\\\\\\n    position: relative;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .select-header {\\\\\\\\n    display: flex;\\\\\\\\n    justify-content: space-between;\\\\\\\\n    align-items: center;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    border-radius-top: 5px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    background-color: #fff;\\\\\\\\n    border-radius: 5px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .no-border {\\\\\\\\n    border: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .options-card {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 100%;\\\\\\\\n    left: 0;\\\\\\\\n    width: 200%;\\\\\\\\n    border: 1px solid #ccc;\\\\\\\\n    background-color: #fff;\\\\\\\\n    padding: 0.5rem;\\\\\\\\n    z-index: 9999;\\\\\\\\n    font-size: 13px;\\\\\\\\n    border-radius:0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .left {\\\\\\\\n    right: 0 !important;\\\\\\\\n    left: auto !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .options-card {\\\\\\\\n      right: 0 !important;\\\\\\\\n      left: auto !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option {\\\\\\\\n    margin-block: 5px;\\\\\\\\n    padding: 10px;\\\\\\\\n    cursor: pointer;\\\\\\\\n    border-bottom: 1px solid #f0f0f0;\\\\\\\\n    transition: background-color 0.3s ease;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:hover {\\\\\\\\n    background-color: #f0f0f0; /* Custom hover effect color */\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .option:last-child {\\\\\\\\n    border-bottom: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .selected {\\\\\\\\n    background-color: #f0f0f0;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled {\\\\\\\\n    background-color: #f4f4f4 !important;\\\\\\\\n    cursor: not-allowed !important;\\\\\\\\n    font-weight: 500;\\\\\\\\n    color: #b3b3b3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .disabled .circle {\\\\\\\\n    opacity: 0.5;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 8px;\\\\\\\\n    height: 8px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey {\\\\\\\\n    background-color: #818181;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green {\\\\\\\\n    background-color: #04a46e;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a:hover {\\\\\\\\n    text-decoration: none;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n}\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst LoadingButtonSpinner = (\\\\\\\\n  <span\\\\\\\\n    class=\\\\\\\\\\\\\\\"submit-proposal-draft-loading-indicator spinner-border spinner-border-sm\\\\\\\\\\\\\\\"\\\\\\\\n    role=\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\"\\\\\\\\n    aria-hidden=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n  ></span>\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst SubmitBtn = () => {\\\\\\\\n  const btnOptions = [\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Submit Draft\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"The author can still edit the proposal and build consensus before sharing it with sponsors.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      iconColor: \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\",\\\\\\\\n      label: \\\\\\\\\\\\\\\"Ready for Review\\\\\\\\\\\\\\\",\\\\\\\\n      description:\\\\\\\\n        \\\\\\\\\\\\\\\"Start the official review process with sponsors. This will lock the editing function, but comments are still open.\\\\\\\\\\\\\\\",\\\\\\\\n      value: \\\\\\\\\\\\\\\"review\\\\\\\\\\\\\\\",\\\\\\\\n    },\\\\\\\\n  ];\\\\\\\\n\\\\\\\\n  const handleOptionClick = (option) => {\\\\\\\\n    setDraftBtnOpen(false);\\\\\\\\n    setSelectedStatus(option.value);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const toggleDropdown = () => {\\\\\\\\n    setDraftBtnOpen(!isDraftBtnOpen);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const handleSubmit = () => {\\\\\\\\n    const isDraft = selectedStatus === \\\\\\\\\\\\\\\"draft\\\\\\\\\\\\\\\";\\\\\\\\n    if (isDraft) {\\\\\\\\n      onSubmit({ isDraft });\\\\\\\\n      cleanDraft();\\\\\\\\n    } else {\\\\\\\\n      setReviewModal(true);\\\\\\\\n    }\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <DropdowntBtnContainer>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"custom-select\\\\\\\\\\\\\\\"\\\\\\\\n        tabIndex=\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\"\\\\\\\\n        onBlur={() => setDraftBtnOpen(false)}\\\\\\\\n      >\\\\\\\\n        <div\\\\\\\\n          className={\\\\\\\\n            \\\\\\\\\\\\\\\"select-header d-flex gap-1 align-items-center submit-draft-button \\\\\\\\\\\\\\\" +\\\\\\\\n            (disabledSubmitBtn && \\\\\\\\\\\\\\\"disabled\\\\\\\\\\\\\\\")\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          <div\\\\\\\\n            onClick={() => !disabledSubmitBtn && handleSubmit()}\\\\\\\\n            className=\\\\\\\\\\\\\\\"p-2 d-flex gap-2 align-items-center \\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            {isSubmittingTransaction ? (\\\\\\\\n              LoadingButtonSpinner\\\\\\\\n            ) : (\\\\\\\\n              <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + selectedOption.iconColor}></div>\\\\\\\\n            )}\\\\\\\\n            <div className={`selected-option`}>{selectedOption.label}</div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            className=\\\\\\\\\\\\\\\"h-100 p-2\\\\\\\\\\\\\\\"\\\\\\\\n            style={{ borderLeft: \\\\\\\\\\\\\\\"1px solid #ccc\\\\\\\\\\\\\\\" }}\\\\\\\\n            onClick={!disabledSubmitBtn && toggleDropdown}\\\\\\\\n          >\\\\\\\\n            <i class={`bi bi-chevron-${isOpen ? \\\\\\\\\\\\\\\"up\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"down\\\\\\\\\\\\\\\"}`}></i>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        {isDraftBtnOpen && (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"options-card\\\\\\\\\\\\\\\">\\\\\\\\n            {btnOptions.map((option) => (\\\\\\\\n              <div\\\\\\\\n                key={option.value}\\\\\\\\n                className={`option ${\\\\\\\\n                  selectedOption.value === option.value ? \\\\\\\\\\\\\\\"selected\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                }`}\\\\\\\\n                onClick={() => handleOptionClick(option)}\\\\\\\\n              >\\\\\\\\n                <div className={`d-flex gap-2 align-items-center`}>\\\\\\\\n                  <div className={\\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" + option.iconColor}></div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">{option.label}</div>\\\\\\\\n                </div>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-muted text-xs\\\\\\\\\\\\\\\">{option.description}</div>\\\\\\\\n              </div>\\\\\\\\n            ))}\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </DropdowntBtnContainer>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst onSubmit = ({ isDraft, isCancel }) => {\\\\\\\\n  setIsSubmittingTransaction(true);\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"submitting transaction\\\\\\\\\\\\\\\");\\\\\\\\n  const linkedProposalsIds = linkedProposals.map((item) => item.value) ?? [];\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n    name: title,\\\\\\\\n    description: description,\\\\\\\\n    category: category,\\\\\\\\n    summary: summary,\\\\\\\\n    linked_proposals: linkedProposalsIds,\\\\\\\\n    requested_sponsorship_usd_amount: requestedSponsorshipAmount,\\\\\\\\n    requested_sponsorship_paid_in_currency: requestedSponsorshipToken.value,\\\\\\\\n    receiver_account: receiverAccount,\\\\\\\\n    supervisor: supervisor || null,\\\\\\\\n    requested_sponsor: requestedSponsor,\\\\\\\\n    timeline: isCancel\\\\\\\\n      ? {\\\\\\\\n          status: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        }\\\\\\\\n      : isDraft\\\\\\\\n      ? { status: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\" }\\\\\\\\n      : {\\\\\\\\n          status: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n          sponsor_requested_review: false,\\\\\\\\n          reviewer_completed_attestation: false,\\\\\\\\n        },\\\\\\\\n  };\\\\\\\\n  const args = { labels: [], body: body };\\\\\\\\n  if (isEditPage) {\\\\\\\\n    args[\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\"] = editProposalData.id;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: isEditPage ? \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"add_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction cleanDraft() {\\\\\\\\n  Storage.privateSet(draftKey, null);\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst descriptionPlaceholder = `**PROJECT DETAILS**\\\\\\\\nProvide a clear overview of the scope, deliverables, and expected outcomes. What benefits will it provide to the NEAR community? How will you measure success?\\\\\\\\n\\\\\\\\n**TIMELINE**\\\\\\\\nDescribe the timeline of your project and key milestones, specifying if the work was already complete or not. Include your plans for reporting progress to the community.\\\\\\\\n\\\\\\\\nOPTIONAL FIELDS\\\\\\\\n\\\\\\\\n**TEAM**\\\\\\\\nProvide a list of who will be working on the project along with their relevant skillset and experience. You may include links to portfolios or profiles to help the community get to know who the DAO will fund and how their backgrounds will contribute to your project\\\\\\\\u{2019}s success.\\\\\\\\n\\\\\\\\n**BUDGET BREAKDOWN**\\\\\\\\nInclude a detailed breakdown on how you will use the funds and include rate justification. Our community values transparency, so be as specific as possible.\\\\\\\\n`;\\\\\\\\n\\\\\\\\nif (loading) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Spinner\\\\\\\\\\\\\\\"}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst [collapseState, setCollapseState] = useState({});\\\\\\\\n\\\\\\\\nconst CollapsibleContainer = ({ title, children, noPaddingTop }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className={\\\\\\\\n        \\\\\\\\\\\\\\\"border-bottom py-4 \\\\\\\\\\\\\\\" +\\\\\\\\n        (noPaddingTop && \\\\\\\\\\\\\\\"pt-0 \\\\\\\\\\\\\\\") +\\\\\\\\n        (collapseState[title] && \\\\\\\\\\\\\\\" pb-0\\\\\\\\\\\\\\\")\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <div className={\\\\\\\\\\\\\\\"d-flex justify-content-between \\\\\\\\\\\\\\\"}>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h5 text-muted mb-2 mb-sm-3\\\\\\\\\\\\\\\">{title}</div>\\\\\\\\n        <div\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex d-sm-none cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n          onClick={() =>\\\\\\\\n            setCollapseState((prevState) => ({\\\\\\\\n              ...prevState,\\\\\\\\n              [title]: !prevState[title],\\\\\\\\n            }))\\\\\\\\n          }\\\\\\\\n        >\\\\\\\\n          {!collapseState[title] ? (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-up h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          ) : (\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-chevron-down h4\\\\\\\\\\\\\\\"></i>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div className={!collapseState[title] ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"d-none\\\\\\\\\\\\\\\"}>{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (showProposalPage) {\\\\\\\\n  return (\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Proposal\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{ id: proposalId, ...props }}\\\\\\\\n    />\\\\\\\\n  );\\\\\\\\n} else\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-0 px-sm-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <Heading className=\\\\\\\\\\\\\\\"px-2 px-sm-0\\\\\\\\\\\\\\\">\\\\\\\\n        {isEditPage ? \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Create\\\\\\\\\\\\\\\"} Proposal\\\\\\\\n      </Heading>\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmReviewModal\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          isOpen: isReviewModalOpen,\\\\\\\\n          onCancelClick: () => setReviewModal(false),\\\\\\\\n          onReviewClick: () => {\\\\\\\\n            setReviewModal(false);\\\\\\\\n            cleanDraft();\\\\\\\\n            onSubmit({ isDraft: false });\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmCancelModal\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          isOpen: isCancelModalOpen,\\\\\\\\n          onCancelClick: () => setCancelModal(false),\\\\\\\\n          onConfirmClick: () => {\\\\\\\\n            setCancelModal(false);\\\\\\\\n            onSubmit({ isCancel: true });\\\\\\\\n          },\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 px-2 p-lg-0 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"container-xl py-4 d-flex flex-wrap gap-6 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <div\\\\\\\\n            style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n            className=\\\\\\\\\\\\\\\"flex-2 w-100 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n                  props={{\\\\\\\\n                    accountId: author,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    <>\\\\\\\\n                      Select the category that best aligns with your\\\\\\\\n                      contribution to the NEAR developer community. Need\\\\\\\\n                      guidance? See{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <a\\\\\\\\n                        href={FundingDocs}\\\\\\\\n                        className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        Funding Docs\\\\\\\\n                      </a>\\\\\\\\n                      .\\\\\\\\n                    </>\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  <Widget\\\\\\\\n                    src={\\\\\\\\n                      \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CategoryDropdown\\\\\\\\\\\\\\\"\\\\\\\\n                    }\\\\\\\\n                    props={{\\\\\\\\n                      selectedValue: category,\\\\\\\\n                      onChange: setCategory,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Highlight the essence of your proposal in a few words. This will appear on your proposal\\\\\\\\u{2019}s detail page and the main proposal feed. Keep it short, please :)\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  <Widget\\\\\\\\n                    src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n                    props={{\\\\\\\\n                      className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                      value: title,\\\\\\\\n                      onChange: (e) => {\\\\\\\\n                        setTitle(e.target.value);\\\\\\\\n                      },\\\\\\\\n                      skipPaddingGap: true,\\\\\\\\n                      inputProps: {\\\\\\\\n                        max: 80,\\\\\\\\n                        required: true,\\\\\\\\n                      },\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Summary\\\\\\\\\\\\\\\"\\\\\\\\n                  description=\\\\\\\\\\\\\\\"Explain your proposal briefly. This is your chance to make a good first impression on the community. Include what needs or goals your work will address, your solution, and the benefit for the NEAR developer community.\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  <Widget\\\\\\\\n                    src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n                    props={{\\\\\\\\n                      className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                      value: summary,\\\\\\\\n                      multiline: true,\\\\\\\\n                      onChange: (e) => {\\\\\\\\n                        setSummary(e.target.value);\\\\\\\\n                      },\\\\\\\\n                      skipPaddingGap: true,\\\\\\\\n                      inputProps: {\\\\\\\\n                        max: 500,\\\\\\\\n                        required: true,\\\\\\\\n                      },\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer\\\\\\\\n                  heading=\\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\"\\\\\\\\n                  description={\\\\\\\\n                    <>\\\\\\\\n                      Expand on your summary with any relevant details like your\\\\\\\\n                      contribution timeline, key milestones, team background,\\\\\\\\n                      and a clear breakdown of how the funds will be used.\\\\\\\\n                      Proposals should be simple and clear (e.g. 1 month). For\\\\\\\\n                      more complex projects, treat each milestone as a separate\\\\\\\\n                      proposal. Need more guidance?\\\\\\\\n                      <a\\\\\\\\n                        href={FundingDocs}\\\\\\\\n                        className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        See Funding Docs\\\\\\\\n                      </a>\\\\\\\\n                      .\\\\\\\\n                    </>\\\\\\\\n                  }\\\\\\\\n                >\\\\\\\\n                  <Widget\\\\\\\\n                    src={\\\\\\\\n                      \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Compose\\\\\\\\\\\\\\\"\\\\\\\\n                    }\\\\\\\\n                    props={{\\\\\\\\n                      data: description,\\\\\\\\n                      onChange: setDescription,\\\\\\\\n                      autocompleteEnabled: true,\\\\\\\\n                      autoFocus: false,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </InputContainer>\\\\\\\\n                <InputContainer heading=\\\\\\\\\\\\\\\"Final Consent\\\\\\\\\\\\\\\">\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <CheckBox\\\\\\\\n                      value={consent.toc}\\\\\\\\n                      label={\\\\\\\\n                        <>\\\\\\\\n                          I\\\\\\\\u{2019}ve agree to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                          <a\\\\\\\\n                            href={\\\\\\\\n                              \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1nRGy7LhpLj56SjN9MseV1x-ubH8O_c6B9DOAZ9qTwMU/edit?usp=sharing\\\\\\\\\\\\\\\"\\\\\\\\n                            }\\\\\\\\n                            className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                          >\\\\\\\\n                            DevHub\\\\\\\\u{2019}s Terms and Conditions\\\\\\\\n                          </a>\\\\\\\\n                          and commit to honoring it\\\\\\\\n                        </>\\\\\\\\n                      }\\\\\\\\n                      isChecked={consent.toc}\\\\\\\\n                      onClick={(value) =>\\\\\\\\n                        setConsent((prevConsent) => ({\\\\\\\\n                          ...prevConsent,\\\\\\\\n                          toc: value,\\\\\\\\n                        }))\\\\\\\\n                      }\\\\\\\\n                    />\\\\\\\\n                    <CheckBox\\\\\\\\n                      value={consent.coc}\\\\\\\\n                      label={\\\\\\\\n                        <>\\\\\\\\n                          I\\\\\\\\u{2019}ve read{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                          <a\\\\\\\\n                            href={\\\\\\\\n                              \\\\\\\\\\\\\\\"https://docs.google.com/document/d/1c6XV8Sj_BRKw8jnTIsjdLPPN6Al5eEStt1ZLYSuqw9U/edit\\\\\\\\\\\\\\\"\\\\\\\\n                            }\\\\\\\\n                            className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                            target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                            rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                          >\\\\\\\\n                            DevHub\\\\\\\\u{2019}s Code of Conduct\\\\\\\\n                          </a>\\\\\\\\n                          and commit to honoring it\\\\\\\\n                        </>\\\\\\\\n                      }\\\\\\\\n                      isChecked={consent.coc}\\\\\\\\n                      onClick={(value) =>\\\\\\\\n                        setConsent((prevConsent) => ({\\\\\\\\n                          ...prevConsent,\\\\\\\\n                          coc: value,\\\\\\\\n                        }))\\\\\\\\n                      }\\\\\\\\n                    />\\\\\\\\n                  </div>\\\\\\\\n                </InputContainer>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    {isEditPage && (\\\\\\\\n                      <Widget\\\\\\\\n                        src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                        props={{\\\\\\\\n                          classNames: {\\\\\\\\n                            root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                          },\\\\\\\\n                          label: (\\\\\\\\n                            <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                              <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                            </div>\\\\\\\\n                          ),\\\\\\\\n                          onClick: () => setCancelModal(true),\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <Link\\\\\\\\n                      to={\\\\\\\\n                        isEditPage\\\\\\\\n                          ? href({\\\\\\\\n                              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                              params: {\\\\\\\\n                                page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                                id: parseInt(id),\\\\\\\\n                              },\\\\\\\\n                            })\\\\\\\\n                          : href({\\\\\\\\n                              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                              params: {\\\\\\\\n                                page: \\\\\\\\\\\\\\\"proposals\\\\\\\\\\\\\\\",\\\\\\\\n                              },\\\\\\\\n                            })\\\\\\\\n                      }\\\\\\\\n                    >\\\\\\\\n                      <Widget\\\\\\\\n                        src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                        props={{\\\\\\\\n                          classNames: {\\\\\\\\n                            root: \\\\\\\\\\\\\\\"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                          },\\\\\\\\n                          label: \\\\\\\\\\\\\\\"Discard Changes\\\\\\\\\\\\\\\",\\\\\\\\n                          onClick: cleanDraft,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </Link>\\\\\\\\n                    <SubmitBtn />\\\\\\\\n                  </div>\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n          <div\\\\\\\\n            style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n            className=\\\\\\\\\\\\\\\"flex-1 w-100 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n          >\\\\\\\\n            <CollapsibleContainer noPaddingTop={true} title=\\\\\\\\\\\\\\\"Author Details\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n                <InputContainer heading=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                  <Widget\\\\\\\\n                    src=\\\\\\\\\\\\\\\"mob.near/widget/Profile.ShortInlineBlock\\\\\\\\\\\\\\\"\\\\\\\\n                    props={{\\\\\\\\n                      accountId: author,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </InputContainer>\\\\\\\\n              </div>\\\\\\\\n            </CollapsibleContainer>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n              <CollapsibleContainer title=\\\\\\\\\\\\\\\"Link Proposals (Optional)\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"text-muted w-100 text-sm\\\\\\\\\\\\\\\">\\\\\\\\n                    Link any relevant proposals (e.g. previous milestones).\\\\\\\\n                  </div>\\\\\\\\n                  {linkedProposals.map((proposal) => {\\\\\\\\n                    return (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                        <a\\\\\\\\n                          className=\\\\\\\\\\\\\\\"text-decoration-underline flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                          href={href({\\\\\\\\n                            widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                            params: {\\\\\\\\n                              page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n                              id: proposal.value,\\\\\\\\n                            },\\\\\\\\n                          })}\\\\\\\\n                          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                          rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                        >\\\\\\\\n                          {proposal.label}\\\\\\\\n                        </a>\\\\\\\\n                        <div\\\\\\\\n                          className=\\\\\\\\\\\\\\\"cursor-pointer\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={() => {\\\\\\\\n                            const updatedLinkedProposals =\\\\\\\\n                              linkedProposals.filter(\\\\\\\\n                                (item) => item.value !== proposal.value\\\\\\\\n                              );\\\\\\\\n                            setLinkedProposals(updatedLinkedProposals);\\\\\\\\n                          }}\\\\\\\\n                        >\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-trash3-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        </div>\\\\\\\\n                      </div>\\\\\\\\n                    );\\\\\\\\n                  })}\\\\\\\\n                  <Widget\\\\\\\\n                    src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDownWithSearch\\\\\\\\\\\\\\\"\\\\\\\\n                    props={{\\\\\\\\n                      selectedValue: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                      onChange: (v) => {\\\\\\\\n                        if (\\\\\\\\n                          !linkedProposals.some(\\\\\\\\n                            (item) => item.value === v.value\\\\\\\\n                          )\\\\\\\\n                        ) {\\\\\\\\n                          setLinkedProposals([...linkedProposals, v]);\\\\\\\\n                        }\\\\\\\\n                      },\\\\\\\\n                      options: proposalsOptions,\\\\\\\\n                      showSearch: true,\\\\\\\\n                      searchInputPlaceholder: \\\\\\\\\\\\\\\"Search by Id\\\\\\\\\\\\\\\",\\\\\\\\n                      defaultLabel: \\\\\\\\\\\\\\\"Search proposals\\\\\\\\\\\\\\\",\\\\\\\\n                      searchByValue: true,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n              </CollapsibleContainer>\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"my-2\\\\\\\\\\\\\\\">\\\\\\\\n              <CollapsibleContainer title=\\\\\\\\\\\\\\\"Funding Details\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 gap-sm-4\\\\\\\\\\\\\\\">\\\\\\\\n                  <InputContainer\\\\\\\\n                    heading=\\\\\\\\\\\\\\\"Recipient NEAR Wallet Address\\\\\\\\\\\\\\\"\\\\\\\\n                    description=\\\\\\\\\\\\\\\"Enter the address that will receive the funds. We\\\\\\\\u{2019}ll need this to send a test transaction once your proposal is approved.\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    <Widget\\\\\\\\n                      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AccountInput\\\\\\\\\\\\\\\"\\\\\\\\n                      props={{\\\\\\\\n                        value: receiverAccount,\\\\\\\\n                        placeholder: devdaoAccount,\\\\\\\\n                        onUpdate: setReceiverAccount,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </InputContainer>\\\\\\\\n                  <InputContainer\\\\\\\\n                    heading={\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                        Recipient Verification Status\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"custom-tooltip\\\\\\\\\\\\\\\">\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-info-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                          <span class=\\\\\\\\\\\\\\\"tooltiptext\\\\\\\\\\\\\\\">\\\\\\\\n                            To get approved and receive payments on our\\\\\\\\n                            platform, you must complete KYC/KYB verification\\\\\\\\n                            using Fractal, a trusted identity verification\\\\\\\\n                            solution. This helps others trust transactions with\\\\\\\\n                            your account. Click \\\\\\\\\\\\\\\"Get Verified\\\\\\\\\\\\\\\" to start. <br />\\\\\\\\n                            <br />\\\\\\\\n                            Once verified, your profile will display a badge,\\\\\\\\n                            which is valid for 365 days from the date of your\\\\\\\\n                            verification. You must renew your verification upon\\\\\\\\n                            expiration OR if any of your personal information\\\\\\\\n                            changes.\\\\\\\\n                          </span>\\\\\\\\n                        </div>\\\\\\\\n                      </div>\\\\\\\\n                    }\\\\\\\\n                    description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"border border-1 p-3 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.VerificationStatus\\\\\\\\\\\\\\\"\\\\\\\\n                        props={{\\\\\\\\n                          receiverAccount: receiverAccount,\\\\\\\\n                          showGetVerifiedBtn: true,\\\\\\\\n                          imageSize: 30,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </InputContainer>\\\\\\\\n                  <InputContainer\\\\\\\\n                    heading=\\\\\\\\\\\\\\\"Total Amount (USD)\\\\\\\\\\\\\\\"\\\\\\\\n                    description={\\\\\\\\n                      <>\\\\\\\\n                        Enter the exact amount you are seeking. See\\\\\\\\n                        <a\\\\\\\\n                          href={FundingDocs}\\\\\\\\n                          className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                          target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                          rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                        >\\\\\\\\n                          Funding Documentation\\\\\\\\n                        </a>\\\\\\\\n                        for guidelines.\\\\\\\\n                      </>\\\\\\\\n                    }\\\\\\\\n                  >\\\\\\\\n                    <Widget\\\\\\\\n                      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n                      props={{\\\\\\\\n                        className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                        value: requestedSponsorshipAmount,\\\\\\\\n                        onChange: (e) => {\\\\\\\\n                          const inputValue = e.target.value;\\\\\\\\n                          if (!inputValue) {\\\\\\\\n                            return;\\\\\\\\n                          }\\\\\\\\n                          let isValidInteger = /^[1-9][0-9]*$/.test(inputValue);\\\\\\\\n                          if (!isValidInteger) {\\\\\\\\n                            setAmountError(\\\\\\\\n                              \\\\\\\\\\\\\\\"Please enter the nearest positive whole number.\\\\\\\\\\\\\\\"\\\\\\\\n                            );\\\\\\\\n                          } else {\\\\\\\\n                            setRequestedSponsorshipAmount(inputValue);\\\\\\\\n                            setAmountError(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\");\\\\\\\\n                          }\\\\\\\\n                        },\\\\\\\\n                        skipPaddingGap: true,\\\\\\\\n                        inputProps: {\\\\\\\\n                          type: \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\",\\\\\\\\n                          prefix: \\\\\\\\\\\\\\\"$\\\\\\\\\\\\\\\",\\\\\\\\n                          inputmode: \\\\\\\\\\\\\\\"numeric\\\\\\\\\\\\\\\",\\\\\\\\n                          pattern: \\\\\\\\\\\\\\\"[0-9]*\\\\\\\\\\\\\\\",\\\\\\\\n                        },\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                    {amountError && (\\\\\\\\n                      <div style={{ color: \\\\\\\\\\\\\\\"red\\\\\\\\\\\\\\\" }} className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">\\\\\\\\n                        {amountError}\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </InputContainer>\\\\\\\\n                  <InputContainer\\\\\\\\n                    heading=\\\\\\\\\\\\\\\"Currency\\\\\\\\\\\\\\\"\\\\\\\\n                    description=\\\\\\\\\\\\\\\"Select your preferred currency for receiving funds. Note: The exchange rate for NEAR tokens will be the closing rate at the day of the invoice.\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    <Widget\\\\\\\\n                      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n                      props={{\\\\\\\\n                        options: tokensOptions,\\\\\\\\n                        selectedValue: requestedSponsorshipToken,\\\\\\\\n                        onUpdate: (v) => {\\\\\\\\n                          setRequestedSponsorshipToken(v);\\\\\\\\n                        },\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </InputContainer>\\\\\\\\n                  <InputContainer heading=\\\\\\\\\\\\\\\"Requested Sponsor\\\\\\\\\\\\\\\" description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\">\\\\\\\\n                    <Widget\\\\\\\\n                      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AccountInput\\\\\\\\\\\\\\\"\\\\\\\\n                      props={{\\\\\\\\n                        value: requestedSponsor,\\\\\\\\n                        placeholder: \\\\\\\\\\\\\\\"DevDAO\\\\\\\\\\\\\\\",\\\\\\\\n                        onUpdate: setRequestedSponsor,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </InputContainer>\\\\\\\\n                  <InputContainer\\\\\\\\n                    heading=\\\\\\\\\\\\\\\"Supervisor (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                    description=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                  >\\\\\\\\n                    <Widget\\\\\\\\n                      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AccountInput\\\\\\\\\\\\\\\"\\\\\\\\n                      props={{\\\\\\\\n                        value: supervisor,\\\\\\\\n                        onUpdate: setSupervisor,\\\\\\\\n                      }}\\\\\\\\n                    />\\\\\\\\n                  </InputContainer>\\\\\\\\n                </div>\\\\\\\\n              </CollapsibleContainer>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n\"}, \"devhub.entity.proposal.Proposal\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\") || {\\\\\\\\n  href: () => {},\\\\\\\\n};\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.common\\\\\\\\\\\\\\\"\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\nconst { getDepositAmountForWriteAccess } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.common\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\ngetDepositAmountForWriteAccess || (getDepositAmountForWriteAccess = () => {});\\\\\\\\n\\\\\\\\nconst accountId = context.accountId;\\\\\\\\n/*\\\\\\\\n---props---\\\\\\\\nprops.id: number;\\\\\\\\nprops.timestamp: number; optional\\\\\\\\n*/\\\\\\\\n\\\\\\\\nconst TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .description-box {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .draft-info-container {\\\\\\\\n    background-color: #ecf8fb;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .review-info-container {\\\\\\\\n    background-color: #fef6ee;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-3 {\\\\\\\\n    flex: 3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 20px;\\\\\\\\n    height: 20px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 180px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 135px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 180px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 75px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line-sm {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 70px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:disabled ~ .form-check-label,\\\\\\\\n  .form-check-input[disabled] ~ .form-check-label {\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input {\\\\\\\\n    border-color: black !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-btn {\\\\\\\\n    background-color: #687076;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-vertical {\\\\\\\\n    border-top: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n    border-bottom: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  button.px-0 {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  red-icon i {\\\\\\\\n    color: red;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ProposalContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Text = styled.p`\\\\\\\\n  display: block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 20px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  white-space: nowrap;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 12px;\\\\\\\\n  margin: -6px -6px 6px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst stepsArray = [1, 2, 3, 4, 5];\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\nconst proposal = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n  proposal_id: parseInt(id),\\\\\\\\n});\\\\\\\\n\\\\\\\\nif (!proposal) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Spinner\\\\\\\\\\\\\\\"}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nif (timestamp && proposal) {\\\\\\\\n  proposal.snapshot =\\\\\\\\n    proposal.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n    proposal.snapshot;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { snapshot } = proposal;\\\\\\\\n\\\\\\\\nconst authorId = proposal.author_id;\\\\\\\\nconst blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\nconst item = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n  path: `devhub.near/post/main`,\\\\\\\\n  blockHeight,\\\\\\\\n};\\\\\\\\nconst proposalURL = `https://near.org/devhub.near/widget/app?page=proposal&id=${proposal.id}&timestamp=${snapshot.timestamp}`;\\\\\\\\n\\\\\\\\nconst KycVerificationStatus = () => {\\\\\\\\n  const isVerified = true;\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <img\\\\\\\\n        src={\\\\\\\\n          isVerified\\\\\\\\n            ? \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreidqveupkcc7e3rko2e67lztsqrfnjzw3ceoajyglqeomvv7xznusm\\\\\\\\\\\\\\\"\\\\\\\\n            : \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreieq4222tf3hkbccfnbw5kpgedm3bf2zcfgzbnmismxav2phqdwd7q\\\\\\\\\\\\\\\"\\\\\\\\n        }\\\\\\\\n        height={40}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">KYC Verified</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">Expires on Aug 24, 2024</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst SidePanelItem = ({ title, children, hideBorder }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ gap: \\\\\\\\\\\\\\\"8px\\\\\\\\\\\\\\\" }}\\\\\\\\n      className={\\\\\\\\\\\\\\\"d-flex flex-column pb-3 \\\\\\\\\\\\\\\" + (!hideBorder && \\\\\\\\\\\\\\\" border-bottom\\\\\\\\\\\\\\\")}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{title} </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst proposalStatusOptions = [\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Draft\\\\\\\\\\\\\\\",\\\\\\\\n    value: { status: TIMELINE_STATUS.DRAFT },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Review\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.REVIEW,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.APPROVED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved-Conditionally\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Rejected\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.REJECTED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.CANCELED,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Payment-processing\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n      kyc_verified: false,\\\\\\\\n      test_transaction_sent: false,\\\\\\\\n      request_for_trustees_created: false,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Funded\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.FUNDED,\\\\\\\\n      trustees_released_payment: true,\\\\\\\\n      kyc_verified: true,\\\\\\\\n      test_transaction_sent: true,\\\\\\\\n      request_for_trustees_created: true,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst LinkedProposals = () => {\\\\\\\\n  const linkedProposalsData = [];\\\\\\\\n  snapshot.linked_proposals.map((item) => {\\\\\\\\n    const data = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n      proposal_id: item,\\\\\\\\n    });\\\\\\\\n    if (data !== null) {\\\\\\\\n      linkedProposalsData.push(data);\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      {linkedProposalsData.map((item) => {\\\\\\\\n        const link = `https://near.org/devhub.near/widget/app?page=proposal&id=${item.id}`;\\\\\\\\n        return (\\\\\\\\n          <a href={link} target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\" rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  accountId: item.snapshot.editor_id,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\" style={{ maxWidth: 250 }}>\\\\\\\\n                <b className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">{item.snapshot.name}</b>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                  created on {readableDate(item.snapshot.timestamp / 1000000)}\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </a>\\\\\\\\n        );\\\\\\\\n      })}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CheckBox = ({ value, isChecked, label, disabled, onClick }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"checkbox\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={!isModerator || !showTimelineSetting || disabled}\\\\\\\\n        onChange={(e) => onClick(e.target.checked)}\\\\\\\\n      />\\\\\\\\n      <label style={{ width: \\\\\\\\\\\\\\\"90%\\\\\\\\\\\\\\\" }} class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">\\\\\\\\n        {label}\\\\\\\\n      </label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst RadioButton = ({ value, isChecked, label }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={true}\\\\\\\\n      />\\\\\\\\n      <label class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isAllowedToEditProposal = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    proposal_id: proposal.id,\\\\\\\\n    editor: accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"has_moderator\\\\\\\\\\\\\\\", {\\\\\\\\n  account_id: accountId,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst editProposal = ({ timeline }) => {\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n    name: snapshot.name,\\\\\\\\n    description: snapshot.description,\\\\\\\\n    category: snapshot.category,\\\\\\\\n    summary: snapshot.summary,\\\\\\\\n    linked_proposals: snapshot.linked_proposals,\\\\\\\\n    requested_sponsorship_usd_amount: snapshot.requested_sponsorship_usd_amount,\\\\\\\\n    requested_sponsorship_paid_in_currency:\\\\\\\\n      snapshot.requested_sponsorship_paid_in_currency,\\\\\\\\n    receiver_account: snapshot.receiver_account,\\\\\\\\n    supervisor: supervisor || null,\\\\\\\\n    requested_sponsor: snapshot.requested_sponsor,\\\\\\\\n    timeline: timeline,\\\\\\\\n  };\\\\\\\\n  const args = { labels: [], body: body, id: proposal.id };\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst editProposalStatus = ({ timeline }) => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal_timeline\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: proposal.id,\\\\\\\\n        timeline: timeline,\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\nconst [showTimelineSetting, setShowTimelineSetting] = useState(false);\\\\\\\\nconst proposalStatus = useCallback(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.find(\\\\\\\\n      (i) => i.value.status === snapshot.timeline.status\\\\\\\\n    ),\\\\\\\\n  [snapshot]\\\\\\\\n);\\\\\\\\nconst [updatedProposalStatus, setUpdatedProposalStatus] = useState({\\\\\\\\n  ...proposalStatus(),\\\\\\\\n  value: { ...proposalStatus().value, ...snapshot.timeline },\\\\\\\\n});\\\\\\\\nconst [paymentHashes, setPaymentHashes] = useState([\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"]);\\\\\\\\nconst [supervisor, setSupervisor] = useState(snapshot.supervisor);\\\\\\\\n\\\\\\\\nconst selectedStatusIndex = useMemo(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.findIndex((i) => {\\\\\\\\n      return updatedProposalStatus.value.status === i.value.status;\\\\\\\\n    }),\\\\\\\\n  [updatedProposalStatus]\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst TimelineItems = ({ title, children, value, values }) => {\\\\\\\\n  const indexOfCurrentItem = proposalStatusOptions.findIndex((i) =>\\\\\\\\n    Array.isArray(values)\\\\\\\\n      ? values.includes(i.value.status)\\\\\\\\n      : value === i.value.status\\\\\\\\n  );\\\\\\\\n  let color = \\\\\\\\\\\\\\\"transparent\\\\\\\\\\\\\\\";\\\\\\\\n  let statusIndex = selectedStatusIndex;\\\\\\\\n\\\\\\\\n  // index 2,3,4,5  is of decision\\\\\\\\n  if (selectedStatusIndex === 3 || selectedStatusIndex === 2) {\\\\\\\\n    statusIndex = 2;\\\\\\\\n  }\\\\\\\\n  if (statusIndex === indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FEF6EE\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  if (\\\\\\\\n    statusIndex > indexOfCurrentItem ||\\\\\\\\n    updatedProposalStatus.value.status === TIMELINE_STATUS.FUNDED\\\\\\\\n  ) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#EEFEF0\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // reject\\\\\\\\n  if (statusIndex === 4 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FF7F7F\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // cancelled\\\\\\\\n  if (statusIndex === 5 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"p-2 rounded-3\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        backgroundColor: color,\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 text-black\\\\\\\\\\\\\\\"> {title}</div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst link = href({\\\\\\\\n  widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n  params: {\\\\\\\\n    page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\",\\\\\\\\n    id: proposal.id,\\\\\\\\n    timestamp: timestamp,\\\\\\\\n  },\\\\\\\\n});\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmReviewModal\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[1].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmCancelModal\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[5].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex px-3 px-lg-0 justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center h3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>{snapshot.name}</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">#{proposal.id}</div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"near/widget/ShareButton\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            url: proposalURL,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        {((isAllowedToEditProposal &&\\\\\\\\n          snapshot.timeline.status === TIMELINE_STATUS.DRAFT) ||\\\\\\\\n          isModerator) && (\\\\\\\\n          <Link to={link} style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap flex-md-nowrap px-3 px-lg-0 gap-2 align-items-center text-sm pb-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          timelineStatus: snapshot.timeline.status,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"w-100 d-flex flex-wrap flex-md-nowrap gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\">{authorId} </div>\\\\\\\\n        <div>created on {readableDate(snapshot.timestamp / 1000000)}</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 full-width-div px-3 px-lg-0\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4\\\\\\\\\\\\\\\">\\\\\\\\n        {snapshot.timeline.status === TIMELINE_STATUS.DRAFT &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"draft-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in draft mode and open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  The author can still refine the proposal and build consensus\\\\\\\\n                  before sharing it with sponsors. Click \\\\\\\\u{201c}Ready for review\\\\\\\\u{201d} when\\\\\\\\n                  you want to start the official review process. This will lock\\\\\\\\n                  the editing function, but comments are still open.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    label: \\\\\\\\\\\\\\\"Ready for review\\\\\\\\\\\\\\\",\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setReviewModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        {snapshot.timeline.status === TIMELINE_STATUS.REVIEW &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"review-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in review mode and still open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  You can\\\\\\\\u{2019}t edit the proposal, but comments are open. Only\\\\\\\\n                  moderators can make changes. Click \\\\\\\\u{201c}Cancel Proposal\\\\\\\\u{201d} to cancel\\\\\\\\n                  your proposal. This changes the status to Canceled, signaling\\\\\\\\n                  to sponsors that it\\\\\\\\u{2019}s no longer active or relevant.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    label: (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                      </div>\\\\\\\\n                    ),\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"btn-outline-danger btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setCancelModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"my-4\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-6\\\\\\\\\\\\\\\">\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"flex-3 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{\\\\\\\\n                  zIndex: 9999,\\\\\\\\n                  background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                  <Widget\\\\\\\\n                    src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n                    props={{\\\\\\\\n                      accountId: authorId,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n                <ProposalContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Header className=\\\\\\\\\\\\\\\"d-flex gap-1 align-items-center p-2 px-3 \\\\\\\\\\\\\\\">\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ maxWidth: \\\\\\\\\\\\\\\"60%\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      {authorId}\\\\\\\\n                    </div>\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <Widget\\\\\\\\n                        src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n                        props={{\\\\\\\\n                          blockHeight,\\\\\\\\n                          blockTimestamp: snapshot.timestamp,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      {context.accountId && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                          <Widget\\\\\\\\n                            src=\\\\\\\\\\\\\\\"near/widget/Posts.Menu\\\\\\\\\\\\\\\"\\\\\\\\n                            props={{\\\\\\\\n                              accountId: authorId,\\\\\\\\n                              blockHeight: blockHeight,\\\\\\\\n                            }}\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </Header>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 p-2 px-3 description-box\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      PROPOSAL CATEGORY\\\\\\\\n                    </div>\\\\\\\\n                    <div>\\\\\\\\n                      <Widget\\\\\\\\n                        src={\\\\\\\\n                          \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CategoryDropdown\\\\\\\\\\\\\\\"\\\\\\\\n                        }\\\\\\\\n                        props={{\\\\\\\\n                          selectedValue: snapshot.category,\\\\\\\\n                          disabled: true,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      SUMMARY\\\\\\\\n                    </div>\\\\\\\\n                    <div>{snapshot.summary}</div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n                      DESCRIPTION\\\\\\\\n                    </div>\\\\\\\\n                    <Widget\\\\\\\\n                      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n                      props={{ text: snapshot.description }}\\\\\\\\n                    />\\\\\\\\n\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.LikeButton\\\\\\\\\\\\\\\"\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          proposalId: proposal.id,\\\\\\\\n                          notifyAccountId: authorId,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={\\\\\\\\n                          \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CommentIcon\\\\\\\\\\\\\\\"\\\\\\\\n                        }\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          showOverlay: false,\\\\\\\\n                          onClick: () => {},\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src=\\\\\\\\\\\\\\\"near/widget/CopyUrlButton\\\\\\\\\\\\\\\"\\\\\\\\n                        props={{\\\\\\\\n                          url: proposalURL,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                </ProposalContainer>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CommentsAndLogs\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    item: item,\\\\\\\\n                    snapshotHistory: [...proposal.snapshot_history, snapshot],\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div\\\\\\\\n                style={{\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                className=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ComposeComment\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    item: item,\\\\\\\\n                    notifyAccountId: authorId,\\\\\\\\n                    id: proposal.id,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 flex-1 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: authorId,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"Linked Proposals \\\\\\\\\\\\\\\" + `(${snapshot.linked_proposals.length})`\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <LinkedProposals />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Funding Ask\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"h4 text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {snapshot.requested_sponsorship_usd_amount && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                      <div>\\\\\\\\n                        {parseInt(\\\\\\\\n                          snapshot.requested_sponsorship_usd_amount\\\\\\\\n                        ).toLocaleString()}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        USD\\\\\\\\n                      </div>\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                        Requested in{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        {snapshot.requested_sponsorship_paid_in_currency}\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Wallet Address\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: snapshot.receiver_account,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Verification Status\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.VerificationStatus\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    receiverAccount: snapshot.receiver_account,\\\\\\\\n                    showGetVerifiedBtn:\\\\\\\\n                      accountId === snapshot.receiver_account ||\\\\\\\\n                      accountId === authorId,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Requested Sponsor\\\\\\\\\\\\\\\">\\\\\\\\n                {snapshot.requested_sponsor && (\\\\\\\\n                  <Widget\\\\\\\\n                    src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                    props={{\\\\\\\\n                      accountId: snapshot.requested_sponsor,\\\\\\\\n                      noOverlay: true,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                )}\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Supervisor\\\\\\\\\\\\\\\">\\\\\\\\n                {snapshot.supervisor ? (\\\\\\\\n                  <Widget\\\\\\\\n                    src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                    props={{\\\\\\\\n                      accountId: snapshot.supervisor,\\\\\\\\n                      noOverlay: true,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                ) : (\\\\\\\\n                  \\\\\\\\\\\\\\\"No Supervisor\\\\\\\\\\\\\\\"\\\\\\\\n                )}\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                hideBorder={true}\\\\\\\\n                title={\\\\\\\\n                  <div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Timeline\\\\\\\\n                      {isModerator && (\\\\\\\\n                        <div onClick={() => setShowTimelineSetting(true)}>\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                    {showTimelineSetting && (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"mt-2 d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <h6 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Proposal Status</h6>\\\\\\\\n                        <Widget\\\\\\\\n                          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n                          props={{\\\\\\\\n                            options: proposalStatusOptions,\\\\\\\\n                            selectedValue: updatedProposalStatus,\\\\\\\\n                            onUpdate: (v) => {\\\\\\\\n                              setUpdatedProposalStatus({\\\\\\\\n                                ...v,\\\\\\\\n                                value: {\\\\\\\\n                                  ...v.value,\\\\\\\\n                                  ...updatedProposalStatus.value,\\\\\\\\n                                  status: v.value.status,\\\\\\\\n                                },\\\\\\\\n                              });\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-3 mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n                      {stepsArray.map((_, index) => {\\\\\\\\n                        const indexOfCurrentItem = index;\\\\\\\\n                        let color = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n                        let statusIndex = selectedStatusIndex;\\\\\\\\n                        // index 2,3,4 is of decision\\\\\\\\n                        if (\\\\\\\\n                          selectedStatusIndex === 3 ||\\\\\\\\n                          selectedStatusIndex === 2 ||\\\\\\\\n                          selectedStatusIndex === 4 ||\\\\\\\\n                          selectedStatusIndex === 5\\\\\\\\n                        ) {\\\\\\\\n                          statusIndex = 2;\\\\\\\\n                        }\\\\\\\\n                        if (selectedStatusIndex === 6) {\\\\\\\\n                          statusIndex = 3;\\\\\\\\n                        }\\\\\\\\n                        const current = statusIndex === indexOfCurrentItem;\\\\\\\\n                        const completed =\\\\\\\\n                          statusIndex > indexOfCurrentItem ||\\\\\\\\n                          updatedProposalStatus.value.status ===\\\\\\\\n                            TIMELINE_STATUS.FUNDED;\\\\\\\\n                        return (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <div\\\\\\\\n                              className={\\\\\\\\n                                \\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" +\\\\\\\\n                                (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                              }\\\\\\\\n                            >\\\\\\\\n                              {completed && (\\\\\\\\n                                <div\\\\\\\\n                                  className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n                                  style={{ height: \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" }}\\\\\\\\n                                >\\\\\\\\n                                  <i class=\\\\\\\\\\\\\\\"bi bi-check\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                </div>\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n\\\\\\\\n                            {index !== stepsArray.length - 1 && (\\\\\\\\n                              <div\\\\\\\\n                                className={\\\\\\\\n                                  \\\\\\\\\\\\\\\"vertical-line\\\\\\\\\\\\\\\" +\\\\\\\\n                                  (index === stepsArray.length - 2\\\\\\\\n                                    ? \\\\\\\\\\\\\\\"-sm \\\\\\\\\\\\\\\"\\\\\\\\n                                    : \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                                }\\\\\\\\n                              ></div>\\\\\\\\n                            )}\\\\\\\\n                          </div>\\\\\\\\n                        );\\\\\\\\n                      })}\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"1) Draft\\\\\\\\\\\\\\\"\\\\\\\\n                        value={TIMELINE_STATUS.DRAFT}\\\\\\\\n                      >\\\\\\\\n                        <div>\\\\\\\\n                          Once an author submits a proposal, it is in draft mode\\\\\\\\n                          and open for community comments. The author can still\\\\\\\\n                          make changes to the proposal during this stage and\\\\\\\\n                          submit it for official review when ready.\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"2) Review\\\\\\\\\\\\\\\"\\\\\\\\n                        value={TIMELINE_STATUS.REVIEW}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          Sponsors who agree to consider the proposal may\\\\\\\\n                          request attestations from work groups.\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  sponsor_requested_review: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor provides feedback or requests reviews\\\\\\\\\\\\\\\"\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .sponsor_requested_review\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Reviewer completes attestations (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  reviewer_completed_attestation: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .reviewer_completed_attestation\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"3) Decision\\\\\\\\\\\\\\\"\\\\\\\\n                        values={[\\\\\\\\n                          TIMELINE_STATUS.APPROVED,\\\\\\\\n                          TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n                          TIMELINE_STATUS.REJECTED,\\\\\\\\n                        ]}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <div>Sponsor makes a final decision:</div>\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Approved</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              TIMELINE_STATUS.APPROVED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={\\\\\\\\n                              <>\\\\\\\\n                                <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                                  Approved - Conditional{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                                </div>\\\\\\\\n                                <span>\\\\\\\\n                                  Require follow up from recipient after payment\\\\\\\\n                                </span>\\\\\\\\n                              </>\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              TIMELINE_STATUS.APPROVED_CONDITIONALLY\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Reject\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Rejected</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              TIMELINE_STATUS.REJECTED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Canceled</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              TIMELINE_STATUS.CANCELED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"4) Payment Processing\\\\\\\\\\\\\\\"\\\\\\\\n                        value={TIMELINE_STATUS.PAYMENT_PROCESSING}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor verifies KYC/KYB\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  kyc_verified: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor confirmed sponsorship and shared funding steps with recipient\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  test_transaction_sent: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          {/* Not needed for Alpha testing */}\\\\\\\\n                          {/* <CheckBox\\\\\\\\n                          value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                          disabled={selectedStatusIndex !== 6}\\\\\\\\n                          label=\\\\\\\\\\\\\\\"Sponsor sends test transaction\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={(value) =>\\\\\\\\n                            setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                              ...prevState,\\\\\\\\n                              value: {\\\\\\\\n                                ...prevState.value,\\\\\\\\n                                test_transaction_sent: value\\\\\\\\n                              }\\\\\\\\n                            }))\\\\\\\\n                          }\\\\\\\\n                          isChecked={\\\\\\\\n                            updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                          }\\\\\\\\n                        />\\\\\\\\n                        <CheckBox\\\\\\\\n                          value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                          disabled={selectedStatusIndex !== 6}\\\\\\\\n                          label=\\\\\\\\\\\\\\\"Sponsor creates funding request from Trustees\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={(value) =>\\\\\\\\n                            setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                              ...prevState,\\\\\\\\n                              value: {\\\\\\\\n                                ...prevState.value,\\\\\\\\n                                request_for_trustees_created: value\\\\\\\\n                              }\\\\\\\\n                            }))\\\\\\\\n                          }\\\\\\\\n                          isChecked={\\\\\\\\n                            updatedProposalStatus.value\\\\\\\\n                              .request_for_trustees_created\\\\\\\\n                          }\\\\\\\\n                        /> */}\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"5) Funded\\\\\\\\\\\\\\\"\\\\\\\\n                        value={TIMELINE_STATUS.FUNDED}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          {paymentHashes?.length && paymentHashes[0] ? (\\\\\\\\n                            paymentHashes.map((link) => (\\\\\\\\n                              <a\\\\\\\\n                                href={link}\\\\\\\\n                                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                              >\\\\\\\\n                                Payment Link\\\\\\\\n                                <i class=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                              </a>\\\\\\\\n                            ))\\\\\\\\n                          ) : updatedProposalStatus.value.payouts.length > 0 ? (\\\\\\\\n                            <div>\\\\\\\\n                              {updatedProposalStatus.value.payouts.map(\\\\\\\\n                                (link) => {\\\\\\\\n                                  return (\\\\\\\\n                                    <a\\\\\\\\n                                      href={link}\\\\\\\\n                                      className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                                    >\\\\\\\\n                                      Payment Link\\\\\\\\n                                      <i class=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                    </a>\\\\\\\\n                                  );\\\\\\\\n                                }\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n                          ) : (\\\\\\\\n                            \\\\\\\\\\\\\\\"No Payouts yet\\\\\\\\\\\\\\\"\\\\\\\\n                          )}\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                  {showTimelineSetting && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">Supervisor</label>\\\\\\\\n                        <Widget\\\\\\\\n                          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AccountInput\\\\\\\\\\\\\\\"\\\\\\\\n                          props={{\\\\\\\\n                            value: supervisor,\\\\\\\\n                            placeholder: \\\\\\\\\\\\\\\"Enter Supervisor\\\\\\\\\\\\\\\",\\\\\\\\n                            onUpdate: setSupervisor,\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                      {updatedProposalStatus.value.status ===\\\\\\\\n                        TIMELINE_STATUS.FUNDED && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">Payment Link</label>\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                            {paymentHashes.map((item, index) => (\\\\\\\\n                              <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-between align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                                <Widget\\\\\\\\n                                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n                                  props={{\\\\\\\\n                                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                                    value: item,\\\\\\\\n                                    onChange: (e) => {\\\\\\\\n                                      const updatedHashes = [...paymentHashes];\\\\\\\\n                                      updatedHashes[index] = e.target.value;\\\\\\\\n                                      setPaymentHashes(updatedHashes);\\\\\\\\n                                    },\\\\\\\\n                                    skipPaddingGap: true,\\\\\\\\n                                    placeholder: \\\\\\\\\\\\\\\"Enter URL\\\\\\\\\\\\\\\",\\\\\\\\n                                  }}\\\\\\\\n                                />\\\\\\\\n                                <div style={{ minWidth: 20 }}>\\\\\\\\n                                  {index !== paymentHashes.length - 1 ? (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={\\\\\\\\n                                        \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                                      }\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-trash3 h6\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () => {\\\\\\\\n                                          const updatedHashes = [\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                          ];\\\\\\\\n                                          updatedHashes.splice(index, 1);\\\\\\\\n                                          setPaymentHashes(updatedHashes);\\\\\\\\n                                        },\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  ) : (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={\\\\\\\\n                                        \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                                      }\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"green-btn shadow-none border-0 w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-plus-lg\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () =>\\\\\\\\n                                          setPaymentHashes([\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                            \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                                          ]),\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  )}\\\\\\\\n                                </div>\\\\\\\\n                              </div>\\\\\\\\n                            ))}\\\\\\\\n                          </div>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end text-sm\\\\\\\\\\\\\\\">\\\\\\\\n                        <Widget\\\\\\\\n                          src={\\\\\\\\n                            \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                          }\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                            classNames: {\\\\\\\\n                              root: \\\\\\\\\\\\\\\"btn-outline-danger border-0 shadow-none btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              setShowTimelineSetting(false);\\\\\\\\n                              setUpdatedProposalStatus(proposalStatus);\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                        <Widget\\\\\\\\n                          src={\\\\\\\\n                            \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                          }\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                            disabled: !supervisor,\\\\\\\\n                            classNames: { root: \\\\\\\\\\\\\\\"green-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              if (!supervisor) {\\\\\\\\n                                return;\\\\\\\\n                              }\\\\\\\\n                              if (snapshot.supervisor !== supervisor) {\\\\\\\\n                                editProposal({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              } else if (\\\\\\\\n                                updatedProposalStatus.value.status ===\\\\\\\\n                                TIMELINE_STATUS.FUNDED\\\\\\\\n                              ) {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: {\\\\\\\\n                                    ...updatedProposalStatus.value,\\\\\\\\n                                    payouts: !paymentHashes[0]\\\\\\\\n                                      ? []\\\\\\\\n                                      : paymentHashes.filter(\\\\\\\\n                                          (item) => item !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                                        ),\\\\\\\\n                                  },\\\\\\\\n                                });\\\\\\\\n                              } else {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              }\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.StatusTag\": {\"\": \"const timelineStatus = props.timelineStatus;\\\\\\\\nconst size = props.size ?? \\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nconst getClassNameByStatus = () => {\\\\\\\\n  switch (timelineStatus) {\\\\\\\\n    case \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"grey\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"blue\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"orange\\\\\\\\\\\\\\\";\\\\\\\\n    case \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\":\\\\\\\\n      return \\\\\\\\\\\\\\\"warning\\\\\\\\\\\\\\\";\\\\\\\\n    default:\\\\\\\\n      return \\\\\\\\\\\\\\\"green\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  font-size: ${({ size }) => {\\\\\\\\n    switch (size) {\\\\\\\\n      case \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\":\\\\\\\\n        return \\\\\\\\\\\\\\\"10px\\\\\\\\\\\\\\\";\\\\\\\\n      case \\\\\\\\\\\\\\\"lg\\\\\\\\\\\\\\\":\\\\\\\\n        return \\\\\\\\\\\\\\\"14px\\\\\\\\\\\\\\\";\\\\\\\\n      default:\\\\\\\\n        return \\\\\\\\\\\\\\\"12px\\\\\\\\\\\\\\\";\\\\\\\\n    }\\\\\\\\n  }};\\\\\\\\n\\\\\\\\n  max-width: fit-content;\\\\\\\\n\\\\\\\\n  .orange-tag {\\\\\\\\n    border: 1px solid #ff7a00 !important;\\\\\\\\n    color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .warning-tag {\\\\\\\\n    border: 1px solid #f40303 !important;\\\\\\\\n    color: #f40303 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .blue-tag {\\\\\\\\n    border: 1px solid #2c3e50 !important;\\\\\\\\n    color: #2c3e50 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-tag {\\\\\\\\n    border: 1px solid #979797 !important;\\\\\\\\n    color: #979797 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-tag {\\\\\\\\n    border: 1px solid #04a46e !important;\\\\\\\\n    color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container size={size}>\\\\\\\\n    <div className={getClassNameByStatus() + \\\\\\\\\\\\\\\"-tag fw-bold rounded-2 p-1 px-2\\\\\\\\\\\\\\\"}>\\\\\\\\n      {(timelineStatus ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.feature.post-search.panel\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nhref || (href = () => {});\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  tag: props.tag,\\\\\\\\n  author: props.author,\\\\\\\\n  term: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst updateInput = (term) => {\\\\\\\\n  State.update({\\\\\\\\n    term: term,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst buttonStyle = {\\\\\\\\n  backgroundColor: \\\\\\\\\\\\\\\"#0C7283\\\\\\\\\\\\\\\",\\\\\\\\n  color: \\\\\\\\\\\\\\\"#f3f3f3\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst PageTitle = styled.h1`\\\\\\\\n  color: #555555;\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 500;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.24px;\\\\\\\\n\\\\\\\\n  margin: 0;\\\\\\\\n  margin-bottom: 1rem;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  padding: 24px;\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst PostContainer = styled.div`\\\\\\\\n  margin: 0 1rem;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst InputContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  position: relative;\\\\\\\\n  width: 25%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst DropdownContainer = styled.div`\\\\\\\\n  width: 25%;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    width: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst StyledDropdown = styled.div`\\\\\\\\n  button {\\\\\\\\n    width: 100%;\\\\\\\\n    text-align: left;\\\\\\\\n\\\\\\\\n    &::after {\\\\\\\\n      position: absolute;\\\\\\\\n      right: 8px;\\\\\\\\n      top: 45%;\\\\\\\\n      transform: translateX(-50%);\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst BannerWrapper = styled.div`\\\\\\\\n  background-color: #ffd2d2;\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <>\\\\\\\\n    {!props.hideHeader && (\\\\\\\\n      <Container>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <BannerWrapper className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center mb-4 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div>\\\\\\\\n              <i class=\\\\\\\\\\\\\\\"bi bi-exclamation-triangle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n            </div>\\\\\\\\n            <div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">This page is now archived! </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">\\\\\\\\n                For submitting formal funding proposals from DevDAO, please\\\\\\\\n                visit the new{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                <a\\\\\\\\n                  href=\\\\\\\\\\\\\\\"https://near.org/devhub.near/widget/app?page=proposals\\\\\\\\\\\\\\\"\\\\\\\\n                  className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                  target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  Proposal Feed\\\\\\\\n                </a>\\\\\\\\n                . To brainstorm and share ideas, please visit the relevant{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                <a\\\\\\\\n                  href=\\\\\\\\\\\\\\\"https://near.org/devhub.near/widget/app?page=communities\\\\\\\\\\\\\\\"\\\\\\\\n                  className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                  target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                  rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  communities\\\\\\\\n                </a>\\\\\\\\n                .\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </BannerWrapper>\\\\\\\\n          <PageTitle>Activity Feed</PageTitle>\\\\\\\\n          <div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex flex-column flex-md-row gap-4\\\\\\\\\\\\\\\">\\\\\\\\n              <InputContainer>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"position-absolute d-flex ps-3 flex-column h-100 justify-center\\\\\\\\\\\\\\\">\\\\\\\\n                  <i class=\\\\\\\\\\\\\\\"bi bi-search m-auto\\\\\\\\\\\\\\\"></i>\\\\\\\\n                </div>\\\\\\\\n                <input\\\\\\\\n                  type=\\\\\\\\\\\\\\\"search\\\\\\\\\\\\\\\"\\\\\\\\n                  className=\\\\\\\\\\\\\\\"ps-5 form-control border rounded-2\\\\\\\\\\\\\\\"\\\\\\\\n                  value={state.term ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n                  onChange={(e) => updateInput(e.target.value)}\\\\\\\\n                  onKeyDown={(e) => e.key == \\\\\\\\\\\\\\\"Enter\\\\\\\\\\\\\\\" && search()}\\\\\\\\n                  placeholder={props.placeholder ?? `Search by content`}\\\\\\\\n                />\\\\\\\\n              </InputContainer>\\\\\\\\n              <DropdownContainer>\\\\\\\\n                <div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n                  <StyledDropdown>\\\\\\\\n                    <button\\\\\\\\n                      class=\\\\\\\\\\\\\\\"btn dropdown-toggle bg-white border rounded-2\\\\\\\\\\\\\\\"\\\\\\\\n                      type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n                      data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n                      aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      Sort: {props.recency === \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"All replies\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"Latest\\\\\\\\\\\\\\\"}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    </button>\\\\\\\\n                    <ul class=\\\\\\\\\\\\\\\"dropdown-menu dropdown-menu-end dropdown-menu-lg-start px-2 shadow\\\\\\\\\\\\\\\">\\\\\\\\n                      <li>\\\\\\\\n                        <a\\\\\\\\n                          style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n                          class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n                          href={href({\\\\\\\\n                            widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                            params: { page: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\" },\\\\\\\\n                          })}\\\\\\\\n                        >\\\\\\\\n                          Latest\\\\\\\\n                        </a>\\\\\\\\n                      </li>\\\\\\\\n                      <li>\\\\\\\\n                        <a\\\\\\\\n                          style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n                          class=\\\\\\\\\\\\\\\"dropdown-item link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n                          href={href({\\\\\\\\n                            widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n                            params: { page: \\\\\\\\\\\\\\\"feed\\\\\\\\\\\\\\\", recency: \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\" },\\\\\\\\n                          })}\\\\\\\\n                        >\\\\\\\\n                          All replies\\\\\\\\n                        </a>\\\\\\\\n                      </li>\\\\\\\\n                    </ul>\\\\\\\\n                  </StyledDropdown>\\\\\\\\n                </div>\\\\\\\\n              </DropdownContainer>\\\\\\\\n              <div class=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.post-search.by-author\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    author: state.author,\\\\\\\\n                    onAuthorSearch: (author) => {\\\\\\\\n                      State.update({ author });\\\\\\\\n                    },\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div>\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.post-search.by-tag\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    tag: state.tag,\\\\\\\\n                    onTagSearch: (tag) => {\\\\\\\\n                      State.update({ tag });\\\\\\\\n                    },\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-row-reverse flex-grow-1\\\\\\\\\\\\\\\">\\\\\\\\n                {props.children}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </Container>\\\\\\\\n    )}\\\\\\\\n    <PostContainer>\\\\\\\\n      <Widget\\\\\\\\n        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.post.List\\\\\\\\\\\\\\\"\\\\\\\\n        props={{\\\\\\\\n          author: state.author,\\\\\\\\n          tag: state.tag,\\\\\\\\n          term: state.term,\\\\\\\\n          recency: props.recency,\\\\\\\\n          transactionHashes: props.transactionHashes,\\\\\\\\n          updateTagInput: (tag) => State.update({ tag }),\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n    </PostContainer>\\\\\\\\n  </>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.molecule.DropDown\": {\"\": \"const options = props.options; // [{label:\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",value:\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\nconst label = props.label;\\\\\\\\nconst onUpdate = props.onUpdate ?? (() => {});\\\\\\\\nconst selectedValue = props.selectedValue;\\\\\\\\nconst [selected, setSelected] = useState(selectedValue);\\\\\\\\n\\\\\\\\nconst StyledDropdown = styled.div`\\\\\\\\n  .drop-btn {\\\\\\\\n    width: 100%;\\\\\\\\n    max-width: 200px;\\\\\\\\n    text-align: left;\\\\\\\\n    padding-inline: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item.active,\\\\\\\\n  .dropdown-item:active {\\\\\\\\n    background-color: #f0f0f0 !important;\\\\\\\\n    color: black;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  onUpdate(selected);\\\\\\\\n}, [selected]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"dropdown w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <StyledDropdown>\\\\\\\\n        <button\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn drop-btn text-truncate dropdown-toggle bg-white border rounded-2\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n          aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          {label} {selected && label && \\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"} {selected.label}\\\\\\\\n        </button>\\\\\\\\n        <ul class=\\\\\\\\\\\\\\\"dropdown-menu dropdown-menu-end dropdown-menu-lg-start px-2 shadow\\\\\\\\\\\\\\\">\\\\\\\\n          {options.map((item) => (\\\\\\\\n            <li\\\\\\\\n              style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n              onClick={() => {\\\\\\\\n                if (selected.label !== item.label) {\\\\\\\\n                  setSelected(item);\\\\\\\\n                } else {\\\\\\\\n                  setSelected(null);\\\\\\\\n                }\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {item.label}\\\\\\\\n            </li>\\\\\\\\n          ))}\\\\\\\\n        </ul>\\\\\\\\n      </StyledDropdown>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.components.organism.NewsLetter\": {\"\": \"const page = props.page;\\\\\\\\n\\\\\\\\nconst Footer = styled.div`\\\\\\\\n  width: 100%;\\\\\\\\n  background-color: #00ec97;\\\\\\\\n  padding: 2rem;\\\\\\\\n  margin-top: 2rem;\\\\\\\\n  width: 100vw;\\\\\\\\n  position: relative;\\\\\\\\n  left: 50%;\\\\\\\\n  right: 50%;\\\\\\\\n  margin-left: -50vw;\\\\\\\\n  margin-right: -50vw;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    padding: 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CTA = styled.a`\\\\\\\\n  display: inline-flex;\\\\\\\\n  padding: 0.5rem 0.8rem;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 0.5rem;\\\\\\\\n\\\\\\\\n  border-radius: 0.5rem;\\\\\\\\n  border: 1px solid #151515;\\\\\\\\n\\\\\\\\n  color: #151515 !important;\\\\\\\\n  font-size: 0.8rem;\\\\\\\\n  font-style: normal;\\\\\\\\n  font-weight: 700;\\\\\\\\n  line-height: 120%; /* 28.8px */\\\\\\\\n  letter-spacing: -0.48px;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    background: #151515;\\\\\\\\n    color: #f4f4f4 !important;\\\\\\\\n    text-decoration: none; // Remove underline on hover\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst XIcon = () => {\\\\\\\\n  return (\\\\\\\\n    <svg\\\\\\\\n      width=\\\\\\\\\\\\\\\"20\\\\\\\\\\\\\\\"\\\\\\\\n      height=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n      version=\\\\\\\\\\\\\\\"1.1\\\\\\\\\\\\\\\"\\\\\\\\n      xmlns=\\\\\\\\\\\\\\\"http://www.w3.org/2000/svg\\\\\\\\\\\\\\\"\\\\\\\\n      viewBox=\\\\\\\\\\\\\\\"0 0 300 300\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <path d=\\\\\\\\\\\\\\\"M178.57 127.15 290.27 0h-26.46l-97.03 110.38L89.34 0H0l117.13 166.93L0 300.25h26.46l102.4-116.59 81.8 116.59h89.34M36.01 19.54H76.66l187.13 262.13h-40.66\\\\\\\\\\\\\\\" />\\\\\\\\n    </svg>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst TelegramIcon = () => {\\\\\\\\n  return (\\\\\\\\n    <svg\\\\\\\\n      xmlns=\\\\\\\\\\\\\\\"http://www.w3.org/2000/svg\\\\\\\\\\\\\\\"\\\\\\\\n      width=\\\\\\\\\\\\\\\"20\\\\\\\\\\\\\\\"\\\\\\\\n      height=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n      viewBox=\\\\\\\\\\\\\\\"0 0 20 16\\\\\\\\\\\\\\\"\\\\\\\\n      fill=\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <path\\\\\\\\n        d=\\\\\\\\\\\\\\\"M19.7398 1.45657L16.8608 15.0342C16.6436 15.9924 16.0771 16.2309 15.2721 15.7796L10.8854 12.5469L8.76879 14.5828C8.53463 14.817 8.33866 15.0129 7.8872 15.0129L8.20233 10.5452L16.3327 3.19847C16.6862 2.88334 16.256 2.70869 15.7833 3.02386L5.73217 9.35266L1.40507 7.99835C0.463838 7.70445 0.446834 7.05707 1.60095 6.60566L18.526 0.085202C19.3096 -0.208647 19.9954 0.25977 19.7398 1.45657Z\\\\\\\\\\\\\\\"\\\\\\\\n        fill=\\\\\\\\\\\\\\\"#151515\\\\\\\\\\\\\\\"\\\\\\\\n      />\\\\\\\\n    </svg>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst YoutubeIcon = () => {\\\\\\\\n  return (\\\\\\\\n    <svg\\\\\\\\n      xmlns=\\\\\\\\\\\\\\\"http://www.w3.org/2000/svg\\\\\\\\\\\\\\\"\\\\\\\\n      width=\\\\\\\\\\\\\\\"24\\\\\\\\\\\\\\\"\\\\\\\\n      height=\\\\\\\\\\\\\\\"16\\\\\\\\\\\\\\\"\\\\\\\\n      viewBox=\\\\\\\\\\\\\\\"0 0 24 16\\\\\\\\\\\\\\\"\\\\\\\\n      fill=\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <path\\\\\\\\n        d=\\\\\\\\\\\\\\\"M23.1744 2.49854C22.9115 1.51517 22.1369 0.740571 21.1535 0.477714C19.3712 -1.21102e-07 12.2235 0 12.2235 0C12.2235 0 5.07581 -1.21102e-07 3.29346 0.477714C2.3101 0.740571 1.53549 1.51517 1.27264 2.49854C0.794922 4.28089 0.794922 8 0.794922 8C0.794922 8 0.794922 11.7191 1.27264 13.5015C1.53549 14.4848 2.3101 15.2594 3.29346 15.5223C5.07581 16 12.2235 16 12.2235 16C12.2235 16 19.3712 16 21.1535 15.5223C22.1369 15.2594 22.9115 14.4848 23.1744 13.5015C23.6521 11.7191 23.6521 8 23.6521 8C23.6521 8 23.6521 4.28089 23.1744 2.49854ZM9.93778 11.4286V4.57143L15.8761 8L9.93778 11.4286Z\\\\\\\\\\\\\\\"\\\\\\\\n        fill=\\\\\\\\\\\\\\\"#151515\\\\\\\\\\\\\\\"\\\\\\\\n      />\\\\\\\\n    </svg>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst MidContent = () => {\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n      <MidContainer>\\\\\\\\n        <Title>/dev/hub newsletter</Title>\\\\\\\\n        <Description>\\\\\\\\n          Stay in the loop. Get the latest updates, announcements,\\\\\\\\n          <br />\\\\\\\\n          opportunities, and insights from the ecosystem in your inbox.\\\\\\\\n        </Description>\\\\\\\\n        <CTA href=\\\\\\\\\\\\\\\"https://newsletter.neardevhub.org\\\\\\\\\\\\\\\" target=\\\\\\\\\\\\\\\"no_blank\\\\\\\\\\\\\\\">\\\\\\\\n          Subscribe\\\\\\\\n        </CTA>\\\\\\\\n        <SocialLinks>\\\\\\\\n          <a href=\\\\\\\\\\\\\\\"https://twitter.com/NEARDevHub\\\\\\\\\\\\\\\" target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\">\\\\\\\\n            <XIcon />\\\\\\\\n          </a>\\\\\\\\n          <a href=\\\\\\\\\\\\\\\"https://t.me/NEARDevHub\\\\\\\\\\\\\\\" target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\">\\\\\\\\n            <TelegramIcon />\\\\\\\\n          </a>\\\\\\\\n          <a href=\\\\\\\\\\\\\\\"https://www.youtube.com/@NEARDevHub\\\\\\\\\\\\\\\" target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\">\\\\\\\\n            <YoutubeIcon />\\\\\\\\n          </a>\\\\\\\\n        </SocialLinks>\\\\\\\\n      </MidContainer>\\\\\\\\n    </>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst SocialLinksContainer = () => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-md-4 gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <a href=\\\\\\\\\\\\\\\"https://twitter.com/NEARDevHub\\\\\\\\\\\\\\\" target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\">\\\\\\\\n        <XIcon />\\\\\\\\n      </a>\\\\\\\\n      <a href=\\\\\\\\\\\\\\\"https://t.me/NEARDevHub\\\\\\\\\\\\\\\" target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\">\\\\\\\\n        <TelegramIcon />\\\\\\\\n      </a>\\\\\\\\n      <a href=\\\\\\\\\\\\\\\"https://www.youtube.com/@NEARDevHub\\\\\\\\\\\\\\\" target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\">\\\\\\\\n        <YoutubeIcon />\\\\\\\\n      </a>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Footer className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n    <SocialLinksContainer />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <h6 className=\\\\\\\\\\\\\\\"m-0\\\\\\\\\\\\\\\">Subscribe to our newsletter</h6>\\\\\\\\n      <CTA href=\\\\\\\\\\\\\\\"https://newsletter.neardevhub.org\\\\\\\\\\\\\\\" target=\\\\\\\\\\\\\\\"no_blank\\\\\\\\\\\\\\\">\\\\\\\\n        Subscribe\\\\\\\\n      </CTA>\\\\\\\\n    </div>\\\\\\\\n  </Footer>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.CommentsAndLogs\": {\"\": \"const snapshotHistory = props.snapshotHistory;\\\\\\\\n\\\\\\\\nconst Wrapper = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  .log-line {\\\\\\\\n    position: absolute;\\\\\\\\n    left: 7%;\\\\\\\\n    top: -30px;\\\\\\\\n    bottom: 0;\\\\\\\\n    z-index: 1;\\\\\\\\n    width: 1px;\\\\\\\\n    background-color: var(--bs-border-color);\\\\\\\\n    z-index: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .inline-flex {\\\\\\\\n    display: inline-flex !important;\\\\\\\\n    align-items: center !important;\\\\\\\\n    gap: 0.25rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .inline-flex {\\\\\\\\n      display: flex !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CommentContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\n// check snapshot history all keys and values for differences\\\\\\\\nfunction getDifferentKeysWithValues(obj1, obj2) {\\\\\\\\n  return Object.keys(obj1)\\\\\\\\n    .filter((key) => {\\\\\\\\n      if (key !== \\\\\\\\\\\\\\\"editor_id\\\\\\\\\\\\\\\" && obj2.hasOwnProperty(key)) {\\\\\\\\n        const value1 = obj1[key];\\\\\\\\n        const value2 = obj2[key];\\\\\\\\n\\\\\\\\n        if (typeof value1 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\" && typeof value2 === \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\") {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else if (Array.isArray(value1) && Array.isArray(value2)) {\\\\\\\\n          return JSON.stringify(value1) !== JSON.stringify(value2);\\\\\\\\n        } else {\\\\\\\\n          return value1 !== value2;\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n      return false;\\\\\\\\n    })\\\\\\\\n    .map((key) => ({\\\\\\\\n      key,\\\\\\\\n      originalValue: obj1[key],\\\\\\\\n      modifiedValue: obj2[key],\\\\\\\\n    }));\\\\\\\\n}\\\\\\\\n\\\\\\\\nState.init({\\\\\\\\n  data: null,\\\\\\\\n  socialComments: null,\\\\\\\\n  changedKeysListWithValues: null,\\\\\\\\n});\\\\\\\\n\\\\\\\\nfunction sortTimelineAndComments() {\\\\\\\\n  const comments = Social.index(\\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\", props.item);\\\\\\\\n\\\\\\\\n  if (state.changedKeysListWithValues === null) {\\\\\\\\n    const changedKeysListWithValues = snapshotHistory\\\\\\\\n      .slice(1)\\\\\\\\n      .map((item, index) => {\\\\\\\\n        const startingPoint = snapshotHistory[index]; // Set comparison to the previous item\\\\\\\\n        return {\\\\\\\\n          editorId: item.editor_id,\\\\\\\\n          ...getDifferentKeysWithValues(startingPoint, item),\\\\\\\\n        };\\\\\\\\n      });\\\\\\\\n    State.update({ changedKeysListWithValues });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  // sort comments and timeline logs by time\\\\\\\\n  const snapShotTimeStamp = Array.isArray(snapshotHistory)\\\\\\\\n    ? snapshotHistory.map((i) => {\\\\\\\\n        return { blockHeight: null, timestamp: parseFloat(i.timestamp / 1e6) };\\\\\\\\n      })\\\\\\\\n    : [];\\\\\\\\n\\\\\\\\n  const commentsTimeStampPromise = Array.isArray(comments)\\\\\\\\n    ? Promise.all(\\\\\\\\n        comments.map((item) => {\\\\\\\\n          return asyncFetch(\\\\\\\\n            `https://api.near.social/time?blockHeight=${item.blockHeight}`\\\\\\\\n          ).then((res) => {\\\\\\\\n            const timeMs = parseFloat(res.body);\\\\\\\\n            return {\\\\\\\\n              blockHeight: item.blockHeight,\\\\\\\\n              timestamp: timeMs,\\\\\\\\n            };\\\\\\\\n          });\\\\\\\\n        })\\\\\\\\n      ).then((res) => res)\\\\\\\\n    : Promise.resolve([]);\\\\\\\\n\\\\\\\\n  commentsTimeStampPromise.then((commentsTimeStamp) => {\\\\\\\\n    const combinedArray = [...snapShotTimeStamp, ...commentsTimeStamp];\\\\\\\\n    combinedArray.sort((a, b) => a.timestamp - b.timestamp);\\\\\\\\n    State.update({ data: combinedArray, socialComments: comments });\\\\\\\\n  });\\\\\\\\n}\\\\\\\\n\\\\\\\\nsortTimelineAndComments();\\\\\\\\nconst Comment = ({ commentItem }) => {\\\\\\\\n  const { accountId, blockHeight } = commentItem;\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `${accountId}/post/comment`,\\\\\\\\n    blockHeight,\\\\\\\\n  };\\\\\\\\n  const content = JSON.parse(Social.get(item.path, blockHeight) ?? \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n  const link = `https://near.org/mob.near/widget/MainPage.N.Comment.Page?accountId=${accountId}&blockHeight=${blockHeight}`;\\\\\\\\n  return (\\\\\\\\n    <div style={{ zIndex: 9999, background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\" }}>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              accountId: accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <CommentContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n          <Header className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">\\\\\\\\n              <span className=\\\\\\\\\\\\\\\"fw-bold text-black\\\\\\\\\\\\\\\">{accountId}</span> commented\\\\\\\\n              \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  blockHeight: blockHeight,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            {context.accountId && (\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/Posts.Menu\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: accountId,\\\\\\\\n                    blockHeight: blockHeight,\\\\\\\\n                    contentPath: `/post/comment`,\\\\\\\\n                    contentType: \\\\\\\\\\\\\\\"comment\\\\\\\\\\\\\\\",\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            )}\\\\\\\\n          </Header>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"p-2 px-3\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                text: content.text,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/v1.LikeButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  item: item,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/CopyUrlButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  url: link,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </CommentContainer>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nfunction capitalizeFirstLetter(string) {\\\\\\\\n  const updated = string.replace(\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\");\\\\\\\\n  return updated.charAt(0).toUpperCase() + updated.slice(1).toLowerCase();\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction parseTimelineKeyAndValue(timeline, originalValue, modifiedValue) {\\\\\\\\n  const oldValue = originalValue[timeline];\\\\\\\\n  const newValue = modifiedValue[timeline];\\\\\\\\n  switch (timeline) {\\\\\\\\n    case \\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        oldValue !== newValue && (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n            moved proposal from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: oldValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            to{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                timelineStatus: newValue,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            stage\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"sponsor_requested_review\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed review</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"reviewer_completed_attestation\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>completed attestation</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"kyc_verified\\\\\\\\\\\\\\\":\\\\\\\\n      return !oldValue && newValue && <span>verified KYC/KYB</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"test_transaction_sent\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        !oldValue &&\\\\\\\\n        newValue && (\\\\\\\\n          <span>\\\\\\\\n            confirmed sponsorship and shared funding steps with recipient\\\\\\\\n          </span>\\\\\\\\n        )\\\\\\\\n      );\\\\\\\\n    // we don\\\\\\\\\\\\'t have this step for now\\\\\\\\n    // case \\\\\\\\\\\\\\\"request_for_trustees_created\\\\\\\\\\\\\\\":\\\\\\\\n    //   return !oldValue && newValue && <span>successfully created request for trustees</span>;\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccountProfile = ({ accountId }) => {\\\\\\\\n  return (\\\\\\\\n    <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          accountId: accountId,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      {accountId}\\\\\\\\n    </span>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst parseProposalKeyAndValue = (key, modifiedValue, originalValue) => {\\\\\\\\n  switch (key) {\\\\\\\\n    case \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed title</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"summary\\\\\\\\\\\\\\\":\\\\\\\\n    case \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>changed {key}</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"category\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed category from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"linked_proposals\\\\\\\\\\\\\\\":\\\\\\\\n      return <span>updated linked proposals</span>;\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_usd_amount\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship amount from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsorship_paid_in_currency\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span>\\\\\\\\n          changed sponsorship currency from {originalValue} to {modifiedValue}\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"receiver_account\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed receiver account from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"supervisor\\\\\\\\\\\\\\\":\\\\\\\\n      return !originalValue && modifiedValue ? (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          added\\\\\\\\n          <AccountProfile accountId={modifiedValue} />\\\\\\\\n          as supervisor\\\\\\\\n        </span>\\\\\\\\n      ) : (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed receiver account from{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"requested_sponsor\\\\\\\\\\\\\\\":\\\\\\\\n      return (\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n          changed sponsor from <AccountProfile accountId={originalValue} />\\\\\\\\n          to <AccountProfile accountId={modifiedValue} />\\\\\\\\n        </span>\\\\\\\\n      );\\\\\\\\n    case \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\": {\\\\\\\\n      const modifiedKeys = Object.keys(modifiedValue);\\\\\\\\n      const originalKeys = Object.keys(originalValue);\\\\\\\\n      return modifiedKeys.map((i, index) => {\\\\\\\\n        const text = parseTimelineKeyAndValue(i, originalValue, modifiedValue);\\\\\\\\n        return (\\\\\\\\n          text && (\\\\\\\\n            <span key={index} className=\\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\">\\\\\\\\n              {text}\\\\\\\\n              {text &&\\\\\\\\n                originalKeys.length > 1 &&\\\\\\\\n                index < modifiedKeys.length - 1 &&\\\\\\\\n                \\\\\\\\\\\\\\\"\\\\\\\\u{ff65}\\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n          )\\\\\\\\n        );\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n    default:\\\\\\\\n      return null;\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst LogIconContainer = styled.div`\\\\\\\\n  margin-left: 50px;\\\\\\\\n  z-index: 99;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    margin-left: 10px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Log = ({ timestamp }) => {\\\\\\\\n  const updatedData = useMemo(\\\\\\\\n    () =>\\\\\\\\n      state.changedKeysListWithValues.find((obj) =>\\\\\\\\n        Object.values(obj).some(\\\\\\\\n          (value) =>\\\\\\\\n            value && parseFloat(value.modifiedValue / 1e6) === timestamp\\\\\\\\n        )\\\\\\\\n      ),\\\\\\\\n    [state.changedKeysListWithValues, timestamp]\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const editorId = updatedData.editorId;\\\\\\\\n  const valuesArray = Object.values(updatedData ?? {});\\\\\\\\n  // if valuesArray length is 2 that means it only has timestamp and editorId\\\\\\\\n  if (!updatedData || valuesArray.length === 2) {\\\\\\\\n    return <></>;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return valuesArray.map((i, index) => {\\\\\\\\n    if (i.key && i.key !== \\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\\") {\\\\\\\\n      return (\\\\\\\\n        <LogIconContainer\\\\\\\\n          className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n          key={index}\\\\\\\\n        >\\\\\\\\n          <img\\\\\\\\n            src=\\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreiffqrxdi4xqu7erf46gdlwuodt6dm6rji2jtixs3iionjvga6rhdi\\\\\\\\\\\\\\\"\\\\\\\\n            height={30}\\\\\\\\n          />\\\\\\\\n          <div\\\\\\\\n            className={\\\\\\\\n              \\\\\\\\\\\\\\\"flex-1 gap-1 w-100 text-wrap text-muted align-items-center \\\\\\\\\\\\\\\" +\\\\\\\\n              (i.key === \\\\\\\\\\\\\\\"timeline\\\\\\\\\\\\\\\" &&\\\\\\\\n              Object.keys(i.originalValue ?? {}).length > 1\\\\\\\\n                ? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                : \\\\\\\\\\\\\\\"inline-flex\\\\\\\\\\\\\\\")\\\\\\\\n            }\\\\\\\\n          >\\\\\\\\n            <span className=\\\\\\\\\\\\\\\"inline-flex fw-bold text-black\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  accountId: editorId,\\\\\\\\n                  size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n\\\\\\\\n              {(editorId ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").substring(0, 15)}\\\\\\\\n              {(editorId ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\").length > 15 ? \\\\\\\\\\\\\\\"...\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\\n            </span>\\\\\\\\n            {parseProposalKeyAndValue(i.key, i.modifiedValue, i.originalValue)}\\\\\\\\n            on\\\\\\\\n            <Widget\\\\\\\\n              src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n              props={{\\\\\\\\n                blockTimestamp: timestamp * 1000000,\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </LogIconContainer>\\\\\\\\n      );\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nif (Array.isArray(state.data)) {\\\\\\\\n  return (\\\\\\\\n    <Wrapper>\\\\\\\\n      <div\\\\\\\\n        className=\\\\\\\\\\\\\\\"log-line\\\\\\\\\\\\\\\"\\\\\\\\n        style={{ height: state.data.length > 4 ? \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"150%\\\\\\\\\\\\\\\" }}\\\\\\\\n      ></div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4\\\\\\\\\\\\\\\">\\\\\\\\n        {state.data.map((i, index) => {\\\\\\\\n          if (i.blockHeight) {\\\\\\\\n            const item = state.socialComments.find(\\\\\\\\n              (t) => t.blockHeight === i.blockHeight\\\\\\\\n            );\\\\\\\\n            return <Comment commentItem={item} />;\\\\\\\\n          } else {\\\\\\\\n            return <Log timestamp={i.timestamp} key={index} />;\\\\\\\\n          }\\\\\\\\n        })}\\\\\\\\n      </div>\\\\\\\\n    </Wrapper>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\"}, \"devhub.feature.proposal-search.by-input\": {\"\": \"const InputContainer = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: row;\\\\\\\\n  position: relative;\\\\\\\\n  width: 100%;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst [search, setSearch] = useState(props.search);\\\\\\\\nconst onSearch = props.onSearch ?? (() => {});\\\\\\\\nconst onEnter = props.onEnter ?? (() => {});\\\\\\\\n\\\\\\\\nconst updateInput = (value) => setSearch(value);\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  if (search !== props.search) {\\\\\\\\n    onSearch(search);\\\\\\\\n  }\\\\\\\\n}, [search]);\\\\\\\\n\\\\\\\\nconst className = props.className ?? \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Widget\\\\\\\\n    src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n    props={{\\\\\\\\n      className: \\\\\\\\\\\\\\\"flex-grow-1 w-100\\\\\\\\\\\\\\\" + className,\\\\\\\\n      value: search,\\\\\\\\n      onChange: (e) => {\\\\\\\\n        updateInput(e.target.value);\\\\\\\\n      },\\\\\\\\n      onKeyDown: (e) => e.key == \\\\\\\\\\\\\\\"Enter\\\\\\\\\\\\\\\" && onEnter(),\\\\\\\\n      skipPaddingGap: true,\\\\\\\\n      placeholder: \\\\\\\\\\\\\\\"Search by content\\\\\\\\\\\\\\\",\\\\\\\\n      inputProps: {\\\\\\\\n        prefix: <i class=\\\\\\\\\\\\\\\"bi bi-search m-auto\\\\\\\\\\\\\\\"></i>,\\\\\\\\n      },\\\\\\\\n    }}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.blog.editor.provider\": {\"\": \"const { getPost } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n) || { getPost: () => {} };\\\\\\\\n\\\\\\\\nconst { Layout, handle } = props;\\\\\\\\n\\\\\\\\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql/`;\\\\\\\\n\\\\\\\\nconst fetchGraphQL = (operationsDoc, operationName, variables) => {\\\\\\\\n  return fetch(QUERYAPI_ENDPOINT, {\\\\\\\\n    method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n    headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `bo_near` },\\\\\\\\n    body: JSON.stringify({\\\\\\\\n      query: operationsDoc,\\\\\\\\n      variables: variables,\\\\\\\\n      operationName: operationName,\\\\\\\\n    }),\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst queryName =\\\\\\\\n  props.queryName ?? `bo_near_devhub_v38_posts_with_latest_snapshot`;\\\\\\\\n\\\\\\\\nconst query = `query DevhubPostsQuery($limit: Int = 100, $offset: Int = 0, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      limit: $limit\\\\\\\\n      offset: $offset\\\\\\\\n      order_by: {block_height: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      post_id\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst includeLabels = [\\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\", handle];\\\\\\\\n\\\\\\\\nconst buildWhereClause = () => {\\\\\\\\n  let where = {};\\\\\\\\n  if (props.author) {\\\\\\\\n    where = { author_id: { _eq: props.author }, ...where };\\\\\\\\n  }\\\\\\\\n  if (props.term) {\\\\\\\\n    where = { description: { _ilike: `%${props.term}%` }, ...where };\\\\\\\\n  }\\\\\\\\n  if (includeLabels && Array.isArray(includeLabels)) {\\\\\\\\n    const labelConditions = includeLabels.map((label) => ({\\\\\\\\n      labels: { _contains: label },\\\\\\\\n    }));\\\\\\\\n\\\\\\\\n    where = { _and: [...labelConditions, where] };\\\\\\\\n  }\\\\\\\\n  if (props.excludeLabels && Array.isArray(props.excludeLabels)) {\\\\\\\\n    const labelConditions = props.excludeLabels.map((label) => ({\\\\\\\\n      labels: { _nin: label },\\\\\\\\n    }));\\\\\\\\n\\\\\\\\n    where = { _and: [...labelConditions, where] };\\\\\\\\n  }\\\\\\\\n  if (!props.recency) {\\\\\\\\n    where = { parent_id: { _is_null: true }, ...where };\\\\\\\\n  }\\\\\\\\n  return where;\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst variables = { limit: DISPLAY_COUNT, offset, where: buildWhereClause() };\\\\\\\\n\\\\\\\\nconst posts = fetch(QUERYAPI_ENDPOINT, {\\\\\\\\n  method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n  headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `bo_near` },\\\\\\\\n  body: JSON.stringify({\\\\\\\\n    query: query,\\\\\\\\n    variables: variables,\\\\\\\\n    operationName: \\\\\\\\\\\\\\\"DevhubPostsQuery\\\\\\\\\\\\\\\",\\\\\\\\n  }),\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst handleOnChange = (v) => {\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"onChange\\\\\\\\\\\\\\\", v);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleGetData = (v) => {\\\\\\\\n  const postId = parseInt(v);\\\\\\\\n  return Near.asyncView(\\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_post\\\\\\\\\\\\\\\", {\\\\\\\\n    post_id: postId,\\\\\\\\n  }).then((post) => {\\\\\\\\n    const description = JSON.parse(post.snapshot.description || \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\") || {};\\\\\\\\n    return {\\\\\\\\n      id: postId,\\\\\\\\n      ...description,\\\\\\\\n    };\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleOnSubmit = (v, isEdit) => {\\\\\\\\n  if (isEdit) {\\\\\\\\n    Near.call({\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_post\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: parseInt(v.id),\\\\\\\\n        labels: [\\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\", handle],\\\\\\\\n        body: {\\\\\\\\n          post_type: \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n          description: JSON.stringify(v),\\\\\\\\n          comment_version: \\\\\\\\\\\\\\\"V2\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    });\\\\\\\\n  } else {\\\\\\\\n    Near.call({\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devgovgigs.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"add_post\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        labels: [\\\\\\\\\\\\\\\"blog\\\\\\\\\\\\\\\", handle],\\\\\\\\n        body: {\\\\\\\\n          post_type: \\\\\\\\\\\\\\\"Comment\\\\\\\\\\\\\\\",\\\\\\\\n          description: JSON.stringify(v),\\\\\\\\n          comment_version: \\\\\\\\\\\\\\\"V2\\\\\\\\\\\\\\\",\\\\\\\\n        },\\\\\\\\n      },\\\\\\\\n      gas: Big(10).pow(14),\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst handleOnCancel = (v) => {\\\\\\\\n  console.log(\\\\\\\\\\\\\\\"onCancel\\\\\\\\\\\\\\\", v);\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Layout\\\\\\\\n    data={posts.body.data.bo_near_devhub_v38_posts_with_latest_snapshot || []}\\\\\\\\n    getData={handleGetData}\\\\\\\\n    onChange={handleOnChange}\\\\\\\\n    onSubmit={handleOnSubmit}\\\\\\\\n    onCancel={handleOnCancel}\\\\\\\\n  />\\\\\\\\n);\\\\\\\\n\"}, \"devhub.feature.proposal-search.by-category\": {\"\": \"const options = [\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"DevDAO Operations\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"DevDAO Operations\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"DevDAO Platform\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"DevDAO Platform\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Events & Hackathons\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"Events & Hackathons\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Engagement & Awareness\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"Engagement & Awareness\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Decentralized DevRel\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"Decentralized DevRel\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Universities & Bootcamps\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"Universities & Bootcamps\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Tooling & Infrastructure\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"Tooling & Infrastructure\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"Other\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"None\\\\\\\\\\\\\\\",\\\\\\\\n    value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst setSelected = props.onStateChange ?? (() => {});\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        options: options,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Category\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelected(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 4.0684767190967e+21
    }
  },
  {
    "id": "3225195215",
    "receipt_id": "AfD5VJPnbg7SMpK4Zsv9VAFwtY5rZr2zNmzXkuHWWmqL",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "AmXMEBbKsNUkfsSwGt7kgqLp4Y2Wcd6UY5U8ECk8yfx2",
      "block_height": 115285282,
      "block_timestamp": 1711175577460492800
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "9KmSUHF77mAZuAYUVsdCB97bza277UYYM2hEDMzCJSF3",
    "included_in_block_hash": "2i6pZajMrcHdjxahfGnjvjejjJtavFftaSmYWRnSseeU",
    "block_timestamp": "1711175575353557846",
    "block": {
      "block_height": 115285280
    },
    "receipt_conversion_tokens_burnt": "274993127094400000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.854373861280766e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 4.0684767190967e+21
    }
  },
  {
    "id": "3225451084",
    "receipt_id": "DEcVhh2pxcETEVrcZCVZUNCfiy4qvq8n2Uck5Q8t5H2o",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "34a4Pw9Fof65LzQB5nMbdeK7dVrs4m6AybQLu5H9Cyr3",
      "block_height": 115286077,
      "block_timestamp": 1711176522432473600
    },
    "receipt_outcome": {
      "gas_burnt": 10242458823237,
      "tokens_burnt": 1.0242458823237e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "E3uoZfiAAtiPPGvWpFBb3xZ9HNp1SHYHGNVKbGrJZqR5",
    "included_in_block_hash": "HcwjPNqUPAgTX5AorwmEQbojqEdiQkqmR19XPZDXpnfn",
    "block_timestamp": "1711176518427950169",
    "block": {
      "block_height": 115286074
    },
    "receipt_conversion_tokens_burnt": "247132047894000000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.0242458823237e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.entity.proposal.Feed\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!href) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .bg-grey {\\\\\\\\n    background-color: #f4f4f4;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-bottom {\\\\\\\\n    border-bottom: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .proposal-card {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    border-bottom: none !important;\\\\\\\\n    &:hover {\\\\\\\\n      background-color: #f4f4f4;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    .green-btn {\\\\\\\\n      padding: 0.5rem 0.8rem !important;\\\\\\\\n      min-height: 32px;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  a.no-space {\\\\\\\\n    display: inline-block;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-wrap {\\\\\\\\n    overflow: hidden;\\\\\\\\n    white-space: normal;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Heading = styled.div`\\\\\\\\n  font-size: 24px;\\\\\\\\n  font-weight: 700;\\\\\\\\n  width: 100%;\\\\\\\\n\\\\\\\\n  .text-normal {\\\\\\\\n    font-weight: normal !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 768px) {\\\\\\\\n    font-size: 18px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst FeedItem = ({ proposal, index }) => {\\\\\\\\n  const accountId = proposal.author_id;\\\\\\\\n  const profile = Social.get(`${accountId}/profile/**`, \\\\\\\\\\\\\\\"final\\\\\\\\\\\\\\\");\\\\\\\\n  // We will have to get the proposal from the contract to get the block height.\\\\\\\\n  const blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\n  const item = {\\\\\\\\n    type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n    path: `devhub.near/post/main`,\\\\\\\\n    blockHeight: blockHeight,\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <a\\\\\\\\n      href={href({\\\\\\\\n        widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n        params: {\\\\\\\\n          page: \\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\",\\\\\\\\n          id: proposal.proposal_id,\\\\\\\\n        },\\\\\\\\n      })}\\\\\\\\n      onClick={(e) => e.stopPropagation()}\\\\\\\\n      style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <div\\\\\\\\n        className={\\\\\\\\n          \\\\\\\\\\\\\\\"proposal-card d-flex justify-content-between gap-2 text-muted cursor-pointer p-3 w-100 flex-wrap flex-sm-nowrap \\\\\\\\\\\\\\\" +\\\\\\\\n          (index !== 0 && \\\\\\\\\\\\\\\" border\\\\\\\\\\\\\\\")\\\\\\\\n        }\\\\\\\\n      >\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-4 w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              accountId,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 text-wrap\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center flex-wrap w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"h6 mb-0 text-black\\\\\\\\\\\\\\\">{proposal.name}</div>\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CategoryTag\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  category: proposal.category,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center text-sm w-100\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">\\\\\\\\n                By {profile.name ?? accountId} \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n              </div>\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  blockHeight,\\\\\\\\n                  blockTimestamp: proposal.timestamp,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.LikeButton\\\\\\\\\\\\\\\"\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  proposalId: proposal.id,\\\\\\\\n                  notifyAccountId: accountId,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CommentIcon\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  item,\\\\\\\\n                  showOverlay: false,\\\\\\\\n                  onClick: () => {},\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"align-self-center\\\\\\\\\\\\\\\" style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              timelineStatus: proposal.timeline.status,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </a>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst getProposal = (proposal_id) => {\\\\\\\\n  return Near.asyncView(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n    proposal_id,\\\\\\\\n  });\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst FeedPage = () => {\\\\\\\\n  const QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\\\\\\\\n\\\\\\\\n  State.init({\\\\\\\\n    data: [],\\\\\\\\n    cachedItems: {},\\\\\\\\n    author: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    stage: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    sort: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    category: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    input: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n    loading: false,\\\\\\\\n    loadingMore: false,\\\\\\\\n    aggregatedCount: 0,\\\\\\\\n    currentlyDisplaying: 0,\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  const queryName =\\\\\\\\n    \\\\\\\\\\\\\\\"thomasguntenaar_near_devhub_proposals_quebec_proposals_with_latest_snapshot\\\\\\\\\\\\\\\";\\\\\\\\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\\\\\\\\n    ${queryName}(\\\\\\\\n      offset: $offset\\\\\\\\n      limit: $limit\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    ) {\\\\\\\\n      author_id\\\\\\\\n      block_height\\\\\\\\n      name\\\\\\\\n      category\\\\\\\\n      summary\\\\\\\\n      editor_id\\\\\\\\n      name\\\\\\\\n      proposal_id\\\\\\\\n      ts\\\\\\\\n      timeline\\\\\\\\n      views\\\\\\\\n    }\\\\\\\\n    ${queryName}_aggregate(\\\\\\\\n      order_by: {proposal_id: desc}\\\\\\\\n      where: $where\\\\\\\\n    )  {\\\\\\\\n      aggregate {\\\\\\\\n        count\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  }`;\\\\\\\\n\\\\\\\\n  function fetchGraphQL(operationsDoc, operationName, variables) {\\\\\\\\n    return asyncFetch(QUERYAPI_ENDPOINT, {\\\\\\\\n      method: \\\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\\",\\\\\\\\n      headers: { \\\\\\\\\\\\\\\"x-hasura-role\\\\\\\\\\\\\\\": `thomasguntenaar_near` },\\\\\\\\n      body: JSON.stringify({\\\\\\\\n        query: operationsDoc,\\\\\\\\n        variables: variables,\\\\\\\\n        operationName: operationName,\\\\\\\\n      }),\\\\\\\\n    });\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const buildWhereClause = () => {\\\\\\\\n    let where = {};\\\\\\\\n    if (state.author) {\\\\\\\\n      where = { author_id: { _eq: state.author }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.category) {\\\\\\\\n      where = { category: { _eq: state.category }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.stage) {\\\\\\\\n      // timeline is stored as jsonb\\\\\\\\n      where = {\\\\\\\\n        timeline: { _cast: { String: { _ilike: `%${state.stage}%` } } },\\\\\\\\n        ...where,\\\\\\\\n      };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    if (state.input) {\\\\\\\\n      where = { description: { _ilike: `%${state.input}%` }, ...where };\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return where;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const buildOrderByClause = () => {\\\\\\\\n    /**\\\\\\\\n     * TODO\\\\\\\\n     * Most commented -> edit contract and indexer\\\\\\\\n     * Unanswered -> 0 comments\\\\\\\\n     */\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const makeMoreItems = () => {\\\\\\\\n    if (state.aggregatedCount <= state.currentlyDisplaying) return;\\\\\\\\n    fetchProposals(state.data.length);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchProposals = (offset) => {\\\\\\\\n    if (!offset) {\\\\\\\\n      offset = 0;\\\\\\\\n    }\\\\\\\\n    if (state.loading) return;\\\\\\\\n    const FETCH_LIMIT = 10;\\\\\\\\n    const variables = {\\\\\\\\n      limit: FETCH_LIMIT,\\\\\\\\n      offset,\\\\\\\\n      where: buildWhereClause(),\\\\\\\\n    };\\\\\\\\n    fetchGraphQL(query, \\\\\\\\\\\\\\\"GetLatestSnapshot\\\\\\\\\\\\\\\", variables).then(async (result) => {\\\\\\\\n      if (result.status === 200) {\\\\\\\\n        if (result.body.data) {\\\\\\\\n          const data =\\\\\\\\n            result.body.data\\\\\\\\n              .thomasguntenaar_near_devhub_proposals_quebec_proposals_with_latest_snapshot;\\\\\\\\n          const totalResult =\\\\\\\\n            result.body.data\\\\\\\\n              .thomasguntenaar_near_devhub_proposals_quebec_proposals_with_latest_snapshot_aggregate;\\\\\\\\n          State.update({ aggregatedCount: totalResult.aggregate.count });\\\\\\\\n          // Parse timeline\\\\\\\\n          fetchBlockHeights(data, offset);\\\\\\\\n        }\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const renderItem = (item, index) => (\\\\\\\\n    <div\\\\\\\\n      key={item.proposal_id}\\\\\\\\n      className={\\\\\\\\n        (index !== state.data.length - 1 && \\\\\\\\\\\\\\\"border-bottom \\\\\\\\\\\\\\\") + index === 0 &&\\\\\\\\n        \\\\\\\\\\\\\\\" rounded-top-2\\\\\\\\\\\\\\\"\\\\\\\\n      }\\\\\\\\n    >\\\\\\\\n      <FeedItem proposal={item} index={index} />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n  const cachedRenderItem = (item, index) => {\\\\\\\\n    if (props.term) {\\\\\\\\n      return renderItem(item, {\\\\\\\\n        searchKeywords: [props.term],\\\\\\\\n      });\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    const key = JSON.stringify(item);\\\\\\\\n\\\\\\\\n    if (!(key in state.cachedItems)) {\\\\\\\\n      state.cachedItems[key] = renderItem(item, index);\\\\\\\\n      State.update();\\\\\\\\n    }\\\\\\\\n    return state.cachedItems[key];\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  useEffect(() => {\\\\\\\\n    fetchProposals();\\\\\\\\n  }, [state.author, state.sort, state.category, state.stage]);\\\\\\\\n\\\\\\\\n  const mergeItems = (newItems) => {\\\\\\\\n    const items = [\\\\\\\\n      ...new Set([...newItems, ...state.data].map((i) => JSON.stringify(i))),\\\\\\\\n    ].map((i) => JSON.parse(i));\\\\\\\\n    // Sorting in the front end\\\\\\\\n    if (state.sort === \\\\\\\\\\\\\\\"proposal_id\\\\\\\\\\\\\\\" || state.sort === \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.proposal_id - a.proposal_id);\\\\\\\\n    } else if (state.sort === \\\\\\\\\\\\\\\"views\\\\\\\\\\\\\\\") {\\\\\\\\n      items.sort((a, b) => b.views - a.views);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    return items;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const fetchBlockHeights = (data, offset) => {\\\\\\\\n    let promises = data.map((item) => getProposal(item.proposal_id));\\\\\\\\n    Promise.all(promises).then((blockHeights) => {\\\\\\\\n      data = data.map((item, index) => ({\\\\\\\\n        ...item,\\\\\\\\n        timeline: JSON.parse(item.timeline),\\\\\\\\n        social_db_post_block_height:\\\\\\\\n          blockHeights[index].social_db_post_block_height,\\\\\\\\n      }));\\\\\\\\n      if (offset) {\\\\\\\\n        let newData = mergeItems(data);\\\\\\\\n        State.update({\\\\\\\\n          data: newData,\\\\\\\\n          currentlyDisplaying: newData.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      } else {\\\\\\\\n        State.update({\\\\\\\\n          data,\\\\\\\\n          currentlyDisplaying: data.length,\\\\\\\\n          loading: false,\\\\\\\\n        });\\\\\\\\n      }\\\\\\\\n    });\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const loader = (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Spinner\\\\\\\\\\\\\\\"}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const renderedItems = state.data ? state.data.map(cachedRenderItem) : null;\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <Container className=\\\\\\\\\\\\\\\"w-100 py-4 px-2 d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between flex-wrap gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Heading>\\\\\\\\n          DevDAO Proposals\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"text-muted text-normal\\\\\\\\\\\\\\\">\\\\\\\\n            ({state.aggregatedCount ?? state.data.length}){\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n          </span>\\\\\\\\n        </Heading>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\n              \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-input\\\\\\\\\\\\\\\"\\\\\\\\n            }\\\\\\\\n            props={{\\\\\\\\n              search: state.input,\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-xs-100\\\\\\\\\\\\\\\",\\\\\\\\n              onSearch: (input) => {\\\\\\\\n                State.update({ input });\\\\\\\\n                fetchProposals();\\\\\\\\n              },\\\\\\\\n              onEnter: () => {\\\\\\\\n                fetchProposals();\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-sort\\\\\\\\\\\\\\\"}\\\\\\\\n            props={{\\\\\\\\n              onStateChange: (select) => {\\\\\\\\n                State.update({ sort: select.value });\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex gap-4 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-category\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ category: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-stage\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                onStateChange: (select) => {\\\\\\\\n                  State.update({ stage: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\n                \\\\\\\\\\\\\\\"devhub.near/widget/devhub.feature.proposal-search.by-author\\\\\\\\\\\\\\\"\\\\\\\\n              }\\\\\\\\n              props={{\\\\\\\\n                onAuthorChange: (select) => {\\\\\\\\n                  State.update({ author: select.value });\\\\\\\\n                },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"mt-2 mt-xs-0\\\\\\\\\\\\\\\">\\\\\\\\n          <Link\\\\\\\\n            to={href({\\\\\\\\n              widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n              params: { page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\" },\\\\\\\\n            })}\\\\\\\\n          >\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                label: (\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                    <div>\\\\\\\\n                      <i class=\\\\\\\\\\\\\\\"bi bi-plus-circle-fill\\\\\\\\\\\\\\\"></i>\\\\\\\\n                    </div>\\\\\\\\n                    New Proposal\\\\\\\\n                  </div>\\\\\\\\n                ),\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"green-btn\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n      <div style={{ minHeight: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}>\\\\\\\\n        {!Array.isArray(state.data) ? (\\\\\\\\n          loader\\\\\\\\n        ) : (\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 mt-4 py-3 full-width-div\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"container-xl\\\\\\\\\\\\\\\">\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"text-muted bg-grey text-sm mt-2 p-3 rounded-3\\\\\\\\\\\\\\\">\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"d-flex gap-3 align-items-center mb-0\\\\\\\\\\\\\\\">\\\\\\\\n                  <div>\\\\\\\\n                    <i class=\\\\\\\\\\\\\\\"bi bi-info-circle\\\\\\\\\\\\\\\"></i>\\\\\\\\n                  </div>\\\\\\\\n                  <div>\\\\\\\\n                    <span className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                      Welcome to\\\\\\\\n                      <a\\\\\\\\n                        href=\\\\\\\\\\\\\\\"https://near.social/devhub.near/widget/app?page=community&handle=developer-dao&tab=overview\\\\\\\\\\\\\\\"\\\\\\\\n                        target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                        rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                      >\\\\\\\\n                        DevDAO\\\\\\\\u{2019}s New Proposal Feed!\\\\\\\\n                      </a>\\\\\\\\n                    </span>\\\\\\\\n                    This dedicated space replaces the\\\\\\\\n                    <a\\\\\\\\n                      href=\\\\\\\\\\\\\\\"https://near.org/devhub.near/widget/app?page=feed\\\\\\\\\\\\\\\"\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      old activity feed\\\\\\\\n                    </a>\\\\\\\\n                    , making it easier to submit and track funding requests from\\\\\\\\n                    DevDAO, the primary organization behind DevHub. To submit a\\\\\\\\n                    formal proposal, click New Proposal. See our{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href=\\\\\\\\\\\\\\\"https://near.org/devhub.near/widget/app?page=community&handle=developer-dao&tab=funding\\\\\\\\\\\\\\\"\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      guidelines\\\\\\\\n                    </a>\\\\\\\\n                    for details. For discussions and brainstorming, please\\\\\\\\n                    utilize the relevant{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                    <a\\\\\\\\n                      href=\\\\\\\\\\\\\\\"https://near.org/devhub.near/widget/app?page=communities\\\\\\\\\\\\\\\"\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-decoration-underline no-space\\\\\\\\\\\\\\\"\\\\\\\\n                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                    >\\\\\\\\n                      communities\\\\\\\\n                    </a>\\\\\\\\n                    .\\\\\\\\n                  </div>\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"mt-4 border rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n                {state.data.length > 0 ? (\\\\\\\\n                  <InfiniteScroll\\\\\\\\n                    pageStart={0}\\\\\\\\n                    loadMore={makeMoreItems}\\\\\\\\n                    hasMore={state.aggregatedCount > state.data.length}\\\\\\\\n                    loader={loader}\\\\\\\\n                    useWindow={false}\\\\\\\\n                    threshold={100}\\\\\\\\n                  >\\\\\\\\n                    {renderedItems}\\\\\\\\n                  </InfiniteScroll>\\\\\\\\n                ) : (\\\\\\\\n                  loader\\\\\\\\n                )}\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </Container>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn FeedPage(props);\\\\\\\\n\"}, \"devhub.components.molecule.DropDown\": {\"\": \"const options = props.options; // [{label:\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",value:\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\nconst label = props.label;\\\\\\\\nconst onUpdate = props.onUpdate ?? (() => {});\\\\\\\\nconst selectedValue = props.selectedValue;\\\\\\\\nconst [selected, setSelected] = useState(selectedValue);\\\\\\\\n\\\\\\\\nconst StyledDropdown = styled.div`\\\\\\\\n  .drop-btn {\\\\\\\\n    width: 100%;\\\\\\\\n    max-width: 200px;\\\\\\\\n    text-align: left;\\\\\\\\n    padding-inline: 10px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-item.active,\\\\\\\\n  .dropdown-item:active {\\\\\\\\n    background-color: #f0f0f0 !important;\\\\\\\\n    color: black;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .cursor-pointer {\\\\\\\\n    cursor: pointer;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nuseEffect(() => {\\\\\\\\n  onUpdate(selected);\\\\\\\\n}, [selected]);\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <div class=\\\\\\\\\\\\\\\"dropdown w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <StyledDropdown>\\\\\\\\n        <button\\\\\\\\n          class=\\\\\\\\\\\\\\\"btn drop-btn text-truncate dropdown-toggle bg-white border rounded-2\\\\\\\\\\\\\\\"\\\\\\\\n          type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n          data-bs-toggle=\\\\\\\\\\\\\\\"dropdown\\\\\\\\\\\\\\\"\\\\\\\\n          aria-expanded=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n        >\\\\\\\\n          {label} {selected && label && \\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"} {selected.label}\\\\\\\\n        </button>\\\\\\\\n        <ul class=\\\\\\\\\\\\\\\"dropdown-menu dropdown-menu-end dropdown-menu-lg-start px-2 shadow\\\\\\\\\\\\\\\">\\\\\\\\n          {options.map((item) => (\\\\\\\\n            <li\\\\\\\\n              style={{ borderRadius: \\\\\\\\\\\\\\\"5px\\\\\\\\\\\\\\\" }}\\\\\\\\n              class=\\\\\\\\\\\\\\\"dropdown-item cursor-pointer link-underline link-underline-opacity-0\\\\\\\\\\\\\\\"\\\\\\\\n              onClick={() => {\\\\\\\\n                if (selected.label !== item.label) {\\\\\\\\n                  setSelected(item);\\\\\\\\n                } else {\\\\\\\\n                  setSelected(null);\\\\\\\\n                }\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {item.label}\\\\\\\\n            </li>\\\\\\\\n          ))}\\\\\\\\n        </ul>\\\\\\\\n      </StyledDropdown>\\\\\\\\n    </div>\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.feature.proposal-search.by-stage\": {\"\": \"// The timeline is stored in jsonb. The value is used to search for as part of\\\\\\\\n// that json so it doesn\\\\\\\\\\\\'t need to be an exact match.\\\\\\\\nconst options = [\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Draft\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Review\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Approved\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Approved - Conditional\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"CONDITIONAL\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Rejected\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Cancelled\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Payment Processing\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"PAYMENT\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"Funded\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\" },\\\\\\\\n  { label: \\\\\\\\\\\\\\\"None\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst setSelected = props.onStateChange ?? (() => {});\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <div>\\\\\\\\n    <Widget\\\\\\\\n      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n      props={{\\\\\\\\n        options: options,\\\\\\\\n        label: \\\\\\\\\\\\\\\"Stage\\\\\\\\\\\\\\\",\\\\\\\\n        onUpdate: (v) => {\\\\\\\\n          setSelected(v);\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n  </div>\\\\\\\\n);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.2713779302177e+21
    }
  },
  {
    "id": "3225451628",
    "receipt_id": "3isfvB1hQd4X32tGdgrJ5wXr3KxirXFuyZWujbu8EYAZ",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "42VdwwoMTFLqFsvxcRaGBH37Jb24huH1nfBcww6Ty65u",
      "block_height": 115286078,
      "block_timestamp": 1711176524175062800
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "E3uoZfiAAtiPPGvWpFBb3xZ9HNp1SHYHGNVKbGrJZqR5",
    "included_in_block_hash": "HcwjPNqUPAgTX5AorwmEQbojqEdiQkqmR19XPZDXpnfn",
    "block_timestamp": "1711176518427950169",
    "block": {
      "block_height": 115286074
    },
    "receipt_conversion_tokens_burnt": "247132047894000000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8803248089984272e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.2713779302177e+21
    }
  },
  {
    "id": "3233333725",
    "receipt_id": "4nE1UgaNEUMk3j7fSKectkMwwkGpHqjL6hreJR2iPtxM",
    "predecessor_account_id": "bpolania.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "BKymMfNgi9wFL88tPeHxeA2PSVhK6hgCuzEV7PpxAzXd",
      "block_height": 115307912,
      "block_timestamp": 1711202552065859600
    },
    "receipt_outcome": {
      "gas_burnt": 12083013257391,
      "tokens_burnt": 1.2083013257391e+21,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "GrDoY568odyYGdrcPacvK8EcP2HnxhW6ccXHW954BvH6",
    "included_in_block_hash": "HtLrniTYAh9z9DX8LNxMmKqbBVzooFsoEy5XAu6DKtj8",
    "block_timestamp": "1711202550907516077",
    "block": {
      "block_height": 115307911
    },
    "receipt_conversion_tokens_burnt": "242975670181400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_proposal",
        "deposit": 0,
        "fee": 1.2083013257391e+21,
        "args": "{\"body\": {\"name\": \"Expenses for DevRel Events March 2024\", \"summary\": \"These are the expenses for ETHDenver and ETHGlobal London\", \"category\": \"Events & Hackathons\", \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"supervisor\": \"yarotska.near\", \"description\": \"Number of Days: 17 days\\\\\\\\nNumber of Events; 2\\\\\\\\nCosts Covered: Hotels, Transportation, Plane Tickets and Food\\\\\\\\n\\\\\\\\nETHDenver (Feb 22 - March 04): $1661.56\\\\\\\\nUC Santa Barbara (Jan 17): $3668.435\\\\\\\\n\\\\\\\\n\\\\\\\\nTotal: $5329.91\\\\\\\\n\\\\\\\\nAll invoices have been made available to NEAR Foundation.\\\\\\\\n\\\\\\\\n\", \"linked_proposals\": [], \"receiver_account\": \"bpolania.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"5330\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.8874077431678e+21
    }
  },
  {
    "id": "3233335589",
    "receipt_id": "HtBmkmeAAKQu4g73U8Lk1omP6y13TzzcaR62CksSaMsk",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "438bTSYANLcRYDFc4b6a263YjZP7vhXA2VxX3XdtSJ6n",
      "block_height": 115307914,
      "block_timestamp": 1711202554235682300
    },
    "receipt_outcome": {
      "gas_burnt": 5754450573776,
      "tokens_burnt": 575445057377600000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "GrDoY568odyYGdrcPacvK8EcP2HnxhW6ccXHW954BvH6",
    "included_in_block_hash": "HtLrniTYAh9z9DX8LNxMmKqbBVzooFsoEy5XAu6DKtj8",
    "block_timestamp": "1711202550907516077",
    "block": {
      "block_height": 115307911
    },
    "receipt_conversion_tokens_burnt": "242975670181400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 575445057377600000000,
        "args": "{\"data\": {\"devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"We have just received a new *Events & Hackathons* proposal.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**By**: @bpolania.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Title**: \\\\\\\\u{201c}Expenses for DevRel Events March 2024\\\\\\\\u{201c}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Summary**:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThese are the expenses for ETHDenver and ETHGlobal London\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nRead the full proposal and share your feedback on [DevHub](/devhub.near/widget/app?page=proposal&id=13)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.8874077431678e+21
    }
  },
  {
    "id": "3233335590",
    "receipt_id": "2qtEkozXbAARy8yBboqkkwkCRAqz8CWda7Hh62seBwoh",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "438bTSYANLcRYDFc4b6a263YjZP7vhXA2VxX3XdtSJ6n",
      "block_height": 115307914,
      "block_timestamp": 1711202554235682300
    },
    "receipt_outcome": {
      "gas_burnt": 3800350078404,
      "tokens_burnt": 380035007840400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "GrDoY568odyYGdrcPacvK8EcP2HnxhW6ccXHW954BvH6",
    "included_in_block_hash": "HtLrniTYAh9z9DX8LNxMmKqbBVzooFsoEy5XAu6DKtj8",
    "block_timestamp": "1711202550907516077",
    "block": {
      "block_height": 115307911
    },
    "receipt_conversion_tokens_burnt": "242975670181400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_block_height_callback",
        "deposit": 0,
        "fee": 380035007840400000000,
        "args": "{\"proposal\": {\"id\": 13, \"snapshot\": {\"name\": \"Expenses for DevRel Events March 2024\", \"labels\": [], \"summary\": \"These are the expenses for ETHDenver and ETHGlobal London\", \"category\": \"Events & Hackathons\", \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"editor_id\": \"bpolania.near\", \"timestamp\": \"1711202553173852183\", \"supervisor\": \"yarotska.near\", \"description\": \"Number of Days: 17 days\\\\\\\\nNumber of Events; 2\\\\\\\\nCosts Covered: Hotels, Transportation, Plane Tickets and Food\\\\\\\\n\\\\\\\\nETHDenver (Feb 22 - March 04): $1661.56\\\\\\\\nUC Santa Barbara (Jan 17): $3668.435\\\\\\\\n\\\\\\\\n\\\\\\\\nTotal: $5329.91\\\\\\\\n\\\\\\\\nAll invoices have been made available to NEAR Foundation.\\\\\\\\n\\\\\\\\n\", \"linked_proposals\": [], \"receiver_account\": \"bpolania.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"5330\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"author_id\": \"bpolania.near\", \"snapshot_history\": [], \"social_db_post_block_height\": \"0\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.8874077431678e+21
    }
  },
  {
    "id": "3233335591",
    "receipt_id": "AUU8bsYYTJ1QuRsJ1RM1RuXfUXbaweZJT1asTZTAsih1",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "438bTSYANLcRYDFc4b6a263YjZP7vhXA2VxX3XdtSJ6n",
      "block_height": 115307914,
      "block_timestamp": 1711202554235682300
    },
    "receipt_outcome": {
      "gas_burnt": 4806506820293,
      "tokens_burnt": 480650682029300000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "GrDoY568odyYGdrcPacvK8EcP2HnxhW6ccXHW954BvH6",
    "included_in_block_hash": "HtLrniTYAh9z9DX8LNxMmKqbBVzooFsoEy5XAu6DKtj8",
    "block_timestamp": "1711202550907516077",
    "block": {
      "block_height": 115307911
    },
    "receipt_conversion_tokens_burnt": "242975670181400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 480650682029300000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"[{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yarotska.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":13,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bpolania.near\\\\\\\\\\\\\\\"}},{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":13,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bpolania.near\\\\\\\\\\\\\\\"}}]\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.8874077431678e+21
    }
  },
  {
    "id": "3233351397",
    "receipt_id": "SrgXJMdb1ycwzQCSuWPh5gfHqoJ2oMLp7XEvYyqBCdw",
    "predecessor_account_id": "bpolania.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "An3Xz7ycWoU2AW8n45KoYGWTFyHxejSXD9nsmBwLTrf8",
      "block_height": 115307944,
      "block_timestamp": 1711202593448784100
    },
    "receipt_outcome": {
      "gas_burnt": 11882094279876,
      "tokens_burnt": 1.1882094279876e+21,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "73cv5dmf49wazGrw4FPcPHLpXa6uz3gKx5MrJ4cGznFy",
    "included_in_block_hash": "Fh7F5mbDBTijjgPT2k4dD5Jer2FAMfRK8SDHdbNFdDS9",
    "block_timestamp": "1711202592081655913",
    "block": {
      "block_height": 115307943
    },
    "receipt_conversion_tokens_burnt": "242975670181400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "add_proposal",
        "deposit": 0,
        "fee": 1.1882094279876e+21,
        "args": "{\"body\": {\"name\": \"Expenses for DevRel Events March 2024\", \"summary\": \"These are the expenses for ETHDenver and ETHGlobal London\", \"category\": \"Events & Hackathons\", \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"supervisor\": \"yarotska.near\", \"description\": \"Number of Days: 17 days\\\\\\\\nNumber of Events; 2\\\\\\\\nCosts Covered: Hotels, Transportation, Plane Tickets and Food\\\\\\\\n\\\\\\\\nETHDenver (Feb 22 - March 04): $1661.56\\\\\\\\nUC Santa Barbara (Jan 17): $3668.435\\\\\\\\n\\\\\\\\n\\\\\\\\nTotal: $5329.91\\\\\\\\n\\\\\\\\nAll invoices have been made available to NEAR Foundation.\\\\\\\\n\\\\\\\\n\", \"linked_proposals\": [], \"receiver_account\": \"bpolania.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"5330\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"labels\": []}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.8768748453067e+21
    }
  },
  {
    "id": "3233355752",
    "receipt_id": "89WPoQeLGPkV939TxnyUrFrc9DrftUd6VUQ6f1oEXKnL",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5N8HW1bdHgtxngxZiKkajfv5yK3u1QxtihaGLXPM371K",
      "block_height": 115307952,
      "block_timestamp": 1711202604134820000
    },
    "receipt_outcome": {
      "gas_burnt": 5801287914206,
      "tokens_burnt": 580128791420600000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "73cv5dmf49wazGrw4FPcPHLpXa6uz3gKx5MrJ4cGznFy",
    "included_in_block_hash": "Fh7F5mbDBTijjgPT2k4dD5Jer2FAMfRK8SDHdbNFdDS9",
    "block_timestamp": "1711202592081655913",
    "block": {
      "block_height": 115307943
    },
    "receipt_conversion_tokens_burnt": "242975670181400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 580128791420600000000,
        "args": "{\"data\": {\"devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"We have just received a new *Events & Hackathons* proposal.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**By**: @bpolania.near\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Title**: \\\\\\\\u{201c}Expenses for DevRel Events March 2024\\\\\\\\u{201c}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Summary**:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThese are the expenses for ETHDenver and ETHGlobal London\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\u{2014}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nRead the full proposal and share your feedback on [DevHub](/devhub.near/widget/app?page=proposal&id=14)\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.8768748453067e+21
    }
  },
  {
    "id": "3233355759",
    "receipt_id": "C8WsiKoQNtnWY7vhvq1TeXqLeXvNreWqDsYe3MoWVXAD",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5N8HW1bdHgtxngxZiKkajfv5yK3u1QxtihaGLXPM371K",
      "block_height": 115307952,
      "block_timestamp": 1711202604134820000
    },
    "receipt_outcome": {
      "gas_burnt": 3800350078404,
      "tokens_burnt": 380035007840400000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "73cv5dmf49wazGrw4FPcPHLpXa6uz3gKx5MrJ4cGznFy",
    "included_in_block_hash": "Fh7F5mbDBTijjgPT2k4dD5Jer2FAMfRK8SDHdbNFdDS9",
    "block_timestamp": "1711202592081655913",
    "block": {
      "block_height": 115307943
    },
    "receipt_conversion_tokens_burnt": "242975670181400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_block_height_callback",
        "deposit": 0,
        "fee": 380035007840400000000,
        "args": "{\"proposal\": {\"id\": 14, \"snapshot\": {\"name\": \"Expenses for DevRel Events March 2024\", \"labels\": [], \"summary\": \"These are the expenses for ETHDenver and ETHGlobal London\", \"category\": \"Events & Hackathons\", \"timeline\": {\"status\": \"REVIEW\", \"sponsor_requested_review\": false, \"reviewer_completed_attestation\": false}, \"editor_id\": \"bpolania.near\", \"timestamp\": \"1711202602857058349\", \"supervisor\": \"yarotska.near\", \"description\": \"Number of Days: 17 days\\\\\\\\nNumber of Events; 2\\\\\\\\nCosts Covered: Hotels, Transportation, Plane Tickets and Food\\\\\\\\n\\\\\\\\nETHDenver (Feb 22 - March 04): $1661.56\\\\\\\\nUC Santa Barbara (Jan 17): $3668.435\\\\\\\\n\\\\\\\\n\\\\\\\\nTotal: $5329.91\\\\\\\\n\\\\\\\\nAll invoices have been made available to NEAR Foundation.\\\\\\\\n\\\\\\\\n\", \"linked_proposals\": [], \"receiver_account\": \"bpolania.near\", \"requested_sponsor\": \"neardevdao.near\", \"proposal_body_version\": \"V0\", \"requested_sponsorship_usd_amount\": \"5330\", \"requested_sponsorship_paid_in_currency\": \"USDC\"}, \"author_id\": \"bpolania.near\", \"snapshot_history\": [], \"social_db_post_block_height\": \"0\"}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.8768748453067e+21
    }
  },
  {
    "id": "3233355765",
    "receipt_id": "2YWqgGVMrpPQ6z2mEDgXHSG2BJT6M7JGSNEeVRqEV7Xu",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "5N8HW1bdHgtxngxZiKkajfv5yK3u1QxtihaGLXPM371K",
      "block_height": 115307952,
      "block_timestamp": 1711202604134820000
    },
    "receipt_outcome": {
      "gas_burnt": 4855259478767,
      "tokens_burnt": 485525947876700000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "73cv5dmf49wazGrw4FPcPHLpXa6uz3gKx5MrJ4cGznFy",
    "included_in_block_hash": "Fh7F5mbDBTijjgPT2k4dD5Jer2FAMfRK8SDHdbNFdDS9",
    "block_timestamp": "1711202592081655913",
    "block": {
      "block_height": 115307943
    },
    "receipt_conversion_tokens_burnt": "242975670181400000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 485525947876700000000,
        "args": "{\"data\": {\"devhub.near\": {\"index\": {\"notify\": \"[{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"yarotska.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":14,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bpolania.near\\\\\\\\\\\\\\\"}},{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"neardevdao.near\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"devhub/mention\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"proposal\\\\\\\\\\\\\\\":14,\\\\\\\\\\\\\\\"notifier\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bpolania.near\\\\\\\\\\\\\\\"}}]\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.8768748453067e+21
    }
  },
  {
    "id": "3255719275",
    "receipt_id": "6e5U2JvhMJURaCbCDfxGhoXKMZxVLsorui7WvzYtX4W2",
    "predecessor_account_id": "victorkanu1.near",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "6H6btQWnZFDjwsuogUAHFaUGvq2FcMnUXZoEBkmsy91A",
      "block_height": 115375528,
      "block_timestamp": 1711287466875313400
    },
    "receipt_outcome": {
      "gas_burnt": 6452672291482,
      "tokens_burnt": 645267229148200000000,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "CbU8RC62f2MH1Dk1pNhgZnsujSW7V1qBLeQJktkGaF8r",
    "included_in_block_hash": "8pqN5PG4whY6uXPqnx1MeJVxMvetNQbu6XcKvLMnRqSy",
    "block_timestamp": "1711287465630354997",
    "block": {
      "block_height": 115375527
    },
    "receipt_conversion_tokens_burnt": "242964714104800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set_community_socialdb",
        "deposit": 0,
        "fee": 645267229148200000000,
        "args": "{\"data\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"image\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"ipfs_cid\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bafkreiauxt7oqxpdh2ubswdac67nmd5favvui3v2w73l7g3ktfqduwj3gy\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{1f4e2} Hey devs, Take a breather this weekend and catch up on technical updates you may have missed across the NEAR Developer ecosystem.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{1f449}[NEAR Dev NEWS #4](https://near.social/devhub.near/widget/app?page=blog&id=3243) brings exciting updates on releases like the near2ts tool, automated PR merging for near-api-js, and insights on NEP approvals.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{1f642} Read and share your thoughts on our [discussions](https://near.social/devhub.near/widget/app?page=community&handle=neardevnews&tab=discussions) page.\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}, \"handle\": \"neardevnews\"}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4831488997774e+21
    }
  },
  {
    "id": "3255720515",
    "receipt_id": "Hyz6SiSK8k5FsnjMDEpzUFBZ5MNrEdu99K2T9jrREhYt",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "GMVU7uiToGfEHZ9jrxpCP2TZgx6Uo6EYC6vJe3hJsZZt",
      "block_height": 115375529,
      "block_timestamp": 1711287468335008800
    },
    "receipt_outcome": {
      "gas_burnt": 5949169565244,
      "tokens_burnt": 594916956524400000000,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "CbU8RC62f2MH1Dk1pNhgZnsujSW7V1qBLeQJktkGaF8r",
    "included_in_block_hash": "8pqN5PG4whY6uXPqnx1MeJVxMvetNQbu6XcKvLMnRqSy",
    "block_timestamp": "1711287465630354997",
    "block": {
      "block_height": 115375527
    },
    "receipt_conversion_tokens_burnt": "242964714104800000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 594916956524400000000,
        "args": "{\"data\": {\"neardevnews.community.devhub.near\": {\"post\": {\"main\": \"{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"image\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"ipfs_cid\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bafkreiauxt7oqxpdh2ubswdac67nmd5favvui3v2w73l7g3ktfqduwj3gy\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\u{1f4e2} Hey devs, Take a breather this weekend and catch up on technical updates you may have missed across the NEAR Developer ecosystem.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{1f449}[NEAR Dev NEWS #4](https://near.social/devhub.near/widget/app?page=blog&id=3243) brings exciting updates on releases like the near2ts tool, automated PR merging for near-api-js, and insights on NEP approvals.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\u{1f642} Read and share your thoughts on our [discussions](https://near.social/devhub.near/widget/app?page=community&handle=neardevnews&tab=discussions) page.\\\\\\\\\\\\\\\"}\"}, \"index\": {\"post\": \"{\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"main\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"md\\\\\\\\\\\\\\\"}}\"}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 1.4831488997774e+21
    }
  },
  {
    "id": "3255911539",
    "receipt_id": "BmR47xKzPvQwQbRcV6iV1T1H4JGZusbL8gAa5K4rPfkq",
    "predecessor_account_id": "devhub.near",
    "receiver_account_id": "social.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "8iuuGRnyopXn5U8GHuS2VcUzF3rSdZxYFfJePAooGNgP",
      "block_height": 115376130,
      "block_timestamp": 1711288234209714000
    },
    "receipt_outcome": {
      "gas_burnt": 18953667534717,
      "tokens_burnt": 1.8953667534717e+21,
      "executor_account_id": "social.near",
      "status": true
    },
    "transaction_hash": "5qwByPA7qhdobKJSpqhormZdWijdxkqzUR4CeP7tUsPw",
    "included_in_block_hash": "FHXam3czuZYAj1XK4VhpZxdBfbWwyeVzPwhNnAbpsNvP",
    "block_timestamp": "1711288232828325217",
    "block": {
      "block_height": 115376129
    },
    "receipt_conversion_tokens_burnt": "258898203382200000000",
    "actions": [
      {
        "action": "FUNCTION_CALL",
        "method": "set",
        "deposit": 0,
        "fee": 1.8953667534717e+21,
        "args": "{\"data\": {\"devhub.near\": {\"widget\": {\"devhub.page.addon\": {\"\": \"const Container = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  height: 100%;\\\\\\\\n  width: 100%;\\\\\\\\n  position: relative;\\\\\\\\n  padding: 0 1rem;\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 960px) {\\\\\\\\n    padding: 0 1rem;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Content = styled.div`\\\\\\\\n  flex: 1;\\\\\\\\n  padding: 20px;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst SettingsButton = styled.button`\\\\\\\\n  position: absolute;\\\\\\\\n  top: 10px;\\\\\\\\n  right: 10px;\\\\\\\\n\\\\\\\\n  background-color: #fff;\\\\\\\\n  display: flex;\\\\\\\\n  padding: 14px 16px;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 16px;\\\\\\\\n  width: 50px;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  border-radius: 4px;\\\\\\\\n  border: 1px solid #00ec97;\\\\\\\\n\\\\\\\\n  z-index: 10;\\\\\\\\n\\\\\\\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    transform: translateY(2px);\\\\\\\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  &:active {\\\\\\\\n    transform: translateY(0);\\\\\\\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst CenteredMessage = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  flex-direction: column;\\\\\\\\n  justify-content: center;\\\\\\\\n  align-items: center;\\\\\\\\n  width: 100%;\\\\\\\\n  height: ${(p) => p.height ?? \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\"};\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst { addon, permissions, handle } = props;\\\\\\\\n\\\\\\\\nconst { getAllAddons, setCommunityAddon } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!getAllAddons || !setCommunityAddon) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst availableAddons = getAllAddons();\\\\\\\\n\\\\\\\\nconst addonMatch = (availableAddons ?? []).find(\\\\\\\\n  (it) => it.id === addon.addon_id\\\\\\\\n);\\\\\\\\n\\\\\\\\nif (!addonMatch) {\\\\\\\\n  return (\\\\\\\\n    <CenteredMessage height={\\\\\\\\\\\\\\\"384px\\\\\\\\\\\\\\\"}>\\\\\\\\n      <h2>Addon with id: \\\\\\\\\\\\\\\"{addon.addon_id}\\\\\\\\\\\\\\\" not found.</h2>\\\\\\\\n    </CenteredMessage>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst config = JSON.parse(addon.parameters || \\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nconst ButtonRow = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  justify-content: space-between;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst [view, setView] = useState(props.view || \\\\\\\\\\\\\\\"viewer\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\" !== \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\") {\\\\\\\\n  addonMatch.configurator_widget = addonMatch.configurator_widget.replace(\\\\\\\\n    \\\\\\\\\\\\\\\"devhub.near/\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"devhub.near/\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n  addonMatch.view_widget = addonMatch.view_widget.replace(\\\\\\\\n    \\\\\\\\\\\\\\\"devhub.near/\\\\\\\\\\\\\\\",\\\\\\\\n    \\\\\\\\\\\\\\\"devhub.near/\\\\\\\\\\\\\\\"\\\\\\\\n  );\\\\\\\\n}\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container>\\\\\\\\n    {permissions.can_configure && (\\\\\\\\n      <SettingsButton\\\\\\\\n        onClick={() => setView(view === \\\\\\\\\\\\\\\"configure\\\\\\\\\\\\\\\" ? \\\\\\\\\\\\\\\"view\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"configure\\\\\\\\\\\\\\\")}\\\\\\\\n      >\\\\\\\\n        {view === \\\\\\\\\\\\\\\"configure\\\\\\\\\\\\\\\" ? (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"bi bi-x\\\\\\\\\\\\\\\"></span>\\\\\\\\n        ) : (\\\\\\\\n          <span className=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"></span>\\\\\\\\n        )}\\\\\\\\n      </SettingsButton>\\\\\\\\n    )}\\\\\\\\n    <Content>\\\\\\\\n      {view === \\\\\\\\\\\\\\\"configure\\\\\\\\\\\\\\\" ? (\\\\\\\\n        <Widget\\\\\\\\n          src={addonMatch.configurator_widget}\\\\\\\\n          props={{\\\\\\\\n            ...config,\\\\\\\\n            data: config,\\\\\\\\n            onSubmit: (data) => {\\\\\\\\n              setCommunityAddon({\\\\\\\\n                handle,\\\\\\\\n                addon: {\\\\\\\\n                  ...addon,\\\\\\\\n                  parameters: JSON.stringify(data),\\\\\\\\n                },\\\\\\\\n              });\\\\\\\\n            },\\\\\\\\n            handle, // this is temporary prop drilling until kanban and github are migrated\\\\\\\\n            permissions,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      ) : (\\\\\\\\n        <Widget\\\\\\\\n          src={addonMatch.view_widget}\\\\\\\\n          props={{\\\\\\\\n            ...config,\\\\\\\\n            data: config,\\\\\\\\n            handle,\\\\\\\\n            permissions,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      )}\\\\\\\\n    </Content>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.proposal.Proposal\": {\"\": \"const { href } = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.url\\\\\\\\\\\\\\\") || {\\\\\\\\n  href: () => {},\\\\\\\\n};\\\\\\\\nconst { readableDate } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.common\\\\\\\\\\\\\\\"\\\\\\\\n) || { readableDate: () => {} };\\\\\\\\nconst { getDepositAmountForWriteAccess } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.common\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\ngetDepositAmountForWriteAccess || (getDepositAmountForWriteAccess = () => {});\\\\\\\\n\\\\\\\\nconst accountId = context.accountId;\\\\\\\\n/*\\\\\\\\n---props---\\\\\\\\nprops.id: number;\\\\\\\\nprops.timestamp: number; optional\\\\\\\\n*/\\\\\\\\n\\\\\\\\nconst TIMELINE_STATUS = {\\\\\\\\n  DRAFT: \\\\\\\\\\\\\\\"DRAFT\\\\\\\\\\\\\\\",\\\\\\\\n  REVIEW: \\\\\\\\\\\\\\\"REVIEW\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED: \\\\\\\\\\\\\\\"APPROVED\\\\\\\\\\\\\\\",\\\\\\\\n  REJECTED: \\\\\\\\\\\\\\\"REJECTED\\\\\\\\\\\\\\\",\\\\\\\\n  CANCELED: \\\\\\\\\\\\\\\"CANCELLED\\\\\\\\\\\\\\\",\\\\\\\\n  APPROVED_CONDITIONALLY: \\\\\\\\\\\\\\\"APPROVED_CONDITIONALLY\\\\\\\\\\\\\\\",\\\\\\\\n  PAYMENT_PROCESSING: \\\\\\\\\\\\\\\"PAYMENT_PROCESSING\\\\\\\\\\\\\\\",\\\\\\\\n  FUNDED: \\\\\\\\\\\\\\\"FUNDED\\\\\\\\\\\\\\\",\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst Container = styled.div`\\\\\\\\n  .full-width-div {\\\\\\\\n    width: 100vw;\\\\\\\\n    position: relative;\\\\\\\\n    left: 50%;\\\\\\\\n    right: 50%;\\\\\\\\n    margin-left: -50vw;\\\\\\\\n    margin-right: -50vw;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .fw-bold {\\\\\\\\n    font-weight: 600 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .card.no-border {\\\\\\\\n    border-left: none !important;\\\\\\\\n    border-right: none !important;\\\\\\\\n    margin-bottom: -3.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .description-box {\\\\\\\\n    font-size: 14px;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .draft-info-container {\\\\\\\\n    background-color: #ecf8fb;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .review-info-container {\\\\\\\\n    background-color: #fef6ee;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .text-sm {\\\\\\\\n    font-size: 13px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-1 {\\\\\\\\n    flex: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .flex-3 {\\\\\\\\n    flex: 3;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .circle {\\\\\\\\n    width: 20px;\\\\\\\\n    height: 20px;\\\\\\\\n    border-radius: 50%;\\\\\\\\n    border: 1px solid grey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-fill {\\\\\\\\n    background-color: rgb(4, 164, 110) !important;\\\\\\\\n    border-color: rgb(4, 164, 110) !important;\\\\\\\\n    color: white !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .yellow-fill {\\\\\\\\n    border-color: #ff7a00 !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 180px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 970px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 135px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 70px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  @media screen and (max-width: 570px) {\\\\\\\\n    .vertical-line {\\\\\\\\n      height: 180px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .vertical-line-sm {\\\\\\\\n      height: 75px !important;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    .gap-6 {\\\\\\\\n      gap: 0.5rem !important;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .vertical-line-sm {\\\\\\\\n    width: 2px;\\\\\\\\n    height: 70px;\\\\\\\\n    background-color: lightgrey;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:disabled ~ .form-check-label,\\\\\\\\n  .form-check-input[disabled] ~ .form-check-label {\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input {\\\\\\\\n    border-color: black !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .grey-btn {\\\\\\\\n    background-color: #687076;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .form-check-input:checked {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border-color: #04a46e !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-toggle:after {\\\\\\\\n    position: absolute;\\\\\\\\n    top: 46%;\\\\\\\\n    right: 5%;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .drop-btn {\\\\\\\\n    max-width: none !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .dropdown-menu {\\\\\\\\n    width: 100%;\\\\\\\\n    border-radius: 0.375rem !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .green-btn {\\\\\\\\n    background-color: #04a46e !important;\\\\\\\\n    border: none;\\\\\\\\n    color: white;\\\\\\\\n\\\\\\\\n    &:active {\\\\\\\\n      color: white;\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .gap-6 {\\\\\\\\n    gap: 2.5rem;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  .border-vertical {\\\\\\\\n    border-top: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n    border-bottom: var(--bs-border-width) var(--bs-border-style)\\\\\\\\n      var(--bs-border-color) !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  button.px-0 {\\\\\\\\n    padding-inline: 0px !important;\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  red-icon i {\\\\\\\\n    color: red;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst ProposalContainer = styled.div`\\\\\\\\n  border: 1px solid lightgrey;\\\\\\\\n  overflow: auto;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Header = styled.div`\\\\\\\\n  position: relative;\\\\\\\\n  background-color: #f4f4f4;\\\\\\\\n  height: 50px;\\\\\\\\n\\\\\\\\n  .menu {\\\\\\\\n    position: absolute;\\\\\\\\n    right: 10px;\\\\\\\\n    top: 4px;\\\\\\\\n    font-size: 30px;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Text = styled.p`\\\\\\\\n  display: block;\\\\\\\\n  margin: 0;\\\\\\\\n  font-size: 14px;\\\\\\\\n  line-height: 20px;\\\\\\\\n  font-weight: 400;\\\\\\\\n  color: #687076;\\\\\\\\n  white-space: nowrap;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Actions = styled.div`\\\\\\\\n  display: flex;\\\\\\\\n  align-items: center;\\\\\\\\n  gap: 12px;\\\\\\\\n  margin: -6px -6px 6px;\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst Avatar = styled.div`\\\\\\\\n  width: 40px;\\\\\\\\n  height: 40px;\\\\\\\\n  pointer-events: none;\\\\\\\\n\\\\\\\\n  img {\\\\\\\\n    object-fit: cover;\\\\\\\\n    border-radius: 40px;\\\\\\\\n    width: 100%;\\\\\\\\n    height: 100%;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst stepsArray = [1, 2, 3, 4, 5];\\\\\\\\n\\\\\\\\nconst { id, timestamp } = props;\\\\\\\\nconst proposal = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n  proposal_id: parseInt(id),\\\\\\\\n});\\\\\\\\n\\\\\\\\nif (!proposal) {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ height: \\\\\\\\\\\\\\\"50vh\\\\\\\\\\\\\\\" }}\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center w-100\\\\\\\\\\\\\\\"\\\\\\\\n    >\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Spinner\\\\\\\\\\\\\\\"}\\\\\\\\n      />\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n}\\\\\\\\nif (timestamp && proposal) {\\\\\\\\n  proposal.snapshot =\\\\\\\\n    proposal.snapshot_history.find((item) => item.timestamp === timestamp) ??\\\\\\\\n    proposal.snapshot;\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst { snapshot } = proposal;\\\\\\\\n\\\\\\\\nconst authorId = proposal.author_id;\\\\\\\\nconst blockHeight = parseInt(proposal.social_db_post_block_height);\\\\\\\\nconst item = {\\\\\\\\n  type: \\\\\\\\\\\\\\\"social\\\\\\\\\\\\\\\",\\\\\\\\n  path: `devhub.near/post/main`,\\\\\\\\n  blockHeight,\\\\\\\\n};\\\\\\\\nconst proposalURL = `https://near.org/devhub.near/widget/app?page=proposal&id=${proposal.id}&timestamp=${snapshot.timestamp}`;\\\\\\\\n\\\\\\\\nconst KycVerificationStatus = () => {\\\\\\\\n  const isVerified = true;\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <img\\\\\\\\n        src={\\\\\\\\n          isVerified\\\\\\\\n            ? \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreidqveupkcc7e3rko2e67lztsqrfnjzw3ceoajyglqeomvv7xznusm\\\\\\\\\\\\\\\"\\\\\\\\n            : \\\\\\\\\\\\\\\"https://ipfs.near.social/ipfs/bafkreieq4222tf3hkbccfnbw5kpgedm3bf2zcfgzbnmismxav2phqdwd7q\\\\\\\\\\\\\\\"\\\\\\\\n        }\\\\\\\\n        height={40}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">KYC Verified</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">Expires on Aug 24, 2024</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst SidePanelItem = ({ title, children, hideBorder }) => {\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      style={{ gap: \\\\\\\\\\\\\\\"8px\\\\\\\\\\\\\\\" }}\\\\\\\\n      className={\\\\\\\\\\\\\\\"d-flex flex-column pb-3 \\\\\\\\\\\\\\\" + (!hideBorder && \\\\\\\\\\\\\\\" border-bottom\\\\\\\\\\\\\\\")}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 mb-0\\\\\\\\\\\\\\\">{title} </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst proposalStatusOptions = [\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Draft\\\\\\\\\\\\\\\",\\\\\\\\n    value: { status: TIMELINE_STATUS.DRAFT },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Review\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.REVIEW,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.APPROVED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Approved-Conditionally\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Rejected\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.REJECTED,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.CANCELED,\\\\\\\\n      sponsor_requested_review: false,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Payment-processing\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.PAYMENT_PROCESSING,\\\\\\\\n      kyc_verified: false,\\\\\\\\n      test_transaction_sent: false,\\\\\\\\n      request_for_trustees_created: false,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    label: \\\\\\\\\\\\\\\"Funded\\\\\\\\\\\\\\\",\\\\\\\\n    value: {\\\\\\\\n      status: TIMELINE_STATUS.FUNDED,\\\\\\\\n      trustees_released_payment: true,\\\\\\\\n      kyc_verified: true,\\\\\\\\n      test_transaction_sent: true,\\\\\\\\n      request_for_trustees_created: true,\\\\\\\\n      sponsor_requested_review: true,\\\\\\\\n      reviewer_completed_attestation: false,\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n];\\\\\\\\n\\\\\\\\nconst LinkedProposals = () => {\\\\\\\\n  const linkedProposalsData = [];\\\\\\\\n  snapshot.linked_proposals.map((item) => {\\\\\\\\n    const data = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"get_proposal\\\\\\\\\\\\\\\", {\\\\\\\\n      proposal_id: item,\\\\\\\\n    });\\\\\\\\n    if (data !== null) {\\\\\\\\n      linkedProposalsData.push(data);\\\\\\\\n    }\\\\\\\\n  });\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n      {linkedProposalsData.map((item) => {\\\\\\\\n        const link = `https://near.org/devhub.near/widget/app?page=proposal&id=${item.id}`;\\\\\\\\n        return (\\\\\\\\n          <a href={link} target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\" rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\">\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"d-flex gap-2\\\\\\\\\\\\\\\">\\\\\\\\n              <Widget\\\\\\\\n                src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n                props={{\\\\\\\\n                  accountId: item.snapshot.editor_id,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\" style={{ maxWidth: 250 }}>\\\\\\\\n                <b className=\\\\\\\\\\\\\\\"text-truncate\\\\\\\\\\\\\\\">{item.snapshot.name}</b>\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                  created on {readableDate(item.snapshot.timestamp / 1000000)}\\\\\\\\n                </div>\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          </a>\\\\\\\\n        );\\\\\\\\n      })}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst CheckBox = ({ value, isChecked, label, disabled, onClick }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"checkbox\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={!isModerator || !showTimelineSetting || disabled}\\\\\\\\n        onChange={(e) => onClick(e.target.checked)}\\\\\\\\n      />\\\\\\\\n      <label style={{ width: \\\\\\\\\\\\\\\"90%\\\\\\\\\\\\\\\" }} class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">\\\\\\\\n        {label}\\\\\\\\n      </label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst RadioButton = ({ value, isChecked, label }) => {\\\\\\\\n  return (\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n      <input\\\\\\\\n        class=\\\\\\\\\\\\\\\"form-check-input\\\\\\\\\\\\\\\"\\\\\\\\n        type=\\\\\\\\\\\\\\\"radio\\\\\\\\\\\\\\\"\\\\\\\\n        value={value}\\\\\\\\n        checked={isChecked}\\\\\\\\n        disabled={true}\\\\\\\\n      />\\\\\\\\n      <label class=\\\\\\\\\\\\\\\"form-check-label text-black\\\\\\\\\\\\\\\">{label}</label>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst isAllowedToEditProposal = Near.view(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"is_allowed_to_edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n  {\\\\\\\\n    proposal_id: proposal.id,\\\\\\\\n    editor: accountId,\\\\\\\\n  }\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst isModerator = Near.view(\\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"has_moderator\\\\\\\\\\\\\\\", {\\\\\\\\n  account_id: accountId,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst editProposal = ({ timeline }) => {\\\\\\\\n  const body = {\\\\\\\\n    proposal_body_version: \\\\\\\\\\\\\\\"V0\\\\\\\\\\\\\\\",\\\\\\\\n    name: snapshot.name,\\\\\\\\n    description: snapshot.description,\\\\\\\\n    category: snapshot.category,\\\\\\\\n    summary: snapshot.summary,\\\\\\\\n    linked_proposals: snapshot.linked_proposals,\\\\\\\\n    requested_sponsorship_usd_amount: snapshot.requested_sponsorship_usd_amount,\\\\\\\\n    requested_sponsorship_paid_in_currency:\\\\\\\\n      snapshot.requested_sponsorship_paid_in_currency,\\\\\\\\n    receiver_account: snapshot.receiver_account,\\\\\\\\n    supervisor: supervisor || null,\\\\\\\\n    requested_sponsor: snapshot.requested_sponsor,\\\\\\\\n    timeline: timeline,\\\\\\\\n  };\\\\\\\\n  const args = { labels: [], body: body, id: proposal.id };\\\\\\\\n\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal\\\\\\\\\\\\\\\",\\\\\\\\n      args: args,\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst editProposalStatus = ({ timeline }) => {\\\\\\\\n  Near.call([\\\\\\\\n    {\\\\\\\\n      contractName: \\\\\\\\\\\\\\\"devhub.near\\\\\\\\\\\\\\\",\\\\\\\\n      methodName: \\\\\\\\\\\\\\\"edit_proposal_timeline\\\\\\\\\\\\\\\",\\\\\\\\n      args: {\\\\\\\\n        id: proposal.id,\\\\\\\\n        timeline: timeline,\\\\\\\\n      },\\\\\\\\n      gas: 270000000000000,\\\\\\\\n    },\\\\\\\\n  ]);\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst [isReviewModalOpen, setReviewModal] = useState(false);\\\\\\\\nconst [isCancelModalOpen, setCancelModal] = useState(false);\\\\\\\\nconst [showTimelineSetting, setShowTimelineSetting] = useState(false);\\\\\\\\nconst proposalStatus = useCallback(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.find(\\\\\\\\n      (i) => i.value.status === snapshot.timeline.status\\\\\\\\n    ),\\\\\\\\n  [snapshot]\\\\\\\\n);\\\\\\\\nconst [updatedProposalStatus, setUpdatedProposalStatus] = useState({\\\\\\\\n  ...proposalStatus(),\\\\\\\\n  value: { ...proposalStatus().value, ...snapshot.timeline },\\\\\\\\n});\\\\\\\\nconst [paymentHashes, setPaymentHashes] = useState([\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"]);\\\\\\\\nconst [supervisor, setSupervisor] = useState(snapshot.supervisor);\\\\\\\\n\\\\\\\\nconst selectedStatusIndex = useMemo(\\\\\\\\n  () =>\\\\\\\\n    proposalStatusOptions.findIndex((i) => {\\\\\\\\n      return updatedProposalStatus.value.status === i.value.status;\\\\\\\\n    }),\\\\\\\\n  [updatedProposalStatus]\\\\\\\\n);\\\\\\\\n\\\\\\\\nconst TimelineItems = ({ title, children, value, values }) => {\\\\\\\\n  const indexOfCurrentItem = proposalStatusOptions.findIndex((i) =>\\\\\\\\n    Array.isArray(values)\\\\\\\\n      ? values.includes(i.value.status)\\\\\\\\n      : value === i.value.status\\\\\\\\n  );\\\\\\\\n  let color = \\\\\\\\\\\\\\\"transparent\\\\\\\\\\\\\\\";\\\\\\\\n  let statusIndex = selectedStatusIndex;\\\\\\\\n\\\\\\\\n  // index 2,3,4,5  is of decision\\\\\\\\n  if (selectedStatusIndex === 3 || selectedStatusIndex === 2) {\\\\\\\\n    statusIndex = 2;\\\\\\\\n  }\\\\\\\\n  if (statusIndex === indexOfCurrentItem) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FEF6EE\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  if (\\\\\\\\n    statusIndex > indexOfCurrentItem ||\\\\\\\\n    updatedProposalStatus.value.status === TIMELINE_STATUS.FUNDED\\\\\\\\n  ) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#EEFEF0\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // reject\\\\\\\\n  if (statusIndex === 4 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#FF7F7F\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n  // cancelled\\\\\\\\n  if (statusIndex === 5 && indexOfCurrentItem === 2) {\\\\\\\\n    color = \\\\\\\\\\\\\\\"#F4F4F4\\\\\\\\\\\\\\\";\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"p-2 rounded-3\\\\\\\\\\\\\\\"\\\\\\\\n      style={{\\\\\\\\n        backgroundColor: color,\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"h6 text-black\\\\\\\\\\\\\\\"> {title}</div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"text-sm\\\\\\\\\\\\\\\">{children}</div>\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst link = href({\\\\\\\\n  widgetSrc: \\\\\\\\\\\\\\\"devhub.near/widget/app\\\\\\\\\\\\\\\",\\\\\\\\n  params: {\\\\\\\\n    page: \\\\\\\\\\\\\\\"create-proposal\\\\\\\\\\\\\\\",\\\\\\\\n    id: proposal.id,\\\\\\\\n    timestamp: timestamp,\\\\\\\\n  },\\\\\\\\n});\\\\\\\\n\\\\\\\\nreturn (\\\\\\\\n  <Container className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2 w-100 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmReviewModal\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isReviewModalOpen,\\\\\\\\n        onCancelClick: () => setReviewModal(false),\\\\\\\\n        onReviewClick: () => {\\\\\\\\n          setReviewModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[1].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <Widget\\\\\\\\n      src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ConfirmCancelModal\\\\\\\\\\\\\\\"}\\\\\\\\n      props={{\\\\\\\\n        isOpen: isCancelModalOpen,\\\\\\\\n        onCancelClick: () => setCancelModal(false),\\\\\\\\n        onConfirmClick: () => {\\\\\\\\n          setCancelModal(false);\\\\\\\\n          editProposalStatus({ timeline: proposalStatusOptions[5].value });\\\\\\\\n        },\\\\\\\\n      }}\\\\\\\\n    />\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex px-3 px-lg-0 justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center h3\\\\\\\\\\\\\\\">\\\\\\\\n        <div>{snapshot.name}</div>\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\">#{proposal.id}</div>\\\\\\\\n      </div>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src=\\\\\\\\\\\\\\\"near/widget/ShareButton\\\\\\\\\\\\\\\"\\\\\\\\n          props={{\\\\\\\\n            postType: \\\\\\\\\\\\\\\"post\\\\\\\\\\\\\\\",\\\\\\\\n            url: proposalURL,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n        {((isAllowedToEditProposal &&\\\\\\\\n          snapshot.timeline.status === TIMELINE_STATUS.DRAFT) ||\\\\\\\\n          isModerator) && (\\\\\\\\n          <Link to={link} style={{ textDecoration: \\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\" }}>\\\\\\\\n            <Widget\\\\\\\\n              src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"}\\\\\\\\n              props={{\\\\\\\\n                label: \\\\\\\\\\\\\\\"Edit\\\\\\\\\\\\\\\",\\\\\\\\n                classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n              }}\\\\\\\\n            />\\\\\\\\n          </Link>\\\\\\\\n        )}\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap flex-md-nowrap px-3 px-lg-0 gap-2 align-items-center text-sm pb-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n      <Widget\\\\\\\\n        src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.StatusTag\\\\\\\\\\\\\\\"}\\\\\\\\n        props={{\\\\\\\\n          timelineStatus: snapshot.timeline.status,\\\\\\\\n          size: \\\\\\\\\\\\\\\"sm\\\\\\\\\\\\\\\",\\\\\\\\n        }}\\\\\\\\n      />\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"w-100 d-flex flex-wrap flex-md-nowrap gap-1 align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\">{authorId} </div>\\\\\\\\n        <div>created on {readableDate(snapshot.timestamp / 1000000)}</div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n    <div className=\\\\\\\\\\\\\\\"card no-border rounded-0 full-width-div px-3 px-lg-0\\\\\\\\\\\\\\\">\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"container-xl py-4\\\\\\\\\\\\\\\">\\\\\\\\n        {snapshot.timeline.status === TIMELINE_STATUS.DRAFT &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"draft-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in draft mode and open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  The author can still refine the proposal and build consensus\\\\\\\\n                  before sharing it with sponsors. Click \\\\\\\\u{201c}Ready for review\\\\\\\\u{201d} when\\\\\\\\n                  you want to start the official review process. This will lock\\\\\\\\n                  the editing function, but comments are still open.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    label: \\\\\\\\\\\\\\\"Ready for review\\\\\\\\\\\\\\\",\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"grey-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setReviewModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        {snapshot.timeline.status === TIMELINE_STATUS.REVIEW &&\\\\\\\\n          isAllowedToEditProposal && (\\\\\\\\n            <div className=\\\\\\\\\\\\\\\"review-info-container p-3 p-sm-4 d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center gap-2 rounded-2\\\\\\\\\\\\\\\">\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"300px\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <b>\\\\\\\\n                  This proposal is in review mode and still open for community\\\\\\\\n                  comments.\\\\\\\\n                </b>\\\\\\\\n                <p className=\\\\\\\\\\\\\\\"text-sm text-muted mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                  You can\\\\\\\\u{2019}t edit the proposal, but comments are open. Only\\\\\\\\n                  moderators can make changes. Click \\\\\\\\u{201c}Cancel Proposal\\\\\\\\u{201d} to cancel\\\\\\\\n                  your proposal. This changes the status to Canceled, signaling\\\\\\\\n                  to sponsors that it\\\\\\\\u{2019}s no longer active or relevant.\\\\\\\\n                </p>\\\\\\\\n              </div>\\\\\\\\n              <div style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}>\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    label: (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                        <i class=\\\\\\\\\\\\\\\"bi bi-trash3\\\\\\\\\\\\\\\"></i> Cancel Proposal\\\\\\\\n                      </div>\\\\\\\\n                    ),\\\\\\\\n                    classNames: { root: \\\\\\\\\\\\\\\"btn-outline-danger btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                    onClick: () => setCancelModal(true),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"my-4\\\\\\\\\\\\\\\">\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex flex-wrap gap-6\\\\\\\\\\\\\\\">\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"flex-3 order-2 order-md-1\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex gap-2 flex-1\\\\\\\\\\\\\\\"\\\\\\\\n                style={{\\\\\\\\n                  zIndex: 9999,\\\\\\\\n                  background: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-none d-sm-flex\\\\\\\\\\\\\\\">\\\\\\\\n                  <Widget\\\\\\\\n                    src={\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.Profile\\\\\\\\\\\\\\\"}\\\\\\\\n                    props={{\\\\\\\\n                      accountId: authorId,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                </div>\\\\\\\\n                <ProposalContainer className=\\\\\\\\\\\\\\\"rounded-2 flex-1\\\\\\\\\\\\\\\">\\\\\\\\n                  <Header className=\\\\\\\\\\\\\\\"d-flex gap-1 align-items-center p-2 px-3 \\\\\\\\\\\\\\\">\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"fw-bold text-truncate\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ maxWidth: \\\\\\\\\\\\\\\"60%\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      {authorId}\\\\\\\\n                    </div>\\\\\\\\n                    <div\\\\\\\\n                      className=\\\\\\\\\\\\\\\"text-muted\\\\\\\\\\\\\\\"\\\\\\\\n                      style={{ minWidth: \\\\\\\\\\\\\\\"fit-content\\\\\\\\\\\\\\\" }}\\\\\\\\n                    >\\\\\\\\n                      \\\\\\\\u{ff65}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                      <Widget\\\\\\\\n                        src=\\\\\\\\\\\\\\\"near/widget/TimeAgo\\\\\\\\\\\\\\\"\\\\\\\\n                        props={{\\\\\\\\n                          blockHeight,\\\\\\\\n                          blockTimestamp: snapshot.timestamp,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      {context.accountId && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\">\\\\\\\\n                          <Widget\\\\\\\\n                            src=\\\\\\\\\\\\\\\"near/widget/Posts.Menu\\\\\\\\\\\\\\\"\\\\\\\\n                            props={{\\\\\\\\n                              accountId: authorId,\\\\\\\\n                              blockHeight: blockHeight,\\\\\\\\n                            }}\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                  </Header>\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 p-2 px-3 description-box\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      PROPOSAL CATEGORY\\\\\\\\n                    </div>\\\\\\\\n                    <div>\\\\\\\\n                      <Widget\\\\\\\\n                        src={\\\\\\\\n                          \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CategoryDropdown\\\\\\\\\\\\\\\"\\\\\\\\n                        }\\\\\\\\n                        props={{\\\\\\\\n                          selectedValue: snapshot.category,\\\\\\\\n                          disabled: true,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3\\\\\\\\\\\\\\\">\\\\\\\\n                      SUMMARY\\\\\\\\n                    </div>\\\\\\\\n                    <div>{snapshot.summary}</div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"text-muted h6 border-bottom pb-1 mt-3 mb-4\\\\\\\\\\\\\\\">\\\\\\\\n                      DESCRIPTION\\\\\\\\n                    </div>\\\\\\\\n                    <Widget\\\\\\\\n                      src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\\\\\\\\\\\\\\\"\\\\\\\\n                      props={{ text: snapshot.description }}\\\\\\\\n                    />\\\\\\\\n\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                      <Widget\\\\\\\\n                        src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.LikeButton\\\\\\\\\\\\\\\"\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          proposalId: proposal.id,\\\\\\\\n                          notifyAccountId: authorId,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src={\\\\\\\\n                          \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CommentIcon\\\\\\\\\\\\\\\"\\\\\\\\n                        }\\\\\\\\n                        props={{\\\\\\\\n                          item,\\\\\\\\n                          showOverlay: false,\\\\\\\\n                          onClick: () => {},\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                      <Widget\\\\\\\\n                        src=\\\\\\\\\\\\\\\"near/widget/CopyUrlButton\\\\\\\\\\\\\\\"\\\\\\\\n                        props={{\\\\\\\\n                          url: proposalURL,\\\\\\\\n                        }}\\\\\\\\n                      />\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                </ProposalContainer>\\\\\\\\n              </div>\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"border-bottom pb-4 mt-4\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.CommentsAndLogs\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    item: item,\\\\\\\\n                    snapshotHistory: [...proposal.snapshot_history, snapshot],\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n              <div\\\\\\\\n                style={{\\\\\\\\n                  position: \\\\\\\\\\\\\\\"relative\\\\\\\\\\\\\\\",\\\\\\\\n                  zIndex: 99,\\\\\\\\n                  backgroundColor: \\\\\\\\\\\\\\\"white\\\\\\\\\\\\\\\",\\\\\\\\n                }}\\\\\\\\n                className=\\\\\\\\\\\\\\\"pt-4\\\\\\\\\\\\\\\"\\\\\\\\n              >\\\\\\\\n                <Widget\\\\\\\\n                  src={\\\\\\\\n                    \\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.ComposeComment\\\\\\\\\\\\\\\"\\\\\\\\n                  }\\\\\\\\n                  props={{\\\\\\\\n                    ...props,\\\\\\\\n                    item: item,\\\\\\\\n                    notifyAccountId: authorId,\\\\\\\\n                    id: proposal.id,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n            </div>\\\\\\\\n            <div\\\\\\\\n              style={{ minWidth: \\\\\\\\\\\\\\\"350px\\\\\\\\\\\\\\\" }}\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 flex-1 order-1 order-md-2\\\\\\\\\\\\\\\"\\\\\\\\n            >\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: authorId,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                title={\\\\\\\\n                  \\\\\\\\\\\\\\\"Linked Proposals \\\\\\\\\\\\\\\" + `(${snapshot.linked_proposals.length})`\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <LinkedProposals />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Funding Ask\\\\\\\\\\\\\\\">\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"h4 text-black\\\\\\\\\\\\\\\">\\\\\\\\n                  {snapshot.requested_sponsorship_usd_amount && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                      <div>\\\\\\\\n                        {parseInt(\\\\\\\\n                          snapshot.requested_sponsorship_usd_amount\\\\\\\\n                        ).toLocaleString()}{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        USD\\\\\\\\n                      </div>\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"text-sm text-muted\\\\\\\\\\\\\\\">\\\\\\\\n                        Requested in{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                        {snapshot.requested_sponsorship_paid_in_currency}\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Wallet Address\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    accountId: snapshot.receiver_account,\\\\\\\\n                    noOverlay: true,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Recipient Verification Status\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.VerificationStatus\\\\\\\\\\\\\\\"\\\\\\\\n                  props={{\\\\\\\\n                    receiverAccount: snapshot.receiver_account,\\\\\\\\n                    showGetVerifiedBtn:\\\\\\\\n                      accountId === snapshot.receiver_account ||\\\\\\\\n                      accountId === authorId,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Requested Sponsor\\\\\\\\\\\\\\\">\\\\\\\\n                {snapshot.requested_sponsor && (\\\\\\\\n                  <Widget\\\\\\\\n                    src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                    props={{\\\\\\\\n                      accountId: snapshot.requested_sponsor,\\\\\\\\n                      noOverlay: true,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                )}\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem title=\\\\\\\\\\\\\\\"Supervisor\\\\\\\\\\\\\\\">\\\\\\\\n                {snapshot.supervisor ? (\\\\\\\\n                  <Widget\\\\\\\\n                    src=\\\\\\\\\\\\\\\"near/widget/AccountProfile\\\\\\\\\\\\\\\"\\\\\\\\n                    props={{\\\\\\\\n                      accountId: snapshot.supervisor,\\\\\\\\n                      noOverlay: true,\\\\\\\\n                    }}\\\\\\\\n                  />\\\\\\\\n                ) : (\\\\\\\\n                  \\\\\\\\\\\\\\\"No Supervisor\\\\\\\\\\\\\\\"\\\\\\\\n                )}\\\\\\\\n              </SidePanelItem>\\\\\\\\n              <SidePanelItem\\\\\\\\n                hideBorder={true}\\\\\\\\n                title={\\\\\\\\n                  <div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex justify-content-between align-content-center\\\\\\\\\\\\\\\">\\\\\\\\n                      Timeline\\\\\\\\n                      {isModerator && (\\\\\\\\n                        <div onClick={() => setShowTimelineSetting(true)}>\\\\\\\\n                          <i class=\\\\\\\\\\\\\\\"bi bi-gear\\\\\\\\\\\\\\\"></i>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                    </div>\\\\\\\\n                    {showTimelineSetting && (\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"mt-2 d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <h6 className=\\\\\\\\\\\\\\\"mb-0\\\\\\\\\\\\\\\">Proposal Status</h6>\\\\\\\\n                        <Widget\\\\\\\\n                          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.DropDown\\\\\\\\\\\\\\\"\\\\\\\\n                          props={{\\\\\\\\n                            options: proposalStatusOptions,\\\\\\\\n                            selectedValue: updatedProposalStatus,\\\\\\\\n                            onUpdate: (v) => {\\\\\\\\n                              setUpdatedProposalStatus({\\\\\\\\n                                ...v,\\\\\\\\n                                value: {\\\\\\\\n                                  ...v.value,\\\\\\\\n                                  ...updatedProposalStatus.value,\\\\\\\\n                                  status: v.value.status,\\\\\\\\n                                },\\\\\\\\n                              });\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    )}\\\\\\\\n                  </div>\\\\\\\\n                }\\\\\\\\n              >\\\\\\\\n                <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                  <div className=\\\\\\\\\\\\\\\"d-flex gap-3 mt-2\\\\\\\\\\\\\\\">\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n                      {stepsArray.map((_, index) => {\\\\\\\\n                        const indexOfCurrentItem = index;\\\\\\\\n                        let color = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\n                        let statusIndex = selectedStatusIndex;\\\\\\\\n                        // index 2,3,4 is of decision\\\\\\\\n                        if (\\\\\\\\n                          selectedStatusIndex === 3 ||\\\\\\\\n                          selectedStatusIndex === 2 ||\\\\\\\\n                          selectedStatusIndex === 4 ||\\\\\\\\n                          selectedStatusIndex === 5\\\\\\\\n                        ) {\\\\\\\\n                          statusIndex = 2;\\\\\\\\n                        }\\\\\\\\n                        if (selectedStatusIndex === 6) {\\\\\\\\n                          statusIndex = 3;\\\\\\\\n                        }\\\\\\\\n                        const current = statusIndex === indexOfCurrentItem;\\\\\\\\n                        const completed =\\\\\\\\n                          statusIndex > indexOfCurrentItem ||\\\\\\\\n                          updatedProposalStatus.value.status ===\\\\\\\\n                            TIMELINE_STATUS.FUNDED;\\\\\\\\n                        return (\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-1\\\\\\\\\\\\\\\">\\\\\\\\n                            <div\\\\\\\\n                              className={\\\\\\\\n                                \\\\\\\\\\\\\\\"circle \\\\\\\\\\\\\\\" +\\\\\\\\n                                (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                              }\\\\\\\\n                            >\\\\\\\\n                              {completed && (\\\\\\\\n                                <div\\\\\\\\n                                  className=\\\\\\\\\\\\\\\"d-flex justify-content-center align-items-center\\\\\\\\\\\\\\\"\\\\\\\\n                                  style={{ height: \\\\\\\\\\\\\\\"110%\\\\\\\\\\\\\\\" }}\\\\\\\\n                                >\\\\\\\\n                                  <i class=\\\\\\\\\\\\\\\"bi bi-check\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                </div>\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n\\\\\\\\n                            {index !== stepsArray.length - 1 && (\\\\\\\\n                              <div\\\\\\\\n                                className={\\\\\\\\n                                  \\\\\\\\\\\\\\\"vertical-line\\\\\\\\\\\\\\\" +\\\\\\\\n                                  (index === stepsArray.length - 2\\\\\\\\n                                    ? \\\\\\\\\\\\\\\"-sm \\\\\\\\\\\\\\\"\\\\\\\\n                                    : \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (completed && \\\\\\\\\\\\\\\" green-fill \\\\\\\\\\\\\\\") +\\\\\\\\n                                  (current && \\\\\\\\\\\\\\\" yellow-fill \\\\\\\\\\\\\\\")\\\\\\\\n                                }\\\\\\\\n                              ></div>\\\\\\\\n                            )}\\\\\\\\n                          </div>\\\\\\\\n                        );\\\\\\\\n                      })}\\\\\\\\n                    </div>\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3\\\\\\\\\\\\\\\">\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"1) Draft\\\\\\\\\\\\\\\"\\\\\\\\n                        value={TIMELINE_STATUS.DRAFT}\\\\\\\\n                      >\\\\\\\\n                        <div>\\\\\\\\n                          Once an author submits a proposal, it is in draft mode\\\\\\\\n                          and open for community comments. The author can still\\\\\\\\n                          make changes to the proposal during this stage and\\\\\\\\n                          submit it for official review when ready.\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"2) Review\\\\\\\\\\\\\\\"\\\\\\\\n                        value={TIMELINE_STATUS.REVIEW}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          Sponsors who agree to consider the proposal may\\\\\\\\n                          request attestations from work groups.\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  sponsor_requested_review: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor provides feedback or requests reviews\\\\\\\\\\\\\\\"\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .sponsor_requested_review\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 1}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Reviewer completes attestations (Optional)\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  reviewer_completed_attestation: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value\\\\\\\\n                                .reviewer_completed_attestation\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"3) Decision\\\\\\\\\\\\\\\"\\\\\\\\n                        values={[\\\\\\\\n                          TIMELINE_STATUS.APPROVED,\\\\\\\\n                          TIMELINE_STATUS.APPROVED_CONDITIONALLY,\\\\\\\\n                          TIMELINE_STATUS.REJECTED,\\\\\\\\n                        ]}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <div>Sponsor makes a final decision:</div>\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Approved</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              TIMELINE_STATUS.APPROVED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                            label={\\\\\\\\n                              <>\\\\\\\\n                                <div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">\\\\\\\\n                                  Approved - Conditional{\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"}\\\\\\\\n                                </div>\\\\\\\\n                                <span>\\\\\\\\n                                  Require follow up from recipient after payment\\\\\\\\n                                </span>\\\\\\\\n                              </>\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              TIMELINE_STATUS.APPROVED_CONDITIONALLY\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Reject\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Rejected</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              TIMELINE_STATUS.REJECTED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          <RadioButton\\\\\\\\n                            value=\\\\\\\\\\\\\\\"Canceled\\\\\\\\\\\\\\\"\\\\\\\\n                            label={<div className=\\\\\\\\\\\\\\\"fw-bold\\\\\\\\\\\\\\\">Canceled</div>}\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.status ===\\\\\\\\n                              TIMELINE_STATUS.CANCELED\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"4) Payment Processing\\\\\\\\\\\\\\\"\\\\\\\\n                        value={TIMELINE_STATUS.PAYMENT_PROCESSING}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor verifies KYC/KYB\\\\\\\\\\\\\\\"\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  kyc_verified: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={updatedProposalStatus.value.kyc_verified}\\\\\\\\n                          />\\\\\\\\n                          <CheckBox\\\\\\\\n                            value={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                            disabled={selectedStatusIndex !== 6}\\\\\\\\n                            label=\\\\\\\\\\\\\\\"Sponsor confirmed sponsorship and shared funding steps with recipient\\\\\\\\\\\\\\\"\\\\\\\\n                            onClick={(value) =>\\\\\\\\n                              setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                                ...prevState,\\\\\\\\n                                value: {\\\\\\\\n                                  ...prevState.value,\\\\\\\\n                                  test_transaction_sent: value,\\\\\\\\n                                },\\\\\\\\n                              }))\\\\\\\\n                            }\\\\\\\\n                            isChecked={\\\\\\\\n                              updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                            }\\\\\\\\n                          />\\\\\\\\n                          {/* Not needed for Alpha testing */}\\\\\\\\n                          {/* <CheckBox\\\\\\\\n                          value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                          disabled={selectedStatusIndex !== 6}\\\\\\\\n                          label=\\\\\\\\\\\\\\\"Sponsor sends test transaction\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={(value) =>\\\\\\\\n                            setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                              ...prevState,\\\\\\\\n                              value: {\\\\\\\\n                                ...prevState.value,\\\\\\\\n                                test_transaction_sent: value\\\\\\\\n                              }\\\\\\\\n                            }))\\\\\\\\n                          }\\\\\\\\n                          isChecked={\\\\\\\\n                            updatedProposalStatus.value.test_transaction_sent\\\\\\\\n                          }\\\\\\\\n                        />\\\\\\\\n                        <CheckBox\\\\\\\\n                          value=\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                          disabled={selectedStatusIndex !== 6}\\\\\\\\n                          label=\\\\\\\\\\\\\\\"Sponsor creates funding request from Trustees\\\\\\\\\\\\\\\"\\\\\\\\n                          onClick={(value) =>\\\\\\\\n                            setUpdatedProposalStatus((prevState) => ({\\\\\\\\n                              ...prevState,\\\\\\\\n                              value: {\\\\\\\\n                                ...prevState.value,\\\\\\\\n                                request_for_trustees_created: value\\\\\\\\n                              }\\\\\\\\n                            }))\\\\\\\\n                          }\\\\\\\\n                          isChecked={\\\\\\\\n                            updatedProposalStatus.value\\\\\\\\n                              .request_for_trustees_created\\\\\\\\n                          }\\\\\\\\n                        /> */}\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                      <TimelineItems\\\\\\\\n                        title=\\\\\\\\\\\\\\\"5) Funded\\\\\\\\\\\\\\\"\\\\\\\\n                        value={TIMELINE_STATUS.FUNDED}\\\\\\\\n                      >\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                          {paymentHashes?.length && paymentHashes[0] ? (\\\\\\\\n                            paymentHashes.map((link) => (\\\\\\\\n                              <a\\\\\\\\n                                href={link}\\\\\\\\n                                className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                              >\\\\\\\\n                                Payment Link\\\\\\\\n                                <i class=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                              </a>\\\\\\\\n                            ))\\\\\\\\n                          ) : updatedProposalStatus.value.payouts.length > 0 ? (\\\\\\\\n                            <div>\\\\\\\\n                              {updatedProposalStatus.value.payouts.map(\\\\\\\\n                                (link) => {\\\\\\\\n                                  return (\\\\\\\\n                                    <a\\\\\\\\n                                      href={link}\\\\\\\\n                                      className=\\\\\\\\\\\\\\\"text-decoration-underline\\\\\\\\\\\\\\\"\\\\\\\\n                                      target=\\\\\\\\\\\\\\\"_blank\\\\\\\\\\\\\\\"\\\\\\\\n                                      rel=\\\\\\\\\\\\\\\"noopener noreferrer\\\\\\\\\\\\\\\"\\\\\\\\n                                    >\\\\\\\\n                                      Payment Link\\\\\\\\n                                      <i class=\\\\\\\\\\\\\\\"bi bi-arrow-up-right\\\\\\\\\\\\\\\"></i>\\\\\\\\n                                    </a>\\\\\\\\n                                  );\\\\\\\\n                                }\\\\\\\\n                              )}\\\\\\\\n                            </div>\\\\\\\\n                          ) : (\\\\\\\\n                            \\\\\\\\\\\\\\\"No Payouts yet\\\\\\\\\\\\\\\"\\\\\\\\n                          )}\\\\\\\\n                        </div>\\\\\\\\n                      </TimelineItems>\\\\\\\\n                    </div>\\\\\\\\n                  </div>\\\\\\\\n                  {showTimelineSetting && (\\\\\\\\n                    <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                        <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">Supervisor</label>\\\\\\\\n                        <Widget\\\\\\\\n                          src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.entity.proposal.AccountInput\\\\\\\\\\\\\\\"\\\\\\\\n                          props={{\\\\\\\\n                            value: supervisor,\\\\\\\\n                            placeholder: \\\\\\\\\\\\\\\"Enter Supervisor\\\\\\\\\\\\\\\",\\\\\\\\n                            onUpdate: setSupervisor,\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                      {updatedProposalStatus.value.status ===\\\\\\\\n                        TIMELINE_STATUS.FUNDED && (\\\\\\\\n                        <div className=\\\\\\\\\\\\\\\"border-vertical py-3 my-2\\\\\\\\\\\\\\\">\\\\\\\\n                          <label className=\\\\\\\\\\\\\\\"text-black h6\\\\\\\\\\\\\\\">Payment Link</label>\\\\\\\\n                          <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-2\\\\\\\\\\\\\\\">\\\\\\\\n                            {paymentHashes.map((item, index) => (\\\\\\\\n                              <div className=\\\\\\\\\\\\\\\"d-flex gap-2 justify-content-between align-items-center\\\\\\\\\\\\\\\">\\\\\\\\n                                <Widget\\\\\\\\n                                  src=\\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Input\\\\\\\\\\\\\\\"\\\\\\\\n                                  props={{\\\\\\\\n                                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                                    value: item,\\\\\\\\n                                    onChange: (e) => {\\\\\\\\n                                      const updatedHashes = [...paymentHashes];\\\\\\\\n                                      updatedHashes[index] = e.target.value;\\\\\\\\n                                      setPaymentHashes(updatedHashes);\\\\\\\\n                                    },\\\\\\\\n                                    skipPaddingGap: true,\\\\\\\\n                                    placeholder: \\\\\\\\\\\\\\\"Enter URL\\\\\\\\\\\\\\\",\\\\\\\\n                                  }}\\\\\\\\n                                />\\\\\\\\n                                <div style={{ minWidth: 20 }}>\\\\\\\\n                                  {index !== paymentHashes.length - 1 ? (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={\\\\\\\\n                                        \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                                      }\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"btn-outline-danger shadow-none w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-trash3 h6\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () => {\\\\\\\\n                                          const updatedHashes = [\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                          ];\\\\\\\\n                                          updatedHashes.splice(index, 1);\\\\\\\\n                                          setPaymentHashes(updatedHashes);\\\\\\\\n                                        },\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  ) : (\\\\\\\\n                                    <Widget\\\\\\\\n                                      src={\\\\\\\\n                                        \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                                      }\\\\\\\\n                                      props={{\\\\\\\\n                                        classNames: {\\\\\\\\n                                          root: \\\\\\\\\\\\\\\"green-btn shadow-none border-0 w-100\\\\\\\\\\\\\\\",\\\\\\\\n                                        },\\\\\\\\n                                        label: <i class=\\\\\\\\\\\\\\\"bi bi-plus-lg\\\\\\\\\\\\\\\"></i>,\\\\\\\\n                                        onClick: () =>\\\\\\\\n                                          setPaymentHashes([\\\\\\\\n                                            ...paymentHashes,\\\\\\\\n                                            \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n                                          ]),\\\\\\\\n                                      }}\\\\\\\\n                                    />\\\\\\\\n                                  )}\\\\\\\\n                                </div>\\\\\\\\n                              </div>\\\\\\\\n                            ))}\\\\\\\\n                          </div>\\\\\\\\n                        </div>\\\\\\\\n                      )}\\\\\\\\n                      <div className=\\\\\\\\\\\\\\\"d-flex gap-2 align-items-center justify-content-end text-sm\\\\\\\\\\\\\\\">\\\\\\\\n                        <Widget\\\\\\\\n                          src={\\\\\\\\n                            \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                          }\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n                            classNames: {\\\\\\\\n                              root: \\\\\\\\\\\\\\\"btn-outline-danger border-0 shadow-none btn-sm\\\\\\\\\\\\\\\",\\\\\\\\n                            },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              setShowTimelineSetting(false);\\\\\\\\n                              setUpdatedProposalStatus(proposalStatus);\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                        <Widget\\\\\\\\n                          src={\\\\\\\\n                            \\\\\\\\\\\\\\\"devhub.near/widget/devhub.components.molecule.Button\\\\\\\\\\\\\\\"\\\\\\\\n                          }\\\\\\\\n                          props={{\\\\\\\\n                            label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n                            disabled: !supervisor,\\\\\\\\n                            classNames: { root: \\\\\\\\\\\\\\\"green-btn btn-sm\\\\\\\\\\\\\\\" },\\\\\\\\n                            onClick: () => {\\\\\\\\n                              if (!supervisor) {\\\\\\\\n                                return;\\\\\\\\n                              }\\\\\\\\n                              if (snapshot.supervisor !== supervisor) {\\\\\\\\n                                editProposal({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              } else if (\\\\\\\\n                                updatedProposalStatus.value.status ===\\\\\\\\n                                TIMELINE_STATUS.FUNDED\\\\\\\\n                              ) {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: {\\\\\\\\n                                    ...updatedProposalStatus.value,\\\\\\\\n                                    payouts: !paymentHashes[0]\\\\\\\\n                                      ? []\\\\\\\\n                                      : paymentHashes.filter(\\\\\\\\n                                          (item) => item !== \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\n                                        ),\\\\\\\\n                                  },\\\\\\\\n                                });\\\\\\\\n                              } else {\\\\\\\\n                                editProposalStatus({\\\\\\\\n                                  timeline: updatedProposalStatus.value,\\\\\\\\n                                });\\\\\\\\n                              }\\\\\\\\n                            },\\\\\\\\n                          }}\\\\\\\\n                        />\\\\\\\\n                      </div>\\\\\\\\n                    </div>\\\\\\\\n                  )}\\\\\\\\n                </div>\\\\\\\\n              </SidePanelItem>\\\\\\\\n            </div>\\\\\\\\n          </div>\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </div>\\\\\\\\n  </Container>\\\\\\\\n);\\\\\\\\n\"}, \"devhub.entity.addon.github.Configurator\": {\"\": \"const Struct = VM.require(\\\\\\\\\\\\\\\"devhub.near/widget/core.lib.struct\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\nif (!Struct) {\\\\\\\\n  return <p>Loading modules...</p>;\\\\\\\\n}\\\\\\\\nconst { useQuery } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.adapter.devhub-contract\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\nconst { uuid, withUUIDIndex } = VM.require(\\\\\\\\n  \\\\\\\\\\\\\\\"devhub.near/widget/core.lib.uuid\\\\\\\\\\\\\\\"\\\\\\\\n);\\\\\\\\n\\\\\\\\nuuid || (uuid = () => {});\\\\\\\\nwithUUIDIndex || (withUUIDIndex = () => {});\\\\\\\\nuseQuery || (useQuery = () => {});\\\\\\\\n\\\\\\\\nconst AttractableDiv = styled.div`\\\\\\\\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\\\\\\\\n  transition: box-shadow 0.6s;\\\\\\\\n\\\\\\\\n  &:hover {\\\\\\\\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\\\\\\\\n  }\\\\\\\\n`;\\\\\\\\n\\\\\\\\nconst settings = {\\\\\\\\n  maxColumnsNumber: 20,\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst GithubKanbanBoardTicketFeaturesSchema = {\\\\\\\\n  id: { label: \\\\\\\\\\\\\\\"GitHub ID\\\\\\\\\\\\\\\" },\\\\\\\\n  author: { label: \\\\\\\\\\\\\\\"Author\\\\\\\\\\\\\\\" },\\\\\\\\n  labels: { label: \\\\\\\\\\\\\\\"Labels\\\\\\\\\\\\\\\" },\\\\\\\\n  type: { label: \\\\\\\\\\\\\\\"Type\\\\\\\\\\\\\\\" },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst GithubKanbanBoardTicketTypesSchema = {\\\\\\\\n  Issue: { label: \\\\\\\\\\\\\\\"Issue\\\\\\\\\\\\\\\" },\\\\\\\\n  PullRequest: { label: \\\\\\\\\\\\\\\"Pull Request\\\\\\\\\\\\\\\" },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst GithubKanbanBoardDefaults = {\\\\\\\\n  columns: {},\\\\\\\\n  dataTypesIncluded: { Issue: false, PullRequest: true },\\\\\\\\n  description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  repoURL: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  ticketState: \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\",\\\\\\\\n  title: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n  metadata: {\\\\\\\\n    id: uuid(),\\\\\\\\n    type: \\\\\\\\\\\\\\\"github.kanban_board\\\\\\\\\\\\\\\",\\\\\\\\n    ticket: {\\\\\\\\n      type: \\\\\\\\\\\\\\\"github.kanban_ticket\\\\\\\\\\\\\\\",\\\\\\\\n      features: { id: true, author: true, labels: true, type: true },\\\\\\\\n    },\\\\\\\\n  },\\\\\\\\n};\\\\\\\\n\\\\\\\\nconst toMigrated = ({ metadata, id, ...restParams }) => ({\\\\\\\\n  metadata: {\\\\\\\\n    ...GithubKanbanBoardDefaults.metadata,\\\\\\\\n    ...metadata,\\\\\\\\n    id: id ?? metadata.id,\\\\\\\\n  },\\\\\\\\n  ...restParams,\\\\\\\\n});\\\\\\\\n\\\\\\\\nconst GithubViewConfigurator = ({ kanbanBoards, permissions, onSubmit }) => {\\\\\\\\n  const data = kanbanBoards ? Object.values(kanbanBoards)?.[0] : {};\\\\\\\\n\\\\\\\\n  if (!data) {\\\\\\\\n    return (\\\\\\\\n      <div class=\\\\\\\\\\\\\\\"alert alert-danger\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"alert\\\\\\\\\\\\\\\">\\\\\\\\n        Loading...\\\\\\\\n      </div>\\\\\\\\n    );\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const initialBoardState = Struct.typeMatch(data) ? toMigrated(data) : {};\\\\\\\\n\\\\\\\\n  const getColumnData = useCallback((state) => {\\\\\\\\n    if (Object.keys(state).length > 0) {\\\\\\\\n      return state?.columns ?? {};\\\\\\\\n    }\\\\\\\\n    return state;\\\\\\\\n  }, []);\\\\\\\\n\\\\\\\\n  const getNonColumnData = useCallback((state) => {\\\\\\\\n    if (Object.keys(state).length > 0) {\\\\\\\\n      delete state.columns;\\\\\\\\n      return state;\\\\\\\\n    }\\\\\\\\n    return state;\\\\\\\\n  }, []);\\\\\\\\n\\\\\\\\n  // to improve the state update speed, decoupled columns and other configuration metadata\\\\\\\\n  const [parentState, setParentState] = useState(initialBoardState);\\\\\\\\n  const [metadataState, setMetadata] = useState(\\\\\\\\n    getNonColumnData(initialBoardState)\\\\\\\\n  );\\\\\\\\n  const [showPreview, setPreview] = useState(false);\\\\\\\\n  const [columnsState, setColumnsState] = useState(\\\\\\\\n    getColumnData(initialBoardState)\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  const formUpdate =\\\\\\\\n    ({ path, via: customFieldUpdate, isColumnsUpdate, ...params }) =>\\\\\\\\n    (fieldInput) => {\\\\\\\\n      const transformFn = (node) => {\\\\\\\\n        if (typeof customFieldUpdate === \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\") {\\\\\\\\n          return customFieldUpdate({\\\\\\\\n            input: fieldInput?.target?.value ?? fieldInput,\\\\\\\\n            lastKnownValue: node,\\\\\\\\n            params,\\\\\\\\n          });\\\\\\\\n        } else {\\\\\\\\n          return Struct.defaultFieldUpdate({\\\\\\\\n            input: fieldInput?.target?.value ?? fieldInput,\\\\\\\\n            lastKnownValue: node,\\\\\\\\n            params,\\\\\\\\n          });\\\\\\\\n        }\\\\\\\\n      };\\\\\\\\n      const updatedValues = Struct.deepFieldUpdate(\\\\\\\\n        (isColumnsUpdate ? { columns: columnsState } : metadataState) ?? {},\\\\\\\\n        path,\\\\\\\\n        (node) => transformFn(node)\\\\\\\\n      );\\\\\\\\n      if (isColumnsUpdate) {\\\\\\\\n        setColumnsState(updatedValues?.columns);\\\\\\\\n      } else {\\\\\\\\n        setMetadata((prevFormState) => ({\\\\\\\\n          ...prevFormState,\\\\\\\\n          ...updatedValues,\\\\\\\\n        }));\\\\\\\\n      }\\\\\\\\n    };\\\\\\\\n\\\\\\\\n  const formReset = () => {\\\\\\\\n    setColumnsState(getColumnData(initialBoardState));\\\\\\\\n    setMetadata(getNonColumnData(initialBoardState));\\\\\\\\n    setParentState(initialBoardState);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const newViewInit = () => {\\\\\\\\n    setColumnsState(getColumnData(GithubKanbanBoardDefaults));\\\\\\\\n    setMetadata(getNonColumnData(GithubKanbanBoardDefaults));\\\\\\\\n    setParentState(GithubKanbanBoardDefaults);\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const columnsCreateNew = ({ lastKnownValue }) =>\\\\\\\\n    Object.keys(lastKnownValue).length < settings.maxColumnsNumber\\\\\\\\n      ? {\\\\\\\\n          ...(lastKnownValue ?? {}),\\\\\\\\n          ...withUUIDIndex({\\\\\\\\n            description: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n            labelSearchTerms: [],\\\\\\\\n            title: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n          }),\\\\\\\\n        }\\\\\\\\n      : lastKnownValue;\\\\\\\\n\\\\\\\\n  const columnsDeleteById =\\\\\\\\n    (id) =>\\\\\\\\n    ({ lastKnownValue }) =>\\\\\\\\n      Object.fromEntries(\\\\\\\\n        Object.entries(lastKnownValue).filter(([columnId]) => columnId !== id)\\\\\\\\n      );\\\\\\\\n\\\\\\\\n  const onCancel = () => {\\\\\\\\n    formReset();\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const updateParentState = () => {\\\\\\\\n    const updatedState = { ...metadataState, columns: columnsState };\\\\\\\\n    setParentState(updatedState);\\\\\\\\n    return updatedState;\\\\\\\\n  };\\\\\\\\n\\\\\\\\n  const onSave = () => onSubmit(updateParentState());\\\\\\\\n\\\\\\\\n  const formElement = (\\\\\\\\n    <>\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column\\\\\\\\\\\\\\\">\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-1 flex-column flex-xl-row\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`devhub.near/widget/devhub.components.molecule.Input`}\\\\\\\\n            props={{\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\",\\\\\\\\n              key: `${metadataState.metadata.id}-repoURL`,\\\\\\\\n              label: \\\\\\\\\\\\\\\"Repository URL\\\\\\\\\\\\\\\",\\\\\\\\n              onChange: formUpdate({\\\\\\\\n                path: [\\\\\\\\\\\\\\\"repoURL\\\\\\\\\\\\\\\"],\\\\\\\\n                isColumnsUpdate: false,\\\\\\\\n              }),\\\\\\\\n              placeholder: \\\\\\\\\\\\\\\"https://github.com/example-org/example-repo\\\\\\\\\\\\\\\",\\\\\\\\n              value: metadataState.repoURL,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`devhub.near/widget/devhub.components.molecule.Input`}\\\\\\\\n            props={{\\\\\\\\n              className: \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\",\\\\\\\\n              key: `${metadataState.metadata.id}-title`,\\\\\\\\n              label: \\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\",\\\\\\\\n              onChange: formUpdate({ path: [\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\"], isColumnsUpdate: false }),\\\\\\\\n              placeholder: \\\\\\\\\\\\\\\"NEAR Protocol NEPs\\\\\\\\\\\\\\\",\\\\\\\\n              value: metadataState.title,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n\\\\\\\\n        <Widget\\\\\\\\n          src={`devhub.near/widget/devhub.components.molecule.Input`}\\\\\\\\n          props={{\\\\\\\\n            className: \\\\\\\\\\\\\\\"w-100\\\\\\\\\\\\\\\",\\\\\\\\n            key: `${metadataState.metadata.id}-description`,\\\\\\\\n            label: \\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\",\\\\\\\\n            onChange: formUpdate({\\\\\\\\n              path: [\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n              isColumnsUpdate: false,\\\\\\\\n            }),\\\\\\\\n            placeholder: \\\\\\\\\\\\\\\"Latest NEAR Enhancement Proposals by status.\\\\\\\\\\\\\\\",\\\\\\\\n            value: metadataState.description,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex gap-4 flex-row flex-wrap justify-content-between\\\\\\\\\\\\\\\">\\\\\\\\n        <Widget\\\\\\\\n          src={`devhub.near/widget/devhub.components.organism.Configurator`}\\\\\\\\n          props={{\\\\\\\\n            heading: \\\\\\\\\\\\\\\"Ticket types\\\\\\\\\\\\\\\",\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"col-12 col-md-4 h-auto\\\\\\\\\\\\\\\" },\\\\\\\\n            externalState: metadataState.dataTypesIncluded,\\\\\\\\n            isActive: true,\\\\\\\\n            isEmbedded: true,\\\\\\\\n            isUnlocked: permissions.can_configure,\\\\\\\\n            onChange: formUpdate({\\\\\\\\n              path: [\\\\\\\\\\\\\\\"dataTypesIncluded\\\\\\\\\\\\\\\"],\\\\\\\\n              isColumnsUpdate: false,\\\\\\\\n            }),\\\\\\\\n            schema: GithubKanbanBoardTicketTypesSchema,\\\\\\\\n            hideSubmitBtn: true,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n\\\\\\\\n        <div\\\\\\\\n          className={[\\\\\\\\n            \\\\\\\\\\\\\\\"col-12 col-md-3\\\\\\\\\\\\\\\",\\\\\\\\n            \\\\\\\\\\\\\\\"d-flex gap-3 flex-column justify-content-center p-4\\\\\\\\\\\\\\\",\\\\\\\\n          ].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}\\\\\\\\n        >\\\\\\\\n          <span\\\\\\\\n            className=\\\\\\\\\\\\\\\"d-inline-flex gap-2\\\\\\\\\\\\\\\"\\\\\\\\n            id={`${metadataState.metadata.id}-ticketState`}\\\\\\\\n          >\\\\\\\\n            <i class=\\\\\\\\\\\\\\\"bi bi-cone-striped\\\\\\\\\\\\\\\" />\\\\\\\\n            <span>Ticket state</span>\\\\\\\\n          </span>\\\\\\\\n          <Widget\\\\\\\\n            src={`devhub.near/widget/devhub.components.molecule.Switch`}\\\\\\\\n            props={{\\\\\\\\n              currentValue: metadataState.ticketState,\\\\\\\\n              key: \\\\\\\\\\\\\\\"ticketState\\\\\\\\\\\\\\\",\\\\\\\\n              onChange: formUpdate({\\\\\\\\n                path: [\\\\\\\\\\\\\\\"ticketState\\\\\\\\\\\\\\\"],\\\\\\\\n                isColumnsUpdate: false,\\\\\\\\n              }),\\\\\\\\n              options: [\\\\\\\\n                { label: \\\\\\\\\\\\\\\"All\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\" },\\\\\\\\n                { label: \\\\\\\\\\\\\\\"Open\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"open\\\\\\\\\\\\\\\" },\\\\\\\\n                { label: \\\\\\\\\\\\\\\"Closed\\\\\\\\\\\\\\\", value: \\\\\\\\\\\\\\\"closed\\\\\\\\\\\\\\\" },\\\\\\\\n              ],\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n        <Widget\\\\\\\\n          src={`devhub.near/widget/devhub.components.organism.Configurator`}\\\\\\\\n          props={{\\\\\\\\n            heading: \\\\\\\\\\\\\\\"Card fields\\\\\\\\\\\\\\\",\\\\\\\\n            classNames: { root: \\\\\\\\\\\\\\\"col-12 col-md-4 h-auto\\\\\\\\\\\\\\\" },\\\\\\\\n            externalState: metadataState.metadata.ticket.features,\\\\\\\\n            isActive: true,\\\\\\\\n            isEmbedded: true,\\\\\\\\n            isUnlocked: permissions.can_configure,\\\\\\\\n            onChange: formUpdate({\\\\\\\\n              path: [\\\\\\\\\\\\\\\"metadata\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"ticket\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"features\\\\\\\\\\\\\\\"],\\\\\\\\n              isColumnsUpdate: false,\\\\\\\\n            }),\\\\\\\\n            schema: GithubKanbanBoardTicketFeaturesSchema,\\\\\\\\n            hideSubmitBtn: true,\\\\\\\\n          }}\\\\\\\\n        />\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-between mb-2\\\\\\\\\\\\\\\">\\\\\\\\n        <span className=\\\\\\\\\\\\\\\"d-inline-flex gap-2 m-0\\\\\\\\\\\\\\\">\\\\\\\\n          <i className=\\\\\\\\\\\\\\\"bi bi-list-task\\\\\\\\\\\\\\\" />\\\\\\\\n          <span>{`Columns ( max. ${settings.maxColumnsNumber} )`}</span>\\\\\\\\n        </span>\\\\\\\\n      </div>\\\\\\\\n\\\\\\\\n      <div className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n        {Object.values(columnsState ?? {}).map(\\\\\\\\n          ({ id, description, labelSearchTerms, title }, index) => (\\\\\\\\n            <AttractableDiv\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex gap-3 rounded-4 border p-3 w-100\\\\\\\\\\\\\\\"\\\\\\\\n              key={`column-${id}-configurator`}\\\\\\\\n            >\\\\\\\\n              <div className=\\\\\\\\\\\\\\\"d-flex flex-column gap-1 w-100\\\\\\\\\\\\\\\">\\\\\\\\n                <Widget\\\\\\\\n                  src={`devhub.near/widget/devhub.components.molecule.Input`}\\\\\\\\n                  props={{\\\\\\\\n                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                    key: `${metadataState.metadata.id}-column-${id}-title`,\\\\\\\\n                    label: \\\\\\\\\\\\\\\"Title\\\\\\\\\\\\\\\",\\\\\\\\n                    onChange: formUpdate({\\\\\\\\n                      path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\", id, \\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\"],\\\\\\\\n                      isColumnsUpdate: true,\\\\\\\\n                    }),\\\\\\\\n                    placeholder: \\\\\\\\\\\\\\\"\\\\\\\\u{1f440} Review\\\\\\\\\\\\\\\",\\\\\\\\n                    value: title,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                <Widget\\\\\\\\n                  src={`devhub.near/widget/devhub.components.molecule.Input`}\\\\\\\\n                  props={{\\\\\\\\n                    format: \\\\\\\\\\\\\\\"comma-separated\\\\\\\\\\\\\\\",\\\\\\\\n                    key: `${metadataState.metadata.id}-column-${title}-labelSearchTerms`,\\\\\\\\n                    label: `Search terms for all the labels\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tMUST be presented in included tickets`,\\\\\\\\n                    onChange: formUpdate({\\\\\\\\n                      path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\", id, \\\\\\\\\\\\\\\"labelSearchTerms\\\\\\\\\\\\\\\"],\\\\\\\\n                      isColumnsUpdate: true,\\\\\\\\n                    }),\\\\\\\\n                    placeholder: \\\\\\\\\\\\\\\"WG-, draft, review, proposal, ...\\\\\\\\\\\\\\\",\\\\\\\\n                    value: labelSearchTerms.join(\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"),\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n                <Widget\\\\\\\\n                  src={`devhub.near/widget/devhub.components.molecule.Input`}\\\\\\\\n                  props={{\\\\\\\\n                    className: \\\\\\\\\\\\\\\"flex-grow-1\\\\\\\\\\\\\\\",\\\\\\\\n                    key: `${metadataState.metadata.id}-column-${id}-description`,\\\\\\\\n                    label: \\\\\\\\\\\\\\\"Description\\\\\\\\\\\\\\\",\\\\\\\\n                    onChange: formUpdate({\\\\\\\\n                      path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\", id, \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\"],\\\\\\\\n                      isColumnsUpdate: true,\\\\\\\\n                    }),\\\\\\\\n                    placeholder:\\\\\\\\n                      \\\\\\\\\\\\\\\"NEPs that need a review by Subject Matter Experts.\\\\\\\\\\\\\\\",\\\\\\\\n                    value: description,\\\\\\\\n                  }}\\\\\\\\n                />\\\\\\\\n              </div>\\\\\\\\n\\\\\\\\n              <div\\\\\\\\n                className=\\\\\\\\\\\\\\\"d-flex flex-column gap-3 border-start p-3 pe-0\\\\\\\\\\\\\\\"\\\\\\\\n                style={{ marginTop: -16, marginBottom: -16 }}\\\\\\\\n              >\\\\\\\\n                <button\\\\\\\\n                  className=\\\\\\\\\\\\\\\"btn btn-outline-danger\\\\\\\\\\\\\\\"\\\\\\\\n                  onClick={formUpdate({\\\\\\\\n                    path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\"],\\\\\\\\n                    via: columnsDeleteById(id),\\\\\\\\n                    isColumnsUpdate: true,\\\\\\\\n                  })}\\\\\\\\n                  title=\\\\\\\\\\\\\\\"Delete column\\\\\\\\\\\\\\\"\\\\\\\\n                >\\\\\\\\n                  <i className=\\\\\\\\\\\\\\\"bi bi-trash-fill\\\\\\\\\\\\\\\" />\\\\\\\\n                </button>\\\\\\\\n              </div>\\\\\\\\n            </AttractableDiv>\\\\\\\\n          )\\\\\\\\n        )}\\\\\\\\n\\\\\\\\n        <div className=\\\\\\\\\\\\\\\"d-flex gap-3 justify-content-end w-100\\\\\\\\\\\\\\\">\\\\\\\\n          <Widget\\\\\\\\n            src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              classNames: {\\\\\\\\n                root: \\\\\\\\\\\\\\\"d-flex btn btn-outline-danger shadow-none border-0\\\\\\\\\\\\\\\",\\\\\\\\n              },\\\\\\\\n              isHidden: typeof onCancel !== \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\",\\\\\\\\n              label: \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onCancel,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n          <Widget\\\\\\\\n            src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n            props={{\\\\\\\\n              classNames: { root: \\\\\\\\\\\\\\\"btn btn-success\\\\\\\\\\\\\\\" },\\\\\\\\n              disabled: form.isSynced,\\\\\\\\n              icon: {\\\\\\\\n                type: \\\\\\\\\\\\\\\"svg_icon\\\\\\\\\\\\\\\",\\\\\\\\n                variant: \\\\\\\\\\\\\\\"floppy_drive\\\\\\\\\\\\\\\",\\\\\\\\n                width: 14,\\\\\\\\n                height: 14,\\\\\\\\n              },\\\\\\\\n              isHidden: typeof onSave !== \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\",\\\\\\\\n              label: \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\",\\\\\\\\n              onClick: onSave,\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      </div>\\\\\\\\n    </>\\\\\\\\n  );\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <div\\\\\\\\n      className=\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\"\\\\\\\\n      style={{ maxWidth: \\\\\\\\\\\\\\\"100%\\\\\\\\\\\\\\\" }}\\\\\\\\n    >\\\\\\\\n      <ul className=\\\\\\\\\\\\\\\"nav nav-tabs\\\\\\\\\\\\\\\" id=\\\\\\\\\\\\\\\"editPreviewTabs\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"tablist\\\\\\\\\\\\\\\">\\\\\\\\n        <li className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n          <button\\\\\\\\n            className={`nav-link ${!showPreview ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}`}\\\\\\\\n            id=\\\\\\\\\\\\\\\"edit-tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-target=\\\\\\\\\\\\\\\"#edit\\\\\\\\\\\\\\\"\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            aria-controls=\\\\\\\\\\\\\\\"edit\\\\\\\\\\\\\\\"\\\\\\\\n            aria-selected=\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => setPreview(false)}\\\\\\\\n          >\\\\\\\\n            Edit\\\\\\\\n          </button>\\\\\\\\n        </li>\\\\\\\\n        <li className=\\\\\\\\\\\\\\\"nav-item\\\\\\\\\\\\\\\" role=\\\\\\\\\\\\\\\"presentation\\\\\\\\\\\\\\\">\\\\\\\\n          <button\\\\\\\\n            className={`nav-link ${showPreview ? \\\\\\\\\\\\\\\"active\\\\\\\\\\\\\\\" : \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}`}\\\\\\\\n            id=\\\\\\\\\\\\\\\"preview-tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-toggle=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            data-bs-target=\\\\\\\\\\\\\\\"#preview\\\\\\\\\\\\\\\"\\\\\\\\n            type=\\\\\\\\\\\\\\\"button\\\\\\\\\\\\\\\"\\\\\\\\n            role=\\\\\\\\\\\\\\\"tab\\\\\\\\\\\\\\\"\\\\\\\\n            aria-controls=\\\\\\\\\\\\\\\"preview\\\\\\\\\\\\\\\"\\\\\\\\n            aria-selected=\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"\\\\\\\\n            onClick={() => {\\\\\\\\n              updateParentState();\\\\\\\\n              setPreview(true);\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            Preview\\\\\\\\n          </button>\\\\\\\\n        </li>\\\\\\\\n      </ul>\\\\\\\\n      {showPreview ? (\\\\\\\\n        <div>\\\\\\\\n          <Widget\\\\\\\\n            src={`devhub.near/widget/devhub.entity.addon.github.Viewer`}\\\\\\\\n            props={{\\\\\\\\n              kanbanBoards: {\\\\\\\\n                [parentState.metadata.id]: parentState,\\\\\\\\n              },\\\\\\\\n            }}\\\\\\\\n          />\\\\\\\\n        </div>\\\\\\\\n      ) : (\\\\\\\\n        <div className={[\\\\\\\\\\\\\\\"d-flex flex-column gap-4 w-100\\\\\\\\\\\\\\\"].join(\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\")}>\\\\\\\\n          <div className=\\\\\\\\\\\\\\\"d-flex align-items-center justify-content-between gap-3 w-100\\\\\\\\\\\\\\\">\\\\\\\\n            <h5 className=\\\\\\\\\\\\\\\"h5 d-inline-flex gap-2 m-0\\\\\\\\\\\\\\\">\\\\\\\\n              <i className=\\\\\\\\\\\\\\\"bi bi-gear-wide-connected\\\\\\\\\\\\\\\" />\\\\\\\\n              <span>GitHub board configuration</span>\\\\\\\\n            </h5>\\\\\\\\n          </div>\\\\\\\\n          {Object.keys(parentState).length > 0 && (\\\\\\\\n            <div>\\\\\\\\n              {formElement}\\\\\\\\n              <Widget\\\\\\\\n                src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                props={{\\\\\\\\n                  classNames: {\\\\\\\\n                    root: \\\\\\\\\\\\\\\"btn-sm btn-outline-secondary\\\\\\\\\\\\\\\",\\\\\\\\n                  },\\\\\\\\n                  label: \\\\\\\\\\\\\\\"New column\\\\\\\\\\\\\\\",\\\\\\\\n                  disabled:\\\\\\\\n                    parentState.columns &&\\\\\\\\n                    Object.keys(parentState.columns).length >=\\\\\\\\n                      settings.maxColumnsNumber,\\\\\\\\n                  icon: { type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\", variant: \\\\\\\\\\\\\\\"bi-plus-lg\\\\\\\\\\\\\\\" },\\\\\\\\n                  onClick: formUpdate({\\\\\\\\n                    path: [\\\\\\\\\\\\\\\"columns\\\\\\\\\\\\\\\"],\\\\\\\\n                    via: columnsCreateNew,\\\\\\\\n                    isColumnsUpdate: true,\\\\\\\\n                  }),\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n\\\\\\\\n          {!Object.keys(parentState).length && (\\\\\\\\n            <div\\\\\\\\n              className=\\\\\\\\\\\\\\\"d-flex flex-column align-items-center justify-content-center gap-4\\\\\\\\\\\\\\\"\\\\\\\\n              style={{ height: 384 }}\\\\\\\\n            >\\\\\\\\n              <h5 className=\\\\\\\\\\\\\\\"h5 d-inline-flex gap-2 m-0\\\\\\\\\\\\\\\">\\\\\\\\n                This community doesn\\\\\\\\\\\\'t have a GitHub board\\\\\\\\n              </h5>\\\\\\\\n              <Widget\\\\\\\\n                src={`devhub.near/widget/devhub.components.molecule.Button`}\\\\\\\\n                props={{\\\\\\\\n                  icon: { type: \\\\\\\\\\\\\\\"bootstrap_icon\\\\\\\\\\\\\\\", variant: \\\\\\\\\\\\\\\"bi-github\\\\\\\\\\\\\\\" },\\\\\\\\n                  isHidden: !permissions.can_configure,\\\\\\\\n                  label: \\\\\\\\\\\\\\\"Create GitHub board\\\\\\\\\\\\\\\",\\\\\\\\n                  onClick: newViewInit,\\\\\\\\n                }}\\\\\\\\n              />\\\\\\\\n            </div>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      )}\\\\\\\\n    </div>\\\\\\\\n  );\\\\\\\\n};\\\\\\\\n\\\\\\\\nreturn GithubViewConfigurator(props);\\\\\\\\n\"}}}}}"
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.1542649568539e+21
    }
  },
  {
    "id": "3255912338",
    "receipt_id": "5Zfs7MrLh6C1zswaDm7sin8ksztYRCucpajVAV7ysmvm",
    "predecessor_account_id": "system",
    "receiver_account_id": "devhub.near",
    "receipt_kind": "ACTION",
    "receipt_block": {
      "block_hash": "9k5ymuwLpXm8LaoWdmKsfjsSrMtHmPLR3mWdSLahP74",
      "block_height": 115376131,
      "block_timestamp": 1711288235535305000
    },
    "receipt_outcome": {
      "gas_burnt": 223182562500,
      "tokens_burnt": 0,
      "executor_account_id": "devhub.near",
      "status": true
    },
    "transaction_hash": "5qwByPA7qhdobKJSpqhormZdWijdxkqzUR4CeP7tUsPw",
    "included_in_block_hash": "FHXam3czuZYAj1XK4VhpZxdBfbWwyeVzPwhNnAbpsNvP",
    "block_timestamp": "1711288232828325217",
    "block": {
      "block_height": 115376129
    },
    "receipt_conversion_tokens_burnt": "258898203382200000000",
    "actions": [
      {
        "action": "TRANSFER",
        "method": null,
        "deposit": 1.8723490322743126e+23,
        "fee": 0,
        "args": null
      }
    ],
    "actions_agg": {
      "deposit": 0
    },
    "outcomes": {
      "status": true
    },
    "outcomes_agg": {
      "transaction_fee": 2.1542649568539e+21
    }
  }
]